1	C:\wlua_dump\path\Lotus\ScriptsPrepareDemoCinematics.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\ScriptsPrepareDemoCinematics.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  0A                 size of number (bytes)
0008  50                 integral (1=integral)
480
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
EE.Interface.Utilities
Lotus.Interface.LotusUtilities
DEMO_CINEMATIC
InFlight
OrokinIntro
RandomOrokinProblem
PrepareIntroCinematic
PreparePvpCinematic
IntroExitEarly
IntroCompleted
PrepareOutroCinematic
PrepareBossIntroCinematic
HideMelee
HideMeshAtBone
UnhideMeshAtBone
PrepareBossKillCinematic
PrepareArchwingCinematic
PrepareHubCinematic
PrepareInjectionCinematic
gRegion
postProcess
transitionFX
EMPTY_SYMBOL
viewShake
mShakeSpeed
transitionSound
math
pi
fade
saturation
radialBlurStrength
mShakeAmbient
blur
_T
gSafePlayers
gRegion
safe
duration
warned
gRegion
gTennoAvatarType
energyLoc
gFlashMgr
Graphics.EnableHybridShadowsForSmallObjects
gRegion

gMatchingService
Host name 
Num avatars = 
Tenno
isArchwingAnimated
archwingType
ArchwingA
table
HIDDEN_PLAYER_NAME
name
avatar
TennoB
TennoC
TennoD
TennoE
TennoF
TennoG
TennoH
ArchwingB
ArchwingC
ArchwingD
ArchwingE
ArchwingF
ArchwingG
ArchwingH
GrateB
PlayerLiset
doFadeIn
postProcess
fade
math
fadeTime
name
gRegion

gMatchingService
Host name 
Num avatars = 
Tenno
table
HIDDEN_PLAYER_NAME
name
avatar
TennoB
TennoC
TennoD
_T
winningCinematicPlayer
losingCinematicPlayer
name
gRegion
gRegion
gRegion
table
NotTenno
Tenno
showHiddenAvatarsPostCin
gRegion
ragdollType
gRegion
gGameRules
useBossPosition
cinematicFacePlayer
gRegion
bossAnimationName
Could not prepare cinematic for boss avatar
NOPE
boneName
ZERO_ROTATION
ZERO_VECTOR
boneName
ZERO_ROTATION
ZERO_VECTOR

gMatchingService
gRegion
Tenno
table
Marine
headType
GrineerHead
ragdollType
gRegion

gMatchingService
Host name 
Num avatars = 
gGameRules
hostTennoName
table
HIDDEN_PLAYER_NAME
name
avatar
player
TennoB
TennoC
TennoD
TennoE
TennoF
TennoG
TennoH
name
gGameRules
gLotusGameRulesType
lisetToHide
Hide
gRegion
Tenno
Other
Num avatars = 
table
PlayerLiset
_T
gHubOpenCinStarted
gRegion
Num avatars = 
Tenno
table
PlayerLiset
InjectionChair
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  0A                 maxstacksize (10)
                         * code:
0008  50                 sizecode (80)
0009  1D000000           [01] getglobal  0   0        ; 849075268
000D  59400000           [02] loadk      1   1        ; "EE.Interface.Utilities"
0011  22800001           [03] call       0   2   2  
0015  5D000000           [04] getglobal  1   0        ; 849075268
0019  99800000           [05] loadk      2   2        ; "Lotus.Interface.LotusUtilities"
001D  62800001           [06] call       1   2   2  
0021  9DC00000           [07] getglobal  2   3        ; -332969190
0025  D9000100           [08] loadk      3   4        ; "DEMO_CINEMATIC"
0029  A2800001           [09] call       2   2   2  
002D  DDC00000           [10] getglobal  3   3        ; -332969190
0031  19410100           [11] loadk      4   5        ; "InFlight"
0035  E2800001           [12] call       3   2   2  
0039  25010000           [13] closure    4   0      
003D  12000000           [14] move       0   0      
0041  65410000           [15] closure    5   1      
0045  A5810000           [16] closure    6   2      
0049  12000002           [17] move       0   4      
004D  A0810100           [18] setglobal  6   6        ; OrokinIntro
0051  A0C10100           [19] setglobal  6   7        ; -1575442186
0055  A5C10000           [20] closure    6   3      
0059  E5010100           [21] closure    7   4      
005D  12000003           [22] move       0   6      
0061  12000002           [23] move       0   4      
0065  E0010200           [24] setglobal  7   8        ; RandomOrokinProblem
0069  E0410200           [25] setglobal  7   9        ; -273957941
006D  E5410100           [26] closure    7   5      
0071  12008000           [27] move       0   1      
0075  12000001           [28] move       0   2      
0079  12008001           [29] move       0   3      
007D  E0810200           [30] setglobal  7   10       ; PrepareIntroCinematic
0081  E0C10200           [31] setglobal  7   11       ; 1261272809
0085  E5810100           [32] closure    7   6      
0089  12008000           [33] move       0   1      
008D  E0010300           [34] setglobal  7   12       ; PreparePvpCinematic
0091  E0410300           [35] setglobal  7   13       ; 895133044
0095  E5C10100           [36] closure    7   7      
0099  E0810300           [37] setglobal  7   14       ; IntroExitEarly
009D  E0C10300           [38] setglobal  7   15       ; 404850875
00A1  E5010200           [39] closure    7   8      
00A5  E0010400           [40] setglobal  7   16       ; IntroCompleted
00A9  E0410400           [41] setglobal  7   17       ; 918667533
00AD  E5410200           [42] closure    7   9      
00B1  E0810400           [43] setglobal  7   18       ; PrepareOutroCinematic
00B5  E0C10400           [44] setglobal  7   19       ; -2070478361
00B9  E5810200           [45] closure    7   10     
00BD  25C20200           [46] closure    8   11     
00C1  65020300           [47] closure    9   12     
00C5  12000004           [48] move       0   8      
00C9  60020500           [49] setglobal  9   20       ; PrepareBossIntroCinematic
00CD  60420500           [50] setglobal  9   21       ; 897920767
00D1  65420300           [51] closure    9   13     
00D5  12000004           [52] move       0   8      
00D9  60820500           [53] setglobal  9   22       ; HideMelee
00DD  60C20500           [54] setglobal  9   23       ; 1744102227
00E1  65820300           [55] closure    9   14     
00E5  60020600           [56] setglobal  9   24       ; HideMeshAtBone
00E9  60420600           [57] setglobal  9   25       ; 614129939
00ED  65C20300           [58] closure    9   15     
00F1  60820600           [59] setglobal  9   26       ; UnhideMeshAtBone
00F5  60C20600           [60] setglobal  9   27       ; 1628689232
00F9  65020400           [61] closure    9   16     
00FD  12008003           [62] move       0   7      
0101  60020700           [63] setglobal  9   28       ; PrepareBossKillCinematic
0105  60420700           [64] setglobal  9   29       ; -633149989
0109  65420400           [65] closure    9   17     
010D  12008000           [66] move       0   1      
0111  12000001           [67] move       0   2      
0115  60820700           [68] setglobal  9   30       ; PrepareArchwingCinematic
0119  60C20700           [69] setglobal  9   31       ; -805364138
011D  65820400           [70] closure    9   18     
0121  12000001           [71] move       0   2      
0125  12008001           [72] move       0   3      
0129  60020800           [73] setglobal  9   32       ; PrepareHubCinematic
012D  60420800           [74] setglobal  9   33       ; -1857368728
0131  65C20400           [75] closure    9   19     
0135  12000001           [76] move       0   2      
0139  12008001           [77] move       0   3      
013D  60820800           [78] setglobal  9   34       ; PrepareInjectionCinematic
0141  60C20800           [79] setglobal  9   35       ; 1976250920
0145  1E008000           [80] return     0   1      
                         * constants:
0149  24                 sizek (36)
014A  01                 const type 3
014B  44DC9B32           const [0]: (849075268)
014F  04                 const type 4
0150  17                 string size (23)
0151  45452E496E746572+  "EE.Inter"
0159  666163652E557469+  "face.Uti"
0161  6C697469657300     "lities\0"
                         const [1]: "EE.Interface.Utilities"
0168  04                 const type 4
0169  1F                 string size (31)
016A  4C6F7475732E496E+  "Lotus.In"
0172  746572666163652E+  "terface."
017A  4C6F747573557469+  "LotusUti"
0182  6C697469657300     "lities\0"
                         const [2]: "Lotus.Interface.LotusUtilities"
0189  01                 const type 3
018A  1A4B27EC           const [3]: (-332969190)
018E  04                 const type 4
018F  0F                 string size (15)
0190  44454D4F5F43494E+  "DEMO_CIN"
0198  454D4154494300     "EMATIC\0"
                         const [4]: "DEMO_CINEMATIC"
019F  04                 const type 4
01A0  09                 string size (9)
01A1  496E466C69676874+  "InFlight"
01A9  00                 "\0"
                         const [5]: "InFlight"
01AA  04                 const type 4
01AB  0C                 string size (12)
01AC  4F726F6B696E496E+  "OrokinIn"
01B4  74726F00           "tro\0"
                         const [6]: "OrokinIntro"
01B8  01                 const type 3
01B9  F6A818A2           const [7]: (-1575442186)
01BD  04                 const type 4
01BE  14                 string size (20)
01BF  52616E646F6D4F72+  "RandomOr"
01C7  6F6B696E50726F62+  "okinProb"
01CF  6C656D00           "lem\0"
                         const [8]: "RandomOrokinProblem"
01D3  01                 const type 3
01D4  CBBBABEF           const [9]: (-273957941)
01D8  04                 const type 4
01D9  16                 string size (22)
01DA  5072657061726549+  "PrepareI"
01E2  6E74726F43696E65+  "ntroCine"
01EA  6D6174696300       "matic\0"
                         const [10]: "PrepareIntroCinematic"
01F0  01                 const type 3
01F1  E97E2D4B           const [11]: (1261272809)
01F5  04                 const type 4
01F6  14                 string size (20)
01F7  5072657061726550+  "PrepareP"
01FF  767043696E656D61+  "vpCinema"
0207  74696300           "tic\0"
                         const [12]: "PreparePvpCinematic"
020B  01                 const type 3
020C  74A55A35           const [13]: (895133044)
0210  04                 const type 4
0211  0F                 string size (15)
0212  496E74726F457869+  "IntroExi"
021A  744561726C7900     "tEarly\0"
                         const [14]: "IntroExitEarly"
0221  01                 const type 3
0222  BB882118           const [15]: (404850875)
0226  04                 const type 4
0227  0F                 string size (15)
0228  496E74726F436F6D+  "IntroCom"
0230  706C6574656400     "pleted\0"
                         const [16]: "IntroCompleted"
0237  01                 const type 3
0238  0DC1C136           const [17]: (918667533)
023C  04                 const type 4
023D  16                 string size (22)
023E  507265706172654F+  "PrepareO"
0246  7574726F43696E65+  "utroCine"
024E  6D6174696300       "matic\0"
                         const [18]: "PrepareOutroCinematic"
0254  01                 const type 3
0255  E7019784           const [19]: (-2070478361)
0259  04                 const type 4
025A  1A                 string size (26)
025B  5072657061726542+  "PrepareB"
0263  6F7373496E74726F+  "ossIntro"
026B  43696E656D617469+  "Cinemati"
0273  6300               "c\0"
                         const [20]: "PrepareBossIntroCinematic"
0275  01                 const type 3
0276  FF2E8535           const [21]: (897920767)
027A  04                 const type 4
027B  0A                 string size (10)
027C  486964654D656C65+  "HideMele"
0284  6500               "e\0"
                         const [22]: "HideMelee"
0286  01                 const type 3
0287  53E3F467           const [23]: (1744102227)
028B  04                 const type 4
028C  0F                 string size (15)
028D  486964654D657368+  "HideMesh"
0295  4174426F6E6500     "AtBone\0"
                         const [24]: "HideMeshAtBone"
029C  01                 const type 3
029D  13E19A24           const [25]: (614129939)
02A1  04                 const type 4
02A2  11                 string size (17)
02A3  556E686964654D65+  "UnhideMe"
02AB  73684174426F6E65+  "shAtBone"
02B3  00                 "\0"
                         const [26]: "UnhideMeshAtBone"
02B4  01                 const type 3
02B5  50D31361           const [27]: (1628689232)
02B9  04                 const type 4
02BA  19                 string size (25)
02BB  5072657061726542+  "PrepareB"
02C3  6F73734B696C6C43+  "ossKillC"
02CB  696E656D61746963+  "inematic"
02D3  00                 "\0"
                         const [28]: "PrepareBossKillCinematic"
02D4  01                 const type 3
02D5  DBE542DA           const [29]: (-633149989)
02D9  04                 const type 4
02DA  19                 string size (25)
02DB  5072657061726541+  "PrepareA"
02E3  72636877696E6743+  "rchwingC"
02EB  696E656D61746963+  "inematic"
02F3  00                 "\0"
                         const [30]: "PrepareArchwingCinematic"
02F4  01                 const type 3
02F5  561EFFCF           const [31]: (-805364138)
02F9  04                 const type 4
02FA  14                 string size (20)
02FB  5072657061726548+  "PrepareH"
0303  756243696E656D61+  "ubCinema"
030B  74696300           "tic\0"
                         const [32]: "PrepareHubCinematic"
030F  01                 const type 3
0310  68CD4A91           const [33]: (-1857368728)
0314  04                 const type 4
0315  1A                 string size (26)
0316  5072657061726549+  "PrepareI"
031E  6E6A656374696F6E+  "njection"
0326  43696E656D617469+  "Cinemati"
032E  6300               "c\0"
                         const [34]: "PrepareInjectionCinematic"
0330  01                 const type 3
0331  2832CB75           const [35]: (1976250920)
                         * functions:
0335  14                 sizep (20)
                         
0336                     ** function [0] definition (level 2)
                         ** start of function **
0336  00                 string size (0)
                         source name: (none)
0337  1B                 line defined (27)
0338  3B                 last line defined (59)
0339  01                 nups (1)
033A  01                 numparams (1)
033B  00                 is_vararg (0)
033C  0B                 maxstacksize (11)
                         * code:
033D  41                 sizecode (65)
033E  5D000000           [01] getglobal  1   0        ; gRegion
0342  6440C000           [02] self       1   1   257  ; -1456226250
0346  62800001           [03] call       1   2   2  
034A  8E80C000           [04] gettable   2   1   258  ; "postProcess"
034E  DD000000           [05] getglobal  3   0        ; gRegion
0352  E4C0C001           [06] self       3   3   259  ; -138297819
0356  E2800001           [07] call       3   2   2  
035A  2401C101           [08] self       4   3   260  ; -1421644046
035E  9D410100           [09] getglobal  6   5        ; transitionFX
0362  DD810100           [10] getglobal  7   6        ; EMPTY_SYMBOL
0366  22810002           [11] call       4   4   2  
036A  4EC14101           [12] gettable   5   2   263  ; "viewShake"
036E  4E01C202           [13] gettable   5   5   264  ; "mShakeSpeed"
0372  93010000           [14] getupval   6   0      
0376  8E414203           [15] gettable   6   6   265  ; 630793108
037A  DD810200           [16] getglobal  7   10       ; transitionSound
037E  A2410001           [17] call       6   2   1  
0382  99C10200           [18] loadk      6   11       ; 0
0386  D9010300           [19] loadk      7   12       ; 0
fail op	21
038A  15800186           [20] concat     0   268 6  
038E  1A000980           [21] jmp        37           ; to [59]
0392  1D420300           [22] getglobal  8   13       ; math
0396  0E824304           [23] gettable   8   8   270  ; -113279800
039A  5D420300           [24] getglobal  9   13       ; math
039E  4EC2C304           [25] gettable   9   9   271  ; -1153493898
03A2  9D420300           [26] getglobal  10  13       ; math
03A6  8E024405           [27] gettable   10  10  272  ; "pi"
03AA  84820203           [28] mul        10  6   10 
03AE  84424405           [29] mul        10  10  273  ; 0
03B2  62020001           [30] call       9   2   0  
03B6  22820000           [31] call       8   0   2  
03BA  18000000           [32] test       0       0    ; to [34] if true
03BE  1A400080           [33] jmp        2            ; to [36]
fail op	0
03C2  40020003           [34] move       9   6      
03C6  8C400289           [35] settable   2   274 9    ; "fade"
03CA  8C008289           [36] settable   2   275 8    ; "saturation"
03CE  44424504           [37] mul        9   8   277  ; 0
03D2  8C40028A           [38] settable   2   276 9    ; "radialBlurStrength"
03D6  5D820500           [39] getglobal  9   22       ; 1289681407
03DA  62828000           [40] call       9   1   2  
03DE  CD418203           [41] sub        7   7   9  
03E2  4EC24101           [42] gettable   9   2   263  ; "viewShake"
03E6  84820104           [43] mul        10  8   6  
03EA  84024605           [44] mul        10  10  280  ; 0
03EE  4C82828B           [45] settable   9   279 10   ; "mShakeAmbient"
03F2  4EC24101           [46] gettable   9   2   263  ; "viewShake"
03F6  84028285           [47] mul        10  267 8    ; 0
03FA  84820105           [48] mul        10  10  6  
03FE  83828202           [49] add        10  5   10 
0402  4C820284           [50] settable   9   264 10   ; "mShakeSpeed"
0406  5D820500           [51] getglobal  9   22       ; 1289681407
040A  62828000           [52] call       9   1   2  
040E  4442C604           [53] mul        9   9   281  ; -61
0412  8D410203           [54] sub        6   6   9  
0416  5D820600           [55] getglobal  9   26       ; 538022378
041A  99020300           [56] loadk      10  12       ; 0
041E  62420001           [57] call       9   2   1  
0422  1A00F67F           [58] jmp        -39          ; to [20]
0426  8C004389           [59] settable   2   274 268  ; "fade" 0
042A  8C00438A           [60] settable   2   276 268  ; "radialBlurStrength" 0
042E  8C00C38D           [61] settable   2   283 268  ; "blur" 0
0432  8CC0C289           [62] settable   2   275 267  ; "saturation" 0
0436  4EC24101           [63] gettable   9   2   263  ; "viewShake"
043A  4C420184           [64] settable   9   264 5    ; "mShakeSpeed"
043E  1E008000           [65] return     0   1      
                         * constants:
0442  1C                 sizek (28)
0443  04                 const type 4
0444  08                 string size (8)
0445  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
044D  01                 const type 3
044E  36C033A9           const [1]: (-1456226250)
0452  04                 const type 4
0453  0C                 string size (12)
0454  706F737450726F63+  "postProc"
045C  65737300           "ess\0"
                         const [2]: "postProcess"
0460  01                 const type 3
0461  25BEC1F7           const [3]: (-138297819)
0465  01                 const type 3
0466  F26E43AB           const [4]: (-1421644046)
046A  04                 const type 4
046B  0D                 string size (13)
046C  7472616E73697469+  "transiti"
0474  6F6E465800         "onFX\0"
                         const [5]: "transitionFX"
0479  04                 const type 4
047A  0D                 string size (13)
047B  454D5054595F5359+  "EMPTY_SY"
0483  4D424F4C00         "MBOL\0"
                         const [6]: "EMPTY_SYMBOL"
0488  04                 const type 4
0489  0A                 string size (10)
048A  766965775368616B+  "viewShak"
0492  6500               "e\0"
                         const [7]: "viewShake"
0494  04                 const type 4
0495  0C                 string size (12)
0496  6D5368616B655370+  "mShakeSp"
049E  65656400           "eed\0"
                         const [8]: "mShakeSpeed"
04A2  01                 const type 3
04A3  94239925           const [9]: (630793108)
04A7  04                 const type 4
04A8  10                 string size (16)
04A9  7472616E73697469+  "transiti"
04B1  6F6E536F756E6400   "onSound\0"
                         const [10]: "transitionSound"
04B9  03                 const type 3
04BA  0000803F           const [11]: (0)
04BE  03                 const type 3
04BF  00000000           const [12]: (0)
04C3  04                 const type 4
04C4  05                 string size (5)
04C5  6D61746800         "math\0"
                         const [13]: "math"
04CA  01                 const type 3
04CB  C87C3FF9           const [14]: (-113279800)
04CF  01                 const type 3
04D0  76143FBB           const [15]: (-1153493898)
04D4  04                 const type 4
04D5  03                 string size (3)
04D6  706900             "pi\0"
                         const [16]: "pi"
04D9  03                 const type 3
04DA  00008040           const [17]: (0)
04DE  04                 const type 4
04DF  05                 string size (5)
04E0  6661646500         "fade\0"
                         const [18]: "fade"
04E5  04                 const type 4
04E6  0B                 string size (11)
04E7  7361747572617469+  "saturati"
04EF  6F6E00             "on\0"
                         const [19]: "saturation"
04F2  04                 const type 4
04F3  13                 string size (19)
04F4  72616469616C426C+  "radialBl"
04FC  7572537472656E67+  "urStreng"
0504  746800             "th\0"
                         const [20]: "radialBlurStrength"
0507  03                 const type 3
0508  00000040           const [21]: (0)
050C  01                 const type 3
050D  FFF9DE4C           const [22]: (1289681407)
0511  04                 const type 4
0512  0E                 string size (14)
0513  6D5368616B65416D+  "mShakeAm"
051B  6269656E7400       "bient\0"
                         const [23]: "mShakeAmbient"
0521  03                 const type 3
0522  00002041           const [24]: (0)
0526  03                 const type 3
0527  C3F5A83E           const [25]: (-61)
052B  01                 const type 3
052C  EA911120           const [26]: (538022378)
0530  04                 const type 4
0531  05                 string size (5)
0532  626C757200         "blur\0"
                         const [27]: "blur"
                         * functions:
0537  00                 sizep (0)
                         * lines:
0538  41                 sizelineinfo (65)
                         [pc] (line)
0539  1C                 [01] (28)
053A  00                 [02] (28)
053B  00                 [03] (28)
053C  00                 [04] (29)
053D  1C                 [05] (32)
053E  00                 [06] (32)
053F  00                 [07] (32)
0540  00                 [08] (33)
0541  1C                 [09] (33)
0542  00                 [10] (33)
0543  00                 [11] (33)
0544  00                 [12] (35)
0545  1D                 [13] (35)
0546  00                 [14] (37)
0547  00                 [15] (37)
0548  00                 [16] (37)
0549  20                 [17] (37)
054A  00                 [18] (38)
054B  00                 [19] (39)
054C  00                 [20] (40)
054D  20                 [21] (40)
054E  00                 [22] (41)
054F  00                 [23] (41)
0550  00                 [24] (41)
0551  20                 [25] (41)
0552  00                 [26] (41)
0553  00                 [27] (41)
0554  00                 [28] (41)
0555  21                 [29] (41)
0556  00                 [30] (41)
0557  00                 [31] (41)
0558  00                 [32] (42)
0559  21                 [33] (42)
055A  00                 [34] (43)
055B  00                 [35] (43)
055C  00                 [36] (45)
055D  21                 [37] (46)
055E  00                 [38] (46)
055F  00                 [39] (47)
0560  00                 [40] (47)
0561  21                 [41] (47)
0562  00                 [42] (48)
0563  00                 [43] (48)
0564  00                 [44] (48)
0565  23                 [45] (48)
0566  00                 [46] (49)
0567  00                 [47] (49)
0568  00                 [48] (49)
0569  23                 [49] (49)
056A  00                 [50] (49)
056B  00                 [51] (50)
056C  00                 [52] (50)
056D  25                 [53] (50)
056E  00                 [54] (50)
056F  00                 [55] (51)
0570  00                 [56] (51)
0571  25                 [57] (51)
0572  00                 [58] (51)
0573  00                 [59] (54)
0574  00                 [60] (55)
0575  25                 [61] (56)
0576  00                 [62] (57)
0577  00                 [63] (58)
0578  00                 [64] (58)
0579  25                 [65] (59)
                         * locals:
063D  00                 sizelocvars (0)
                         * upvalues:
063E  00                 sizeupvalues (0)
                         ** end of function **

                         
063F                     ** function [1] definition (level 2)
                         ** start of function **
063F  00                 string size (0)
                         source name: (none)
0640  3D                 line defined (61)
0641  4E                 last line defined (78)
0642  00                 nups (0)
0643  00                 numparams (0)
0644  00                 is_vararg (0)
0645  08                 maxstacksize (8)
                         * code:
0646  32                 sizecode (50)
0647  1D000000           [01] getglobal  0   0        ; 1074689893
064B  5D400000           [02] getglobal  1   1        ; _T
064F  4E80C000           [03] gettable   1   1   258  ; "gSafePlayers"
0653  22800001           [04] call       0   2   2  
0657  18000000           [05] test       0       0    ; to [7] if true
065B  1A800080           [06] jmp        3            ; to [10]
065F  1D400000           [07] getglobal  0   1        ; _T
0663  4B000000           [08] newtable   1   0   0    ; array=0, hash=0
0667  0C400081           [09] settable   0   258 1    ; "gSafePlayers"
066B  1DC00000           [10] getglobal  0   3        ; gRegion
066F  24004100           [11] self       0   0   260  ; -2071158816
0673  22800001           [12] call       0   2   2  
0677  59400100           [13] loadk      1   5        ; 0
067B  8A000000           [14] len        2   0      
067F  D9400100           [15] loadk      3   5        ; 0
0683  50C00780           [16] forprep    1   32       ; to [49]
0687  4E010100           [17] gettable   5   0   4  
068B  6481C102           [18] self       5   5   262  ; -564624675
068F  62810001           [19] call       5   2   2  
0693  64C1C102           [20] self       5   5   263  ; 1808941484
0697  62810001           [21] call       5   2   2  
069B  9D010000           [22] getglobal  6   0        ; 1074689893
069F  DD410000           [23] getglobal  7   1        ; _T
06A3  CE81C003           [24] gettable   7   7   258  ; "gSafePlayers"
06A7  CE418103           [25] gettable   7   7   5  
06AB  A2810001           [26] call       6   2   2  
06AF  98010000           [27] test       6       0    ; to [29] if true
06B3  1AC00180           [28] jmp        8            ; to [37]
06B7  9D410000           [29] getglobal  6   1        ; _T
06BB  8E814003           [30] gettable   6   6   258  ; "gSafePlayers"
06BF  CBC10000           [31] newtable   7   0   3    ; array=0, hash=3
06C3  CC414184           [32] settable   7   264 261  ; "safe" 0
06C7  CC81C284           [33] settable   7   265 266  ; "duration" 0
06CB  CC01C385           [34] settable   7   267 268  ; "warned" 1
06CF  8CC18102           [35] settable   6   5   7  
06D3  1AC00280           [36] jmp        12           ; to [49]
06D7  9D410000           [37] getglobal  6   1        ; _T
06DB  8E814003           [38] gettable   6   6   258  ; "gSafePlayers"
06DF  8E410103           [39] gettable   6   6   5  
06E3  8C414184           [40] settable   6   264 261  ; "safe" 0
06E7  9D410000           [41] getglobal  6   1        ; _T
06EB  8E814003           [42] gettable   6   6   258  ; "gSafePlayers"
06EF  8E410103           [43] gettable   6   6   5  
06F3  8C81C284           [44] settable   6   265 266  ; "duration" 0
06F7  9D410000           [45] getglobal  6   1        ; _T
06FB  8E814003           [46] gettable   6   6   258  ; "gSafePlayers"
06FF  8E410103           [47] gettable   6   6   5  
0703  8C01C385           [48] settable   6   267 268  ; "warned" 1
0707  5480F77F           [49] forloop    1   -33      ; to [17] if loop
070B  1E008000           [50] return     0   1      
                         * constants:
070F  0D                 sizek (13)
0710  01                 const type 3
0711  65770E40           const [0]: (1074689893)
0715  04                 const type 4
0716  03                 string size (3)
0717  5F5400             "_T\0"
                         const [1]: "_T"
071A  04                 const type 4
071B  0D                 string size (13)
071C  6753616665506C61+  "gSafePla"
0724  7965727300         "yers\0"
                         const [2]: "gSafePlayers"
0729  04                 const type 4
072A  08                 string size (8)
072B  67526567696F6E00   "gRegion\0"
                         const [3]: "gRegion"
0733  01                 const type 3
0734  E09F8C84           const [4]: (-2071158816)
0738  03                 const type 3
0739  0000803F           const [5]: (0)
073D  01                 const type 3
073E  DD8258DE           const [6]: (-564624675)
0742  01                 const type 3
0743  AC41D26B           const [7]: (1808941484)
0747  04                 const type 4
0748  05                 string size (5)
0749  7361666500         "safe\0"
                         const [8]: "safe"
074E  04                 const type 4
074F  09                 string size (9)
0750  6475726174696F6E+  "duration"
0758  00                 "\0"
                         const [9]: "duration"
0759  03                 const type 3
075A  00000000           const [10]: (0)
075E  04                 const type 4
075F  07                 string size (7)
0760  7761726E656400     "warned\0"
                         const [11]: "warned"
0767  01                 const type 3
0768  01000000           const [12]: (1)
                         * functions:
076C  00                 sizep (0)
                         * lines:
076D  32                 sizelineinfo (50)
                         [pc] (line)
076E  3E                 [01] (62)
076F  00                 [02] (62)
0770  00                 [03] (62)
0771  00                 [04] (62)
0772  3E                 [05] (62)
0773  00                 [06] (62)
0774  00                 [07] (63)
0775  00                 [08] (63)
0776  3E                 [09] (63)
0777  00                 [10] (66)
0778  00                 [11] (66)
0779  00                 [12] (66)
077A  3E                 [13] (68)
077B  00                 [14] (68)
077C  00                 [15] (68)
077D  00                 [16] (68)
077E  3E                 [17] (69)
077F  00                 [18] (69)
0780  00                 [19] (69)
0781  00                 [20] (69)
0782  3E                 [21] (69)
0783  00                 [22] (70)
0784  00                 [23] (70)
0785  00                 [24] (70)
0786  3F                 [25] (70)
0787  00                 [26] (70)
0788  00                 [27] (70)
0789  00                 [28] (70)
078A  3F                 [29] (71)
078B  00                 [30] (71)
078C  00                 [31] (71)
078D  00                 [32] (71)
078E  3F                 [33] (71)
078F  00                 [34] (71)
0790  00                 [35] (71)
0791  00                 [36] (71)
0792  42                 [37] (73)
0793  00                 [38] (73)
0794  00                 [39] (73)
0795  00                 [40] (73)
0796  42                 [41] (74)
0797  00                 [42] (74)
0798  00                 [43] (74)
0799  00                 [44] (74)
079A  42                 [45] (75)
079B  00                 [46] (75)
079C  00                 [47] (75)
079D  00                 [48] (75)
079E  44                 [49] (68)
079F  00                 [50] (78)
                         * locals:
0836  00                 sizelocvars (0)
                         * upvalues:
0837  00                 sizeupvalues (0)
                         ** end of function **

                         
0838                     ** function [2] definition (level 2)
                         ** start of function **
0838  00                 string size (0)
                         source name: (none)
0839  50                 line defined (80)
083A  52                 last line defined (82)
083B  01                 nups (1)
083C  00                 numparams (0)
083D  00                 is_vararg (0)
083E  02                 maxstacksize (2)
                         * code:
083F  04                 sizecode (4)
0840  13000000           [1] getupval   0   0      
0844  57008000           [2] loadbool   1   1   0    ; true
0848  22400001           [3] call       0   2   1  
084C  1E008000           [4] return     0   1      
                         * constants:
0850  00                 sizek (0)
                         * functions:
0851  00                 sizep (0)
                         * lines:
0852  04                 sizelineinfo (4)
                         [pc] (line)
0853  51                 [1] (81)
0854  00                 [2] (81)
0855  00                 [3] (81)
0856  00                 [4] (82)
                         * locals:
0863  00                 sizelocvars (0)
                         * upvalues:
0864  00                 sizeupvalues (0)
                         ** end of function **

                         
0865                     ** function [3] definition (level 2)
                         ** start of function **
0865  00                 string size (0)
                         source name: (none)
0866  54                 line defined (84)
0867  65                 last line defined (101)
0868  00                 nups (0)
0869  01                 numparams (1)
086A  00                 is_vararg (0)
086B  0D                 maxstacksize (13)
                         * code:
086C  2E                 sizecode (46)
086D  5D000000           [01] getglobal  1   0        ; gRegion
0871  6440C000           [02] self       1   1   257  ; -1520831144
0875  62800001           [03] call       1   2   2  
0879  58400000           [04] test       1       1    ; to [6] if false
087D  1A000080           [05] jmp        1            ; to [7]
0881  1E008000           [06] return     0   1      
0885  5D000000           [07] getglobal  1   0        ; gRegion
0889  6480C000           [08] self       1   1   258  ; 1224466847
088D  62800001           [09] call       1   2   2  
0891  99C00000           [10] loadk      2   3        ; 0
0895  CA008000           [11] len        3   1      
0899  19C10000           [12] loadk      4   3        ; 0
089D  90800780           [13] forprep    2   31       ; to [45]
08A1  8E418100           [14] gettable   6   1   5  
08A5  DD010100           [15] getglobal  7   4        ; 1074689893
08A9  12020003           [16] move       8   6      
08AD  E2810001           [17] call       7   2   2  
08B1  D8410000           [18] test       7       1    ; to [20] if false
08B5  1A000680           [19] jmp        25           ; to [45]
08B9  E4414103           [20] self       7   6   261  ; -2135866365
08BD  E2810001           [21] call       7   2   2  
08C1  1D020100           [22] getglobal  8   4        ; 1074689893
08C5  52028003           [23] move       9   7      
08C9  22820001           [24] call       8   2   2  
08CD  18420000           [25] test       8       1    ; to [27] if false
08D1  1A400480           [26] jmp        18           ; to [45]
08D5  2482C103           [27] self       8   7   262  ; -1957065004
08D9  9DC20100           [28] getglobal  10  7        ; gTennoAvatarType
08DD  22828001           [29] call       8   3   2  
08E1  18020000           [30] test       8       0    ; to [32] if true
08E5  1A000380           [31] jmp        13           ; to [45]
08E9  2402C203           [32] self       8   7   264  ; -1917464545
08ED  22820001           [33] call       8   2   2  
08F1  24424204           [34] self       8   8   265  ; 1769516121
08F5  22820001           [35] call       8   2   2  
08F9  64824204           [36] self       9   8   266  ; -338878752
08FD  D2020000           [37] move       11  0      
0901  62428001           [38] call       9   3   1  
0905  6402C203           [39] self       9   7   264  ; -1917464545
0909  62820001           [40] call       9   2   2  
090D  64C2C204           [41] self       9   9   267  ; 703289122
0911  DD020300           [42] getglobal  11  12       ; energyLoc
0915  12030000           [43] move       12  0      
0919  62420002           [44] call       9   4   1  
091D  94C0F77F           [45] forloop    2   -32      ; to [14] if loop
0921  1E008000           [46] return     0   1      
                         * constants:
0925  0D                 sizek (13)
0926  04                 const type 4
0927  08                 string size (8)
0928  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
0930  01                 const type 3
0931  58F559A5           const [1]: (-1520831144)
0935  01                 const type 3
0936  9FE1FB48           const [2]: (1224466847)
093A  03                 const type 3
093B  0000803F           const [3]: (0)
093F  01                 const type 3
0940  65770E40           const [4]: (1074689893)
0944  01                 const type 3
0945  0344B180           const [5]: (-2135866365)
0949  01                 const type 3
094A  D48E598B           const [6]: (-1957065004)
094E  04                 const type 4
094F  11                 string size (17)
0950  6754656E6E6F4176+  "gTennoAv"
0958  6174617254797065+  "atarType"
0960  00                 "\0"
                         const [7]: "gTennoAvatarType"
0961  01                 const type 3
0962  1FD0B58D           const [8]: (-1917464545)
0966  01                 const type 3
0967  59AC7869           const [9]: (1769516121)
096B  01                 const type 3
096C  E01ECDEB           const [10]: (-338878752)
0970  01                 const type 3
0971  2257EB29           const [11]: (703289122)
0975  04                 const type 4
0976  0A                 string size (10)
0977  656E657267794C6F+  "energyLo"
097F  6300               "c\0"
                         const [12]: "energyLoc"
                         * functions:
0981  00                 sizep (0)
                         * lines:
0982  2E                 sizelineinfo (46)
                         [pc] (line)
0983  55                 [01] (85)
0984  00                 [02] (85)
0985  00                 [03] (85)
0986  00                 [04] (85)
0987  55                 [05] (85)
0988  00                 [06] (86)
0989  00                 [07] (89)
098A  00                 [08] (89)
098B  55                 [09] (89)
098C  00                 [10] (90)
098D  00                 [11] (90)
098E  00                 [12] (90)
098F  55                 [13] (90)
0990  00                 [14] (91)
0991  00                 [15] (92)
0992  00                 [16] (92)
0993  55                 [17] (92)
0994  00                 [18] (92)
0995  00                 [19] (92)
0996  00                 [20] (93)
0997  56                 [21] (93)
0998  00                 [22] (94)
0999  00                 [23] (94)
099A  00                 [24] (94)
099B  59                 [25] (94)
099C  00                 [26] (94)
099D  00                 [27] (94)
099E  00                 [28] (94)
099F  59                 [29] (94)
09A0  00                 [30] (94)
09A1  00                 [31] (94)
09A2  00                 [32] (95)
09A3  59                 [33] (95)
09A4  00                 [34] (95)
09A5  00                 [35] (95)
09A6  00                 [36] (96)
09A7  5A                 [37] (96)
09A8  00                 [38] (96)
09A9  00                 [39] (97)
09AA  00                 [40] (97)
09AB  5A                 [41] (97)
09AC  00                 [42] (97)
09AD  00                 [43] (97)
09AE  00                 [44] (97)
09AF  5A                 [45] (90)
09B0  00                 [46] (101)
                         * locals:
0A3B  00                 sizelocvars (0)
                         * upvalues:
0A3C  00                 sizeupvalues (0)
                         ** end of function **

                         
0A3D                     ** function [4] definition (level 2)
                         ** start of function **
0A3D  00                 string size (0)
                         source name: (none)
0A3E  67                 line defined (103)
0A3F  6E                 last line defined (110)
0A40  02                 nups (2)
0A41  00                 numparams (0)
0A42  00                 is_vararg (0)
0A43  02                 maxstacksize (2)
                         * code:
0A44  0E                 sizecode (14)
0A45  13000000           [01] getupval   0   0      
0A49  59000000           [02] loadk      1   0        ; 0
0A4D  22400001           [03] call       0   2   1  
0A51  1D400000           [04] getglobal  0   1        ; 538022378
0A55  59800000           [05] loadk      1   2        ; 0
0A59  22400001           [06] call       0   2   1  
0A5D  13000000           [07] getupval   0   0      
0A61  59C00000           [08] loadk      1   3        ; 0
0A65  22400001           [09] call       0   2   1  
0A69  13008000           [10] getupval   0   1      
0A6D  57000000           [11] loadbool   1   0   0    ; false
0A71  22400001           [12] call       0   2   1  
0A75  1A40FD7F           [13] jmp        -10          ; to [4]
0A79  1E008000           [14] return     0   1      
                         * constants:
0A7D  04                 sizek (4)
0A7E  03                 const type 3
0A7F  0000C842           const [0]: (0)
0A83  01                 const type 3
0A84  EA911120           const [1]: (538022378)
0A88  03                 const type 3
0A89  0000F041           const [2]: (0)
0A8D  03                 const type 3
0A8E  0000C841           const [3]: (0)
                         * functions:
0A92  00                 sizep (0)
                         * lines:
0A93  0E                 sizelineinfo (14)
                         [pc] (line)
0A94  68                 [01] (104)
0A95  00                 [02] (104)
0A96  00                 [03] (104)
0A97  00                 [04] (106)
0A98  68                 [05] (106)
0A99  00                 [06] (106)
0A9A  00                 [07] (107)
0A9B  00                 [08] (107)
0A9C  68                 [09] (107)
0A9D  00                 [10] (108)
0A9E  00                 [11] (108)
0A9F  00                 [12] (108)
0AA0  6A                 [13] (108)
0AA1  00                 [14] (110)
                         * locals:
0ACC  00                 sizelocvars (0)
                         * upvalues:
0ACD  00                 sizeupvalues (0)
                         ** end of function **

                         
0ACE                     ** function [5] definition (level 2)
                         ** start of function **
0ACE  00                 string size (0)
                         source name: (none)
0ACF  70                 line defined (112)
0AD0  AD                 last line defined (301)
0AD1  02                 nups (3)
0AD2  03                 numparams (1)
0AD3  01                 is_vararg (0)
0AD4  00                 maxstacksize (63)
                         * code:
0AD7  03                 sizecode (500)
0AD8  4B000000           [001] newtable   1   0   0    ; array=0, hash=0
0ADC  8B000000           [002] newtable   2   0   0    ; array=0, hash=0
0AE0  CB000000           [003] newtable   3   0   0    ; array=0, hash=0
0AE4  06010002           [004] loadnil    4   4      
0AE8  5D010000           [005] getglobal  5   0        ; 1074689893
0AEC  9D410000           [006] getglobal  6   1        ; gFlashMgr
0AF0  62810001           [007] call       5   2   2  
0AF4  58410000           [008] test       5       1    ; to [10] if false
0AF8  1A000180           [009] jmp        5            ; to [15]
0AFC  5D410000           [010] getglobal  5   1        ; gFlashMgr
0B00  6481C002           [011] self       5   5   258  ; -1888500610
0B04  D9C10000           [012] loadk      7   3        ; "Graphics.EnableHybridShadowsForSmallObjects"
0B08  17028000           [013] loadbool   8   1   0    ; true
0B0C  62410002           [014] call       5   4   1  
0B10  5D010100           [015] getglobal  5   4        ; gRegion
0B14  6441C102           [016] self       5   5   261  ; -2071158816
0B18  62810001           [017] call       5   2   2  
0B1C  9D010100           [018] getglobal  6   4        ; gRegion
0B20  A4814103           [019] self       6   6   262  ; 1224466847
0B24  A2810001           [020] call       6   2   2  
0B28  D9C10100           [021] loadk      7   7        ; ""
0B2C  1D020200           [022] getglobal  8   8        ; gMatchingService
0B30  24424204           [023] self       8   8   265  ; -706726330
0B34  22820001           [024] call       8   2   2  
0B38  5D020000           [025] getglobal  9   0        ; 1074689893
0B3C  92020004           [026] move       10  8      
0B40  62820001           [027] call       9   2   2  
0B44  58420000           [028] test       9       1    ; to [30] if false
0B48  1AC00080           [029] jmp        4            ; to [34]
0B4C  64824204           [030] self       9   8   266  ; 2122390761
0B50  62820001           [031] call       9   2   2  
0B54  D2018004           [032] move       7   9      
0B58  1A000280           [033] jmp        9            ; to [43]
0B5C  4A028002           [034] len        9   5      
fail op	21
0B60  15408285           [035] concat     0   267 9  
0B64  1A400180           [036] jmp        6            ; to [43]
0B68  4E02C302           [037] gettable   9   5   268  ; 0
0B6C  6442C304           [038] self       9   9   269  ; -564624675
0B70  62820001           [039] call       9   2   2  
0B74  6482C304           [040] self       9   9   270  ; 340404473
0B78  62820001           [041] call       9   2   2  
0B7C  D2018004           [042] move       7   9      
0B80  5DC20300           [043] getglobal  9   15       ; -1817107093
0B84  99020400           [044] loadk      10  16       ; "Host name "
0B88  D2028003           [045] move       11  7      
0B8C  82C20205           [046] concat     10  10  11 
0B90  62420001           [047] call       9   2   1  
0B94  5D020000           [048] getglobal  9   0        ; 1074689893
0B98  92028002           [049] move       10  5      
0B9C  62820001           [050] call       9   2   2  
0BA0  58420000           [051] test       9       1    ; to [53] if false
0BA4  1A401780           [052] jmp        94           ; to [147]
0BA8  4A028002           [053] len        9   5      
fail op	21
0BAC  15408285           [054] concat     0   267 9  
0BB0  1A801680           [055] jmp        91           ; to [147]
0BB4  5DC20300           [056] getglobal  9   15       ; -1817107093
0BB8  99420400           [057] loadk      10  17       ; "Num avatars = "
0BBC  DD820400           [058] getglobal  11  18       ; -1615931716
0BC0  0A038002           [059] len        12  5      
0BC4  E2820001           [060] call       11  2   2  
0BC8  82C20205           [061] concat     10  10  11 
0BCC  62420001           [062] call       9   2   1  
0BD0  59020300           [063] loadk      9   12       ; 0
0BD4  8A028002           [064] len        10  5      
0BD8  D9020300           [065] loadk      11  12       ; 0
0BDC  50821380           [066] forprep    9   79       ; to [146]
0BE0  4E038302           [067] gettable   13  5   12 
0BE4  8E030303           [068] gettable   14  6   12 
0BE8  E4834307           [069] self       15  14  270  ; 340404473
0BEC  E2830001           [070] call       15  2   2  
fail op	35
0BF0  23C08107           [071] close      0  
0BF4  1A000780           [072] jmp        29           ; to [102]
0BF8  0E048302           [073] gettable   16  5   12 
0BFC  24C44408           [074] self       16  16  275  ; 1032339126
0C00  9D040500           [075] getglobal  18  20       ; -332969190
0C04  D9440500           [076] loadk      19  21       ; "Tenno"
0C08  A2040001           [077] call       18  2   0  
0C0C  22440000           [078] call       16  0   1  
0C10  1D840500           [079] getglobal  16  22       ; isArchwingAnimated
0C14  18040000           [080] test       16      0    ; to [82] if true
0C18  1A400380           [081] jmp        14           ; to [96]
0C1C  24C4C506           [082] self       16  13  279  ; -1625438872
0C20  9D040600           [083] getglobal  18  24       ; archwingType
0C24  22848001           [084] call       16  3   2  
0C28  12010008           [085] move       4   16     
0C2C  1D040000           [086] getglobal  16  0        ; 1074689893
0C30  52040002           [087] move       17  4      
0C34  22840001           [088] call       16  2   2  
0C38  18440000           [089] test       16      1    ; to [91] if false
0C3C  1A000180           [090] jmp        5            ; to [96]
0C40  24C44402           [091] self       16  4   275  ; 1032339126
0C44  9D040500           [092] getglobal  18  20       ; -332969190
0C48  D9440600           [093] loadk      19  25       ; "ArchwingA"
0C4C  A2040001           [094] call       18  2   0  
0C50  22440000           [095] call       16  0   1  
0C54  1D840600           [096] getglobal  16  26       ; table
0C58  0EC44608           [097] gettable   16  16  283  ; -431682403
0C5C  52040001           [098] move       17  2      
0C60  92048006           [099] move       18  13     
0C64  22448001           [100] call       16  3   1  
0C68  1A800280           [101] jmp        11           ; to [113]
0C6C  13040000           [102] getupval   16  0      
0C70  0E044708           [103] gettable   16  16  284  ; "HIDDEN_PLAYER_NAME"
fail op	35
0C74  63008407           [104] close      1  
0C78  1A800180           [105] jmp        7            ; to [113]
0C7C  1D840600           [106] getglobal  16  26       ; table
0C80  0EC44608           [107] gettable   16  16  283  ; -431682403
0C84  52048000           [108] move       17  1      
0C88  8B840000           [109] newtable   18  0   2    ; array=0, hash=2
0C8C  8CC4838E           [110] settable   18  285 15   ; "name"
0C90  8C44038F           [111] settable   18  286 13   ; "avatar"
0C94  22448001           [112] call       16  3   1  
0C98  24C44707           [113] self       16  14  287  ; 51109503
0C9C  22840001           [114] call       16  2   2  
0CA0  24044808           [115] self       16  16  288  ; -211549079
0CA4  22840001           [116] call       16  2   2  
0CA8  18040000           [117] test       16      0    ; to [119] if true
0CAC  1A800680           [118] jmp        27           ; to [146]
0CB0  2444C806           [119] self       16  13  289  ; -1917464545
0CB4  22840001           [120] call       16  2   2  
0CB8  24844808           [121] self       16  16  290  ; 819640984
0CBC  22840001           [122] call       16  2   2  
0CC0  5D040000           [123] getglobal  17  0        ; 1074689893
0CC4  92040008           [124] move       18  16     
0CC8  62840001           [125] call       17  2   2  
0CCC  58440000           [126] test       17      1    ; to [128] if false
0CD0  1A400480           [127] jmp        18           ; to [146]
0CD4  64C44808           [128] self       17  16  291  ; -333955620
0CD8  E444C806           [129] self       19  13  289  ; -1917464545
0CDC  E2840001           [130] call       19  2   2  
0CE0  E404C909           [131] self       19  19  292  ; 86638152
0CE4  E2040001           [132] call       19  2   0  
0CE8  62440000           [133] call       17  0   1  
0CEC  5D040000           [134] getglobal  17  0        ; 1074689893
0CF0  A4444908           [135] self       18  16  293  ; -1411785325
0CF4  A2040001           [136] call       18  2   0  
0CF8  62840000           [137] call       17  0   2  
0CFC  58440000           [138] test       17      1    ; to [140] if false
0D00  1A400180           [139] jmp        6            ; to [146]
0D04  64444908           [140] self       17  16  293  ; -1411785325
0D08  62840001           [141] call       17  2   2  
0D0C  6484C908           [142] self       17  17  294  ; 1038470555
0D10  D7048000           [143] loadbool   19  1   0    ; true
0D14  13058000           [144] getupval   20  1      
0D18  62440002           [145] call       17  4   1  
0D1C  54C2EB7F           [146] forloop    9   -80      ; to [67] if loop
0D20  4B040003           [147] newtable   17  6   0    ; array=6, hash=0
0D24  9D040500           [148] getglobal  18  20       ; -332969190
0D28  D9C40900           [149] loadk      19  39       ; "TennoB"
0D2C  A2840001           [150] call       18  2   2  
0D30  DD040500           [151] getglobal  19  20       ; -332969190
0D34  19050A00           [152] loadk      20  40       ; "TennoC"
0D38  E2840001           [153] call       19  2   2  
0D3C  1D050500           [154] getglobal  20  20       ; -332969190
0D40  59450A00           [155] loadk      21  41       ; "TennoD"
0D44  22850001           [156] call       20  2   2  
0D48  5D050500           [157] getglobal  21  20       ; -332969190
0D4C  99850A00           [158] loadk      22  42       ; "TennoE"
0D50  62850001           [159] call       21  2   2  
0D54  9D050500           [160] getglobal  22  20       ; -332969190
0D58  D9C50A00           [161] loadk      23  43       ; "TennoF"
0D5C  A2850001           [162] call       22  2   2  
0D60  DD050500           [163] getglobal  23  20       ; -332969190
0D64  19060B00           [164] loadk      24  44       ; "TennoG"
0D68  E2850001           [165] call       23  2   2  
0D6C  1D060500           [166] getglobal  24  20       ; -332969190
0D70  59460B00           [167] loadk      25  45       ; "TennoH"
0D74  22060001           [168] call       24  2   0  
0D78  5B440000           [169] setlist    17  0   1    ; index 1 to top
0D7C  9D840500           [170] getglobal  18  22       ; isArchwingAnimated
0D80  98040000           [171] test       18      0    ; to [173] if true
0D84  1AC00580           [172] jmp        24           ; to [197]
0D88  8B040003           [173] newtable   18  6   0    ; array=6, hash=0
0D8C  DD040500           [174] getglobal  19  20       ; -332969190
0D90  19850B00           [175] loadk      20  46       ; "ArchwingB"
0D94  E2840001           [176] call       19  2   2  
0D98  1D050500           [177] getglobal  20  20       ; -332969190
0D9C  59C50B00           [178] loadk      21  47       ; "ArchwingC"
0DA0  22850001           [179] call       20  2   2  
0DA4  5D050500           [180] getglobal  21  20       ; -332969190
0DA8  99050C00           [181] loadk      22  48       ; "ArchwingD"
0DAC  62850001           [182] call       21  2   2  
0DB0  9D050500           [183] getglobal  22  20       ; -332969190
0DB4  D9450C00           [184] loadk      23  49       ; "ArchwingE"
0DB8  A2850001           [185] call       22  2   2  
0DBC  DD050500           [186] getglobal  23  20       ; -332969190
0DC0  19860C00           [187] loadk      24  50       ; "ArchwingF"
0DC4  E2850001           [188] call       23  2   2  
0DC8  1D060500           [189] getglobal  24  20       ; -332969190
0DCC  59C60C00           [190] loadk      25  51       ; "ArchwingG"
0DD0  22860001           [191] call       24  2   2  
0DD4  5D060500           [192] getglobal  25  20       ; -332969190
0DD8  99060D00           [193] loadk      26  52       ; "ArchwingH"
0DDC  62060001           [194] call       25  2   0  
0DE0  9B440000           [195] setlist    18  0   1    ; index 1 to top
0DE4  D2000009           [196] move       3   18     
0DE8  99040300           [197] loadk      18  12       ; 0
0DEC  DD840600           [198] getglobal  19  26       ; table
0DF0  CE44CD09           [199] gettable   19  19  309  ; -1513783280
0DF4  12058000           [200] move       20  1      
0DF8  65050000           [201] closure    21  0      
0DFC  E2448001           [202] call       19  3   1  
0E00  CA048008           [203] len        19  17     
0E04  0A058000           [204] len        20  1      
fail op	21
0E08  15008509           [205] concat     0   19  20 
0E0C  1A000080           [206] jmp        1            ; to [208]
0E10  12058009           [207] move       20  19     
0E14  4A050001           [208] len        21  2      
fail op	21
0E18  55408585           [209] concat     1   267 21 
0E1C  1A000080           [210] jmp        1            ; to [212]
0E20  57450000           [211] loadbool   21  0   1    ; false, to [213]
0E24  57058000           [212] loadbool   21  1   0    ; true
0E28  58450000           [213] test       21      1    ; to [215] if false
0E2C  1AC00380           [214] jmp        16           ; to [231]
0E30  9D850600           [215] getglobal  22  26       ; table
0E34  8EC5460B           [216] gettable   22  22  283  ; -431682403
0E38  D2058008           [217] move       23  17     
0E3C  19060300           [218] loadk      24  12       ; 0
0E40  5D060500           [219] getglobal  25  20       ; -332969190
0E44  99460500           [220] loadk      26  21       ; "Tenno"
0E48  62060001           [221] call       25  2   0  
0E4C  A2450000           [222] call       22  0   1  
0E50  9D850600           [223] getglobal  22  26       ; table
0E54  8EC5460B           [224] gettable   22  22  283  ; -431682403
0E58  D2058001           [225] move       23  3      
0E5C  19060300           [226] loadk      24  12       ; 0
0E60  5D060500           [227] getglobal  25  20       ; -332969190
0E64  99460600           [228] loadk      26  25       ; "ArchwingA"
0E68  62060001           [229] call       25  2   0  
0E6C  A2450000           [230] call       22  0   1  
0E70  99050300           [231] loadk      22  12       ; 0
0E74  D205000A           [232] move       23  20     
0E78  19060300           [233] loadk      24  12       ; 0
0E7C  90850680           [234] forprep    22  27       ; to [262]
0E80  8E468600           [235] gettable   26  1   25 
0E84  CE86470D           [236] gettable   27  26  286  ; "avatar"
0E88  E4C6C40D           [237] self       27  27  275  ; 1032339126
0E8C  4E878408           [238] gettable   29  17  18 
0E90  E2468001           [239] call       27  3   1  
0E94  DD860500           [240] getglobal  27  22       ; isArchwingAnimated
0E98  D8060000           [241] test       27      0    ; to [243] if true
0E9C  1A000380           [242] jmp        13           ; to [256]
0EA0  CE86470D           [243] gettable   27  26  286  ; "avatar"
0EA4  E4C6C50D           [244] self       27  27  279  ; -1625438872
0EA8  5D070600           [245] getglobal  29  24       ; archwingType
0EAC  E2868001           [246] call       27  3   2  
0EB0  1201800D           [247] move       4   27     
0EB4  DD060000           [248] getglobal  27  0        ; 1074689893
0EB8  12070002           [249] move       28  4      
0EBC  E2860001           [250] call       27  2   2  
0EC0  D8460000           [251] test       27      1    ; to [253] if false
0EC4  1A800080           [252] jmp        3            ; to [256]
0EC8  E4C64402           [253] self       27  4   275  ; 1032339126
0ECC  4E878401           [254] gettable   29  3   18 
0ED0  E2468001           [255] call       27  3   1  
0ED4  DD860600           [256] getglobal  27  26       ; table
0ED8  CEC6C60D           [257] gettable   27  27  283  ; -431682403
0EDC  12070001           [258] move       28  2      
0EE0  4E87470D           [259] gettable   29  26  286  ; "avatar"
0EE4  E2468001           [260] call       27  3   1  
0EE8  83044309           [261] add        18  18  268  ; 0
0EEC  94C5F87F           [262] forloop    22  -28      ; to [235] if loop
0EF0  CA068000           [263] len        27  1      
fail op	35
0EF4  23C0C20D           [264] close      0  
0EF8  1A000480           [265] jmp        17           ; to [283]
0EFC  DD860D00           [266] getglobal  27  54       ; 1672515847
0F00  1D070100           [267] getglobal  28  4        ; gRegion
0F04  24C74D0E           [268] self       28  28  311  ; -1807679308
0F08  9D070500           [269] getglobal  30  20       ; -332969190
0F0C  D9070E00           [270] loadk      31  56       ; "GrateB"
0F10  A2070001           [271] call       30  2   0  
0F14  22070000           [272] call       28  0   0  
0F18  E2060100           [273] call       27  0   4  
0F1C  1A400180           [274] jmp        6            ; to [281]
0F20  2448CE0F           [275] self       32  31  313  ; 2109594123
0F24  97080000           [276] loadbool   34  0   0    ; false
0F28  D7088000           [277] loadbool   35  1   0    ; true
0F2C  22480002           [278] call       32  4   1  
0F30  2488CE0F           [279] self       32  31  314  ; -725453761
0F34  22480001           [280] call       32  2   1  
0F38  D6860000           [281] tforloop   27      2    ; to [283] if exit
0F3C  1AC0FD7F           [282] jmp        -8           ; to [275]
0F40  1D080100           [283] getglobal  32  4        ; gRegion
0F44  24C84E10           [284] self       32  32  315  ; -1485896174
0F48  9D080500           [285] getglobal  34  20       ; -332969190
0F4C  D9080F00           [286] loadk      35  60       ; "PlayerLiset"
0F50  A2080001           [287] call       34  2   0  
0F54  22880000           [288] call       32  0   2  
0F58  46088010           [289] loadnil    33  33     
0F5C  8A080010           [290] len        34  32     
fail op	21
0F60  15808885           [291] concat     0   267 34 
0F64  1A000080           [292] jmp        1            ; to [294]
0F68  4E084310           [293] gettable   33  32  268  ; 0
0F6C  A4484F00           [294] self       34  0   317  ; -578871469
0F70  A2880001           [295] call       34  2   2  
0F74  A4884F11           [296] self       34  34  318  ; -1456226250
0F78  A2880001           [297] call       34  2   2  
0F7C  D9080300           [298] loadk      35  12       ; 0
0F80  1DC90F00           [299] getglobal  36  63       ; doFadeIn
0F84  18090000           [300] test       36      0    ; to [302] if true
0F88  1A400080           [301] jmp        2            ; to [304]
0F8C  0E095011           [302] gettable   36  34  320  ; "postProcess"
0F90  0CC988A0           [303] settable   36  321 35   ; "fade"
0F94  24895000           [304] self       36  0   322  ; 1438910546
0F98  22890001           [305] call       36  2   2  
0F9C  18490000           [306] test       36      1    ; to [308] if false
0FA0  1AC00080           [307] jmp        4            ; to [312]
0FA4  24C95000           [308] self       36  0   323  ; -959935117
0FA8  22890001           [309] call       36  2   2  
fail op	9
0FAC  09090012           [310] settable   36  36  0  
0FB0  1A400080           [311] jmp        2            ; to [314]
0FB4  17490000           [312] loadbool   36  0   1    ; false, to [314]
0FB8  17098000           [313] loadbool   36  1   0    ; true
fail op	9
0FBC  49090012           [314] settable   37  36  0  
0FC0  18490000           [315] test       36      1    ; to [317] if false
0FC4  1A400080           [316] jmp        2            ; to [319]
0FC8  58090000           [317] test       37      0    ; to [319] if true
0FCC  1A001480           [318] jmp        81           ; to [400]
0FD0  18090000           [319] test       36      0    ; to [321] if true
0FD4  1A400280           [320] jmp        10           ; to [331]
0FD8  A4895000           [321] self       38  0   322  ; 1438910546
0FDC  A2890001           [322] call       38  2   2  
0FE0  98490000           [323] test       38      1    ; to [325] if false
0FE4  1AC00080           [324] jmp        4            ; to [329]
0FE8  A4C95000           [325] self       38  0   323  ; -959935117
0FEC  A2890001           [326] call       38  2   2  
fail op	9
0FF0  09090013           [327] settable   36  38  0  
0FF4  1A400080           [328] jmp        2            ; to [331]
0FF8  17490000           [329] loadbool   36  0   1    ; false, to [331]
0FFC  17098000           [330] loadbool   36  1   0    ; true
1000  18490000           [331] test       36      1    ; to [333] if false
1004  1A800480           [332] jmp        19           ; to [352]
1008  58490000           [333] test       37      1    ; to [335] if false
100C  1A400380           [334] jmp        14           ; to [349]
1010  9D090000           [335] getglobal  38  0        ; 1074689893
1014  D2098010           [336] move       39  33     
1018  A2890001           [337] call       38  2   2  
101C  98490000           [338] test       38      1    ; to [340] if false
1020  1A000280           [339] jmp        9            ; to [349]
1024  A409D110           [340] self       38  33  324  ; -1396353698
1028  130A0001           [341] getupval   40  2      
102C  570A8000           [342] loadbool   41  1   0    ; true
1030  990A0300           [343] loadk      42  12       ; 0
1034  A2498002           [344] call       38  5   1  
1038  A449D110           [345] self       38  33  325  ; -924879488
103C  190A0300           [346] loadk      40  12       ; 0
1040  590A0300           [347] loadk      41  12       ; 0
1044  A2490002           [348] call       38  4   1  
1048  A4895000           [349] self       38  0   322  ; 1438910546
104C  A2890001           [350] call       38  2   2  
1050  52090013           [351] move       37  38     
1054  9D090100           [352] getglobal  38  4        ; gRegion
1058  A4895113           [353] self       38  38  326  ; -1520831144
105C  A2890001           [354] call       38  2   2  
1060  98490000           [355] test       38      1    ; to [357] if false
1064  1AC00580           [356] jmp        24           ; to [381]
1068  9D090100           [357] getglobal  38  4        ; gRegion
106C  A4494113           [358] self       38  38  261  ; -2071158816
1070  A2890001           [359] call       38  2   2  
1074  52010013           [360] move       5   38     
1078  9D890D00           [361] getglobal  38  54       ; 1672515847
107C  D2098002           [362] move       39  5      
1080  A2090101           [363] call       38  2   4  
1084  1AC00080           [364] jmp        4            ; to [369]
1088  E44A4E15           [365] self       43  42  313  ; 2109594123
108C  570B0000           [366] loadbool   45  0   0    ; false
1090  970B8000           [367] loadbool   46  1   0    ; true
1094  E24A0002           [368] call       43  4   1  
1098  96890000           [369] tforloop   38      2    ; to [371] if exit
109C  1A40FE7F           [370] jmp        -6           ; to [365]
10A0  DD8A0D00           [371] getglobal  43  54       ; 1672515847
10A4  120B0001           [372] move       44  2      
10A8  E20A0101           [373] call       43  2   4  
10AC  1AC00080           [374] jmp        4            ; to [379]
10B0  244CCE17           [375] self       48  47  313  ; 2109594123
10B4  970C8000           [376] loadbool   50  1   0    ; true
10B8  D70C8000           [377] loadbool   51  1   0    ; true
10BC  224C0002           [378] call       48  4   1  
10C0  D68A0000           [379] tforloop   43      2    ; to [381] if exit
10C4  1A40FE7F           [380] jmp        -6           ; to [375]
10C8  1DCC0F00           [381] getglobal  48  63       ; doFadeIn
10CC  180C0000           [382] test       48      0    ; to [384] if true
10D0  1AC00280           [383] jmp        12           ; to [396]
10D4  1DCC1100           [384] getglobal  48  71       ; math
10D8  0E0C5218           [385] gettable   48  48  328  ; -1962864584
10DC  59CC0200           [386] loadk      49  11       ; 0
10E0  9D4C1200           [387] getglobal  50  73       ; 1289681407
10E4  A28C8000           [388] call       50  1   2  
10E8  DD8C1200           [389] getglobal  51  74       ; fadeTime
10EC  9CCC0C19           [390] div        50  50  51 
10F0  8D8C8C11           [391] sub        50  35  50 
10F4  228C8001           [392] call       48  3   2  
10F8  D2080018           [393] move       35  48     
10FC  0E0C5011           [394] gettable   48  34  320  ; "postProcess"
1100  0CCC88A0           [395] settable   48  321 35   ; "fade"
1104  1DCC1200           [396] getglobal  48  75       ; 538022378
1108  59CC0200           [397] loadk      49  11       ; 0
110C  224C0001           [398] call       48  2   1  
1110  1A80EA7F           [399] jmp        -85          ; to [315]
1114  1D0C0100           [400] getglobal  48  4        ; gRegion
1118  244C4118           [401] self       48  48  261  ; -2071158816
111C  228C0001           [402] call       48  2   2  
1120  52010018           [403] move       5   48     
1124  1D8C0D00           [404] getglobal  48  54       ; 1672515847
1128  520C8002           [405] move       49  5      
112C  220C0101           [406] call       48  2   4  
1130  1AC00080           [407] jmp        4            ; to [412]
1134  644D4E1A           [408] self       53  52  313  ; 2109594123
1138  D70D8000           [409] loadbool   55  1   0    ; true
113C  170E8000           [410] loadbool   56  1   0    ; true
1140  624D0002           [411] call       53  4   1  
1144  168C0000           [412] tforloop   48      2    ; to [414] if exit
1148  1A40FE7F           [413] jmp        -6           ; to [408]
114C  5D0D0000           [414] getglobal  53  0        ; 1074689893
1150  920D8010           [415] move       54  33     
1154  628D0001           [416] call       53  2   2  
1158  584D0000           [417] test       53      1    ; to [419] if false
115C  1A400080           [418] jmp        2            ; to [421]
1160  640DD310           [419] self       53  33  332  ; -1691371893
1164  624D0001           [420] call       53  2   1  
1168  5D0D0000           [421] getglobal  53  0        ; 1074689893
116C  920D0003           [422] move       54  6      
1170  628D0001           [423] call       53  2   2  
1174  584D0000           [424] test       53      1    ; to [426] if false
1178  1A000C80           [425] jmp        49           ; to [475]
117C  4A0D0003           [426] len        53  6      
fail op	21
1180  15408D85           [427] concat     0   267 53 
1184  1A400B80           [428] jmp        46           ; to [475]
1188  5D8D0D00           [429] getglobal  53  54       ; 1672515847
118C  920D0003           [430] move       54  6      
1190  620D0101           [431] call       53  2   4  
1194  1AC00980           [432] jmp        40           ; to [473]
1198  9D0E0000           [433] getglobal  58  0        ; 1074689893
119C  D20E801C           [434] move       59  57     
11A0  A28E0001           [435] call       58  2   2  
11A4  984E0000           [436] test       58      1    ; to [438] if false
11A8  1A800880           [437] jmp        35           ; to [473]
11AC  A4CEC71C           [438] self       58  57  287  ; 51109503
11B0  A28E0001           [439] call       58  2   2  
11B4  A40E481D           [440] self       58  58  288  ; -211549079
11B8  A28E0001           [441] call       58  2   2  
11BC  980E0000           [442] test       58      0    ; to [444] if true
11C0  1A000780           [443] jmp        29           ; to [473]
11C4  9D0E0000           [444] getglobal  58  0        ; 1074689893
11C8  E44ED31C           [445] self       59  57  333  ; -2135866365
11CC  E20E0001           [446] call       59  2   0  
11D0  A28E0000           [447] call       58  0   2  
11D4  984E0000           [448] test       58      1    ; to [450] if false
11D8  1A800580           [449] jmp        23           ; to [473]
11DC  A44ED31C           [450] self       58  57  333  ; -2135866365
11E0  A28E0001           [451] call       58  2   2  
11E4  A44E481D           [452] self       58  58  289  ; -1917464545
11E8  A28E0001           [453] call       58  2   2  
11EC  A48E481D           [454] self       58  58  290  ; 819640984
11F0  A28E0001           [455] call       58  2   2  
11F4  DD0E0000           [456] getglobal  59  0        ; 1074689893
11F8  120F001D           [457] move       60  58     
11FC  E28E0001           [458] call       59  2   2  
1200  D84E0000           [459] test       59      1    ; to [461] if false
1204  1AC00280           [460] jmp        12           ; to [473]
1208  DD0E0000           [461] getglobal  59  0        ; 1074689893
120C  244F491D           [462] self       60  58  293  ; -1411785325
1210  220F0001           [463] call       60  2   0  
1214  E28E0000           [464] call       59  0   2  
1218  D84E0000           [465] test       59      1    ; to [467] if false
121C  1A400180           [466] jmp        6            ; to [473]
1220  E44E491D           [467] self       59  58  293  ; -1411785325
1224  E28E0001           [468] call       59  2   2  
1228  E48EC91D           [469] self       59  59  294  ; 1038470555
122C  570F0000           [470] loadbool   61  0   0    ; false
1230  930F8000           [471] getupval   62  1      
1234  E24E0002           [472] call       59  4   1  
1238  568D0000           [473] tforloop   53      2    ; to [475] if exit
123C  1A40F57F           [474] jmp        -42          ; to [433]
1240  DD0E0000           [475] getglobal  59  0        ; 1074689893
1244  1D4F0000           [476] getglobal  60  1        ; gFlashMgr
1248  E28E0001           [477] call       59  2   2  
124C  D84E0000           [478] test       59      1    ; to [480] if false
1250  1A000180           [479] jmp        5            ; to [485]
1254  DD4E0000           [480] getglobal  59  1        ; gFlashMgr
1258  E48EC01D           [481] self       59  59  258  ; -1888500610
125C  59CF0000           [482] loadk      61  3        ; "Graphics.EnableHybridShadowsForSmallObjects"
1260  970F0000           [483] loadbool   62  0   0    ; false
1264  E24E0002           [484] call       59  4   1  
1268  DDCE0F00           [485] getglobal  59  63       ; doFadeIn
126C  D80E0000           [486] test       59      0    ; to [488] if true
1270  1AC00280           [487] jmp        12           ; to [500]
fail op	21
1274  15C08885           [488] concat     0   267 35 
1278  1AC00180           [489] jmp        8            ; to [498]
127C  DD4E1200           [490] getglobal  59  73       ; 1289681407
1280  E28E8000           [491] call       59  1   2  
1284  1D8F1200           [492] getglobal  60  74       ; fadeTime
1288  C40E8F1D           [493] mul        59  59  60 
128C  CDC88E11           [494] sub        35  35  59 
1290  CE0E5011           [495] gettable   59  34  320  ; "postProcess"
1294  CCCE88A0           [496] settable   59  321 35   ; "fade"
1298  1A40FD7F           [497] jmp        -10          ; to [488]
129C  CE0E5011           [498] gettable   59  34  320  ; "postProcess"
12A0  CCCEC2A0           [499] settable   59  321 267  ; "fade" 0
12A4  1E008000           [500] return     0   1      
                         * constants:
12A8  4E                 sizek (78)
12A9  01                 const type 3
12AA  65770E40           const [0]: (1074689893)
12AE  04                 const type 4
12AF  0A                 string size (10)
12B0  67466C6173684D67+  "gFlashMg"
12B8  7200               "r\0"
                         const [1]: "gFlashMgr"
12BA  01                 const type 3
12BB  7EC46F8F           const [2]: (-1888500610)
12BF  04                 const type 4
12C0  2C                 string size (44)
12C1  4772617068696373+  "Graphics"
12C9  2E456E61626C6548+  ".EnableH"
12D1  7962726964536861+  "ybridSha"
12D9  646F7773466F7253+  "dowsForS"
12E1  6D616C6C4F626A65+  "mallObje"
12E9  63747300           "cts\0"
                         const [3]: "Graphics.EnableHybridShadowsForSmallObjects"
12ED  04                 const type 4
12EE  08                 string size (8)
12EF  67526567696F6E00   "gRegion\0"
                         const [4]: "gRegion"
12F7  01                 const type 3
12F8  E09F8C84           const [5]: (-2071158816)
12FC  01                 const type 3
12FD  9FE1FB48           const [6]: (1224466847)
1301  04                 const type 4
1302  01                 string size (0)
                         const [7]: ""
1304  04                 const type 4
1305  11                 string size (17)
1306  674D61746368696E+  "gMatchin"
130E  6753657276696365+  "gService"
1316  00                 "\0"
                         const [8]: "gMatchingService"
1317  01                 const type 3
1318  4636E0D5           const [9]: (-706726330)
131C  01                 const type 3
131D  E91C817E           const [10]: (2122390761)
1321  03                 const type 3
1322  00000000           const [11]: (0)
1326  03                 const type 3
1327  0000803F           const [12]: (0)
132B  01                 const type 3
132C  DD8258DE           const [13]: (-564624675)
1330  01                 const type 3
1331  F9284A14           const [14]: (340404473)
1335  01                 const type 3
1336  6B25B193           const [15]: (-1817107093)
133A  04                 const type 4
133B  0B                 string size (11)
133C  486F7374206E616D+  "Host nam"
1344  652000             "e \0"
                         const [16]: "Host name "
1347  04                 const type 4
1348  0F                 string size (15)
1349  4E756D2061766174+  "Num avat"
1351  617273203D2000     "ars = \0"
                         const [17]: "Num avatars = "
1358  01                 const type 3
1359  BCD6AE9F           const [18]: (-1615931716)
135D  01                 const type 3
135E  B63E883D           const [19]: (1032339126)
1362  01                 const type 3
1363  1A4B27EC           const [20]: (-332969190)
1367  04                 const type 4
1368  06                 string size (6)
1369  54656E6E6F00       "Tenno\0"
                         const [21]: "Tenno"
136F  04                 const type 4
1370  13                 string size (19)
1371  6973417263687769+  "isArchwi"
1379  6E67416E696D6174+  "ngAnimat"
1381  656400             "ed\0"
                         const [22]: "isArchwingAnimated"
1384  01                 const type 3
1385  68C51D9F           const [23]: (-1625438872)
1389  04                 const type 4
138A  0D                 string size (13)
138B  6172636877696E67+  "archwing"
1393  5479706500         "Type\0"
                         const [24]: "archwingType"
1398  04                 const type 4
1399  0A                 string size (10)
139A  4172636877696E67+  "Archwing"
13A2  4100               "A\0"
                         const [25]: "ArchwingA"
13A4  04                 const type 4
13A5  06                 string size (6)
13A6  7461626C6500       "table\0"
                         const [26]: "table"
13AC  01                 const type 3
13AD  9D0C45E6           const [27]: (-431682403)
13B1  04                 const type 4
13B2  13                 string size (19)
13B3  48494444454E5F50+  "HIDDEN_P"
13BB  4C415945525F4E41+  "LAYER_NA"
13C3  4D4500             "ME\0"
                         const [28]: "HIDDEN_PLAYER_NAME"
13C6  04                 const type 4
13C7  05                 string size (5)
13C8  6E616D6500         "name\0"
                         const [29]: "name"
13CD  04                 const type 4
13CE  07                 string size (7)
13CF  61766174617200     "avatar\0"
                         const [30]: "avatar"
13D6  01                 const type 3
13D7  7FDE0B03           const [31]: (51109503)
13DB  01                 const type 3
13DC  690464F3           const [32]: (-211549079)
13E0  01                 const type 3
13E1  1FD0B58D           const [33]: (-1917464545)
13E5  01                 const type 3
13E6  98BADA30           const [34]: (819640984)
13EA  01                 const type 3
13EB  DC3D18EC           const [35]: (-333955620)
13EF  01                 const type 3
13F0  48FE2905           const [36]: (86638152)
13F4  01                 const type 3
13F5  93DDD9AB           const [37]: (-1411785325)
13F9  01                 const type 3
13FA  9BCDE53D           const [38]: (1038470555)
13FE  04                 const type 4
13FF  07                 string size (7)
1400  54656E6E6F4200     "TennoB\0"
                         const [39]: "TennoB"
1407  04                 const type 4
1408  07                 string size (7)
1409  54656E6E6F4300     "TennoC\0"
                         const [40]: "TennoC"
1410  04                 const type 4
1411  07                 string size (7)
1412  54656E6E6F4400     "TennoD\0"
                         const [41]: "TennoD"
1419  04                 const type 4
141A  07                 string size (7)
141B  54656E6E6F4500     "TennoE\0"
                         const [42]: "TennoE"
1422  04                 const type 4
1423  07                 string size (7)
1424  54656E6E6F4600     "TennoF\0"
                         const [43]: "TennoF"
142B  04                 const type 4
142C  07                 string size (7)
142D  54656E6E6F4700     "TennoG\0"
                         const [44]: "TennoG"
1434  04                 const type 4
1435  07                 string size (7)
1436  54656E6E6F4800     "TennoH\0"
                         const [45]: "TennoH"
143D  04                 const type 4
143E  0A                 string size (10)
143F  4172636877696E67+  "Archwing"
1447  4200               "B\0"
                         const [46]: "ArchwingB"
1449  04                 const type 4
144A  0A                 string size (10)
144B  4172636877696E67+  "Archwing"
1453  4300               "C\0"
                         const [47]: "ArchwingC"
1455  04                 const type 4
1456  0A                 string size (10)
1457  4172636877696E67+  "Archwing"
145F  4400               "D\0"
                         const [48]: "ArchwingD"
1461  04                 const type 4
1462  0A                 string size (10)
1463  4172636877696E67+  "Archwing"
146B  4500               "E\0"
                         const [49]: "ArchwingE"
146D  04                 const type 4
146E  0A                 string size (10)
146F  4172636877696E67+  "Archwing"
1477  4600               "F\0"
                         const [50]: "ArchwingF"
1479  04                 const type 4
147A  0A                 string size (10)
147B  4172636877696E67+  "Archwing"
1483  4700               "G\0"
                         const [51]: "ArchwingG"
1485  04                 const type 4
1486  0A                 string size (10)
1487  4172636877696E67+  "Archwing"
148F  4800               "H\0"
                         const [52]: "ArchwingH"
1491  01                 const type 3
1492  1080C5A5           const [53]: (-1513783280)
1496  01                 const type 3
1497  0791B063           const [54]: (1672515847)
149B  01                 const type 3
149C  B4004194           const [55]: (-1807679308)
14A0  04                 const type 4
14A1  07                 string size (7)
14A2  47726174654200     "GrateB\0"
                         const [56]: "GrateB"
14A9  01                 const type 3
14AA  0BDABD7D           const [57]: (2109594123)
14AE  01                 const type 3
14AF  3F74C2D4           const [58]: (-725453761)
14B3  01                 const type 3
14B4  12066FA7           const [59]: (-1485896174)
14B8  04                 const type 4
14B9  0C                 string size (12)
14BA  506C617965724C69+  "PlayerLi"
14C2  73657400           "set\0"
                         const [60]: "PlayerLiset"
14C6  01                 const type 3
14C7  531F7FDD           const [61]: (-578871469)
14CB  01                 const type 3
14CC  36C033A9           const [62]: (-1456226250)
14D0  04                 const type 4
14D1  09                 string size (9)
14D2  646F46616465496E+  "doFadeIn"
14DA  00                 "\0"
                         const [63]: "doFadeIn"
14DB  04                 const type 4
14DC  0C                 string size (12)
14DD  706F737450726F63+  "postProc"
14E5  65737300           "ess\0"
                         const [64]: "postProcess"
14E9  04                 const type 4
14EA  05                 string size (5)
14EB  6661646500         "fade\0"
                         const [65]: "fade"
14F0  01                 const type 3
14F1  5208C455           const [66]: (1438910546)
14F5  01                 const type 3
14F6  738DC8C6           const [67]: (-959935117)
14FA  01                 const type 3
14FB  5E55C5AC           const [68]: (-1396353698)
14FF  01                 const type 3
1500  8075DFC8           const [69]: (-924879488)
1504  01                 const type 3
1505  58F559A5           const [70]: (-1520831144)
1509  04                 const type 4
150A  05                 string size (5)
150B  6D61746800         "math\0"
                         const [71]: "math"
1510  01                 const type 3
1511  3810018B           const [72]: (-1962864584)
1515  01                 const type 3
1516  FFF9DE4C           const [73]: (1289681407)
151A  04                 const type 4
151B  09                 string size (9)
151C  6661646554696D65+  "fadeTime"
1524  00                 "\0"
                         const [74]: "fadeTime"
1525  01                 const type 3
1526  EA911120           const [75]: (538022378)
152A  01                 const type 3
152B  8BB62F9B           const [76]: (-1691371893)
152F  01                 const type 3
1530  0344B180           const [77]: (-2135866365)
                         * functions:
1534  01                 sizep (1)
                         
1535                     ** function [0] definition (level 3)
                         ** start of function **
1535  00                 string size (0)
                         source name: (none)
1537  01                 line defined (184)
1538  B8                 last line defined (184)
1539  01                 nups (0)
153A  00                 numparams (2)
153B  02                 is_vararg (0)
153C  00                 maxstacksize (4)
                         * code:
153E  08                 sizecode (8)
153F  8E004000           [1] gettable   2   0   256  ; "name"
1543  CE00C000           [2] gettable   3   1   256  ; "name"
fail op	21
1547  55C00001           [3] concat     1   2   3  
154B  1A000080           [4] jmp        1            ; to [6]
154F  97400000           [5] loadbool   2   0   1    ; false, to [7]
1553  97008000           [6] loadbool   2   1   0    ; true
1557  9E000001           [7] return     2   2      
155B  1E008000           [8] return     0   1      
                         * constants:
155F  01                 sizek (1)
1560  04                 const type 4
1561  05                 string size (5)
1562  6E616D6500         "name\0"
                         const [0]: "name"
                         * functions:
1567  00                 sizep (0)
                         * lines:
1568  08                 sizelineinfo (8)
                         [pc] (line)
1569  B8                 [1] (-72)
156A  00                 [2] (-72)
156B  00                 [3] (-72)
156C  00                 [4] (-72)
156D  B8                 [5] (-72)
156E  00                 [6] (-72)
156F  00                 [7] (-72)
1570  00                 [8] (-72)
                         * locals:
1589  00                 sizelocvars (0)
                         * upvalues:
158A  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
158C  03                 sizelineinfo (500)
                         [pc] (line)
158D  72                 [001] (114)
158E  00                 [002] (116)
158F  00                 [003] (117)
1590  00                 [004] (118)
1591  74                 [005] (120)
1592  00                 [006] (120)
1593  00                 [007] (120)
1594  00                 [008] (120)
1595  75                 [009] (120)
1596  00                 [010] (121)
1597  00                 [011] (121)
1598  00                 [012] (121)
1599  76                 [013] (121)
159A  00                 [014] (121)
159B  00                 [015] (-128)
159C  00                 [016] (-128)
159D  78                 [017] (-128)
159E  00                 [018] (-127)
159F  00                 [019] (-127)
15A0  00                 [020] (-127)
15A1  78                 [021] (-124)
15A2  00                 [022] (-123)
15A3  00                 [023] (-123)
15A4  00                 [024] (-123)
15A5  78                 [025] (-122)
15A6  00                 [026] (-122)
15A7  00                 [027] (-122)
15A8  00                 [028] (-122)
15A9  78                 [029] (-122)
15AA  00                 [030] (-121)
15AB  00                 [031] (-121)
15AC  00                 [032] (-121)
15AD  78                 [033] (-121)
15AE  00                 [034] (-120)
15AF  00                 [035] (-120)
15B0  00                 [036] (-120)
15B1  79                 [037] (-119)
15B2  00                 [038] (-119)
15B3  00                 [039] (-119)
15B4  00                 [040] (-119)
15B5  79                 [041] (-119)
15B6  00                 [042] (-119)
15B7  00                 [043] (-116)
15B8  00                 [044] (-116)
15B9  79                 [045] (-116)
15BA  00                 [046] (-116)
15BB  00                 [047] (-116)
15BC  00                 [048] (-114)
15BD  79                 [049] (-114)
15BE  00                 [050] (-114)
15BF  00                 [051] (-114)
15C0  00                 [052] (-114)
15C1  79                 [053] (-114)
15C2  00                 [054] (-114)
15C3  00                 [055] (-114)
15C4  00                 [056] (-112)
15C5  80                 [057] (-112)
15C6  00                 [058] (-112)
15C7  00                 [059] (-112)
15C8  00                 [060] (-112)
15C9  80                 [061] (-112)
15CA  00                 [062] (-112)
15CB  00                 [063] (-110)
15CC  00                 [064] (-110)
15CD  80                 [065] (-110)
15CE  00                 [066] (-110)
15CF  00                 [067] (-109)
15D0  00                 [068] (-108)
15D1  81                 [069] (-107)
15D2  00                 [070] (-107)
15D3  00                 [071] (-106)
15D4  00                 [072] (-106)
15D5  81                 [073] (-105)
15D6  00                 [074] (-105)
15D7  00                 [075] (-105)
15D8  00                 [076] (-105)
15D9  81                 [077] (-105)
15DA  00                 [078] (-105)
15DB  00                 [079] (-104)
15DC  00                 [080] (-104)
15DD  84                 [081] (-104)
15DE  00                 [082] (-103)
15DF  00                 [083] (-103)
15E0  00                 [084] (-103)
15E1  85                 [085] (-103)
15E2  00                 [086] (-102)
15E3  00                 [087] (-102)
15E4  00                 [088] (-102)
15E5  85                 [089] (-102)
15E6  00                 [090] (-102)
15E7  00                 [091] (-101)
15E8  00                 [092] (-101)
15E9  85                 [093] (-101)
15EA  00                 [094] (-101)
15EB  00                 [095] (-101)
15EC  00                 [096] (-98)
15ED  86                 [097] (-98)
15EE  00                 [098] (-98)
15EF  00                 [099] (-98)
15F0  00                 [100] (-98)
15F1  86                 [101] (-98)
15F2  00                 [102] (-97)
15F3  00                 [103] (-97)
15F4  00                 [104] (-97)
15F5  86                 [105] (-97)
15F6  00                 [106] (-96)
15F7  00                 [107] (-96)
15F8  00                 [108] (-96)
15F9  86                 [109] (-96)
15FA  00                 [110] (-96)
15FB  00                 [111] (-96)
15FC  00                 [112] (-96)
15FD  86                 [113] (-92)
15FE  00                 [114] (-92)
15FF  00                 [115] (-92)
1600  00                 [116] (-92)
1601  87                 [117] (-92)
1602  00                 [118] (-92)
1603  00                 [119] (-91)
1604  00                 [120] (-91)
1605  87                 [121] (-91)
1606  00                 [122] (-91)
1607  00                 [123] (-90)
1608  00                 [124] (-90)
1609  87                 [125] (-90)
160A  00                 [126] (-90)
160B  00                 [127] (-90)
160C  00                 [128] (-88)
160D  87                 [129] (-88)
160E  00                 [130] (-88)
160F  00                 [131] (-88)
1610  00                 [132] (-88)
1611  88                 [133] (-88)
1612  00                 [134] (-87)
1613  00                 [135] (-87)
1614  00                 [136] (-87)
1615  88                 [137] (-87)
1616  00                 [138] (-87)
1617  00                 [139] (-87)
1618  00                 [140] (-86)
1619  88                 [141] (-86)
161A  00                 [142] (-86)
161B  00                 [143] (-86)
161C  00                 [144] (-86)
161D  89                 [145] (-86)
161E  00                 [146] (-110)
161F  00                 [147] (-79)
1620  00                 [148] (-79)
1621  89                 [149] (-79)
1622  00                 [150] (-79)
1623  00                 [151] (-79)
1624  00                 [152] (-79)
1625  89                 [153] (-79)
1626  00                 [154] (-79)
1627  00                 [155] (-79)
1628  00                 [156] (-79)
1629  89                 [157] (-79)
162A  00                 [158] (-79)
162B  00                 [159] (-79)
162C  00                 [160] (-79)
162D  89                 [161] (-79)
162E  00                 [162] (-79)
162F  00                 [163] (-79)
1630  00                 [164] (-79)
1631  89                 [165] (-79)
1632  00                 [166] (-79)
1633  00                 [167] (-79)
1634  00                 [168] (-79)
1635  8C                 [169] (-79)
1636  00                 [170] (-77)
1637  00                 [171] (-77)
1638  00                 [172] (-77)
1639  8C                 [173] (-76)
163A  00                 [174] (-76)
163B  00                 [175] (-76)
163C  00                 [176] (-76)
163D  8C                 [177] (-76)
163E  00                 [178] (-76)
163F  00                 [179] (-76)
1640  00                 [180] (-76)
1641  8C                 [181] (-76)
1642  00                 [182] (-76)
1643  00                 [183] (-76)
1644  00                 [184] (-76)
1645  8C                 [185] (-76)
1646  00                 [186] (-76)
1647  00                 [187] (-76)
1648  00                 [188] (-76)
1649  8E                 [189] (-76)
164A  00                 [190] (-76)
164B  00                 [191] (-76)
164C  00                 [192] (-76)
164D  8E                 [193] (-76)
164E  00                 [194] (-76)
164F  00                 [195] (-76)
1650  00                 [196] (-76)
1651  8E                 [197] (-73)
1652  00                 [198] (-72)
1653  00                 [199] (-72)
1654  00                 [200] (-72)
1655  8E                 [201] (-72)
1656  00                 [202] (-72)
1657  00                 [203] (-70)
1658  00                 [204] (-69)
1659  8E                 [205] (-68)
165A  00                 [206] (-68)
165B  00                 [207] (-67)
165C  00                 [208] (-64)
165D  8E                 [209] (-64)
165E  00                 [210] (-64)
165F  00                 [211] (-64)
1660  00                 [212] (-64)
1661  8E                 [213] (-62)
1662  00                 [214] (-62)
1663  00                 [215] (-61)
1664  00                 [216] (-61)
1665  8E                 [217] (-61)
1666  00                 [218] (-61)
1667  00                 [219] (-61)
1668  00                 [220] (-61)
1669  90                 [221] (-61)
166A  00                 [222] (-61)
166B  00                 [223] (-60)
166C  00                 [224] (-60)
166D  90                 [225] (-60)
166E  00                 [226] (-60)
166F  00                 [227] (-60)
1670  00                 [228] (-60)
1671  90                 [229] (-60)
1672  00                 [230] (-60)
1673  00                 [231] (-57)
1674  00                 [232] (-57)
1675  90                 [233] (-57)
1676  00                 [234] (-57)
1677  00                 [235] (-56)
1678  00                 [236] (-55)
1679  90                 [237] (-55)
167A  00                 [238] (-55)
167B  00                 [239] (-55)
167C  00                 [240] (-54)
167D  90                 [241] (-54)
167E  00                 [242] (-54)
167F  00                 [243] (-53)
1680  00                 [244] (-53)
1681  90                 [245] (-53)
1682  00                 [246] (-53)
1683  00                 [247] (-53)
1684  00                 [248] (-52)
1685  92                 [249] (-52)
1686  00                 [250] (-52)
1687  00                 [251] (-52)
1688  00                 [252] (-52)
1689  92                 [253] (-51)
168A  00                 [254] (-51)
168B  00                 [255] (-51)
168C  00                 [256] (-48)
168D  92                 [257] (-48)
168E  00                 [258] (-48)
168F  00                 [259] (-48)
1690  00                 [260] (-48)
1691  92                 [261] (-47)
1692  00                 [262] (-57)
1693  00                 [263] (-43)
1694  00                 [264] (-43)
1695  93                 [265] (-43)
1696  00                 [266] (-42)
1697  00                 [267] (-42)
1698  00                 [268] (-42)
1699  94                 [269] (-42)
169A  00                 [270] (-42)
169B  00                 [271] (-42)
169C  00                 [272] (-42)
169D  95                 [273] (-42)
169E  00                 [274] (-42)
169F  00                 [275] (-41)
16A0  00                 [276] (-41)
16A1  95                 [277] (-41)
16A2  00                 [278] (-41)
16A3  00                 [279] (-40)
16A4  00                 [280] (-40)
16A5  96                 [281] (-42)
16A6  00                 [282] (-40)
16A7  00                 [283] (-36)
16A8  00                 [284] (-36)
16A9  96                 [285] (-36)
16AA  00                 [286] (-36)
16AB  00                 [287] (-36)
16AC  00                 [288] (-36)
16AD  97                 [289] (-35)
16AE  00                 [290] (-34)
16AF  00                 [291] (-34)
16B0  00                 [292] (-34)
16B1  97                 [293] (-33)
16B2  00                 [294] (-30)
16B3  00                 [295] (-30)
16B4  00                 [296] (-30)
16B5  97                 [297] (-30)
16B6  00                 [298] (-29)
16B7  00                 [299] (-28)
16B8  00                 [300] (-28)
16B9  97                 [301] (-28)
16BA  00                 [302] (-27)
16BB  00                 [303] (-27)
16BC  00                 [304] (-23)
16BD  97                 [305] (-23)
16BE  00                 [306] (-23)
16BF  00                 [307] (-23)
16C0  00                 [308] (-23)
16C1  97                 [309] (-23)
16C2  00                 [310] (-23)
16C3  00                 [311] (-23)
16C4  00                 [312] (-23)
16C5  98                 [313] (-23)
16C6  00                 [314] (-22)
16C7  00                 [315] (-21)
16C8  00                 [316] (-21)
16C9  98                 [317] (-21)
16CA  00                 [318] (-21)
16CB  00                 [319] (-20)
16CC  00                 [320] (-20)
16CD  98                 [321] (-19)
16CE  00                 [322] (-19)
16CF  00                 [323] (-19)
16D0  00                 [324] (-19)
16D1  99                 [325] (-19)
16D2  00                 [326] (-19)
16D3  00                 [327] (-19)
16D4  00                 [328] (-19)
16D5  99                 [329] (-19)
16D6  00                 [330] (-19)
16D7  00                 [331] (-17)
16D8  00                 [332] (-17)
16D9  99                 [333] (-16)
16DA  00                 [334] (-16)
16DB  00                 [335] (-16)
16DC  00                 [336] (-16)
16DD  99                 [337] (-16)
16DE  00                 [338] (-16)
16DF  00                 [339] (-16)
16E0  00                 [340] (-15)
16E1  9A                 [341] (-15)
16E2  00                 [342] (-15)
16E3  00                 [343] (-15)
16E4  00                 [344] (-15)
16E5  9A                 [345] (-14)
16E6  00                 [346] (-14)
16E7  00                 [347] (-14)
16E8  00                 [348] (-14)
16E9  9A                 [349] (-11)
16EA  00                 [350] (-11)
16EB  00                 [351] (-11)
16EC  00                 [352] (-8)
16ED  9A                 [353] (-8)
16EE  00                 [354] (-8)
16EF  00                 [355] (-8)
16F0  00                 [356] (-8)
16F1  9A                 [357] (-6)
16F2  00                 [358] (-6)
16F3  00                 [359] (-6)
16F4  00                 [360] (-6)
16F5  9B                 [361] (-4)
16F6  00                 [362] (-4)
16F7  00                 [363] (-4)
16F8  00                 [364] (-4)
16F9  9B                 [365] (-3)
16FA  00                 [366] (-3)
16FB  00                 [367] (-3)
16FC  00                 [368] (-3)
16FD  9B                 [369] (-4)
16FE  00                 [370] (-3)
16FF  00                 [371] (0)
1700  00                 [372] (0)
1701  9B                 [373] (0)
1702  00                 [374] (0)
1703  00                 [375] (1)
1704  00                 [376] (1)
1705  9B                 [377] (1)
1706  00                 [378] (1)
1707  00                 [379] (0)
1708  00                 [380] (1)
1709  9E                 [381] (5)
170A  00                 [382] (5)
170B  00                 [383] (5)
170C  00                 [384] (6)
170D  9E                 [385] (6)
170E  00                 [386] (6)
170F  00                 [387] (6)
1710  00                 [388] (6)
1711  9E                 [389] (6)
1712  00                 [390] (6)
1713  00                 [391] (6)
1714  00                 [392] (6)
1715  9E                 [393] (6)
1716  00                 [394] (7)
1717  00                 [395] (7)
1718  00                 [396] (10)
1719  9E                 [397] (10)
171A  00                 [398] (10)
171B  00                 [399] (10)
171C  00                 [400] (13)
171D  9E                 [401] (13)
171E  00                 [402] (13)
171F  00                 [403] (13)
1720  00                 [404] (14)
1721  9F                 [405] (14)
1722  00                 [406] (14)
1723  00                 [407] (14)
1724  00                 [408] (15)
1725  9F                 [409] (15)
1726  00                 [410] (15)
1727  00                 [411] (15)
1728  00                 [412] (14)
1729  9F                 [413] (15)
172A  00                 [414] (18)
172B  00                 [415] (18)
172C  00                 [416] (18)
172D  9F                 [417] (18)
172E  00                 [418] (18)
172F  00                 [419] (19)
1730  00                 [420] (19)
1731  A0                 [421] (23)
1732  00                 [422] (23)
1733  00                 [423] (23)
1734  00                 [424] (23)
1735  A0                 [425] (23)
1736  00                 [426] (23)
1737  00                 [427] (23)
1738  00                 [428] (23)
1739  A0                 [429] (24)
173A  00                 [430] (24)
173B  00                 [431] (24)
173C  00                 [432] (24)
173D  A0                 [433] (25)
173E  00                 [434] (25)
173F  00                 [435] (25)
1740  00                 [436] (25)
1741  A0                 [437] (25)
1742  00                 [438] (25)
1743  00                 [439] (25)
1744  00                 [440] (25)
1745  A0                 [441] (25)
1746  00                 [442] (25)
1747  00                 [443] (25)
1748  00                 [444] (25)
1749  A0                 [445] (25)
174A  00                 [446] (25)
174B  00                 [447] (25)
174C  00                 [448] (25)
174D  A4                 [449] (25)
174E  00                 [450] (26)
174F  00                 [451] (26)
1750  00                 [452] (26)
1751  A4                 [453] (26)
1752  00                 [454] (26)
1753  00                 [455] (26)
1754  00                 [456] (27)
1755  A4                 [457] (27)
1756  00                 [458] (27)
1757  00                 [459] (27)
1758  00                 [460] (27)
1759  A4                 [461] (27)
175A  00                 [462] (27)
175B  00                 [463] (27)
175C  00                 [464] (27)
175D  A4                 [465] (27)
175E  00                 [466] (27)
175F  00                 [467] (28)
1760  00                 [468] (28)
1761  A4                 [469] (28)
1762  00                 [470] (28)
1763  00                 [471] (28)
1764  00                 [472] (28)
1765  A5                 [473] (24)
1766  00                 [474] (30)
1767  00                 [475] (34)
1768  00                 [476] (34)
1769  A5                 [477] (34)
176A  00                 [478] (34)
176B  00                 [479] (34)
176C  00                 [480] (35)
176D  A5                 [481] (35)
176E  00                 [482] (35)
176F  00                 [483] (35)
1770  00                 [484] (35)
1771  A5                 [485] (38)
1772  00                 [486] (38)
1773  00                 [487] (38)
1774  00                 [488] (39)
1775  A6                 [489] (39)
1776  00                 [490] (40)
1777  00                 [491] (40)
1778  00                 [492] (40)
1779  A6                 [493] (40)
177A  00                 [494] (40)
177B  00                 [495] (41)
177C  00                 [496] (41)
177D  A6                 [497] (41)
177E  00                 [498] (43)
177F  00                 [499] (43)
1780  00                 [500] (45)
                         * locals:
1D5D  00                 sizelocvars (0)
                         * upvalues:
1D5E  00                 sizeupvalues (0)
                         ** end of function **

                         
1D5F                     ** function [6] definition (level 2)
                         ** start of function **
1D5F  00                 string size (0)
                         source name: (none)
1D61  02                 line defined (303)
1D62  86                 last line defined (390)
1D63  03                 nups (1)
1D64  01                 numparams (0)
1D65  00                 is_vararg (0)
1D66  00                 maxstacksize (41)
                         * code:
1D69  01                 sizecode (217)
1D6A  0B000000           [001] newtable   0   0   0    ; array=0, hash=0
1D6E  4B000000           [002] newtable   1   0   0    ; array=0, hash=0
1D72  9D000000           [003] getglobal  2   0        ; gRegion
1D76  A4404001           [004] self       2   2   257  ; -2071158816
1D7A  A2800001           [005] call       2   2   2  
1D7E  DD000000           [006] getglobal  3   0        ; gRegion
1D82  E480C001           [007] self       3   3   258  ; 1224466847
1D86  E2800001           [008] call       3   2   2  
1D8A  19C10000           [009] loadk      4   3        ; ""
1D8E  5D010100           [010] getglobal  5   4        ; gMatchingService
1D92  6441C102           [011] self       5   5   261  ; -706726330
1D96  62810001           [012] call       5   2   2  
1D9A  9D810100           [013] getglobal  6   6        ; 1074689893
1D9E  D2018002           [014] move       7   5      
1DA2  A2810001           [015] call       6   2   2  
1DA6  98410000           [016] test       6       1    ; to [18] if false
1DAA  1AC00080           [017] jmp        4            ; to [22]
1DAE  A4C1C102           [018] self       6   5   263  ; 2122390761
1DB2  A2810001           [019] call       6   2   2  
1DB6  12010003           [020] move       4   6      
1DBA  1A000280           [021] jmp        9            ; to [31]
1DBE  8A010001           [022] len        6   2      
fail op	21
1DC2  15800184           [023] concat     0   264 6  
1DC6  1A400180           [024] jmp        6            ; to [31]
1DCA  8E414201           [025] gettable   6   2   265  ; 0
1DCE  A4814203           [026] self       6   6   266  ; -564624675
1DD2  A2810001           [027] call       6   2   2  
1DD6  A4C14203           [028] self       6   6   267  ; 340404473
1DDA  A2810001           [029] call       6   2   2  
1DDE  12010003           [030] move       4   6      
1DE2  9D010300           [031] getglobal  6   12       ; -1817107093
1DE6  D9410300           [032] loadk      7   13       ; "Host name "
1DEA  12020002           [033] move       8   4      
1DEE  C2018203           [034] concat     7   7   8  
1DF2  A2410001           [035] call       6   2   1  
1DF6  9D810100           [036] getglobal  6   6        ; 1074689893
1DFA  D2010001           [037] move       7   2      
1DFE  A2810001           [038] call       6   2   2  
1E02  98410000           [039] test       6       1    ; to [41] if false
1E06  1AC00A80           [040] jmp        44           ; to [85]
1E0A  8A010001           [041] len        6   2      
fail op	21
1E0E  15800184           [042] concat     0   264 6  
1E12  1A000A80           [043] jmp        41           ; to [85]
1E16  9D010300           [044] getglobal  6   12       ; -1817107093
1E1A  D9810300           [045] loadk      7   14       ; "Num avatars = "
1E1E  1DC20300           [046] getglobal  8   15       ; -1615931716
1E22  4A020001           [047] len        9   2      
1E26  22820001           [048] call       8   2   2  
1E2A  C2018203           [049] concat     7   7   8  
1E2E  A2410001           [050] call       6   2   1  
1E32  99410200           [051] loadk      6   9        ; 0
1E36  CA010001           [052] len        7   2      
1E3A  19420200           [053] loadk      8   9        ; 0
1E3E  90010780           [054] forprep    6   29       ; to [84]
1E42  8E420201           [055] gettable   10  2   9  
1E46  CE428201           [056] gettable   11  3   9  
1E4A  24C3C205           [057] self       12  11  267  ; 340404473
1E4E  22830001           [058] call       12  2   2  
fail op	35
1E52  23000106           [059] close      0  
1E56  1AC00280           [060] jmp        12           ; to [73]
1E5A  4E430201           [061] gettable   13  2   9  
1E5E  6403C406           [062] self       13  13  272  ; 1032339126
1E62  DD430400           [063] getglobal  15  17       ; -332969190
1E66  19840400           [064] loadk      16  18       ; "Tenno"
1E6A  E2030001           [065] call       15  2   0  
1E6E  62430000           [066] call       13  0   1  
1E72  5DC30400           [067] getglobal  13  19       ; table
1E76  4E03C506           [068] gettable   13  13  276  ; -431682403
1E7A  92038000           [069] move       14  1      
1E7E  D2030005           [070] move       15  10     
1E82  62438001           [071] call       13  3   1  
1E86  1A800280           [072] jmp        11           ; to [84]
1E8A  53030000           [073] getupval   13  0      
1E8E  4E43C506           [074] gettable   13  13  277  ; "HIDDEN_PLAYER_NAME"
fail op	35
1E92  63400306           [075] close      1  
1E96  1A800180           [076] jmp        7            ; to [84]
1E9A  5DC30400           [077] getglobal  13  19       ; table
1E9E  4E03C506           [078] gettable   13  13  276  ; -431682403
1EA2  92030000           [079] move       14  0      
1EA6  CB830000           [080] newtable   15  0   2    ; array=0, hash=2
1EAA  CC03038B           [081] settable   15  278 12   ; "name"
1EAE  CC83828B           [082] settable   15  279 10   ; "avatar"
1EB2  62438001           [083] call       13  3   1  
1EB6  9441F87F           [084] forloop    6   -30      ; to [55] if loop
1EBA  4B030001           [085] newtable   13  2   0    ; array=2, hash=0
1EBE  9D430400           [086] getglobal  14  17       ; -332969190
1EC2  D9030600           [087] loadk      15  24       ; "TennoB"
1EC6  A2830001           [088] call       14  2   2  
1ECA  DD430400           [089] getglobal  15  17       ; -332969190
1ECE  19440600           [090] loadk      16  25       ; "TennoC"
1ED2  E2830001           [091] call       15  2   2  
1ED6  1D440400           [092] getglobal  16  17       ; -332969190
1EDA  59840600           [093] loadk      17  26       ; "TennoD"
1EDE  22040001           [094] call       16  2   0  
1EE2  5B430000           [095] setlist    13  0   1    ; index 1 to top
1EE6  99430200           [096] loadk      14  9        ; 0
1EEA  DDC30400           [097] getglobal  15  19       ; table
1EEE  CEC3C607           [098] gettable   15  15  283  ; -1513783280
1EF2  12040000           [099] move       16  0      
1EF6  65040000           [100] closure    17  0      
1EFA  E2438001           [101] call       15  3   1  
1EFE  DD030700           [102] getglobal  15  28       ; 1672515847
1F02  12040000           [103] move       16  0      
1F06  E2030101           [104] call       15  2   4  
1F0A  1A400280           [105] jmp        10           ; to [116]
1F0E  0EC5C509           [106] gettable   20  19  279  ; "avatar"
1F12  2405440A           [107] self       20  20  272  ; 1032339126
1F16  8E858306           [108] gettable   22  13  14 
1F1A  22458001           [109] call       20  3   1  
1F1E  1DC50400           [110] getglobal  20  19       ; table
1F22  0E05450A           [111] gettable   20  20  276  ; -431682403
1F26  52058000           [112] move       21  1      
1F2A  8EC5C509           [113] gettable   22  19  279  ; "avatar"
1F2E  22458001           [114] call       20  3   1  
1F32  83434207           [115] add        14  14  265  ; 0
1F36  D6830000           [116] tforloop   15      2    ; to [118] if exit
1F3A  1AC0FC7F           [117] jmp        -12          ; to [106]
1F3E  1D850100           [118] getglobal  20  6        ; 1074689893
1F42  5D450700           [119] getglobal  21  29       ; _T
1F46  4E85C70A           [120] gettable   21  21  286  ; "winningCinematicPlayer"
1F4A  22850001           [121] call       20  2   2  
1F4E  18450000           [122] test       20      1    ; to [124] if false
1F52  1A800180           [123] jmp        7            ; to [131]
1F56  1D450700           [124] getglobal  20  29       ; _T
1F5A  0E85470A           [125] gettable   20  20  286  ; "winningCinematicPlayer"
1F5E  2405440A           [126] self       20  20  272  ; 1032339126
1F62  9D450400           [127] getglobal  22  17       ; -332969190
1F66  D9850400           [128] loadk      23  18       ; "Tenno"
1F6A  A2050001           [129] call       22  2   0  
1F6E  22450000           [130] call       20  0   1  
1F72  1D850100           [131] getglobal  20  6        ; 1074689893
1F76  5D450700           [132] getglobal  21  29       ; _T
1F7A  4EC5C70A           [133] gettable   21  21  287  ; "losingCinematicPlayer"
1F7E  22850001           [134] call       20  2   2  
1F82  18450000           [135] test       20      1    ; to [137] if false
1F86  1A800180           [136] jmp        7            ; to [144]
1F8A  1D450700           [137] getglobal  20  29       ; _T
1F8E  0EC5470A           [138] gettable   20  20  287  ; "losingCinematicPlayer"
1F92  2405440A           [139] self       20  20  272  ; 1032339126
1F96  9D450400           [140] getglobal  22  17       ; -332969190
1F9A  D9050600           [141] loadk      23  24       ; "TennoB"
1F9E  A2050001           [142] call       22  2   0  
1FA2  22450000           [143] call       20  0   1  
1FA6  1D850100           [144] getglobal  20  6        ; 1074689893
1FAA  5D050000           [145] getglobal  21  0        ; gRegion
1FAE  6405C80A           [146] self       21  21  288  ; 2066713391
1FB2  62050001           [147] call       21  2   0  
1FB6  22850000           [148] call       20  0   2  
fail op	9
1FBA  4905000A           [149] settable   21  20  0  
1FBE  18450000           [150] test       20      1    ; to [152] if false
1FC2  1A400080           [151] jmp        2            ; to [154]
1FC6  58050000           [152] test       21      0    ; to [154] if true
1FCA  1A000C80           [153] jmp        49           ; to [203]
1FCE  18050000           [154] test       20      0    ; to [156] if true
1FD2  1A400180           [155] jmp        6            ; to [162]
1FD6  9D850100           [156] getglobal  22  6        ; 1074689893
1FDA  DD050000           [157] getglobal  23  0        ; gRegion
1FDE  E405C80B           [158] self       23  23  288  ; 2066713391
1FE2  E2050001           [159] call       23  2   0  
1FE6  A2850000           [160] call       22  0   2  
1FEA  1205000B           [161] move       20  22     
1FEE  18450000           [162] test       20      1    ; to [164] if false
1FF2  1A400180           [163] jmp        6            ; to [170]
1FF6  9D850100           [164] getglobal  22  6        ; 1074689893
1FFA  DD050000           [165] getglobal  23  0        ; gRegion
1FFE  E405C80B           [166] self       23  23  288  ; 2066713391
2002  E2050001           [167] call       23  2   0  
2006  A2850000           [168] call       22  0   2  
fail op	9
200A  4905000B           [169] settable   21  22  0  
200E  9D050000           [170] getglobal  22  0        ; gRegion
2012  A445480B           [171] self       22  22  289  ; -1520831144
2016  A2850001           [172] call       22  2   2  
201A  98450000           [173] test       22      1    ; to [175] if false
201E  1AC00580           [174] jmp        24           ; to [199]
2022  9D050000           [175] getglobal  22  0        ; gRegion
2026  A445400B           [176] self       22  22  257  ; -2071158816
202A  A2850001           [177] call       22  2   2  
202E  9200000B           [178] move       2   22     
2032  9D050700           [179] getglobal  22  28       ; 1672515847
2036  D2050001           [180] move       23  2      
203A  A2050101           [181] call       22  2   4  
203E  1AC00080           [182] jmp        4            ; to [187]
2042  E486480D           [183] self       27  26  290  ; 2109594123
2046  57070000           [184] loadbool   29  0   0    ; false
204A  97078000           [185] loadbool   30  1   0    ; true
204E  E2460002           [186] call       27  4   1  
2052  96850000           [187] tforloop   22      2    ; to [189] if exit
2056  1A40FE7F           [188] jmp        -6           ; to [183]
205A  DD060700           [189] getglobal  27  28       ; 1672515847
205E  12078000           [190] move       28  1      
2062  E2060101           [191] call       27  2   4  
2066  1AC00080           [192] jmp        4            ; to [197]
206A  2488C80F           [193] self       32  31  290  ; 2109594123
206E  97088000           [194] loadbool   34  1   0    ; true
2072  D7088000           [195] loadbool   35  1   0    ; true
2076  22480002           [196] call       32  4   1  
207A  D6860000           [197] tforloop   27      2    ; to [199] if exit
207E  1A40FE7F           [198] jmp        -6           ; to [193]
2082  1DC80800           [199] getglobal  32  35       ; 538022378
2086  59080200           [200] loadk      33  8        ; 0
208A  22480001           [201] call       32  2   1  
208E  1A80F27F           [202] jmp        -53          ; to [150]
2092  1D080000           [203] getglobal  32  0        ; gRegion
2096  24484010           [204] self       32  32  257  ; -2071158816
209A  22880001           [205] call       32  2   2  
209E  92000010           [206] move       2   32     
20A2  1D080700           [207] getglobal  32  28       ; 1672515847
20A6  52080001           [208] move       33  2      
20AA  22080101           [209] call       32  2   4  
20AE  1AC00080           [210] jmp        4            ; to [215]
20B2  64894812           [211] self       37  36  290  ; 2109594123
20B6  D7098000           [212] loadbool   39  1   0    ; true
20BA  170A8000           [213] loadbool   40  1   0    ; true
20BE  62490002           [214] call       37  4   1  
20C2  16880000           [215] tforloop   32      2    ; to [217] if exit
20C6  1A40FE7F           [216] jmp        -6           ; to [211]
20CA  1E008000           [217] return     0   1      
                         * constants:
20CE  24                 sizek (36)
20CF  04                 const type 4
20D0  08                 string size (8)
20D1  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
20D9  01                 const type 3
20DA  E09F8C84           const [1]: (-2071158816)
20DE  01                 const type 3
20DF  9FE1FB48           const [2]: (1224466847)
20E3  04                 const type 4
20E4  01                 string size (0)
                         const [3]: ""
20E6  04                 const type 4
20E7  11                 string size (17)
20E8  674D61746368696E+  "gMatchin"
20F0  6753657276696365+  "gService"
20F8  00                 "\0"
                         const [4]: "gMatchingService"
20F9  01                 const type 3
20FA  4636E0D5           const [5]: (-706726330)
20FE  01                 const type 3
20FF  65770E40           const [6]: (1074689893)
2103  01                 const type 3
2104  E91C817E           const [7]: (2122390761)
2108  03                 const type 3
2109  00000000           const [8]: (0)
210D  03                 const type 3
210E  0000803F           const [9]: (0)
2112  01                 const type 3
2113  DD8258DE           const [10]: (-564624675)
2117  01                 const type 3
2118  F9284A14           const [11]: (340404473)
211C  01                 const type 3
211D  6B25B193           const [12]: (-1817107093)
2121  04                 const type 4
2122  0B                 string size (11)
2123  486F7374206E616D+  "Host nam"
212B  652000             "e \0"
                         const [13]: "Host name "
212E  04                 const type 4
212F  0F                 string size (15)
2130  4E756D2061766174+  "Num avat"
2138  617273203D2000     "ars = \0"
                         const [14]: "Num avatars = "
213F  01                 const type 3
2140  BCD6AE9F           const [15]: (-1615931716)
2144  01                 const type 3
2145  B63E883D           const [16]: (1032339126)
2149  01                 const type 3
214A  1A4B27EC           const [17]: (-332969190)
214E  04                 const type 4
214F  06                 string size (6)
2150  54656E6E6F00       "Tenno\0"
                         const [18]: "Tenno"
2156  04                 const type 4
2157  06                 string size (6)
2158  7461626C6500       "table\0"
                         const [19]: "table"
215E  01                 const type 3
215F  9D0C45E6           const [20]: (-431682403)
2163  04                 const type 4
2164  13                 string size (19)
2165  48494444454E5F50+  "HIDDEN_P"
216D  4C415945525F4E41+  "LAYER_NA"
2175  4D4500             "ME\0"
                         const [21]: "HIDDEN_PLAYER_NAME"
2178  04                 const type 4
2179  05                 string size (5)
217A  6E616D6500         "name\0"
                         const [22]: "name"
217F  04                 const type 4
2180  07                 string size (7)
2181  61766174617200     "avatar\0"
                         const [23]: "avatar"
2188  04                 const type 4
2189  07                 string size (7)
218A  54656E6E6F4200     "TennoB\0"
                         const [24]: "TennoB"
2191  04                 const type 4
2192  07                 string size (7)
2193  54656E6E6F4300     "TennoC\0"
                         const [25]: "TennoC"
219A  04                 const type 4
219B  07                 string size (7)
219C  54656E6E6F4400     "TennoD\0"
                         const [26]: "TennoD"
21A3  01                 const type 3
21A4  1080C5A5           const [27]: (-1513783280)
21A8  01                 const type 3
21A9  0791B063           const [28]: (1672515847)
21AD  04                 const type 4
21AE  03                 string size (3)
21AF  5F5400             "_T\0"
                         const [29]: "_T"
21B2  04                 const type 4
21B3  17                 string size (23)
21B4  77696E6E696E6743+  "winningC"
21BC  696E656D61746963+  "inematic"
21C4  506C6179657200     "Player\0"
                         const [30]: "winningCinematicPlayer"
21CB  04                 const type 4
21CC  16                 string size (22)
21CD  6C6F73696E674369+  "losingCi"
21D5  6E656D6174696350+  "nematicP"
21DD  6C6179657200       "layer\0"
                         const [31]: "losingCinematicPlayer"
21E3  01                 const type 3
21E4  2F8B2F7B           const [32]: (2066713391)
21E8  01                 const type 3
21E9  58F559A5           const [33]: (-1520831144)
21ED  01                 const type 3
21EE  0BDABD7D           const [34]: (2109594123)
21F2  01                 const type 3
21F3  EA911120           const [35]: (538022378)
                         * functions:
21F7  01                 sizep (1)
                         
21F8                     ** function [0] definition (level 3)
                         ** start of function **
21F8  00                 string size (0)
                         source name: (none)
21FA  02                 line defined (342)
21FB  D6                 last line defined (342)
21FC  02                 nups (0)
21FD  00                 numparams (2)
21FE  02                 is_vararg (0)
21FF  00                 maxstacksize (4)
                         * code:
2201  08                 sizecode (8)
2202  8E004000           [1] gettable   2   0   256  ; "name"
2206  CE00C000           [2] gettable   3   1   256  ; "name"
fail op	21
220A  55C00001           [3] concat     1   2   3  
220E  1A000080           [4] jmp        1            ; to [6]
2212  97400000           [5] loadbool   2   0   1    ; false, to [7]
2216  97008000           [6] loadbool   2   1   0    ; true
221A  9E000001           [7] return     2   2      
221E  1E008000           [8] return     0   1      
                         * constants:
2222  01                 sizek (1)
2223  04                 const type 4
2224  05                 string size (5)
2225  6E616D6500         "name\0"
                         const [0]: "name"
                         * functions:
222A  00                 sizep (0)
                         * lines:
222B  08                 sizelineinfo (8)
                         [pc] (line)
222C  56                 [1] (86)
222D  01                 [2] (86)
222E  00                 [3] (86)
222F  00                 [4] (86)
2230  56                 [5] (86)
2231  01                 [6] (86)
2232  00                 [7] (86)
2233  00                 [8] (86)
                         * locals:
224C  00                 sizelocvars (0)
                         * upvalues:
224D  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
224F  01                 sizelineinfo (217)
                         [pc] (line)
2250  31                 [001] (49)
2251  01                 [002] (51)
2252  00                 [003] (53)
2253  00                 [004] (53)
2254  33                 [005] (53)
2255  01                 [006] (54)
2256  00                 [007] (54)
2257  00                 [008] (54)
2258  35                 [009] (57)
2259  01                 [010] (58)
225A  00                 [011] (58)
225B  00                 [012] (58)
225C  35                 [013] (59)
225D  01                 [014] (59)
225E  00                 [015] (59)
225F  00                 [016] (59)
2260  35                 [017] (59)
2261  01                 [018] (60)
2262  00                 [019] (60)
2263  00                 [020] (60)
2264  36                 [021] (60)
2265  01                 [022] (61)
2266  00                 [023] (61)
2267  00                 [024] (61)
2268  36                 [025] (62)
2269  01                 [026] (62)
226A  00                 [027] (62)
226B  00                 [028] (62)
226C  36                 [029] (62)
226D  01                 [030] (62)
226E  00                 [031] (65)
226F  00                 [032] (65)
2270  39                 [033] (65)
2271  01                 [034] (65)
2272  00                 [035] (65)
2273  00                 [036] (67)
2274  3A                 [037] (67)
2275  01                 [038] (67)
2276  00                 [039] (67)
2277  00                 [040] (67)
2278  3A                 [041] (67)
2279  01                 [042] (67)
227A  00                 [043] (67)
227B  00                 [044] (69)
227C  3A                 [045] (69)
227D  01                 [046] (69)
227E  00                 [047] (69)
227F  00                 [048] (69)
2280  3B                 [049] (69)
2281  01                 [050] (69)
2282  00                 [051] (71)
2283  00                 [052] (71)
2284  3B                 [053] (71)
2285  01                 [054] (71)
2286  00                 [055] (72)
2287  00                 [056] (73)
2288  3B                 [057] (74)
2289  01                 [058] (74)
228A  00                 [059] (75)
228B  00                 [060] (75)
228C  3B                 [061] (76)
228D  01                 [062] (76)
228E  00                 [063] (76)
228F  00                 [064] (76)
2290  3B                 [065] (76)
2291  01                 [066] (76)
2292  00                 [067] (77)
2293  00                 [068] (77)
2294  3C                 [069] (77)
2295  01                 [070] (77)
2296  00                 [071] (77)
2297  00                 [072] (77)
2298  3C                 [073] (78)
2299  01                 [074] (78)
229A  00                 [075] (78)
229B  00                 [076] (78)
229C  3C                 [077] (79)
229D  01                 [078] (79)
229E  00                 [079] (79)
229F  00                 [080] (79)
22A0  3C                 [081] (79)
22A1  01                 [082] (79)
22A2  00                 [083] (79)
22A3  00                 [084] (71)
22A4  3D                 [085] (84)
22A5  01                 [086] (84)
22A6  00                 [087] (84)
22A7  00                 [088] (84)
22A8  3D                 [089] (84)
22A9  01                 [090] (84)
22AA  00                 [091] (84)
22AB  00                 [092] (84)
22AC  3D                 [093] (84)
22AD  01                 [094] (84)
22AE  00                 [095] (84)
22AF  00                 [096] (85)
22B0  3E                 [097] (86)
22B1  01                 [098] (86)
22B2  00                 [099] (86)
22B3  00                 [100] (86)
22B4  3E                 [101] (86)
22B5  01                 [102] (87)
22B6  00                 [103] (87)
22B7  00                 [104] (87)
22B8  3E                 [105] (87)
22B9  01                 [106] (88)
22BA  00                 [107] (88)
22BB  00                 [108] (88)
22BC  3E                 [109] (88)
22BD  01                 [110] (89)
22BE  00                 [111] (89)
22BF  00                 [112] (89)
22C0  3E                 [113] (89)
22C1  01                 [114] (89)
22C2  00                 [115] (90)
22C3  00                 [116] (87)
22C4  3E                 [117] (90)
22C5  01                 [118] (94)
22C6  00                 [119] (94)
22C7  00                 [120] (94)
22C8  41                 [121] (94)
22C9  01                 [122] (94)
22CA  00                 [123] (94)
22CB  00                 [124] (95)
22CC  41                 [125] (95)
22CD  01                 [126] (95)
22CE  00                 [127] (95)
22CF  00                 [128] (95)
22D0  41                 [129] (95)
22D1  01                 [130] (95)
22D2  00                 [131] (98)
22D3  00                 [132] (98)
22D4  41                 [133] (98)
22D5  01                 [134] (98)
22D6  00                 [135] (98)
22D7  00                 [136] (98)
22D8  41                 [137] (99)
22D9  01                 [138] (99)
22DA  00                 [139] (99)
22DB  00                 [140] (99)
22DC  43                 [141] (99)
22DD  01                 [142] (99)
22DE  00                 [143] (99)
22DF  00                 [144] (103)
22E0  43                 [145] (103)
22E1  01                 [146] (103)
22E2  00                 [147] (103)
22E3  00                 [148] (103)
22E4  43                 [149] (104)
22E5  01                 [150] (105)
22E6  00                 [151] (105)
22E7  00                 [152] (105)
22E8  43                 [153] (105)
22E9  01                 [154] (106)
22EA  00                 [155] (106)
22EB  00                 [156] (107)
22EC  43                 [157] (107)
22ED  01                 [158] (107)
22EE  00                 [159] (107)
22EF  00                 [160] (107)
22F0  43                 [161] (107)
22F1  01                 [162] (109)
22F2  00                 [163] (109)
22F3  00                 [164] (110)
22F4  43                 [165] (110)
22F5  01                 [166] (110)
22F6  00                 [167] (110)
22F7  00                 [168] (110)
22F8  43                 [169] (110)
22F9  01                 [170] (113)
22FA  00                 [171] (113)
22FB  00                 [172] (113)
22FC  45                 [173] (113)
22FD  01                 [174] (113)
22FE  00                 [175] (115)
22FF  00                 [176] (115)
2300  45                 [177] (115)
2301  01                 [178] (115)
2302  00                 [179] (117)
2303  00                 [180] (117)
2304  45                 [181] (117)
2305  01                 [182] (117)
2306  00                 [183] (118)
2307  00                 [184] (118)
2308  45                 [185] (118)
2309  01                 [186] (118)
230A  00                 [187] (117)
230B  00                 [188] (118)
230C  45                 [189] (121)
230D  01                 [190] (121)
230E  00                 [191] (121)
230F  00                 [192] (121)
2310  45                 [193] (122)
2311  01                 [194] (122)
2312  00                 [195] (122)
2313  00                 [196] (122)
2314  45                 [197] (121)
2315  01                 [198] (122)
2316  00                 [199] (126)
2317  00                 [200] (126)
2318  47                 [201] (126)
2319  01                 [202] (126)
231A  00                 [203] (-127)
231B  00                 [204] (-127)
231C  47                 [205] (-127)
231D  01                 [206] (-127)
231E  00                 [207] (-126)
231F  00                 [208] (-126)
2320  47                 [209] (-126)
2321  01                 [210] (-126)
2322  00                 [211] (-125)
2323  00                 [212] (-125)
2324  47                 [213] (-125)
2325  01                 [214] (-125)
2326  00                 [215] (-126)
2327  00                 [216] (-125)
2328  48                 [217] (-122)
                         * locals:
25B4  00                 sizelocvars (0)
                         * upvalues:
25B5  00                 sizeupvalues (0)
                         ** end of function **

                         
25B6                     ** function [7] definition (level 2)
                         ** start of function **
25B6  00                 string size (0)
                         source name: (none)
25B8  03                 line defined (393)
25B9  8E                 last line defined (398)
25BA  03                 nups (0)
25BB  00                 numparams (1)
25BC  01                 is_vararg (0)
25BD  00                 maxstacksize (4)
                         * code:
25BF  09                 sizecode (9)
25C0  5D000000           [1] getglobal  1   0        ; gRegion
25C4  6440C000           [2] self       1   1   257  ; -2071158816
25C8  62800001           [3] call       1   2   2  
25CC  8A008000           [4] len        2   1      
fail op	21
25D0  15804001           [5] concat     0   2   258
25D4  1A400080           [6] jmp        2            ; to [9]
25D8  A4C04000           [7] self       2   0   259  ; 675444810
25DC  A2400001           [8] call       2   2   1  
25E0  1E008000           [9] return     0   1      
                         * constants:
25E4  04                 sizek (4)
25E5  04                 const type 4
25E6  08                 string size (8)
25E7  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
25EF  01                 const type 3
25F0  E09F8C84           const [1]: (-2071158816)
25F4  03                 const type 3
25F5  00000040           const [2]: (0)
25F9  01                 const type 3
25FA  4A784228           const [3]: (675444810)
                         * functions:
25FE  00                 sizep (0)
                         * lines:
25FF  09                 sizelineinfo (9)
                         [pc] (line)
2600  8A                 [1] (-118)
2601  01                 [2] (-118)
2602  00                 [3] (-118)
2603  00                 [4] (-117)
2604  8A                 [5] (-117)
2605  01                 [6] (-117)
2606  00                 [7] (-116)
2607  00                 [8] (-116)
2608  8A                 [9] (-114)
                         * locals:
2624  00                 sizelocvars (0)
                         * upvalues:
2625  00                 sizeupvalues (0)
                         ** end of function **

                         
2626                     ** function [8] definition (level 2)
                         ** start of function **
2626  00                 string size (0)
                         source name: (none)
2628  03                 line defined (400)
2629  94                 last line defined (404)
262A  03                 nups (0)
262B  00                 numparams (0)
262C  00                 is_vararg (0)
262D  00                 maxstacksize (5)
                         * code:
262F  09                 sizecode (9)
2630  1D000000           [1] getglobal  0   0        ; gRegion
2634  24404000           [2] self       0   0   257  ; -774964848
2638  22800001           [3] call       0   2   2  
263C  64804000           [4] self       1   0   258  ; 537471347
2640  62800001           [5] call       1   2   2  
2644  A4C0C000           [6] self       2   1   259  ; -110386376
2648  17018000           [7] loadbool   4   1   0    ; true
264C  A2408001           [8] call       2   3   1  
2650  1E008000           [9] return     0   1      
                         * constants:
2654  04                 sizek (4)
2655  04                 const type 4
2656  08                 string size (8)
2657  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
265F  01                 const type 3
2660  90F9CED1           const [1]: (-774964848)
2664  01                 const type 3
2665  73290920           const [2]: (537471347)
2669  01                 const type 3
266A  38A36BF9           const [3]: (-110386376)
                         * functions:
266E  00                 sizep (0)
                         * lines:
266F  09                 sizelineinfo (9)
                         [pc] (line)
2670  91                 [1] (-111)
2671  01                 [2] (-111)
2672  00                 [3] (-111)
2673  00                 [4] (-110)
2674  91                 [5] (-110)
2675  01                 [6] (-109)
2676  00                 [7] (-109)
2677  00                 [8] (-109)
2678  91                 [9] (-108)
                         * locals:
2694  00                 sizelocvars (0)
                         * upvalues:
2695  00                 sizeupvalues (0)
                         ** end of function **

                         
2696                     ** function [9] definition (level 2)
                         ** start of function **
2696  00                 string size (0)
                         source name: (none)
2698  03                 line defined (406)
2699  8C                 last line defined (524)
269A  04                 nups (0)
269B  00                 numparams (0)
269C  00                 is_vararg (0)
269D  00                 maxstacksize (47)
                         * code:
26A0  02                 sizecode (293)
26A1  4B000000           [001] newtable   1   0   0    ; array=0, hash=0
26A5  8B000000           [002] newtable   2   0   0    ; array=0, hash=0
26A9  DD000000           [003] getglobal  3   0        ; gRegion
26AD  E440C001           [004] self       3   3   257  ; 1224466847
26B1  E2800001           [005] call       3   2   2  
26B5  0B010000           [006] newtable   4   0   0    ; array=0, hash=0
26B9  4B010000           [007] newtable   5   0   0    ; array=0, hash=0
26BD  99810000           [008] loadk      6   2        ; 0
26C1  CA018001           [009] len        7   3      
26C5  19820000           [010] loadk      8   2        ; 0
26C9  90410380           [011] forprep    6   14       ; to [26]
26CD  9DC20000           [012] getglobal  10  3        ; table
26D1  8E024105           [013] gettable   10  10  260  ; -431682403
26D5  D2020002           [014] move       11  4      
26D9  0E438201           [015] gettable   12  3   9  
26DD  24434106           [016] self       12  12  261  ; -1813551355
26E1  22030001           [017] call       12  2   0  
26E5  A2420000           [018] call       10  0   1  
26E9  9DC20000           [019] getglobal  10  3        ; table
26ED  8E024105           [020] gettable   10  10  260  ; -431682403
26F1  D2028002           [021] move       11  5      
26F5  0E438201           [022] gettable   12  3   9  
26F9  24834106           [023] self       12  12  262  ; -1888201767
26FD  22030001           [024] call       12  2   0  
2701  A2420000           [025] call       10  0   1  
2705  9401FC7F           [026] forloop    6   -15      ; to [12] if loop
2709  9DC20100           [027] getglobal  10  7        ; 1074689893
270D  D2020002           [028] move       11  4      
2711  A2820001           [029] call       10  2   2  
2715  98420000           [030] test       10      1    ; to [32] if false
2719  1A802480           [031] jmp        147          ; to [179]
271D  8A020002           [032] len        10  4      
fail op	21
2721  15800284           [033] concat     0   264 10 
2725  1AC02380           [034] jmp        144          ; to [179]
2729  9DC20100           [035] getglobal  10  7        ; 1074689893
272D  D2028002           [036] move       11  5      
2731  A2820001           [037] call       10  2   2  
2735  98420000           [038] test       10      1    ; to [40] if false
2739  1A000780           [039] jmp        29           ; to [69]
273D  8A028002           [040] len        10  5      
fail op	21
2741  15800284           [041] concat     0   264 10 
2745  1A400680           [042] jmp        26           ; to [69]
2749  99820000           [043] loadk      10  2        ; 0
274D  CA028002           [044] len        11  5      
2751  19830000           [045] loadk      12  2        ; 0
2755  90020580           [046] forprep    10  21       ; to [68]
2759  9DC30100           [047] getglobal  14  7        ; 1074689893
275D  CE438302           [048] gettable   15  5   13 
2761  A2830001           [049] call       14  2   2  
2765  98430000           [050] test       14      1    ; to [52] if false
2769  1AC00380           [051] jmp        16           ; to [68]
276D  8E438302           [052] gettable   14  5   13 
2771  A4434207           [053] self       14  14  265  ; 1032339126
2775  1D840200           [054] getglobal  16  10       ; -332969190
2779  59C40200           [055] loadk      17  11       ; "NotTenno"
277D  22040001           [056] call       16  2   0  
2781  A2430000           [057] call       14  0   1  
2785  8E438302           [058] gettable   14  5   13 
2789  A4034307           [059] self       14  14  268  ; 2109594123
278D  17040000           [060] loadbool   16  0   0    ; false
2791  57048000           [061] loadbool   17  1   0    ; true
2795  A2430002           [062] call       14  4   1  
2799  9DC30000           [063] getglobal  14  3        ; table
279D  8E034107           [064] gettable   14  14  260  ; -431682403
27A1  D2030001           [065] move       15  2      
27A5  0E448302           [066] gettable   16  5   13 
27A9  A2438001           [067] call       14  3   1  
27AD  9442FA7F           [068] forloop    10  -22      ; to [47] if loop
27B1  97030000           [069] loadbool   14  0   0    ; false
27B5  D9830000           [070] loadk      15  2        ; 0
27B9  0A040002           [071] len        16  4      
27BD  59840000           [072] loadk      17  2        ; 0
27C1  D0C31380           [073] forprep    15  80       ; to [154]
27C5  DDC40100           [074] getglobal  19  7        ; 1074689893
27C9  0E850402           [075] gettable   20  4   18 
27CD  E2840001           [076] call       19  2   2  
27D1  D8440000           [077] test       19      1    ; to [79] if false
27D5  1A801280           [078] jmp        75           ; to [154]
27D9  CE840402           [079] gettable   19  4   18 
27DD  E444C309           [080] self       19  19  269  ; -717859730
27E1  E2840001           [081] call       19  2   2  
27E5  D8040000           [082] test       19      0    ; to [84] if true
27E9  1A800880           [083] jmp        35           ; to [119]
27ED  CE840402           [084] gettable   19  4   18 
27F1  E484C309           [085] self       19  19  270  ; 1511086594
27F5  E2840001           [086] call       19  2   2  
27F9  D8040000           [087] test       19      0    ; to [89] if true
27FD  1A400480           [088] jmp        18           ; to [107]
2801  97038000           [089] loadbool   14  1   0    ; true
2805  CE840402           [090] gettable   19  4   18 
2809  E444C209           [091] self       19  19  265  ; 1032339126
280D  5D850200           [092] getglobal  21  10       ; -332969190
2811  99C50200           [093] loadk      22  11       ; "NotTenno"
2815  62050001           [094] call       21  2   0  
2819  E2440000           [095] call       19  0   1  
281D  CE840402           [096] gettable   19  4   18 
2821  E404C309           [097] self       19  19  268  ; 2109594123
2825  57050000           [098] loadbool   21  0   0    ; false
2829  97058000           [099] loadbool   22  1   0    ; true
282D  E2440002           [100] call       19  4   1  
2831  DDC40000           [101] getglobal  19  3        ; table
2835  CE04C109           [102] gettable   19  19  260  ; -431682403
2839  12050001           [103] move       20  2      
283D  4E850402           [104] gettable   21  4   18 
2841  E2448001           [105] call       19  3   1  
2845  1AC00680           [106] jmp        28           ; to [135]
2849  0E800402           [107] gettable   0   4   18 
284D  E4444200           [108] self       19  0   265  ; 1032339126
2851  5D850200           [109] getglobal  21  10       ; -332969190
2855  99C50300           [110] loadk      22  15       ; "Tenno"
2859  62050001           [111] call       21  2   0  
285D  E2440000           [112] call       19  0   1  
2861  DDC40000           [113] getglobal  19  3        ; table
2865  CE04C109           [114] gettable   19  19  260  ; -431682403
2869  12058000           [115] move       20  1      
286D  4E850402           [116] gettable   21  4   18 
2871  E2448001           [117] call       19  3   1  
2875  1AC00380           [118] jmp        16           ; to [135]
2879  CE840402           [119] gettable   19  4   18 
287D  E444C209           [120] self       19  19  265  ; 1032339126
2881  5D850200           [121] getglobal  21  10       ; -332969190
2885  99C50200           [122] loadk      22  11       ; "NotTenno"
2889  62050001           [123] call       21  2   0  
288D  E2440000           [124] call       19  0   1  
2891  CE840402           [125] gettable   19  4   18 
2895  E404C309           [126] self       19  19  268  ; 2109594123
2899  57050000           [127] loadbool   21  0   0    ; false
289D  97058000           [128] loadbool   22  1   0    ; true
28A1  E2440002           [129] call       19  4   1  
28A5  DDC40000           [130] getglobal  19  3        ; table
28A9  CE04C109           [131] gettable   19  19  260  ; -431682403
28AD  12050001           [132] move       20  2      
28B1  4E850402           [133] gettable   21  4   18 
28B5  E2448001           [134] call       19  3   1  
28B9  CE840402           [135] gettable   19  4   18 
28BD  E404C409           [136] self       19  19  272  ; -1917464545
28C1  E2840001           [137] call       19  2   2  
28C5  E444C409           [138] self       19  19  273  ; 819640984
28C9  E2840001           [139] call       19  2   2  
28CD  1DC50100           [140] getglobal  20  7        ; 1074689893
28D1  52058009           [141] move       21  19     
28D5  22850001           [142] call       20  2   2  
28D9  18450000           [143] test       20      1    ; to [145] if false
28DD  1A000280           [144] jmp        9            ; to [154]
28E1  2405C309           [145] self       20  19  268  ; 2109594123
28E5  97050000           [146] loadbool   22  0   0    ; false
28E9  D7058000           [147] loadbool   23  1   0    ; true
28ED  22450002           [148] call       20  4   1  
28F1  1DC50000           [149] getglobal  20  3        ; table
28F5  0E05410A           [150] gettable   20  20  260  ; -431682403
28F9  52050001           [151] move       21  2      
28FD  92058009           [152] move       22  19     
2901  22458001           [153] call       20  3   1  
2905  D483EB7F           [154] forloop    15  -81      ; to [74] if loop
2909  98030000           [155] test       14      0    ; to [157] if true
290D  1A400580           [156] jmp        22           ; to [179]
2911  19850000           [157] loadk      20  2        ; 0
2915  4A050002           [158] len        21  4      
2919  99850000           [159] loadk      22  2        ; 0
291D  10050480           [160] forprep    20  17       ; to [178]
2921  0EC60502           [161] gettable   24  4   23 
2925  2486430C           [162] self       24  24  270  ; 1511086594
2929  22860001           [163] call       24  2   2  
292D  18460000           [164] test       24      1    ; to [166] if false
2931  1AC00280           [165] jmp        12           ; to [178]
2935  0EC00502           [166] gettable   0   4   23 
2939  24464200           [167] self       24  0   265  ; 1032339126
293D  9D860200           [168] getglobal  26  10       ; -332969190
2941  D9C60300           [169] loadk      27  15       ; "Tenno"
2945  A2060001           [170] call       26  2   0  
2949  22460000           [171] call       24  0   1  
294D  1DC60000           [172] getglobal  24  3        ; table
2951  0E06410C           [173] gettable   24  24  260  ; -431682403
2955  52068000           [174] move       25  1      
2959  8EC60502           [175] gettable   26  4   23 
295D  22468001           [176] call       24  3   1  
2961  1A000080           [177] jmp        1            ; to [179]
2965  1445FB7F           [178] forloop    20  -18      ; to [161] if loop
2969  1D060000           [179] getglobal  24  0        ; gRegion
296D  2486440C           [180] self       24  24  274  ; -1520831144
2971  22860001           [181] call       24  2   2  
2975  18460000           [182] test       24      1    ; to [184] if false
2979  1A000F80           [183] jmp        61           ; to [245]
297D  1DC60100           [184] getglobal  24  7        ; 1074689893
2981  5D060000           [185] getglobal  25  0        ; gRegion
2985  64C6C40C           [186] self       25  25  275  ; 2066713391
2989  62060001           [187] call       25  2   0  
298D  22860000           [188] call       24  0   2  
fail op	9
2991  4906000C           [189] settable   25  24  0  
2995  18460000           [190] test       24      1    ; to [192] if false
2999  1A400080           [191] jmp        2            ; to [194]
299D  58060000           [192] test       25      0    ; to [194] if true
29A1  1A001480           [193] jmp        81           ; to [275]
29A5  18060000           [194] test       24      0    ; to [196] if true
29A9  1A400180           [195] jmp        6            ; to [202]
29AD  9DC60100           [196] getglobal  26  7        ; 1074689893
29B1  DD060000           [197] getglobal  27  0        ; gRegion
29B5  E4C6C40D           [198] self       27  27  275  ; 2066713391
29B9  E2060001           [199] call       27  2   0  
29BD  A2860000           [200] call       26  0   2  
29C1  1206000D           [201] move       24  26     
29C5  18460000           [202] test       24      1    ; to [204] if false
29C9  1A400180           [203] jmp        6            ; to [210]
29CD  9DC60100           [204] getglobal  26  7        ; 1074689893
29D1  DD060000           [205] getglobal  27  0        ; gRegion
29D5  E4C6C40D           [206] self       27  27  275  ; 2066713391
29D9  E2060001           [207] call       27  2   0  
29DD  A2860000           [208] call       26  0   2  
fail op	9
29E1  4906000D           [209] settable   25  26  0  
29E5  9D060500           [210] getglobal  26  20       ; 1672515847
29E9  D2060001           [211] move       27  2      
29ED  A2060101           [212] call       26  2   4  
29F1  1A000280           [213] jmp        9            ; to [223]
29F5  DDC70100           [214] getglobal  31  7        ; 1074689893
29F9  1208000F           [215] move       32  30     
29FD  E2870001           [216] call       31  2   2  
2A01  D8470000           [217] test       31      1    ; to [219] if false
2A05  1AC00080           [218] jmp        4            ; to [223]
2A09  E407430F           [219] self       31  30  268  ; 2109594123
2A0D  57080000           [220] loadbool   33  0   0    ; false
2A11  97088000           [221] loadbool   34  1   0    ; true
2A15  E2470002           [222] call       31  4   1  
2A19  96860000           [223] tforloop   26      2    ; to [225] if exit
2A1D  1A00FD7F           [224] jmp        -11          ; to [214]
2A21  DD070500           [225] getglobal  31  20       ; 1672515847
2A25  12088000           [226] move       32  1      
2A29  E2070101           [227] call       31  2   4  
2A2D  1A000280           [228] jmp        9            ; to [238]
2A31  1DC90100           [229] getglobal  36  7        ; 1074689893
2A35  52098011           [230] move       37  35     
2A39  22890001           [231] call       36  2   2  
2A3D  18490000           [232] test       36      1    ; to [234] if false
2A41  1AC00080           [233] jmp        4            ; to [238]
2A45  2409C311           [234] self       36  35  268  ; 2109594123
2A49  97098000           [235] loadbool   38  1   0    ; true
2A4D  D7098000           [236] loadbool   39  1   0    ; true
2A51  22490002           [237] call       36  4   1  
2A55  D6870000           [238] tforloop   31      2    ; to [240] if exit
2A59  1A00FD7F           [239] jmp        -11          ; to [229]
2A5D  1D490500           [240] getglobal  36  21       ; 538022378
2A61  59090200           [241] loadk      37  8        ; 0
2A65  22490001           [242] call       36  2   1  
2A69  1A40F27F           [243] jmp        -54          ; to [190]
2A6D  1A400780           [244] jmp        30           ; to [275]
2A71  1DC90100           [245] getglobal  36  7        ; 1074689893
2A75  5D090000           [246] getglobal  37  0        ; gRegion
2A79  64C9C412           [247] self       37  37  275  ; 2066713391
2A7D  62090001           [248] call       37  2   0  
2A81  22890000           [249] call       36  0   2  
fail op	9
2A85  49090012           [250] settable   37  36  0  
2A89  18490000           [251] test       36      1    ; to [253] if false
2A8D  1A400080           [252] jmp        2            ; to [255]
2A91  58090000           [253] test       37      0    ; to [255] if true
2A95  1AC00480           [254] jmp        20           ; to [275]
2A99  18090000           [255] test       36      0    ; to [257] if true
2A9D  1A400180           [256] jmp        6            ; to [263]
2AA1  9DC90100           [257] getglobal  38  7        ; 1074689893
2AA5  DD090000           [258] getglobal  39  0        ; gRegion
2AA9  E4C9C413           [259] self       39  39  275  ; 2066713391
2AAD  E2090001           [260] call       39  2   0  
2AB1  A2890000           [261] call       38  0   2  
2AB5  12090013           [262] move       36  38     
2AB9  18490000           [263] test       36      1    ; to [265] if false
2ABD  1A400180           [264] jmp        6            ; to [271]
2AC1  9DC90100           [265] getglobal  38  7        ; 1074689893
2AC5  DD090000           [266] getglobal  39  0        ; gRegion
2AC9  E4C9C413           [267] self       39  39  275  ; 2066713391
2ACD  E2090001           [268] call       39  2   0  
2AD1  A2890000           [269] call       38  0   2  
fail op	9
2AD5  49090013           [270] settable   37  38  0  
2AD9  9D490500           [271] getglobal  38  21       ; 538022378
2ADD  D9090200           [272] loadk      39  8        ; 0
2AE1  A2490001           [273] call       38  2   1  
2AE5  1AC0F97F           [274] jmp        -24          ; to [251]
2AE9  9D890500           [275] getglobal  38  22       ; showHiddenAvatarsPostCin
2AED  98090000           [276] test       38      0    ; to [278] if true
2AF1  1A800380           [277] jmp        15           ; to [293]
2AF5  9D090500           [278] getglobal  38  20       ; 1672515847
2AF9  D2090001           [279] move       39  2      
2AFD  A2090101           [280] call       38  2   4  
2B01  1A000280           [281] jmp        9            ; to [291]
2B05  DDCA0100           [282] getglobal  43  7        ; 1074689893
2B09  120B0015           [283] move       44  42     
2B0D  E28A0001           [284] call       43  2   2  
2B11  D84A0000           [285] test       43      1    ; to [287] if false
2B15  1AC00080           [286] jmp        4            ; to [291]
2B19  E40A4315           [287] self       43  42  268  ; 2109594123
2B1D  570B8000           [288] loadbool   45  1   0    ; true
2B21  970B8000           [289] loadbool   46  1   0    ; true
2B25  E24A0002           [290] call       43  4   1  
2B29  96890000           [291] tforloop   38      2    ; to [293] if exit
2B2D  1A00FD7F           [292] jmp        -11          ; to [282]
2B31  1E008000           [293] return     0   1      
                         * constants:
2B35  17                 sizek (23)
2B36  04                 const type 4
2B37  08                 string size (8)
2B38  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
2B40  01                 const type 3
2B41  9FE1FB48           const [1]: (1224466847)
2B45  03                 const type 3
2B46  0000803F           const [2]: (0)
2B4A  04                 const type 4
2B4B  06                 string size (6)
2B4C  7461626C6500       "table\0"
                         const [3]: "table"
2B52  01                 const type 3
2B53  9D0C45E6           const [4]: (-431682403)
2B57  01                 const type 3
2B58  0567E793           const [5]: (-1813551355)
2B5C  01                 const type 3
2B5D  D953748F           const [6]: (-1888201767)
2B61  01                 const type 3
2B62  65770E40           const [7]: (1074689893)
2B66  03                 const type 3
2B67  00000000           const [8]: (0)
2B6B  01                 const type 3
2B6C  B63E883D           const [9]: (1032339126)
2B70  01                 const type 3
2B71  1A4B27EC           const [10]: (-332969190)
2B75  04                 const type 4
2B76  09                 string size (9)
2B77  4E6F7454656E6E6F+  "NotTenno"
2B7F  00                 "\0"
                         const [11]: "NotTenno"
2B80  01                 const type 3
2B81  0BDABD7D           const [12]: (2109594123)
2B85  01                 const type 3
2B86  6E5436D5           const [13]: (-717859730)
2B8A  01                 const type 3
2B8B  025A115A           const [14]: (1511086594)
2B8F  04                 const type 4
2B90  06                 string size (6)
2B91  54656E6E6F00       "Tenno\0"
                         const [15]: "Tenno"
2B97  01                 const type 3
2B98  1FD0B58D           const [16]: (-1917464545)
2B9C  01                 const type 3
2B9D  98BADA30           const [17]: (819640984)
2BA1  01                 const type 3
2BA2  58F559A5           const [18]: (-1520831144)
2BA6  01                 const type 3
2BA7  2F8B2F7B           const [19]: (2066713391)
2BAB  01                 const type 3
2BAC  0791B063           const [20]: (1672515847)
2BB0  01                 const type 3
2BB1  EA911120           const [21]: (538022378)
2BB5  04                 const type 4
2BB6  19                 string size (25)
2BB7  73686F7748696464+  "showHidd"
2BBF  656E417661746172+  "enAvatar"
2BC7  73506F737443696E+  "sPostCin"
2BCF  00                 "\0"
                         const [22]: "showHiddenAvatarsPostCin"
                         * functions:
2BD0  00                 sizep (0)
                         * lines:
2BD2  02                 sizelineinfo (293)
                         [pc] (line)
2BD3  99                 [001] (-103)
2BD4  01                 [002] (-102)
2BD5  00                 [003] (-98)
2BD6  00                 [004] (-98)
2BD7  9A                 [005] (-98)
2BD8  01                 [006] (-97)
2BD9  00                 [007] (-96)
2BDA  00                 [008] (-95)
2BDB  9E                 [009] (-95)
2BDC  01                 [010] (-95)
2BDD  00                 [011] (-95)
2BDE  00                 [012] (-94)
2BDF  9E                 [013] (-94)
2BE0  01                 [014] (-94)
2BE1  00                 [015] (-94)
2BE2  00                 [016] (-94)
2BE3  9E                 [017] (-94)
2BE4  01                 [018] (-94)
2BE5  00                 [019] (-93)
2BE6  00                 [020] (-93)
2BE7  9F                 [021] (-93)
2BE8  01                 [022] (-93)
2BE9  00                 [023] (-93)
2BEA  00                 [024] (-93)
2BEB  A0                 [025] (-93)
2BEC  01                 [026] (-95)
2BED  00                 [027] (-90)
2BEE  00                 [028] (-90)
2BEF  A1                 [029] (-90)
2BF0  01                 [030] (-90)
2BF1  00                 [031] (-90)
2BF2  00                 [032] (-90)
2BF3  A1                 [033] (-90)
2BF4  01                 [034] (-90)
2BF5  00                 [035] (-89)
2BF6  00                 [036] (-89)
2BF7  A1                 [037] (-89)
2BF8  01                 [038] (-89)
2BF9  00                 [039] (-89)
2BFA  00                 [040] (-89)
2BFB  A1                 [041] (-89)
2BFC  01                 [042] (-89)
2BFD  00                 [043] (-88)
2BFE  00                 [044] (-88)
2BFF  A2                 [045] (-88)
2C00  01                 [046] (-88)
2C01  00                 [047] (-87)
2C02  00                 [048] (-87)
2C03  A2                 [049] (-87)
2C04  01                 [050] (-87)
2C05  00                 [051] (-87)
2C06  00                 [052] (-86)
2C07  A2                 [053] (-86)
2C08  01                 [054] (-86)
2C09  00                 [055] (-86)
2C0A  00                 [056] (-86)
2C0B  A2                 [057] (-86)
2C0C  01                 [058] (-85)
2C0D  00                 [059] (-85)
2C0E  00                 [060] (-85)
2C0F  A2                 [061] (-85)
2C10  01                 [062] (-85)
2C11  00                 [063] (-84)
2C12  00                 [064] (-84)
2C13  A2                 [065] (-84)
2C14  01                 [066] (-84)
2C15  00                 [067] (-84)
2C16  00                 [068] (-88)
2C17  A2                 [069] (-79)
2C18  01                 [070] (-78)
2C19  00                 [071] (-78)
2C1A  00                 [072] (-78)
2C1B  A3                 [073] (-78)
2C1C  01                 [074] (-77)
2C1D  00                 [075] (-77)
2C1E  00                 [076] (-77)
2C1F  A3                 [077] (-77)
2C20  01                 [078] (-77)
2C21  00                 [079] (-76)
2C22  00                 [080] (-76)
2C23  A3                 [081] (-76)
2C24  01                 [082] (-76)
2C25  00                 [083] (-76)
2C26  00                 [084] (-75)
2C27  A3                 [085] (-75)
2C28  01                 [086] (-75)
2C29  00                 [087] (-75)
2C2A  00                 [088] (-75)
2C2B  A3                 [089] (-74)
2C2C  01                 [090] (-73)
2C2D  00                 [091] (-73)
2C2E  00                 [092] (-73)
2C2F  A3                 [093] (-73)
2C30  01                 [094] (-73)
2C31  00                 [095] (-73)
2C32  00                 [096] (-72)
2C33  A3                 [097] (-72)
2C34  01                 [098] (-72)
2C35  00                 [099] (-72)
2C36  00                 [100] (-72)
2C37  A1                 [101] (-71)
2C38  01                 [102] (-71)
2C39  00                 [103] (-71)
2C3A  00                 [104] (-71)
2C3B  A6                 [105] (-71)
2C3C  01                 [106] (-71)
2C3D  00                 [107] (-69)
2C3E  00                 [108] (-68)
2C3F  A6                 [109] (-68)
2C40  01                 [110] (-68)
2C41  00                 [111] (-68)
2C42  00                 [112] (-68)
2C43  A6                 [113] (-67)
2C44  01                 [114] (-67)
2C45  00                 [115] (-67)
2C46  00                 [116] (-67)
2C47  A6                 [117] (-67)
2C48  01                 [118] (-66)
2C49  00                 [119] (-64)
2C4A  00                 [120] (-64)
2C4B  A6                 [121] (-64)
2C4C  01                 [122] (-64)
2C4D  00                 [123] (-64)
2C4E  00                 [124] (-64)
2C4F  A6                 [125] (-63)
2C50  01                 [126] (-63)
2C51  00                 [127] (-63)
2C52  00                 [128] (-63)
2C53  A6                 [129] (-63)
2C54  01                 [130] (-62)
2C55  00                 [131] (-62)
2C56  00                 [132] (-62)
2C57  A6                 [133] (-62)
2C58  01                 [134] (-62)
2C59  00                 [135] (-58)
2C5A  00                 [136] (-58)
2C5B  A7                 [137] (-58)
2C5C  01                 [138] (-58)
2C5D  00                 [139] (-58)
2C5E  00                 [140] (-57)
2C5F  A7                 [141] (-57)
2C60  01                 [142] (-57)
2C61  00                 [143] (-57)
2C62  00                 [144] (-57)
2C63  A7                 [145] (-56)
2C64  01                 [146] (-56)
2C65  00                 [147] (-56)
2C66  00                 [148] (-56)
2C67  A7                 [149] (-55)
2C68  01                 [150] (-55)
2C69  00                 [151] (-55)
2C6A  00                 [152] (-55)
2C6B  A7                 [153] (-55)
2C6C  01                 [154] (-78)
2C6D  00                 [155] (-49)
2C6E  00                 [156] (-49)
2C6F  A7                 [157] (-48)
2C70  01                 [158] (-48)
2C71  00                 [159] (-48)
2C72  00                 [160] (-48)
2C73  A7                 [161] (-47)
2C74  01                 [162] (-47)
2C75  00                 [163] (-47)
2C76  00                 [164] (-47)
2C77  A7                 [165] (-47)
2C78  01                 [166] (-46)
2C79  00                 [167] (-45)
2C7A  00                 [168] (-45)
2C7B  A8                 [169] (-45)
2C7C  01                 [170] (-45)
2C7D  00                 [171] (-45)
2C7E  00                 [172] (-44)
2C7F  A8                 [173] (-44)
2C80  01                 [174] (-44)
2C81  00                 [175] (-44)
2C82  00                 [176] (-44)
2C83  A8                 [177] (-42)
2C84  01                 [178] (-48)
2C85  00                 [179] (-36)
2C86  00                 [180] (-36)
2C87  A8                 [181] (-36)
2C88  01                 [182] (-36)
2C89  00                 [183] (-36)
2C8A  00                 [184] (-34)
2C8B  A9                 [185] (-34)
2C8C  01                 [186] (-34)
2C8D  00                 [187] (-34)
2C8E  00                 [188] (-34)
2C8F  A9                 [189] (-33)
2C90  01                 [190] (-32)
2C91  00                 [191] (-32)
2C92  00                 [192] (-32)
2C93  A9                 [193] (-32)
2C94  01                 [194] (-31)
2C95  00                 [195] (-31)
2C96  00                 [196] (-30)
2C97  A9                 [197] (-30)
2C98  01                 [198] (-30)
2C99  00                 [199] (-30)
2C9A  00                 [200] (-30)
2C9B  A9                 [201] (-30)
2C9C  01                 [202] (-28)
2C9D  00                 [203] (-28)
2C9E  00                 [204] (-27)
2C9F  AA                 [205] (-27)
2CA0  01                 [206] (-27)
2CA1  00                 [207] (-27)
2CA2  00                 [208] (-27)
2CA3  AA                 [209] (-27)
2CA4  01                 [210] (-24)
2CA5  00                 [211] (-24)
2CA6  00                 [212] (-24)
2CA7  AA                 [213] (-24)
2CA8  01                 [214] (-23)
2CA9  00                 [215] (-23)
2CAA  00                 [216] (-23)
2CAB  AA                 [217] (-23)
2CAC  01                 [218] (-23)
2CAD  00                 [219] (-22)
2CAE  00                 [220] (-22)
2CAF  AA                 [221] (-22)
2CB0  01                 [222] (-22)
2CB1  00                 [223] (-24)
2CB2  00                 [224] (-21)
2CB3  AA                 [225] (-18)
2CB4  01                 [226] (-18)
2CB5  00                 [227] (-18)
2CB6  00                 [228] (-18)
2CB7  AB                 [229] (-17)
2CB8  01                 [230] (-17)
2CB9  00                 [231] (-17)
2CBA  00                 [232] (-17)
2CBB  AB                 [233] (-17)
2CBC  01                 [234] (-16)
2CBD  00                 [235] (-16)
2CBE  00                 [236] (-16)
2CBF  AB                 [237] (-16)
2CC0  01                 [238] (-18)
2CC1  00                 [239] (-15)
2CC2  00                 [240] (-12)
2CC3  AB                 [241] (-12)
2CC4  01                 [242] (-12)
2CC5  00                 [243] (-12)
2CC6  00                 [244] (-11)
2CC7  AB                 [245] (-9)
2CC8  01                 [246] (-9)
2CC9  00                 [247] (-9)
2CCA  00                 [248] (-9)
2CCB  AC                 [249] (-9)
2CCC  01                 [250] (-8)
2CCD  00                 [251] (-7)
2CCE  00                 [252] (-7)
2CCF  AC                 [253] (-7)
2CD0  01                 [254] (-7)
2CD1  00                 [255] (-6)
2CD2  00                 [256] (-6)
2CD3  AC                 [257] (-5)
2CD4  01                 [258] (-5)
2CD5  00                 [259] (-5)
2CD6  00                 [260] (-5)
2CD7  AC                 [261] (-5)
2CD8  01                 [262] (-5)
2CD9  00                 [263] (-3)
2CDA  00                 [264] (-3)
2CDB  AC                 [265] (-2)
2CDC  01                 [266] (-2)
2CDD  00                 [267] (-2)
2CDE  00                 [268] (-2)
2CDF  A8                 [269] (-2)
2CE0  01                 [270] (-2)
2CE1  00                 [271] (1)
2CE2  00                 [272] (1)
2CE3  B1                 [273] (1)
2CE4  01                 [274] (1)
2CE5  00                 [275] (5)
2CE6  00                 [276] (5)
2CE7  B2                 [277] (5)
2CE8  01                 [278] (6)
2CE9  00                 [279] (6)
2CEA  00                 [280] (6)
2CEB  B2                 [281] (6)
2CEC  01                 [282] (7)
2CED  00                 [283] (7)
2CEE  00                 [284] (7)
2CEF  B2                 [285] (7)
2CF0  01                 [286] (7)
2CF1  00                 [287] (8)
2CF2  00                 [288] (8)
2CF3  B2                 [289] (8)
2CF4  01                 [290] (8)
2CF5  00                 [291] (6)
2CF6  00                 [292] (9)
2CF7  B3                 [293] (12)
                         * locals:
3067  00                 sizelocvars (0)
                         * upvalues:
3068  00                 sizeupvalues (0)
                         ** end of function **

                         
3069                     ** function [10] definition (level 2)
                         ** start of function **
3069  00                 string size (0)
                         source name: (none)
306B  04                 line defined (526)
306C  90                 last line defined (528)
306D  04                 nups (0)
306E  00                 numparams (1)
306F  01                 is_vararg (0)
3070  00                 maxstacksize (7)
                         * code:
3072  0A                 sizecode (10)
3073  5D000000           [01] getglobal  1   0        ; gRegion
3077  6440C000           [02] self       1   1   257  ; -1110225722
307B  DD800000           [03] getglobal  3   2        ; ragdollType
307F  24C14000           [04] self       4   0   259  ; 1839670529
3083  22810001           [05] call       4   2   2  
3087  64014100           [06] self       5   0   260  ; -231049143
308B  62810001           [07] call       5   2   2  
308F  92010000           [08] move       6   0      
3093  62800003           [09] call       1   6   2  
3097  1E008000           [10] return     0   1      
                         * constants:
309B  05                 sizek (5)
309C  04                 const type 4
309D  08                 string size (8)
309E  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
30A6  01                 const type 3
30A7  C64CD3BD           const [1]: (-1110225722)
30AB  04                 const type 4
30AC  0C                 string size (12)
30AD  726167646F6C6C54+  "ragdollT"
30B5  79706500           "ype\0"
                         const [2]: "ragdollType"
30B9  01                 const type 3
30BA  0125A76D           const [3]: (1839670529)
30BE  01                 const type 3
30BF  49783AF2           const [4]: (-231049143)
                         * functions:
30C3  00                 sizep (0)
                         * lines:
30C4  0A                 sizelineinfo (10)
                         [pc] (line)
30C5  0F                 [01] (15)
30C6  02                 [02] (15)
30C7  00                 [03] (15)
30C8  00                 [04] (15)
30C9  0F                 [05] (15)
30CA  02                 [06] (15)
30CB  00                 [07] (15)
30CC  00                 [08] (15)
30CD  0F                 [09] (15)
30CE  02                 [10] (16)
                         * locals:
30ED  00                 sizelocvars (0)
                         * upvalues:
30EE  00                 sizeupvalues (0)
                         ** end of function **

                         
30EF                     ** function [11] definition (level 2)
                         ** start of function **
30EF  00                 string size (0)
                         source name: (none)
30F1  04                 line defined (530)
30F2  A8                 last line defined (552)
30F3  04                 nups (0)
30F4  00                 numparams (1)
30F5  01                 is_vararg (0)
30F6  00                 maxstacksize (16)
                         * code:
30F8  2E                 sizecode (46)
30F9  A4004000           [01] self       2   0   256  ; -1132033364
30FD  A2800001           [02] call       2   2   2  
3101  DD400000           [03] getglobal  3   1        ; 1074689893
3105  12010001           [04] move       4   2      
3109  E2800001           [05] call       3   2   2  
310D  D8400000           [06] test       3       1    ; to [8] if false
3111  1A000980           [07] jmp        37           ; to [45]
3115  D9800000           [08] loadk      3   2        ; 0
3119  0A010001           [09] len        4   2      
311D  59810000           [10] loadk      5   2        ; 0
3121  D0C00780           [11] forprep    3   32       ; to [44]
3125  CE810101           [12] gettable   7   2   6  
3129  1DC20000           [13] getglobal  8   3        ; gRegion
312D  24024104           [14] self       8   8   260  ; 152279552
3131  92028003           [15] move       10  7      
3135  E4424100           [16] self       11  0   261  ; 1839670529
3139  E2820001           [17] call       11  2   2  
313D  19830100           [18] loadk      12  6        ; 0
3141  59C30100           [19] loadk      13  7        ; 0
3145  22820003           [20] call       8   6   2  
3149  59820000           [21] loadk      9   2        ; 0
314D  8A020004           [22] len        10  8      
3151  D9820000           [23] loadk      11  2        ; 0
3155  50C20280           [24] forprep    9   12       ; to [37]
3159  4E030304           [25] gettable   13  8   12 
315D  9D430000           [26] getglobal  14  1        ; 1074689893
3161  D2038006           [27] move       15  13     
3165  A2830001           [28] call       14  2   2  
3169  98430000           [29] test       14      1    ; to [31] if false
316D  1A400180           [30] jmp        6            ; to [37]
3171  A403C206           [31] self       14  13  264  ; 1511086594
3175  A2830001           [32] call       14  2   2  
3179  98430000           [33] test       14      1    ; to [35] if false
317D  1A400080           [34] jmp        2            ; to [37]
3181  52008006           [35] move       1   13     
3185  1A000080           [36] jmp        1            ; to [38]
3189  5482FC7F           [37] forloop    9   -13      ; to [25] if loop
318D  9D430000           [38] getglobal  14  1        ; 1074689893
3191  D2038000           [39] move       15  1      
3195  A2830001           [40] call       14  2   2  
3199  98430000           [41] test       14      1    ; to [43] if false
319D  1A000080           [42] jmp        1            ; to [44]
31A1  1A000080           [43] jmp        1            ; to [45]
31A5  D480F77F           [44] forloop    3   -33      ; to [12] if loop
31A9  5E000001           [45] return     1   2      
31AD  1E008000           [46] return     0   1      
                         * constants:
31B1  09                 sizek (9)
31B2  01                 const type 3
31B3  AC8A86BC           const [0]: (-1132033364)
31B7  01                 const type 3
31B8  65770E40           const [1]: (1074689893)
31BC  03                 const type 3
31BD  0000803F           const [2]: (0)
31C1  04                 const type 4
31C2  08                 string size (8)
31C3  67526567696F6E00   "gRegion\0"
                         const [3]: "gRegion"
31CB  01                 const type 3
31CC  009A1309           const [4]: (152279552)
31D0  01                 const type 3
31D1  0125A76D           const [5]: (1839670529)
31D5  03                 const type 3
31D6  00000000           const [6]: (0)
31DA  03                 const type 3
31DB  0000C842           const [7]: (0)
31DF  01                 const type 3
31E0  025A115A           const [8]: (1511086594)
                         * functions:
31E4  00                 sizep (0)
                         * lines:
31E5  2E                 sizelineinfo (46)
                         [pc] (line)
31E6  14                 [01] (20)
31E7  02                 [02] (20)
31E8  00                 [03] (21)
31E9  00                 [04] (21)
31EA  14                 [05] (21)
31EB  02                 [06] (21)
31EC  00                 [07] (21)
31ED  00                 [08] (22)
31EE  15                 [09] (22)
31EF  02                 [10] (22)
31F0  00                 [11] (22)
31F1  00                 [12] (23)
31F2  15                 [13] (24)
31F3  02                 [14] (24)
31F4  00                 [15] (24)
31F5  00                 [16] (24)
31F6  15                 [17] (24)
31F7  02                 [18] (24)
31F8  00                 [19] (24)
31F9  00                 [20] (24)
31FA  15                 [21] (25)
31FB  02                 [22] (25)
31FC  00                 [23] (25)
31FD  00                 [24] (25)
31FE  15                 [25] (26)
31FF  02                 [26] (27)
3200  00                 [27] (27)
3201  00                 [28] (27)
3202  16                 [29] (27)
3203  02                 [30] (27)
3204  00                 [31] (27)
3205  00                 [32] (27)
3206  16                 [33] (27)
3207  02                 [34] (27)
3208  00                 [35] (28)
3209  00                 [36] (29)
320A  16                 [37] (25)
320B  02                 [38] (33)
320C  00                 [39] (33)
320D  00                 [40] (33)
320E  16                 [41] (33)
320F  02                 [42] (33)
3210  00                 [43] (34)
3211  00                 [44] (22)
3212  17                 [45] (39)
3213  02                 [46] (40)
                         * locals:
329E  00                 sizelocvars (0)
                         * upvalues:
329F  00                 sizeupvalues (0)
                         ** end of function **

                         
32A0                     ** function [12] definition (level 2)
                         ** start of function **
32A0  00                 string size (0)
                         source name: (none)
32A2  04                 line defined (554)
32A3  C4                 last line defined (580)
32A4  04                 nups (1)
32A5  01                 numparams (1)
32A6  01                 is_vararg (0)
32A7  00                 maxstacksize (8)
                         * code:
32A9  34                 sizecode (52)
32AA  5D000000           [01] getglobal  1   0        ; gGameRules
32AE  9D400000           [02] getglobal  2   1        ; 1074689893
32B2  D2008000           [03] move       3   1      
32B6  A2800001           [04] call       2   2   2  
32BA  98400000           [05] test       2       1    ; to [7] if false
32BE  1A800080           [06] jmp        3            ; to [10]
32C2  A480C000           [07] self       2   1   258  ; 952266004
32C6  17018000           [08] loadbool   4   1   0    ; true
32CA  A2408001           [09] call       2   3   1  
32CE  93000000           [10] getupval   2   0      
32D2  D2000000           [11] move       3   0      
32D6  A2800001           [12] call       2   2   2  
32DA  DD400000           [13] getglobal  3   1        ; 1074689893
32DE  12010001           [14] move       4   2      
32E2  E2800001           [15] call       3   2   2  
32E6  D8000000           [16] test       3       0    ; to [18] if true
32EA  1AC00180           [17] jmp        8            ; to [26]
32EE  D3000000           [18] getupval   3   0      
32F2  12010000           [19] move       4   0      
32F6  E2800001           [20] call       3   2   2  
32FA  92008001           [21] move       2   3      
32FE  DDC00000           [22] getglobal  3   3        ; 538022378
3302  19010100           [23] loadk      4   4        ; 0
3306  E2400001           [24] call       3   2   1  
330A  1A80FC7F           [25] jmp        -13          ; to [13]
330E  DD400100           [26] getglobal  3   5        ; useBossPosition
3312  D8000000           [27] test       3       0    ; to [29] if true
3316  1AC00080           [28] jmp        4            ; to [33]
331A  E4804100           [29] self       3   0   262  ; -333955620
331E  64C14101           [30] self       5   2   263  ; 1839670529
3322  62010001           [31] call       5   2   0  
3326  E2400000           [32] call       3   0   1  
332A  DD000200           [33] getglobal  3   8        ; cinematicFacePlayer
332E  D8000000           [34] test       3       0    ; to [36] if true
3332  1A000280           [35] jmp        9            ; to [45]
3336  DD400200           [36] getglobal  3   9        ; gRegion
333A  E480C201           [37] self       3   3   266  ; -2071158816
333E  E2800001           [38] call       3   2   2  
3342  0EC1C201           [39] gettable   4   3   267  ; 0
3346  24C14102           [40] self       4   4   263  ; 1839670529
334A  22810001           [41] call       4   2   2  
334E  64014300           [42] self       5   0   268  ; -1862702724
3352  D2010002           [43] move       7   4      
3356  62418001           [44] call       5   3   1  
335A  64414301           [45] self       5   2   269  ; 1032339126
335E  DD810300           [46] getglobal  7   14       ; bossAnimationName
3362  62418001           [47] call       5   3   1  
3366  64C14301           [48] self       5   2   271  ; -1917464545
336A  62810001           [49] call       5   2   2  
336E  6401C402           [50] self       5   5   272  ; -1105939986
3372  62410001           [51] call       5   2   1  
3376  1E008000           [52] return     0   1      
                         * constants:
337A  11                 sizek (17)
337B  04                 const type 4
337C  0B                 string size (11)
337D  6747616D6552756C+  "gGameRul"
3385  657300             "es\0"
                         const [0]: "gGameRules"
3388  01                 const type 3
3389  65770E40           const [1]: (1074689893)
338D  01                 const type 3
338E  146DC238           const [2]: (952266004)
3392  01                 const type 3
3393  EA911120           const [3]: (538022378)
3397  03                 const type 3
3398  00000000           const [4]: (0)
339C  04                 const type 4
339D  10                 string size (16)
339E  757365426F737350+  "useBossP"
33A6  6F736974696F6E00   "osition\0"
                         const [5]: "useBossPosition"
33AE  01                 const type 3
33AF  DC3D18EC           const [6]: (-333955620)
33B3  01                 const type 3
33B4  0125A76D           const [7]: (1839670529)
33B8  04                 const type 4
33B9  14                 string size (20)
33BA  63696E656D617469+  "cinemati"
33C2  6346616365506C61+  "cFacePla"
33CA  79657200           "yer\0"
                         const [8]: "cinematicFacePlayer"
33CE  04                 const type 4
33CF  08                 string size (8)
33D0  67526567696F6E00   "gRegion\0"
                         const [9]: "gRegion"
33D8  01                 const type 3
33D9  E09F8C84           const [10]: (-2071158816)
33DD  03                 const type 3
33DE  0000803F           const [11]: (0)
33E2  01                 const type 3
33E3  7C69F990           const [12]: (-1862702724)
33E7  01                 const type 3
33E8  B63E883D           const [13]: (1032339126)
33EC  04                 const type 4
33ED  12                 string size (18)
33EE  626F7373416E696D+  "bossAnim"
33F6  6174696F6E4E616D+  "ationNam"
33FE  6500               "e\0"
                         const [14]: "bossAnimationName"
3400  01                 const type 3
3401  1FD0B58D           const [15]: (-1917464545)
3405  01                 const type 3
3406  EEB114BE           const [16]: (-1105939986)
                         * functions:
340A  00                 sizep (0)
                         * lines:
340B  34                 sizelineinfo (52)
                         [pc] (line)
340C  2C                 [01] (44)
340D  02                 [02] (45)
340E  00                 [03] (45)
340F  00                 [04] (45)
3410  2D                 [05] (45)
3411  02                 [06] (45)
3412  00                 [07] (46)
3413  00                 [08] (46)
3414  2D                 [09] (46)
3415  02                 [10] (49)
3416  00                 [11] (49)
3417  00                 [12] (49)
3418  2D                 [13] (51)
3419  02                 [14] (51)
341A  00                 [15] (51)
341B  00                 [16] (51)
341C  2D                 [17] (51)
341D  02                 [18] (52)
341E  00                 [19] (52)
341F  00                 [20] (52)
3420  2D                 [21] (52)
3421  02                 [22] (53)
3422  00                 [23] (53)
3423  00                 [24] (53)
3424  2E                 [25] (53)
3425  02                 [26] (56)
3426  00                 [27] (56)
3427  00                 [28] (56)
3428  2E                 [29] (57)
3429  02                 [30] (57)
342A  00                 [31] (57)
342B  00                 [32] (57)
342C  2E                 [33] (60)
342D  02                 [34] (60)
342E  00                 [35] (60)
342F  00                 [36] (61)
3430  31                 [37] (61)
3431  02                 [38] (61)
3432  00                 [39] (62)
3433  00                 [40] (62)
3434  31                 [41] (62)
3435  02                 [42] (63)
3436  00                 [43] (63)
3437  00                 [44] (63)
3438  31                 [45] (66)
3439  02                 [46] (66)
343A  00                 [47] (66)
343B  00                 [48] (67)
343C  33                 [49] (67)
343D  02                 [50] (67)
343E  00                 [51] (67)
343F  00                 [52] (68)
                         * locals:
34DC  00                 sizelocvars (0)
                         * upvalues:
34DD  00                 sizeupvalues (0)
                         ** end of function **

                         
34DE                     ** function [13] definition (level 2)
                         ** start of function **
34DE  00                 string size (0)
                         source name: (none)
34E0  04                 line defined (582)
34E1  D3                 last line defined (595)
34E2  04                 nups (1)
34E3  01                 numparams (1)
34E4  01                 is_vararg (0)
34E5  00                 maxstacksize (4)
                         * code:
34E7  1A                 sizecode (26)
34E8  5D000000           [01] getglobal  1   0        ; 1074689893
34EC  92000000           [02] move       2   0      
34F0  62800001           [03] call       1   2   2  
34F4  58400000           [04] test       1       1    ; to [6] if false
34F8  1A000480           [05] jmp        17           ; to [23]
34FC  53000000           [06] getupval   1   0      
3500  92000000           [07] move       2   0      
3504  62800001           [08] call       1   2   2  
3508  9D000000           [09] getglobal  2   0        ; 1074689893
350C  D2008000           [10] move       3   1      
3510  A2800001           [11] call       2   2   2  
3514  98000000           [12] test       2       0    ; to [14] if true
3518  1AC00080           [13] jmp        4            ; to [18]
351C  9D400000           [14] getglobal  2   1        ; -1817107093
3520  D9800000           [15] loadk      3   2        ; "Could not prepare cinematic for boss avatar"
3524  A2400001           [16] call       2   2   1  
3528  1E008000           [17] return     0   1      
352C  A4C0C000           [18] self       2   1   259  ; -1917464545
3530  A2800001           [19] call       2   2   2  
3534  A4004101           [20] self       2   2   260  ; 655648260
3538  A2400001           [21] call       2   2   1  
353C  1A800080           [22] jmp        3            ; to [26]
3540  9D400000           [23] getglobal  2   1        ; -1817107093
3544  D9400100           [24] loadk      3   5        ; "NOPE"
3548  A2400001           [25] call       2   2   1  
354C  1E008000           [26] return     0   1      
                         * constants:
3550  06                 sizek (6)
3551  01                 const type 3
3552  65770E40           const [0]: (1074689893)
3556  01                 const type 3
3557  6B25B193           const [1]: (-1817107093)
355B  04                 const type 4
355C  2C                 string size (44)
355D  436F756C64206E6F+  "Could no"
3565  7420707265706172+  "t prepar"
356D  652063696E656D61+  "e cinema"
3575  74696320666F7220+  "tic for "
357D  626F737320617661+  "boss ava"
3585  74617200           "tar\0"
                         const [2]: "Could not prepare cinematic for boss avatar"
3589  01                 const type 3
358A  1FD0B58D           const [3]: (-1917464545)
358E  01                 const type 3
358F  04661427           const [4]: (655648260)
3593  04                 const type 4
3594  05                 string size (5)
3595  4E4F504500         "NOPE\0"
                         const [5]: "NOPE"
                         * functions:
359A  00                 sizep (0)
                         * lines:
359B  1A                 sizelineinfo (26)
                         [pc] (line)
359C  47                 [01] (71)
359D  02                 [02] (71)
359E  00                 [03] (71)
359F  00                 [04] (71)
35A0  47                 [05] (71)
35A1  02                 [06] (72)
35A2  00                 [07] (72)
35A3  00                 [08] (72)
35A4  47                 [09] (74)
35A5  02                 [10] (74)
35A6  00                 [11] (74)
35A7  00                 [12] (74)
35A8  47                 [13] (74)
35A9  02                 [14] (75)
35AA  00                 [15] (75)
35AB  00                 [16] (75)
35AC  47                 [17] (76)
35AD  02                 [18] (79)
35AE  00                 [19] (79)
35AF  00                 [20] (79)
35B0  48                 [21] (79)
35B1  02                 [22] (79)
35B2  00                 [23] (81)
35B3  00                 [24] (81)
35B4  48                 [25] (81)
35B5  02                 [26] (83)
                         * locals:
3604  00                 sizelocvars (0)
                         * upvalues:
3605  00                 sizeupvalues (0)
                         ** end of function **

                         
3606                     ** function [14] definition (level 2)
                         ** start of function **
3606  00                 string size (0)
                         source name: (none)
3608  04                 line defined (597)
3609  D9                 last line defined (601)
360A  04                 nups (0)
360B  00                 numparams (2)
360C  02                 is_vararg (0)
360D  00                 maxstacksize (11)
                         * code:
360F  10                 sizecode (16)
3610  9D000000           [01] getglobal  2   0        ; 1074689893
3614  D2008000           [02] move       3   1      
3618  A2800001           [03] call       2   2   2  
361C  98400000           [04] test       2       1    ; to [6] if false
3620  1A400280           [05] jmp        10           ; to [16]
3624  A440C000           [06] self       2   1   257  ; 112745428
3628  1D810000           [07] getglobal  4   2        ; boneName
362C  5DC10000           [08] getglobal  5   3        ; ZERO_ROTATION
3630  9D010100           [09] getglobal  6   4        ; ZERO_VECTOR
3634  DD410100           [10] getglobal  7   5        ; 572299008
3638  19820100           [11] loadk      8   6        ; 111
363C  59820100           [12] loadk      9   6        ; 111
3640  99820100           [13] loadk      10  6        ; 111
3644  E2010002           [14] call       7   4   0  
3648  A2400000           [15] call       2   0   1  
364C  1E008000           [16] return     0   1      
                         * constants:
3650  07                 sizek (7)
3651  01                 const type 3
3652  65770E40           const [0]: (1074689893)
3656  01                 const type 3
3657  D45BB806           const [1]: (112745428)
365B  04                 const type 4
365C  09                 string size (9)
365D  626F6E654E616D65+  "boneName"
3665  00                 "\0"
                         const [2]: "boneName"
3666  04                 const type 4
3667  0E                 string size (14)
3668  5A45524F5F524F54+  "ZERO_ROT"
3670  4154494F4E00       "ATION\0"
                         const [3]: "ZERO_ROTATION"
3676  04                 const type 4
3677  0C                 string size (12)
3678  5A45524F5F564543+  "ZERO_VEC"
3680  544F5200           "TOR\0"
                         const [4]: "ZERO_VECTOR"
3684  01                 const type 3
3685  00971C22           const [5]: (572299008)
3689  03                 const type 3
368A  6F12833A           const [6]: (111)
                         * functions:
368E  00                 sizep (0)
                         * lines:
368F  10                 sizelineinfo (16)
                         [pc] (line)
3690  56                 [01] (86)
3691  02                 [02] (86)
3692  00                 [03] (86)
3693  00                 [04] (86)
3694  56                 [05] (86)
3695  02                 [06] (87)
3696  00                 [07] (87)
3697  00                 [08] (87)
3698  56                 [09] (87)
3699  02                 [10] (87)
369A  00                 [11] (87)
369B  00                 [12] (87)
369C  56                 [13] (87)
369D  02                 [14] (87)
369E  00                 [15] (87)
369F  00                 [16] (89)
                         * locals:
36D0  00                 sizelocvars (0)
                         * upvalues:
36D1  00                 sizeupvalues (0)
                         ** end of function **

                         
36D2                     ** function [15] definition (level 2)
                         ** start of function **
36D2  00                 string size (0)
                         source name: (none)
36D4  04                 line defined (603)
36D5  DF                 last line defined (607)
36D6  04                 nups (0)
36D7  00                 numparams (2)
36D8  02                 is_vararg (0)
36D9  00                 maxstacksize (11)
                         * code:
36DB  10                 sizecode (16)
36DC  9D000000           [01] getglobal  2   0        ; 1074689893
36E0  D2008000           [02] move       3   1      
36E4  A2800001           [03] call       2   2   2  
36E8  98400000           [04] test       2       1    ; to [6] if false
36EC  1A400280           [05] jmp        10           ; to [16]
36F0  A440C000           [06] self       2   1   257  ; 112745428
36F4  1D810000           [07] getglobal  4   2        ; boneName
36F8  5DC10000           [08] getglobal  5   3        ; ZERO_ROTATION
36FC  9D010100           [09] getglobal  6   4        ; ZERO_VECTOR
3700  DD410100           [10] getglobal  7   5        ; 572299008
3704  19820100           [11] loadk      8   6        ; 0
3708  59820100           [12] loadk      9   6        ; 0
370C  99820100           [13] loadk      10  6        ; 0
3710  E2010002           [14] call       7   4   0  
3714  A2400000           [15] call       2   0   1  
3718  1E008000           [16] return     0   1      
                         * constants:
371C  07                 sizek (7)
371D  01                 const type 3
371E  65770E40           const [0]: (1074689893)
3722  01                 const type 3
3723  D45BB806           const [1]: (112745428)
3727  04                 const type 4
3728  09                 string size (9)
3729  626F6E654E616D65+  "boneName"
3731  00                 "\0"
                         const [2]: "boneName"
3732  04                 const type 4
3733  0E                 string size (14)
3734  5A45524F5F524F54+  "ZERO_ROT"
373C  4154494F4E00       "ATION\0"
                         const [3]: "ZERO_ROTATION"
3742  04                 const type 4
3743  0C                 string size (12)
3744  5A45524F5F564543+  "ZERO_VEC"
374C  544F5200           "TOR\0"
                         const [4]: "ZERO_VECTOR"
3750  01                 const type 3
3751  00971C22           const [5]: (572299008)
3755  03                 const type 3
3756  0000803F           const [6]: (0)
                         * functions:
375A  00                 sizep (0)
                         * lines:
375B  10                 sizelineinfo (16)
                         [pc] (line)
375C  5C                 [01] (92)
375D  02                 [02] (92)
375E  00                 [03] (92)
375F  00                 [04] (92)
3760  5C                 [05] (92)
3761  02                 [06] (93)
3762  00                 [07] (93)
3763  00                 [08] (93)
3764  5C                 [09] (93)
3765  02                 [10] (93)
3766  00                 [11] (93)
3767  00                 [12] (93)
3768  5C                 [13] (93)
3769  02                 [14] (93)
376A  00                 [15] (93)
376B  00                 [16] (95)
                         * locals:
379C  00                 sizelocvars (0)
                         * upvalues:
379D  00                 sizeupvalues (0)
                         ** end of function **

                         
379E                     ** function [16] definition (level 2)
                         ** start of function **
379E  00                 string size (0)
                         source name: (none)
37A0  04                 line defined (609)
37A1  AB                 last line defined (683)
37A2  05                 nups (1)
37A3  01                 numparams (0)
37A4  00                 is_vararg (0)
37A5  00                 maxstacksize (35)
                         * code:
37A8  01                 sizecode (185)
37A9  19000000           [001] loadk      0   0        ; ""
37AD  5D400000           [002] getglobal  1   1        ; gMatchingService
37B1  6480C000           [003] self       1   1   258  ; -706726330
37B5  62800001           [004] call       1   2   2  
37B9  9DC00000           [005] getglobal  2   3        ; 1074689893
37BD  D2008000           [006] move       3   1      
37C1  A2800001           [007] call       2   2   2  
37C5  98400000           [008] test       2       1    ; to [10] if false
37C9  1A800080           [009] jmp        3            ; to [13]
37CD  A400C100           [010] self       2   1   260  ; 2122390761
37D1  A2800001           [011] call       2   2   2  
37D5  12000001           [012] move       0   2      
37D9  8B000000           [013] newtable   2   0   0    ; array=0, hash=0
37DD  CB000000           [014] newtable   3   0   0    ; array=0, hash=0
37E1  1D410100           [015] getglobal  4   5        ; gRegion
37E5  24814102           [016] self       4   4   262  ; -2071158816
37E9  22810001           [017] call       4   2   2  
37ED  5DC10000           [018] getglobal  5   3        ; 1074689893
37F1  92010002           [019] move       6   4      
37F5  62810001           [020] call       5   2   2  
37F9  58410000           [021] test       5       1    ; to [23] if false
37FD  1A000980           [022] jmp        37           ; to [60]
3801  4A010002           [023] len        5   4      
fail op	21
3805  15408183           [024] concat     0   263 5  
3809  1A400880           [025] jmp        34           ; to [60]
380D  59010200           [026] loadk      5   8        ; 0
3811  8A010002           [027] len        6   4      
3815  D9010200           [028] loadk      7   8        ; 0
3819  50010780           [029] forprep    5   29       ; to [59]
381D  4E020202           [030] gettable   9   4   8  
3821  6442C204           [031] self       9   9   265  ; -564624675
3825  62820001           [032] call       9   2   2  
3829  6482C204           [033] self       9   9   266  ; 340404473
382D  62820001           [034] call       9   2   2  
fail op	35
3831  23008004           [035] close      0  
3835  1AC00280           [036] jmp        12           ; to [49]
3839  8E020202           [037] gettable   10  4   8  
383D  A4C24205           [038] self       10  10  267  ; 1032339126
3841  1D030300           [039] getglobal  12  12       ; -332969190
3845  59430300           [040] loadk      13  13       ; "Tenno"
3849  22030001           [041] call       12  2   0  
384D  A2420000           [042] call       10  0   1  
3851  9D820300           [043] getglobal  10  14       ; table
3855  8EC24305           [044] gettable   10  10  271  ; -431682403
3859  D2020001           [045] move       11  2      
385D  0E030202           [046] gettable   12  4   8  
3861  A2428001           [047] call       10  3   1  
3865  1A400280           [048] jmp        10           ; to [59]
3869  9D820300           [049] getglobal  10  14       ; table
386D  8EC24305           [050] gettable   10  10  271  ; -431682403
3871  D2028001           [051] move       11  3      
3875  0E030202           [052] gettable   12  4   8  
3879  A2428001           [053] call       10  3   1  
387D  8E020202           [054] gettable   10  4   8  
3881  A4024405           [055] self       10  10  272  ; 2109594123
3885  17030000           [056] loadbool   12  0   0    ; false
3889  57038000           [057] loadbool   13  1   0    ; true
388D  A2420002           [058] call       10  4   1  
3891  5441F87F           [059] forloop    5   -30      ; to [30] if loop
3895  9D420100           [060] getglobal  10  5        ; gRegion
3899  A4424405           [061] self       10  10  273  ; -1485896174
389D  1D030300           [062] getglobal  12  12       ; -332969190
38A1  59830400           [063] loadk      13  18       ; "Marine"
38A5  22030001           [064] call       12  2   0  
38A9  A2820000           [065] call       10  0   2  
38AD  DDC20000           [066] getglobal  11  3        ; 1074689893
38B1  1DC30400           [067] getglobal  12  19       ; headType
38B5  E2820001           [068] call       11  2   2  
38B9  D8420000           [069] test       11      1    ; to [71] if false
38BD  1A400580           [070] jmp        22           ; to [93]
38C1  CA020005           [071] len        11  10     
fail op	21
38C5  15C08283           [072] concat     0   263 11 
38C9  1A800480           [073] jmp        19           ; to [93]
38CD  CE024205           [074] gettable   11  10  264  ; 0
38D1  24C3C205           [075] self       12  11  267  ; 1032339126
38D5  9D030300           [076] getglobal  14  12       ; -332969190
38D9  D9830400           [077] loadk      15  18       ; "Marine"
38DD  A2030001           [078] call       14  2   0  
38E1  22430000           [079] call       12  0   1  
38E5  2403C505           [080] self       12  11  276  ; -1625438872
38E9  9DC30400           [081] getglobal  14  19       ; headType
38ED  22838001           [082] call       12  3   2  
38F1  5DC30000           [083] getglobal  13  3        ; 1074689893
38F5  92030006           [084] move       14  12     
38F9  62830001           [085] call       13  2   2  
38FD  58430000           [086] test       13      1    ; to [88] if false
3901  1A000180           [087] jmp        5            ; to [93]
3905  64C34206           [088] self       13  12  267  ; 1032339126
3909  DD030300           [089] getglobal  15  12       ; -332969190
390D  19440500           [090] loadk      16  21       ; "GrineerHead"
3911  E2030001           [091] call       15  2   0  
3915  62430000           [092] call       13  0   1  
3919  5DC30000           [093] getglobal  13  3        ; 1074689893
391D  9D430100           [094] getglobal  14  5        ; gRegion
3921  A4834507           [095] self       14  14  278  ; 2066713391
3925  A2030001           [096] call       14  2   0  
3929  62830000           [097] call       13  0   2  
fail op	9
392D  89038006           [098] settable   14  13  0  
3931  58430000           [099] test       13      1    ; to [101] if false
3935  1A400080           [100] jmp        2            ; to [103]
3939  98030000           [101] test       14      0    ; to [103] if true
393D  1A800D80           [102] jmp        55           ; to [158]
3941  58030000           [103] test       13      0    ; to [105] if true
3945  1A400180           [104] jmp        6            ; to [111]
3949  DDC30000           [105] getglobal  15  3        ; 1074689893
394D  1D440100           [106] getglobal  16  5        ; gRegion
3951  24844508           [107] self       16  16  278  ; 2066713391
3955  22040001           [108] call       16  2   0  
3959  E2830000           [109] call       15  0   2  
395D  52038007           [110] move       13  15     
3961  58430000           [111] test       13      1    ; to [113] if false
3965  1A400180           [112] jmp        6            ; to [119]
3969  DDC30000           [113] getglobal  15  3        ; 1074689893
396D  1D440100           [114] getglobal  16  5        ; gRegion
3971  24844508           [115] self       16  16  278  ; 2066713391
3975  22040001           [116] call       16  2   0  
3979  E2830000           [117] call       15  0   2  
fail op	9
397D  89038007           [118] settable   14  15  0  
3981  DD430100           [119] getglobal  15  5        ; gRegion
3985  E4C3C507           [120] self       15  15  279  ; -1520831144
3989  E2830001           [121] call       15  2   2  
398D  D8430000           [122] test       15      1    ; to [124] if false
3991  1A400780           [123] jmp        30           ; to [154]
3995  DD030600           [124] getglobal  15  24       ; 1672515847
3999  12048001           [125] move       16  3      
399D  E2030101           [126] call       15  2   4  
39A1  1A000280           [127] jmp        9            ; to [137]
39A5  1DC50000           [128] getglobal  20  3        ; 1074689893
39A9  52058009           [129] move       21  19     
39AD  22850001           [130] call       20  2   2  
39B1  18450000           [131] test       20      1    ; to [133] if false
39B5  1AC00080           [132] jmp        4            ; to [137]
39B9  2405C409           [133] self       20  19  272  ; 2109594123
39BD  97050000           [134] loadbool   22  0   0    ; false
39C1  D7058000           [135] loadbool   23  1   0    ; true
39C5  22450002           [136] call       20  4   1  
39C9  D6830000           [137] tforloop   15      2    ; to [139] if exit
39CD  1A00FD7F           [138] jmp        -11          ; to [128]
39D1  1D050600           [139] getglobal  20  24       ; 1672515847
39D5  52050001           [140] move       21  2      
39D9  22050101           [141] call       20  2   4  
39DD  1A000280           [142] jmp        9            ; to [152]
39E1  5DC60000           [143] getglobal  25  3        ; 1074689893
39E5  9206000C           [144] move       26  24     
39E9  62860001           [145] call       25  2   2  
39ED  58460000           [146] test       25      1    ; to [148] if false
39F1  1AC00080           [147] jmp        4            ; to [152]
39F5  6406440C           [148] self       25  24  272  ; 2109594123
39F9  D7068000           [149] loadbool   27  1   0    ; true
39FD  17078000           [150] loadbool   28  1   0    ; true
3A01  62460002           [151] call       25  4   1  
3A05  16850000           [152] tforloop   20      2    ; to [154] if exit
3A09  1A00FD7F           [153] jmp        -11          ; to [143]
3A0D  5D460600           [154] getglobal  25  25       ; 538022378
3A11  99C60100           [155] loadk      26  7        ; 0
3A15  62460001           [156] call       25  2   1  
3A19  1A00F17F           [157] jmp        -59          ; to [99]
3A1D  5DC60000           [158] getglobal  25  3        ; 1074689893
3A21  9D860600           [159] getglobal  26  26       ; ragdollType
3A25  62860001           [160] call       25  2   2  
3A29  58460000           [161] test       25      1    ; to [163] if false
3A2D  1A800180           [162] jmp        7            ; to [170]
3A31  4A060005           [163] len        25  10     
fail op	21
3A35  15408683           [164] concat     0   263 25 
3A39  1AC00080           [165] jmp        4            ; to [170]
3A3D  4E064205           [166] gettable   25  10  264  ; 0
3A41  93060000           [167] getupval   26  0      
3A45  D206800C           [168] move       27  25     
3A49  A2460001           [169] call       26  2   1  
3A4D  9D060600           [170] getglobal  26  24       ; 1672515847
3A51  D2068001           [171] move       27  3      
3A55  A2060101           [172] call       26  2   4  
3A59  1A000280           [173] jmp        9            ; to [183]
3A5D  DDC70000           [174] getglobal  31  3        ; 1074689893
3A61  1208000F           [175] move       32  30     
3A65  E2870001           [176] call       31  2   2  
3A69  D8470000           [177] test       31      1    ; to [179] if false
3A6D  1AC00080           [178] jmp        4            ; to [183]
3A71  E407440F           [179] self       31  30  272  ; 2109594123
3A75  57088000           [180] loadbool   33  1   0    ; true
3A79  97088000           [181] loadbool   34  1   0    ; true
3A7D  E2470002           [182] call       31  4   1  
3A81  96860000           [183] tforloop   26      2    ; to [185] if exit
3A85  1A00FD7F           [184] jmp        -11          ; to [174]
3A89  1E008000           [185] return     0   1      
                         * constants:
3A8D  1B                 sizek (27)
3A8E  04                 const type 4
3A8F  01                 string size (0)
                         const [0]: ""
3A91  04                 const type 4
3A92  11                 string size (17)
3A93  674D61746368696E+  "gMatchin"
3A9B  6753657276696365+  "gService"
3AA3  00                 "\0"
                         const [1]: "gMatchingService"
3AA4  01                 const type 3
3AA5  4636E0D5           const [2]: (-706726330)
3AA9  01                 const type 3
3AAA  65770E40           const [3]: (1074689893)
3AAE  01                 const type 3
3AAF  E91C817E           const [4]: (2122390761)
3AB3  04                 const type 4
3AB4  08                 string size (8)
3AB5  67526567696F6E00   "gRegion\0"
                         const [5]: "gRegion"
3ABD  01                 const type 3
3ABE  E09F8C84           const [6]: (-2071158816)
3AC2  03                 const type 3
3AC3  00000000           const [7]: (0)
3AC7  03                 const type 3
3AC8  0000803F           const [8]: (0)
3ACC  01                 const type 3
3ACD  DD8258DE           const [9]: (-564624675)
3AD1  01                 const type 3
3AD2  F9284A14           const [10]: (340404473)
3AD6  01                 const type 3
3AD7  B63E883D           const [11]: (1032339126)
3ADB  01                 const type 3
3ADC  1A4B27EC           const [12]: (-332969190)
3AE0  04                 const type 4
3AE1  06                 string size (6)
3AE2  54656E6E6F00       "Tenno\0"
                         const [13]: "Tenno"
3AE8  04                 const type 4
3AE9  06                 string size (6)
3AEA  7461626C6500       "table\0"
                         const [14]: "table"
3AF0  01                 const type 3
3AF1  9D0C45E6           const [15]: (-431682403)
3AF5  01                 const type 3
3AF6  0BDABD7D           const [16]: (2109594123)
3AFA  01                 const type 3
3AFB  12066FA7           const [17]: (-1485896174)
3AFF  04                 const type 4
3B00  07                 string size (7)
3B01  4D6172696E6500     "Marine\0"
                         const [18]: "Marine"
3B08  04                 const type 4
3B09  09                 string size (9)
3B0A  6865616454797065+  "headType"
3B12  00                 "\0"
                         const [19]: "headType"
3B13  01                 const type 3
3B14  68C51D9F           const [20]: (-1625438872)
3B18  04                 const type 4
3B19  0C                 string size (12)
3B1A  4772696E65657248+  "GrineerH"
3B22  65616400           "ead\0"
                         const [21]: "GrineerHead"
3B26  01                 const type 3
3B27  2F8B2F7B           const [22]: (2066713391)
3B2B  01                 const type 3
3B2C  58F559A5           const [23]: (-1520831144)
3B30  01                 const type 3
3B31  0791B063           const [24]: (1672515847)
3B35  01                 const type 3
3B36  EA911120           const [25]: (538022378)
3B3A  04                 const type 4
3B3B  0C                 string size (12)
3B3C  726167646F6C6C54+  "ragdollT"
3B44  79706500           "ype\0"
                         const [26]: "ragdollType"
                         * functions:
3B48  00                 sizep (0)
                         * lines:
3B4A  01                 sizelineinfo (185)
                         [pc] (line)
3B4B  64                 [001] (100)
3B4C  02                 [002] (101)
3B4D  00                 [003] (101)
3B4E  00                 [004] (101)
3B4F  65                 [005] (102)
3B50  02                 [006] (102)
3B51  00                 [007] (102)
3B52  00                 [008] (102)
3B53  65                 [009] (102)
3B54  02                 [010] (103)
3B55  00                 [011] (103)
3B56  00                 [012] (103)
3B57  65                 [013] (106)
3B58  02                 [014] (107)
3B59  00                 [015] (110)
3B5A  00                 [016] (110)
3B5B  66                 [017] (110)
3B5C  02                 [018] (111)
3B5D  00                 [019] (111)
3B5E  00                 [020] (111)
3B5F  66                 [021] (111)
3B60  02                 [022] (111)
3B61  00                 [023] (111)
3B62  00                 [024] (111)
3B63  66                 [025] (111)
3B64  02                 [026] (112)
3B65  00                 [027] (112)
3B66  00                 [028] (112)
3B67  66                 [029] (112)
3B68  02                 [030] (113)
3B69  00                 [031] (113)
3B6A  00                 [032] (113)
3B6B  66                 [033] (113)
3B6C  02                 [034] (113)
3B6D  00                 [035] (114)
3B6E  00                 [036] (114)
3B6F  67                 [037] (115)
3B70  02                 [038] (115)
3B71  00                 [039] (115)
3B72  00                 [040] (115)
3B73  67                 [041] (115)
3B74  02                 [042] (115)
3B75  00                 [043] (116)
3B76  00                 [044] (116)
3B77  67                 [045] (116)
3B78  02                 [046] (116)
3B79  00                 [047] (116)
3B7A  00                 [048] (116)
3B7B  6A                 [049] (118)
3B7C  02                 [050] (118)
3B7D  00                 [051] (118)
3B7E  00                 [052] (118)
3B7F  6B                 [053] (118)
3B80  02                 [054] (119)
3B81  00                 [055] (119)
3B82  00                 [056] (119)
3B83  6E                 [057] (119)
3B84  02                 [058] (119)
3B85  00                 [059] (112)
3B86  00                 [060] (124)
3B87  6E                 [061] (124)
3B88  02                 [062] (124)
3B89  00                 [063] (124)
3B8A  00                 [064] (124)
3B8B  6E                 [065] (124)
3B8C  02                 [066] (125)
3B8D  00                 [067] (125)
3B8E  00                 [068] (125)
3B8F  6F                 [069] (125)
3B90  02                 [070] (125)
3B91  00                 [071] (125)
3B92  00                 [072] (125)
3B93  6F                 [073] (125)
3B94  02                 [074] (126)
3B95  00                 [075] (127)
3B96  00                 [076] (127)
3B97  6F                 [077] (127)
3B98  02                 [078] (127)
3B99  00                 [079] (127)
3B9A  00                 [080] (-128)
3B9B  6F                 [081] (-128)
3B9C  02                 [082] (-128)
3B9D  00                 [083] (-127)
3B9E  00                 [084] (-127)
3B9F  6F                 [085] (-127)
3BA0  02                 [086] (-127)
3BA1  00                 [087] (-127)
3BA2  00                 [088] (-126)
3BA3  6F                 [089] (-126)
3BA4  02                 [090] (-126)
3BA5  00                 [091] (-126)
3BA6  00                 [092] (-126)
3BA7  6F                 [093] (-122)
3BA8  02                 [094] (-122)
3BA9  00                 [095] (-122)
3BAA  00                 [096] (-122)
3BAB  6F                 [097] (-122)
3BAC  02                 [098] (-121)
3BAD  00                 [099] (-120)
3BAE  00                 [100] (-120)
3BAF  70                 [101] (-120)
3BB0  02                 [102] (-120)
3BB1  00                 [103] (-119)
3BB2  00                 [104] (-119)
3BB3  70                 [105] (-118)
3BB4  02                 [106] (-118)
3BB5  00                 [107] (-118)
3BB6  00                 [108] (-118)
3BB7  70                 [109] (-118)
3BB8  02                 [110] (-118)
3BB9  00                 [111] (-116)
3BBA  00                 [112] (-116)
3BBB  70                 [113] (-115)
3BBC  02                 [114] (-115)
3BBD  00                 [115] (-115)
3BBE  00                 [116] (-115)
3BBF  71                 [117] (-115)
3BC0  02                 [118] (-115)
3BC1  00                 [119] (-112)
3BC2  00                 [120] (-112)
3BC3  71                 [121] (-112)
3BC4  02                 [122] (-112)
3BC5  00                 [123] (-112)
3BC6  00                 [124] (-111)
3BC7  71                 [125] (-111)
3BC8  02                 [126] (-111)
3BC9  00                 [127] (-111)
3BCA  00                 [128] (-110)
3BCB  71                 [129] (-110)
3BCC  02                 [130] (-110)
3BCD  00                 [131] (-110)
3BCE  00                 [132] (-110)
3BCF  71                 [133] (-109)
3BD0  02                 [134] (-109)
3BD1  00                 [135] (-109)
3BD2  00                 [136] (-109)
3BD3  72                 [137] (-111)
3BD4  02                 [138] (-108)
3BD5  00                 [139] (-105)
3BD6  00                 [140] (-105)
3BD7  72                 [141] (-105)
3BD8  02                 [142] (-105)
3BD9  00                 [143] (-104)
3BDA  00                 [144] (-104)
3BDB  73                 [145] (-104)
3BDC  02                 [146] (-104)
3BDD  00                 [147] (-104)
3BDE  00                 [148] (-103)
3BDF  73                 [149] (-103)
3BE0  02                 [150] (-103)
3BE1  00                 [151] (-103)
3BE2  00                 [152] (-105)
3BE3  73                 [153] (-102)
3BE4  02                 [154] (-98)
3BE5  00                 [155] (-98)
3BE6  00                 [156] (-98)
3BE7  73                 [157] (-98)
3BE8  02                 [158] (-95)
3BE9  00                 [159] (-95)
3BEA  00                 [160] (-95)
3BEB  73                 [161] (-95)
3BEC  02                 [162] (-95)
3BED  00                 [163] (-95)
3BEE  00                 [164] (-95)
3BEF  73                 [165] (-95)
3BF0  02                 [166] (-94)
3BF1  00                 [167] (-93)
3BF2  00                 [168] (-93)
3BF3  74                 [169] (-93)
3BF4  02                 [170] (-90)
3BF5  00                 [171] (-90)
3BF6  00                 [172] (-90)
3BF7  74                 [173] (-90)
3BF8  02                 [174] (-89)
3BF9  00                 [175] (-89)
3BFA  00                 [176] (-89)
3BFB  74                 [177] (-89)
3BFC  02                 [178] (-89)
3BFD  00                 [179] (-88)
3BFE  00                 [180] (-88)
3BFF  74                 [181] (-88)
3C00  02                 [182] (-88)
3C01  00                 [183] (-90)
3C02  00                 [184] (-87)
3C03  74                 [185] (-85)
                         * locals:
3E2F  00                 sizelocvars (0)
                         * upvalues:
3E30  00                 sizeupvalues (0)
                         ** end of function **

                         
3E31                     ** function [17] definition (level 2)
                         ** start of function **
3E31  00                 string size (0)
                         source name: (none)
3E33  05                 line defined (685)
3E34  A9                 last line defined (809)
3E35  06                 nups (2)
3E36  02                 numparams (0)
3E37  00                 is_vararg (0)
3E38  00                 maxstacksize (49)
                         * code:
3E3B  02                 sizecode (330)
3E3C  0B000000           [001] newtable   0   0   0    ; array=0, hash=0
3E40  4B000000           [002] newtable   1   0   0    ; array=0, hash=0
3E44  9D000000           [003] getglobal  2   0        ; gRegion
3E48  A4404001           [004] self       2   2   257  ; -2071158816
3E4C  A2800001           [005] call       2   2   2  
3E50  DD000000           [006] getglobal  3   0        ; gRegion
3E54  E480C001           [007] self       3   3   258  ; 1224466847
3E58  E2800001           [008] call       3   2   2  
3E5C  19C10000           [009] loadk      4   3        ; ""
3E60  5D010100           [010] getglobal  5   4        ; gMatchingService
3E64  6441C102           [011] self       5   5   261  ; -706726330
3E68  62810001           [012] call       5   2   2  
3E6C  9D810100           [013] getglobal  6   6        ; 1074689893
3E70  D2018002           [014] move       7   5      
3E74  A2810001           [015] call       6   2   2  
3E78  98410000           [016] test       6       1    ; to [18] if false
3E7C  1AC00080           [017] jmp        4            ; to [22]
3E80  A4C1C102           [018] self       6   5   263  ; 2122390761
3E84  A2810001           [019] call       6   2   2  
3E88  12010003           [020] move       4   6      
3E8C  1A000280           [021] jmp        9            ; to [31]
3E90  8A010001           [022] len        6   2      
fail op	21
3E94  15800184           [023] concat     0   264 6  
3E98  1A400180           [024] jmp        6            ; to [31]
3E9C  8E414201           [025] gettable   6   2   265  ; 0
3EA0  A4814203           [026] self       6   6   266  ; -564624675
3EA4  A2810001           [027] call       6   2   2  
3EA8  A4C14203           [028] self       6   6   267  ; 340404473
3EAC  A2810001           [029] call       6   2   2  
3EB0  12010003           [030] move       4   6      
3EB4  9D010300           [031] getglobal  6   12       ; -1817107093
3EB8  D9410300           [032] loadk      7   13       ; "Host name "
3EBC  12020002           [033] move       8   4      
3EC0  C2018203           [034] concat     7   7   8  
3EC4  A2410001           [035] call       6   2   1  
3EC8  9D810100           [036] getglobal  6   6        ; 1074689893
3ECC  D2010001           [037] move       7   2      
3ED0  A2810001           [038] call       6   2   2  
3ED4  98410000           [039] test       6       1    ; to [41] if false
3ED8  1AC01880           [040] jmp        100          ; to [141]
3EDC  8A010001           [041] len        6   2      
fail op	21
3EE0  15800184           [042] concat     0   264 6  
3EE4  1A001880           [043] jmp        97           ; to [141]
3EE8  9D010300           [044] getglobal  6   12       ; -1817107093
3EEC  D9810300           [045] loadk      7   14       ; "Num avatars = "
3EF0  1DC20300           [046] getglobal  8   15       ; -1615931716
3EF4  4A020001           [047] len        9   2      
3EF8  22820001           [048] call       8   2   2  
3EFC  C2018203           [049] concat     7   7   8  
3F00  A2410001           [050] call       6   2   1  
3F04  99410200           [051] loadk      6   9        ; 0
3F08  CA010001           [052] len        7   2      
3F0C  19420200           [053] loadk      8   9        ; 0
3F10  90011580           [054] forprep    6   85       ; to [140]
3F14  8E420201           [055] gettable   10  2   9  
3F18  CE428201           [056] gettable   11  3   9  
3F1C  24C3C205           [057] self       12  11  267  ; 340404473
3F20  22830001           [058] call       12  2   2  
3F24  5D030000           [059] getglobal  13  0        ; gRegion
3F28  6403C406           [060] self       13  13  272  ; -1520831144
3F2C  62830001           [061] call       13  2   2  
3F30  58030000           [062] test       13      0    ; to [64] if true
3F34  1AC00380           [063] jmp        16           ; to [80]
3F38  64434405           [064] self       13  10  273  ; -1519595333
3F3C  62830001           [065] call       13  2   2  
3F40  58030000           [066] test       13      0    ; to [68] if true
3F44  1A800080           [067] jmp        3            ; to [71]
3F48  64834405           [068] self       13  10  274  ; 991825889
3F4C  62430001           [069] call       13  2   1  
3F50  1A000280           [070] jmp        9            ; to [80]
3F54  64C34405           [071] self       13  10  275  ; 1511086594
3F58  62830001           [072] call       13  2   2  
3F5C  58030000           [073] test       13      0    ; to [75] if true
3F60  1A000180           [074] jmp        5            ; to [80]
3F64  5D030500           [075] getglobal  13  20       ; gGameRules
3F68  6443C506           [076] self       13  13  277  ; -27834691
3F6C  D2038005           [077] move       15  11     
3F70  17040000           [078] loadbool   16  0   0    ; false
3F74  62430002           [079] call       13  4   1  
3F78  4E430201           [080] gettable   13  2   9  
3F7C  6483C506           [081] self       13  13  278  ; -1201586349
3F80  62830001           [082] call       13  2   2  
3F84  58030000           [083] test       13      0    ; to [85] if true
3F88  1A400280           [084] jmp        10           ; to [95]
3F8C  4E430201           [085] gettable   13  2   9  
3F90  64C3C506           [086] self       13  13  279  ; 1032339126
3F94  DD030600           [087] getglobal  15  24       ; hostTennoName
3F98  62438001           [088] call       13  3   1  
3F9C  5D430600           [089] getglobal  13  25       ; table
3FA0  4E83C606           [090] gettable   13  13  282  ; -431682403
3FA4  92038000           [091] move       14  1      
3FA8  D2038005           [092] move       15  11     
3FAC  62438001           [093] call       13  3   1  
3FB0  1AC00280           [094] jmp        12           ; to [107]
3FB4  53030000           [095] getupval   13  0      
3FB8  4EC3C606           [096] gettable   13  13  283  ; "HIDDEN_PLAYER_NAME"
fail op	35
3FBC  63400306           [097] close      1  
3FC0  1AC00180           [098] jmp        8            ; to [107]
3FC4  5D430600           [099] getglobal  13  25       ; table
3FC8  4E83C606           [100] gettable   13  13  282  ; -431682403
3FCC  92030000           [101] move       14  0      
3FD0  CBC30000           [102] newtable   15  0   3    ; array=0, hash=3
3FD4  CC03038E           [103] settable   15  284 12   ; "name"
3FD8  CC83828E           [104] settable   15  285 10   ; "avatar"
3FDC  CCC3028F           [105] settable   15  286 11   ; "player"
3FE0  62438001           [106] call       13  3   1  
3FE4  64C3C705           [107] self       13  11  287  ; 51109503
3FE8  62830001           [108] call       13  2   2  
3FEC  6403C806           [109] self       13  13  288  ; -211549079
3FF0  62830001           [110] call       13  2   2  
3FF4  58030000           [111] test       13      0    ; to [113] if true
3FF8  1A800680           [112] jmp        27           ; to [140]
3FFC  64434805           [113] self       13  10  289  ; -1917464545
4000  62830001           [114] call       13  2   2  
4004  6483C806           [115] self       13  13  290  ; 819640984
4008  62830001           [116] call       13  2   2  
400C  9D830100           [117] getglobal  14  6        ; 1074689893
4010  D2038006           [118] move       15  13     
4014  A2830001           [119] call       14  2   2  
4018  98430000           [120] test       14      1    ; to [122] if false
401C  1A400480           [121] jmp        18           ; to [140]
4020  A4C3C806           [122] self       14  13  291  ; -333955620
4024  24444805           [123] self       16  10  289  ; -1917464545
4028  22840001           [124] call       16  2   2  
402C  24044908           [125] self       16  16  292  ; 86638152
4030  22040001           [126] call       16  2   0  
4034  A2430000           [127] call       14  0   1  
4038  9D830100           [128] getglobal  14  6        ; 1074689893
403C  E443C906           [129] self       15  13  293  ; -1411785325
4040  E2030001           [130] call       15  2   0  
4044  A2830000           [131] call       14  0   2  
4048  98430000           [132] test       14      1    ; to [134] if false
404C  1A400180           [133] jmp        6            ; to [140]
4050  A443C906           [134] self       14  13  293  ; -1411785325
4054  A2830001           [135] call       14  2   2  
4058  A4834907           [136] self       14  14  294  ; 1038470555
405C  17048000           [137] loadbool   16  1   0    ; true
4060  53048000           [138] getupval   17  1      
4064  A2430002           [139] call       14  4   1  
4068  9441EA7F           [140] forloop    6   -86      ; to [55] if loop
406C  8B030003           [141] newtable   14  6   0    ; array=6, hash=0
4070  DDC30900           [142] getglobal  15  39       ; -332969190
4074  19040A00           [143] loadk      16  40       ; "TennoB"
4078  E2830001           [144] call       15  2   2  
407C  1DC40900           [145] getglobal  16  39       ; -332969190
4080  59440A00           [146] loadk      17  41       ; "TennoC"
4084  22840001           [147] call       16  2   2  
4088  5DC40900           [148] getglobal  17  39       ; -332969190
408C  99840A00           [149] loadk      18  42       ; "TennoD"
4090  62840001           [150] call       17  2   2  
4094  9DC40900           [151] getglobal  18  39       ; -332969190
4098  D9C40A00           [152] loadk      19  43       ; "TennoE"
409C  A2840001           [153] call       18  2   2  
40A0  DDC40900           [154] getglobal  19  39       ; -332969190
40A4  19050B00           [155] loadk      20  44       ; "TennoF"
40A8  E2840001           [156] call       19  2   2  
40AC  1DC50900           [157] getglobal  20  39       ; -332969190
40B0  59450B00           [158] loadk      21  45       ; "TennoG"
40B4  22850001           [159] call       20  2   2  
40B8  5DC50900           [160] getglobal  21  39       ; -332969190
40BC  99850B00           [161] loadk      22  46       ; "TennoH"
40C0  62050001           [162] call       21  2   0  
40C4  9B430000           [163] setlist    14  0   1    ; index 1 to top
40C8  D9430200           [164] loadk      15  9        ; 0
40CC  1D440600           [165] getglobal  16  25       ; table
40D0  0EC44B08           [166] gettable   16  16  303  ; -1513783280
40D4  52040000           [167] move       17  0      
40D8  A5040000           [168] closure    18  0      
40DC  22448001           [169] call       16  3   1  
40E0  1D040C00           [170] getglobal  16  48       ; 1672515847
40E4  52040000           [171] move       17  0      
40E8  22040101           [172] call       16  2   4  
40EC  1A800380           [173] jmp        15           ; to [189]
40F0  5D850100           [174] getglobal  21  6        ; 1074689893
40F4  8E45470A           [175] gettable   22  20  285  ; "avatar"
40F8  62850001           [176] call       21  2   2  
40FC  58450000           [177] test       21      1    ; to [179] if false
4100  1AC00080           [178] jmp        4            ; to [183]
4104  4E45470A           [179] gettable   21  20  285  ; "avatar"
4108  64C5C50A           [180] self       21  21  279  ; 1032339126
410C  CEC50307           [181] gettable   23  14  15 
4110  62458001           [182] call       21  3   1  
4114  5D450600           [183] getglobal  21  25       ; table
4118  4E85C60A           [184] gettable   21  21  282  ; -431682403
411C  92058000           [185] move       22  1      
4120  CE85470A           [186] gettable   23  20  286  ; "player"
4124  62458001           [187] call       21  3   1  
4128  C343C207           [188] add        15  15  265  ; 0
412C  16840000           [189] tforloop   16      2    ; to [191] if exit
4130  1A80FB7F           [190] jmp        -17          ; to [174]
4134  5D850100           [191] getglobal  21  6        ; 1074689893
4138  9D050000           [192] getglobal  22  0        ; gRegion
413C  A4454C0B           [193] self       22  22  305  ; 2066713391
4140  A2050001           [194] call       22  2   0  
4144  62850000           [195] call       21  0   2  
fail op	9
4148  8905800A           [196] settable   22  21  0  
414C  58450000           [197] test       21      1    ; to [199] if false
4150  1A400080           [198] jmp        2            ; to [201]
4154  98050000           [199] test       22      0    ; to [201] if true
4158  1A000F80           [200] jmp        61           ; to [262]
415C  58050000           [201] test       21      0    ; to [203] if true
4160  1A400180           [202] jmp        6            ; to [209]
4164  DD850100           [203] getglobal  23  6        ; 1074689893
4168  1D060000           [204] getglobal  24  0        ; gRegion
416C  24464C0C           [205] self       24  24  305  ; 2066713391
4170  22060001           [206] call       24  2   0  
4174  E2850000           [207] call       23  0   2  
4178  5205800B           [208] move       21  23     
417C  58450000           [209] test       21      1    ; to [211] if false
4180  1A400180           [210] jmp        6            ; to [217]
4184  DD850100           [211] getglobal  23  6        ; 1074689893
4188  1D060000           [212] getglobal  24  0        ; gRegion
418C  24464C0C           [213] self       24  24  305  ; 2066713391
4190  22060001           [214] call       24  2   0  
4194  E2850000           [215] call       23  0   2  
fail op	9
4198  8905800B           [216] settable   22  23  0  
419C  DD050000           [217] getglobal  23  0        ; gRegion
41A0  E405C40B           [218] self       23  23  272  ; -1520831144
41A4  E2850001           [219] call       23  2   2  
41A8  D8450000           [220] test       23      1    ; to [222] if false
41AC  1AC00880           [221] jmp        36           ; to [258]
41B0  DD050000           [222] getglobal  23  0        ; gRegion
41B4  E445C00B           [223] self       23  23  257  ; -2071158816
41B8  E2850001           [224] call       23  2   2  
41BC  9200800B           [225] move       2   23     
41C0  DD050C00           [226] getglobal  23  48       ; 1672515847
41C4  12060001           [227] move       24  2      
41C8  E2050101           [228] call       23  2   4  
41CC  1AC00080           [229] jmp        4            ; to [234]
41D0  2487CC0D           [230] self       28  27  306  ; 2109594123
41D4  97070000           [231] loadbool   30  0   0    ; false
41D8  D7078000           [232] loadbool   31  1   0    ; true
41DC  22470002           [233] call       28  4   1  
41E0  D6850000           [234] tforloop   23      2    ; to [236] if exit
41E4  1A40FE7F           [235] jmp        -6           ; to [230]
41E8  1D070C00           [236] getglobal  28  48       ; 1672515847
41EC  52078000           [237] move       29  1      
41F0  22070101           [238] call       28  2   4  
41F4  1AC00380           [239] jmp        16           ; to [256]
41F8  5D880100           [240] getglobal  33  6        ; 1074689893
41FC  92080010           [241] move       34  32     
4200  62880001           [242] call       33  2   2  
4204  58480000           [243] test       33      1    ; to [245] if false
4208  1A800280           [244] jmp        11           ; to [256]
420C  64C84C10           [245] self       33  32  307  ; -2135866365
4210  62880001           [246] call       33  2   2  
4214  9D880100           [247] getglobal  34  6        ; 1074689893
4218  D2088010           [248] move       35  33     
421C  A2880001           [249] call       34  2   2  
4220  98480000           [250] test       34      1    ; to [252] if false
4224  1AC00080           [251] jmp        4            ; to [256]
4228  A488CC10           [252] self       34  33  306  ; 2109594123
422C  17098000           [253] loadbool   36  1   0    ; true
4230  57098000           [254] loadbool   37  1   0    ; true
4234  A2480002           [255] call       34  4   1  
4238  16870000           [256] tforloop   28      2    ; to [258] if exit
423C  1A40FB7F           [257] jmp        -18          ; to [240]
4240  9D080D00           [258] getglobal  34  52       ; 538022378
4244  D9080200           [259] loadk      35  8        ; 0
4248  A2480001           [260] call       34  2   1  
424C  1A80EF7F           [261] jmp        -65          ; to [197]
4250  9D080000           [262] getglobal  34  0        ; gRegion
4254  A4484011           [263] self       34  34  257  ; -2071158816
4258  A2880001           [264] call       34  2   2  
425C  92000011           [265] move       2   34     
4260  9D080C00           [266] getglobal  34  48       ; 1672515847
4264  D2080001           [267] move       35  2      
4268  A2080101           [268] call       34  2   4  
426C  1AC00080           [269] jmp        4            ; to [274]
4270  E4894C13           [270] self       39  38  306  ; 2109594123
4274  570A8000           [271] loadbool   41  1   0    ; true
4278  970A8000           [272] loadbool   42  1   0    ; true
427C  E2490002           [273] call       39  4   1  
4280  96880000           [274] tforloop   34      2    ; to [276] if exit
4284  1A40FE7F           [275] jmp        -6           ; to [270]
4288  DD890100           [276] getglobal  39  6        ; 1074689893
428C  120A8001           [277] move       40  3      
4290  E2890001           [278] call       39  2   2  
4294  D8490000           [279] test       39      1    ; to [281] if false
4298  1A000C80           [280] jmp        49           ; to [330]
429C  CA098001           [281] len        39  3      
fail op	21
42A0  15C00984           [282] concat     0   264 39 
42A4  1A400B80           [283] jmp        46           ; to [330]
42A8  DD090C00           [284] getglobal  39  48       ; 1672515847
42AC  120A8001           [285] move       40  3      
42B0  E2090101           [286] call       39  2   4  
42B4  1AC00980           [287] jmp        40           ; to [328]
42B8  1D8B0100           [288] getglobal  44  6        ; 1074689893
42BC  520B8015           [289] move       45  43     
42C0  228B0001           [290] call       44  2   2  
42C4  184B0000           [291] test       44      1    ; to [293] if false
42C8  1A800880           [292] jmp        35           ; to [328]
42CC  1D8B0100           [293] getglobal  44  6        ; 1074689893
42D0  64CBCC15           [294] self       45  43  307  ; -2135866365
42D4  620B0001           [295] call       45  2   0  
42D8  228B0000           [296] call       44  0   2  
42DC  184B0000           [297] test       44      1    ; to [299] if false
42E0  1A000780           [298] jmp        29           ; to [328]
42E4  24CBC715           [299] self       44  43  287  ; 51109503
42E8  228B0001           [300] call       44  2   2  
42EC  240B4816           [301] self       44  44  288  ; -211549079
42F0  228B0001           [302] call       44  2   2  
42F4  180B0000           [303] test       44      0    ; to [305] if true
42F8  1A800580           [304] jmp        23           ; to [328]
42FC  24CBCC15           [305] self       44  43  307  ; -2135866365
4300  228B0001           [306] call       44  2   2  
4304  244B4816           [307] self       44  44  289  ; -1917464545
4308  228B0001           [308] call       44  2   2  
430C  248B4816           [309] self       44  44  290  ; 819640984
4310  228B0001           [310] call       44  2   2  
4314  5D8B0100           [311] getglobal  45  6        ; 1074689893
4318  920B0016           [312] move       46  44     
431C  628B0001           [313] call       45  2   2  
4320  584B0000           [314] test       45      1    ; to [316] if false
4324  1AC00280           [315] jmp        12           ; to [328]
4328  5D8B0100           [316] getglobal  45  6        ; 1074689893
432C  A44B4916           [317] self       46  44  293  ; -1411785325
4330  A20B0001           [318] call       46  2   0  
4334  628B0000           [319] call       45  0   2  
4338  584B0000           [320] test       45      1    ; to [322] if false
433C  1A400180           [321] jmp        6            ; to [328]
4340  644B4916           [322] self       45  44  293  ; -1411785325
4344  628B0001           [323] call       45  2   2  
4348  648BC916           [324] self       45  45  294  ; 1038470555
434C  D70B0000           [325] loadbool   47  0   0    ; false
4350  130C8000           [326] getupval   48  1      
4354  624B0002           [327] call       45  4   1  
4358  D6890000           [328] tforloop   39      2    ; to [330] if exit
435C  1A40F57F           [329] jmp        -42          ; to [288]
4360  1E008000           [330] return     0   1      
                         * constants:
4364  35                 sizek (53)
4365  04                 const type 4
4366  08                 string size (8)
4367  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
436F  01                 const type 3
4370  E09F8C84           const [1]: (-2071158816)
4374  01                 const type 3
4375  9FE1FB48           const [2]: (1224466847)
4379  04                 const type 4
437A  01                 string size (0)
                         const [3]: ""
437C  04                 const type 4
437D  11                 string size (17)
437E  674D61746368696E+  "gMatchin"
4386  6753657276696365+  "gService"
438E  00                 "\0"
                         const [4]: "gMatchingService"
438F  01                 const type 3
4390  4636E0D5           const [5]: (-706726330)
4394  01                 const type 3
4395  65770E40           const [6]: (1074689893)
4399  01                 const type 3
439A  E91C817E           const [7]: (2122390761)
439E  03                 const type 3
439F  00000000           const [8]: (0)
43A3  03                 const type 3
43A4  0000803F           const [9]: (0)
43A8  01                 const type 3
43A9  DD8258DE           const [10]: (-564624675)
43AD  01                 const type 3
43AE  F9284A14           const [11]: (340404473)
43B2  01                 const type 3
43B3  6B25B193           const [12]: (-1817107093)
43B7  04                 const type 4
43B8  0B                 string size (11)
43B9  486F7374206E616D+  "Host nam"
43C1  652000             "e \0"
                         const [13]: "Host name "
43C4  04                 const type 4
43C5  0F                 string size (15)
43C6  4E756D2061766174+  "Num avat"
43CE  617273203D2000     "ars = \0"
                         const [14]: "Num avatars = "
43D5  01                 const type 3
43D6  BCD6AE9F           const [15]: (-1615931716)
43DA  01                 const type 3
43DB  58F559A5           const [16]: (-1520831144)
43DF  01                 const type 3
43E0  BBD06CA5           const [17]: (-1519595333)
43E4  01                 const type 3
43E5  E10F1E3B           const [18]: (991825889)
43E9  01                 const type 3
43EA  025A115A           const [19]: (1511086594)
43EE  04                 const type 4
43EF  0B                 string size (11)
43F0  6747616D6552756C+  "gGameRul"
43F8  657300             "es\0"
                         const [20]: "gGameRules"
43FB  01                 const type 3
43FC  BD4657FE           const [21]: (-27834691)
4400  01                 const type 3
4401  533F61B8           const [22]: (-1201586349)
4405  01                 const type 3
4406  B63E883D           const [23]: (1032339126)
440A  04                 const type 4
440B  0E                 string size (14)
440C  686F737454656E6E+  "hostTenn"
4414  6F4E616D6500       "oName\0"
                         const [24]: "hostTennoName"
441A  04                 const type 4
441B  06                 string size (6)
441C  7461626C6500       "table\0"
                         const [25]: "table"
4422  01                 const type 3
4423  9D0C45E6           const [26]: (-431682403)
4427  04                 const type 4
4428  13                 string size (19)
4429  48494444454E5F50+  "HIDDEN_P"
4431  4C415945525F4E41+  "LAYER_NA"
4439  4D4500             "ME\0"
                         const [27]: "HIDDEN_PLAYER_NAME"
443C  04                 const type 4
443D  05                 string size (5)
443E  6E616D6500         "name\0"
                         const [28]: "name"
4443  04                 const type 4
4444  07                 string size (7)
4445  61766174617200     "avatar\0"
                         const [29]: "avatar"
444C  04                 const type 4
444D  07                 string size (7)
444E  706C6179657200     "player\0"
                         const [30]: "player"
4455  01                 const type 3
4456  7FDE0B03           const [31]: (51109503)
445A  01                 const type 3
445B  690464F3           const [32]: (-211549079)
445F  01                 const type 3
4460  1FD0B58D           const [33]: (-1917464545)
4464  01                 const type 3
4465  98BADA30           const [34]: (819640984)
4469  01                 const type 3
446A  DC3D18EC           const [35]: (-333955620)
446E  01                 const type 3
446F  48FE2905           const [36]: (86638152)
4473  01                 const type 3
4474  93DDD9AB           const [37]: (-1411785325)
4478  01                 const type 3
4479  9BCDE53D           const [38]: (1038470555)
447D  01                 const type 3
447E  1A4B27EC           const [39]: (-332969190)
4482  04                 const type 4
4483  07                 string size (7)
4484  54656E6E6F4200     "TennoB\0"
                         const [40]: "TennoB"
448B  04                 const type 4
448C  07                 string size (7)
448D  54656E6E6F4300     "TennoC\0"
                         const [41]: "TennoC"
4494  04                 const type 4
4495  07                 string size (7)
4496  54656E6E6F4400     "TennoD\0"
                         const [42]: "TennoD"
449D  04                 const type 4
449E  07                 string size (7)
449F  54656E6E6F4500     "TennoE\0"
                         const [43]: "TennoE"
44A6  04                 const type 4
44A7  07                 string size (7)
44A8  54656E6E6F4600     "TennoF\0"
                         const [44]: "TennoF"
44AF  04                 const type 4
44B0  07                 string size (7)
44B1  54656E6E6F4700     "TennoG\0"
                         const [45]: "TennoG"
44B8  04                 const type 4
44B9  07                 string size (7)
44BA  54656E6E6F4800     "TennoH\0"
                         const [46]: "TennoH"
44C1  01                 const type 3
44C2  1080C5A5           const [47]: (-1513783280)
44C6  01                 const type 3
44C7  0791B063           const [48]: (1672515847)
44CB  01                 const type 3
44CC  2F8B2F7B           const [49]: (2066713391)
44D0  01                 const type 3
44D1  0BDABD7D           const [50]: (2109594123)
44D5  01                 const type 3
44D6  0344B180           const [51]: (-2135866365)
44DA  01                 const type 3
44DB  EA911120           const [52]: (538022378)
                         * functions:
44DF  01                 sizep (1)
                         
44E0                     ** function [0] definition (level 3)
                         ** start of function **
44E0  00                 string size (0)
                         source name: (none)
44E2  05                 line defined (751)
44E3  EF                 last line defined (751)
44E4  05                 nups (0)
44E5  00                 numparams (2)
44E6  02                 is_vararg (0)
44E7  00                 maxstacksize (4)
                         * code:
44E9  08                 sizecode (8)
44EA  8E004000           [1] gettable   2   0   256  ; "name"
44EE  CE00C000           [2] gettable   3   1   256  ; "name"
fail op	21
44F2  55C00001           [3] concat     1   2   3  
44F6  1A000080           [4] jmp        1            ; to [6]
44FA  97400000           [5] loadbool   2   0   1    ; false, to [7]
44FE  97008000           [6] loadbool   2   1   0    ; true
4502  9E000001           [7] return     2   2      
4506  1E008000           [8] return     0   1      
                         * constants:
450A  01                 sizek (1)
450B  04                 const type 4
450C  05                 string size (5)
450D  6E616D6500         "name\0"
                         const [0]: "name"
                         * functions:
4512  00                 sizep (0)
                         * lines:
4513  08                 sizelineinfo (8)
                         [pc] (line)
4514  EF                 [1] (-17)
4515  02                 [2] (-17)
4516  00                 [3] (-17)
4517  00                 [4] (-17)
4518  EF                 [5] (-17)
4519  02                 [6] (-17)
451A  00                 [7] (-17)
451B  00                 [8] (-17)
                         * locals:
4534  00                 sizelocvars (0)
                         * upvalues:
4535  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
4537  02                 sizelineinfo (330)
                         [pc] (line)
4538  AF                 [001] (-81)
4539  02                 [002] (-79)
453A  00                 [003] (-71)
453B  00                 [004] (-71)
453C  B1                 [005] (-71)
453D  02                 [006] (-70)
453E  00                 [007] (-70)
453F  00                 [008] (-70)
4540  B9                 [009] (-67)
4541  02                 [010] (-66)
4542  00                 [011] (-66)
4543  00                 [012] (-66)
4544  B9                 [013] (-65)
4545  02                 [014] (-65)
4546  00                 [015] (-65)
4547  00                 [016] (-65)
4548  B9                 [017] (-65)
4549  02                 [018] (-64)
454A  00                 [019] (-64)
454B  00                 [020] (-64)
454C  BA                 [021] (-64)
454D  02                 [022] (-63)
454E  00                 [023] (-63)
454F  00                 [024] (-63)
4550  BA                 [025] (-62)
4551  02                 [026] (-62)
4552  00                 [027] (-62)
4553  00                 [028] (-62)
4554  BA                 [029] (-62)
4555  02                 [030] (-62)
4556  00                 [031] (-59)
4557  00                 [032] (-59)
4558  BD                 [033] (-59)
4559  02                 [034] (-59)
455A  00                 [035] (-59)
455B  00                 [036] (-57)
455C  BE                 [037] (-57)
455D  02                 [038] (-57)
455E  00                 [039] (-57)
455F  00                 [040] (-57)
4560  BE                 [041] (-57)
4561  02                 [042] (-57)
4562  00                 [043] (-57)
4563  00                 [044] (-55)
4564  BE                 [045] (-55)
4565  02                 [046] (-55)
4566  00                 [047] (-55)
4567  00                 [048] (-55)
4568  BF                 [049] (-55)
4569  02                 [050] (-55)
456A  00                 [051] (-53)
456B  00                 [052] (-53)
456C  BF                 [053] (-53)
456D  02                 [054] (-53)
456E  00                 [055] (-52)
456F  00                 [056] (-51)
4570  BF                 [057] (-50)
4571  02                 [058] (-50)
4572  00                 [059] (-48)
4573  00                 [060] (-48)
4574  BF                 [061] (-48)
4575  02                 [062] (-48)
4576  00                 [063] (-48)
4577  00                 [064] (-47)
4578  BF                 [065] (-47)
4579  02                 [066] (-47)
457A  00                 [067] (-47)
457B  00                 [068] (-46)
457C  C0                 [069] (-46)
457D  02                 [070] (-46)
457E  00                 [071] (-45)
457F  00                 [072] (-45)
4580  C0                 [073] (-45)
4581  02                 [074] (-45)
4582  00                 [075] (-44)
4583  00                 [076] (-44)
4584  C0                 [077] (-44)
4585  02                 [078] (-44)
4586  00                 [079] (-44)
4587  00                 [080] (-40)
4588  C0                 [081] (-40)
4589  02                 [082] (-40)
458A  00                 [083] (-40)
458B  00                 [084] (-40)
458C  C1                 [085] (-39)
458D  02                 [086] (-39)
458E  00                 [087] (-39)
458F  00                 [088] (-39)
4590  C1                 [089] (-38)
4591  02                 [090] (-38)
4592  00                 [091] (-38)
4593  00                 [092] (-38)
4594  C1                 [093] (-38)
4595  02                 [094] (-38)
4596  00                 [095] (-37)
4597  00                 [096] (-37)
4598  C2                 [097] (-37)
4599  02                 [098] (-37)
459A  00                 [099] (-36)
459B  00                 [100] (-36)
459C  C2                 [101] (-36)
459D  02                 [102] (-36)
459E  00                 [103] (-36)
459F  00                 [104] (-36)
45A0  C2                 [105] (-36)
45A1  02                 [106] (-36)
45A2  00                 [107] (-32)
45A3  00                 [108] (-32)
45A4  C2                 [109] (-32)
45A5  02                 [110] (-32)
45A6  00                 [111] (-32)
45A7  00                 [112] (-32)
45A8  C2                 [113] (-31)
45A9  02                 [114] (-31)
45AA  00                 [115] (-31)
45AB  00                 [116] (-31)
45AC  C2                 [117] (-30)
45AD  02                 [118] (-30)
45AE  00                 [119] (-30)
45AF  00                 [120] (-30)
45B0  C5                 [121] (-30)
45B1  02                 [122] (-28)
45B2  00                 [123] (-28)
45B3  00                 [124] (-28)
45B4  C5                 [125] (-28)
45B5  02                 [126] (-28)
45B6  00                 [127] (-28)
45B7  00                 [128] (-27)
45B8  C5                 [129] (-27)
45B9  02                 [130] (-27)
45BA  00                 [131] (-27)
45BB  00                 [132] (-27)
45BC  C5                 [133] (-27)
45BD  02                 [134] (-26)
45BE  00                 [135] (-26)
45BF  00                 [136] (-26)
45C0  C5                 [137] (-26)
45C1  02                 [138] (-26)
45C2  00                 [139] (-26)
45C3  00                 [140] (-53)
45C4  C7                 [141] (-19)
45C5  02                 [142] (-19)
45C6  00                 [143] (-19)
45C7  00                 [144] (-19)
45C8  C7                 [145] (-19)
45C9  02                 [146] (-19)
45CA  00                 [147] (-19)
45CB  00                 [148] (-19)
45CC  C7                 [149] (-19)
45CD  02                 [150] (-19)
45CE  00                 [151] (-19)
45CF  00                 [152] (-19)
45D0  C7                 [153] (-19)
45D1  02                 [154] (-19)
45D2  00                 [155] (-19)
45D3  00                 [156] (-19)
45D4  C7                 [157] (-19)
45D5  02                 [158] (-19)
45D6  00                 [159] (-19)
45D7  00                 [160] (-19)
45D8  C7                 [161] (-19)
45D9  02                 [162] (-19)
45DA  00                 [163] (-19)
45DB  00                 [164] (-18)
45DC  C7                 [165] (-17)
45DD  02                 [166] (-17)
45DE  00                 [167] (-17)
45DF  00                 [168] (-17)
45E0  C7                 [169] (-17)
45E1  02                 [170] (-16)
45E2  00                 [171] (-16)
45E3  00                 [172] (-16)
45E4  C9                 [173] (-16)
45E5  02                 [174] (-15)
45E6  00                 [175] (-15)
45E7  00                 [176] (-15)
45E8  C9                 [177] (-15)
45E9  02                 [178] (-15)
45EA  00                 [179] (-14)
45EB  00                 [180] (-14)
45EC  C9                 [181] (-14)
45ED  02                 [182] (-14)
45EE  00                 [183] (-12)
45EF  00                 [184] (-12)
45F0  C9                 [185] (-12)
45F1  02                 [186] (-12)
45F2  00                 [187] (-12)
45F3  00                 [188] (-11)
45F4  C9                 [189] (-16)
45F5  02                 [190] (-11)
45F6  00                 [191] (-7)
45F7  00                 [192] (-7)
45F8  C9                 [193] (-7)
45F9  02                 [194] (-7)
45FA  00                 [195] (-7)
45FB  00                 [196] (-6)
45FC  C9                 [197] (-5)
45FD  02                 [198] (-5)
45FE  00                 [199] (-5)
45FF  00                 [200] (-5)
4600  CB                 [201] (-4)
4601  02                 [202] (-4)
4602  00                 [203] (-3)
4603  00                 [204] (-3)
4604  CB                 [205] (-3)
4605  02                 [206] (-3)
4606  00                 [207] (-3)
4607  00                 [208] (-3)
4608  CB                 [209] (-1)
4609  02                 [210] (-1)
460A  00                 [211] (0)
460B  00                 [212] (0)
460C  CB                 [213] (0)
460D  02                 [214] (0)
460E  00                 [215] (0)
460F  00                 [216] (0)
4610  CC                 [217] (3)
4611  02                 [218] (3)
4612  00                 [219] (3)
4613  00                 [220] (3)
4614  CD                 [221] (3)
4615  02                 [222] (5)
4616  00                 [223] (5)
4617  00                 [224] (5)
4618  CE                 [225] (5)
4619  02                 [226] (7)
461A  00                 [227] (7)
461B  00                 [228] (7)
461C  CE                 [229] (7)
461D  02                 [230] (8)
461E  00                 [231] (8)
461F  00                 [232] (8)
4620  D0                 [233] (8)
4621  02                 [234] (7)
4622  00                 [235] (8)
4623  00                 [236] (11)
4624  D0                 [237] (11)
4625  02                 [238] (11)
4626  00                 [239] (11)
4627  00                 [240] (12)
4628  D0                 [241] (12)
4629  02                 [242] (12)
462A  00                 [243] (12)
462B  00                 [244] (12)
462C  D0                 [245] (13)
462D  02                 [246] (13)
462E  00                 [247] (14)
462F  00                 [248] (14)
4630  D0                 [249] (14)
4631  02                 [250] (14)
4632  00                 [251] (14)
4633  00                 [252] (15)
4634  D1                 [253] (15)
4635  02                 [254] (15)
4636  00                 [255] (15)
4637  00                 [256] (11)
4638  D1                 [257] (17)
4639  02                 [258] (21)
463A  00                 [259] (21)
463B  00                 [260] (21)
463C  D1                 [261] (21)
463D  02                 [262] (24)
463E  00                 [263] (24)
463F  00                 [264] (24)
4640  D1                 [265] (24)
4641  02                 [266] (25)
4642  00                 [267] (25)
4643  00                 [268] (25)
4644  D2                 [269] (25)
4645  02                 [270] (26)
4646  00                 [271] (26)
4647  00                 [272] (26)
4648  D2                 [273] (26)
4649  02                 [274] (25)
464A  00                 [275] (26)
464B  00                 [276] (30)
464C  D2                 [277] (30)
464D  02                 [278] (30)
464E  00                 [279] (30)
464F  00                 [280] (30)
4650  D3                 [281] (30)
4651  02                 [282] (30)
4652  00                 [283] (30)
4653  00                 [284] (31)
4654  D3                 [285] (31)
4655  02                 [286] (31)
4656  00                 [287] (31)
4657  00                 [288] (32)
4658  D3                 [289] (32)
4659  02                 [290] (32)
465A  00                 [291] (32)
465B  00                 [292] (32)
465C  D3                 [293] (32)
465D  02                 [294] (32)
465E  00                 [295] (32)
465F  00                 [296] (32)
4660  D4                 [297] (32)
4661  02                 [298] (32)
4662  00                 [299] (32)
4663  00                 [300] (32)
4664  D4                 [301] (32)
4665  02                 [302] (32)
4666  00                 [303] (32)
4667  00                 [304] (32)
4668  D4                 [305] (33)
4669  02                 [306] (33)
466A  00                 [307] (33)
466B  00                 [308] (33)
466C  D4                 [309] (33)
466D  02                 [310] (33)
466E  00                 [311] (34)
466F  00                 [312] (34)
4670  D4                 [313] (34)
4671  02                 [314] (34)
4672  00                 [315] (34)
4673  00                 [316] (34)
4674  D8                 [317] (34)
4675  02                 [318] (34)
4676  00                 [319] (34)
4677  00                 [320] (34)
4678  D8                 [321] (34)
4679  02                 [322] (35)
467A  00                 [323] (35)
467B  00                 [324] (35)
467C  D8                 [325] (35)
467D  02                 [326] (35)
467E  00                 [327] (35)
467F  00                 [328] (31)
4680  D8                 [329] (37)
4681  02                 [330] (41)
                         * locals:
4A60  00                 sizelocvars (0)
                         * upvalues:
4A61  00                 sizeupvalues (0)
                         ** end of function **

                         
4A62                     ** function [18] definition (level 2)
                         ** start of function **
4A62  00                 string size (0)
                         source name: (none)
4A64  06                 line defined (811)
4A65  A4                 last line defined (932)
4A66  07                 nups (2)
4A67  02                 numparams (1)
4A68  01                 is_vararg (0)
4A69  00                 maxstacksize (53)
                         * code:
4A6C  02                 sizecode (305)
4A6D  5D000000           [001] getglobal  1   0        ; gGameRules
4A71  6440C000           [002] self       1   1   257  ; -1957065004
4A75  DD800000           [003] getglobal  3   2        ; gLotusGameRulesType
4A79  62808001           [004] call       1   3   2  
4A7D  58000000           [005] test       1       0    ; to [7] if true
4A81  1A400880           [006] jmp        34           ; to [41]
4A85  5DC00000           [007] getglobal  1   3        ; 1074689893
4A89  9D000100           [008] getglobal  2   4        ; lisetToHide
4A8D  62800001           [009] call       1   2   2  
4A91  58400000           [010] test       1       1    ; to [12] if false
4A95  1AC00080           [011] jmp        4            ; to [16]
4A99  5D000100           [012] getglobal  1   4        ; lisetToHide
4A9D  6440C100           [013] self       1   1   261  ; -1923578185
4AA1  D9800100           [014] loadk      3   6        ; "Hide"
4AA5  62408001           [015] call       1   3   1  
4AA9  5DC00100           [016] getglobal  1   7        ; gRegion
4AAD  6400C200           [017] self       1   1   264  ; -2071158816
4AB1  62800001           [018] call       1   2   2  
4AB5  9D400200           [019] getglobal  2   9        ; 1672515847
4AB9  D2008000           [020] move       3   1      
4ABD  A2000101           [021] call       2   2   4  
4AC1  1A800380           [022] jmp        15           ; to [38]
4AC5  E4814203           [023] self       7   6   266  ; -1201586349
4AC9  E2810001           [024] call       7   2   2  
4ACD  D8010000           [025] test       7       0    ; to [27] if true
4AD1  1A400180           [026] jmp        6            ; to [33]
4AD5  E4C14203           [027] self       7   6   267  ; 1032339126
4AD9  5D020300           [028] getglobal  9   12       ; -332969190
4ADD  99420300           [029] loadk      10  13       ; "Tenno"
4AE1  62020001           [030] call       9   2   0  
4AE5  E2410000           [031] call       7   0   1  
4AE9  1A000180           [032] jmp        5            ; to [38]
4AED  E4C14203           [033] self       7   6   267  ; 1032339126
4AF1  5D020300           [034] getglobal  9   12       ; -332969190
4AF5  99820300           [035] loadk      10  14       ; "Other"
4AF9  62020001           [036] call       9   2   0  
4AFD  E2410000           [037] call       7   0   1  
4B01  96800000           [038] tforloop   2       2    ; to [40] if exit
4B05  1A80FB7F           [039] jmp        -17          ; to [23]
4B09  1E008000           [040] return     0   1      
4B0D  CB010000           [041] newtable   7   0   0    ; array=0, hash=0
4B11  0B020000           [042] newtable   8   0   0    ; array=0, hash=0
4B15  5DC20100           [043] getglobal  9   7        ; gRegion
4B19  6402C204           [044] self       9   9   264  ; -2071158816
4B1D  62820001           [045] call       9   2   2  
4B21  9DC20100           [046] getglobal  10  7        ; gRegion
4B25  A4C24305           [047] self       10  10  271  ; 1224466847
4B29  A2820001           [048] call       10  2   2  
4B2D  C6028005           [049] loadnil    11  11     
4B31  1DC30000           [050] getglobal  12  3        ; 1074689893
4B35  52038004           [051] move       13  9      
4B39  22830001           [052] call       12  2   2  
4B3D  18430000           [053] test       12      1    ; to [55] if false
4B41  1A801080           [054] jmp        67           ; to [122]
4B45  0A038004           [055] len        12  9      
fail op	21
4B49  15000388           [056] concat     0   272 12 
4B4D  1AC00F80           [057] jmp        64           ; to [122]
4B51  1D430400           [058] getglobal  12  17       ; -1817107093
4B55  59830400           [059] loadk      13  18       ; "Num avatars = "
4B59  9DC30400           [060] getglobal  14  19       ; -1615931716
4B5D  CA038004           [061] len        15  9      
4B61  A2830001           [062] call       14  2   2  
4B65  42838306           [063] concat     13  13  14 
4B69  22430001           [064] call       12  2   1  
4B6D  19030500           [065] loadk      12  20       ; 0
4B71  4A038004           [066] len        13  9      
4B75  99030500           [067] loadk      14  20       ; 0
4B79  10C30C80           [068] forprep    12  52       ; to [121]
4B7D  0EC48304           [069] gettable   16  9   15 
4B81  4EC40305           [070] gettable   17  10  15 
4B85  8EC48304           [071] gettable   18  9   15 
4B89  A4844209           [072] self       18  18  266  ; -1201586349
4B8D  A2840001           [073] call       18  2   2  
4B91  98040000           [074] test       18      0    ; to [76] if true
4B95  1AC00280           [075] jmp        12           ; to [88]
4B99  8EC48304           [076] gettable   18  9   15 
4B9D  A4C44209           [077] self       18  18  267  ; 1032339126
4BA1  1D050300           [078] getglobal  20  12       ; -332969190
4BA5  59450300           [079] loadk      21  13       ; "Tenno"
4BA9  22050001           [080] call       20  2   0  
4BAD  A2440000           [081] call       18  0   1  
4BB1  9D440500           [082] getglobal  18  21       ; table
4BB5  8E844509           [083] gettable   18  18  278  ; -431682403
4BB9  D2048003           [084] move       19  7      
4BBD  12050008           [085] move       20  16     
4BC1  A2448001           [086] call       18  3   1  
4BC5  D2020008           [087] move       11  16     
4BC9  A4C4C508           [088] self       18  17  279  ; 51109503
4BCD  A2840001           [089] call       18  2   2  
4BD1  A4044609           [090] self       18  18  280  ; -211549079
4BD5  A2840001           [091] call       18  2   2  
4BD9  98040000           [092] test       18      0    ; to [94] if true
4BDD  1A800680           [093] jmp        27           ; to [121]
4BE1  A4444608           [094] self       18  16  281  ; -1917464545
4BE5  A2840001           [095] call       18  2   2  
4BE9  A4844609           [096] self       18  18  282  ; 819640984
4BED  A2840001           [097] call       18  2   2  
4BF1  DDC40000           [098] getglobal  19  3        ; 1074689893
4BF5  12050009           [099] move       20  18     
4BF9  E2840001           [100] call       19  2   2  
4BFD  D8440000           [101] test       19      1    ; to [103] if false
4C01  1A400480           [102] jmp        18           ; to [121]
4C05  E4C44609           [103] self       19  18  283  ; -333955620
4C09  64454608           [104] self       21  16  281  ; -1917464545
4C0D  62850001           [105] call       21  2   2  
4C11  6405C70A           [106] self       21  21  284  ; 86638152
4C15  62050001           [107] call       21  2   0  
4C19  E2440000           [108] call       19  0   1  
4C1D  DDC40000           [109] getglobal  19  3        ; 1074689893
4C21  24454709           [110] self       20  18  285  ; -1411785325
4C25  22050001           [111] call       20  2   0  
4C29  E2840000           [112] call       19  0   2  
4C2D  D8440000           [113] test       19      1    ; to [115] if false
4C31  1A400180           [114] jmp        6            ; to [121]
4C35  E4444709           [115] self       19  18  285  ; -1411785325
4C39  E2840001           [116] call       19  2   2  
4C3D  E484C709           [117] self       19  19  286  ; 1038470555
4C41  57058000           [118] loadbool   21  1   0    ; true
4C45  93050000           [119] getupval   22  0      
4C49  E2440002           [120] call       19  4   1  
4C4D  1483F27F           [121] forloop    12  -53      ; to [69] if loop
4C51  DDC40100           [122] getglobal  19  7        ; gRegion
4C55  E4C4C709           [123] self       19  19  287  ; -1485896174
4C59  5D050300           [124] getglobal  21  12       ; -332969190
4C5D  99050800           [125] loadk      22  32       ; "PlayerLiset"
4C61  62050001           [126] call       21  2   0  
4C65  E2840000           [127] call       19  0   2  
4C69  0605000A           [128] loadnil    20  20     
4C6D  4A058009           [129] len        21  19     
fail op	21
4C71  15400588           [130] concat     0   272 21 
4C75  1A000080           [131] jmp        1            ; to [133]
4C79  0E05C509           [132] gettable   20  19  276  ; 0
4C7D  5D450800           [133] getglobal  21  33       ; _T
4C81  4E85C80A           [134] gettable   21  21  290  ; "gHubOpenCinStarted"
fail op	9
4C85  4905800A           [135] settable   21  21  0  
fail op	9
4C89  8905800A           [136] settable   22  21  0  
4C8D  58450000           [137] test       21      1    ; to [139] if false
4C91  1A400080           [138] jmp        2            ; to [141]
4C95  98050000           [139] test       22      0    ; to [141] if true
4C99  1AC01380           [140] jmp        80           ; to [221]
4C9D  58050000           [141] test       21      0    ; to [143] if true
4CA1  1A800080           [142] jmp        3            ; to [146]
4CA5  DD450800           [143] getglobal  23  33       ; _T
4CA9  CE85C80B           [144] gettable   23  23  290  ; "gHubOpenCinStarted"
fail op	9
4CAD  4905800B           [145] settable   21  23  0  
4CB1  58450000           [146] test       21      1    ; to [148] if false
4CB5  1A000680           [147] jmp        25           ; to [173]
4CB9  DDC50000           [148] getglobal  23  3        ; 1074689893
4CBD  1DC60100           [149] getglobal  24  7        ; gRegion
4CC1  24C6480C           [150] self       24  24  291  ; 2066713391
4CC5  22060001           [151] call       24  2   0  
4CC9  E2850000           [152] call       23  0   2  
fail op	9
4CCD  C905800B           [153] settable   23  23  0  
4CD1  98450000           [154] test       22      1    ; to [156] if false
4CD5  1AC00380           [155] jmp        16           ; to [172]
4CD9  D8050000           [156] test       23      0    ; to [158] if true
4CDD  1A400380           [157] jmp        14           ; to [172]
4CE1  1DC60000           [158] getglobal  24  3        ; 1074689893
4CE5  5206000A           [159] move       25  20     
4CE9  22860001           [160] call       24  2   2  
4CED  18460000           [161] test       24      1    ; to [163] if false
4CF1  1A000280           [162] jmp        9            ; to [172]
4CF5  2406490A           [163] self       24  20  292  ; -1396353698
4CF9  93068000           [164] getupval   26  1      
4CFD  D7068000           [165] loadbool   27  1   0    ; true
4D01  19070500           [166] loadk      28  20       ; 0
4D05  22468002           [167] call       24  5   1  
4D09  2446490A           [168] self       24  20  293  ; -924879488
4D0D  99060500           [169] loadk      26  20       ; 0
4D11  D9060500           [170] loadk      27  20       ; 0
4D15  22460002           [171] call       24  4   1  
4D19  9205800B           [172] move       22  23     
4D1D  1DC60000           [173] getglobal  24  3        ; 1074689893
4D21  52068005           [174] move       25  11     
4D25  22860001           [175] call       24  2   2  
4D29  18460000           [176] test       24      1    ; to [178] if false
4D2D  1A800980           [177] jmp        39           ; to [217]
4D31  1DC60100           [178] getglobal  24  7        ; gRegion
4D35  2486490C           [179] self       24  24  294  ; 19448449
4D39  22860001           [180] call       24  2   2  
4D3D  59C60900           [181] loadk      25  39       ; 0
4D41  A4064A00           [182] self       26  0   296  ; 1839670529
4D45  A2860001           [183] call       26  2   2  
4D49  D9060500           [184] loadk      27  20       ; 0
4D4D  0A07000C           [185] len        28  24     
4D51  59070500           [186] loadk      29  20       ; 0
4D55  D0C60680           [187] forprep    27  28       ; to [216]
4D59  CE87070C           [188] gettable   31  24  30 
4D5D  1DC80000           [189] getglobal  32  3        ; 1074689893
4D61  5208800F           [190] move       33  31     
4D65  22880001           [191] call       32  2   2  
4D69  18480000           [192] test       32      1    ; to [194] if false
4D6D  1A400580           [193] jmp        22           ; to [216]
fail op	35
4D71  63C0820F           [194] close      1  
4D75  1AC00480           [195] jmp        20           ; to [216]
4D79  2448CA0F           [196] self       32  31  297  ; -1944400657
4D7D  22880001           [197] call       32  2   2  
4D81  18080000           [198] test       32      0    ; to [200] if true
4D85  1AC00380           [199] jmp        16           ; to [216]
4D89  1D880A00           [200] getglobal  32  42       ; -1662520301
4D8D  6408CA0F           [201] self       33  31  296  ; 1839670529
4D91  62880001           [202] call       33  2   2  
4D95  9208000D           [203] move       34  26     
4D99  22888001           [204] call       32  3   2  
fail op	21
4D9D  15400610           [205] concat     0   32  25 
4DA1  1A000280           [206] jmp        9            ; to [216]
4DA5  64C8CA0F           [207] self       33  31  299  ; 2109594123
4DA9  D7080000           [208] loadbool   35  0   0    ; false
4DAD  17098000           [209] loadbool   36  1   0    ; true
4DB1  62480002           [210] call       33  4   1  
4DB5  5D480500           [211] getglobal  33  21       ; table
4DB9  4E88C510           [212] gettable   33  33  278  ; -431682403
4DBD  92080004           [213] move       34  8      
4DC1  D208800F           [214] move       35  31     
4DC5  62488001           [215] call       33  3   1  
4DC9  D486F87F           [216] forloop    27  -29      ; to [188] if loop
4DCD  5D080B00           [217] getglobal  33  44       ; 538022378
4DD1  99080400           [218] loadk      34  16       ; 0
4DD5  62480001           [219] call       33  2   1  
4DD9  1AC0EA7F           [220] jmp        -84          ; to [137]
4DDD  5DC80100           [221] getglobal  33  7        ; gRegion
4DE1  6408C210           [222] self       33  33  264  ; -2071158816
4DE5  62880001           [223] call       33  2   2  
4DE9  52028010           [224] move       9   33     
4DED  5D480200           [225] getglobal  33  9        ; 1672515847
4DF1  92088004           [226] move       34  9      
4DF5  62080101           [227] call       33  2   4  
4DF9  1AC00080           [228] jmp        4            ; to [233]
4DFD  A4C9CA12           [229] self       38  37  299  ; 2109594123
4E01  170A8000           [230] loadbool   40  1   0    ; true
4E05  570A8000           [231] loadbool   41  1   0    ; true
4E09  A2490002           [232] call       38  4   1  
4E0D  56880000           [233] tforloop   33      2    ; to [235] if exit
4E11  1A40FE7F           [234] jmp        -6           ; to [229]
4E15  9D490200           [235] getglobal  38  9        ; 1672515847
4E19  D2090004           [236] move       39  8      
4E1D  A2090101           [237] call       38  2   4  
4E21  1A000280           [238] jmp        9            ; to [248]
4E25  DDCA0000           [239] getglobal  43  3        ; 1074689893
4E29  120B0015           [240] move       44  42     
4E2D  E28A0001           [241] call       43  2   2  
4E31  D84A0000           [242] test       43      1    ; to [244] if false
4E35  1AC00080           [243] jmp        4            ; to [248]
4E39  E4CA4A15           [244] self       43  42  299  ; 2109594123
4E3D  570B8000           [245] loadbool   45  1   0    ; true
4E41  970B8000           [246] loadbool   46  1   0    ; true
4E45  E24A0002           [247] call       43  4   1  
4E49  96890000           [248] tforloop   38      2    ; to [250] if exit
4E4D  1A00FD7F           [249] jmp        -11          ; to [239]
4E51  DDCA0000           [250] getglobal  43  3        ; 1074689893
4E55  120B0005           [251] move       44  10     
4E59  E28A0001           [252] call       43  2   2  
4E5D  D84A0000           [253] test       43      1    ; to [255] if false
4E61  1A800A80           [254] jmp        43           ; to [298]
4E65  CA0A0005           [255] len        43  10     
fail op	21
4E69  15C00A88           [256] concat     0   272 43 
4E6D  1AC00980           [257] jmp        40           ; to [298]
4E71  DD4A0200           [258] getglobal  43  9        ; 1672515847
4E75  120B0005           [259] move       44  10     
4E79  E20A0101           [260] call       43  2   4  
4E7D  1A400880           [261] jmp        34           ; to [296]
4E81  1DCC0000           [262] getglobal  48  3        ; 1074689893
4E85  520C8017           [263] move       49  47     
4E89  228C0001           [264] call       48  2   2  
4E8D  184C0000           [265] test       48      1    ; to [267] if false
4E91  1A000780           [266] jmp        29           ; to [296]
4E95  24CCC517           [267] self       48  47  279  ; 51109503
4E99  228C0001           [268] call       48  2   2  
4E9D  240C4618           [269] self       48  48  280  ; -211549079
4EA1  228C0001           [270] call       48  2   2  
4EA5  180C0000           [271] test       48      0    ; to [273] if true
4EA9  1A800580           [272] jmp        23           ; to [296]
4EAD  244CCB17           [273] self       48  47  301  ; -2135866365
4EB1  228C0001           [274] call       48  2   2  
4EB5  244C4618           [275] self       48  48  281  ; -1917464545
4EB9  228C0001           [276] call       48  2   2  
4EBD  248C4618           [277] self       48  48  282  ; 819640984
4EC1  228C0001           [278] call       48  2   2  
4EC5  5DCC0000           [279] getglobal  49  3        ; 1074689893
4EC9  920C0018           [280] move       50  48     
4ECD  628C0001           [281] call       49  2   2  
4ED1  584C0000           [282] test       49      1    ; to [284] if false
4ED5  1AC00280           [283] jmp        12           ; to [296]
4ED9  5DCC0000           [284] getglobal  49  3        ; 1074689893
4EDD  A44C4718           [285] self       50  48  285  ; -1411785325
4EE1  A20C0001           [286] call       50  2   0  
4EE5  628C0000           [287] call       49  0   2  
4EE9  584C0000           [288] test       49      1    ; to [290] if false
4EED  1A400180           [289] jmp        6            ; to [296]
4EF1  644C4718           [290] self       49  48  285  ; -1411785325
4EF5  628C0001           [291] call       49  2   2  
4EF9  648CC718           [292] self       49  49  286  ; 1038470555
4EFD  D70C0000           [293] loadbool   51  0   0    ; false
4F01  130D0000           [294] getupval   52  0      
4F05  624C0002           [295] call       49  4   1  
4F09  D68A0000           [296] tforloop   43      2    ; to [298] if exit
4F0D  1AC0F67F           [297] jmp        -36          ; to [262]
4F11  5DCC0000           [298] getglobal  49  3        ; 1074689893
4F15  920C000A           [299] move       50  20     
4F19  628C0001           [300] call       49  2   2  
4F1D  584C0000           [301] test       49      1    ; to [303] if false
4F21  1A400080           [302] jmp        2            ; to [305]
4F25  648C4B0A           [303] self       49  20  302  ; -1691371893
4F29  624C0001           [304] call       49  2   1  
4F2D  1E008000           [305] return     0   1      
                         * constants:
4F31  2F                 sizek (47)
4F32  04                 const type 4
4F33  0B                 string size (11)
4F34  6747616D6552756C+  "gGameRul"
4F3C  657300             "es\0"
                         const [0]: "gGameRules"
4F3F  01                 const type 3
4F40  D48E598B           const [1]: (-1957065004)
4F44  04                 const type 4
4F45  14                 string size (20)
4F46  674C6F7475734761+  "gLotusGa"
4F4E  6D6552756C657354+  "meRulesT"
4F56  79706500           "ype\0"
                         const [2]: "gLotusGameRulesType"
4F5A  01                 const type 3
4F5B  65770E40           const [3]: (1074689893)
4F5F  04                 const type 4
4F60  0C                 string size (12)
4F61  6C69736574546F48+  "lisetToH"
4F69  69646500           "ide\0"
                         const [4]: "lisetToHide"
4F6D  01                 const type 3
4F6E  B786588D           const [5]: (-1923578185)
4F72  04                 const type 4
4F73  05                 string size (5)
4F74  4869646500         "Hide\0"
                         const [6]: "Hide"
4F79  04                 const type 4
4F7A  08                 string size (8)
4F7B  67526567696F6E00   "gRegion\0"
                         const [7]: "gRegion"
4F83  01                 const type 3
4F84  E09F8C84           const [8]: (-2071158816)
4F88  01                 const type 3
4F89  0791B063           const [9]: (1672515847)
4F8D  01                 const type 3
4F8E  533F61B8           const [10]: (-1201586349)
4F92  01                 const type 3
4F93  B63E883D           const [11]: (1032339126)
4F97  01                 const type 3
4F98  1A4B27EC           const [12]: (-332969190)
4F9C  04                 const type 4
4F9D  06                 string size (6)
4F9E  54656E6E6F00       "Tenno\0"
                         const [13]: "Tenno"
4FA4  04                 const type 4
4FA5  06                 string size (6)
4FA6  4F7468657200       "Other\0"
                         const [14]: "Other"
4FAC  01                 const type 3
4FAD  9FE1FB48           const [15]: (1224466847)
4FB1  03                 const type 3
4FB2  00000000           const [16]: (0)
4FB6  01                 const type 3
4FB7  6B25B193           const [17]: (-1817107093)
4FBB  04                 const type 4
4FBC  0F                 string size (15)
4FBD  4E756D2061766174+  "Num avat"
4FC5  617273203D2000     "ars = \0"
                         const [18]: "Num avatars = "
4FCC  01                 const type 3
4FCD  BCD6AE9F           const [19]: (-1615931716)
4FD1  03                 const type 3
4FD2  0000803F           const [20]: (0)
4FD6  04                 const type 4
4FD7  06                 string size (6)
4FD8  7461626C6500       "table\0"
                         const [21]: "table"
4FDE  01                 const type 3
4FDF  9D0C45E6           const [22]: (-431682403)
4FE3  01                 const type 3
4FE4  7FDE0B03           const [23]: (51109503)
4FE8  01                 const type 3
4FE9  690464F3           const [24]: (-211549079)
4FED  01                 const type 3
4FEE  1FD0B58D           const [25]: (-1917464545)
4FF2  01                 const type 3
4FF3  98BADA30           const [26]: (819640984)
4FF7  01                 const type 3
4FF8  DC3D18EC           const [27]: (-333955620)
4FFC  01                 const type 3
4FFD  48FE2905           const [28]: (86638152)
5001  01                 const type 3
5002  93DDD9AB           const [29]: (-1411785325)
5006  01                 const type 3
5007  9BCDE53D           const [30]: (1038470555)
500B  01                 const type 3
500C  12066FA7           const [31]: (-1485896174)
5010  04                 const type 4
5011  0C                 string size (12)
5012  506C617965724C69+  "PlayerLi"
501A  73657400           "set\0"
                         const [32]: "PlayerLiset"
501E  04                 const type 4
501F  03                 string size (3)
5020  5F5400             "_T\0"
                         const [33]: "_T"
5023  04                 const type 4
5024  13                 string size (19)
5025  674875624F70656E+  "gHubOpen"
502D  43696E5374617274+  "CinStart"
5035  656400             "ed\0"
                         const [34]: "gHubOpenCinStarted"
5038  01                 const type 3
5039  2F8B2F7B           const [35]: (2066713391)
503D  01                 const type 3
503E  5E55C5AC           const [36]: (-1396353698)
5042  01                 const type 3
5043  8075DFC8           const [37]: (-924879488)
5047  01                 const type 3
5048  81C22801           const [38]: (19448449)
504C  03                 const type 3
504D  0000C842           const [39]: (0)
5051  01                 const type 3
5052  0125A76D           const [40]: (1839670529)
5056  01                 const type 3
5057  EFCC1A8C           const [41]: (-1944400657)
505B  01                 const type 3
505C  13F4E79C           const [42]: (-1662520301)
5060  01                 const type 3
5061  0BDABD7D           const [43]: (2109594123)
5065  01                 const type 3
5066  EA911120           const [44]: (538022378)
506A  01                 const type 3
506B  0344B180           const [45]: (-2135866365)
506F  01                 const type 3
5070  8BB62F9B           const [46]: (-1691371893)
                         * functions:
5074  00                 sizep (0)
                         * lines:
5076  02                 sizelineinfo (305)
                         [pc] (line)
5077  2D                 [001] (45)
5078  03                 [002] (45)
5079  00                 [003] (45)
507A  00                 [004] (45)
507B  2D                 [005] (45)
507C  03                 [006] (45)
507D  00                 [007] (46)
507E  00                 [008] (46)
507F  2D                 [009] (46)
5080  03                 [010] (46)
5081  00                 [011] (46)
5082  00                 [012] (47)
5083  2D                 [013] (47)
5084  03                 [014] (47)
5085  00                 [015] (47)
5086  00                 [016] (49)
5087  2D                 [017] (49)
5088  03                 [018] (49)
5089  00                 [019] (50)
508A  00                 [020] (50)
508B  2D                 [021] (50)
508C  03                 [022] (50)
508D  00                 [023] (51)
508E  00                 [024] (51)
508F  2E                 [025] (51)
5090  03                 [026] (51)
5091  00                 [027] (52)
5092  00                 [028] (52)
5093  2E                 [029] (52)
5094  03                 [030] (52)
5095  00                 [031] (52)
5096  00                 [032] (52)
5097  2E                 [033] (54)
5098  03                 [034] (54)
5099  00                 [035] (54)
509A  00                 [036] (54)
509B  2E                 [037] (54)
509C  03                 [038] (50)
509D  00                 [039] (55)
509E  00                 [040] (57)
509F  2E                 [041] (60)
50A0  03                 [042] (61)
50A1  00                 [043] (63)
50A2  00                 [044] (63)
50A3  2F                 [045] (63)
50A4  03                 [046] (64)
50A5  00                 [047] (64)
50A6  00                 [048] (64)
50A7  2F                 [049] (65)
50A8  03                 [050] (67)
50A9  00                 [051] (67)
50AA  00                 [052] (67)
50AB  2F                 [053] (67)
50AC  03                 [054] (67)
50AD  00                 [055] (67)
50AE  00                 [056] (67)
50AF  2F                 [057] (67)
50B0  03                 [058] (69)
50B1  00                 [059] (69)
50B2  00                 [060] (69)
50B3  31                 [061] (69)
50B4  03                 [062] (69)
50B5  00                 [063] (69)
50B6  00                 [064] (69)
50B7  31                 [065] (71)
50B8  03                 [066] (71)
50B9  00                 [067] (71)
50BA  00                 [068] (71)
50BB  31                 [069] (72)
50BC  03                 [070] (73)
50BD  00                 [071] (74)
50BE  00                 [072] (74)
50BF  32                 [073] (74)
50C0  03                 [074] (74)
50C1  00                 [075] (74)
50C2  00                 [076] (75)
50C3  32                 [077] (75)
50C4  03                 [078] (75)
50C5  00                 [079] (75)
50C6  00                 [080] (75)
50C7  32                 [081] (75)
50C8  03                 [082] (76)
50C9  00                 [083] (76)
50CA  00                 [084] (76)
50CB  32                 [085] (76)
50CC  03                 [086] (76)
50CD  00                 [087] (77)
50CE  00                 [088] (81)
50CF  33                 [089] (81)
50D0  03                 [090] (81)
50D1  00                 [091] (81)
50D2  00                 [092] (81)
50D3  33                 [093] (81)
50D4  03                 [094] (82)
50D5  00                 [095] (82)
50D6  00                 [096] (82)
50D7  33                 [097] (82)
50D8  03                 [098] (83)
50D9  00                 [099] (83)
50DA  00                 [100] (83)
50DB  33                 [101] (83)
50DC  03                 [102] (83)
50DD  00                 [103] (85)
50DE  00                 [104] (85)
50DF  34                 [105] (85)
50E0  03                 [106] (85)
50E1  00                 [107] (85)
50E2  00                 [108] (85)
50E3  34                 [109] (86)
50E4  03                 [110] (86)
50E5  00                 [111] (86)
50E6  00                 [112] (86)
50E7  34                 [113] (86)
50E8  03                 [114] (86)
50E9  00                 [115] (87)
50EA  00                 [116] (87)
50EB  34                 [117] (87)
50EC  03                 [118] (87)
50ED  00                 [119] (87)
50EE  00                 [120] (87)
50EF  34                 [121] (71)
50F0  03                 [122] (94)
50F1  00                 [123] (94)
50F2  00                 [124] (94)
50F3  34                 [125] (94)
50F4  03                 [126] (94)
50F5  00                 [127] (94)
50F6  00                 [128] (95)
50F7  36                 [129] (96)
50F8  03                 [130] (96)
50F9  00                 [131] (96)
50FA  00                 [132] (97)
50FB  36                 [133] (103)
50FC  03                 [134] (103)
50FD  00                 [135] (103)
50FE  00                 [136] (104)
50FF  36                 [137] (105)
5100  03                 [138] (105)
5101  00                 [139] (105)
5102  00                 [140] (105)
5103  36                 [141] (106)
5104  03                 [142] (106)
5105  00                 [143] (107)
5106  00                 [144] (107)
5107  36                 [145] (107)
5108  03                 [146] (109)
5109  00                 [147] (109)
510A  00                 [148] (110)
510B  32                 [149] (110)
510C  03                 [150] (110)
510D  00                 [151] (110)
510E  00                 [152] (110)
510F  37                 [153] (110)
5110  03                 [154] (111)
5111  00                 [155] (111)
5112  00                 [156] (111)
5113  39                 [157] (111)
5114  03                 [158] (111)
5115  00                 [159] (111)
5116  00                 [160] (111)
5117  3C                 [161] (111)
5118  03                 [162] (111)
5119  00                 [163] (112)
511A  00                 [164] (112)
511B  3D                 [165] (112)
511C  03                 [166] (112)
511D  00                 [167] (112)
511E  00                 [168] (113)
511F  3F                 [169] (113)
5120  03                 [170] (113)
5121  00                 [171] (113)
5122  00                 [172] (115)
5123  3F                 [173] (118)
5124  03                 [174] (118)
5125  00                 [175] (118)
5126  00                 [176] (118)
5127  3F                 [177] (118)
5128  03                 [178] (119)
5129  00                 [179] (119)
512A  00                 [180] (119)
512B  40                 [181] (120)
512C  03                 [182] (121)
512D  00                 [183] (121)
512E  00                 [184] (123)
512F  40                 [185] (123)
5130  03                 [186] (123)
5131  00                 [187] (123)
5132  00                 [188] (124)
5133  40                 [189] (125)
5134  03                 [190] (125)
5135  00                 [191] (125)
5136  00                 [192] (125)
5137  41                 [193] (125)
5138  03                 [194] (125)
5139  00                 [195] (125)
513A  00                 [196] (125)
513B  43                 [197] (125)
513C  03                 [198] (125)
513D  00                 [199] (125)
513E  00                 [200] (126)
513F  43                 [201] (126)
5140  03                 [202] (126)
5141  00                 [203] (126)
5142  00                 [204] (126)
5143  43                 [205] (127)
5144  03                 [206] (127)
5145  00                 [207] (-128)
5146  00                 [208] (-128)
5147  43                 [209] (-128)
5148  03                 [210] (-128)
5149  00                 [211] (-127)
514A  00                 [212] (-127)
514B  43                 [213] (-127)
514C  03                 [214] (-127)
514D  00                 [215] (-127)
514E  00                 [216] (123)
514F  43                 [217] (-121)
5150  03                 [218] (-121)
5151  00                 [219] (-121)
5152  00                 [220] (-121)
5153  43                 [221] (-118)
5154  03                 [222] (-118)
5155  00                 [223] (-118)
5156  00                 [224] (-118)
5157  43                 [225] (-117)
5158  03                 [226] (-117)
5159  00                 [227] (-117)
515A  00                 [228] (-117)
515B  45                 [229] (-116)
515C  03                 [230] (-116)
515D  00                 [231] (-116)
515E  00                 [232] (-116)
515F  45                 [233] (-117)
5160  03                 [234] (-116)
5161  00                 [235] (-114)
5162  00                 [236] (-114)
5163  45                 [237] (-114)
5164  03                 [238] (-114)
5165  00                 [239] (-113)
5166  00                 [240] (-113)
5167  45                 [241] (-113)
5168  03                 [242] (-113)
5169  00                 [243] (-113)
516A  00                 [244] (-112)
516B  45                 [245] (-112)
516C  03                 [246] (-112)
516D  00                 [247] (-112)
516E  00                 [248] (-114)
516F  45                 [249] (-111)
5170  03                 [250] (-107)
5171  00                 [251] (-107)
5172  00                 [252] (-107)
5173  45                 [253] (-107)
5174  03                 [254] (-107)
5175  00                 [255] (-107)
5176  00                 [256] (-107)
5177  47                 [257] (-107)
5178  03                 [258] (-106)
5179  00                 [259] (-106)
517A  00                 [260] (-106)
517B  47                 [261] (-106)
517C  03                 [262] (-105)
517D  00                 [263] (-105)
517E  00                 [264] (-105)
517F  47                 [265] (-105)
5180  03                 [266] (-105)
5181  00                 [267] (-105)
5182  00                 [268] (-105)
5183  47                 [269] (-105)
5184  03                 [270] (-105)
5185  00                 [271] (-105)
5186  00                 [272] (-105)
5187  48                 [273] (-104)
5188  03                 [274] (-104)
5189  00                 [275] (-104)
518A  00                 [276] (-104)
518B  49                 [277] (-104)
518C  03                 [278] (-104)
518D  00                 [279] (-103)
518E  00                 [280] (-103)
518F  4A                 [281] (-103)
5190  03                 [282] (-103)
5191  00                 [283] (-103)
5192  00                 [284] (-103)
5193  4A                 [285] (-103)
5194  03                 [286] (-103)
5195  00                 [287] (-103)
5196  00                 [288] (-103)
5197  4A                 [289] (-103)
5198  03                 [290] (-102)
5199  00                 [291] (-102)
519A  00                 [292] (-102)
519B  4A                 [293] (-102)
519C  03                 [294] (-102)
519D  00                 [295] (-102)
519E  00                 [296] (-106)
519F  4A                 [297] (-100)
51A0  03                 [298] (-96)
51A1  00                 [299] (-96)
51A2  00                 [300] (-96)
51A3  4B                 [301] (-96)
51A4  03                 [302] (-96)
51A5  00                 [303] (-95)
51A6  00                 [304] (-95)
51A7  4B                 [305] (-92)
                         * locals:
553B  00                 sizelocvars (0)
                         * upvalues:
553C  00                 sizeupvalues (0)
                         ** end of function **

                         
553D                     ** function [19] definition (level 2)
                         ** start of function **
553D  00                 string size (0)
                         source name: (none)
553F  07                 line defined (934)
5540  88                 last line defined (1032)
5541  08                 nups (2)
5542  02                 numparams (1)
5543  01                 is_vararg (0)
5544  00                 maxstacksize (38)
                         * code:
5547  02                 sizecode (256)
5548  4B000000           [001] newtable   1   0   0    ; array=0, hash=0
554C  8B000000           [002] newtable   2   0   0    ; array=0, hash=0
5550  DD000000           [003] getglobal  3   0        ; gRegion
5554  E440C001           [004] self       3   3   257  ; -2071158816
5558  E2800001           [005] call       3   2   2  
555C  1D010000           [006] getglobal  4   0        ; gRegion
5560  24814002           [007] self       4   4   258  ; 1224466847
5564  22810001           [008] call       4   2   2  
5568  46018002           [009] loadnil    5   5      
556C  9DC10000           [010] getglobal  6   3        ; 1074689893
5570  D2018001           [011] move       7   3      
5574  A2810001           [012] call       6   2   2  
5578  98410000           [013] test       6       1    ; to [15] if false
557C  1AC01180           [014] jmp        72           ; to [87]
5580  8A018001           [015] len        6   3      
fail op	21
5584  15800182           [016] concat     0   260 6  
5588  1A001180           [017] jmp        69           ; to [87]
558C  9D410100           [018] getglobal  6   5        ; -1817107093
5590  D9810100           [019] loadk      7   6        ; "Num avatars = "
5594  1DC20100           [020] getglobal  8   7        ; -1615931716
5598  4A028001           [021] len        9   3      
559C  22820001           [022] call       8   2   2  
55A0  C2018203           [023] concat     7   7   8  
55A4  A2410001           [024] call       6   2   1  
55A8  99010200           [025] loadk      6   8        ; 0
55AC  CA018001           [026] len        7   3      
55B0  19020200           [027] loadk      8   8        ; 0
55B4  90010E80           [028] forprep    6   57       ; to [86]
55B8  8E428201           [029] gettable   10  3   9  
55BC  CE420202           [030] gettable   11  4   9  
55C0  0E438201           [031] gettable   12  3   9  
55C4  24434206           [032] self       12  12  265  ; -1201586349
55C8  22830001           [033] call       12  2   2  
55CC  18030000           [034] test       12      0    ; to [36] if true
55D0  1A000480           [035] jmp        17           ; to [53]
55D4  1D030000           [036] getglobal  12  0        ; gRegion
55D8  24834206           [037] self       12  12  266  ; -1520831144
55DC  22830001           [038] call       12  2   2  
55E0  18030000           [039] test       12      0    ; to [41] if true
55E4  1AC00280           [040] jmp        12           ; to [53]
55E8  0E438201           [041] gettable   12  3   9  
55EC  24C34206           [042] self       12  12  267  ; 1032339126
55F0  9D030300           [043] getglobal  14  12       ; -332969190
55F4  D9430300           [044] loadk      15  13       ; "Tenno"
55F8  A2030001           [045] call       14  2   0  
55FC  22430000           [046] call       12  0   1  
5600  1D830300           [047] getglobal  12  14       ; table
5604  0EC34306           [048] gettable   12  12  271  ; -431682403
5608  52038000           [049] move       13  1      
560C  92030005           [050] move       14  10     
5610  22438001           [051] call       12  3   1  
5614  52010005           [052] move       5   10     
5618  2403C405           [053] self       12  11  272  ; 51109503
561C  22830001           [054] call       12  2   2  
5620  24434406           [055] self       12  12  273  ; -211549079
5624  22830001           [056] call       12  2   2  
5628  18030000           [057] test       12      0    ; to [59] if true
562C  1A800680           [058] jmp        27           ; to [86]
5630  24834405           [059] self       12  10  274  ; -1917464545
5634  22830001           [060] call       12  2   2  
5638  24C34406           [061] self       12  12  275  ; 819640984
563C  22830001           [062] call       12  2   2  
5640  5DC30000           [063] getglobal  13  3        ; 1074689893
5644  92030006           [064] move       14  12     
5648  62830001           [065] call       13  2   2  
564C  58430000           [066] test       13      1    ; to [68] if false
5650  1A400480           [067] jmp        18           ; to [86]
5654  64034506           [068] self       13  12  276  ; -333955620
5658  E4834405           [069] self       15  10  274  ; -1917464545
565C  E2830001           [070] call       15  2   2  
5660  E443C507           [071] self       15  15  277  ; 86638152
5664  E2030001           [072] call       15  2   0  
5668  62430000           [073] call       13  0   1  
566C  5DC30000           [074] getglobal  13  3        ; 1074689893
5670  A4834506           [075] self       14  12  278  ; -1411785325
5674  A2030001           [076] call       14  2   0  
5678  62830000           [077] call       13  0   2  
567C  58430000           [078] test       13      1    ; to [80] if false
5680  1A400180           [079] jmp        6            ; to [86]
5684  64834506           [080] self       13  12  278  ; -1411785325
5688  62830001           [081] call       13  2   2  
568C  64C3C506           [082] self       13  13  279  ; 1038470555
5690  D7038000           [083] loadbool   15  1   0    ; true
5694  13040000           [084] getupval   16  0      
5698  62430002           [085] call       13  4   1  
569C  9441F17F           [086] forloop    6   -58      ; to [29] if loop
56A0  5D030000           [087] getglobal  13  0        ; gRegion
56A4  6403C606           [088] self       13  13  280  ; -1485896174
56A8  DD030300           [089] getglobal  15  12       ; -332969190
56AC  19440600           [090] loadk      16  25       ; "PlayerLiset"
56B0  E2030001           [091] call       15  2   0  
56B4  62830000           [092] call       13  0   2  
56B8  86030007           [093] loadnil    14  14     
56BC  CA038006           [094] len        15  13     
fail op	21
56C0  15C00382           [095] concat     0   260 15 
56C4  1A000080           [096] jmp        1            ; to [98]
56C8  8E03C206           [097] gettable   14  13  264  ; 0
56CC  C6038007           [098] loadnil    15  15     
56D0  1D040000           [099] getglobal  16  0        ; gRegion
56D4  24844208           [100] self       16  16  266  ; -1520831144
56D8  22840001           [101] call       16  2   2  
56DC  18440000           [102] test       16      1    ; to [104] if false
56E0  1AC00380           [103] jmp        16           ; to [120]
56E4  24844600           [104] self       16  0   282  ; -2012234272
56E8  97048000           [105] loadbool   18  1   0    ; true
56EC  22448001           [106] call       16  3   1  
56F0  1D040000           [107] getglobal  16  0        ; gRegion
56F4  24C44608           [108] self       16  16  283  ; -1875307917
56F8  9D040300           [109] getglobal  18  12       ; -332969190
56FC  D9040700           [110] loadk      19  28       ; "InjectionChair"
5700  A2040001           [111] call       18  2   0  
5704  22840000           [112] call       16  0   2  
5708  D2030008           [113] move       15  16     
570C  D8030000           [114] test       15      0    ; to [116] if true
5710  1AC00080           [115] jmp        4            ; to [120]
5714  2444C707           [116] self       16  15  285  ; 2109594123
5718  97040000           [117] loadbool   18  0   0    ; false
571C  D7048000           [118] loadbool   19  1   0    ; true
5720  22440002           [119] call       16  4   1  
5724  1DC40000           [120] getglobal  16  3        ; 1074689893
5728  5D040000           [121] getglobal  17  0        ; gRegion
572C  6484C708           [122] self       17  17  286  ; 2066713391
5730  62040001           [123] call       17  2   0  
5734  22840000           [124] call       16  0   2  
fail op	9
5738  49040008           [125] settable   17  16  0  
573C  18440000           [126] test       16      1    ; to [128] if false
5740  1A400080           [127] jmp        2            ; to [130]
5744  58040000           [128] test       17      0    ; to [130] if true
5748  1AC00880           [129] jmp        36           ; to [166]
574C  18040000           [130] test       16      0    ; to [132] if true
5750  1A400180           [131] jmp        6            ; to [138]
5754  9DC40000           [132] getglobal  18  3        ; 1074689893
5758  DD040000           [133] getglobal  19  0        ; gRegion
575C  E484C709           [134] self       19  19  286  ; 2066713391
5760  E2040001           [135] call       19  2   0  
5764  A2840000           [136] call       18  0   2  
5768  12040009           [137] move       16  18     
576C  18440000           [138] test       16      1    ; to [140] if false
5770  1A400580           [139] jmp        22           ; to [162]
5774  58440000           [140] test       17      1    ; to [142] if false
5778  1A400380           [141] jmp        14           ; to [156]
577C  9DC40000           [142] getglobal  18  3        ; 1074689893
5780  D2040007           [143] move       19  14     
5784  A2840001           [144] call       18  2   2  
5788  98440000           [145] test       18      1    ; to [147] if false
578C  1A000280           [146] jmp        9            ; to [156]
5790  A4C44707           [147] self       18  14  287  ; -1396353698
5794  13058000           [148] getupval   20  1      
5798  57058000           [149] loadbool   21  1   0    ; true
579C  99050200           [150] loadk      22  8        ; 0
57A0  A2448002           [151] call       18  5   1  
57A4  A4044807           [152] self       18  14  288  ; -924879488
57A8  19050200           [153] loadk      20  8        ; 0
57AC  59050200           [154] loadk      21  8        ; 0
57B0  A2440002           [155] call       18  4   1  
57B4  9DC40000           [156] getglobal  18  3        ; 1074689893
57B8  DD040000           [157] getglobal  19  0        ; gRegion
57BC  E484C709           [158] self       19  19  286  ; 2066713391
57C0  E2040001           [159] call       19  2   0  
57C4  A2840000           [160] call       18  0   2  
fail op	9
57C8  49040009           [161] settable   17  18  0  
57CC  9D440800           [162] getglobal  18  33       ; 538022378
57D0  D9040100           [163] loadk      19  4        ; 0
57D4  A2440001           [164] call       18  2   1  
57D8  1AC0F57F           [165] jmp        -40          ; to [126]
57DC  9D040000           [166] getglobal  18  0        ; gRegion
57E0  A4444009           [167] self       18  18  257  ; -2071158816
57E4  A2840001           [168] call       18  2   2  
57E8  D2000009           [169] move       3   18     
57EC  9D840800           [170] getglobal  18  34       ; 1672515847
57F0  D2048001           [171] move       19  3      
57F4  A2040101           [172] call       18  2   4  
57F8  1AC00080           [173] jmp        4            ; to [178]
57FC  E445470B           [174] self       23  22  285  ; 2109594123
5800  57068000           [175] loadbool   25  1   0    ; true
5804  97068000           [176] loadbool   26  1   0    ; true
5808  E2450002           [177] call       23  4   1  
580C  96840000           [178] tforloop   18      2    ; to [180] if exit
5810  1A40FE7F           [179] jmp        -6           ; to [174]
5814  DD850800           [180] getglobal  23  34       ; 1672515847
5818  12060001           [181] move       24  2      
581C  E2050101           [182] call       23  2   4  
5820  1A000280           [183] jmp        9            ; to [193]
5824  1DC70000           [184] getglobal  28  3        ; 1074689893
5828  5207800D           [185] move       29  27     
582C  22870001           [186] call       28  2   2  
5830  18470000           [187] test       28      1    ; to [189] if false
5834  1AC00080           [188] jmp        4            ; to [193]
5838  2447C70D           [189] self       28  27  285  ; 2109594123
583C  97078000           [190] loadbool   30  1   0    ; true
5840  D7078000           [191] loadbool   31  1   0    ; true
5844  22470002           [192] call       28  4   1  
5848  D6850000           [193] tforloop   23      2    ; to [195] if exit
584C  1A00FD7F           [194] jmp        -11          ; to [184]
5850  D8030000           [195] test       15      0    ; to [197] if true
5854  1AC00080           [196] jmp        4            ; to [201]
5858  2447C707           [197] self       28  15  285  ; 2109594123
585C  97078000           [198] loadbool   30  1   0    ; true
5860  D7078000           [199] loadbool   31  1   0    ; true
5864  22470002           [200] call       28  4   1  
5868  1DC70000           [201] getglobal  28  3        ; 1074689893
586C  52070002           [202] move       29  4      
5870  22870001           [203] call       28  2   2  
5874  18470000           [204] test       28      1    ; to [206] if false
5878  1A800A80           [205] jmp        43           ; to [249]
587C  0A070002           [206] len        28  4      
fail op	21
5880  15000782           [207] concat     0   260 28 
5884  1AC00980           [208] jmp        40           ; to [249]
5888  1D870800           [209] getglobal  28  34       ; 1672515847
588C  52070002           [210] move       29  4      
5890  22070101           [211] call       28  2   4  
5894  1A400880           [212] jmp        34           ; to [247]
5898  5DC80000           [213] getglobal  33  3        ; 1074689893
589C  92080010           [214] move       34  32     
58A0  62880001           [215] call       33  2   2  
58A4  58480000           [216] test       33      1    ; to [218] if false
58A8  1A000780           [217] jmp        29           ; to [247]
58AC  64084410           [218] self       33  32  272  ; 51109503
58B0  62880001           [219] call       33  2   2  
58B4  6448C410           [220] self       33  33  273  ; -211549079
58B8  62880001           [221] call       33  2   2  
58BC  58080000           [222] test       33      0    ; to [224] if true
58C0  1A800580           [223] jmp        23           ; to [247]
58C4  64C84810           [224] self       33  32  291  ; -2135866365
58C8  62880001           [225] call       33  2   2  
58CC  6488C410           [226] self       33  33  274  ; -1917464545
58D0  62880001           [227] call       33  2   2  
58D4  64C8C410           [228] self       33  33  275  ; 819640984
58D8  62880001           [229] call       33  2   2  
58DC  9DC80000           [230] getglobal  34  3        ; 1074689893
58E0  D2088010           [231] move       35  33     
58E4  A2880001           [232] call       34  2   2  
58E8  98480000           [233] test       34      1    ; to [235] if false
58EC  1AC00280           [234] jmp        12           ; to [247]
58F0  9DC80000           [235] getglobal  34  3        ; 1074689893
58F4  E488C510           [236] self       35  33  278  ; -1411785325
58F8  E2080001           [237] call       35  2   0  
58FC  A2880000           [238] call       34  0   2  
5900  98480000           [239] test       34      1    ; to [241] if false
5904  1A400180           [240] jmp        6            ; to [247]
5908  A488C510           [241] self       34  33  278  ; -1411785325
590C  A2880001           [242] call       34  2   2  
5910  A4C84511           [243] self       34  34  279  ; 1038470555
5914  17090000           [244] loadbool   36  0   0    ; false
5918  53090000           [245] getupval   37  0      
591C  A2480002           [246] call       34  4   1  
5920  16870000           [247] tforloop   28      2    ; to [249] if exit
5924  1AC0F67F           [248] jmp        -36          ; to [213]
5928  9DC80000           [249] getglobal  34  3        ; 1074689893
592C  D2080007           [250] move       35  14     
5930  A2880001           [251] call       34  2   2  
5934  98480000           [252] test       34      1    ; to [254] if false
5938  1A400080           [253] jmp        2            ; to [256]
593C  A4084907           [254] self       34  14  292  ; -1691371893
5940  A2480001           [255] call       34  2   1  
5944  1E008000           [256] return     0   1      
                         * constants:
5948  25                 sizek (37)
5949  04                 const type 4
594A  08                 string size (8)
594B  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
5953  01                 const type 3
5954  E09F8C84           const [1]: (-2071158816)
5958  01                 const type 3
5959  9FE1FB48           const [2]: (1224466847)
595D  01                 const type 3
595E  65770E40           const [3]: (1074689893)
5962  03                 const type 3
5963  00000000           const [4]: (0)
5967  01                 const type 3
5968  6B25B193           const [5]: (-1817107093)
596C  04                 const type 4
596D  0F                 string size (15)
596E  4E756D2061766174+  "Num avat"
5976  617273203D2000     "ars = \0"
                         const [6]: "Num avatars = "
597D  01                 const type 3
597E  BCD6AE9F           const [7]: (-1615931716)
5982  03                 const type 3
5983  0000803F           const [8]: (0)
5987  01                 const type 3
5988  533F61B8           const [9]: (-1201586349)
598C  01                 const type 3
598D  58F559A5           const [10]: (-1520831144)
5991  01                 const type 3
5992  B63E883D           const [11]: (1032339126)
5996  01                 const type 3
5997  1A4B27EC           const [12]: (-332969190)
599B  04                 const type 4
599C  06                 string size (6)
599D  54656E6E6F00       "Tenno\0"
                         const [13]: "Tenno"
59A3  04                 const type 4
59A4  06                 string size (6)
59A5  7461626C6500       "table\0"
                         const [14]: "table"
59AB  01                 const type 3
59AC  9D0C45E6           const [15]: (-431682403)
59B0  01                 const type 3
59B1  7FDE0B03           const [16]: (51109503)
59B5  01                 const type 3
59B6  690464F3           const [17]: (-211549079)
59BA  01                 const type 3
59BB  1FD0B58D           const [18]: (-1917464545)
59BF  01                 const type 3
59C0  98BADA30           const [19]: (819640984)
59C4  01                 const type 3
59C5  DC3D18EC           const [20]: (-333955620)
59C9  01                 const type 3
59CA  48FE2905           const [21]: (86638152)
59CE  01                 const type 3
59CF  93DDD9AB           const [22]: (-1411785325)
59D3  01                 const type 3
59D4  9BCDE53D           const [23]: (1038470555)
59D8  01                 const type 3
59D9  12066FA7           const [24]: (-1485896174)
59DD  04                 const type 4
59DE  0C                 string size (12)
59DF  506C617965724C69+  "PlayerLi"
59E7  73657400           "set\0"
                         const [25]: "PlayerLiset"
59EB  01                 const type 3
59EC  E0BD0F88           const [26]: (-2012234272)
59F0  01                 const type 3
59F1  73123990           const [27]: (-1875307917)
59F5  04                 const type 4
59F6  0F                 string size (15)
59F7  496E6A656374696F+  "Injectio"
59FF  6E436861697200     "nChair\0"
                         const [28]: "InjectionChair"
5A06  01                 const type 3
5A07  0BDABD7D           const [29]: (2109594123)
5A0B  01                 const type 3
5A0C  2F8B2F7B           const [30]: (2066713391)
5A10  01                 const type 3
5A11  5E55C5AC           const [31]: (-1396353698)
5A15  01                 const type 3
5A16  8075DFC8           const [32]: (-924879488)
5A1A  01                 const type 3
5A1B  EA911120           const [33]: (538022378)
5A1F  01                 const type 3
5A20  0791B063           const [34]: (1672515847)
5A24  01                 const type 3
5A25  0344B180           const [35]: (-2135866365)
5A29  01                 const type 3
5A2A  8BB62F9B           const [36]: (-1691371893)
                         * functions:
5A2E  00                 sizep (0)
                         * lines:
5A30  02                 sizelineinfo (256)
                         [pc] (line)
5A31  A8                 [001] (-88)
5A32  03                 [002] (-87)
5A33  00                 [003] (-85)
5A34  00                 [004] (-85)
5A35  A9                 [005] (-85)
5A36  03                 [006] (-84)
5A37  00                 [007] (-84)
5A38  00                 [008] (-84)
5A39  AB                 [009] (-83)
5A3A  03                 [010] (-81)
5A3B  00                 [011] (-81)
5A3C  00                 [012] (-81)
5A3D  AB                 [013] (-81)
5A3E  03                 [014] (-81)
5A3F  00                 [015] (-81)
5A40  00                 [016] (-81)
5A41  AB                 [017] (-81)
5A42  03                 [018] (-79)
5A43  00                 [019] (-79)
5A44  00                 [020] (-79)
5A45  AC                 [021] (-79)
5A46  03                 [022] (-79)
5A47  00                 [023] (-79)
5A48  00                 [024] (-79)
5A49  AC                 [025] (-77)
5A4A  03                 [026] (-77)
5A4B  00                 [027] (-77)
5A4C  00                 [028] (-77)
5A4D  AC                 [029] (-76)
5A4E  03                 [030] (-75)
5A4F  00                 [031] (-74)
5A50  00                 [032] (-74)
5A51  AD                 [033] (-74)
5A52  03                 [034] (-74)
5A53  00                 [035] (-74)
5A54  00                 [036] (-74)
5A55  AF                 [037] (-74)
5A56  03                 [038] (-74)
5A57  00                 [039] (-74)
5A58  00                 [040] (-74)
5A59  AF                 [041] (-73)
5A5A  03                 [042] (-73)
5A5B  00                 [043] (-73)
5A5C  00                 [044] (-73)
5A5D  AF                 [045] (-73)
5A5E  03                 [046] (-73)
5A5F  00                 [047] (-72)
5A60  00                 [048] (-72)
5A61  AF                 [049] (-72)
5A62  03                 [050] (-72)
5A63  00                 [051] (-72)
5A64  00                 [052] (-71)
5A65  AF                 [053] (-67)
5A66  03                 [054] (-67)
5A67  00                 [055] (-67)
5A68  00                 [056] (-67)
5A69  AF                 [057] (-67)
5A6A  03                 [058] (-67)
5A6B  00                 [059] (-66)
5A6C  00                 [060] (-66)
5A6D  AF                 [061] (-66)
5A6E  03                 [062] (-66)
5A6F  00                 [063] (-65)
5A70  00                 [064] (-65)
5A71  AF                 [065] (-65)
5A72  03                 [066] (-65)
5A73  00                 [067] (-65)
5A74  00                 [068] (-63)
5A75  B1                 [069] (-63)
5A76  03                 [070] (-63)
5A77  00                 [071] (-63)
5A78  00                 [072] (-63)
5A79  B1                 [073] (-63)
5A7A  03                 [074] (-62)
5A7B  00                 [075] (-62)
5A7C  00                 [076] (-62)
5A7D  B1                 [077] (-62)
5A7E  03                 [078] (-62)
5A7F  00                 [079] (-62)
5A80  00                 [080] (-61)
5A81  B1                 [081] (-61)
5A82  03                 [082] (-61)
5A83  00                 [083] (-61)
5A84  00                 [084] (-61)
5A85  B1                 [085] (-61)
5A86  03                 [086] (-77)
5A87  00                 [087] (-54)
5A88  00                 [088] (-54)
5A89  B1                 [089] (-54)
5A8A  03                 [090] (-54)
5A8B  00                 [091] (-54)
5A8C  00                 [092] (-54)
5A8D  B1                 [093] (-53)
5A8E  03                 [094] (-52)
5A8F  00                 [095] (-52)
5A90  00                 [096] (-52)
5A91  B3                 [097] (-51)
5A92  03                 [098] (-49)
5A93  00                 [099] (-48)
5A94  00                 [100] (-48)
5A95  B3                 [101] (-48)
5A96  03                 [102] (-48)
5A97  00                 [103] (-48)
5A98  00                 [104] (-47)
5A99  B3                 [105] (-47)
5A9A  03                 [106] (-47)
5A9B  00                 [107] (-46)
5A9C  00                 [108] (-46)
5A9D  B3                 [109] (-46)
5A9E  03                 [110] (-46)
5A9F  00                 [111] (-46)
5AA0  00                 [112] (-46)
5AA1  B4                 [113] (-46)
5AA2  03                 [114] (-45)
5AA3  00                 [115] (-45)
5AA4  00                 [116] (-44)
5AA5  B5                 [117] (-44)
5AA6  03                 [118] (-44)
5AA7  00                 [119] (-44)
5AA8  00                 [120] (-40)
5AA9  B6                 [121] (-40)
5AAA  03                 [122] (-40)
5AAB  00                 [123] (-40)
5AAC  00                 [124] (-40)
5AAD  B6                 [125] (-39)
5AAE  03                 [126] (-38)
5AAF  00                 [127] (-38)
5AB0  00                 [128] (-38)
5AB1  B6                 [129] (-38)
5AB2  03                 [130] (-37)
5AB3  00                 [131] (-37)
5AB4  00                 [132] (-36)
5AB5  B6                 [133] (-36)
5AB6  03                 [134] (-36)
5AB7  00                 [135] (-36)
5AB8  00                 [136] (-36)
5AB9  B6                 [137] (-36)
5ABA  03                 [138] (-34)
5ABB  00                 [139] (-34)
5ABC  00                 [140] (-32)
5ABD  B6                 [141] (-32)
5ABE  03                 [142] (-32)
5ABF  00                 [143] (-32)
5AC0  00                 [144] (-32)
5AC1  B6                 [145] (-32)
5AC2  03                 [146] (-32)
5AC3  00                 [147] (-31)
5AC4  00                 [148] (-31)
5AC5  B6                 [149] (-31)
5AC6  03                 [150] (-31)
5AC7  00                 [151] (-31)
5AC8  00                 [152] (-30)
5AC9  B6                 [153] (-30)
5ACA  03                 [154] (-30)
5ACB  00                 [155] (-30)
5ACC  00                 [156] (-27)
5ACD  B6                 [157] (-27)
5ACE  03                 [158] (-27)
5ACF  00                 [159] (-27)
5AD0  00                 [160] (-27)
5AD1  B7                 [161] (-27)
5AD2  03                 [162] (-25)
5AD3  00                 [163] (-25)
5AD4  00                 [164] (-25)
5AD5  B7                 [165] (-25)
5AD6  03                 [166] (-22)
5AD7  00                 [167] (-22)
5AD8  00                 [168] (-22)
5AD9  B7                 [169] (-22)
5ADA  03                 [170] (-21)
5ADB  00                 [171] (-21)
5ADC  00                 [172] (-21)
5ADD  B7                 [173] (-21)
5ADE  03                 [174] (-20)
5ADF  00                 [175] (-20)
5AE0  00                 [176] (-20)
5AE1  B7                 [177] (-20)
5AE2  03                 [178] (-21)
5AE3  00                 [179] (-20)
5AE4  00                 [180] (-18)
5AE5  B7                 [181] (-18)
5AE6  03                 [182] (-18)
5AE7  00                 [183] (-18)
5AE8  00                 [184] (-17)
5AE9  B8                 [185] (-17)
5AEA  03                 [186] (-17)
5AEB  00                 [187] (-17)
5AEC  00                 [188] (-17)
5AED  B8                 [189] (-16)
5AEE  03                 [190] (-16)
5AEF  00                 [191] (-16)
5AF0  00                 [192] (-16)
5AF1  B8                 [193] (-18)
5AF2  03                 [194] (-15)
5AF3  00                 [195] (-12)
5AF4  00                 [196] (-12)
5AF5  B8                 [197] (-11)
5AF6  03                 [198] (-11)
5AF7  00                 [199] (-11)
5AF8  00                 [200] (-11)
5AF9  B8                 [201] (-7)
5AFA  03                 [202] (-7)
5AFB  00                 [203] (-7)
5AFC  00                 [204] (-7)
5AFD  B9                 [205] (-7)
5AFE  03                 [206] (-7)
5AFF  00                 [207] (-7)
5B00  00                 [208] (-7)
5B01  BD                 [209] (-6)
5B02  03                 [210] (-6)
5B03  00                 [211] (-6)
5B04  00                 [212] (-6)
5B05  BD                 [213] (-5)
5B06  03                 [214] (-5)
5B07  00                 [215] (-5)
5B08  00                 [216] (-5)
5B09  BD                 [217] (-5)
5B0A  03                 [218] (-5)
5B0B  00                 [219] (-5)
5B0C  00                 [220] (-5)
5B0D  BD                 [221] (-5)
5B0E  03                 [222] (-5)
5B0F  00                 [223] (-5)
5B10  00                 [224] (-4)
5B11  BD                 [225] (-4)
5B12  03                 [226] (-4)
5B13  00                 [227] (-4)
5B14  00                 [228] (-4)
5B15  BD                 [229] (-4)
5B16  03                 [230] (-3)
5B17  00                 [231] (-3)
5B18  00                 [232] (-3)
5B19  BE                 [233] (-3)
5B1A  03                 [234] (-3)
5B1B  00                 [235] (-3)
5B1C  00                 [236] (-3)
5B1D  BE                 [237] (-3)
5B1E  03                 [238] (-3)
5B1F  00                 [239] (-3)
5B20  00                 [240] (-3)
5B21  BE                 [241] (-2)
5B22  03                 [242] (-2)
5B23  00                 [243] (-2)
5B24  00                 [244] (-2)
5B25  BE                 [245] (-2)
5B26  03                 [246] (-2)
5B27  00                 [247] (-6)
5B28  00                 [248] (0)
5B29  BF                 [249] (4)
5B2A  03                 [250] (4)
5B2B  00                 [251] (4)
5B2C  00                 [252] (4)
5B2D  BF                 [253] (4)
5B2E  03                 [254] (5)
5B2F  00                 [255] (5)
5B30  00                 [256] (8)
                         * locals:
5E31  00                 sizelocvars (0)
                         * upvalues:
5E32  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
5E33  50                 sizelineinfo (80)
                         [pc] (line)
5E34  15                 [01] (21)
5E35  00                 [02] (21)
5E36  00                 [03] (21)
5E37  00                 [04] (22)
5E38  15                 [05] (22)
5E39  00                 [06] (22)
5E3A  00                 [07] (24)
5E3B  00                 [08] (24)
5E3C  15                 [09] (24)
5E3D  00                 [10] (25)
5E3E  00                 [11] (25)
5E3F  00                 [12] (25)
5E40  16                 [13] (59)
5E41  00                 [14] (59)
5E42  00                 [15] (78)
5E43  00                 [16] (82)
5E44  16                 [17] (82)
5E45  00                 [18] (82)
5E46  00                 [19] (80)
5E47  00                 [20] (101)
5E48  16                 [21] (110)
5E49  00                 [22] (110)
5E4A  00                 [23] (110)
5E4B  00                 [24] (110)
5E4C  18                 [25] (103)
5E4D  00                 [26] (45)
5E4E  00                 [27] (45)
5E4F  00                 [28] (45)
5E50  18                 [29] (45)
5E51  00                 [30] (45)
5E52  00                 [31] (112)
5E53  00                 [32] (-122)
5E54  18                 [33] (-122)
5E55  00                 [34] (-122)
5E56  00                 [35] (47)
5E57  00                 [36] (-114)
5E58  19                 [37] (-114)
5E59  00                 [38] (-119)
5E5A  00                 [39] (-108)
5E5B  00                 [40] (-108)
5E5C  19                 [41] (-112)
5E5D  00                 [42] (12)
5E5E  00                 [43] (12)
5E5F  00                 [44] (-106)
5E60  19                 [45] (16)
5E61  00                 [46] (40)
5E62  00                 [47] (68)
5E63  00                 [48] (68)
5E64  3B                 [49] (68)
5E65  00                 [50] (42)
5E66  00                 [51] (83)
5E67  00                 [52] (83)
5E68  3B                 [53] (83)
5E69  00                 [54] (70)
5E6A  00                 [55] (89)
5E6B  00                 [56] (89)
5E6C  4E                 [57] (85)
5E6D  00                 [58] (95)
5E6E  00                 [59] (95)
5E6F  00                 [60] (91)
5E70  52                 [61] (-85)
5E71  00                 [62] (-85)
5E72  00                 [63] (-85)
5E73  00                 [64] (97)
5E74  52                 [65] (41)
5E75  00                 [66] (41)
5E76  00                 [67] (41)
5E77  00                 [68] (41)
5E78  52                 [69] (-83)
5E79  00                 [70] (-92)
5E7A  00                 [71] (-92)
5E7B  00                 [72] (-92)
5E7C  50                 [73] (-92)
5E7D  00                 [74] (43)
5E7E  00                 [75] (8)
5E7F  00                 [76] (8)
5E80  65                 [77] (8)
5E81  00                 [78] (8)
5E82  00                 [79] (-90)
5E83  00                 [80] (8)
                         * locals:
5F74  00                 sizelocvars (0)
                         * upvalues:
5F75  00                 sizeupvalues (0)
                         ** end of function **

5F76                     ** end of chunk **
