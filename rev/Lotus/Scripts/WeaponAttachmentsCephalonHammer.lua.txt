1	C:\wlua_dump\path\Lotus\Scripts\WeaponAttachmentsCephalonHammer.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Scripts\WeaponAttachmentsCephalonHammer.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  04                 size of number (bytes)
0008  18                 integral (1=integral)
424
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
AlphaAtten
RotateAmount
ConstantGlow
WeaponAttack
ScanFXOnKill
OnDamageDone
_T
cephHammer
gGameRules
gLotusHubGameRulesType
gLotusAttractModeGameRulesType
gWeaponTrailType
flareType
math
baseLevel
maxChargeWhileChanneling
Engine
MAIN_HAND
equippedBaseLevelToAdd
matParam
table
authoritative
decayRate
ArsenalOpen
authoritative
_T
cephHammer
math
valueScale
Lotus_Game
LotusInventoryController_SS_SCANNABLE
scanFX
LotusInventoryController_SS_QUOTACOMPLETE_RESCANNABLE
LotusInventoryController_SS_QUOTACOMPLETE_NORESCAN
scanfullFX
EMPTY_SYMBOL
gLotusAvatarType
scanSound
gRegion
Engine
PM_HEAVY_MELEE
healPct
math
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  04                 maxstacksize (4)
                         * code:
0008  18                 sizecode (24)
0009  19000000           [01] loadk      0   0        ; 0
000D  5D400000           [02] getglobal  1   1        ; -332969190
0011  99800000           [03] loadk      2   2        ; "AlphaAtten"
0015  62800001           [04] call       1   2   2  
0019  9D400000           [05] getglobal  2   1        ; -332969190
001D  D9C00000           [06] loadk      3   3        ; "RotateAmount"
0021  A2800001           [07] call       2   2   2  
0025  E5000000           [08] closure    3   0      
0029  12000000           [09] move       0   0      
002D  12000001           [10] move       0   2      
0031  12008000           [11] move       0   1      
0035  E0000100           [12] setglobal  3   4        ; ConstantGlow
0039  E0400100           [13] setglobal  3   5        ; 1966468294
003D  E5400000           [14] closure    3   1      
0041  12000000           [15] move       0   0      
0045  E0800100           [16] setglobal  3   6        ; WeaponAttack
0049  E0C00100           [17] setglobal  3   7        ; 760401555
004D  E5800000           [18] closure    3   2      
0051  E0000200           [19] setglobal  3   8        ; ScanFXOnKill
0055  E0400200           [20] setglobal  3   9        ; 2018538906
0059  E5C00000           [21] closure    3   3      
005D  E0800200           [22] setglobal  3   10       ; OnDamageDone
0061  E0C00200           [23] setglobal  3   11       ; 109523060
0065  1E008000           [24] return     0   1      
                         * constants:
0069  0C                 sizek (12)
006A  03                 const type 3
006B  00006040           const [0]: (0)
006F  01                 const type 3
0070  1A4B27EC           const [1]: (-332969190)
0074  04                 const type 4
0075  0B                 string size (11)
0076  416C706861417474+  "AlphaAtt"
007E  656E00             "en\0"
                         const [2]: "AlphaAtten"
0081  04                 const type 4
0082  0D                 string size (13)
0083  526F74617465416D+  "RotateAm"
008B  6F756E7400         "ount\0"
                         const [3]: "RotateAmount"
0090  04                 const type 4
0091  0D                 string size (13)
0092  436F6E7374616E74+  "Constant"
009A  476C6F7700         "Glow\0"
                         const [4]: "ConstantGlow"
009F  01                 const type 3
00A0  C6EC3575           const [5]: (1966468294)
00A4  04                 const type 4
00A5  0D                 string size (13)
00A6  576561706F6E4174+  "WeaponAt"
00AE  7461636B00         "tack\0"
                         const [6]: "WeaponAttack"
00B3  01                 const type 3
00B4  93CE522D           const [7]: (760401555)
00B8  04                 const type 4
00B9  0D                 string size (13)
00BA  5363616E46584F6E+  "ScanFXOn"
00C2  4B696C6C00         "Kill\0"
                         const [8]: "ScanFXOnKill"
00C7  01                 const type 3
00C8  9A755078           const [9]: (2018538906)
00CC  04                 const type 4
00CD  0D                 string size (13)
00CE  4F6E44616D616765+  "OnDamage"
00D6  446F6E6500         "Done\0"
                         const [10]: "OnDamageDone"
00DB  01                 const type 3
00DC  74308706           const [11]: (109523060)
                         * functions:
00E0  04                 sizep (4)
                         
00E1                     ** function [0] definition (level 2)
                         ** start of function **
00E1  00                 string size (0)
                         source name: (none)
00E2  1C                 line defined (28)
00E3  87                 last line defined (135)
00E4  01                 nups (3)
00E5  03                 numparams (1)
00E6  01                 is_vararg (0)
00E7  00                 maxstacksize (24)
                         * code:
00EA  02                 sizecode (312)
00EB  5D000000           [001] getglobal  1   0        ; 538022378
00EF  99400000           [002] loadk      2   1        ; 0
00F3  62400001           [003] call       1   2   1  
00F7  64804000           [004] self       1   0   258  ; 421792552
00FB  62800001           [005] call       1   2   2  
00FF  9DC00000           [006] getglobal  2   3        ; 1074689893
0103  D2008000           [007] move       3   1      
0107  A2800001           [008] call       2   2   2  
010B  98000000           [009] test       2       0    ; to [11] if true
010F  1A000080           [010] jmp        1            ; to [12]
0113  1E008000           [011] return     0   1      
0117  A400C100           [012] self       2   1   260  ; -1538682285
011B  A2800001           [013] call       2   2   2  
011F  DDC00000           [014] getglobal  3   3        ; 1074689893
0123  12010001           [015] move       4   2      
0127  E2800001           [016] call       3   2   2  
012B  D8000000           [017] test       3       0    ; to [19] if true
012F  1A000080           [018] jmp        1            ; to [20]
0133  1E008000           [019] return     0   1      
0137  DD400100           [020] getglobal  3   5        ; _T
013B  CE80C101           [021] gettable   3   3   262  ; "cephHammer"
fail op	35
013F  23C0C101           [022] close      0  
0143  1A800080           [023] jmp        3            ; to [27]
0147  DD400100           [024] getglobal  3   5        ; _T
014B  0B010000           [025] newtable   4   0   0    ; array=0, hash=0
014F  CC000183           [026] settable   3   262 4    ; "cephHammer"
0153  DD400100           [027] getglobal  3   5        ; _T
0157  CE80C101           [028] gettable   3   3   262  ; "cephHammer"
015B  24014201           [029] self       4   2   264  ; -605089866
015F  22810001           [030] call       4   2   2  
0163  CE008101           [031] gettable   3   3   4  
fail op	35
0167  23C0C101           [032] close      0  
016B  1A000180           [033] jmp        5            ; to [39]
016F  DD400100           [034] getglobal  3   5        ; _T
0173  CE80C101           [035] gettable   3   3   262  ; "cephHammer"
0177  24014201           [036] self       4   2   264  ; -605089866
017B  22810001           [037] call       4   2   2  
017F  CC404202           [038] settable   3   4   265  ; -51
0183  DDC00000           [039] getglobal  3   3        ; 1074689893
0187  1D810200           [040] getglobal  4   10       ; gGameRules
018B  E2800001           [041] call       3   2   2  
018F  D8000000           [042] test       3       0    ; to [44] if true
0193  1AC00080           [043] jmp        4            ; to [48]
0197  DD000000           [044] getglobal  3   0        ; 538022378
019B  19410000           [045] loadk      4   1        ; 0
019F  E2400001           [046] call       3   2   1  
01A3  1A80FD7F           [047] jmp        -9           ; to [39]
01A7  DD800200           [048] getglobal  3   10       ; gGameRules
01AB  E4C0C201           [049] self       3   3   267  ; -1957065004
01AF  5D010300           [050] getglobal  5   12       ; gLotusHubGameRulesType
01B3  E2808001           [051] call       3   3   2  
01B7  1D410100           [052] getglobal  4   5        ; _T
01BB  0E814102           [053] gettable   4   4   262  ; "cephHammer"
01BF  64014201           [054] self       5   2   264  ; -605089866
01C3  62810001           [055] call       5   2   2  
01C7  0C41C202           [056] settable   4   5   265  ; -51
01CB  24414301           [057] self       4   2   269  ; -1917464545
01CF  22810001           [058] call       4   2   2  
01D3  5D810200           [059] getglobal  5   10       ; gGameRules
01D7  64C1C202           [060] self       5   5   267  ; -1957065004
01DB  DD810300           [061] getglobal  7   14       ; gLotusAttractModeGameRulesType
01DF  62818001           [062] call       5   3   2  
01E3  A4C14300           [063] self       6   0   271  ; 366271214
01E7  1D020400           [064] getglobal  8   16       ; gWeaponTrailType
01EB  A2818001           [065] call       6   3   2  
01EF  D7018000           [066] loadbool   7   1   0    ; true
01F3  17020000           [067] loadbool   8   0   0    ; false
01F7  64424400           [068] self       9   0   273  ; -1625438872
01FB  DD820400           [069] getglobal  11  18       ; flareType
01FF  62828001           [070] call       9   3   2  
0203  9DC20000           [071] getglobal  10  3        ; 1074689893
0207  D2028004           [072] move       11  9      
020B  A2820001           [073] call       10  2   2  
020F  98420000           [074] test       10      1    ; to [76] if false
0213  1A800080           [075] jmp        3            ; to [79]
0217  A4C2C404           [076] self       10  9   275  ; -1107555868
021B  19430000           [077] loadk      12  1        ; 0
021F  A2428001           [078] call       10  3   1  
0223  9DC20000           [079] getglobal  10  3        ; 1074689893
0227  D2020001           [080] move       11  2      
022B  A2820001           [081] call       10  2   2  
022F  98420000           [082] test       10      1    ; to [84] if false
0233  1AC03880           [083] jmp        228          ; to [312]
0237  9DC20000           [084] getglobal  10  3        ; 1074689893
023B  D2020000           [085] move       11  0      
023F  A2820001           [086] call       10  2   2  
0243  98420000           [087] test       10      1    ; to [89] if false
0247  1A803780           [088] jmp        223          ; to [312]
024B  9D020500           [089] getglobal  10  20       ; math
024F  8E424505           [090] gettable   10  10  277  ; -1962864584
0253  DD820500           [091] getglobal  11  22       ; baseLevel
0257  CDC2C505           [092] sub        11  11  279  ; -51
025B  1D430100           [093] getglobal  12  5        ; _T
025F  0E834106           [094] gettable   12  12  262  ; "cephHammer"
0263  64034201           [095] self       13  2   264  ; -605089866
0267  62830001           [096] call       13  2   2  
026B  0E430306           [097] gettable   12  12  13 
026F  A2828001           [098] call       10  3   2  
0273  DD020600           [099] getglobal  11  24       ; maxChargeWhileChanneling
0277  D8020000           [100] test       11      0    ; to [102] if true
027B  1AC00380           [101] jmp        16           ; to [118]
027F  DDC20000           [102] getglobal  11  3        ; 1074689893
0283  12038000           [103] move       12  1      
0287  E2820001           [104] call       11  2   2  
028B  D8420000           [105] test       11      1    ; to [107] if false
028F  1A800280           [106] jmp        11           ; to [118]
0293  E442C600           [107] self       11  1   281  ; -317028801
0297  E2820001           [108] call       11  2   2  
029B  D8020000           [109] test       11      0    ; to [111] if true
029F  1A800180           [110] jmp        7            ; to [118]
02A3  93020000           [111] getupval   10  0      
02A7  DD420100           [112] getglobal  11  5        ; _T
02AB  CE82C105           [113] gettable   11  11  262  ; "cephHammer"
02AF  24034201           [114] self       12  2   264  ; -605089866
02B3  22830001           [115] call       12  2   2  
02B7  53030000           [116] getupval   13  0      
02BB  CC420306           [117] settable   11  12  13 
02BF  E4824602           [118] self       11  4   282  ; 1611155362
02C3  5DC30600           [119] getglobal  13  27       ; Engine
02C7  4E03C706           [120] gettable   13  13  284  ; "MAIN_HAND"
02CB  92038000           [121] move       14  1      
02CF  E2820002           [122] call       11  4   2  
02D3  12028005           [123] move       8   11     
02D7  58010000           [124] test       5       0    ; to [126] if true
02DB  1A800280           [125] jmp        11           ; to [137]
02DF  DD420700           [126] getglobal  11  29       ; equippedBaseLevelToAdd
fail op	21
02E3  15C08280           [127] concat     0   257 11 
02E7  1AC00180           [128] jmp        8            ; to [137]
02EB  18020000           [129] test       8       0    ; to [131] if true
02EF  1A400180           [130] jmp        6            ; to [137]
02F3  9D420700           [131] getglobal  10  29       ; equippedBaseLevelToAdd
02F7  DD420100           [132] getglobal  11  5        ; _T
02FB  CE82C105           [133] gettable   11  11  262  ; "cephHammer"
02FF  24034201           [134] self       12  2   264  ; -605089866
0303  22830001           [135] call       12  2   2  
0307  CC820206           [136] settable   11  12  10 
030B  18020000           [137] test       8       0    ; to [139] if true
030F  1A800480           [138] jmp        19           ; to [158]
0313  D8410000           [139] test       7       1    ; to [141] if false
0317  1A800880           [140] jmp        35           ; to [176]
031B  E4824700           [141] self       11  0   286  ; 795319150
031F  5DC30700           [142] getglobal  13  31       ; matParam
0323  99030800           [143] loadk      14  32       ; 0
0327  D9430800           [144] loadk      15  33       ; 0
032B  19440000           [145] loadk      16  1        ; 0
032F  59440000           [146] loadk      17  1        ; 0
0333  99440000           [147] loadk      18  1        ; 0
0337  E2420004           [148] call       11  8   1  
033B  DDC20000           [149] getglobal  11  3        ; 1074689893
033F  12038004           [150] move       12  9      
0343  E2820001           [151] call       11  2   2  
0347  D8420000           [152] test       11      1    ; to [154] if false
034B  1A400580           [153] jmp        22           ; to [176]
034F  E4C2C404           [154] self       11  9   275  ; -1107555868
0353  59430000           [155] loadk      13  1        ; 0
0357  E2428001           [156] call       11  3   1  
035B  1A400480           [157] jmp        18           ; to [176]
035F  D8010000           [158] test       7       0    ; to [160] if true
0363  1AC00380           [159] jmp        16           ; to [176]
0367  E4824700           [160] self       11  0   286  ; 795319150
036B  5DC30700           [161] getglobal  13  31       ; matParam
036F  99030800           [162] loadk      14  32       ; 0
0373  D9430000           [163] loadk      15  1        ; 0
0377  19440000           [164] loadk      16  1        ; 0
037B  59440000           [165] loadk      17  1        ; 0
037F  99440000           [166] loadk      18  1        ; 0
0383  E2420004           [167] call       11  8   1  
0387  DDC20000           [168] getglobal  11  3        ; 1074689893
038B  12038004           [169] move       12  9      
038F  E2820001           [170] call       11  2   2  
0393  D8420000           [171] test       11      1    ; to [173] if false
0397  1A800080           [172] jmp        3            ; to [176]
039B  E4C2C404           [173] self       11  9   275  ; -1107555868
039F  59430800           [174] loadk      13  33       ; 0
03A3  E2428001           [175] call       11  3   1  
03A7  D2010004           [176] move       7   8      
03AB  DD820500           [177] getglobal  11  22       ; baseLevel
03AF  CDC2C505           [178] sub        11  11  279  ; -51
fail op	21
03B3  15808205           [179] concat     0   11  10 
03B7  1A001D80           [180] jmp        117          ; to [298]
03BB  DD820500           [181] getglobal  11  22       ; baseLevel
fail op	21
03BF  15C00205           [182] concat     0   10  11 
03C3  1A000080           [183] jmp        1            ; to [185]
03C7  9D820500           [184] getglobal  10  22       ; baseLevel
03CB  D9420000           [185] loadk      11  1        ; 0
03CF  24834700           [186] self       12  0   286  ; 795319150
03D3  9DC30700           [187] getglobal  14  31       ; matParam
03D7  D9430800           [188] loadk      15  33       ; 0
03DB  12040005           [189] move       16  10     
03DF  59440000           [190] loadk      17  1        ; 0
03E3  99440000           [191] loadk      18  1        ; 0
03E7  D9440000           [192] loadk      19  1        ; 0
03EB  22430004           [193] call       12  8   1  
03EF  24834800           [194] self       12  0   290  ; -786111647
03F3  93038000           [195] getupval   14  1      
03F7  DD030500           [196] getglobal  15  20       ; math
03FB  CEC3C807           [197] gettable   15  15  291  ; -688728047
03FF  12040005           [198] move       16  10     
0403  59040800           [199] loadk      17  32       ; 0
0407  E2038001           [200] call       15  3   0  
040B  22430000           [201] call       12  0   1  
040F  0A030003           [202] len        12  6      
fail op	21
0413  15008380           [203] concat     0   257 12 
0417  1A000680           [204] jmp        25           ; to [230]
041B  0A030003           [205] len        12  6      
041F  59430800           [206] loadk      13  33       ; 0
0423  99030900           [207] loadk      14  36       ; 0
0427  10C30480           [208] forprep    12  20       ; to [229]
042B  0EC40303           [209] gettable   16  6   15 
042F  5DC40000           [210] getglobal  17  3        ; 1074689893
0433  92040008           [211] move       18  16     
0437  62840001           [212] call       17  2   2  
043B  58040000           [213] test       17      0    ; to [215] if true
043F  1A400180           [214] jmp        6            ; to [221]
0443  5D440900           [215] getglobal  17  37       ; table
0447  4E84C908           [216] gettable   17  17  294  ; -843973282
044B  92040003           [217] move       18  6      
044F  D2048007           [218] move       19  15     
0453  62448001           [219] call       17  3   1  
0457  1AC00180           [220] jmp        8            ; to [229]
045B  64844808           [221] self       17  16  290  ; -786111647
045F  D3040001           [222] getupval   19  2      
0463  1D050500           [223] getglobal  20  20       ; math
0467  0EC5490A           [224] gettable   20  20  295  ; 1710846250
046B  52050005           [225] move       21  10     
046F  99450800           [226] loadk      22  33       ; 0
0473  22058001           [227] call       20  3   0  
0477  62440000           [228] call       17  0   1  
047B  1483FA7F           [229] forloop    12  -21      ; to [209] if loop
047F  5D040000           [230] getglobal  17  0        ; 538022378
0483  99440000           [231] loadk      18  1        ; 0
0487  62440001           [232] call       17  2   1  
048B  5D040A00           [233] getglobal  17  40       ; 1289681407
048F  62848000           [234] call       17  1   2  
0493  D2028008           [235] move       11  17     
0497  5D440A00           [236] getglobal  17  41       ; authoritative
049B  58040000           [237] test       17      0    ; to [239] if true
049F  1A400F80           [238] jmp        62           ; to [301]
04A3  5D440100           [239] getglobal  17  5        ; _T
04A7  4E84C108           [240] gettable   17  17  262  ; "cephHammer"
04AB  A4044201           [241] self       18  2   264  ; -605089866
04AF  A2840001           [242] call       18  2   2  
04B3  DD040500           [243] getglobal  19  20       ; math
04B7  CE44C509           [244] gettable   19  19  277  ; -1962864584
04BB  1D850500           [245] getglobal  20  22       ; baseLevel
04BF  0DC5450A           [246] sub        20  20  279  ; -51
04C3  5D450100           [247] getglobal  21  5        ; _T
04C7  4E85C10A           [248] gettable   21  21  262  ; "cephHammer"
04CB  A4054201           [249] self       22  2   264  ; -605089866
04CF  A2850001           [250] call       22  2   2  
04D3  4E85850A           [251] gettable   21  21  22 
04D7  9D850A00           [252] getglobal  22  42       ; decayRate
04DB  84858505           [253] mul        22  11  22 
04DF  4D85850A           [254] sub        21  21  22 
04E3  E2848001           [255] call       19  3   2  
04E7  4CC40409           [256] settable   17  18  19 
04EB  5D440700           [257] getglobal  17  29       ; equippedBaseLevelToAdd
fail op	21
04EF  15408480           [258] concat     0   257 17 
04F3  1A000A80           [259] jmp        41           ; to [301]
04F7  5D440100           [260] getglobal  17  5        ; _T
04FB  4E84C108           [261] gettable   17  17  262  ; "cephHammer"
04FF  A4044201           [262] self       18  2   264  ; -605089866
0503  A2840001           [263] call       18  2   2  
0507  4E848408           [264] gettable   17  17  18 
050B  9D440700           [265] getglobal  18  29       ; equippedBaseLevelToAdd
fail op	21
050F  15808408           [266] concat     0   17  18 
0513  1A000880           [267] jmp        33           ; to [301]
0517  64844602           [268] self       17  4   282  ; 1611155362
051B  DDC40600           [269] getglobal  19  27       ; Engine
051F  CE04C709           [270] gettable   19  19  284  ; "MAIN_HAND"
0523  12058000           [271] move       20  1      
0527  62840002           [272] call       17  4   2  
052B  58440000           [273] test       17      1    ; to [275] if false
052F  1AC00080           [274] jmp        4            ; to [279]
0533  64C44A01           [275] self       17  2   299  ; -117614403
0537  62840001           [276] call       17  2   2  
053B  58040000           [277] test       17      0    ; to [279] if true
053F  1A400580           [278] jmp        22           ; to [301]
0543  5D440100           [279] getglobal  17  5        ; _T
0547  4E84C108           [280] gettable   17  17  262  ; "cephHammer"
054B  A4044201           [281] self       18  2   264  ; -605089866
054F  A2840001           [282] call       18  2   2  
0553  DD040500           [283] getglobal  19  20       ; math
0557  CEC4C909           [284] gettable   19  19  295  ; 1710846250
055B  1D450700           [285] getglobal  20  29       ; equippedBaseLevelToAdd
055F  5D450100           [286] getglobal  21  5        ; _T
0563  4E85C10A           [287] gettable   21  21  262  ; "cephHammer"
0567  A4054201           [288] self       22  2   264  ; -605089866
056B  A2850001           [289] call       22  2   2  
056F  4E85850A           [290] gettable   21  21  22 
0573  9D850A00           [291] getglobal  22  42       ; decayRate
0577  84858505           [292] mul        22  11  22 
057B  84054B0B           [293] mul        22  22  300  ; 0
057F  4385850A           [294] add        21  21  22 
0583  E2848001           [295] call       19  3   2  
0587  4CC40409           [296] settable   17  18  19 
058B  1A800080           [297] jmp        3            ; to [301]
058F  5D040000           [298] getglobal  17  0        ; 538022378
0593  99440000           [299] loadk      18  1        ; 0
0597  62440001           [300] call       17  2   1  
059B  D8000000           [301] test       3       0    ; to [303] if true
059F  1AC0C77F           [302] jmp        -224         ; to [79]
05A3  5D440100           [303] getglobal  17  5        ; _T
05A7  4E44CB08           [304] gettable   17  17  301  ; "ArsenalOpen"
05AB  58440000           [305] test       17      1    ; to [307] if false
05AF  1AC0C67F           [306] jmp        -228         ; to [79]
05B3  5D840500           [307] getglobal  17  22       ; baseLevel
fail op	33
05B7  21400405           [308] tforloop   0       17   ; to [310] if exit
05BB  1A00C67F           [309] jmp        -231         ; to [79]
05BF  1E008000           [310] return     0   1      
05C3  1A80C57F           [311] jmp        -233         ; to [79]
05C7  1E008000           [312] return     0   1      
                         * constants:
05CB  2E                 sizek (46)
05CC  01                 const type 3
05CD  EA911120           const [0]: (538022378)
05D1  03                 const type 3
05D2  00000000           const [1]: (0)
05D6  01                 const type 3
05D7  280B2419           const [2]: (421792552)
05DB  01                 const type 3
05DC  65770E40           const [3]: (1074689893)
05E0  01                 const type 3
05E1  539249A4           const [4]: (-1538682285)
05E5  04                 const type 4
05E6  03                 string size (3)
05E7  5F5400             "_T\0"
                         const [5]: "_T"
05EA  04                 const type 4
05EB  0B                 string size (11)
05EC  6365706848616D6D+  "cephHamm"
05F4  657200             "er\0"
                         const [6]: "cephHammer"
05F7  00                 const type 0
                         const [7]: nil
05F8  01                 const type 3
05F9  B60FEFDB           const [8]: (-605089866)
05FD  03                 const type 3
05FE  CDCC4C3D           const [9]: (-51)
0602  04                 const type 4
0603  0B                 string size (11)
0604  6747616D6552756C+  "gGameRul"
060C  657300             "es\0"
                         const [10]: "gGameRules"
060F  01                 const type 3
0610  D48E598B           const [11]: (-1957065004)
0614  04                 const type 4
0615  17                 string size (23)
0616  674C6F7475734875+  "gLotusHu"
061E  6247616D6552756C+  "bGameRul"
0626  65735479706500     "esType\0"
                         const [12]: "gLotusHubGameRulesType"
062D  01                 const type 3
062E  1FD0B58D           const [13]: (-1917464545)
0632  04                 const type 4
0633  1F                 string size (31)
0634  674C6F7475734174+  "gLotusAt"
063C  74726163744D6F64+  "tractMod"
0644  6547616D6552756C+  "eGameRul"
064C  65735479706500     "esType\0"
                         const [14]: "gLotusAttractModeGameRulesType"
0653  01                 const type 3
0654  EEDAD415           const [15]: (366271214)
0658  04                 const type 4
0659  11                 string size (17)
065A  67576561706F6E54+  "gWeaponT"
0662  7261696C54797065+  "railType"
066A  00                 "\0"
                         const [16]: "gWeaponTrailType"
066B  01                 const type 3
066C  68C51D9F           const [17]: (-1625438872)
0670  04                 const type 4
0671  0A                 string size (10)
0672  666C617265547970+  "flareTyp"
067A  6500               "e\0"
                         const [18]: "flareType"
067C  01                 const type 3
067D  E409FCBD           const [19]: (-1107555868)
0681  04                 const type 4
0682  05                 string size (5)
0683  6D61746800         "math\0"
                         const [20]: "math"
0688  01                 const type 3
0689  3810018B           const [21]: (-1962864584)
068D  04                 const type 4
068E  0A                 string size (10)
068F  626173654C657665+  "baseLeve"
0697  6C00               "l\0"
                         const [22]: "baseLevel"
0699  03                 const type 3
069A  CDCC4C3E           const [23]: (-51)
069E  04                 const type 4
069F  19                 string size (25)
06A0  6D61784368617267+  "maxCharg"
06A8  655768696C654368+  "eWhileCh"
06B0  616E6E656C696E67+  "anneling"
06B8  00                 "\0"
                         const [24]: "maxChargeWhileChanneling"
06B9  01                 const type 3
06BA  3F861AED           const [25]: (-317028801)
06BE  01                 const type 3
06BF  A2470860           const [26]: (1611155362)
06C3  04                 const type 4
06C4  07                 string size (7)
06C5  456E67696E6500     "Engine\0"
                         const [27]: "Engine"
06CC  04                 const type 4
06CD  0A                 string size (10)
06CE  4D41494E5F48414E+  "MAIN_HAN"
06D6  4400               "D\0"
                         const [28]: "MAIN_HAND"
06D8  04                 const type 4
06D9  17                 string size (23)
06DA  6571756970706564+  "equipped"
06E2  426173654C657665+  "BaseLeve"
06EA  6C546F41646400     "lToAdd\0"
                         const [29]: "equippedBaseLevelToAdd"
06F1  01                 const type 3
06F2  6E9B672F           const [30]: (795319150)
06F6  04                 const type 4
06F7  09                 string size (9)
06F8  6D6174506172616D+  "matParam"
0700  00                 "\0"
                         const [31]: "matParam"
0701  03                 const type 3
0702  00004040           const [32]: (0)
0706  03                 const type 3
0707  0000803F           const [33]: (0)
070B  01                 const type 3
070C  61E324D1           const [34]: (-786111647)
0710  01                 const type 3
0711  11D8F2D6           const [35]: (-688728047)
0715  03                 const type 3
0716  000080BF           const [36]: (0)
071A  04                 const type 4
071B  06                 string size (6)
071C  7461626C6500       "table\0"
                         const [37]: "table"
0722  01                 const type 3
0723  5EFDB1CD           const [38]: (-843973282)
0727  01                 const type 3
0728  2A71F965           const [39]: (1710846250)
072C  01                 const type 3
072D  FFF9DE4C           const [40]: (1289681407)
0731  04                 const type 4
0732  0E                 string size (14)
0733  617574686F726974+  "authorit"
073B  617469766500       "ative\0"
                         const [41]: "authoritative"
0741  04                 const type 4
0742  0A                 string size (10)
0743  6465636179526174+  "decayRat"
074B  6500               "e\0"
                         const [42]: "decayRate"
074D  01                 const type 3
074E  BD58FDF8           const [43]: (-117614403)
0752  03                 const type 3
0753  00000040           const [44]: (0)
0757  04                 const type 4
0758  0C                 string size (12)
0759  417273656E616C4F+  "ArsenalO"
0761  70656E00           "pen\0"
                         const [45]: "ArsenalOpen"
                         * functions:
0765  00                 sizep (0)
                         * lines:
0767  02                 sizelineinfo (312)
                         [pc] (line)
0768  1D                 [001] (29)
0769  00                 [002] (29)
076A  00                 [003] (29)
076B  00                 [004] (30)
076C  1D                 [005] (30)
076D  00                 [006] (31)
076E  00                 [007] (31)
076F  00                 [008] (31)
0770  1D                 [009] (31)
0771  00                 [010] (31)
0772  00                 [011] (32)
0773  00                 [012] (34)
0774  1E                 [013] (34)
0775  00                 [014] (36)
0776  00                 [015] (36)
0777  00                 [016] (36)
0778  1E                 [017] (36)
0779  00                 [018] (36)
077A  00                 [019] (37)
077B  00                 [020] (40)
077C  1F                 [021] (40)
077D  00                 [022] (40)
077E  00                 [023] (40)
077F  00                 [024] (41)
0780  1F                 [025] (41)
0781  00                 [026] (41)
0782  00                 [027] (44)
0783  00                 [028] (44)
0784  1F                 [029] (44)
0785  00                 [030] (44)
0786  00                 [031] (44)
0787  00                 [032] (44)
0788  1F                 [033] (44)
0789  00                 [034] (45)
078A  00                 [035] (45)
078B  00                 [036] (45)
078C  1F                 [037] (45)
078D  00                 [038] (45)
078E  00                 [039] (48)
078F  00                 [040] (48)
0790  20                 [041] (48)
0791  00                 [042] (48)
0792  00                 [043] (48)
0793  00                 [044] (49)
0794  22                 [045] (49)
0795  00                 [046] (49)
0796  00                 [047] (49)
0797  00                 [048] (52)
0798  22                 [049] (52)
0799  00                 [050] (52)
079A  00                 [051] (52)
079B  00                 [052] (54)
079C  24                 [053] (54)
079D  00                 [054] (54)
079E  00                 [055] (54)
079F  00                 [056] (54)
07A0  24                 [057] (56)
07A1  00                 [058] (56)
07A2  00                 [059] (57)
07A3  00                 [060] (57)
07A4  24                 [061] (57)
07A5  00                 [062] (57)
07A6  00                 [063] (58)
07A7  00                 [064] (58)
07A8  24                 [065] (58)
07A9  00                 [066] (59)
07AA  00                 [067] (60)
07AB  00                 [068] (61)
07AC  24                 [069] (61)
07AD  00                 [070] (61)
07AE  00                 [071] (62)
07AF  00                 [072] (62)
07B0  25                 [073] (62)
07B1  00                 [074] (62)
07B2  00                 [075] (62)
07B3  00                 [076] (63)
07B4  28                 [077] (63)
07B5  00                 [078] (63)
07B6  00                 [079] (66)
07B7  00                 [080] (66)
07B8  28                 [081] (66)
07B9  00                 [082] (66)
07BA  00                 [083] (66)
07BB  00                 [084] (66)
07BC  28                 [085] (66)
07BD  00                 [086] (66)
07BE  00                 [087] (66)
07BF  00                 [088] (66)
07C0  28                 [089] (67)
07C1  00                 [090] (67)
07C2  00                 [091] (67)
07C3  00                 [092] (67)
07C4  29                 [093] (67)
07C5  00                 [094] (67)
07C6  00                 [095] (67)
07C7  00                 [096] (67)
07C8  29                 [097] (67)
07C9  00                 [098] (67)
07CA  00                 [099] (69)
07CB  00                 [100] (69)
07CC  29                 [101] (69)
07CD  00                 [102] (69)
07CE  00                 [103] (69)
07CF  00                 [104] (69)
07D0  2C                 [105] (69)
07D1  00                 [106] (69)
07D2  00                 [107] (69)
07D3  00                 [108] (69)
07D4  2C                 [109] (69)
07D5  00                 [110] (69)
07D6  00                 [111] (70)
07D7  00                 [112] (71)
07D8  2C                 [113] (71)
07D9  00                 [114] (71)
07DA  00                 [115] (71)
07DB  00                 [116] (71)
07DC  2C                 [117] (71)
07DD  00                 [118] (74)
07DE  00                 [119] (74)
07DF  00                 [120] (74)
07E0  2C                 [121] (74)
07E1  00                 [122] (74)
07E2  00                 [123] (74)
07E3  00                 [124] (76)
07E4  2C                 [125] (76)
07E5  00                 [126] (76)
07E6  00                 [127] (76)
07E7  00                 [128] (76)
07E8  2C                 [129] (76)
07E9  00                 [130] (76)
07EA  00                 [131] (77)
07EB  00                 [132] (78)
07EC  2D                 [133] (78)
07ED  00                 [134] (78)
07EE  00                 [135] (78)
07EF  00                 [136] (78)
07F0  2D                 [137] (81)
07F1  00                 [138] (81)
07F2  00                 [139] (82)
07F3  00                 [140] (82)
07F4  2D                 [141] (83)
07F5  00                 [142] (83)
07F6  00                 [143] (83)
07F7  00                 [144] (83)
07F8  2D                 [145] (83)
07F9  00                 [146] (83)
07FA  00                 [147] (83)
07FB  00                 [148] (83)
07FC  2D                 [149] (84)
07FD  00                 [150] (84)
07FE  00                 [151] (84)
07FF  00                 [152] (84)
0800  30                 [153] (84)
0801  00                 [154] (85)
0802  00                 [155] (85)
0803  00                 [156] (85)
0804  30                 [157] (87)
0805  00                 [158] (89)
0806  00                 [159] (89)
0807  00                 [160] (90)
0808  30                 [161] (90)
0809  00                 [162] (90)
080A  00                 [163] (90)
080B  00                 [164] (90)
080C  30                 [165] (90)
080D  00                 [166] (90)
080E  00                 [167] (90)
080F  00                 [168] (91)
0810  30                 [169] (91)
0811  00                 [170] (91)
0812  00                 [171] (91)
0813  00                 [172] (91)
0814  31                 [173] (92)
0815  00                 [174] (92)
0816  00                 [175] (92)
0817  00                 [176] (97)
0818  31                 [177] (99)
0819  00                 [178] (99)
081A  00                 [179] (99)
081B  00                 [180] (99)
081C  31                 [181] (100)
081D  00                 [182] (100)
081E  00                 [183] (100)
081F  00                 [184] (101)
0820  31                 [185] (103)
0821  00                 [186] (104)
0822  00                 [187] (104)
0823  00                 [188] (104)
0824  34                 [189] (104)
0825  00                 [190] (104)
0826  00                 [191] (104)
0827  00                 [192] (104)
0828  34                 [193] (104)
0829  00                 [194] (105)
082A  00                 [195] (105)
082B  00                 [196] (105)
082C  34                 [197] (105)
082D  00                 [198] (105)
082E  00                 [199] (105)
082F  00                 [200] (105)
0830  34                 [201] (105)
0831  00                 [202] (106)
0832  00                 [203] (106)
0833  00                 [204] (106)
0834  36                 [205] (107)
0835  00                 [206] (107)
0836  00                 [207] (107)
0837  00                 [208] (107)
0838  36                 [209] (108)
0839  00                 [210] (109)
083A  00                 [211] (109)
083B  00                 [212] (109)
083C  36                 [213] (109)
083D  00                 [214] (109)
083E  00                 [215] (110)
083F  00                 [216] (110)
0840  36                 [217] (110)
0841  00                 [218] (110)
0842  00                 [219] (110)
0843  00                 [220] (110)
0844  36                 [221] (112)
0845  00                 [222] (112)
0846  00                 [223] (112)
0847  00                 [224] (112)
0848  38                 [225] (112)
0849  00                 [226] (112)
084A  00                 [227] (112)
084B  00                 [228] (112)
084C  38                 [229] (107)
084D  00                 [230] (116)
084E  00                 [231] (116)
084F  00                 [232] (116)
0850  39                 [233] (117)
0851  00                 [234] (117)
0852  00                 [235] (117)
0853  00                 [236] (118)
0854  39                 [237] (118)
0855  00                 [238] (118)
0856  00                 [239] (119)
0857  00                 [240] (119)
0858  39                 [241] (119)
0859  00                 [242] (119)
085A  00                 [243] (119)
085B  00                 [244] (119)
085C  39                 [245] (119)
085D  00                 [246] (119)
085E  00                 [247] (119)
085F  00                 [248] (119)
0860  3A                 [249] (119)
0861  00                 [250] (119)
0862  00                 [251] (119)
0863  00                 [252] (119)
0864  3A                 [253] (119)
0865  00                 [254] (119)
0866  00                 [255] (119)
0867  00                 [256] (119)
0868  3A                 [257] (121)
0869  00                 [258] (121)
086A  00                 [259] (121)
086B  00                 [260] (121)
086C  3B                 [261] (121)
086D  00                 [262] (121)
086E  00                 [263] (121)
086F  00                 [264] (121)
0870  3C                 [265] (121)
0871  00                 [266] (121)
0872  00                 [267] (121)
0873  00                 [268] (122)
0874  3D                 [269] (122)
0875  00                 [270] (122)
0876  00                 [271] (122)
0877  00                 [272] (122)
0878  3D                 [273] (122)
0879  00                 [274] (122)
087A  00                 [275] (122)
087B  00                 [276] (122)
087C  3D                 [277] (122)
087D  00                 [278] (122)
087E  00                 [279] (123)
087F  00                 [280] (123)
0880  3E                 [281] (123)
0881  00                 [282] (123)
0882  00                 [283] (123)
0883  00                 [284] (123)
0884  3E                 [285] (123)
0885  00                 [286] (123)
0886  00                 [287] (123)
0887  00                 [288] (123)
0888  3E                 [289] (123)
0889  00                 [290] (123)
088A  00                 [291] (123)
088B  00                 [292] (123)
088C  3E                 [293] (123)
088D  00                 [294] (123)
088E  00                 [295] (123)
088F  00                 [296] (123)
0890  3E                 [297] (126)
0891  00                 [298] (-128)
0892  00                 [299] (-128)
0893  00                 [300] (-128)
0894  3F                 [301] (-125)
0895  00                 [302] (-125)
0896  00                 [303] (-125)
0897  00                 [304] (-125)
0898  3F                 [305] (-125)
0899  00                 [306] (-125)
089A  00                 [307] (-125)
089B  00                 [308] (-125)
089C  3F                 [309] (-125)
089D  00                 [310] (-124)
089E  00                 [311] (-123)
089F  00                 [312] (-121)
                         * locals:
0C48  00                 sizelocvars (0)
                         * upvalues:
0C49  00                 sizeupvalues (0)
                         ** end of function **

                         
0C4A                     ** function [1] definition (level 2)
                         ** start of function **
0C4A  00                 string size (0)
                         source name: (none)
0C4C  01                 line defined (137)
0C4D  96                 last line defined (150)
0C4E  01                 nups (1)
0C4F  01                 numparams (1)
0C50  01                 is_vararg (0)
0C51  00                 maxstacksize (10)
                         * code:
0C53  30                 sizecode (48)
0C54  64004000           [01] self       1   0   256  ; 421792552
0C58  62800001           [02] call       1   2   2  
0C5C  A440C000           [03] self       2   1   257  ; -1538682285
0C60  A2800001           [04] call       2   2   2  
0C64  DD800000           [05] getglobal  3   2        ; 1074689893
0C68  12010001           [06] move       4   2      
0C6C  E2800001           [07] call       3   2   2  
0C70  D8400000           [08] test       3       1    ; to [10] if false
0C74  1A800180           [09] jmp        7            ; to [17]
0C78  DDC00000           [10] getglobal  3   3        ; authoritative
0C7C  D8000000           [11] test       3       0    ; to [13] if true
0C80  1AC00080           [12] jmp        4            ; to [17]
0C84  DD000100           [13] getglobal  3   4        ; _T
0C88  CE40C101           [14] gettable   3   3   261  ; "cephHammer"
fail op	35
0C8C  2380C101           [15] close      0  
0C90  1A000080           [16] jmp        1            ; to [18]
0C94  1E008000           [17] return     0   1      
0C98  DD800000           [18] getglobal  3   2        ; 1074689893
0C9C  1D010100           [19] getglobal  4   4        ; _T
0CA0  0E414102           [20] gettable   4   4   261  ; "cephHammer"
0CA4  64C14101           [21] self       5   2   263  ; -605089866
0CA8  62810001           [22] call       5   2   2  
0CAC  0E410102           [23] gettable   4   4   5  
0CB0  E2800001           [24] call       3   2   2  
0CB4  D8000000           [25] test       3       0    ; to [27] if true
0CB8  1A000180           [26] jmp        5            ; to [32]
0CBC  DD000100           [27] getglobal  3   4        ; _T
0CC0  CE40C101           [28] gettable   3   3   261  ; "cephHammer"
0CC4  24C14101           [29] self       4   2   263  ; -605089866
0CC8  22810001           [30] call       4   2   2  
0CCC  CC004202           [31] settable   3   4   264  ; 0
0CD0  DD000100           [32] getglobal  3   4        ; _T
0CD4  CE40C101           [33] gettable   3   3   261  ; "cephHammer"
0CD8  24C14101           [34] self       4   2   263  ; -605089866
0CDC  22810001           [35] call       4   2   2  
0CE0  5D410200           [36] getglobal  5   9        ; math
0CE4  4E81C202           [37] gettable   5   5   266  ; 1710846250
0CE8  93010000           [38] getupval   6   0      
0CEC  DD010100           [39] getglobal  7   4        ; _T
0CF0  CE41C103           [40] gettable   7   7   261  ; "cephHammer"
0CF4  24C24101           [41] self       8   2   263  ; -605089866
0CF8  22820001           [42] call       8   2   2  
0CFC  CE018203           [43] gettable   7   7   8  
0D00  1DC20200           [44] getglobal  8   11       ; valueScale
0D04  C3018203           [45] add        7   7   8  
0D08  62818001           [46] call       5   3   2  
0D0C  CC400102           [47] settable   3   4   5  
0D10  1E008000           [48] return     0   1      
                         * constants:
0D14  0C                 sizek (12)
0D15  01                 const type 3
0D16  280B2419           const [0]: (421792552)
0D1A  01                 const type 3
0D1B  539249A4           const [1]: (-1538682285)
0D1F  01                 const type 3
0D20  65770E40           const [2]: (1074689893)
0D24  04                 const type 4
0D25  0E                 string size (14)
0D26  617574686F726974+  "authorit"
0D2E  617469766500       "ative\0"
                         const [3]: "authoritative"
0D34  04                 const type 4
0D35  03                 string size (3)
0D36  5F5400             "_T\0"
                         const [4]: "_T"
0D39  04                 const type 4
0D3A  0B                 string size (11)
0D3B  6365706848616D6D+  "cephHamm"
0D43  657200             "er\0"
                         const [5]: "cephHammer"
0D46  00                 const type 0
                         const [6]: nil
0D47  01                 const type 3
0D48  B60FEFDB           const [7]: (-605089866)
0D4C  03                 const type 3
0D4D  00000000           const [8]: (0)
0D51  04                 const type 4
0D52  05                 string size (5)
0D53  6D61746800         "math\0"
                         const [9]: "math"
0D58  01                 const type 3
0D59  2A71F965           const [10]: (1710846250)
0D5D  04                 const type 4
0D5E  0B                 string size (11)
0D5F  76616C7565536361+  "valueSca"
0D67  6C6500             "le\0"
                         const [11]: "valueScale"
                         * functions:
0D6A  00                 sizep (0)
                         * lines:
0D6B  30                 sizelineinfo (48)
                         [pc] (line)
0D6C  8A                 [01] (-118)
0D6D  00                 [02] (-118)
0D6E  00                 [03] (-117)
0D6F  00                 [04] (-117)
0D70  8A                 [05] (-115)
0D71  00                 [06] (-115)
0D72  00                 [07] (-115)
0D73  00                 [08] (-115)
0D74  8B                 [09] (-115)
0D75  00                 [10] (-115)
0D76  00                 [11] (-115)
0D77  00                 [12] (-115)
0D78  8B                 [13] (-115)
0D79  00                 [14] (-115)
0D7A  00                 [15] (-115)
0D7B  00                 [16] (-115)
0D7C  8D                 [17] (-114)
0D7D  00                 [18] (-111)
0D7E  00                 [19] (-111)
0D7F  00                 [20] (-111)
0D80  8D                 [21] (-111)
0D81  00                 [22] (-111)
0D82  00                 [23] (-111)
0D83  00                 [24] (-111)
0D84  8D                 [25] (-111)
0D85  00                 [26] (-111)
0D86  00                 [27] (-110)
0D87  00                 [28] (-110)
0D88  8D                 [29] (-110)
0D89  00                 [30] (-110)
0D8A  00                 [31] (-110)
0D8B  00                 [32] (-107)
0D8C  8D                 [33] (-107)
0D8D  00                 [34] (-107)
0D8E  00                 [35] (-107)
0D8F  00                 [36] (-107)
0D90  8D                 [37] (-107)
0D91  00                 [38] (-107)
0D92  00                 [39] (-107)
0D93  00                 [40] (-107)
0D94  8D                 [41] (-107)
0D95  00                 [42] (-107)
0D96  00                 [43] (-107)
0D97  00                 [44] (-107)
0D98  8D                 [45] (-107)
0D99  00                 [46] (-107)
0D9A  00                 [47] (-107)
0D9B  00                 [48] (-106)
                         * locals:
0E2C  00                 sizelocvars (0)
                         * upvalues:
0E2D  00                 sizeupvalues (0)
                         ** end of function **

                         
0E2E                     ** function [2] definition (level 2)
                         ** start of function **
0E2E  00                 string size (0)
                         source name: (none)
0E30  01                 line defined (152)
0E31  AB                 last line defined (171)
0E32  01                 nups (0)
0E33  00                 numparams (3)
0E34  03                 is_vararg (0)
0E35  00                 maxstacksize (11)
                         * code:
0E37  36                 sizecode (54)
0E38  1D010000           [01] getglobal  4   0        ; Lotus_Game
0E3C  0E414002           [02] gettable   4   4   257  ; "LotusInventoryController_SS_SCANNABLE"
fail op	35
0E40  23000101           [03] close      0  
0E44  1A400080           [04] jmp        2            ; to [7]
0E48  DD800000           [05] getglobal  3   2        ; scanFX
0E4C  1A000280           [06] jmp        9            ; to [16]
0E50  1D010000           [07] getglobal  4   0        ; Lotus_Game
0E54  0EC14002           [08] gettable   4   4   259  ; "LotusInventoryController_SS_QUOTACOMPLETE_RESCANNABLE"
fail op	35
0E58  63000101           [09] close      1  
0E5C  1AC00080           [10] jmp        4            ; to [15]
0E60  1D010000           [11] getglobal  4   0        ; Lotus_Game
0E64  0E014102           [12] gettable   4   4   260  ; "LotusInventoryController_SS_QUOTACOMPLETE_NORESCAN"
fail op	35
0E68  23000101           [13] close      0  
0E6C  1A000080           [14] jmp        1            ; to [16]
0E70  DD400100           [15] getglobal  3   5        ; scanfullFX
0E74  1D810100           [16] getglobal  4   6        ; 1074689893
0E78  52018001           [17] move       5   3      
0E7C  22810001           [18] call       4   2   2  
0E80  18410000           [19] test       4       1    ; to [21] if false
0E84  1A000580           [20] jmp        21           ; to [42]
0E88  24C1C100           [21] self       4   1   263  ; -1421644046
0E8C  92018001           [22] move       6   3      
0E90  DD010200           [23] getglobal  7   8        ; EMPTY_SYMBOL
0E94  22810002           [24] call       4   4   2  
0E98  5D810100           [25] getglobal  5   6        ; 1074689893
0E9C  92010002           [26] move       6   4      
0EA0  62810001           [27] call       5   2   2  
0EA4  58410000           [28] test       5       1    ; to [30] if false
0EA8  1AC00280           [29] jmp        12           ; to [42]
0EAC  6441C200           [30] self       5   1   265  ; -1957065004
0EB0  DD810200           [31] getglobal  7   10       ; gLotusAvatarType
0EB4  62818001           [32] call       5   3   2  
0EB8  58010000           [33] test       5       0    ; to [35] if true
0EBC  1A800180           [34] jmp        7            ; to [42]
0EC0  64C1C200           [35] self       5   1   267  ; 1479401319
0EC4  62810001           [36] call       5   2   2  
0EC8  58010000           [37] test       5       0    ; to [39] if true
0ECC  1A800080           [38] jmp        3            ; to [42]
0ED0  64014302           [39] self       5   4   268  ; 1413780095
0ED4  D7010000           [40] loadbool   7   0   0    ; false
0ED8  62418001           [41] call       5   3   1  
0EDC  64414300           [42] self       5   0   269  ; -1538682285
0EE0  62810001           [43] call       5   2   2  
0EE4  58010000           [44] test       5       0    ; to [46] if true
0EE8  1AC00180           [45] jmp        8            ; to [54]
0EEC  64414300           [46] self       5   0   269  ; -1538682285
0EF0  62810001           [47] call       5   2   2  
0EF4  6481C302           [48] self       5   5   270  ; 630793108
0EF8  DDC10300           [49] getglobal  7   15       ; scanSound
0EFC  17020000           [50] loadbool   8   0   0    ; false
0F00  59020400           [51] loadk      9   16       ; 0
0F04  97020000           [52] loadbool   10  0   0    ; false
0F08  62410003           [53] call       5   6   1  
0F0C  1E008000           [54] return     0   1      
                         * constants:
0F10  11                 sizek (17)
0F11  04                 const type 4
0F12  0B                 string size (11)
0F13  4C6F7475735F4761+  "Lotus_Ga"
0F1B  6D6500             "me\0"
                         const [0]: "Lotus_Game"
0F1E  04                 const type 4
0F1F  26                 string size (38)
0F20  4C6F747573496E76+  "LotusInv"
0F28  656E746F7279436F+  "entoryCo"
0F30  6E74726F6C6C6572+  "ntroller"
0F38  5F53535F5343414E+  "_SS_SCAN"
0F40  4E41424C4500       "NABLE\0"
                         const [1]: "LotusInventoryController_SS_SCANNABLE"
0F46  04                 const type 4
0F47  07                 string size (7)
0F48  7363616E465800     "scanFX\0"
                         const [2]: "scanFX"
0F4F  04                 const type 4
0F50  36                 string size (54)
0F51  4C6F747573496E76+  "LotusInv"
0F59  656E746F7279436F+  "entoryCo"
0F61  6E74726F6C6C6572+  "ntroller"
0F69  5F53535F51554F54+  "_SS_QUOT"
0F71  41434F4D504C4554+  "ACOMPLET"
0F79  455F52455343414E+  "E_RESCAN"
0F81  4E41424C4500       "NABLE\0"
                         const [3]: "LotusInventoryController_SS_QUOTACOMPLETE_RESCANNABLE"
0F87  04                 const type 4
0F88  33                 string size (51)
0F89  4C6F747573496E76+  "LotusInv"
0F91  656E746F7279436F+  "entoryCo"
0F99  6E74726F6C6C6572+  "ntroller"
0FA1  5F53535F51554F54+  "_SS_QUOT"
0FA9  41434F4D504C4554+  "ACOMPLET"
0FB1  455F4E4F52455343+  "E_NORESC"
0FB9  414E00             "AN\0"
                         const [4]: "LotusInventoryController_SS_QUOTACOMPLETE_NORESCAN"
0FBC  04                 const type 4
0FBD  0B                 string size (11)
0FBE  7363616E66756C6C+  "scanfull"
0FC6  465800             "FX\0"
                         const [5]: "scanfullFX"
0FC9  01                 const type 3
0FCA  65770E40           const [6]: (1074689893)
0FCE  01                 const type 3
0FCF  F26E43AB           const [7]: (-1421644046)
0FD3  04                 const type 4
0FD4  0D                 string size (13)
0FD5  454D5054595F5359+  "EMPTY_SY"
0FDD  4D424F4C00         "MBOL\0"
                         const [8]: "EMPTY_SYMBOL"
0FE2  01                 const type 3
0FE3  D48E598B           const [9]: (-1957065004)
0FE7  04                 const type 4
0FE8  11                 string size (17)
0FE9  674C6F7475734176+  "gLotusAv"
0FF1  6174617254797065+  "atarType"
0FF9  00                 "\0"
                         const [10]: "gLotusAvatarType"
0FFA  01                 const type 3
0FFB  67DF2D58           const [11]: (1479401319)
0FFF  01                 const type 3
1000  7F924454           const [12]: (1413780095)
1004  01                 const type 3
1005  539249A4           const [13]: (-1538682285)
1009  01                 const type 3
100A  94239925           const [14]: (630793108)
100E  04                 const type 4
100F  0A                 string size (10)
1010  7363616E536F756E+  "scanSoun"
1018  6400               "d\0"
                         const [15]: "scanSound"
101A  03                 const type 3
101B  00000000           const [16]: (0)
                         * functions:
101F  00                 sizep (0)
                         * lines:
1020  36                 sizelineinfo (54)
                         [pc] (line)
1021  9A                 [01] (-102)
1022  00                 [02] (-102)
1023  00                 [03] (-102)
1024  00                 [04] (-102)
1025  9A                 [05] (-101)
1026  00                 [06] (-101)
1027  00                 [07] (-100)
1028  00                 [08] (-100)
1029  9A                 [09] (-100)
102A  00                 [10] (-100)
102B  00                 [11] (-100)
102C  00                 [12] (-100)
102D  9A                 [13] (-100)
102E  00                 [14] (-100)
102F  00                 [15] (-99)
1030  00                 [16] (-96)
1031  9B                 [17] (-96)
1032  00                 [18] (-96)
1033  00                 [19] (-96)
1034  00                 [20] (-96)
1035  9B                 [21] (-95)
1036  00                 [22] (-95)
1037  00                 [23] (-95)
1038  00                 [24] (-95)
1039  9C                 [25] (-93)
103A  00                 [26] (-93)
103B  00                 [27] (-93)
103C  00                 [28] (-93)
103D  9C                 [29] (-93)
103E  00                 [30] (-93)
103F  00                 [31] (-93)
1040  00                 [32] (-93)
1041  9C                 [33] (-93)
1042  00                 [34] (-93)
1043  00                 [35] (-93)
1044  00                 [36] (-93)
1045  9C                 [37] (-93)
1046  00                 [38] (-93)
1047  00                 [39] (-92)
1048  00                 [40] (-92)
1049  9C                 [41] (-92)
104A  00                 [42] (-89)
104B  00                 [43] (-89)
104C  00                 [44] (-89)
104D  9C                 [45] (-89)
104E  00                 [46] (-88)
104F  00                 [47] (-88)
1050  00                 [48] (-88)
1051  9C                 [49] (-88)
1052  00                 [50] (-88)
1053  00                 [51] (-88)
1054  00                 [52] (-88)
1055  9C                 [53] (-88)
1056  00                 [54] (-85)
                         * locals:
10F9  00                 sizelocvars (0)
                         * upvalues:
10FA  00                 sizeupvalues (0)
                         ** end of function **

                         
10FB                     ** function [3] definition (level 2)
                         ** start of function **
10FB  00                 string size (0)
                         source name: (none)
10FD  01                 line defined (173)
10FE  B7                 last line defined (183)
10FF  01                 nups (0)
1100  00                 numparams (3)
1101  03                 is_vararg (0)
1102  00                 maxstacksize (12)
                         * code:
1104  35                 sizecode (53)
1105  E4004000           [01] self       3   0   256  ; -1538682285
1109  E2800001           [02] call       3   2   2  
110D  1D410000           [03] getglobal  4   1        ; gRegion
1111  24814002           [04] self       4   4   258  ; -1520831144
1115  22810001           [05] call       4   2   2  
1119  18010000           [06] test       4       0    ; to [8] if true
111D  1A000B80           [07] jmp        45           ; to [53]
1121  24C14001           [08] self       4   2   259  ; 1511086594
1125  22810001           [09] call       4   2   2  
1129  18010000           [10] test       4       0    ; to [12] if true
112D  1A000A80           [11] jmp        41           ; to [53]
1131  1D010100           [12] getglobal  4   4        ; 1074689893
1135  52018001           [13] move       5   3      
1139  22810001           [14] call       4   2   2  
113D  18410000           [15] test       4       1    ; to [17] if false
1141  1AC00880           [16] jmp        36           ; to [53]
1145  2441C101           [17] self       4   3   261  ; -214694299
1149  9D810100           [18] getglobal  6   6        ; Engine
114D  8EC14103           [19] gettable   6   6   263  ; "PM_HEAVY_MELEE"
1151  22818001           [20] call       4   3   2  
1155  18010000           [21] test       4       0    ; to [23] if true
1159  1A400780           [22] jmp        30           ; to [53]
115D  2401C201           [23] self       4   3   264  ; -1917464545
1161  22810001           [24] call       4   2   2  
1165  24414202           [25] self       4   4   265  ; -1168071197
1169  22810001           [26] call       4   2   2  
116D  5D010100           [27] getglobal  5   4        ; 1074689893
1171  92010002           [28] move       6   4      
1175  62810001           [29] call       5   2   2  
1179  58410000           [30] test       5       1    ; to [32] if false
117D  1A000580           [31] jmp        21           ; to [53]
1181  64C14002           [32] self       5   4   259  ; 1511086594
1185  62810001           [33] call       5   2   2  
1189  58410000           [34] test       5       1    ; to [36] if false
118D  1A000480           [35] jmp        17           ; to [53]
1191  6481C200           [36] self       5   1   266  ; 1538342809
1195  62810001           [37] call       5   2   2  
1199  A4C1C200           [38] self       6   1   267  ; 2053730717
119D  A2810001           [39] call       6   2   2  
11A1  43818102           [40] add        5   5   6  
11A5  9D010300           [41] getglobal  6   12       ; healPct
11A9  44818102           [42] mul        5   5   6  
11AD  A4414302           [43] self       6   4   269  ; 1992436207
11B1  1D820300           [44] getglobal  8   14       ; math
11B5  0EC24304           [45] gettable   8   8   271  ; 1710846250
11B9  64024402           [46] self       9   4   272  ; 945541886
11BD  62820001           [47] call       9   2   2  
11C1  A4424402           [48] self       10  4   273  ; 796523475
11C5  A2820001           [49] call       10  2   2  
11C9  83420105           [50] add        10  10  5  
11CD  22028001           [51] call       8   3   0  
11D1  A2410000           [52] call       6   0   1  
11D5  1E008000           [53] return     0   1      
                         * constants:
11D9  12                 sizek (18)
11DA  01                 const type 3
11DB  539249A4           const [0]: (-1538682285)
11DF  04                 const type 4
11E0  08                 string size (8)
11E1  67526567696F6E00   "gRegion\0"
                         const [1]: "gRegion"
11E9  01                 const type 3
11EA  58F559A5           const [2]: (-1520831144)
11EE  01                 const type 3
11EF  025A115A           const [3]: (1511086594)
11F3  01                 const type 3
11F4  65770E40           const [4]: (1074689893)
11F8  01                 const type 3
11F9  650634F3           const [5]: (-214694299)
11FD  04                 const type 4
11FE  07                 string size (7)
11FF  456E67696E6500     "Engine\0"
                         const [6]: "Engine"
1206  04                 const type 4
1207  0F                 string size (15)
1208  504D5F4845415659+  "PM_HEAVY"
1210  5F4D454C454500     "_MELEE\0"
                         const [7]: "PM_HEAVY_MELEE"
1217  01                 const type 3
1218  1FD0B58D           const [8]: (-1917464545)
121C  01                 const type 3
121D  E3A560BA           const [9]: (-1168071197)
1221  01                 const type 3
1222  993FB15B           const [10]: (1538342809)
1226  01                 const type 3
1227  9D71697A           const [11]: (2053730717)
122B  04                 const type 4
122C  08                 string size (8)
122D  6865616C50637400   "healPct\0"
                         const [12]: "healPct"
1235  01                 const type 3
1236  EF29C276           const [13]: (1992436207)
123A  04                 const type 4
123B  05                 string size (5)
123C  6D61746800         "math\0"
                         const [14]: "math"
1241  01                 const type 3
1242  2A71F965           const [15]: (1710846250)
1246  01                 const type 3
1247  FED25B38           const [16]: (945541886)
124B  01                 const type 3
124C  D3FB792F           const [17]: (796523475)
                         * functions:
1250  00                 sizep (0)
                         * lines:
1251  35                 sizelineinfo (53)
                         [pc] (line)
1252  AE                 [01] (-82)
1253  00                 [02] (-82)
1254  00                 [03] (-81)
1255  00                 [04] (-81)
1256  AE                 [05] (-81)
1257  00                 [06] (-81)
1258  00                 [07] (-81)
1259  00                 [08] (-81)
125A  AF                 [09] (-81)
125B  00                 [10] (-81)
125C  00                 [11] (-81)
125D  00                 [12] (-81)
125E  AF                 [13] (-81)
125F  00                 [14] (-81)
1260  00                 [15] (-81)
1261  00                 [16] (-81)
1262  AF                 [17] (-81)
1263  00                 [18] (-81)
1264  00                 [19] (-81)
1265  00                 [20] (-81)
1266  AF                 [21] (-81)
1267  00                 [22] (-81)
1268  00                 [23] (-80)
1269  00                 [24] (-80)
126A  AF                 [25] (-80)
126B  00                 [26] (-80)
126C  00                 [27] (-78)
126D  00                 [28] (-78)
126E  AF                 [29] (-78)
126F  00                 [30] (-78)
1270  00                 [31] (-78)
1271  00                 [32] (-78)
1272  AF                 [33] (-78)
1273  00                 [34] (-78)
1274  00                 [35] (-78)
1275  00                 [36] (-77)
1276  AF                 [37] (-77)
1277  00                 [38] (-77)
1278  00                 [39] (-77)
1279  00                 [40] (-77)
127A  AF                 [41] (-77)
127B  00                 [42] (-77)
127C  00                 [43] (-76)
127D  00                 [44] (-76)
127E  AF                 [45] (-76)
127F  00                 [46] (-76)
1280  00                 [47] (-76)
1281  00                 [48] (-76)
1282  AF                 [49] (-76)
1283  00                 [50] (-76)
1284  00                 [51] (-76)
1285  00                 [52] (-76)
1286  AF                 [53] (-73)
                         * locals:
1326  00                 sizelocvars (0)
                         * upvalues:
1327  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
1328  18                 sizelineinfo (24)
                         [pc] (line)
1329  06                 [01] (6)
132A  00                 [02] (25)
132B  00                 [03] (25)
132C  00                 [04] (25)
132D  19                 [05] (26)
132E  00                 [06] (26)
132F  00                 [07] (26)
1330  00                 [08] (-121)
1331  19                 [09] (-121)
1332  00                 [10] (-121)
1333  00                 [11] (-121)
1334  00                 [12] (-121)
1335  19                 [13] (28)
1336  00                 [14] (-106)
1337  00                 [15] (-106)
1338  00                 [16] (-106)
1339  1A                 [17] (-119)
133A  00                 [18] (-85)
133B  00                 [19] (-85)
133C  00                 [20] (-104)
133D  1A                 [21] (-73)
133E  00                 [22] (-73)
133F  00                 [23] (-83)
1340  00                 [24] (-73)
                         * locals:
1389  00                 sizelocvars (0)
                         * upvalues:
138A  00                 sizeupvalues (0)
                         ** end of function **

138B                     ** end of chunk **
