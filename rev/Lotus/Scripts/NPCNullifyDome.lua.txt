1	C:\wlua_dump\path\Lotus\Scripts\NPCNullifyDome.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Scripts\NPCNullifyDome.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  07                 size of number (bytes)
0008  2B                 integral (1=integral)
443
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
EFFECT_ANY
OpenDrone
CloseDrone
NullifyDome
NULLIFIER_DM
NULLIFIER_AB
OnEnter
OnExit
StickyNullifyDomeDecoInit
DomeDamaged
gLotusNpcAvatarType
gLotusCloneAvatarType
disableAbilities
capAnimActivation
capAnimOpenLoop
capAnimDeactivation
capAnimClosedLoop
domeMinScale
capOffsetByMeshScale
bubbleCapActivatedOffset
gLotusNpcAvatarType
collisionType
gRegion
gLotusAvatarType
gRagdollType
Engine
MAIN_HAND
gLotusWeaponType
bubbleCapType
bubbleCapDamageProxyType
bubbleCapBeamType
bubbleCapDeactivatedBone
bubbleCapBeamStartingOffset
ZERO_ROTATION
GAME_C1_ROOT
capAnimClosedLoop
backpackType
backpackGlowType
DT_HEALTH_DRAIN
gGameRules
gLotusBaseGameRulesType
capAttenuateHealthWithNpcScaling
minEnemyLevel
NPC_HEALTH
difficulty
sizeOnSpawn
growthDelayOnSpawn
disableAbilities
_T
nullifierAbilities
scriptTriggerType
EMPTY_SYMBOL
ZERO_VECTOR
destroyAtMinSize
domeMinScale
destroyAtMaxSizeTime
gBaseAvatarType
gAvatarType
math
needsAgentBasedCheck
damageWindow
damageMin
damageMax
scaleDecrement
capHeightAdjustsToCeiling
bubbleCapActivatedBone
capOffsetByMeshScale
ceilingRaycastExtraOffset
ceilingRaycastIgnoreTypes
y
growLerpRate
scaleDelay
shrinkLerpRate
destroyFx
venusDroneBubble
bubbleCapStartingOffset
bubbleCapStartingRotation
CloseDrone
createFx
attachedSoundType
OpenDrone
destroyAtMaxSize
baseAmount
gHitProxyPhysicsType
Engine
Ragdoll_TORSO
appliesDamageBarrier
_T
grantedImmunities
nullifierAbilities
disableAbilities
notCreated
collisionType
needsAgentBasedCheck
gLotusNpcAvatarType
Lotus_Game
AR_IMMUNE_ALL
DT_ANY
ANY_PART
DHT_NONE
FROZEN_NONE
gRegion
nullifierDamage
baseAmount
DT_HEALTH_DRAIN
table
gHitProxyPhysicsType
Engine
Ragdoll_TORSO
appliesDamageBarrier
_T
grantedImmunities
nullifierAbilities
notCreated
needsAgentBasedCheck
gLotusNpcAvatarType
Lotus_Game
AR_IMMUNE_ALL
gRegion
nullifierDamage
table
gBaseAvatarType
gRegion
Engine
FBA_ROLL
gRegion
gBaseAvatarType
gWeaponExType
Game
WEAPON_NULLIFIER_BUBBLE_POP_CHANCE
math
bubbleCapDamageProxyType
Engine
DT_HEALTH_DRAIN
baseAmount
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  07                 maxstacksize (7)
                         * code:
0008  2B                 sizecode (43)
0009  1D000000           [01] getglobal  0   0        ; -332969190
000D  59400000           [02] loadk      1   1        ; "EFFECT_ANY"
0011  22800001           [03] call       0   2   2  
0015  65000000           [04] closure    1   0      
0019  A5400000           [05] closure    2   1      
001D  12000000           [06] move       0   0      
0021  E5800000           [07] closure    3   2      
0025  E0800000           [08] setglobal  3   2        ; OpenDrone
0029  E0C00000           [09] setglobal  3   3        ; 75139513
002D  E5C00000           [10] closure    3   3      
0031  E0000100           [11] setglobal  3   4        ; CloseDrone
0035  E0400100           [12] setglobal  3   5        ; 1353597106
0039  E5000100           [13] closure    3   4      
003D  25410100           [14] closure    4   5      
0041  12008000           [15] move       0   1      
0045  12008001           [16] move       0   3      
0049  20810100           [17] setglobal  4   6        ; NullifyDome
004D  20C10100           [18] setglobal  4   7        ; 341557962
0051  1D010000           [19] getglobal  4   0        ; -332969190
0055  59010200           [20] loadk      5   8        ; "NULLIFIER_DM"
0059  22810001           [21] call       4   2   2  
005D  5D010000           [22] getglobal  5   0        ; -332969190
0061  99410200           [23] loadk      6   9        ; "NULLIFIER_AB"
0065  62810001           [24] call       5   2   2  
0069  A5810100           [25] closure    6   6      
006D  12008002           [26] move       0   5      
0071  12000002           [27] move       0   4      
0075  12000001           [28] move       0   2      
0079  A0810200           [29] setglobal  6   10       ; OnEnter
007D  A0C10200           [30] setglobal  6   11       ; 1496254994
0081  A5C10100           [31] closure    6   7      
0085  12008002           [32] move       0   5      
0089  12000002           [33] move       0   4      
008D  12000001           [34] move       0   2      
0091  A0010300           [35] setglobal  6   12       ; OnExit
0095  A0410300           [36] setglobal  6   13       ; 1026197863
0099  A5010200           [37] closure    6   8      
009D  A0810300           [38] setglobal  6   14       ; StickyNullifyDomeDecoInit
00A1  A0C10300           [39] setglobal  6   15       ; 2121902725
00A5  A5410200           [40] closure    6   9      
00A9  A0010400           [41] setglobal  6   16       ; DomeDamaged
00AD  A0410400           [42] setglobal  6   17       ; -788631291
00B1  1E008000           [43] return     0   1      
                         * constants:
00B5  12                 sizek (18)
00B6  01                 const type 3
00B7  1A4B27EC           const [0]: (-332969190)
00BB  04                 const type 4
00BC  0B                 string size (11)
00BD  4546464543545F41+  "EFFECT_A"
00C5  4E5900             "NY\0"
                         const [1]: "EFFECT_ANY"
00C8  04                 const type 4
00C9  0A                 string size (10)
00CA  4F70656E44726F6E+  "OpenDron"
00D2  6500               "e\0"
                         const [2]: "OpenDrone"
00D4  01                 const type 3
00D5  B9897A04           const [3]: (75139513)
00D9  04                 const type 4
00DA  0B                 string size (11)
00DB  436C6F736544726F+  "CloseDro"
00E3  6E6500             "ne\0"
                         const [4]: "CloseDrone"
00E6  01                 const type 3
00E7  B240AE50           const [5]: (1353597106)
00EB  04                 const type 4
00EC  0C                 string size (12)
00ED  4E756C6C69667944+  "NullifyD"
00F5  6F6D6500           "ome\0"
                         const [6]: "NullifyDome"
00F9  01                 const type 3
00FA  CAC25B14           const [7]: (341557962)
00FE  04                 const type 4
00FF  0D                 string size (13)
0100  4E554C4C49464945+  "NULLIFIE"
0108  525F444D00         "R_DM\0"
                         const [8]: "NULLIFIER_DM"
010D  04                 const type 4
010E  0D                 string size (13)
010F  4E554C4C49464945+  "NULLIFIE"
0117  525F414200         "R_AB\0"
                         const [9]: "NULLIFIER_AB"
011C  04                 const type 4
011D  08                 string size (8)
011E  4F6E456E74657200   "OnEnter\0"
                         const [10]: "OnEnter"
0126  01                 const type 3
0127  120A2F59           const [11]: (1496254994)
012B  04                 const type 4
012C  07                 string size (7)
012D  4F6E4578697400     "OnExit\0"
                         const [12]: "OnExit"
0134  01                 const type 3
0135  67892A3D           const [13]: (1026197863)
0139  04                 const type 4
013A  1A                 string size (26)
013B  537469636B794E75+  "StickyNu"
0143  6C6C696679446F6D+  "llifyDom"
014B  654465636F496E69+  "eDecoIni"
0153  7400               "t\0"
                         const [14]: "StickyNullifyDomeDecoInit"
0155  01                 const type 3
0156  85AA797E           const [15]: (2121902725)
015A  04                 const type 4
015B  0C                 string size (12)
015C  446F6D6544616D61+  "DomeDama"
0164  67656400           "ged\0"
                         const [16]: "DomeDamaged"
0168  01                 const type 3
0169  0571FED0           const [17]: (-788631291)
                         * functions:
016D  0A                 sizep (10)
                         
016E                     ** function [0] definition (level 2)
                         ** start of function **
016E  00                 string size (0)
                         source name: (none)
016F  33                 line defined (51)
0170  39                 last line defined (57)
0171  00                 nups (0)
0172  01                 numparams (1)
0173  00                 is_vararg (0)
0174  03                 maxstacksize (3)
                         * code:
0175  0D                 sizecode (13)
0176  5D000000           [01] getglobal  1   0        ; 1074689893
017A  92000000           [02] move       2   0      
017E  62800001           [03] call       1   2   2  
0182  58400000           [04] test       1       1    ; to [6] if false
0186  1AC00080           [05] jmp        4            ; to [10]
018A  64404000           [06] self       1   0   257  ; 796523475
018E  62800001           [07] call       1   2   2  
fail op	33
0192  2180C000           [08] tforloop   0       258  ; to [10] if exit
0196  1A400080           [09] jmp        2            ; to [12]
019A  46008000           [10] loadnil    1   1      
019E  5E000001           [11] return     1   2      
01A2  1E000001           [12] return     0   2      
01A6  1E008000           [13] return     0   1      
                         * constants:
01AA  03                 sizek (3)
01AB  01                 const type 3
01AC  65770E40           const [0]: (1074689893)
01B0  01                 const type 3
01B1  D3FB792F           const [1]: (796523475)
01B5  03                 const type 3
01B6  00000000           const [2]: (0)
                         * functions:
01BA  00                 sizep (0)
                         * lines:
01BB  0D                 sizelineinfo (13)
                         [pc] (line)
01BC  34                 [01] (52)
01BD  00                 [02] (52)
01BE  00                 [03] (52)
01BF  00                 [04] (52)
01C0  34                 [05] (52)
01C1  00                 [06] (52)
01C2  00                 [07] (52)
01C3  00                 [08] (52)
01C4  34                 [09] (52)
01C5  00                 [10] (53)
01C6  00                 [11] (53)
01C7  00                 [12] (56)
01C8  34                 [13] (57)
                         * locals:
01F0  00                 sizelocvars (0)
                         * upvalues:
01F1  00                 sizeupvalues (0)
                         ** end of function **

                         
01F2                     ** function [1] definition (level 2)
                         ** start of function **
01F2  00                 string size (0)
                         source name: (none)
01F3  3B                 line defined (59)
01F4  51                 last line defined (81)
01F5  01                 nups (1)
01F6  01                 numparams (1)
01F7  00                 is_vararg (0)
01F8  0E                 maxstacksize (14)
                         * code:
01F9  34                 sizecode (52)
01FA  A4004000           [01] self       2   0   256  ; -1957065004
01FE  1D410000           [02] getglobal  4   1        ; gLotusNpcAvatarType
0202  A2808001           [03] call       2   3   2  
0206  98000000           [04] test       2       0    ; to [6] if true
020A  1AC00080           [05] jmp        4            ; to [10]
020E  A4804000           [06] self       2   0   258  ; -2020409081
0212  A2800001           [07] call       2   2   2  
0216  52000001           [08] move       1   2      
021A  1AC00180           [09] jmp        8            ; to [18]
021E  A4004000           [10] self       2   0   256  ; -1957065004
0222  1DC10000           [11] getglobal  4   3        ; gLotusCloneAvatarType
0226  A2808001           [12] call       2   3   2  
022A  98000000           [13] test       2       0    ; to [15] if true
022E  1A800080           [14] jmp        3            ; to [18]
0232  A4004100           [15] self       2   0   260  ; -2041806544
0236  A2800001           [16] call       2   2   2  
023A  52000001           [17] move       1   2      
023E  9D400100           [18] getglobal  2   5        ; 1074689893
0242  D2008000           [19] move       3   1      
0246  A2800001           [20] call       2   2   2  
024A  98400000           [21] test       2       1    ; to [23] if false
024E  1A800680           [22] jmp        27           ; to [50]
0252  9D800100           [23] getglobal  2   6        ; disableAbilities
0256  8A000001           [24] len        2   2      
fail op	35
025A  23C04101           [25] close      0  
025E  1A400080           [26] jmp        2            ; to [29]
0262  97008000           [27] loadbool   2   1   0    ; true
0266  9E000001           [28] return     2   2      
026A  A400C200           [29] self       2   1   264  ; 1126846059
026E  A2800001           [30] call       2   2   2  
0272  DD400200           [31] getglobal  3   9        ; 1672515847
0276  12010001           [32] move       4   2      
027A  E2000101           [33] call       3   2   4  
027E  1A000380           [34] jmp        13           ; to [48]
0282  1D420200           [35] getglobal  8   9        ; 1672515847
0286  5D820100           [36] getglobal  9   6        ; disableAbilities
028A  22020101           [37] call       8   2   4  
028E  1A800180           [38] jmp        7            ; to [46]
fail op	35
0292  63008303           [39] close      1  
0296  1A800080           [40] jmp        3            ; to [44]
029A  53030000           [41] getupval   13  0      
fail op	35
029E  23400306           [42] close      0  
02A2  1A400080           [43] jmp        2            ; to [46]
02A6  57038000           [44] loadbool   13  1   0    ; true
02AA  5E030001           [45] return     13  2      
02AE  16820000           [46] tforloop   8       2    ; to [48] if exit
02B2  1A80FD7F           [47] jmp        -9           ; to [39]
02B6  D6800000           [48] tforloop   3       2    ; to [50] if exit
02BA  1A00FC7F           [49] jmp        -15          ; to [35]
02BE  57030000           [50] loadbool   13  0   0    ; false
02C2  5E030001           [51] return     13  2      
02C6  1E008000           [52] return     0   1      
                         * constants:
02CA  0A                 sizek (10)
02CB  01                 const type 3
02CC  D48E598B           const [0]: (-1957065004)
02D0  04                 const type 4
02D1  14                 string size (20)
02D2  674C6F7475734E70+  "gLotusNp"
02DA  6341766174617254+  "cAvatarT"
02E2  79706500           "ype\0"
                         const [1]: "gLotusNpcAvatarType"
02E6  01                 const type 3
02E7  07019387           const [2]: (-2020409081)
02EB  04                 const type 4
02EC  16                 string size (22)
02ED  674C6F747573436C+  "gLotusCl"
02F5  6F6E654176617461+  "oneAvata"
02FD  725479706500       "rType\0"
                         const [3]: "gLotusCloneAvatarType"
0303  01                 const type 3
0304  30814C86           const [4]: (-2041806544)
0308  01                 const type 3
0309  65770E40           const [5]: (1074689893)
030D  04                 const type 4
030E  11                 string size (17)
030F  64697361626C6541+  "disableA"
0317  62696C6974696573+  "bilities"
031F  00                 "\0"
                         const [6]: "disableAbilities"
0320  03                 const type 3
0321  00000000           const [7]: (0)
0325  01                 const type 3
0326  6B4E2A43           const [8]: (1126846059)
032A  01                 const type 3
032B  0791B063           const [9]: (1672515847)
                         * functions:
032F  00                 sizep (0)
                         * lines:
0330  34                 sizelineinfo (52)
                         [pc] (line)
0331  3D                 [01] (61)
0332  00                 [02] (61)
0333  00                 [03] (61)
0334  00                 [04] (61)
0335  3D                 [05] (61)
0336  00                 [06] (62)
0337  00                 [07] (62)
0338  00                 [08] (62)
0339  3D                 [09] (62)
033A  00                 [10] (63)
033B  00                 [11] (63)
033C  00                 [12] (63)
033D  3D                 [13] (63)
033E  00                 [14] (63)
033F  00                 [15] (64)
0340  00                 [16] (64)
0341  3D                 [17] (64)
0342  00                 [18] (66)
0343  00                 [19] (66)
0344  00                 [20] (66)
0345  3E                 [21] (66)
0346  00                 [22] (66)
0347  00                 [23] (67)
0348  00                 [24] (67)
0349  3E                 [25] (67)
034A  00                 [26] (67)
034B  00                 [27] (68)
034C  00                 [28] (68)
034D  3E                 [29] (70)
034E  00                 [30] (70)
034F  00                 [31] (71)
0350  00                 [32] (71)
0351  3E                 [33] (71)
0352  00                 [34] (71)
0353  00                 [35] (72)
0354  00                 [36] (72)
0355  3F                 [37] (72)
0356  00                 [38] (72)
0357  00                 [39] (73)
0358  00                 [40] (73)
0359  3F                 [41] (73)
035A  00                 [42] (73)
035B  00                 [43] (73)
035C  00                 [44] (74)
035D  3F                 [45] (74)
035E  00                 [46] (72)
035F  00                 [47] (75)
0360  00                 [48] (71)
0361  3F                 [49] (76)
0362  00                 [50] (80)
0363  00                 [51] (80)
0364  00                 [52] (81)
                         * locals:
0401  00                 sizelocvars (0)
                         * upvalues:
0402  00                 sizeupvalues (0)
                         ** end of function **

                         
0403                     ** function [2] definition (level 2)
                         ** start of function **
0403  00                 string size (0)
                         source name: (none)
0404  53                 line defined (83)
0405  60                 last line defined (96)
0406  00                 nups (0)
0407  01                 numparams (1)
0408  00                 is_vararg (0)
0409  06                 maxstacksize (6)
                         * code:
040A  21                 sizecode (33)
040B  5D000000           [01] getglobal  1   0        ; 1074689893
040F  92000000           [02] move       2   0      
0413  62800001           [03] call       1   2   2  
0417  58000000           [04] test       1       0    ; to [6] if true
041B  1A000080           [05] jmp        1            ; to [7]
041F  1E008000           [06] return     0   1      
0423  5D000000           [07] getglobal  1   0        ; 1074689893
0427  9D400000           [08] getglobal  2   1        ; capAnimActivation
042B  62800001           [09] call       1   2   2  
042F  58400000           [10] test       1       1    ; to [12] if false
0433  1A000180           [11] jmp        5            ; to [17]
0437  64804000           [12] self       1   0   258  ; 2056776437
043B  DD400000           [13] getglobal  3   1        ; capAnimActivation
043F  17018000           [14] loadbool   4   1   0    ; true
0443  57018000           [15] loadbool   5   1   0    ; true
0447  62408002           [16] call       1   5   1  
044B  5D000000           [17] getglobal  1   0        ; 1074689893
044F  92000000           [18] move       2   0      
0453  62800001           [19] call       1   2   2  
0457  58000000           [20] test       1       0    ; to [22] if true
045B  1A000080           [21] jmp        1            ; to [23]
045F  1E008000           [22] return     0   1      
0463  5D000000           [23] getglobal  1   0        ; 1074689893
0467  9DC00000           [24] getglobal  2   3        ; capAnimOpenLoop
046B  62800001           [25] call       1   2   2  
046F  58400000           [26] test       1       1    ; to [28] if false
0473  1A000180           [27] jmp        5            ; to [33]
0477  64804000           [28] self       1   0   258  ; 2056776437
047B  DDC00000           [29] getglobal  3   3        ; capAnimOpenLoop
047F  17010000           [30] loadbool   4   0   0    ; false
0483  57018000           [31] loadbool   5   1   0    ; true
0487  62408002           [32] call       1   5   1  
048B  1E008000           [33] return     0   1      
                         * constants:
048F  04                 sizek (4)
0490  01                 const type 3
0491  65770E40           const [0]: (1074689893)
0495  04                 const type 4
0496  12                 string size (18)
0497  636170416E696D41+  "capAnimA"
049F  637469766174696F+  "ctivatio"
04A7  6E00               "n\0"
                         const [1]: "capAnimActivation"
04A9  01                 const type 3
04AA  F5EA977A           const [2]: (2056776437)
04AE  04                 const type 4
04AF  10                 string size (16)
04B0  636170416E696D4F+  "capAnimO"
04B8  70656E4C6F6F7000   "penLoop\0"
                         const [3]: "capAnimOpenLoop"
                         * functions:
04C0  00                 sizep (0)
                         * lines:
04C1  21                 sizelineinfo (33)
                         [pc] (line)
04C2  54                 [01] (84)
04C3  00                 [02] (84)
04C4  00                 [03] (84)
04C5  00                 [04] (84)
04C6  54                 [05] (84)
04C7  00                 [06] (85)
04C8  00                 [07] (87)
04C9  00                 [08] (87)
04CA  54                 [09] (87)
04CB  00                 [10] (87)
04CC  00                 [11] (87)
04CD  00                 [12] (88)
04CE  54                 [13] (88)
04CF  00                 [14] (88)
04D0  00                 [15] (88)
04D1  00                 [16] (88)
04D2  54                 [17] (90)
04D3  00                 [18] (90)
04D4  00                 [19] (90)
04D5  00                 [20] (90)
04D6  55                 [21] (90)
04D7  00                 [22] (91)
04D8  00                 [23] (93)
04D9  00                 [24] (93)
04DA  57                 [25] (93)
04DB  00                 [26] (93)
04DC  00                 [27] (93)
04DD  00                 [28] (94)
04DE  57                 [29] (94)
04DF  00                 [30] (94)
04E0  00                 [31] (94)
04E1  00                 [32] (94)
04E2  57                 [33] (96)
                         * locals:
0546  00                 sizelocvars (0)
                         * upvalues:
0547  00                 sizeupvalues (0)
                         ** end of function **

                         
0548                     ** function [3] definition (level 2)
                         ** start of function **
0548  00                 string size (0)
                         source name: (none)
0549  62                 line defined (98)
054A  6F                 last line defined (111)
054B  00                 nups (0)
054C  01                 numparams (1)
054D  00                 is_vararg (0)
054E  06                 maxstacksize (6)
                         * code:
054F  21                 sizecode (33)
0550  5D000000           [01] getglobal  1   0        ; 1074689893
0554  92000000           [02] move       2   0      
0558  62800001           [03] call       1   2   2  
055C  58000000           [04] test       1       0    ; to [6] if true
0560  1A000080           [05] jmp        1            ; to [7]
0564  1E008000           [06] return     0   1      
0568  5D000000           [07] getglobal  1   0        ; 1074689893
056C  9D400000           [08] getglobal  2   1        ; capAnimDeactivation
0570  62800001           [09] call       1   2   2  
0574  58400000           [10] test       1       1    ; to [12] if false
0578  1A000180           [11] jmp        5            ; to [17]
057C  64804000           [12] self       1   0   258  ; 2056776437
0580  DD400000           [13] getglobal  3   1        ; capAnimDeactivation
0584  17018000           [14] loadbool   4   1   0    ; true
0588  57018000           [15] loadbool   5   1   0    ; true
058C  62408002           [16] call       1   5   1  
0590  5D000000           [17] getglobal  1   0        ; 1074689893
0594  92000000           [18] move       2   0      
0598  62800001           [19] call       1   2   2  
059C  58000000           [20] test       1       0    ; to [22] if true
05A0  1A000080           [21] jmp        1            ; to [23]
05A4  1E008000           [22] return     0   1      
05A8  5D000000           [23] getglobal  1   0        ; 1074689893
05AC  9DC00000           [24] getglobal  2   3        ; capAnimClosedLoop
05B0  62800001           [25] call       1   2   2  
05B4  58400000           [26] test       1       1    ; to [28] if false
05B8  1A000180           [27] jmp        5            ; to [33]
05BC  64804000           [28] self       1   0   258  ; 2056776437
05C0  DDC00000           [29] getglobal  3   3        ; capAnimClosedLoop
05C4  17010000           [30] loadbool   4   0   0    ; false
05C8  57018000           [31] loadbool   5   1   0    ; true
05CC  62408002           [32] call       1   5   1  
05D0  1E008000           [33] return     0   1      
                         * constants:
05D4  04                 sizek (4)
05D5  01                 const type 3
05D6  65770E40           const [0]: (1074689893)
05DA  04                 const type 4
05DB  14                 string size (20)
05DC  636170416E696D44+  "capAnimD"
05E4  6561637469766174+  "eactivat"
05EC  696F6E00           "ion\0"
                         const [1]: "capAnimDeactivation"
05F0  01                 const type 3
05F1  F5EA977A           const [2]: (2056776437)
05F5  04                 const type 4
05F6  12                 string size (18)
05F7  636170416E696D43+  "capAnimC"
05FF  6C6F7365644C6F6F+  "losedLoo"
0607  7000               "p\0"
                         const [3]: "capAnimClosedLoop"
                         * functions:
0609  00                 sizep (0)
                         * lines:
060A  21                 sizelineinfo (33)
                         [pc] (line)
060B  63                 [01] (99)
060C  00                 [02] (99)
060D  00                 [03] (99)
060E  00                 [04] (99)
060F  63                 [05] (99)
0610  00                 [06] (100)
0611  00                 [07] (102)
0612  00                 [08] (102)
0613  63                 [09] (102)
0614  00                 [10] (102)
0615  00                 [11] (102)
0616  00                 [12] (103)
0617  63                 [13] (103)
0618  00                 [14] (103)
0619  00                 [15] (103)
061A  00                 [16] (103)
061B  63                 [17] (105)
061C  00                 [18] (105)
061D  00                 [19] (105)
061E  00                 [20] (105)
061F  64                 [21] (105)
0620  00                 [22] (106)
0621  00                 [23] (108)
0622  00                 [24] (108)
0623  66                 [25] (108)
0624  00                 [26] (108)
0625  00                 [27] (108)
0626  00                 [28] (109)
0627  66                 [29] (109)
0628  00                 [30] (109)
0629  00                 [31] (109)
062A  00                 [32] (109)
062B  66                 [33] (111)
                         * locals:
068F  00                 sizelocvars (0)
                         * upvalues:
0690  00                 sizeupvalues (0)
                         ** end of function **

                         
0691                     ** function [4] definition (level 2)
                         ** start of function **
0691  00                 string size (0)
                         source name: (none)
0692  71                 line defined (113)
0693  82                 last line defined (130)
0694  01                 nups (0)
0695  00                 numparams (4)
0696  04                 is_vararg (0)
0697  00                 maxstacksize (11)
                         * code:
0699  1B                 sizecode (27)
069A  1D010000           [01] getglobal  4   0        ; domeMinScale
fail op	33
069E  21000101           [02] tforloop   0       4    ; to [4] if exit
06A2  1A000080           [03] jmp        1            ; to [5]
06A6  D2000001           [04] move       3   2      
06AA  24414000           [05] self       4   0   257  ; 1786666898
06AE  92018001           [06] move       6   3      
06B2  22418001           [07] call       4   3   1  
06B6  1D810000           [08] getglobal  4   2        ; 1074689893
06BA  52018000           [09] move       5   1      
06BE  22810001           [10] call       4   2   2  
06C2  18410000           [11] test       4       1    ; to [13] if false
06C6  1A400380           [12] jmp        14           ; to [27]
06CA  12018001           [13] move       4   3      
06CE  5D010000           [14] getglobal  5   0        ; domeMinScale
fail op	21
06D2  15808002           [15] concat     0   5   2  
06D6  1A400280           [16] jmp        10           ; to [27]
06DA  5DC10000           [17] getglobal  5   3        ; capOffsetByMeshScale
06DE  44018102           [18] mul        5   5   4  
06E2  9D010100           [19] getglobal  6   4        ; bubbleCapActivatedOffset
06E6  43818102           [20] add        5   5   6  
06EA  9D410100           [21] getglobal  6   5        ; 508519041
06EE  A2818000           [22] call       6   1   2  
06F2  E481C100           [23] self       7   1   262  ; -1484030041
06F6  52028002           [24] move       9   5      
06FA  92020003           [25] move       10  6      
06FE  E2410002           [26] call       7   4   1  
0702  1E008000           [27] return     0   1      
                         * constants:
0706  07                 sizek (7)
0707  04                 const type 4
0708  0D                 string size (13)
0709  646F6D654D696E53+  "domeMinS"
0711  63616C6500         "cale\0"
                         const [0]: "domeMinScale"
0716  01                 const type 3
0717  925F7E6A           const [1]: (1786666898)
071B  01                 const type 3
071C  65770E40           const [2]: (1074689893)
0720  04                 const type 4
0721  15                 string size (21)
0722  6361704F66667365+  "capOffse"
072A  7442794D65736853+  "tByMeshS"
0732  63616C6500         "cale\0"
                         const [3]: "capOffsetByMeshScale"
0737  04                 const type 4
0738  19                 string size (25)
0739  627562626C654361+  "bubbleCa"
0741  7041637469766174+  "pActivat"
0749  65644F6666736574+  "edOffset"
0751  00                 "\0"
                         const [4]: "bubbleCapActivatedOffset"
0752  01                 const type 3
0753  81624F1E           const [5]: (508519041)
0757  01                 const type 3
0758  A77F8BA7           const [6]: (-1484030041)
                         * functions:
075C  00                 sizep (0)
                         * lines:
075D  1B                 sizelineinfo (27)
                         [pc] (line)
075E  73                 [01] (115)
075F  00                 [02] (115)
0760  00                 [03] (115)
0761  00                 [04] (117)
0762  73                 [05] (120)
0763  00                 [06] (120)
0764  00                 [07] (120)
0765  00                 [08] (122)
0766  73                 [09] (122)
0767  00                 [10] (122)
0768  00                 [11] (122)
0769  00                 [12] (122)
076A  75                 [13] (123)
076B  00                 [14] (124)
076C  00                 [15] (124)
076D  00                 [16] (124)
076E  78                 [17] (125)
076F  00                 [18] (125)
0770  00                 [19] (125)
0771  00                 [20] (125)
0772  78                 [21] (126)
0773  00                 [22] (126)
0774  00                 [23] (127)
0775  00                 [24] (127)
0776  78                 [25] (127)
0777  00                 [26] (127)
0778  00                 [27] (-126)
                         * locals:
07CA  00                 sizelocvars (0)
                         * upvalues:
07CB  00                 sizeupvalues (0)
                         ** end of function **

                         
07CC                     ** function [5] definition (level 2)
                         ** start of function **
07CC  00                 string size (0)
                         source name: (none)
07CE  01                 line defined (132)
07CF  8C                 last line defined (652)
07D0  05                 nups (2)
07D1  02                 numparams (1)
07D2  01                 is_vararg (0)
07D3  00                 maxstacksize (61)
                         * code:
07D6  09                 sizecode (1236)
07D7  64004000           [0001] self       1   0   256  ; -703571861
07DB  D9400000           [0002] loadk      3   1        ; 0
07DF  62408001           [0003] call       1   3   1  
07E3  52000000           [0004] move       1   0      
07E7  9D800000           [0005] getglobal  2   2        ; 1074689893
07EB  D2000000           [0006] move       3   0      
07EF  A2800001           [0007] call       2   2   2  
07F3  98400000           [0008] test       2       1    ; to [10] if false
07F7  1A800980           [0009] jmp        39           ; to [49]
07FB  9D800000           [0010] getglobal  2   2        ; 1074689893
07FF  D2008000           [0011] move       3   1      
0803  A2800001           [0012] call       2   2   2  
0807  98400000           [0013] test       2       1    ; to [15] if false
080B  1A400080           [0014] jmp        2            ; to [17]
fail op	35
080F  23008000           [0015] close      0  
0813  1AC00780           [0016] jmp        32           ; to [49]
0817  9DC00000           [0017] getglobal  2   3        ; 538022378
081B  D9000100           [0018] loadk      3   4        ; 0
081F  A2400001           [0019] call       2   2   1  
0823  9D800000           [0020] getglobal  2   2        ; 1074689893
0827  D2000000           [0021] move       3   0      
082B  A2800001           [0022] call       2   2   2  
082F  98400000           [0023] test       2       1    ; to [25] if false
0833  1AC0FA7F           [0024] jmp        -20          ; to [5]
0837  A4404100           [0025] self       2   0   261  ; -1870903749
083B  A2800001           [0026] call       2   2   2  
083F  52000001           [0027] move       1   2      
0843  9D800000           [0028] getglobal  2   2        ; 1074689893
0847  D2008000           [0029] move       3   1      
084B  A2800001           [0030] call       2   2   2  
084F  98400000           [0031] test       2       1    ; to [33] if false
0853  1AC0F87F           [0032] jmp        -28          ; to [5]
0857  A480C100           [0033] self       2   1   262  ; -1957065004
085B  1DC10100           [0034] getglobal  4   7        ; gLotusNpcAvatarType
085F  A2808001           [0035] call       2   3   2  
0863  98400000           [0036] test       2       1    ; to [38] if false
0867  1A80F77F           [0037] jmp        -33          ; to [5]
086B  9D800000           [0038] getglobal  2   2        ; 1074689893
086F  E440C100           [0039] self       3   1   261  ; -1870903749
0873  E2000001           [0040] call       3   2   0  
0877  A2800000           [0041] call       2   0   2  
087B  98400000           [0042] test       2       1    ; to [44] if false
087F  1A00F67F           [0043] jmp        -39          ; to [5]
0883  A440C100           [0044] self       2   1   261  ; -1870903749
0887  A2800001           [0045] call       2   2   2  
088B  52000001           [0046] move       1   2      
088F  1AC0FA7F           [0047] jmp        -20          ; to [28]
0893  1AC0F47F           [0048] jmp        -44          ; to [5]
0897  93000000           [0049] getupval   2   0      
089B  E400C200           [0050] self       3   1   264  ; -1625438872
089F  5D410200           [0051] getglobal  5   9        ; collisionType
08A3  E2008001           [0052] call       3   3   0  
08A7  A2800000           [0053] call       2   0   2  
08AB  DD800000           [0054] getglobal  3   2        ; 1074689893
08AF  12010001           [0055] move       4   2      
08B3  E2800001           [0056] call       3   2   2  
08B7  D8000000           [0057] test       3       0    ; to [59] if true
08BB  1AC00180           [0058] jmp        8            ; to [67]
08BF  DD800200           [0059] getglobal  3   10       ; gRegion
08C3  E4C0C201           [0060] self       3   3   267  ; -1520831144
08C7  E2800001           [0061] call       3   2   2  
08CB  D8000000           [0062] test       3       0    ; to [64] if true
08CF  1A400080           [0063] jmp        2            ; to [66]
08D3  E4004300           [0064] self       3   0   268  ; -725453761
08D7  E2400001           [0065] call       3   2   1  
08DB  1E008000           [0066] return     0   1      
fail op	35
08DF  23008000           [0067] close      0  
08E3  1A400280           [0068] jmp        10           ; to [79]
08E7  DD800200           [0069] getglobal  3   10       ; gRegion
08EB  E4C0C201           [0070] self       3   3   267  ; -1520831144
08EF  E2800001           [0071] call       3   2   2  
08F3  D8000000           [0072] test       3       0    ; to [74] if true
08F7  1AC00080           [0073] jmp        4            ; to [78]
08FB  E4004300           [0074] self       3   0   268  ; -725453761
08FF  E2400001           [0075] call       3   2   1  
0903  E4004301           [0076] self       3   2   268  ; -725453761
0907  E2400001           [0077] call       3   2   1  
090B  1E008000           [0078] return     0   1      
090F  C6008003           [0079] loadnil    3   7      
0913  2482C100           [0080] self       8   1   262  ; -1957065004
0917  9D420300           [0081] getglobal  10  13       ; gLotusAvatarType
091B  22828001           [0082] call       8   3   2  
091F  18020000           [0083] test       8       0    ; to [85] if true
0923  1A400080           [0084] jmp        2            ; to [87]
0927  D2018000           [0085] move       7   1      
092B  1AC00180           [0086] jmp        8            ; to [95]
092F  2482C100           [0087] self       8   1   262  ; -1957065004
0933  9D820300           [0088] getglobal  10  14       ; gRagdollType
0937  22828001           [0089] call       8   3   2  
093B  18020000           [0090] test       8       0    ; to [92] if true
093F  1A800080           [0091] jmp        3            ; to [95]
0943  24C2C300           [0092] self       8   1   271  ; 332067969
0947  22820001           [0093] call       8   2   2  
094B  D2010004           [0094] move       7   8      
094F  06020004           [0095] loadnil    8   8      
0953  64424100           [0096] self       9   0   261  ; -1870903749
0957  62820001           [0097] call       9   2   2  
095B  6402C404           [0098] self       9   9   272  ; 129677183
095F  62820001           [0099] call       9   2   2  
0963  9D820000           [0100] getglobal  10  2        ; 1074689893
0967  D2028004           [0101] move       11  9      
096B  A2820001           [0102] call       10  2   2  
096F  98420000           [0103] test       10      1    ; to [105] if false
0973  1A000380           [0104] jmp        13           ; to [118]
0977  A482C104           [0105] self       10  9   262  ; -1957065004
097B  1D430300           [0106] getglobal  12  13       ; gLotusAvatarType
097F  A2828001           [0107] call       10  3   2  
0983  98020000           [0108] test       10      0    ; to [110] if true
0987  1AC00180           [0109] jmp        8            ; to [118]
098B  A442C404           [0110] self       10  9   273  ; -1917464545
098F  A2820001           [0111] call       10  2   2  
0993  A4824405           [0112] self       10  10  274  ; 1856017039
0997  1DC30400           [0113] getglobal  12  19       ; Engine
099B  0E034506           [0114] gettable   12  12  276  ; "MAIN_HAND"
099F  A2828001           [0115] call       10  3   2  
09A3  12020005           [0116] move       8   10     
09A7  1A000780           [0117] jmp        29           ; to [147]
09AB  9D820000           [0118] getglobal  10  2        ; 1074689893
09AF  D2028004           [0119] move       11  9      
09B3  A2820001           [0120] call       10  2   2  
09B7  98420000           [0121] test       10      1    ; to [123] if false
09BB  1A800180           [0122] jmp        7            ; to [130]
09BF  A482C104           [0123] self       10  9   262  ; -1957065004
09C3  1D430500           [0124] getglobal  12  21       ; gLotusWeaponType
09C7  A2828001           [0125] call       10  3   2  
09CB  98020000           [0126] test       10      0    ; to [128] if true
09CF  1A400080           [0127] jmp        2            ; to [130]
09D3  12028004           [0128] move       8   9      
09D7  1A000480           [0129] jmp        17           ; to [147]
09DB  9D820000           [0130] getglobal  10  2        ; 1074689893
09DF  D2028003           [0131] move       11  7      
09E3  A2820001           [0132] call       10  2   2  
09E7  98420000           [0133] test       10      1    ; to [135] if false
09EB  1AC00280           [0134] jmp        12           ; to [147]
09EF  A482C103           [0135] self       10  7   262  ; -1957065004
09F3  1D430300           [0136] getglobal  12  13       ; gLotusAvatarType
09F7  A2828001           [0137] call       10  3   2  
09FB  98020000           [0138] test       10      0    ; to [140] if true
09FF  1A800180           [0139] jmp        7            ; to [147]
0A03  A442C403           [0140] self       10  7   273  ; -1917464545
0A07  A2820001           [0141] call       10  2   2  
0A0B  A4824405           [0142] self       10  10  274  ; 1856017039
0A0F  1DC30400           [0143] getglobal  12  19       ; Engine
0A13  0E034506           [0144] gettable   12  12  276  ; "MAIN_HAND"
0A17  A2828001           [0145] call       10  3   2  
0A1B  12020005           [0146] move       8   10     
0A1F  9D820000           [0147] getglobal  10  2        ; 1074689893
0A23  D2020004           [0148] move       11  8      
0A27  A2820001           [0149] call       10  2   2  
0A2B  98420000           [0150] test       10      1    ; to [152] if false
0A2F  1A800080           [0151] jmp        3            ; to [155]
0A33  A4824504           [0152] self       10  8   278  ; -2035091121
0A37  12030000           [0153] move       12  0      
0A3B  A2428001           [0154] call       10  3   1  
0A3F  9D820000           [0155] getglobal  10  2        ; 1074689893
0A43  DDC20500           [0156] getglobal  11  23       ; bubbleCapType
0A47  A2820001           [0157] call       10  2   2  
0A4B  98420000           [0158] test       10      1    ; to [160] if false
0A4F  1A001880           [0159] jmp        97           ; to [257]
0A53  9D820000           [0160] getglobal  10  2        ; 1074689893
0A57  DD020600           [0161] getglobal  11  24       ; bubbleCapDamageProxyType
0A5B  A2820001           [0162] call       10  2   2  
0A5F  98420000           [0163] test       10      1    ; to [165] if false
0A63  1AC01680           [0164] jmp        92           ; to [257]
0A67  93020000           [0165] getupval   10  0      
0A6B  E402C200           [0166] self       11  1   264  ; -1625438872
0A6F  5DC30500           [0167] getglobal  13  23       ; bubbleCapType
0A73  E2028001           [0168] call       11  3   0  
0A77  A2820000           [0169] call       10  0   2  
0A7B  D2000005           [0170] move       3   10     
0A7F  93020000           [0171] getupval   10  0      
0A83  E402C200           [0172] self       11  1   264  ; -1625438872
0A87  5D030600           [0173] getglobal  13  24       ; bubbleCapDamageProxyType
0A8B  E2028001           [0174] call       11  3   0  
0A8F  A2820000           [0175] call       10  0   2  
0A93  12010005           [0176] move       4   10     
0A97  9D820000           [0177] getglobal  10  2        ; 1074689893
0A9B  D2028001           [0178] move       11  3      
0A9F  A2820001           [0179] call       10  2   2  
0AA3  98420000           [0180] test       10      1    ; to [182] if false
0AA7  1A000180           [0181] jmp        5            ; to [187]
0AAB  9D820000           [0182] getglobal  10  2        ; 1074689893
0AAF  D2020002           [0183] move       11  4      
0AB3  A2820001           [0184] call       10  2   2  
0AB7  98020000           [0185] test       10      0    ; to [187] if true
0ABB  1AC00180           [0186] jmp        8            ; to [195]
0ABF  9D820200           [0187] getglobal  10  10       ; gRegion
0AC3  A4C24205           [0188] self       10  10  267  ; -1520831144
0AC7  A2820001           [0189] call       10  2   2  
0ACB  98020000           [0190] test       10      0    ; to [192] if true
0ACF  1A400080           [0191] jmp        2            ; to [194]
0AD3  A4024300           [0192] self       10  0   268  ; -725453761
0AD7  A2420001           [0193] call       10  2   1  
0ADB  1E008000           [0194] return     0   1      
0ADF  9D820000           [0195] getglobal  10  2        ; 1074689893
0AE3  DD420600           [0196] getglobal  11  25       ; bubbleCapBeamType
0AE7  A2820001           [0197] call       10  2   2  
0AEB  98420000           [0198] test       10      1    ; to [200] if false
0AEF  1A400480           [0199] jmp        18           ; to [218]
0AF3  A482C600           [0200] self       10  1   282  ; -1421644046
0AF7  1D430600           [0201] getglobal  12  25       ; bubbleCapBeamType
0AFB  5DC30600           [0202] getglobal  13  27       ; bubbleCapDeactivatedBone
0AFF  9D030700           [0203] getglobal  14  28       ; bubbleCapBeamStartingOffset
0B03  DD430700           [0204] getglobal  15  29       ; ZERO_ROTATION
0B07  12040004           [0205] move       16  8      
0B0B  A2828003           [0206] call       10  7   2  
0B0F  52010005           [0207] move       5   10     
0B13  A482C702           [0208] self       10  5   286  ; -408095485
0B17  12038001           [0209] move       12  3      
0B1B  5DC30700           [0210] getglobal  13  31       ; -332969190
0B1F  99030800           [0211] loadk      14  32       ; "GAME_C1_ROOT"
0B23  62030001           [0212] call       13  2   0  
0B27  A2420000           [0213] call       10  0   1  
0B2B  A442C802           [0214] self       10  5   289  ; 2109594123
0B2F  17030000           [0215] loadbool   12  0   0    ; false
0B33  57038000           [0216] loadbool   13  1   0    ; true
0B37  A2420002           [0217] call       10  4   1  
0B3B  9D820000           [0218] getglobal  10  2        ; 1074689893
0B3F  DD820800           [0219] getglobal  11  34       ; capAnimClosedLoop
0B43  A2820001           [0220] call       10  2   2  
0B47  98420000           [0221] test       10      1    ; to [223] if false
0B4B  1A000180           [0222] jmp        5            ; to [228]
0B4F  A4C2C801           [0223] self       10  3   291  ; 2056776437
0B53  1D830800           [0224] getglobal  12  34       ; capAnimClosedLoop
0B57  57030000           [0225] loadbool   13  0   0    ; false
0B5B  97038000           [0226] loadbool   14  1   0    ; true
0B5F  A2428002           [0227] call       10  5   1  
0B63  A402C200           [0228] self       10  1   264  ; -1625438872
0B67  1D030900           [0229] getglobal  12  36       ; backpackType
0B6B  A2828001           [0230] call       10  3   2  
0B6F  DD820000           [0231] getglobal  11  2        ; 1074689893
0B73  12030005           [0232] move       12  10     
0B77  E2820001           [0233] call       11  2   2  
0B7B  D8420000           [0234] test       11      1    ; to [236] if false
0B7F  1A000580           [0235] jmp        21           ; to [257]
0B83  E402C200           [0236] self       11  1   264  ; -1625438872
0B87  5D430900           [0237] getglobal  13  37       ; backpackGlowType
0B8B  E2828001           [0238] call       11  3   2  
0B8F  92018005           [0239] move       6   11     
0B93  DD820000           [0240] getglobal  11  2        ; 1074689893
0B97  12030003           [0241] move       12  6      
0B9B  E2820001           [0242] call       11  2   2  
0B9F  D8420000           [0243] test       11      1    ; to [245] if false
0BA3  1AC00280           [0244] jmp        12           ; to [257]
0BA7  E4424803           [0245] self       11  6   289  ; 2109594123
0BAB  57030000           [0246] loadbool   13  0   0    ; false
0BAF  97038000           [0247] loadbool   14  1   0    ; true
0BB3  E2420002           [0248] call       11  4   1  
0BB7  DD820000           [0249] getglobal  11  2        ; 1074689893
0BBB  12030004           [0250] move       12  8      
0BBF  E2820001           [0251] call       11  2   2  
0BC3  D8420000           [0252] test       11      1    ; to [254] if false
0BC7  1A800080           [0253] jmp        3            ; to [257]
0BCB  E4824504           [0254] self       11  8   278  ; -2035091121
0BCF  52030003           [0255] move       13  6      
0BD3  E2428001           [0256] call       11  3   1  
0BD7  E482C900           [0257] self       11  1   294  ; -578871469
0BDB  E2820001           [0258] call       11  2   2  
0BDF  24C3C905           [0259] self       12  11  295  ; 1204999458
0BE3  22830001           [0260] call       12  2   2  
0BE7  18030000           [0261] test       12      0    ; to [263] if true
0BEB  1A000080           [0262] jmp        1            ; to [264]
0BEF  1E008000           [0263] return     0   1      
0BF3  17030000           [0264] loadbool   12  0   0    ; false
0BF7  5DC30400           [0265] getglobal  13  19       ; Engine
0BFB  4E03CA06           [0266] gettable   13  13  296  ; -98643418
0BFF  62838000           [0267] call       13  1   2  
0C03  A443CA06           [0268] self       14  13  297  ; -995861768
0C07  1DC40400           [0269] getglobal  16  19       ; Engine
0C0B  0E844A08           [0270] gettable   16  16  298  ; "DT_HEALTH_DRAIN"
0C0F  59440000           [0271] loadk      17  1        ; 0
0C13  A2430002           [0272] call       14  4   1  
0C17  A4C34A00           [0273] self       14  0   299  ; -323635054
0C1B  A2830001           [0274] call       14  2   2  
0C1F  E4034B01           [0275] self       15  2   300  ; 796523475
0C23  E2830001           [0276] call       15  2   2  
0C27  12048007           [0277] move       16  15     
0C2B  52048007           [0278] move       17  15     
0C2F  92040007           [0279] move       18  14     
0C33  D2040007           [0280] move       19  14     
0C37  12050009           [0281] move       20  18     
0C3B  5D850000           [0282] getglobal  21  2        ; 1074689893
0C3F  92050002           [0283] move       22  4      
0C43  62850001           [0284] call       21  2   2  
0C47  58450000           [0285] test       21      1    ; to [287] if false
0C4B  1A801380           [0286] jmp        79           ; to [366]
0C4F  5D850000           [0287] getglobal  21  2        ; 1074689893
0C53  92058001           [0288] move       22  3      
0C57  62850001           [0289] call       21  2   2  
0C5B  58450000           [0290] test       21      1    ; to [292] if false
0C5F  1A401280           [0291] jmp        74           ; to [366]
0C63  5D850200           [0292] getglobal  21  10       ; gRegion
0C67  64C5C20A           [0293] self       21  21  267  ; -1520831144
0C6B  62850001           [0294] call       21  2   2  
0C6F  58050000           [0295] test       21      0    ; to [297] if true
0C73  1A800F80           [0296] jmp        63           ; to [360]
0C77  5D850000           [0297] getglobal  21  2        ; 1074689893
0C7B  9D450B00           [0298] getglobal  22  45       ; gGameRules
0C7F  62850001           [0299] call       21  2   2  
0C83  58450000           [0300] test       21      1    ; to [302] if false
0C87  1A400E80           [0301] jmp        58           ; to [360]
0C8B  5D450B00           [0302] getglobal  21  45       ; gGameRules
0C8F  6485C10A           [0303] self       21  21  262  ; -1957065004
0C93  DD850B00           [0304] getglobal  23  46       ; gLotusBaseGameRulesType
0C97  62858001           [0305] call       21  3   2  
0C9B  58050000           [0306] test       21      0    ; to [308] if true
0C9F  1AC00C80           [0307] jmp        52           ; to [360]
0CA3  5D450B00           [0308] getglobal  21  45       ; gGameRules
0CA7  64C5CB0A           [0309] self       21  21  303  ; -1201441975
0CAB  62850001           [0310] call       21  2   2  
0CAF  8605000B           [0311] loadnil    22  22     
0CB3  DD050C00           [0312] getglobal  23  48       ; capAttenuateHealthWithNpcScaling
0CB7  D8050000           [0313] test       23      0    ; to [315] if true
0CBB  1AC00880           [0314] jmp        36           ; to [351]
0CBF  DD850000           [0315] getglobal  23  2        ; 1074689893
0CC3  1206800A           [0316] move       24  21     
0CC7  E2850001           [0317] call       23  2   2  
0CCB  D8450000           [0318] test       23      1    ; to [320] if false
0CCF  1A800780           [0319] jmp        31           ; to [351]
0CD3  D9450000           [0320] loadk      23  1        ; 0
0CD7  0606000C           [0321] loadnil    24  24     
0CDB  5D860000           [0322] getglobal  25  2        ; 1074689893
0CDF  92068003           [0323] move       26  7      
0CE3  62860001           [0324] call       25  2   2  
0CE7  58460000           [0325] test       25      1    ; to [327] if false
0CEB  1A800080           [0326] jmp        3            ; to [330]
0CEF  6446CC03           [0327] self       25  7   305  ; -1411785325
0CF3  62860001           [0328] call       25  2   2  
0CF7  1206800C           [0329] move       24  25     
0CFB  5D860000           [0330] getglobal  25  2        ; 1074689893
0CFF  9206000C           [0331] move       26  24     
0D03  62860001           [0332] call       25  2   2  
0D07  58460000           [0333] test       25      1    ; to [335] if false
0D0B  1AC00080           [0334] jmp        4            ; to [339]
0D0F  64864C0C           [0335] self       25  24  306  ; 1983029550
0D13  62860001           [0336] call       25  2   2  
0D17  D205800C           [0337] move       23  25     
0D1B  1A000080           [0338] jmp        1            ; to [340]
0D1F  CEC5CC0A           [0339] gettable   23  21  307  ; "minEnemyLevel"
0D23  5D460B00           [0340] getglobal  25  45       ; gGameRules
0D27  6406CD0C           [0341] self       25  25  308  ; 515602179
0D2B  E4064B02           [0342] self       27  4   300  ; 796523475
0D2F  E2860001           [0343] call       27  2   2  
0D33  1DC70400           [0344] getglobal  28  19       ; Engine
0D37  0E474D0E           [0345] gettable   28  28  309  ; "NPC_HEALTH"
0D3B  4E87CD0A           [0346] gettable   29  21  310  ; "difficulty"
0D3F  9207800B           [0347] move       30  23     
0D43  62860003           [0348] call       25  6   2  
0D47  9205800C           [0349] move       22  25     
0D4B  1A800080           [0350] jmp        3            ; to [354]
0D4F  6406CB00           [0351] self       25  1   300  ; 796523475
0D53  62860001           [0352] call       25  2   2  
0D57  9205800C           [0353] move       22  25     
0D5B  64C64D02           [0354] self       25  4   311  ; -1995148432
0D5F  D206000B           [0355] move       27  22     
0D63  62468001           [0356] call       25  3   1  
0D67  64064E02           [0357] self       25  4   312  ; 1992436207
0D6B  D206000B           [0358] move       27  22     
0D6F  62468001           [0359] call       25  3   1  
0D73  64C6CD01           [0360] self       25  3   311  ; -1995148432
0D77  D2068007           [0361] move       27  15     
0D7B  62468001           [0362] call       25  3   1  
0D7F  6406CE01           [0363] self       25  3   312  ; 1992436207
0D83  D2068007           [0364] move       27  15     
0D87  62468001           [0365] call       25  3   1  
0D8B  9D440E00           [0366] getglobal  18  57       ; sizeOnSpawn
0D8F  53068000           [0367] getupval   25  1      
0D93  92060000           [0368] move       26  0      
0D97  D2068001           [0369] move       27  3      
0D9B  12070009           [0370] move       28  18     
0D9F  52070009           [0371] move       29  18     
0DA3  62468002           [0372] call       25  5   1  
0DA7  5DC60000           [0373] getglobal  25  3        ; 538022378
0DAB  9D860E00           [0374] getglobal  26  58       ; growthDelayOnSpawn
0DAF  62460001           [0375] call       25  2   1  
0DB3  57068000           [0376] loadbool   25  1   0    ; true
0DB7  99060100           [0377] loadk      26  4        ; 0
0DBB  D7060000           [0378] loadbool   27  0   0    ; false
0DBF  19070100           [0379] loadk      28  4        ; 0
0DC3  64C7CE00           [0380] self       29  1   315  ; 880936306
0DC7  62870001           [0381] call       29  2   2  
0DCB  9D070F00           [0382] getglobal  30  60       ; disableAbilities
0DCF  8A07000F           [0383] len        30  30     
fail op	21
0DD3  15800782           [0384] concat     0   260 30 
0DD7  1A000380           [0385] jmp        13           ; to [399]
0DDB  9D870000           [0386] getglobal  30  2        ; 1074689893
0DDF  DD470F00           [0387] getglobal  31  61       ; _T
0DE3  CE87CF0F           [0388] gettable   31  31  318  ; "nullifierAbilities"
0DE7  A2870001           [0389] call       30  2   2  
0DEB  98070000           [0390] test       30      0    ; to [392] if true
0DEF  1A800080           [0391] jmp        3            ; to [395]
0DF3  9D470F00           [0392] getglobal  30  61       ; _T
0DF7  CB070000           [0393] newtable   31  0   0    ; array=0, hash=0
0DFB  8CC7079F           [0394] settable   30  318 31   ; "nullifierAbilities"
0DFF  9D470F00           [0395] getglobal  30  61       ; _T
0E03  8E874F0F           [0396] gettable   30  30  318  ; "nullifierAbilities"
0E07  DD070F00           [0397] getglobal  31  60       ; disableAbilities
0E0B  8CC7870E           [0398] settable   30  29  31 
0E0F  A4874600           [0399] self       30  0   282  ; -1421644046
0E13  1DC80F00           [0400] getglobal  32  63       ; scriptTriggerType
0E17  5D081000           [0401] getglobal  33  64       ; EMPTY_SYMBOL
0E1B  9D481000           [0402] getglobal  34  65       ; ZERO_VECTOR
0E1F  DD480700           [0403] getglobal  35  29       ; ZERO_ROTATION
0E23  12098000           [0404] move       36  1      
0E27  A2878003           [0405] call       30  7   2  
0E2B  D9070100           [0406] loadk      31  4        ; 0
0E2F  17088000           [0407] loadbool   32  1   0    ; true
0E33  5D880000           [0408] getglobal  33  2        ; 1074689893
0E37  92080001           [0409] move       34  2      
0E3B  62880001           [0410] call       33  2   2  
0E3F  58480000           [0411] test       33      1    ; to [413] if false
0E43  1A000280           [0412] jmp        9            ; to [422]
0E47  5D881000           [0413] getglobal  33  66       ; destroyAtMinSize
0E4B  58080000           [0414] test       33      0    ; to [416] if true
0E4F  1AC00080           [0415] jmp        4            ; to [420]
0E53  64484801           [0416] self       33  2   289  ; 2109594123
0E57  D7080000           [0417] loadbool   35  0   0    ; false
0E5B  62488001           [0418] call       33  3   1  
0E5F  1A400080           [0419] jmp        2            ; to [422]
0E63  64C85001           [0420] self       33  2   323  ; -2129663625
0E67  62480001           [0421] call       33  2   1  
0E6B  5D880000           [0422] getglobal  33  2        ; 1074689893
0E6F  9208000F           [0423] move       34  30     
0E73  62880001           [0424] call       33  2   2  
0E77  58480000           [0425] test       33      1    ; to [427] if false
0E7B  1A400780           [0426] jmp        30           ; to [457]
0E7F  6408510F           [0427] self       33  30  324  ; 1388199739
0E83  62880001           [0428] call       33  2   2  
0E87  D2078010           [0429] move       31  33     
0E8B  5D881000           [0430] getglobal  33  66       ; destroyAtMinSize
0E8F  58080000           [0431] test       33      0    ; to [433] if true
0E93  1A400080           [0432] jmp        2            ; to [435]
0E97  6448510F           [0433] self       33  30  325  ; 766584623
0E9B  62480001           [0434] call       33  2   1  
0E9F  5D881100           [0435] getglobal  33  70       ; domeMinScale
fail op	35
0EA3  6340C010           [0436] close      1  
0EA7  1AC00080           [0437] jmp        4            ; to [442]
0EAB  64C8510F           [0438] self       33  30  327  ; -412619612
0EAF  DD881100           [0439] getglobal  35  70       ; domeMinScale
0EB3  C4C88711           [0440] mul        35  35  31 
0EB7  62488001           [0441] call       33  3   1  
0EBB  5D880000           [0442] getglobal  33  2        ; 1074689893
0EBF  9D480B00           [0443] getglobal  34  45       ; gGameRules
0EC3  62880001           [0444] call       33  2   2  
0EC7  58480000           [0445] test       33      1    ; to [447] if false
0ECB  1A400280           [0446] jmp        10           ; to [457]
0ECF  5D480B00           [0447] getglobal  33  45       ; gGameRules
0ED3  6488C110           [0448] self       33  33  262  ; -1957065004
0ED7  DD880B00           [0449] getglobal  35  46       ; gLotusBaseGameRulesType
0EDB  62888001           [0450] call       33  3   2  
0EDF  58080000           [0451] test       33      0    ; to [453] if true
0EE3  1AC00080           [0452] jmp        4            ; to [457]
0EE7  5D480B00           [0453] getglobal  33  45       ; gGameRules
0EEB  6408D210           [0454] self       33  33  328  ; -1252920312
0EEF  D208000F           [0455] move       35  30     
0EF3  62488001           [0456] call       33  3   1  
0EF7  46088010           [0457] loadnil    33  33     
0EFB  9D481200           [0458] getglobal  34  73       ; destroyAtMaxSizeTime
0EFF  DD881100           [0459] getglobal  35  70       ; domeMinScale
0F03  DC888311           [0460] div        35  35  14 
0F07  C4C88807           [0461] mul        35  15  35 
0F0B  06090012           [0462] loadnil    36  36     
0F0F  6489C100           [0463] self       37  1   262  ; -1957065004
0F13  DD891200           [0464] getglobal  39  74       ; gBaseAvatarType
0F17  62898001           [0465] call       37  3   2  
0F1B  58090000           [0466] test       37      0    ; to [468] if true
0F1F  1A800080           [0467] jmp        3            ; to [471]
0F23  6449CC00           [0468] self       37  1   305  ; -1411785325
0F27  62890001           [0469] call       37  2   2  
0F2B  12098012           [0470] move       36  37     
0F2F  5DC91200           [0471] getglobal  37  75       ; 572299008
0F33  62898000           [0472] call       37  1   2  
0F37  9D890000           [0473] getglobal  38  2        ; 1074689893
0F3B  D2090000           [0474] move       39  0      
0F3F  A2890001           [0475] call       38  2   2  
0F43  98490000           [0476] test       38      1    ; to [478] if false
0F47  1A00A080           [0477] jmp        641          ; to [1119]
0F4B  9D890000           [0478] getglobal  38  2        ; 1074689893
0F4F  D2098000           [0479] move       39  1      
0F53  A2890001           [0480] call       38  2   2  
0F57  98490000           [0481] test       38      1    ; to [483] if false
0F5B  1AC09E80           [0482] jmp        636          ; to [1119]
0F5F  9D890000           [0483] getglobal  38  2        ; 1074689893
0F63  D2090001           [0484] move       39  2      
0F67  A2890001           [0485] call       38  2   2  
0F6B  98490000           [0486] test       38      1    ; to [488] if false
0F6F  1A809D80           [0487] jmp        631          ; to [1119]
0F73  A489C100           [0488] self       38  1   262  ; -1957065004
0F77  1D0A1300           [0489] getglobal  40  76       ; gAvatarType
0F7B  A2898001           [0490] call       38  3   2  
0F7F  98090000           [0491] test       38      0    ; to [493] if true
0F83  1AC00180           [0492] jmp        8            ; to [501]
0F87  A449D300           [0493] self       38  1   333  ; 1511086594
0F8B  A2890001           [0494] call       38  2   2  
0F8F  98490000           [0495] test       38      1    ; to [497] if false
0F93  1A409B80           [0496] jmp        622          ; to [1119]
0F97  A489D300           [0497] self       38  1   334  ; -1519595333
0F9B  A2890001           [0498] call       38  2   2  
0F9F  98490000           [0499] test       38      1    ; to [501] if false
0FA3  1A409A80           [0500] jmp        618          ; to [1119]
0FA7  D8460000           [0501] test       27      1    ; to [503] if false
0FAB  1AC00180           [0502] jmp        8            ; to [511]
0FAF  A4C95300           [0503] self       38  0   335  ; -1107906782
0FB3  A2890001           [0504] call       38  2   2  
fail op	35
0FB7  63404013           [0505] close      1  
0FBB  1A800280           [0506] jmp        11           ; to [518]
0FBF  A4094000           [0507] self       38  0   256  ; -703571861
0FC3  194A0000           [0508] loadk      40  1        ; 0
0FC7  A2498001           [0509] call       38  3   1  
0FCB  1A800180           [0510] jmp        7            ; to [518]
0FCF  A4C95300           [0511] self       38  0   335  ; -1107906782
0FD3  A2890001           [0512] call       38  2   2  
fail op	35
0FD7  63004113           [0513] close      1  
0FDB  1A800080           [0514] jmp        3            ; to [518]
0FDF  A4094000           [0515] self       38  0   256  ; -703571861
0FE3  190A0100           [0516] loadk      40  4        ; 0
0FE7  A2498001           [0517] call       38  3   1  
0FEB  52040008           [0518] move       17  16     
0FEF  9D091400           [0519] getglobal  38  80       ; math
0FF3  8E495413           [0520] gettable   38  38  337  ; 1710846250
0FF7  E4094B01           [0521] self       39  2   300  ; 796523475
0FFB  E2890001           [0522] call       39  2   2  
0FFF  120A8007           [0523] move       40  15     
1003  A2898001           [0524] call       38  3   2  
1007  12040013           [0525] move       16  38     
100B  A4C94A00           [0526] self       38  0   299  ; -323635054
100F  A2890001           [0527] call       38  2   2  
1013  D2040013           [0528] move       19  38     
1017  9D891000           [0529] getglobal  38  66       ; destroyAtMinSize
101B  98490000           [0530] test       38      1    ; to [532] if false
101F  1A400180           [0531] jmp        6            ; to [538]
1023  9D091400           [0532] getglobal  38  80       ; math
1027  8E895413           [0533] gettable   38  38  338  ; -1962864584
102B  D2090008           [0534] move       39  16     
102F  120A8011           [0535] move       40  35     
1033  A2898001           [0536] call       38  3   2  
1037  12040013           [0537] move       16  38     
103B  9D891100           [0538] getglobal  38  70       ; domeMinScale
fail op	33
103F  21800413           [0539] tforloop   0       18   ; to [541] if exit
1043  1A800080           [0540] jmp        3            ; to [544]
1047  58060000           [0541] test       25      0    ; to [543] if true
104B  1A000080           [0542] jmp        1            ; to [544]
104F  57060000           [0543] loadbool   25  0   0    ; false
1053  9DC91400           [0544] getglobal  38  83       ; 1289681407
1057  A2898000           [0545] call       38  1   2  
105B  8386090D           [0546] add        26  26  38 
105F  97090000           [0547] loadbool   38  0   0    ; false
1063  DD890200           [0548] getglobal  39  10       ; gRegion
1067  E4C9C213           [0549] self       39  39  267  ; -1520831144
106B  E2890001           [0550] call       39  2   2  
106F  D8490000           [0551] test       39      1    ; to [553] if false
1073  1AC00180           [0552] jmp        8            ; to [561]
1077  D8060000           [0553] test       27      0    ; to [555] if true
107B  1A400180           [0554] jmp        6            ; to [561]
107F  97098000           [0555] loadbool   38  1   0    ; true
1083  E4094B01           [0556] self       39  2   300  ; 796523475
1087  E2890001           [0557] call       39  2   2  
fail op	21
108B  15C08911           [0558] concat     0   35  39 
108F  1A000080           [0559] jmp        1            ; to [561]
1093  97090000           [0560] loadbool   38  0   0    ; false
1097  98490000           [0561] test       38      1    ; to [563] if false
109B  1A000780           [0562] jmp        29           ; to [592]
109F  DD091500           [0563] getglobal  39  84       ; needsAgentBasedCheck
10A3  D8090000           [0564] test       39      0    ; to [566] if true
10A7  1A400680           [0565] jmp        26           ; to [592]
10AB  DD890000           [0566] getglobal  39  2        ; 1074689893
10AF  120A8000           [0567] move       40  1      
10B3  E2890001           [0568] call       39  2   2  
10B7  D8490000           [0569] test       39      1    ; to [571] if false
10BB  1A000580           [0570] jmp        21           ; to [592]
10BF  E489C100           [0571] self       39  1   262  ; -1957065004
10C3  5DCA0100           [0572] getglobal  41  7        ; gLotusNpcAvatarType
10C7  E2898001           [0573] call       39  3   2  
10CB  D8090000           [0574] test       39      0    ; to [576] if true
10CF  1AC00380           [0575] jmp        16           ; to [592]
10D3  E449D500           [0576] self       39  1   341  ; -1212815282
10D7  E2890001           [0577] call       39  2   2  
10DB  D8090000           [0578] test       39      0    ; to [580] if true
10DF  1A800280           [0579] jmp        11           ; to [591]
10E3  DD890000           [0580] getglobal  39  2        ; 1074689893
10E7  244AC100           [0581] self       40  1   261  ; -1870903749
10EB  220A0001           [0582] call       40  2   0  
10EF  E2890000           [0583] call       39  0   2  
10F3  D8090000           [0584] test       39      0    ; to [586] if true
10F7  1A000180           [0585] jmp        5            ; to [591]
10FB  E489D500           [0586] self       39  1   342  ; -743338766
10FF  E2890001           [0587] call       39  2   2  
1103  92098013           [0588] move       38  39     
1107  1A400080           [0589] jmp        2            ; to [592]
110B  97490000           [0590] loadbool   38  0   1    ; false, to [592]
110F  97098000           [0591] loadbool   38  1   0    ; true
1113  98090000           [0592] test       38      0    ; to [594] if true
1117  1A000280           [0593] jmp        9            ; to [603]
111B  1D851100           [0594] getglobal  20  70       ; domeMinScale
111F  DD091400           [0595] getglobal  39  80       ; math
1123  CE49D413           [0596] gettable   39  39  337  ; 1710846250
1127  120A000D           [0597] move       40  26     
112B  5DCA1500           [0598] getglobal  41  87       ; damageWindow
112F  4D4AC014           [0599] sub        41  41  257  ; 0
1133  E2898001           [0600] call       39  3   2  
1137  92068013           [0601] move       26  39     
113B  1AC01F80           [0602] jmp        128          ; to [731]
113F  D8060000           [0603] test       27      0    ; to [605] if true
1143  1A000980           [0604] jmp        37           ; to [642]
fail op	21
1147  15400408           [0605] concat     0   16  17 
114B  1A800880           [0606] jmp        35           ; to [642]
114F  58060000           [0607] test       25      0    ; to [609] if true
1153  1A000080           [0608] jmp        1            ; to [610]
1157  57060000           [0609] loadbool   25  0   0    ; false
115B  CD098408           [0610] sub        39  17  16 
115F  1D0A1600           [0611] getglobal  40  88       ; damageMin
fail op	21
1163  15008A13           [0612] concat     0   39  40 
1167  1A400080           [0613] jmp        2            ; to [616]
116B  DD091600           [0614] getglobal  39  88       ; damageMin
116F  1AC00080           [0615] jmp        4            ; to [620]
1173  1D4A1600           [0616] getglobal  40  89       ; damageMax
fail op	21
1177  15C00914           [0617] concat     0   40  39 
117B  1A000080           [0618] jmp        1            ; to [620]
117F  DD491600           [0619] getglobal  39  89       ; damageMax
1183  1D8A0200           [0620] getglobal  40  10       ; gRegion
1187  248A5614           [0621] self       40  40  346  ; 1224466847
118B  228A0001           [0622] call       40  2   2  
118F  0A0A0014           [0623] len        40  40     
1193  5DCA1600           [0624] getglobal  41  91       ; scaleDecrement
1197  9D0A1600           [0625] getglobal  42  88       ; damageMin
119B  9C8A8A13           [0626] div        42  39  42 
119F  448A8A14           [0627] mul        41  41  42 
11A3  9D0A1400           [0628] getglobal  42  80       ; math
11A7  8E8A5415           [0629] gettable   42  42  338  ; -1962864584
11AB  DD8A1100           [0630] getglobal  43  70       ; domeMinScale
11AF  0D4B8A80           [0631] sub        44  257 41   ; 0
11B3  5D0B1400           [0632] getglobal  45  80       ; math
11B7  4E4BD416           [0633] gettable   45  45  337  ; 1710846250
11BB  920B000A           [0634] move       46  20     
11BF  D20B0009           [0635] move       47  18     
11C3  628B8001           [0636] call       45  3   2  
11C7  044B0B16           [0637] mul        44  44  45 
11CB  A28A8001           [0638] call       42  3   2  
11CF  12050015           [0639] move       20  42     
11D3  99060100           [0640] loadk      26  4        ; 0
11D7  1A001680           [0641] jmp        89           ; to [731]
11DB  9D8A0000           [0642] getglobal  42  2        ; 1074689893
11DF  D20A8000           [0643] move       43  1      
11E3  A28A0001           [0644] call       42  2   2  
11E7  984A0000           [0645] test       42      1    ; to [647] if false
11EB  1A800280           [0646] jmp        11           ; to [658]
11EF  A48AC100           [0647] self       42  1   262  ; -1957065004
11F3  1DCB0100           [0648] getglobal  44  7        ; gLotusNpcAvatarType
11F7  A28A8001           [0649] call       42  3   2  
11FB  980A0000           [0650] test       42      0    ; to [652] if true
11FF  1A400180           [0651] jmp        6            ; to [658]
1203  A40AD700           [0652] self       42  1   348  ; -117614403
1207  A28A0001           [0653] call       42  2   2  
120B  980A0000           [0654] test       42      0    ; to [656] if true
120F  1A400080           [0655] jmp        2            ; to [658]
1213  99060100           [0656] loadk      26  4        ; 0
1217  1A001280           [0657] jmp        73           ; to [731]
121B  970A0000           [0658] loadbool   42  0   0    ; false
121F  D70A0000           [0659] loadbool   43  0   0    ; false
1223  1D8B0000           [0660] getglobal  44  2        ; 1074689893
1227  520B8001           [0661] move       45  3      
122B  228B0001           [0662] call       44  2   2  
122F  184B0000           [0663] test       44      1    ; to [665] if false
1233  1A800980           [0664] jmp        39           ; to [704]
1237  1D4B1700           [0665] getglobal  44  93       ; capHeightAdjustsToCeiling
123B  180B0000           [0666] test       44      0    ; to [668] if true
123F  1AC00880           [0667] jmp        36           ; to [704]
1243  D8060000           [0668] test       27      0    ; to [670] if true
1247  1A400880           [0669] jmp        34           ; to [704]
124B  248BD700           [0670] self       44  1   350  ; -1565518332
124F  9DCB1700           [0671] getglobal  46  95       ; bubbleCapActivatedBone
1253  228B8001           [0672] call       44  3   2  
1257  5D0B1800           [0673] getglobal  45  96       ; capOffsetByMeshScale
125B  448B8416           [0674] mul        45  45  18 
125F  434B0B16           [0675] add        45  44  45 
1263  9D4B1800           [0676] getglobal  46  97       ; ceilingRaycastExtraOffset
1267  438B8B16           [0677] add        45  45  46 
126B  860B0017           [0678] loadnil    46  46     
126F  DD8B0200           [0679] getglobal  47  10       ; gRegion
1273  E48BD817           [0680] self       47  47  354  ; -1869767524
1277  520C0016           [0681] move       49  44     
127B  920C8016           [0682] move       50  45     
127F  DDCC1800           [0683] getglobal  51  99       ; ceilingRaycastIgnoreTypes
1283  120D0017           [0684] move       52  46     
1287  520D8012           [0685] move       53  37     
128B  E28B8003           [0686] call       47  7   2  
128F  D80B0000           [0687] test       47      0    ; to [689] if true
1293  1A800380           [0688] jmp        15           ; to [704]
1297  DD8B0000           [0689] getglobal  47  2        ; 1074689893
129B  120C0017           [0690] move       48  46     
129F  E28B0001           [0691] call       47  2   2  
12A3  D80B0000           [0692] test       47      0    ; to [694] if true
12A7  1A400280           [0693] jmp        10           ; to [704]
12AB  970A8000           [0694] loadbool   42  1   0    ; true
12AF  DD0B1400           [0695] getglobal  47  80       ; math
12B3  CE0BD917           [0696] gettable   47  47  356  ; -113279800
12B7  0E4CD912           [0697] gettable   48  37  357  ; "y"
12BB  4E4CD916           [0698] gettable   49  45  357  ; "y"
12BF  0D4C0C18           [0699] sub        48  48  49 
12C3  E28B0001           [0700] call       47  2   2  
fail op	21
12C7  1580D917           [0701] concat     0   47  358
12CB  1A000080           [0702] jmp        1            ; to [704]
12CF  D70A8000           [0703] loadbool   43  1   0    ; true
12D3  980A0000           [0704] test       42      0    ; to [706] if true
12D7  1A000580           [0705] jmp        21           ; to [727]
12DB  D80A0000           [0706] test       43      0    ; to [708] if true
12DF  1A400080           [0707] jmp        2            ; to [710]
12E3  12050009           [0708] move       20  18     
12E7  1A000580           [0709] jmp        21           ; to [731]
12EB  DD0B1400           [0710] getglobal  47  80       ; math
12EF  CE8BD417           [0711] gettable   47  47  338  ; -1962864584
12F3  1D8C1100           [0712] getglobal  48  70       ; domeMinScale
12F7  5DCC1600           [0713] getglobal  49  91       ; scaleDecrement
12FB  4D4C8C80           [0714] sub        49  257 49   ; 0
12FF  9D0C1400           [0715] getglobal  50  80       ; math
1303  8E4C5419           [0716] gettable   50  50  337  ; 1710846250
1307  D20C000A           [0717] move       51  20     
130B  120D0009           [0718] move       52  18     
130F  A28C8001           [0719] call       50  3   2  
1313  448C8C18           [0720] mul        49  49  50 
1317  E28B8001           [0721] call       47  3   2  
131B  1D8C1100           [0722] getglobal  48  70       ; domeMinScale
fail op	21
131F  15C00B18           [0723] concat     0   48  47 
1323  1A400180           [0724] jmp        6            ; to [731]
1327  12058017           [0725] move       20  47     
132B  1AC00080           [0726] jmp        4            ; to [731]
132F  1DCC1500           [0727] getglobal  48  87       ; damageWindow
fail op	21
1333  15800618           [0728] concat     0   48  26 
1337  1A000080           [0729] jmp        1            ; to [731]
133B  12050007           [0730] move       20  14     
133F  1D8C1000           [0731] getglobal  48  66       ; destroyAtMinSize
1343  184C0000           [0732] test       48      1    ; to [734] if false
1347  1A400480           [0733] jmp        18           ; to [752]
134B  18080000           [0734] test       32      0    ; to [736] if true
134F  1A800180           [0735] jmp        7            ; to [743]
1353  1D8C1100           [0736] getglobal  48  70       ; domeMinScale
fail op	21
1357  15000518           [0737] concat     0   48  20 
135B  1AC00080           [0738] jmp        4            ; to [743]
135F  24CC5901           [0739] self       48  2   359  ; 1556188185
1363  224C0001           [0740] call       48  2   1  
1367  17080000           [0741] loadbool   32  0   0    ; false
136B  1A000280           [0742] jmp        9            ; to [752]
136F  18480000           [0743] test       32      1    ; to [745] if false
1373  1A800180           [0744] jmp        7            ; to [752]
1377  1D8C1100           [0745] getglobal  48  70       ; domeMinScale
fail op	33
137B  21000C0A           [0746] tforloop   0       48   ; to [748] if exit
137F  1AC00080           [0747] jmp        4            ; to [752]
1383  1D851100           [0748] getglobal  20  70       ; domeMinScale
1387  24CC5001           [0749] self       48  2   323  ; -2129663625
138B  224C0001           [0750] call       48  2   1  
138F  17088000           [0751] loadbool   32  1   0    ; true
1393  240C4E01           [0752] self       48  2   312  ; 1992436207
1397  920C0008           [0753] move       50  16     
139B  224C8001           [0754] call       48  3   1  
139F  1D0C1400           [0755] getglobal  48  80       ; math
13A3  0E0C5918           [0756] gettable   48  48  356  ; -113279800
13A7  4D8C8409           [0757] sub        49  19  18 
13AB  228C0001           [0758] call       48  2   2  
fail op	21
13AF  55000CB4           [0759] concat     1   360 48 
13B3  1A000080           [0760] jmp        1            ; to [762]
13B7  174C0000           [0761] loadbool   48  0   1    ; false, to [763]
13BB  170C8000           [0762] loadbool   48  1   0    ; true
13BF  184C0000           [0763] test       48      1    ; to [765] if false
13C3  1A400280           [0764] jmp        10           ; to [775]
fail op	35
13C7  2380040A           [0765] close      0  
13CB  1AC00180           [0766] jmp        8            ; to [775]
13CF  5D8C1000           [0767] getglobal  49  66       ; destroyAtMinSize
13D3  580C0000           [0768] test       49      0    ; to [770] if true
13D7  1A403F80           [0769] jmp        254          ; to [1024]
13DB  58460000           [0770] test       25      1    ; to [772] if false
13DF  1AC03E80           [0771] jmp        252          ; to [1024]
13E3  5D8C1100           [0772] getglobal  49  70       ; domeMinScale
fail op	33
13E7  21400C09           [0773] tforloop   0       49   ; to [775] if exit
13EB  1A003E80           [0774] jmp        249          ; to [1024]
13EF  5DCC1400           [0775] getglobal  49  83       ; 1289681407
13F3  628C8000           [0776] call       49  1   2  
13F7  0D470C0E           [0777] sub        28  28  49 
13FB  520C0009           [0778] move       49  18     
fail op	21
13FF  15000509           [0779] concat     0   18  20 
1403  1A400380           [0780] jmp        14           ; to [795]
1407  9D0C1400           [0781] getglobal  50  80       ; math
140B  8E4C5419           [0782] gettable   50  50  337  ; 1710846250
140F  D20C000A           [0783] move       51  20     
1413  1D4D1A00           [0784] getglobal  52  105      ; -1828500651
1417  590D0100           [0785] loadk      53  4        ; 0
141B  994D0000           [0786] loadk      54  1        ; 0
141F  DD8D1A00           [0787] getglobal  55  106      ; growLerpRate
1423  1DCE1A00           [0788] getglobal  56  107      ; scaleDelay
1427  C40D8E1B           [0789] mul        55  55  56 
142B  228D0002           [0790] call       52  4   2  
142F  030D0D09           [0791] add        52  18  52 
1433  A28C8001           [0792] call       50  3   2  
1437  520C0019           [0793] move       49  50     
143B  1AC00380           [0794] jmp        16           ; to [811]
fail op	21
143F  1580040A           [0795] concat     0   20  18 
1443  1A400380           [0796] jmp        14           ; to [811]
1447  9D0C1400           [0797] getglobal  50  80       ; math
144B  8E8C5419           [0798] gettable   50  50  338  ; -1962864584
144F  D20C000A           [0799] move       51  20     
1453  1D4D1A00           [0800] getglobal  52  105      ; -1828500651
1457  590D0100           [0801] loadk      53  4        ; 0
145B  994D0000           [0802] loadk      54  1        ; 0
145F  DD0D1B00           [0803] getglobal  55  108      ; shrinkLerpRate
1463  1DCE1A00           [0804] getglobal  56  107      ; scaleDelay
1467  C40D8E1B           [0805] mul        55  55  56 
146B  228D0002           [0806] call       52  4   2  
146F  0D0D0D09           [0807] sub        52  18  52 
1473  A28C8001           [0808] call       50  3   2  
1477  520C0019           [0809] move       49  50     
147B  19070100           [0810] loadk      28  4        ; 0
fail op	35
147F  23808418           [0811] close      0  
1483  1A400080           [0812] jmp        2            ; to [815]
1487  180C0000           [0813] test       48      0    ; to [815] if true
148B  1A400380           [0814] jmp        14           ; to [829]
148F  A4CC4A01           [0815] self       50  2   299  ; -323635054
1493  A28C0001           [0816] call       50  2   2  
1497  DD4C1A00           [0817] getglobal  51  105      ; -1828500651
149B  120D8009           [0818] move       52  19     
149F  520D0019           [0819] move       53  50     
14A3  994D1B00           [0820] loadk      54  109      ; 0
14A7  E28C0002           [0821] call       51  4   2  
14AB  D2048019           [0822] move       19  51     
14AF  D30C8000           [0823] getupval   51  1      
14B3  120D0000           [0824] move       52  0      
14B7  520D8001           [0825] move       53  3      
14BB  920D0009           [0826] move       54  18     
14BF  D20D8009           [0827] move       55  19     
14C3  E24C8002           [0828] call       51  5   1  
fail op	33
14C7  2100410E           [0829] tforloop   0       260  ; to [831] if exit
14CB  1A003080           [0830] jmp        193          ; to [1024]
14CF  DDCC1A00           [0831] getglobal  51  107      ; scaleDelay
14D3  03C70C0E           [0832] add        28  28  51 
fail op	21
14D7  1580040A           [0833] concat     0   20  18 
14DB  1A000080           [0834] jmp        1            ; to [836]
14DF  99060100           [0835] loadk      26  4        ; 0
fail op	35
14E3  63808418           [0836] close      1  
14E7  1AC00180           [0837] jmp        8            ; to [846]
14EB  DD8C0000           [0838] getglobal  51  2        ; 1074689893
14EF  120D0001           [0839] move       52  2      
14F3  E28C0001           [0840] call       51  2   2  
14F7  D84C0000           [0841] test       51      1    ; to [843] if false
14FB  1A800080           [0842] jmp        3            ; to [846]
14FF  E48C5B01           [0843] self       51  2   366  ; 1786666898
1503  520D8018           [0844] move       53  49     
1507  E24C8001           [0845] call       51  3   1  
150B  DD8C0000           [0846] getglobal  51  2        ; 1074689893
150F  120D000F           [0847] move       52  30     
1513  E28C0001           [0848] call       51  2   2  
1517  D84C0000           [0849] test       51      1    ; to [851] if false
151B  1A000180           [0850] jmp        5            ; to [856]
151F  D8060000           [0851] test       27      0    ; to [853] if true
1523  1A800080           [0852] jmp        3            ; to [856]
1527  E4CC510F           [0853] self       51  30  327  ; -412619612
152B  44CD8718           [0854] mul        53  49  31 
152F  E24C8001           [0855] call       51  3   1  
1533  DD8C1000           [0856] getglobal  51  66       ; destroyAtMinSize
1537  D80C0000           [0857] test       51      0    ; to [859] if true
153B  1A801780           [0858] jmp        95           ; to [954]
153F  DD8C1100           [0859] getglobal  51  70       ; domeMinScale
fail op	33
1543  21C08C18           [0860] tforloop   0       51   ; to [862] if exit
1547  1AC01680           [0861] jmp        92           ; to [954]
154B  D8060000           [0862] test       27      0    ; to [864] if true
154F  1A401680           [0863] jmp        90           ; to [954]
1553  58460000           [0864] test       25      1    ; to [866] if false
1557  1AC01580           [0865] jmp        88           ; to [954]
155B  DD8C0200           [0866] getglobal  51  10       ; gRegion
155F  E4CCDB19           [0867] self       51  51  367  ; -1110225722
1563  5D0D1C00           [0868] getglobal  53  112      ; destroyFx
1567  A44D5C00           [0869] self       54  0   369  ; 1839670529
156B  A28D0001           [0870] call       54  2   2  
156F  DD4D0700           [0871] getglobal  55  29       ; ZERO_ROTATION
1573  120E0004           [0872] move       56  8      
1577  E28C0003           [0873] call       51  6   2  
157B  240D4000           [0874] self       52  0   256  ; -703571861
157F  994D0000           [0875] loadk      54  1        ; 0
1583  224D8001           [0876] call       52  3   1  
1587  244D4801           [0877] self       52  2   289  ; 2109594123
158B  970D0000           [0878] loadbool   54  0   0    ; false
158F  224D8001           [0879] call       52  3   1  
1593  240D4E01           [0880] self       52  2   312  ; 1992436207
1597  920D8011           [0881] move       54  35     
159B  224D8001           [0882] call       52  3   1  
159F  1D8D0000           [0883] getglobal  52  2        ; 1074689893
15A3  520D8010           [0884] move       53  33     
15A7  228D0001           [0885] call       52  2   2  
15AB  184D0000           [0886] test       52      1    ; to [888] if false
15AF  1A400080           [0887] jmp        2            ; to [890]
15B3  240DC310           [0888] self       52  33  268  ; -725453761
15B7  224D0001           [0889] call       52  2   1  
15BB  1D8D0000           [0890] getglobal  52  2        ; 1074689893
15BF  520D000F           [0891] move       53  30     
15C3  228D0001           [0892] call       52  2   2  
15C7  184D0000           [0893] test       52      1    ; to [895] if false
15CB  1A400080           [0894] jmp        2            ; to [897]
15CF  244D510F           [0895] self       52  30  325  ; 766584623
15D3  224D0001           [0896] call       52  2   1  
15D7  1D8D1C00           [0897] getglobal  52  114      ; venusDroneBubble
15DB  180D0000           [0898] test       52      0    ; to [900] if true
15DF  1A400380           [0899] jmp        14           ; to [914]
15E3  1D8D0000           [0900] getglobal  52  2        ; 1074689893
15E7  520D0001           [0901] move       53  2      
15EB  228D0001           [0902] call       52  2   2  
15EF  184D0000           [0903] test       52      1    ; to [905] if false
15F3  1A400080           [0904] jmp        2            ; to [907]
15F7  240D4301           [0905] self       52  2   268  ; -725453761
15FB  224D0001           [0906] call       52  2   1  
15FF  1D8D0000           [0907] getglobal  52  2        ; 1074689893
1603  520D0000           [0908] move       53  0      
1607  228D0001           [0909] call       52  2   2  
160B  184D0000           [0910] test       52      1    ; to [912] if false
160F  1A400080           [0911] jmp        2            ; to [914]
1613  240D4300           [0912] self       52  0   268  ; -725453761
1617  224D0001           [0913] call       52  2   1  
161B  D7060000           [0914] loadbool   27  0   0    ; false
161F  1D8D0000           [0915] getglobal  52  2        ; 1074689893
1623  520D8001           [0916] move       53  3      
1627  228D0001           [0917] call       52  2   2  
162B  184D0000           [0918] test       52      1    ; to [920] if false
162F  1A800380           [0919] jmp        15           ; to [935]
1633  24CDDC01           [0920] self       52  3   371  ; 1146685999
1637  A40DDD01           [0921] self       54  3   372  ; -704974830
163B  A28D0001           [0922] call       54  2   2  
163F  DDCD0600           [0923] getglobal  55  27       ; bubbleCapDeactivatedBone
1643  224D0002           [0924] call       52  4   1  
1647  244DDD01           [0925] self       52  3   373  ; -1484030041
164B  9D8D1D00           [0926] getglobal  54  118      ; bubbleCapStartingOffset
164F  DDCD1D00           [0927] getglobal  55  119      ; bubbleCapStartingRotation
1653  224D0002           [0928] call       52  4   1  
1657  240DDE01           [0929] self       52  3   376  ; -1302048094
165B  9DCD0700           [0930] getglobal  54  31       ; -332969190
165F  D94D1E00           [0931] loadk      55  121      ; "CloseDrone"
1663  A28D0001           [0932] call       54  2   2  
1667  D70D0000           [0933] loadbool   55  0   0    ; false
166B  224D0002           [0934] call       52  4   1  
166F  1D8D0000           [0935] getglobal  52  2        ; 1074689893
1673  520D8002           [0936] move       53  5      
1677  228D0001           [0937] call       52  2   2  
167B  184D0000           [0938] test       52      1    ; to [940] if false
167F  1AC00080           [0939] jmp        4            ; to [944]
1683  244DC802           [0940] self       52  5   289  ; 2109594123
1687  970D0000           [0941] loadbool   54  0   0    ; false
168B  D70D8000           [0942] loadbool   55  1   0    ; true
168F  224D0002           [0943] call       52  4   1  
1693  1D8D0000           [0944] getglobal  52  2        ; 1074689893
1697  520D0003           [0945] move       53  6      
169B  228D0001           [0946] call       52  2   2  
169F  184D0000           [0947] test       52      1    ; to [949] if false
16A3  1A401280           [0948] jmp        74           ; to [1023]
16A7  244D4803           [0949] self       52  6   289  ; 2109594123
16AB  970D0000           [0950] loadbool   54  0   0    ; false
16AF  D70D8000           [0951] loadbool   55  1   0    ; true
16B3  224D0002           [0952] call       52  4   1  
16B7  1A001180           [0953] jmp        69           ; to [1023]
16BB  1D8D1100           [0954] getglobal  52  70       ; domeMinScale
fail op	21
16BF  15400C1A           [0955] concat     0   52  49 
16C3  1A401080           [0956] jmp        66           ; to [1023]
16C7  D8460000           [0957] test       27      1    ; to [959] if false
16CB  1AC00F80           [0958] jmp        64           ; to [1023]
16CF  1D8D0200           [0959] getglobal  52  10       ; gRegion
16D3  24CD5B1A           [0960] self       52  52  367  ; -1110225722
16D7  9D8D1E00           [0961] getglobal  54  122      ; createFx
16DB  E44D5C00           [0962] self       55  0   369  ; 1839670529
16DF  E28D0001           [0963] call       55  2   2  
16E3  1D4E0700           [0964] getglobal  56  29       ; ZERO_ROTATION
16E7  520E0004           [0965] move       57  8      
16EB  228D0003           [0966] call       52  6   2  
16EF  640D4000           [0967] self       53  0   256  ; -703571861
16F3  D90D0100           [0968] loadk      55  4        ; 0
16F7  624D8001           [0969] call       53  3   1  
16FB  644D4801           [0970] self       53  2   289  ; 2109594123
16FF  D70D8000           [0971] loadbool   55  1   0    ; true
1703  624D8001           [0972] call       53  3   1  
1707  648D4600           [0973] self       53  0   282  ; -1421644046
170B  DDCD1E00           [0974] getglobal  55  123      ; attachedSoundType
170F  1D0E1000           [0975] getglobal  56  64       ; EMPTY_SYMBOL
1713  628D0002           [0976] call       53  4   2  
1717  5208801A           [0977] move       33  53     
171B  5D8D0000           [0978] getglobal  53  2        ; 1074689893
171F  920D000F           [0979] move       54  30     
1723  628D0001           [0980] call       53  2   2  
1727  584D0000           [0981] test       53      1    ; to [983] if false
172B  1A400080           [0982] jmp        2            ; to [985]
172F  640D5F0F           [0983] self       53  30  380  ; -974578778
1733  624D0001           [0984] call       53  2   1  
1737  D7068000           [0985] loadbool   27  1   0    ; true
173B  640D4E01           [0986] self       53  2   312  ; 1992436207
173F  D20D8007           [0987] move       55  15     
1743  624D8001           [0988] call       53  3   1  
1747  5D8D0000           [0989] getglobal  53  2        ; 1074689893
174B  920D8001           [0990] move       54  3      
174F  628D0001           [0991] call       53  2   2  
1753  584D0000           [0992] test       53      1    ; to [994] if false
1757  1A800280           [0993] jmp        11           ; to [1005]
175B  64CDDC01           [0994] self       53  3   371  ; 1146685999
175F  E40DDD01           [0995] self       55  3   372  ; -704974830
1763  E28D0001           [0996] call       55  2   2  
1767  1DCE1700           [0997] getglobal  56  95       ; bubbleCapActivatedBone
176B  624D0002           [0998] call       53  4   1  
176F  640DDE01           [0999] self       53  3   376  ; -1302048094
1773  DDCD0700           [1000] getglobal  55  31       ; -332969190
1777  194E1F00           [1001] loadk      56  125      ; "OpenDrone"
177B  E28D0001           [1002] call       55  2   2  
177F  170E0000           [1003] loadbool   56  0   0    ; false
1783  624D0002           [1004] call       53  4   1  
1787  5D8D0000           [1005] getglobal  53  2        ; 1074689893
178B  920D8002           [1006] move       54  5      
178F  628D0001           [1007] call       53  2   2  
1793  584D0000           [1008] test       53      1    ; to [1010] if false
1797  1AC00080           [1009] jmp        4            ; to [1014]
179B  644DC802           [1010] self       53  5   289  ; 2109594123
179F  D70D8000           [1011] loadbool   55  1   0    ; true
17A3  170E8000           [1012] loadbool   56  1   0    ; true
17A7  624D0002           [1013] call       53  4   1  
17AB  5D8D0000           [1014] getglobal  53  2        ; 1074689893
17AF  920D0003           [1015] move       54  6      
17B3  628D0001           [1016] call       53  2   2  
17B7  584D0000           [1017] test       53      1    ; to [1019] if false
17BB  1AC00080           [1018] jmp        4            ; to [1023]
17BF  644D4803           [1019] self       53  6   289  ; 2109594123
17C3  D70D8000           [1020] loadbool   55  1   0    ; true
17C7  170E8000           [1021] loadbool   56  1   0    ; true
17CB  624D0002           [1022] call       53  4   1  
17CF  92048018           [1023] move       18  49     
17D3  5D8D1F00           [1024] getglobal  53  126      ; destroyAtMaxSize
17D7  580D0000           [1025] test       53      0    ; to [1027] if true
17DB  1AC00180           [1026] jmp        8            ; to [1035]
fail op	35
17DF  23800309           [1027] close      0  
17E3  1A400180           [1028] jmp        6            ; to [1035]
17E7  5DCD1400           [1029] getglobal  53  83       ; 1289681407
17EB  628D8000           [1030] call       53  1   2  
17EF  8D480D11           [1031] sub        34  34  53 
fail op	33
17F3  21004111           [1032] tforloop   0       260  ; to [1034] if exit
17F7  1A000080           [1033] jmp        1            ; to [1035]
17FB  1AC01480           [1034] jmp        84           ; to [1119]
17FF  5D8D0000           [1035] getglobal  53  2        ; 1074689893
1803  9DCD0500           [1036] getglobal  54  23       ; bubbleCapType
1807  628D0001           [1037] call       53  2   2  
180B  584D0000           [1038] test       53      1    ; to [1040] if false
180F  1A801180           [1039] jmp        71           ; to [1111]
1813  5D8D0000           [1040] getglobal  53  2        ; 1074689893
1817  9D0D0600           [1041] getglobal  54  24       ; bubbleCapDamageProxyType
181B  628D0001           [1042] call       53  2   2  
181F  584D0000           [1043] test       53      1    ; to [1045] if false
1823  1A401080           [1044] jmp        66           ; to [1111]
1827  5D8D0000           [1045] getglobal  53  2        ; 1074689893
182B  920D8001           [1046] move       54  3      
182F  628D0001           [1047] call       53  2   2  
1833  584D0000           [1048] test       53      1    ; to [1050] if false
1837  1A400380           [1049] jmp        14           ; to [1064]
183B  5D8D0000           [1050] getglobal  53  2        ; 1074689893
183F  920D0002           [1051] move       54  4      
1843  628D0001           [1052] call       53  2   2  
1847  584D0000           [1053] test       53      1    ; to [1055] if false
184B  1A000280           [1054] jmp        9            ; to [1064]
184F  5D8D0200           [1055] getglobal  53  10       ; gRegion
1853  64CDC21A           [1056] self       53  53  267  ; -1520831144
1857  628D0001           [1057] call       53  2   2  
185B  580D0000           [1058] test       53      0    ; to [1060] if true
185F  1A800180           [1059] jmp        7            ; to [1067]
1863  640D4B02           [1060] self       53  4   300  ; 796523475
1867  628D0001           [1061] call       53  2   2  
fail op	33
186B  2100C11A           [1062] tforloop   0       260  ; to [1064] if exit
186F  1A800080           [1063] jmp        3            ; to [1067]
1873  17038000           [1064] loadbool   12  1   0    ; true
1877  1A000D80           [1065] jmp        53           ; to [1119]
187B  1AC00A80           [1066] jmp        44           ; to [1111]
187F  5D8D0200           [1067] getglobal  53  10       ; gRegion
1883  64CDDF1A           [1068] self       53  53  383  ; 65205951
1887  628D0001           [1069] call       53  2   2  
188B  A40DCB01           [1070] self       54  3   300  ; 796523475
188F  A28D0001           [1071] call       54  2   2  
1893  8D8D8D07           [1072] sub        54  15  54 
1897  E40D4B02           [1073] self       55  4   300  ; 796523475
189B  E28D0001           [1074] call       55  2   2  
189F  0D8E8D1B           [1075] sub        56  55  54 
fail op	33
18A3  2100411C           [1076] tforloop   0       260  ; to [1078] if exit
18A7  1A400280           [1077] jmp        10           ; to [1088]
18AB  5D8E0200           [1078] getglobal  57  10       ; gRegion
18AF  64CEC21C           [1079] self       57  57  267  ; -1520831144
18B3  628E0001           [1080] call       57  2   2  
18B7  580E0000           [1081] test       57      0    ; to [1083] if true
18BB  1A000180           [1082] jmp        5            ; to [1088]
18BF  640E4302           [1083] self       57  4   268  ; -725453761
18C3  624E0001           [1084] call       57  2   1  
18C7  17038000           [1085] loadbool   12  1   0    ; true
18CB  1AC00780           [1086] jmp        32           ; to [1119]
18CF  1A400380           [1087] jmp        14           ; to [1102]
18D3  5D8E0000           [1088] getglobal  57  2        ; 1074689893
18D7  920E801A           [1089] move       58  53     
18DB  628E0001           [1090] call       57  2   2  
18DF  584E0000           [1091] test       57      1    ; to [1093] if false
18E3  1A000280           [1092] jmp        9            ; to [1102]
fail op	21
18E7  15800D82           [1093] concat     0   260 54 
18EB  1A800180           [1094] jmp        7            ; to [1102]
18EF  4C830DC0           [1095] settable   13  384 54   ; "baseAmount"
18F3  644EE006           [1096] self       57  13  385  ; -420630141
18F7  D20E801A           [1097] move       59  53     
18FB  624E8001           [1098] call       57  3   1  
18FF  648E6002           [1099] self       57  4   386  ; 1193457265
1903  D20E8006           [1100] move       59  13     
1907  624E8001           [1101] call       57  3   1  
190B  5D8E0000           [1102] getglobal  57  2        ; 1074689893
190F  920E801A           [1103] move       58  53     
1913  628E0001           [1104] call       57  2   2  
1917  584E0000           [1105] test       57      1    ; to [1107] if false
191B  1AC00080           [1106] jmp        4            ; to [1111]
191F  640ECE01           [1107] self       57  3   312  ; 1992436207
1923  D20E8007           [1108] move       59  15     
1927  170F8000           [1109] loadbool   60  1   0    ; true
192B  624E0002           [1110] call       57  4   1  
192F  5DCE0000           [1111] getglobal  57  3        ; 538022378
1933  990E0100           [1112] loadk      58  4        ; 0
1937  624E0001           [1113] call       57  2   1  
193B  530E0000           [1114] getupval   57  0      
193F  920E0001           [1115] move       58  2      
1943  628E0001           [1116] call       57  2   2  
1947  9200801C           [1117] move       2   57     
194B  1A405E7F           [1118] jmp        -646         ; to [473]
194F  5D8E0200           [1119] getglobal  57  10       ; gRegion
1953  64CEC21C           [1120] self       57  57  267  ; -1520831144
1957  628E0001           [1121] call       57  2   2  
195B  580E0000           [1122] test       57      0    ; to [1124] if true
195F  1A400D80           [1123] jmp        54           ; to [1178]
1963  5D8E0000           [1124] getglobal  57  2        ; 1074689893
1967  920E0000           [1125] move       58  0      
196B  628E0001           [1126] call       57  2   2  
196F  584E0000           [1127] test       57      1    ; to [1129] if false
1973  1A000C80           [1128] jmp        49           ; to [1178]
1977  5D8E0000           [1129] getglobal  57  2        ; 1074689893
197B  920E8000           [1130] move       58  1      
197F  628E0001           [1131] call       57  2   2  
1983  584E0000           [1132] test       57      1    ; to [1134] if false
1987  1A800580           [1133] jmp        23           ; to [1157]
198B  648EC100           [1134] self       57  1   262  ; -1957065004
198F  DD0E1300           [1135] getglobal  59  76       ; gAvatarType
1993  628E8001           [1136] call       57  3   2  
1997  580E0000           [1137] test       57      0    ; to [1139] if true
199B  1AC00180           [1138] jmp        8            ; to [1147]
199F  644ED300           [1139] self       57  1   333  ; 1511086594
19A3  628E0001           [1140] call       57  2   2  
19A7  584E0000           [1141] test       57      1    ; to [1143] if false
19AB  1A400380           [1142] jmp        14           ; to [1157]
19AF  648ED300           [1143] self       57  1   334  ; -1519595333
19B3  628E0001           [1144] call       57  2   2  
19B7  584E0000           [1145] test       57      1    ; to [1147] if false
19BB  1A400280           [1146] jmp        10           ; to [1157]
19BF  5D8E0000           [1147] getglobal  57  2        ; 1074689893
19C3  920E0001           [1148] move       58  2      
19C7  628E0001           [1149] call       57  2   2  
19CB  584E0000           [1150] test       57      1    ; to [1152] if false
19CF  1A000180           [1151] jmp        5            ; to [1157]
19D3  5D8E1F00           [1152] getglobal  57  126      ; destroyAtMaxSize
19D7  584E0000           [1153] test       57      1    ; to [1155] if false
19DB  1A400080           [1154] jmp        2            ; to [1157]
19DF  18030000           [1155] test       12      0    ; to [1157] if true
19E3  1A000580           [1156] jmp        21           ; to [1178]
19E7  5D8E0000           [1157] getglobal  57  2        ; 1074689893
19EB  920E0001           [1158] move       58  2      
19EF  628E0001           [1159] call       57  2   2  
19F3  584E0000           [1160] test       57      1    ; to [1162] if false
19F7  1A400080           [1161] jmp        2            ; to [1164]
19FB  640E4301           [1162] self       57  2   268  ; -725453761
19FF  624E0001           [1163] call       57  2   1  
1A03  5D8E1F00           [1164] getglobal  57  126      ; destroyAtMaxSize
1A07  580E0000           [1165] test       57      0    ; to [1167] if true
1A0B  1A000280           [1166] jmp        9            ; to [1176]
1A0F  644E4100           [1167] self       57  0   261  ; -1870903749
1A13  628E0001           [1168] call       57  2   2  
1A17  A40E4300           [1169] self       58  0   268  ; -725453761
1A1B  A24E0001           [1170] call       58  2   1  
1A1F  580E0000           [1171] test       57      0    ; to [1173] if true
1A23  1A000180           [1172] jmp        5            ; to [1178]
1A27  A40EC31C           [1173] self       58  57  268  ; -725453761
1A2B  A24E0001           [1174] call       58  2   1  
1A2F  1A400080           [1175] jmp        2            ; to [1178]
1A33  A40E4300           [1176] self       58  0   268  ; -725453761
1A37  A24E0001           [1177] call       58  2   1  
1A3B  9D8E0000           [1178] getglobal  58  2        ; 1074689893
1A3F  D20E8001           [1179] move       59  3      
1A43  A28E0001           [1180] call       58  2   2  
1A47  984E0000           [1181] test       58      1    ; to [1183] if false
1A4B  1A400080           [1182] jmp        2            ; to [1185]
1A4F  A40EC301           [1183] self       58  3   268  ; -725453761
1A53  A24E0001           [1184] call       58  2   1  
1A57  9D8E0000           [1185] getglobal  58  2        ; 1074689893
1A5B  D20E0002           [1186] move       59  4      
1A5F  A28E0001           [1187] call       58  2   2  
1A63  984E0000           [1188] test       58      1    ; to [1190] if false
1A67  1A400080           [1189] jmp        2            ; to [1192]
1A6B  A40E4302           [1190] self       58  4   268  ; -725453761
1A6F  A24E0001           [1191] call       58  2   1  
1A73  9D8E0000           [1192] getglobal  58  2        ; 1074689893
1A77  D20E8002           [1193] move       59  5      
1A7B  A28E0001           [1194] call       58  2   2  
1A7F  984E0000           [1195] test       58      1    ; to [1197] if false
1A83  1A400080           [1196] jmp        2            ; to [1199]
1A87  A40EC302           [1197] self       58  5   268  ; -725453761
1A8B  A24E0001           [1198] call       58  2   1  
1A8F  9D8E0000           [1199] getglobal  58  2        ; 1074689893
1A93  D20E0003           [1200] move       59  6      
1A97  A28E0001           [1201] call       58  2   2  
1A9B  984E0000           [1202] test       58      1    ; to [1204] if false
1A9F  1A400080           [1203] jmp        2            ; to [1206]
1AA3  A40E4303           [1204] self       58  6   268  ; -725453761
1AA7  A24E0001           [1205] call       58  2   1  
1AAB  9D0E0F00           [1206] getglobal  58  60       ; disableAbilities
1AAF  8A0E001D           [1207] len        58  58     
fail op	21
1AB3  15800E82           [1208] concat     0   260 58 
1AB7  1A400180           [1209] jmp        6            ; to [1216]
1ABB  9DCE0000           [1210] getglobal  58  3        ; 538022378
1ABF  D9CE2000           [1211] loadk      59  131      ; -51
1AC3  A24E0001           [1212] call       58  2   1  
1AC7  9D4E0F00           [1213] getglobal  58  61       ; _T
1ACB  8E8E4F1D           [1214] gettable   58  58  318  ; "nullifierAbilities"
1ACF  8C0EE10E           [1215] settable   58  29  388  ; nil
1AD3  9D8E0000           [1216] getglobal  58  2        ; 1074689893
1AD7  D20E000F           [1217] move       59  30     
1ADB  A28E0001           [1218] call       58  2   2  
1ADF  984E0000           [1219] test       58      1    ; to [1221] if false
1AE3  1A800380           [1220] jmp        15           ; to [1236]
1AE7  9D8E0000           [1221] getglobal  58  2        ; 1074689893
1AEB  DD4E0B00           [1222] getglobal  59  45       ; gGameRules
1AEF  A28E0001           [1223] call       58  2   2  
1AF3  984E0000           [1224] test       58      1    ; to [1226] if false
1AF7  1A400280           [1225] jmp        10           ; to [1236]
1AFB  9D4E0B00           [1226] getglobal  58  45       ; gGameRules
1AFF  A48E411D           [1227] self       58  58  262  ; -1957065004
1B03  1D8F0B00           [1228] getglobal  60  46       ; gLotusBaseGameRulesType
1B07  A28E8001           [1229] call       58  3   2  
1B0B  980E0000           [1230] test       58      0    ; to [1232] if true
1B0F  1AC00080           [1231] jmp        4            ; to [1236]
1B13  9D4E0B00           [1232] getglobal  58  45       ; gGameRules
1B17  A44E611D           [1233] self       58  58  389  ; -1040072721
1B1B  120F000F           [1234] move       60  30     
1B1F  A24E8001           [1235] call       58  3   1  
1B23  1E008000           [1236] return     0   1      
                         * constants:
1B28  01                 sizek (134)
1B29  01                 const type 3
1B2A  6B5810D6           const [0]: (-703571861)
1B2E  03                 const type 3
1B2F  0000803F           const [1]: (0)
1B33  01                 const type 3
1B34  65770E40           const [2]: (1074689893)
1B38  01                 const type 3
1B39  EA911120           const [3]: (538022378)
1B3D  03                 const type 3
1B3E  00000000           const [4]: (0)
1B42  01                 const type 3
1B43  3B467C90           const [5]: (-1870903749)
1B47  01                 const type 3
1B48  D48E598B           const [6]: (-1957065004)
1B4C  04                 const type 4
1B4D  14                 string size (20)
1B4E  674C6F7475734E70+  "gLotusNp"
1B56  6341766174617254+  "cAvatarT"
1B5E  79706500           "ype\0"
                         const [7]: "gLotusNpcAvatarType"
1B62  01                 const type 3
1B63  68C51D9F           const [8]: (-1625438872)
1B67  04                 const type 4
1B68  0E                 string size (14)
1B69  636F6C6C6973696F+  "collisio"
1B71  6E5479706500       "nType\0"
                         const [9]: "collisionType"
1B77  04                 const type 4
1B78  08                 string size (8)
1B79  67526567696F6E00   "gRegion\0"
                         const [10]: "gRegion"
1B81  01                 const type 3
1B82  58F559A5           const [11]: (-1520831144)
1B86  01                 const type 3
1B87  3F74C2D4           const [12]: (-725453761)
1B8B  04                 const type 4
1B8C  11                 string size (17)
1B8D  674C6F7475734176+  "gLotusAv"
1B95  6174617254797065+  "atarType"
1B9D  00                 "\0"
                         const [13]: "gLotusAvatarType"
1B9E  04                 const type 4
1B9F  0D                 string size (13)
1BA0  67526167646F6C6C+  "gRagdoll"
1BA8  5479706500         "Type\0"
                         const [14]: "gRagdollType"
1BAD  01                 const type 3
1BAE  81F4CA13           const [15]: (332067969)
1BB2  01                 const type 3
1BB3  7FB7BA07           const [16]: (129677183)
1BB7  01                 const type 3
1BB8  1FD0B58D           const [17]: (-1917464545)
1BBC  01                 const type 3
1BBD  8F92A06E           const [18]: (1856017039)
1BC1  04                 const type 4
1BC2  07                 string size (7)
1BC3  456E67696E6500     "Engine\0"
                         const [19]: "Engine"
1BCA  04                 const type 4
1BCB  0A                 string size (10)
1BCC  4D41494E5F48414E+  "MAIN_HAN"
1BD4  4400               "D\0"
                         const [20]: "MAIN_HAND"
1BD6  04                 const type 4
1BD7  11                 string size (17)
1BD8  674C6F7475735765+  "gLotusWe"
1BE0  61706F6E54797065+  "aponType"
1BE8  00                 "\0"
                         const [21]: "gLotusWeaponType"
1BE9  01                 const type 3
1BEA  4FF9B286           const [22]: (-2035091121)
1BEE  04                 const type 4
1BEF  0E                 string size (14)
1BF0  627562626C654361+  "bubbleCa"
1BF8  705479706500       "pType\0"
                         const [23]: "bubbleCapType"
1BFE  04                 const type 4
1BFF  19                 string size (25)
1C00  627562626C654361+  "bubbleCa"
1C08  7044616D61676550+  "pDamageP"
1C10  726F787954797065+  "roxyType"
1C18  00                 "\0"
                         const [24]: "bubbleCapDamageProxyType"
1C19  04                 const type 4
1C1A  12                 string size (18)
1C1B  627562626C654361+  "bubbleCa"
1C23  704265616D547970+  "pBeamTyp"
1C2B  6500               "e\0"
                         const [25]: "bubbleCapBeamType"
1C2D  01                 const type 3
1C2E  F26E43AB           const [26]: (-1421644046)
1C32  04                 const type 4
1C33  19                 string size (25)
1C34  627562626C654361+  "bubbleCa"
1C3C  7044656163746976+  "pDeactiv"
1C44  61746564426F6E65+  "atedBone"
1C4C  00                 "\0"
                         const [27]: "bubbleCapDeactivatedBone"
1C4D  04                 const type 4
1C4E  1C                 string size (28)
1C4F  627562626C654361+  "bubbleCa"
1C57  704265616D537461+  "pBeamSta"
1C5F  7274696E674F6666+  "rtingOff"
1C67  73657400           "set\0"
                         const [28]: "bubbleCapBeamStartingOffset"
1C6B  04                 const type 4
1C6C  0E                 string size (14)
1C6D  5A45524F5F524F54+  "ZERO_ROT"
1C75  4154494F4E00       "ATION\0"
                         const [29]: "ZERO_ROTATION"
1C7B  01                 const type 3
1C7C  03F5ACE7           const [30]: (-408095485)
1C80  01                 const type 3
1C81  1A4B27EC           const [31]: (-332969190)
1C85  04                 const type 4
1C86  0D                 string size (13)
1C87  47414D455F43315F+  "GAME_C1_"
1C8F  524F4F5400         "ROOT\0"
                         const [32]: "GAME_C1_ROOT"
1C94  01                 const type 3
1C95  0BDABD7D           const [33]: (2109594123)
1C99  04                 const type 4
1C9A  12                 string size (18)
1C9B  636170416E696D43+  "capAnimC"
1CA3  6C6F7365644C6F6F+  "losedLoo"
1CAB  7000               "p\0"
                         const [34]: "capAnimClosedLoop"
1CAD  01                 const type 3
1CAE  F5EA977A           const [35]: (2056776437)
1CB2  04                 const type 4
1CB3  0D                 string size (13)
1CB4  6261636B7061636B+  "backpack"
1CBC  5479706500         "Type\0"
                         const [36]: "backpackType"
1CC1  04                 const type 4
1CC2  11                 string size (17)
1CC3  6261636B7061636B+  "backpack"
1CCB  476C6F7754797065+  "GlowType"
1CD3  00                 "\0"
                         const [37]: "backpackGlowType"
1CD4  01                 const type 3
1CD5  531F7FDD           const [38]: (-578871469)
1CD9  01                 const type 3
1CDA  22D5D247           const [39]: (1204999458)
1CDE  01                 const type 3
1CDF  26D21EFA           const [40]: (-98643418)
1CE3  01                 const type 3
1CE4  F85AA4C4           const [41]: (-995861768)
1CE8  04                 const type 4
1CE9  10                 string size (16)
1CEA  44545F4845414C54+  "DT_HEALT"
1CF2  485F445241494E00   "H_DRAIN\0"
                         const [42]: "DT_HEALTH_DRAIN"
1CFA  01                 const type 3
1CFB  92B8B5EC           const [43]: (-323635054)
1CFF  01                 const type 3
1D00  D3FB792F           const [44]: (796523475)
1D04  04                 const type 4
1D05  0B                 string size (11)
1D06  6747616D6552756C+  "gGameRul"
1D0E  657300             "es\0"
                         const [45]: "gGameRules"
1D11  04                 const type 4
1D12  18                 string size (24)
1D13  674C6F7475734261+  "gLotusBa"
1D1B  736547616D655275+  "seGameRu"
1D23  6C65735479706500   "lesType\0"
                         const [46]: "gLotusBaseGameRulesType"
1D2B  01                 const type 3
1D2C  497363B8           const [47]: (-1201441975)
1D30  04                 const type 4
1D31  21                 string size (33)
1D32  636170417474656E+  "capAtten"
1D3A  756174654865616C+  "uateHeal"
1D42  7468576974684E70+  "thWithNp"
1D4A  635363616C696E67+  "cScaling"
1D52  00                 "\0"
                         const [48]: "capAttenuateHealthWithNpcScaling"
1D53  01                 const type 3
1D54  93DDD9AB           const [49]: (-1411785325)
1D58  01                 const type 3
1D59  2EA13276           const [50]: (1983029550)
1D5D  04                 const type 4
1D5E  0E                 string size (14)
1D5F  6D696E456E656D79+  "minEnemy"
1D67  4C6576656C00       "Level\0"
                         const [51]: "minEnemyLevel"
1D6D  01                 const type 3
1D6E  0377BB1E           const [52]: (515602179)
1D72  04                 const type 4
1D73  0B                 string size (11)
1D74  4E50435F4845414C+  "NPC_HEAL"
1D7C  544800             "TH\0"
                         const [53]: "NPC_HEALTH"
1D7F  04                 const type 4
1D80  0B                 string size (11)
1D81  646966666963756C+  "difficul"
1D89  747900             "ty\0"
                         const [54]: "difficulty"
1D8C  01                 const type 3
1D8D  70731489           const [55]: (-1995148432)
1D91  01                 const type 3
1D92  EF29C276           const [56]: (1992436207)
1D96  04                 const type 4
1D97  0C                 string size (12)
1D98  73697A654F6E5370+  "sizeOnSp"
1DA0  61776E00           "awn\0"
                         const [57]: "sizeOnSpawn"
1DA4  04                 const type 4
1DA5  13                 string size (19)
1DA6  67726F7774684465+  "growthDe"
1DAE  6C61794F6E537061+  "layOnSpa"
1DB6  776E00             "wn\0"
                         const [58]: "growthDelayOnSpawn"
1DB9  01                 const type 3
1DBA  72058234           const [59]: (880936306)
1DBE  04                 const type 4
1DBF  11                 string size (17)
1DC0  64697361626C6541+  "disableA"
1DC8  62696C6974696573+  "bilities"
1DD0  00                 "\0"
                         const [60]: "disableAbilities"
1DD1  04                 const type 4
1DD2  03                 string size (3)
1DD3  5F5400             "_T\0"
                         const [61]: "_T"
1DD6  04                 const type 4
1DD7  13                 string size (19)
1DD8  6E756C6C69666965+  "nullifie"
1DE0  724162696C697469+  "rAbiliti"
1DE8  657300             "es\0"
                         const [62]: "nullifierAbilities"
1DEB  04                 const type 4
1DEC  12                 string size (18)
1DED  7363726970745472+  "scriptTr"
1DF5  6967676572547970+  "iggerTyp"
1DFD  6500               "e\0"
                         const [63]: "scriptTriggerType"
1DFF  04                 const type 4
1E00  0D                 string size (13)
1E01  454D5054595F5359+  "EMPTY_SY"
1E09  4D424F4C00         "MBOL\0"
                         const [64]: "EMPTY_SYMBOL"
1E0E  04                 const type 4
1E0F  0C                 string size (12)
1E10  5A45524F5F564543+  "ZERO_VEC"
1E18  544F5200           "TOR\0"
                         const [65]: "ZERO_VECTOR"
1E1C  04                 const type 4
1E1D  11                 string size (17)
1E1E  64657374726F7941+  "destroyA"
1E26  744D696E53697A65+  "tMinSize"
1E2E  00                 "\0"
                         const [66]: "destroyAtMinSize"
1E2F  01                 const type 3
1E30  77E90F81           const [67]: (-2129663625)
1E34  01                 const type 3
1E35  3B3FBE52           const [68]: (1388199739)
1E39  01                 const type 3
1E3A  2F27B12D           const [69]: (766584623)
1E3E  04                 const type 4
1E3F  0D                 string size (13)
1E40  646F6D654D696E53+  "domeMinS"
1E48  63616C6500         "cale\0"
                         const [70]: "domeMinScale"
1E4D  01                 const type 3
1E4E  A4EC67E7           const [71]: (-412619612)
1E52  01                 const type 3
1E53  08F451B5           const [72]: (-1252920312)
1E57  04                 const type 4
1E58  15                 string size (21)
1E59  64657374726F7941+  "destroyA"
1E61  744D617853697A65+  "tMaxSize"
1E69  54696D6500         "Time\0"
                         const [73]: "destroyAtMaxSizeTime"
1E6E  04                 const type 4
1E6F  10                 string size (16)
1E70  6742617365417661+  "gBaseAva"
1E78  7461725479706500   "tarType\0"
                         const [74]: "gBaseAvatarType"
1E80  01                 const type 3
1E81  00971C22           const [75]: (572299008)
1E85  04                 const type 4
1E86  0C                 string size (12)
1E87  6741766174617254+  "gAvatarT"
1E8F  79706500           "ype\0"
                         const [76]: "gAvatarType"
1E93  01                 const type 3
1E94  025A115A           const [77]: (1511086594)
1E98  01                 const type 3
1E99  BBD06CA5           const [78]: (-1519595333)
1E9D  01                 const type 3
1E9E  22AFF6BD           const [79]: (-1107906782)
1EA2  04                 const type 4
1EA3  05                 string size (5)
1EA4  6D61746800         "math\0"
                         const [80]: "math"
1EA9  01                 const type 3
1EAA  2A71F965           const [81]: (1710846250)
1EAE  01                 const type 3
1EAF  3810018B           const [82]: (-1962864584)
1EB3  01                 const type 3
1EB4  FFF9DE4C           const [83]: (1289681407)
1EB8  04                 const type 4
1EB9  15                 string size (21)
1EBA  6E65656473416765+  "needsAge"
1EC2  6E74426173656443+  "ntBasedC"
1ECA  6865636B00         "heck\0"
                         const [84]: "needsAgentBasedCheck"
1ECF  01                 const type 3
1ED0  4EE8B5B7           const [85]: (-1212815282)
1ED4  01                 const type 3
1ED5  F28CB1D3           const [86]: (-743338766)
1ED9  04                 const type 4
1EDA  0D                 string size (13)
1EDB  64616D6167655769+  "damageWi"
1EE3  6E646F7700         "ndow\0"
                         const [87]: "damageWindow"
1EE8  04                 const type 4
1EE9  0A                 string size (10)
1EEA  64616D6167654D69+  "damageMi"
1EF2  6E00               "n\0"
                         const [88]: "damageMin"
1EF4  04                 const type 4
1EF5  0A                 string size (10)
1EF6  64616D6167654D61+  "damageMa"
1EFE  7800               "x\0"
                         const [89]: "damageMax"
1F00  01                 const type 3
1F01  9FE1FB48           const [90]: (1224466847)
1F05  04                 const type 4
1F06  0F                 string size (15)
1F07  7363616C65446563+  "scaleDec"
1F0F  72656D656E7400     "rement\0"
                         const [91]: "scaleDecrement"
1F16  01                 const type 3
1F17  BD58FDF8           const [92]: (-117614403)
1F1B  04                 const type 4
1F1C  1A                 string size (26)
1F1D  6361704865696768+  "capHeigh"
1F25  7441646A75737473+  "tAdjusts"
1F2D  546F4365696C696E+  "ToCeilin"
1F35  6700               "g\0"
                         const [93]: "capHeightAdjustsToCeiling"
1F37  01                 const type 3
1F38  0416B0A2           const [94]: (-1565518332)
1F3C  04                 const type 4
1F3D  17                 string size (23)
1F3E  627562626C654361+  "bubbleCa"
1F46  7041637469766174+  "pActivat"
1F4E  6564426F6E6500     "edBone\0"
                         const [95]: "bubbleCapActivatedBone"
1F55  04                 const type 4
1F56  15                 string size (21)
1F57  6361704F66667365+  "capOffse"
1F5F  7442794D65736853+  "tByMeshS"
1F67  63616C6500         "cale\0"
                         const [96]: "capOffsetByMeshScale"
1F6C  04                 const type 4
1F6D  1A                 string size (26)
1F6E  6365696C696E6752+  "ceilingR"
1F76  6179636173744578+  "aycastEx"
1F7E  7472614F66667365+  "traOffse"
1F86  7400               "t\0"
                         const [97]: "ceilingRaycastExtraOffset"
1F88  01                 const type 3
1F89  9C9C8D90           const [98]: (-1869767524)
1F8D  04                 const type 4
1F8E  1A                 string size (26)
1F8F  6365696C696E6752+  "ceilingR"
1F97  6179636173744967+  "aycastIg"
1F9F  6E6F726554797065+  "noreType"
1FA7  7300               "s\0"
                         const [99]: "ceilingRaycastIgnoreTypes"
1FA9  01                 const type 3
1FAA  C87C3FF9           const [100]: (-113279800)
1FAE  04                 const type 4
1FAF  02                 string size (2)
1FB0  7900               "y\0"
                         const [101]: "y"
1FB2  03                 const type 3
1FB3  CDCC4C3E           const [102]: (-51)
1FB7  01                 const type 3
1FB8  198CC15C           const [103]: (1556188185)
1FBC  03                 const type 3
1FBD  0AD7A33C           const [104]: (10)
1FC1  01                 const type 3
1FC2  554B0393           const [105]: (-1828500651)
1FC6  04                 const type 4
1FC7  0D                 string size (13)
1FC8  67726F774C657270+  "growLerp"
1FD0  5261746500         "Rate\0"
                         const [106]: "growLerpRate"
1FD5  04                 const type 4
1FD6  0B                 string size (11)
1FD7  7363616C6544656C+  "scaleDel"
1FDF  617900             "ay\0"
                         const [107]: "scaleDelay"
1FE2  04                 const type 4
1FE3  0F                 string size (15)
1FE4  736872696E6B4C65+  "shrinkLe"
1FEC  72705261746500     "rpRate\0"
                         const [108]: "shrinkLerpRate"
1FF3  03                 const type 3
1FF4  0000003F           const [109]: (0)
1FF8  01                 const type 3
1FF9  925F7E6A           const [110]: (1786666898)
1FFD  01                 const type 3
1FFE  C64CD3BD           const [111]: (-1110225722)
2002  04                 const type 4
2003  0A                 string size (10)
2004  64657374726F7946+  "destroyF"
200C  7800               "x\0"
                         const [112]: "destroyFx"
200E  01                 const type 3
200F  0125A76D           const [113]: (1839670529)
2013  04                 const type 4
2014  11                 string size (17)
2015  76656E757344726F+  "venusDro"
201D  6E65427562626C65+  "neBubble"
2025  00                 "\0"
                         const [114]: "venusDroneBubble"
2026  01                 const type 3
2027  2F0A5944           const [115]: (1146685999)
202B  01                 const type 3
202C  12F0FAD5           const [116]: (-704974830)
2030  01                 const type 3
2031  A77F8BA7           const [117]: (-1484030041)
2035  04                 const type 4
2036  18                 string size (24)
2037  627562626C654361+  "bubbleCa"
203F  705374617274696E+  "pStartin"
2047  674F666673657400   "gOffset\0"
                         const [118]: "bubbleCapStartingOffset"
204F  04                 const type 4
2050  1A                 string size (26)
2051  627562626C654361+  "bubbleCa"
2059  705374617274696E+  "pStartin"
2061  67526F746174696F+  "gRotatio"
2069  6E00               "n\0"
                         const [119]: "bubbleCapStartingRotation"
206B  01                 const type 3
206C  A25264B2           const [120]: (-1302048094)
2070  04                 const type 4
2071  0B                 string size (11)
2072  436C6F736544726F+  "CloseDro"
207A  6E6500             "ne\0"
                         const [121]: "CloseDrone"
207D  04                 const type 4
207E  09                 string size (9)
207F  6372656174654678+  "createFx"
2087  00                 "\0"
                         const [122]: "createFx"
2088  04                 const type 4
2089  12                 string size (18)
208A  6174746163686564+  "attached"
2092  536F756E64547970+  "SoundTyp"
209A  6500               "e\0"
                         const [123]: "attachedSoundType"
209C  01                 const type 3
209D  A61BE9C5           const [124]: (-974578778)
20A1  04                 const type 4
20A2  0A                 string size (10)
20A3  4F70656E44726F6E+  "OpenDron"
20AB  6500               "e\0"
                         const [125]: "OpenDrone"
20AD  04                 const type 4
20AE  11                 string size (17)
20AF  64657374726F7941+  "destroyA"
20B7  744D617853697A65+  "tMaxSize"
20BF  00                 "\0"
                         const [126]: "destroyAtMaxSize"
20C0  01                 const type 3
20C1  BFF6E203           const [127]: (65205951)
20C5  04                 const type 4
20C6  0B                 string size (11)
20C7  62617365416D6F75+  "baseAmou"
20CF  6E7400             "nt\0"
                         const [128]: "baseAmount"
20D2  01                 const type 3
20D3  83B1EDE6           const [129]: (-420630141)
20D7  01                 const type 3
20D8  71B62247           const [130]: (1193457265)
20DC  03                 const type 3
20DD  CDCCCC3D           const [131]: (-51)
20E1  00                 const type 0
                         const [132]: nil
20E2  01                 const type 3
20E3  EFBF01C2           const [133]: (-1040072721)
                         * functions:
20E7  00                 sizep (0)
                         * lines:
20E9  09                 sizelineinfo (1236)
                         [pc] (line)
20EA  85                 [0001] (-123)
20EB  00                 [0002] (-123)
20EC  00                 [0003] (-123)
20ED  00                 [0004] (-121)
20EE  85                 [0005] (-120)
20EF  00                 [0006] (-120)
20F0  00                 [0007] (-120)
20F1  00                 [0008] (-120)
20F2  85                 [0009] (-120)
20F3  00                 [0010] (-120)
20F4  00                 [0011] (-120)
20F5  00                 [0012] (-120)
20F6  87                 [0013] (-120)
20F7  00                 [0014] (-120)
20F8  00                 [0015] (-120)
20F9  00                 [0016] (-120)
20FA  88                 [0017] (-119)
20FB  00                 [0018] (-119)
20FC  00                 [0019] (-119)
20FD  00                 [0020] (-118)
20FE  88                 [0021] (-118)
20FF  00                 [0022] (-118)
2100  00                 [0023] (-118)
2101  00                 [0024] (-118)
2102  88                 [0025] (-117)
2103  00                 [0026] (-117)
2104  00                 [0027] (-117)
2105  00                 [0028] (-116)
2106  88                 [0029] (-116)
2107  00                 [0030] (-116)
2108  00                 [0031] (-116)
2109  00                 [0032] (-116)
210A  88                 [0033] (-116)
210B  00                 [0034] (-116)
210C  00                 [0035] (-116)
210D  00                 [0036] (-116)
210E  88                 [0037] (-116)
210F  00                 [0038] (-116)
2110  00                 [0039] (-116)
2111  00                 [0040] (-116)
2112  88                 [0041] (-116)
2113  00                 [0042] (-116)
2114  00                 [0043] (-116)
2115  00                 [0044] (-113)
2116  88                 [0045] (-113)
2117  00                 [0046] (-113)
2118  00                 [0047] (-113)
2119  00                 [0048] (-111)
211A  88                 [0049] (-108)
211B  00                 [0050] (-108)
211C  00                 [0051] (-108)
211D  00                 [0052] (-108)
211E  88                 [0053] (-108)
211F  00                 [0054] (-107)
2120  00                 [0055] (-107)
2121  00                 [0056] (-107)
2122  88                 [0057] (-107)
2123  00                 [0058] (-107)
2124  00                 [0059] (-106)
2125  00                 [0060] (-106)
2126  88                 [0061] (-106)
2127  00                 [0062] (-106)
2128  00                 [0063] (-106)
2129  00                 [0064] (-105)
212A  89                 [0065] (-105)
212B  00                 [0066] (-103)
212C  00                 [0067] (-100)
212D  00                 [0068] (-100)
212E  89                 [0069] (-99)
212F  00                 [0070] (-99)
2130  00                 [0071] (-99)
2131  00                 [0072] (-99)
2132  89                 [0073] (-99)
2133  00                 [0074] (-98)
2134  00                 [0075] (-98)
2135  00                 [0076] (-97)
2136  8A                 [0077] (-97)
2137  00                 [0078] (-94)
2138  00                 [0079] (-91)
2139  00                 [0080] (-85)
213A  8A                 [0081] (-85)
213B  00                 [0082] (-85)
213C  00                 [0083] (-85)
213D  00                 [0084] (-85)
213E  8A                 [0085] (-84)
213F  00                 [0086] (-84)
2140  00                 [0087] (-83)
2141  00                 [0088] (-83)
2142  8A                 [0089] (-83)
2143  00                 [0090] (-83)
2144  00                 [0091] (-83)
2145  00                 [0092] (-82)
2146  8A                 [0093] (-82)
2147  00                 [0094] (-82)
2148  00                 [0095] (-78)
2149  00                 [0096] (-77)
214A  8B                 [0097] (-77)
214B  00                 [0098] (-77)
214C  00                 [0099] (-77)
214D  00                 [0100] (-76)
214E  8B                 [0101] (-76)
214F  00                 [0102] (-76)
2150  00                 [0103] (-76)
2151  00                 [0104] (-76)
2152  8B                 [0105] (-76)
2153  00                 [0106] (-76)
2154  00                 [0107] (-76)
2155  00                 [0108] (-76)
2156  8C                 [0109] (-76)
2157  00                 [0110] (-75)
2158  00                 [0111] (-75)
2159  00                 [0112] (-75)
215A  8C                 [0113] (-75)
215B  00                 [0114] (-75)
215C  00                 [0115] (-75)
215D  00                 [0116] (-75)
215E  8C                 [0117] (-75)
215F  00                 [0118] (-74)
2160  00                 [0119] (-74)
2161  00                 [0120] (-74)
2162  8C                 [0121] (-74)
2163  00                 [0122] (-74)
2164  00                 [0123] (-74)
2165  00                 [0124] (-74)
2166  8C                 [0125] (-74)
2167  00                 [0126] (-74)
2168  00                 [0127] (-74)
2169  00                 [0128] (-73)
216A  8C                 [0129] (-73)
216B  00                 [0130] (-72)
216C  00                 [0131] (-72)
216D  00                 [0132] (-72)
216E  8C                 [0133] (-72)
216F  00                 [0134] (-72)
2170  00                 [0135] (-72)
2171  00                 [0136] (-72)
2172  8C                 [0137] (-72)
2173  00                 [0138] (-72)
2174  00                 [0139] (-72)
2175  00                 [0140] (-71)
2176  8C                 [0141] (-71)
2177  00                 [0142] (-71)
2178  00                 [0143] (-71)
2179  00                 [0144] (-71)
217A  8C                 [0145] (-71)
217B  00                 [0146] (-71)
217C  00                 [0147] (-69)
217D  00                 [0148] (-69)
217E  8C                 [0149] (-69)
217F  00                 [0150] (-69)
2180  00                 [0151] (-69)
2181  00                 [0152] (-68)
2182  8C                 [0153] (-68)
2183  00                 [0154] (-68)
2184  00                 [0155] (-65)
2185  00                 [0156] (-65)
2186  8C                 [0157] (-65)
2187  00                 [0158] (-65)
2188  00                 [0159] (-65)
2189  00                 [0160] (-65)
218A  8C                 [0161] (-65)
218B  00                 [0162] (-65)
218C  00                 [0163] (-65)
218D  00                 [0164] (-65)
218E  8C                 [0165] (-64)
218F  00                 [0166] (-64)
2190  00                 [0167] (-64)
2191  00                 [0168] (-64)
2192  8C                 [0169] (-64)
2193  00                 [0170] (-64)
2194  00                 [0171] (-63)
2195  00                 [0172] (-63)
2196  8F                 [0173] (-63)
2197  00                 [0174] (-63)
2198  00                 [0175] (-63)
2199  00                 [0176] (-63)
219A  8F                 [0177] (-62)
219B  00                 [0178] (-62)
219C  00                 [0179] (-62)
219D  00                 [0180] (-62)
219E  8F                 [0181] (-62)
219F  00                 [0182] (-62)
21A0  00                 [0183] (-62)
21A1  00                 [0184] (-62)
21A2  8F                 [0185] (-62)
21A3  00                 [0186] (-62)
21A4  00                 [0187] (-61)
21A5  00                 [0188] (-61)
21A6  91                 [0189] (-61)
21A7  00                 [0190] (-61)
21A8  00                 [0191] (-61)
21A9  00                 [0192] (-60)
21AA  94                 [0193] (-60)
21AB  00                 [0194] (-58)
21AC  00                 [0195] (-55)
21AD  00                 [0196] (-55)
21AE  94                 [0197] (-55)
21AF  00                 [0198] (-55)
21B0  00                 [0199] (-55)
21B1  00                 [0200] (-54)
21B2  94                 [0201] (-54)
21B3  00                 [0202] (-54)
21B4  00                 [0203] (-54)
21B5  00                 [0204] (-54)
21B6  94                 [0205] (-54)
21B7  00                 [0206] (-54)
21B8  00                 [0207] (-54)
21B9  00                 [0208] (-53)
21BA  94                 [0209] (-53)
21BB  00                 [0210] (-53)
21BC  00                 [0211] (-53)
21BD  00                 [0212] (-53)
21BE  95                 [0213] (-53)
21BF  00                 [0214] (-52)
21C0  00                 [0215] (-52)
21C1  00                 [0216] (-52)
21C2  95                 [0217] (-52)
21C3  00                 [0218] (-49)
21C4  00                 [0219] (-49)
21C5  00                 [0220] (-49)
21C6  95                 [0221] (-49)
21C7  00                 [0222] (-49)
21C8  00                 [0223] (-48)
21C9  00                 [0224] (-48)
21CA  95                 [0225] (-48)
21CB  00                 [0226] (-48)
21CC  00                 [0227] (-48)
21CD  00                 [0228] (-45)
21CE  95                 [0229] (-45)
21CF  00                 [0230] (-45)
21D0  00                 [0231] (-44)
21D1  00                 [0232] (-44)
21D2  96                 [0233] (-44)
21D3  00                 [0234] (-44)
21D4  00                 [0235] (-44)
21D5  00                 [0236] (-43)
21D6  96                 [0237] (-43)
21D7  00                 [0238] (-43)
21D8  00                 [0239] (-43)
21D9  00                 [0240] (-42)
21DA  96                 [0241] (-42)
21DB  00                 [0242] (-42)
21DC  00                 [0243] (-42)
21DD  00                 [0244] (-42)
21DE  96                 [0245] (-41)
21DF  00                 [0246] (-41)
21E0  00                 [0247] (-41)
21E1  00                 [0248] (-41)
21E2  96                 [0249] (-40)
21E3  00                 [0250] (-40)
21E4  00                 [0251] (-40)
21E5  00                 [0252] (-40)
21E6  97                 [0253] (-40)
21E7  00                 [0254] (-39)
21E8  00                 [0255] (-39)
21E9  00                 [0256] (-39)
21EA  97                 [0257] (-33)
21EB  00                 [0258] (-33)
21EC  00                 [0259] (-32)
21ED  00                 [0260] (-32)
21EE  99                 [0261] (-32)
21EF  00                 [0262] (-32)
21F0  00                 [0263] (-30)
21F1  00                 [0264] (-27)
21F2  9C                 [0265] (-26)
21F3  00                 [0266] (-26)
21F4  00                 [0267] (-26)
21F5  00                 [0268] (-25)
21F6  9C                 [0269] (-25)
21F7  00                 [0270] (-25)
21F8  00                 [0271] (-25)
21F9  00                 [0272] (-25)
21FA  9D                 [0273] (-23)
21FB  00                 [0274] (-23)
21FC  00                 [0275] (-22)
21FD  00                 [0276] (-22)
21FE  9D                 [0277] (-21)
21FF  00                 [0278] (-20)
2200  00                 [0279] (-19)
2201  00                 [0280] (-18)
2202  9D                 [0281] (-17)
2203  00                 [0282] (-15)
2204  00                 [0283] (-15)
2205  00                 [0284] (-15)
2206  9D                 [0285] (-15)
2207  00                 [0286] (-15)
2208  00                 [0287] (-15)
2209  00                 [0288] (-15)
220A  9D                 [0289] (-15)
220B  00                 [0290] (-15)
220C  00                 [0291] (-15)
220D  00                 [0292] (-14)
220E  9E                 [0293] (-14)
220F  00                 [0294] (-14)
2210  00                 [0295] (-14)
2211  00                 [0296] (-14)
2212  9E                 [0297] (-14)
2213  00                 [0298] (-14)
2214  00                 [0299] (-14)
2215  00                 [0300] (-14)
2216  9F                 [0301] (-14)
2217  00                 [0302] (-14)
2218  00                 [0303] (-14)
2219  00                 [0304] (-14)
221A  9F                 [0305] (-14)
221B  00                 [0306] (-14)
221C  00                 [0307] (-14)
221D  00                 [0308] (-13)
221E  A2                 [0309] (-13)
221F  00                 [0310] (-13)
2220  00                 [0311] (-12)
2221  00                 [0312] (-11)
2222  A5                 [0313] (-11)
2223  00                 [0314] (-11)
2224  00                 [0315] (-11)
2225  00                 [0316] (-11)
2226  AB                 [0317] (-11)
2227  00                 [0318] (-11)
2228  00                 [0319] (-11)
2229  00                 [0320] (-10)
222A  AB                 [0321] (-9)
222B  00                 [0322] (-8)
222C  00                 [0323] (-8)
222D  00                 [0324] (-8)
222E  AB                 [0325] (-8)
222F  00                 [0326] (-8)
2230  00                 [0327] (-7)
2231  00                 [0328] (-7)
2232  AB                 [0329] (-7)
2233  00                 [0330] (-4)
2234  00                 [0331] (-4)
2235  00                 [0332] (-4)
2236  AB                 [0333] (-4)
2237  00                 [0334] (-4)
2238  00                 [0335] (-3)
2239  00                 [0336] (-3)
223A  AC                 [0337] (-3)
223B  00                 [0338] (-3)
223C  00                 [0339] (-1)
223D  00                 [0340] (1)
223E  AC                 [0341] (1)
223F  00                 [0342] (1)
2240  00                 [0343] (1)
2241  00                 [0344] (1)
2242  AD                 [0345] (1)
2243  00                 [0346] (1)
2244  00                 [0347] (1)
2245  00                 [0348] (1)
2246  AD                 [0349] (1)
2247  00                 [0350] (1)
2248  00                 [0351] (3)
2249  00                 [0352] (3)
224A  AD                 [0353] (3)
224B  00                 [0354] (6)
224C  00                 [0355] (6)
224D  00                 [0356] (6)
224E  AD                 [0357] (7)
224F  00                 [0358] (7)
2250  00                 [0359] (7)
2251  00                 [0360] (10)
2252  AD                 [0361] (10)
2253  00                 [0362] (10)
2254  00                 [0363] (11)
2255  00                 [0364] (11)
2256  AE                 [0365] (11)
2257  00                 [0366] (14)
2258  00                 [0367] (15)
2259  00                 [0368] (15)
225A  AE                 [0369] (15)
225B  00                 [0370] (15)
225C  00                 [0371] (15)
225D  00                 [0372] (15)
225E  AE                 [0373] (17)
225F  00                 [0374] (17)
2260  00                 [0375] (17)
2261  00                 [0376] (19)
2262  B2                 [0377] (24)
2263  00                 [0378] (25)
2264  00                 [0379] (26)
2265  00                 [0380] (28)
2266  B3                 [0381] (28)
2267  00                 [0382] (29)
2268  00                 [0383] (29)
2269  00                 [0384] (29)
226A  B3                 [0385] (29)
226B  00                 [0386] (30)
226C  00                 [0387] (30)
226D  00                 [0388] (30)
226E  B3                 [0389] (30)
226F  00                 [0390] (30)
2270  00                 [0391] (30)
2271  00                 [0392] (31)
2272  B3                 [0393] (31)
2273  00                 [0394] (31)
2274  00                 [0395] (33)
2275  00                 [0396] (33)
2276  B4                 [0397] (33)
2277  00                 [0398] (33)
2278  00                 [0399] (36)
2279  00                 [0400] (36)
227A  B4                 [0401] (36)
227B  00                 [0402] (36)
227C  00                 [0403] (36)
227D  00                 [0404] (36)
227E  B4                 [0405] (36)
227F  00                 [0406] (37)
2280  00                 [0407] (38)
2281  00                 [0408] (39)
2282  B4                 [0409] (39)
2283  00                 [0410] (39)
2284  00                 [0411] (39)
2285  00                 [0412] (39)
2286  B4                 [0413] (40)
2287  00                 [0414] (40)
2288  00                 [0415] (40)
2289  00                 [0416] (41)
228A  B4                 [0417] (41)
228B  00                 [0418] (41)
228C  00                 [0419] (41)
228D  00                 [0420] (43)
228E  B4                 [0421] (43)
228F  00                 [0422] (47)
2290  00                 [0423] (47)
2291  00                 [0424] (47)
2292  B4                 [0425] (47)
2293  00                 [0426] (47)
2294  00                 [0427] (48)
2295  00                 [0428] (48)
2296  B4                 [0429] (48)
2297  00                 [0430] (49)
2298  00                 [0431] (49)
2299  00                 [0432] (49)
229A  B4                 [0433] (50)
229B  00                 [0434] (50)
229C  00                 [0435] (53)
229D  00                 [0436] (53)
229E  B5                 [0437] (53)
229F  00                 [0438] (54)
22A0  00                 [0439] (54)
22A1  00                 [0440] (54)
22A2  B5                 [0441] (54)
22A3  00                 [0442] (57)
22A4  00                 [0443] (57)
22A5  00                 [0444] (57)
22A6  B5                 [0445] (57)
22A7  00                 [0446] (57)
22A8  00                 [0447] (57)
22A9  00                 [0448] (57)
22AA  B5                 [0449] (57)
22AB  00                 [0450] (57)
22AC  00                 [0451] (57)
22AD  00                 [0452] (57)
22AE  B5                 [0453] (58)
22AF  00                 [0454] (58)
22B0  00                 [0455] (58)
22B1  00                 [0456] (58)
22B2  B5                 [0457] (63)
22B3  00                 [0458] (65)
22B4  00                 [0459] (66)
22B5  00                 [0460] (66)
22B6  B5                 [0461] (66)
22B7  00                 [0462] (68)
22B8  00                 [0463] (69)
22B9  00                 [0464] (69)
22BA  B5                 [0465] (69)
22BB  00                 [0466] (69)
22BC  00                 [0467] (69)
22BD  00                 [0468] (70)
22BE  B6                 [0469] (70)
22BF  00                 [0470] (70)
22C0  00                 [0471] (74)
22C1  00                 [0472] (74)
22C2  B6                 [0473] (76)
22C3  00                 [0474] (76)
22C4  00                 [0475] (76)
22C5  00                 [0476] (76)
22C6  B6                 [0477] (76)
22C7  00                 [0478] (76)
22C8  00                 [0479] (76)
22C9  00                 [0480] (76)
22CA  B6                 [0481] (76)
22CB  00                 [0482] (76)
22CC  00                 [0483] (76)
22CD  00                 [0484] (76)
22CE  B6                 [0485] (76)
22CF  00                 [0486] (76)
22D0  00                 [0487] (76)
22D1  00                 [0488] (77)
22D2  B6                 [0489] (77)
22D3  00                 [0490] (77)
22D4  00                 [0491] (77)
22D5  00                 [0492] (77)
22D6  B6                 [0493] (77)
22D7  00                 [0494] (77)
22D8  00                 [0495] (77)
22D9  00                 [0496] (77)
22DA  B6                 [0497] (77)
22DB  00                 [0498] (77)
22DC  00                 [0499] (77)
22DD  00                 [0500] (77)
22DE  B6                 [0501] (80)
22DF  00                 [0502] (80)
22E0  00                 [0503] (81)
22E1  00                 [0504] (81)
22E2  B6                 [0505] (81)
22E3  00                 [0506] (81)
22E4  00                 [0507] (82)
22E5  00                 [0508] (82)
22E6  B7                 [0509] (82)
22E7  00                 [0510] (83)
22E8  00                 [0511] (85)
22E9  00                 [0512] (85)
22EA  B7                 [0513] (85)
22EB  00                 [0514] (85)
22EC  00                 [0515] (86)
22ED  00                 [0516] (86)
22EE  B8                 [0517] (86)
22EF  00                 [0518] (90)
22F0  00                 [0519] (91)
22F1  00                 [0520] (91)
22F2  B8                 [0521] (91)
22F3  00                 [0522] (91)
22F4  00                 [0523] (91)
22F5  00                 [0524] (91)
22F6  B8                 [0525] (91)
22F7  00                 [0526] (92)
22F8  00                 [0527] (92)
22F9  00                 [0528] (92)
22FA  B8                 [0529] (94)
22FB  00                 [0530] (94)
22FC  00                 [0531] (94)
22FD  00                 [0532] (95)
22FE  B8                 [0533] (95)
22FF  00                 [0534] (95)
2300  00                 [0535] (95)
2301  00                 [0536] (95)
2302  B8                 [0537] (95)
2303  00                 [0538] (99)
2304  00                 [0539] (99)
2305  00                 [0540] (99)
2306  B8                 [0541] (99)
2307  00                 [0542] (99)
2308  00                 [0543] (100)
2309  00                 [0544] (104)
230A  B8                 [0545] (104)
230B  00                 [0546] (104)
230C  00                 [0547] (106)
230D  00                 [0548] (107)
230E  B8                 [0549] (107)
230F  00                 [0550] (107)
2310  00                 [0551] (107)
2311  00                 [0552] (107)
2312  B8                 [0553] (107)
2313  00                 [0554] (107)
2314  00                 [0555] (108)
2315  00                 [0556] (111)
2316  B9                 [0557] (111)
2317  00                 [0558] (111)
2318  00                 [0559] (111)
2319  00                 [0560] (112)
231A  B9                 [0561] (117)
231B  00                 [0562] (117)
231C  00                 [0563] (118)
231D  00                 [0564] (118)
231E  B9                 [0565] (118)
231F  00                 [0566] (119)
2320  00                 [0567] (119)
2321  00                 [0568] (119)
2322  B9                 [0569] (119)
2323  00                 [0570] (119)
2324  00                 [0571] (120)
2325  00                 [0572] (120)
2326  B9                 [0573] (120)
2327  00                 [0574] (120)
2328  00                 [0575] (120)
2329  00                 [0576] (122)
232A  B9                 [0577] (122)
232B  00                 [0578] (122)
232C  00                 [0579] (122)
232D  00                 [0580] (122)
232E  B9                 [0581] (122)
232F  00                 [0582] (122)
2330  00                 [0583] (122)
2331  00                 [0584] (122)
2332  BB                 [0585] (122)
2333  00                 [0586] (122)
2334  00                 [0587] (122)
2335  00                 [0588] (122)
2336  BB                 [0589] (122)
2337  00                 [0590] (122)
2338  00                 [0591] (122)
2339  00                 [0592] (125)
233A  BB                 [0593] (125)
233B  00                 [0594] (127)
233C  00                 [0595] (-128)
233D  00                 [0596] (-128)
233E  BB                 [0597] (-128)
233F  00                 [0598] (-128)
2340  00                 [0599] (-128)
2341  00                 [0600] (-128)
2342  BB                 [0601] (-128)
2343  00                 [0602] (-128)
2344  00                 [0603] (-127)
2345  00                 [0604] (-127)
2346  BC                 [0605] (-127)
2347  00                 [0606] (-127)
2348  00                 [0607] (-126)
2349  00                 [0608] (-126)
234A  BC                 [0609] (-125)
234B  00                 [0610] (-123)
234C  00                 [0611] (-122)
234D  00                 [0612] (-122)
234E  BC                 [0613] (-122)
234F  00                 [0614] (-121)
2350  00                 [0615] (-121)
2351  00                 [0616] (-120)
2352  BF                 [0617] (-120)
2353  00                 [0618] (-120)
2354  00                 [0619] (-119)
2355  00                 [0620] (-115)
2356  BF                 [0621] (-115)
2357  00                 [0622] (-115)
2358  00                 [0623] (-115)
2359  00                 [0624] (-114)
235A  BF                 [0625] (-114)
235B  00                 [0626] (-114)
235C  00                 [0627] (-114)
235D  00                 [0628] (-113)
235E  BF                 [0629] (-113)
235F  00                 [0630] (-113)
2360  00                 [0631] (-113)
2361  00                 [0632] (-113)
2362  BF                 [0633] (-113)
2363  00                 [0634] (-113)
2364  00                 [0635] (-113)
2365  00                 [0636] (-113)
2366  BF                 [0637] (-113)
2367  00                 [0638] (-113)
2368  00                 [0639] (-113)
2369  00                 [0640] (-112)
236A  BF                 [0641] (-112)
236B  00                 [0642] (-111)
236C  00                 [0643] (-111)
236D  00                 [0644] (-111)
236E  BF                 [0645] (-111)
236F  00                 [0646] (-111)
2370  00                 [0647] (-111)
2371  00                 [0648] (-111)
2372  BF                 [0649] (-111)
2373  00                 [0650] (-111)
2374  00                 [0651] (-111)
2375  00                 [0652] (-111)
2376  BF                 [0653] (-111)
2377  00                 [0654] (-111)
2378  00                 [0655] (-111)
2379  00                 [0656] (-108)
237A  C0                 [0657] (-108)
237B  00                 [0658] (-106)
237C  00                 [0659] (-105)
237D  00                 [0660] (-103)
237E  C0                 [0661] (-103)
237F  00                 [0662] (-103)
2380  00                 [0663] (-103)
2381  00                 [0664] (-103)
2382  C0                 [0665] (-103)
2383  00                 [0666] (-103)
2384  00                 [0667] (-103)
2385  00                 [0668] (-103)
2386  C0                 [0669] (-103)
2387  00                 [0670] (-102)
2388  00                 [0671] (-102)
2389  00                 [0672] (-102)
238A  C0                 [0673] (-101)
238B  00                 [0674] (-101)
238C  00                 [0675] (-101)
238D  00                 [0676] (-101)
238E  C0                 [0677] (-101)
238F  00                 [0678] (-100)
2390  00                 [0679] (-98)
2391  00                 [0680] (-98)
2392  C1                 [0681] (-98)
2393  00                 [0682] (-98)
2394  00                 [0683] (-98)
2395  00                 [0684] (-98)
2396  C1                 [0685] (-98)
2397  00                 [0686] (-98)
2398  00                 [0687] (-98)
2399  00                 [0688] (-98)
239A  C1                 [0689] (-98)
239B  00                 [0690] (-98)
239C  00                 [0691] (-98)
239D  00                 [0692] (-98)
239E  C1                 [0693] (-98)
239F  00                 [0694] (-97)
23A0  00                 [0695] (-96)
23A1  00                 [0696] (-96)
23A2  C1                 [0697] (-96)
23A3  00                 [0698] (-96)
23A4  00                 [0699] (-96)
23A5  00                 [0700] (-96)
23A6  C1                 [0701] (-96)
23A7  00                 [0702] (-96)
23A8  00                 [0703] (-95)
23A9  00                 [0704] (-90)
23AA  C2                 [0705] (-90)
23AB  00                 [0706] (-89)
23AC  00                 [0707] (-89)
23AD  00                 [0708] (-88)
23AE  C2                 [0709] (-88)
23AF  00                 [0710] (-85)
23B0  00                 [0711] (-85)
23B1  00                 [0712] (-85)
23B2  C2                 [0713] (-85)
23B3  00                 [0714] (-85)
23B4  00                 [0715] (-85)
23B5  00                 [0716] (-85)
23B6  C2                 [0717] (-85)
23B7  00                 [0718] (-85)
23B8  00                 [0719] (-85)
23B9  00                 [0720] (-85)
23BA  C2                 [0721] (-85)
23BB  00                 [0722] (-84)
23BC  00                 [0723] (-84)
23BD  00                 [0724] (-84)
23BE  C2                 [0725] (-83)
23BF  00                 [0726] (-81)
23C0  00                 [0727] (-79)
23C1  00                 [0728] (-79)
23C2  C2                 [0729] (-79)
23C3  00                 [0730] (-77)
23C4  00                 [0731] (-73)
23C5  00                 [0732] (-73)
23C6  C2                 [0733] (-73)
23C7  00                 [0734] (-72)
23C8  00                 [0735] (-72)
23C9  00                 [0736] (-72)
23CA  C2                 [0737] (-72)
23CB  00                 [0738] (-72)
23CC  00                 [0739] (-71)
23CD  00                 [0740] (-71)
23CE  C2                 [0741] (-70)
23CF  00                 [0742] (-70)
23D0  00                 [0743] (-69)
23D1  00                 [0744] (-69)
23D2  C3                 [0745] (-69)
23D3  00                 [0746] (-69)
23D4  00                 [0747] (-69)
23D5  00                 [0748] (-68)
23D6  C3                 [0749] (-67)
23D7  00                 [0750] (-67)
23D8  00                 [0751] (-66)
23D9  00                 [0752] (-62)
23DA  C3                 [0753] (-62)
23DB  00                 [0754] (-62)
23DC  00                 [0755] (-60)
23DD  00                 [0756] (-60)
23DE  C3                 [0757] (-60)
23DF  00                 [0758] (-60)
23E0  00                 [0759] (-60)
23E1  00                 [0760] (-60)
23E2  C3                 [0761] (-60)
23E3  00                 [0762] (-60)
23E4  00                 [0763] (-58)
23E5  00                 [0764] (-58)
23E6  C4                 [0765] (-58)
23E7  00                 [0766] (-58)
23E8  00                 [0767] (-58)
23E9  00                 [0768] (-58)
23EA  C4                 [0769] (-58)
23EB  00                 [0770] (-58)
23EC  00                 [0771] (-58)
23ED  00                 [0772] (-58)
23EE  C6                 [0773] (-58)
23EF  00                 [0774] (-58)
23F0  00                 [0775] (-57)
23F1  00                 [0776] (-57)
23F2  C9                 [0777] (-57)
23F3  00                 [0778] (-55)
23F4  00                 [0779] (-54)
23F5  00                 [0780] (-54)
23F6  C9                 [0781] (-53)
23F7  00                 [0782] (-53)
23F8  00                 [0783] (-53)
23F9  00                 [0784] (-53)
23FA  C9                 [0785] (-53)
23FB  00                 [0786] (-53)
23FC  00                 [0787] (-53)
23FD  00                 [0788] (-53)
23FE  C9                 [0789] (-53)
23FF  00                 [0790] (-53)
2400  00                 [0791] (-53)
2401  00                 [0792] (-53)
2402  C9                 [0793] (-53)
2403  00                 [0794] (-53)
2404  00                 [0795] (-52)
2405  00                 [0796] (-52)
2406  CA                 [0797] (-51)
2407  00                 [0798] (-51)
2408  00                 [0799] (-51)
2409  00                 [0800] (-51)
240A  CA                 [0801] (-51)
240B  00                 [0802] (-51)
240C  00                 [0803] (-51)
240D  00                 [0804] (-51)
240E  CA                 [0805] (-51)
240F  00                 [0806] (-51)
2410  00                 [0807] (-51)
2411  00                 [0808] (-51)
2412  CA                 [0809] (-51)
2413  00                 [0810] (-50)
2414  00                 [0811] (-47)
2415  00                 [0812] (-47)
2416  CA                 [0813] (-47)
2417  00                 [0814] (-47)
2418  00                 [0815] (-46)
2419  00                 [0816] (-46)
241A  CA                 [0817] (-45)
241B  00                 [0818] (-45)
241C  00                 [0819] (-45)
241D  00                 [0820] (-45)
241E  CA                 [0821] (-45)
241F  00                 [0822] (-45)
2420  00                 [0823] (-44)
2421  00                 [0824] (-44)
2422  CA                 [0825] (-44)
2423  00                 [0826] (-44)
2424  00                 [0827] (-44)
2425  00                 [0828] (-44)
2426  CB                 [0829] (-41)
2427  00                 [0830] (-41)
2428  00                 [0831] (-40)
2429  00                 [0832] (-40)
242A  CB                 [0833] (-38)
242B  00                 [0834] (-38)
242C  00                 [0835] (-37)
242D  00                 [0836] (-34)
242E  CB                 [0837] (-34)
242F  00                 [0838] (-33)
2430  00                 [0839] (-33)
2431  00                 [0840] (-33)
2432  CB                 [0841] (-33)
2433  00                 [0842] (-33)
2434  00                 [0843] (-32)
2435  00                 [0844] (-32)
2436  CB                 [0845] (-32)
2437  00                 [0846] (-28)
2438  00                 [0847] (-28)
2439  00                 [0848] (-28)
243A  CB                 [0849] (-28)
243B  00                 [0850] (-28)
243C  00                 [0851] (-28)
243D  00                 [0852] (-28)
243E  CC                 [0853] (-27)
243F  00                 [0854] (-27)
2440  00                 [0855] (-27)
2441  00                 [0856] (-23)
2442  CC                 [0857] (-23)
2443  00                 [0858] (-23)
2444  00                 [0859] (-23)
2445  00                 [0860] (-23)
2446  CC                 [0861] (-23)
2447  00                 [0862] (-23)
2448  00                 [0863] (-23)
2449  00                 [0864] (-23)
244A  CC                 [0865] (-23)
244B  00                 [0866] (-22)
244C  00                 [0867] (-22)
244D  00                 [0868] (-22)
244E  CF                 [0869] (-22)
244F  00                 [0870] (-22)
2450  00                 [0871] (-22)
2451  00                 [0872] (-22)
2452  CF                 [0873] (-22)
2453  00                 [0874] (-20)
2454  00                 [0875] (-20)
2455  00                 [0876] (-20)
2456  CF                 [0877] (-19)
2457  00                 [0878] (-19)
2458  00                 [0879] (-19)
2459  00                 [0880] (-18)
245A  CF                 [0881] (-18)
245B  00                 [0882] (-18)
245C  00                 [0883] (-16)
245D  00                 [0884] (-16)
245E  CF                 [0885] (-16)
245F  00                 [0886] (-16)
2460  00                 [0887] (-16)
2461  00                 [0888] (-15)
2462  D0                 [0889] (-15)
2463  00                 [0890] (-13)
2464  00                 [0891] (-13)
2465  00                 [0892] (-13)
2466  D0                 [0893] (-13)
2467  00                 [0894] (-13)
2468  00                 [0895] (-12)
2469  00                 [0896] (-12)
246A  D0                 [0897] (-9)
246B  00                 [0898] (-9)
246C  00                 [0899] (-9)
246D  00                 [0900] (-8)
246E  D0                 [0901] (-8)
246F  00                 [0902] (-8)
2470  00                 [0903] (-8)
2471  00                 [0904] (-8)
2472  D0                 [0905] (-7)
2473  00                 [0906] (-7)
2474  00                 [0907] (-5)
2475  00                 [0908] (-5)
2476  D3                 [0909] (-5)
2477  00                 [0910] (-5)
2478  00                 [0911] (-5)
2479  00                 [0912] (-4)
247A  D3                 [0913] (-4)
247B  00                 [0914] (0)
247C  00                 [0915] (2)
247D  00                 [0916] (2)
247E  D3                 [0917] (2)
247F  00                 [0918] (2)
2480  00                 [0919] (2)
2481  00                 [0920] (3)
2482  D4                 [0921] (3)
2483  00                 [0922] (3)
2484  00                 [0923] (3)
2485  00                 [0924] (3)
2486  D4                 [0925] (4)
2487  00                 [0926] (4)
2488  00                 [0927] (4)
2489  00                 [0928] (4)
248A  D4                 [0929] (5)
248B  00                 [0930] (5)
248C  00                 [0931] (5)
248D  00                 [0932] (5)
248E  D4                 [0933] (5)
248F  00                 [0934] (5)
2490  00                 [0935] (7)
2491  00                 [0936] (7)
2492  D4                 [0937] (7)
2493  00                 [0938] (7)
2494  00                 [0939] (7)
2495  00                 [0940] (8)
2496  D5                 [0941] (8)
2497  00                 [0942] (8)
2498  00                 [0943] (8)
2499  00                 [0944] (10)
249A  D5                 [0945] (10)
249B  00                 [0946] (10)
249C  00                 [0947] (10)
249D  00                 [0948] (10)
249E  D5                 [0949] (11)
249F  00                 [0950] (11)
24A0  00                 [0951] (11)
24A1  00                 [0952] (11)
24A2  D5                 [0953] (12)
24A3  00                 [0954] (14)
24A4  00                 [0955] (14)
24A5  00                 [0956] (14)
24A6  D6                 [0957] (14)
24A7  00                 [0958] (14)
24A8  00                 [0959] (15)
24A9  00                 [0960] (15)
24AA  D6                 [0961] (15)
24AB  00                 [0962] (15)
24AC  00                 [0963] (15)
24AD  00                 [0964] (15)
24AE  D6                 [0965] (15)
24AF  00                 [0966] (15)
24B0  00                 [0967] (17)
24B1  00                 [0968] (17)
24B2  D6                 [0969] (17)
24B3  00                 [0970] (18)
24B4  00                 [0971] (18)
24B5  00                 [0972] (18)
24B6  D6                 [0973] (20)
24B7  00                 [0974] (20)
24B8  00                 [0975] (20)
24B9  00                 [0976] (20)
24BA  D7                 [0977] (20)
24BB  00                 [0978] (21)
24BC  00                 [0979] (21)
24BD  00                 [0980] (21)
24BE  D7                 [0981] (21)
24BF  00                 [0982] (21)
24C0  00                 [0983] (22)
24C1  00                 [0984] (22)
24C2  D7                 [0985] (25)
24C3  00                 [0986] (26)
24C4  00                 [0987] (26)
24C5  00                 [0988] (26)
24C6  D7                 [0989] (28)
24C7  00                 [0990] (28)
24C8  00                 [0991] (28)
24C9  00                 [0992] (28)
24CA  D8                 [0993] (28)
24CB  00                 [0994] (29)
24CC  00                 [0995] (29)
24CD  00                 [0996] (29)
24CE  D8                 [0997] (29)
24CF  00                 [0998] (29)
24D0  00                 [0999] (30)
24D1  00                 [1000] (30)
24D2  D8                 [1001] (30)
24D3  00                 [1002] (30)
24D4  00                 [1003] (30)
24D5  00                 [1004] (30)
24D6  D8                 [1005] (32)
24D7  00                 [1006] (32)
24D8  00                 [1007] (32)
24D9  00                 [1008] (32)
24DA  D8                 [1009] (32)
24DB  00                 [1010] (33)
24DC  00                 [1011] (33)
24DD  00                 [1012] (33)
24DE  D9                 [1013] (33)
24DF  00                 [1014] (35)
24E0  00                 [1015] (35)
24E1  00                 [1016] (35)
24E2  D9                 [1017] (35)
24E3  00                 [1018] (35)
24E4  00                 [1019] (36)
24E5  00                 [1020] (36)
24E6  D9                 [1021] (36)
24E7  00                 [1022] (36)
24E8  00                 [1023] (41)
24E9  00                 [1024] (45)
24EA  DF                 [1025] (45)
24EB  00                 [1026] (45)
24EC  00                 [1027] (45)
24ED  00                 [1028] (45)
24EE  DF                 [1029] (46)
24EF  00                 [1030] (46)
24F0  00                 [1031] (46)
24F1  00                 [1032] (47)
24F2  E0                 [1033] (47)
24F3  00                 [1034] (48)
24F4  00                 [1035] (52)
24F5  00                 [1036] (52)
24F6  E0                 [1037] (52)
24F7  00                 [1038] (52)
24F8  00                 [1039] (52)
24F9  00                 [1040] (52)
24FA  E0                 [1041] (52)
24FB  00                 [1042] (52)
24FC  00                 [1043] (52)
24FD  00                 [1044] (52)
24FE  E0                 [1045] (53)
24FF  00                 [1046] (53)
2500  00                 [1047] (53)
2501  00                 [1048] (53)
2502  E2                 [1049] (53)
2503  00                 [1050] (53)
2504  00                 [1051] (53)
2505  00                 [1052] (53)
2506  E5                 [1053] (53)
2507  00                 [1054] (53)
2508  00                 [1055] (53)
2509  00                 [1056] (53)
250A  E6                 [1057] (53)
250B  00                 [1058] (53)
250C  00                 [1059] (53)
250D  00                 [1060] (53)
250E  E6                 [1061] (53)
250F  00                 [1062] (53)
2510  00                 [1063] (53)
2511  00                 [1064] (54)
2512  E6                 [1065] (55)
2513  00                 [1066] (55)
2514  00                 [1067] (60)
2515  00                 [1068] (60)
2516  E7                 [1069] (60)
2517  00                 [1070] (61)
2518  00                 [1071] (61)
2519  00                 [1072] (61)
251A  E7                 [1073] (62)
251B  00                 [1074] (62)
251C  00                 [1075] (63)
251D  00                 [1076] (65)
251E  E7                 [1077] (65)
251F  00                 [1078] (65)
2520  00                 [1079] (65)
2521  00                 [1080] (65)
2522  E7                 [1081] (65)
2523  00                 [1082] (65)
2524  00                 [1083] (67)
2525  00                 [1084] (67)
2526  E7                 [1085] (68)
2527  00                 [1086] (69)
2528  00                 [1087] (69)
2529  00                 [1088] (73)
252A  E9                 [1089] (73)
252B  00                 [1090] (73)
252C  00                 [1091] (73)
252D  00                 [1092] (73)
252E  E9                 [1093] (73)
252F  00                 [1094] (73)
2530  00                 [1095] (74)
2531  00                 [1096] (75)
2532  EA                 [1097] (75)
2533  00                 [1098] (75)
2534  00                 [1099] (76)
2535  00                 [1100] (76)
2536  EA                 [1101] (76)
2537  00                 [1102] (80)
2538  00                 [1103] (80)
2539  00                 [1104] (80)
253A  EB                 [1105] (80)
253B  00                 [1106] (80)
253C  00                 [1107] (82)
253D  00                 [1108] (82)
253E  EC                 [1109] (82)
253F  00                 [1110] (82)
2540  00                 [1111] (87)
2541  00                 [1112] (87)
2542  ED                 [1113] (87)
2543  00                 [1114] (88)
2544  00                 [1115] (88)
2545  00                 [1116] (88)
2546  EE                 [1117] (88)
2547  00                 [1118] (88)
2548  00                 [1119] (92)
2549  00                 [1120] (92)
254A  EF                 [1121] (92)
254B  00                 [1122] (92)
254C  00                 [1123] (92)
254D  00                 [1124] (93)
254E  F1                 [1125] (93)
254F  00                 [1126] (93)
2550  00                 [1127] (93)
2551  00                 [1128] (93)
2552  F1                 [1129] (95)
2553  00                 [1130] (95)
2554  00                 [1131] (95)
2555  00                 [1132] (95)
2556  F1                 [1133] (95)
2557  00                 [1134] (96)
2558  00                 [1135] (96)
2559  00                 [1136] (96)
255A  F1                 [1137] (96)
255B  00                 [1138] (96)
255C  00                 [1139] (96)
255D  00                 [1140] (96)
255E  F1                 [1141] (96)
255F  00                 [1142] (96)
2560  00                 [1143] (96)
2561  00                 [1144] (96)
2562  F1                 [1145] (96)
2563  00                 [1146] (96)
2564  00                 [1147] (97)
2565  00                 [1148] (97)
2566  F1                 [1149] (97)
2567  00                 [1150] (97)
2568  00                 [1151] (97)
2569  00                 [1152] (98)
256A  F1                 [1153] (98)
256B  00                 [1154] (98)
256C  00                 [1155] (100)
256D  00                 [1156] (100)
256E  F1                 [1157] (102)
256F  00                 [1158] (102)
2570  00                 [1159] (102)
2571  00                 [1160] (102)
2572  F1                 [1161] (102)
2573  00                 [1162] (103)
2574  00                 [1163] (103)
2575  00                 [1164] (106)
2576  F2                 [1165] (106)
2577  00                 [1166] (106)
2578  00                 [1167] (107)
2579  00                 [1168] (107)
257A  F2                 [1169] (108)
257B  00                 [1170] (108)
257C  00                 [1171] (109)
257D  00                 [1172] (109)
257E  F2                 [1173] (110)
257F  00                 [1174] (110)
2580  00                 [1175] (111)
2581  00                 [1176] (113)
2582  F2                 [1177] (113)
2583  00                 [1178] (117)
2584  00                 [1179] (117)
2585  00                 [1180] (117)
2586  F2                 [1181] (117)
2587  00                 [1182] (117)
2588  00                 [1183] (118)
2589  00                 [1184] (118)
258A  F2                 [1185] (120)
258B  00                 [1186] (120)
258C  00                 [1187] (120)
258D  00                 [1188] (120)
258E  F2                 [1189] (120)
258F  00                 [1190] (121)
2590  00                 [1191] (121)
2591  00                 [1192] (123)
2592  F2                 [1193] (123)
2593  00                 [1194] (123)
2594  00                 [1195] (123)
2595  00                 [1196] (123)
2596  F2                 [1197] (124)
2597  00                 [1198] (124)
2598  00                 [1199] (126)
2599  00                 [1200] (126)
259A  F2                 [1201] (126)
259B  00                 [1202] (126)
259C  00                 [1203] (126)
259D  00                 [1204] (127)
259E  F2                 [1205] (127)
259F  00                 [1206] (-126)
25A0  00                 [1207] (-126)
25A1  00                 [1208] (-126)
25A2  F2                 [1209] (-126)
25A3  00                 [1210] (-125)
25A4  00                 [1211] (-125)
25A5  00                 [1212] (-125)
25A6  F2                 [1213] (-124)
25A7  00                 [1214] (-124)
25A8  00                 [1215] (-124)
25A9  00                 [1216] (-121)
25AA  F2                 [1217] (-121)
25AB  00                 [1218] (-121)
25AC  00                 [1219] (-121)
25AD  00                 [1220] (-121)
25AE  F2                 [1221] (-120)
25AF  00                 [1222] (-120)
25B0  00                 [1223] (-120)
25B1  00                 [1224] (-120)
25B2  F2                 [1225] (-120)
25B3  00                 [1226] (-120)
25B4  00                 [1227] (-120)
25B5  00                 [1228] (-120)
25B6  F3                 [1229] (-120)
25B7  00                 [1230] (-120)
25B8  00                 [1231] (-120)
25B9  00                 [1232] (-119)
25BA  F3                 [1233] (-119)
25BB  00                 [1234] (-119)
25BC  00                 [1235] (-119)
25BD  00                 [1236] (-116)
                         * locals:
343A  00                 sizelocvars (0)
                         * upvalues:
343B  00                 sizeupvalues (0)
                         ** end of function **

                         
343C                     ** function [6] definition (level 2)
                         ** start of function **
343C  00                 string size (0)
                         source name: (none)
343E  05                 line defined (657)
343F  F5                 last line defined (757)
3440  05                 nups (3)
3441  03                 numparams (2)
3442  02                 is_vararg (0)
3443  00                 maxstacksize (18)
                         * code:
3446  02                 sizecode (265)
3447  9D000000           [001] getglobal  2   0        ; 1074689893
344B  D2008000           [002] move       3   1      
344F  A2800001           [003] call       2   2   2  
3453  98000000           [004] test       2       0    ; to [6] if true
3457  1A000080           [005] jmp        1            ; to [7]
345B  1E008000           [006] return     0   1      
345F  A440C000           [007] self       2   1   257  ; -1957065004
3463  1D810000           [008] getglobal  4   2        ; gHitProxyPhysicsType
3467  A2808001           [009] call       2   3   2  
346B  98000000           [010] test       2       0    ; to [12] if true
346F  1A000480           [011] jmp        17           ; to [29]
3473  A4C0C000           [012] self       2   1   259  ; -242235676
3477  A2800001           [013] call       2   2   2  
347B  DD000000           [014] getglobal  3   0        ; 1074689893
347F  12010001           [015] move       4   2      
3483  E2800001           [016] call       3   2   2  
3487  D8400000           [017] test       3       1    ; to [19] if false
348B  1A400180           [018] jmp        6            ; to [25]
348F  E4004101           [019] self       3   2   260  ; -2135033564
3493  5D410100           [020] getglobal  5   5        ; Engine
3497  4E81C102           [021] gettable   5   5   262  ; "Ragdoll_TORSO"
349B  E2808001           [022] call       3   3   2  
fail op	35
349F  63408001           [023] close      1  
34A3  1A000080           [024] jmp        1            ; to [26]
34A7  1E008000           [025] return     0   1      
34AB  E4C04101           [026] self       3   2   263  ; 332067969
34AF  E2800001           [027] call       3   2   2  
34B3  52008001           [028] move       1   3      
34B7  DD000000           [029] getglobal  3   0        ; 1074689893
34BB  12018000           [030] move       4   1      
34BF  E2800001           [031] call       3   2   2  
34C3  D8400000           [032] test       3       1    ; to [34] if false
34C7  1AC00080           [033] jmp        4            ; to [38]
34CB  E400C200           [034] self       3   1   264  ; 1511086594
34CF  E2800001           [035] call       3   2   2  
34D3  D8000000           [036] test       3       0    ; to [38] if true
34D7  1A000080           [037] jmp        1            ; to [39]
34DB  1E008000           [038] return     0   1      
34DF  DD400200           [039] getglobal  3   9        ; appliesDamageBarrier
34E3  D8000000           [040] test       3       0    ; to [42] if true
34E7  1AC00180           [041] jmp        8            ; to [50]
34EB  E480C200           [042] self       3   1   266  ; -1544157541
34EF  E2800001           [043] call       3   2   2  
34F3  E4C0C201           [044] self       3   3   267  ; -417913560
34F7  52010000           [045] move       5   0      
34FB  E2808001           [046] call       3   3   2  
34FF  D8000000           [047] test       3       0    ; to [49] if true
3503  1A000080           [048] jmp        1            ; to [50]
3507  1E008000           [049] return     0   1      
350B  DD000000           [050] getglobal  3   0        ; 1074689893
350F  1D010300           [051] getglobal  4   12       ; _T
3513  0E414302           [052] gettable   4   4   269  ; "grantedImmunities"
3517  E2800001           [053] call       3   2   2  
351B  D8000000           [054] test       3       0    ; to [56] if true
351F  1A800080           [055] jmp        3            ; to [59]
3523  DD000300           [056] getglobal  3   12       ; _T
3527  0B010000           [057] newtable   4   0   0    ; array=0, hash=0
352B  CC008186           [058] settable   3   269 4    ; "grantedImmunities"
352F  E4804300           [059] self       3   0   270  ; 129677183
3533  E2800001           [060] call       3   2   2  
3537  17018000           [061] loadbool   4   1   0    ; true
353B  5D010000           [062] getglobal  5   0        ; 1074689893
353F  92018001           [063] move       6   3      
3543  62810001           [064] call       5   2   2  
3547  58410000           [065] test       5       1    ; to [67] if false
354B  1AC00480           [066] jmp        20           ; to [87]
354F  64C1C301           [067] self       5   3   271  ; 880936306
3553  62810001           [068] call       5   2   2  
3557  9D010000           [069] getglobal  6   0        ; 1074689893
355B  DD010300           [070] getglobal  7   12       ; _T
355F  CE01C403           [071] gettable   7   7   272  ; "nullifierAbilities"
3563  A2810001           [072] call       6   2   2  
3567  98410000           [073] test       6       1    ; to [75] if false
356B  1AC00280           [074] jmp        12           ; to [87]
356F  9D010000           [075] getglobal  6   0        ; 1074689893
3573  DD010300           [076] getglobal  7   12       ; _T
3577  CE01C403           [077] gettable   7   7   272  ; "nullifierAbilities"
357B  CE418103           [078] gettable   7   7   5  
357F  A2810001           [079] call       6   2   2  
3583  98410000           [080] test       6       1    ; to [82] if false
3587  1A000180           [081] jmp        5            ; to [87]
358B  9D010300           [082] getglobal  6   12       ; _T
358F  8E014403           [083] gettable   6   6   272  ; "nullifierAbilities"
3593  8E410103           [084] gettable   6   6   5  
3597  A0410400           [085] setglobal  6   17       ; disableAbilities
359B  17010000           [086] loadbool   4   0   0    ; false
359F  A481C400           [087] self       6   1   274  ; -605089866
35A3  A2810001           [088] call       6   2   2  
35A7  18010000           [089] test       4       0    ; to [91] if true
35AB  1A400380           [090] jmp        14           ; to [105]
35AF  DD010000           [091] getglobal  7   0        ; 1074689893
35B3  1D020300           [092] getglobal  8   12       ; _T
35B7  0E424304           [093] gettable   8   8   269  ; "grantedImmunities"
35BB  0E820104           [094] gettable   8   8   6  
35BF  E2810001           [095] call       7   2   2  
35C3  D8410000           [096] test       7       1    ; to [98] if false
35C7  1A800180           [097] jmp        7            ; to [105]
35CB  DD010300           [098] getglobal  7   12       ; _T
35CF  CE41C303           [099] gettable   7   7   269  ; "grantedImmunities"
35D3  1D020300           [100] getglobal  8   12       ; _T
35D7  0E424304           [101] gettable   8   8   269  ; "grantedImmunities"
35DB  0E820104           [102] gettable   8   8   6  
35DF  03C24404           [103] add        8   8   275  ; 0
35E3  CC010203           [104] settable   7   6   8  
35E7  DD010500           [105] getglobal  7   20       ; notCreated
35EB  D8010000           [106] test       7       0    ; to [108] if true
35EF  1A800080           [107] jmp        3            ; to [111]
35F3  E4414500           [108] self       7   0   277  ; -704974830
35F7  E2810001           [109] call       7   2   2  
35FB  D2008003           [110] move       3   7      
35FF  DD410200           [111] getglobal  7   9        ; appliesDamageBarrier
3603  D8010000           [112] test       7       0    ; to [114] if true
3607  1A800280           [113] jmp        11           ; to [125]
360B  E4414500           [114] self       7   0   277  ; -704974830
360F  E2810001           [115] call       7   2   2  
3613  2482C503           [116] self       8   7   278  ; -1625438872
3617  9DC20500           [117] getglobal  10  23       ; collisionType
361B  22828001           [118] call       8   3   2  
361F  6482C200           [119] self       9   1   266  ; -1544157541
3623  62820001           [120] call       9   2   2  
3627  6402C604           [121] self       9   9   280  ; -835964927
362B  D2020000           [122] move       11  0      
362F  12030004           [123] move       12  8      
3633  62420002           [124] call       9   4   1  
3637  5D420600           [125] getglobal  9   25       ; needsAgentBasedCheck
363B  58020000           [126] test       9       0    ; to [128] if true
363F  1AC00F80           [127] jmp        64           ; to [192]
3643  5D020000           [128] getglobal  9   0        ; 1074689893
3647  92028001           [129] move       10  3      
364B  62820001           [130] call       9   2   2  
364F  58420000           [131] test       9       1    ; to [133] if false
3653  1A800E80           [132] jmp        59           ; to [192]
3657  6442C001           [133] self       9   3   257  ; -1957065004
365B  DD820600           [134] getglobal  11  26       ; gLotusNpcAvatarType
365F  62828001           [135] call       9   3   2  
3663  58020000           [136] test       9       0    ; to [138] if true
3667  1A400D80           [137] jmp        54           ; to [192]
366B  64C2C601           [138] self       9   3   283  ; -784553045
366F  D2028000           [139] move       11  1      
3673  62828001           [140] call       9   3   2  
3677  58020000           [141] test       9       0    ; to [143] if true
367B  1A000C80           [142] jmp        49           ; to [192]
367F  18010000           [143] test       4       0    ; to [145] if true
3683  1AC01D80           [144] jmp        120          ; to [265]
3687  5D020000           [145] getglobal  9   0        ; 1074689893
368B  9D020300           [146] getglobal  10  12       ; _T
368F  8E424305           [147] gettable   10  10  269  ; "grantedImmunities"
3693  8E820105           [148] gettable   10  10  6  
3697  62820001           [149] call       9   2   2  
369B  58020000           [150] test       9       0    ; to [152] if true
369F  1A001C80           [151] jmp        113          ; to [265]
36A3  6402C700           [152] self       9   1   284  ; 1230984527
36A7  DD420700           [153] getglobal  11  29       ; Lotus_Game
36AB  CE82C705           [154] gettable   11  11  286  ; "AR_IMMUNE_ALL"
36AF  62828001           [155] call       9   3   2  
36B3  58020000           [156] test       9       0    ; to [158] if true
36B7  1AC00080           [157] jmp        4            ; to [162]
36BB  5D020300           [158] getglobal  9   12       ; _T
36BF  4E42C304           [159] gettable   9   9   269  ; "grantedImmunities"
36C3  4CC24703           [160] settable   9   6   287  ; 0
36C7  1A800080           [161] jmp        3            ; to [165]
36CB  5D020300           [162] getglobal  9   12       ; _T
36CF  4E42C304           [163] gettable   9   9   269  ; "grantedImmunities"
36D3  4CC24403           [164] settable   9   6   275  ; 0
36D7  6442C000           [165] self       9   1   257  ; -1957065004
36DB  DD820600           [166] getglobal  11  26       ; gLotusNpcAvatarType
36DF  62828001           [167] call       9   3   2  
36E3  58020000           [168] test       9       0    ; to [170] if true
36E7  1A801780           [169] jmp        95           ; to [265]
36EB  6402C800           [170] self       9   1   288  ; -1266465662
36EF  DD420700           [171] getglobal  11  29       ; Lotus_Game
36F3  CE82C705           [172] gettable   11  11  286  ; "AR_IMMUNE_ALL"
36F7  13030000           [173] getupval   12  0      
36FB  62420002           [174] call       9   4   1  
36FF  6482C200           [175] self       9   1   266  ; -1544157541
3703  62820001           [176] call       9   2   2  
3707  6442C804           [177] self       9   9   289  ; 2004937084
370B  D3028000           [178] getupval   11  1      
370F  1D430100           [179] getglobal  12  5        ; Engine
3713  0E834806           [180] gettable   12  12  290  ; "DT_ANY"
3717  5D430100           [181] getglobal  13  5        ; Engine
371B  4EC3C806           [182] gettable   13  13  291  ; "ANY_PART"
371F  9D430100           [183] getglobal  14  5        ; Engine
3723  8E034907           [184] gettable   14  14  292  ; "DHT_NONE"
3727  D9430900           [185] loadk      15  37       ; 0
372B  62428003           [186] call       9   7   1  
372F  6482C900           [187] self       9   1   294  ; 975332802
3733  DD420100           [188] getglobal  11  5        ; Engine
3737  CEC2C905           [189] gettable   11  11  295  ; "FROZEN_NONE"
373B  62428001           [190] call       9   3   1  
373F  1A001280           [191] jmp        73           ; to [265]
3743  53020001           [192] getupval   9   2      
3747  92028000           [193] move       10  1      
374B  62820001           [194] call       9   2   2  
374F  58020000           [195] test       9       0    ; to [197] if true
3753  1A800D80           [196] jmp        55           ; to [252]
3757  5D020A00           [197] getglobal  9   40       ; gRegion
375B  6442CA04           [198] self       9   9   297  ; -1520831144
375F  62820001           [199] call       9   2   2  
3763  58020000           [200] test       9       0    ; to [202] if true
3767  1A800F80           [201] jmp        63           ; to [265]
376B  5D020300           [202] getglobal  9   12       ; _T
376F  4E82CA04           [203] gettable   9   9   298  ; "nullifierDamage"
fail op	35
3773  23C0CA04           [204] close      0  
3777  1A800080           [205] jmp        3            ; to [209]
377B  5D020300           [206] getglobal  9   12       ; _T
377F  8B020000           [207] newtable   10  0   0    ; array=0, hash=0
3783  4C820295           [208] settable   9   298 10   ; "nullifierDamage"
3787  5D020300           [209] getglobal  9   12       ; _T
378B  4E82CA04           [210] gettable   9   9   298  ; "nullifierDamage"
378F  4E828104           [211] gettable   9   9   6  
fail op	35
3793  23C0CA04           [212] close      0  
3797  1AC00080           [213] jmp        4            ; to [218]
379B  5D020300           [214] getglobal  9   12       ; _T
379F  4E82CA04           [215] gettable   9   9   298  ; "nullifierDamage"
37A3  8B020000           [216] newtable   10  0   0    ; array=0, hash=0
37A7  4C820203           [217] settable   9   6   10 
37AB  59020B00           [218] loadk      9   44       ; 0
37AF  9D420100           [219] getglobal  10  5        ; Engine
37B3  8E424B05           [220] gettable   10  10  301  ; -98643418
37B7  A2828000           [221] call       10  1   2  
37BB  E4C2CB00           [222] self       11  1   303  ; 945541886
37BF  E2820001           [223] call       11  2   2  
37C3  C402CB05           [224] mul        11  11  300  ; 0
37C7  C4428205           [225] mul        11  11  9  
37CB  8CC20297           [226] settable   10  302 11   ; "baseAmount"
37CF  E4024C05           [227] self       11  10  304  ; -995861768
37D3  5D430100           [228] getglobal  13  5        ; Engine
37D7  4E43CC06           [229] gettable   13  13  305  ; "DT_HEALTH_DRAIN"
37DB  99C30400           [230] loadk      14  19       ; 0
37DF  E2420002           [231] call       11  4   1  
37E3  E4824C05           [232] self       11  10  306  ; -420630141
37E7  52038001           [233] move       13  3      
37EB  E2428001           [234] call       11  3   1  
37EF  E4C24C05           [235] self       11  10  307  ; -2049256907
37F3  52030000           [236] move       13  0      
37F7  E2428001           [237] call       11  3   1  
37FB  DD020D00           [238] getglobal  11  52       ; table
37FF  CE42CD05           [239] gettable   11  11  309  ; -431682403
3803  1D030300           [240] getglobal  12  12       ; _T
3807  0E834A06           [241] gettable   12  12  298  ; "nullifierDamage"
380B  0E830106           [242] gettable   12  12  6  
380F  6483C200           [243] self       13  1   266  ; -1544157541
3813  62830001           [244] call       13  2   2  
3817  6483CD06           [245] self       13  13  310  ; 1955845087
381B  D2030005           [246] move       15  10     
381F  19440900           [247] loadk      16  37       ; 0
3823  52048004           [248] move       17  9      
3827  62038002           [249] call       13  5   0  
382B  E2420000           [250] call       11  0   1  
382F  1A000380           [251] jmp        13           ; to [265]
3833  E4C2CD00           [252] self       11  1   311  ; -1917464545
3837  E2820001           [253] call       11  2   2  
383B  E402CE05           [254] self       11  11  312  ; 1769516121
383F  E2820001           [255] call       11  2   2  
3843  1D030000           [256] getglobal  12  0        ; 1074689893
3847  52038005           [257] move       13  11     
384B  22830001           [258] call       12  2   2  
384F  18430000           [259] test       12      1    ; to [261] if false
3853  1AC00080           [260] jmp        4            ; to [265]
3857  2443CE05           [261] self       12  11  313  ; -828610723
385B  97038000           [262] loadbool   14  1   0    ; true
385F  DD430400           [263] getglobal  15  17       ; disableAbilities
3863  22430002           [264] call       12  4   1  
3867  1E008000           [265] return     0   1      
                         * constants:
386B  3A                 sizek (58)
386C  01                 const type 3
386D  65770E40           const [0]: (1074689893)
3871  01                 const type 3
3872  D48E598B           const [1]: (-1957065004)
3876  04                 const type 4
3877  15                 string size (21)
3878  6748697450726F78+  "gHitProx"
3880  7950687973696373+  "yPhysics"
3888  5479706500         "Type\0"
                         const [2]: "gHitProxyPhysicsType"
388D  01                 const type 3
388E  E4C68FF1           const [3]: (-242235676)
3892  01                 const type 3
3893  24F9BD80           const [4]: (-2135033564)
3897  04                 const type 4
3898  07                 string size (7)
3899  456E67696E6500     "Engine\0"
                         const [5]: "Engine"
38A0  04                 const type 4
38A1  0E                 string size (14)
38A2  526167646F6C6C5F+  "Ragdoll_"
38AA  544F52534F00       "TORSO\0"
                         const [6]: "Ragdoll_TORSO"
38B0  01                 const type 3
38B1  81F4CA13           const [7]: (332067969)
38B5  01                 const type 3
38B6  025A115A           const [8]: (1511086594)
38BA  04                 const type 4
38BB  15                 string size (21)
38BC  6170706C69657344+  "appliesD"
38C4  616D616765426172+  "amageBar"
38CC  7269657200         "rier\0"
                         const [9]: "appliesDamageBarrier"
38D1  01                 const type 3
38D2  9B06F6A3           const [10]: (-1544157541)
38D6  01                 const type 3
38D7  282517E7           const [11]: (-417913560)
38DB  04                 const type 4
38DC  03                 string size (3)
38DD  5F5400             "_T\0"
                         const [12]: "_T"
38E0  04                 const type 4
38E1  12                 string size (18)
38E2  6772616E74656449+  "grantedI"
38EA  6D6D756E69746965+  "mmunitie"
38F2  7300               "s\0"
                         const [13]: "grantedImmunities"
38F4  01                 const type 3
38F5  7FB7BA07           const [14]: (129677183)
38F9  01                 const type 3
38FA  72058234           const [15]: (880936306)
38FE  04                 const type 4
38FF  13                 string size (19)
3900  6E756C6C69666965+  "nullifie"
3908  724162696C697469+  "rAbiliti"
3910  657300             "es\0"
                         const [16]: "nullifierAbilities"
3913  04                 const type 4
3914  11                 string size (17)
3915  64697361626C6541+  "disableA"
391D  62696C6974696573+  "bilities"
3925  00                 "\0"
                         const [17]: "disableAbilities"
3926  01                 const type 3
3927  B60FEFDB           const [18]: (-605089866)
392B  03                 const type 3
392C  0000803F           const [19]: (0)
3930  04                 const type 4
3931  0B                 string size (11)
3932  6E6F744372656174+  "notCreat"
393A  656400             "ed\0"
                         const [20]: "notCreated"
393D  01                 const type 3
393E  12F0FAD5           const [21]: (-704974830)
3942  01                 const type 3
3943  68C51D9F           const [22]: (-1625438872)
3947  04                 const type 4
3948  0E                 string size (14)
3949  636F6C6C6973696F+  "collisio"
3951  6E5479706500       "nType\0"
                         const [23]: "collisionType"
3957  01                 const type 3
3958  01302CCE           const [24]: (-835964927)
395C  04                 const type 4
395D  15                 string size (21)
395E  6E65656473416765+  "needsAge"
3966  6E74426173656443+  "ntBasedC"
396E  6865636B00         "heck\0"
                         const [25]: "needsAgentBasedCheck"
3973  04                 const type 4
3974  14                 string size (20)
3975  674C6F7475734E70+  "gLotusNp"
397D  6341766174617254+  "cAvatarT"
3985  79706500           "ype\0"
                         const [26]: "gLotusNpcAvatarType"
3989  01                 const type 3
398A  ABAB3CD1           const [27]: (-784553045)
398E  01                 const type 3
398F  4F555F49           const [28]: (1230984527)
3993  04                 const type 4
3994  0B                 string size (11)
3995  4C6F7475735F4761+  "Lotus_Ga"
399D  6D6500             "me\0"
                         const [29]: "Lotus_Game"
39A0  04                 const type 4
39A1  0E                 string size (14)
39A2  41525F494D4D554E+  "AR_IMMUN"
39AA  455F414C4C00       "E_ALL\0"
                         const [30]: "AR_IMMUNE_ALL"
39B0  03                 const type 3
39B1  00000040           const [31]: (0)
39B5  01                 const type 3
39B6  824483B4           const [32]: (-1266465662)
39BA  01                 const type 3
39BB  7CE98077           const [33]: (2004937084)
39BF  04                 const type 4
39C0  07                 string size (7)
39C1  44545F414E5900     "DT_ANY\0"
                         const [34]: "DT_ANY"
39C8  04                 const type 4
39C9  09                 string size (9)
39CA  414E595F50415254+  "ANY_PART"
39D2  00                 "\0"
                         const [35]: "ANY_PART"
39D3  04                 const type 4
39D4  09                 string size (9)
39D5  4448545F4E4F4E45+  "DHT_NONE"
39DD  00                 "\0"
                         const [36]: "DHT_NONE"
39DE  03                 const type 3
39DF  00000000           const [37]: (0)
39E3  01                 const type 3
39E4  C265223A           const [38]: (975332802)
39E8  04                 const type 4
39E9  0C                 string size (12)
39EA  46524F5A454E5F4E+  "FROZEN_N"
39F2  4F4E4500           "ONE\0"
                         const [39]: "FROZEN_NONE"
39F6  04                 const type 4
39F7  08                 string size (8)
39F8  67526567696F6E00   "gRegion\0"
                         const [40]: "gRegion"
3A00  01                 const type 3
3A01  58F559A5           const [41]: (-1520831144)
3A05  04                 const type 4
3A06  10                 string size (16)
3A07  6E756C6C69666965+  "nullifie"
3A0F  7244616D61676500   "rDamage\0"
                         const [42]: "nullifierDamage"
3A17  00                 const type 0
                         const [43]: nil
3A18  03                 const type 3
3A19  0000803E           const [44]: (0)
3A1D  01                 const type 3
3A1E  26D21EFA           const [45]: (-98643418)
3A22  04                 const type 4
3A23  0B                 string size (11)
3A24  62617365416D6F75+  "baseAmou"
3A2C  6E7400             "nt\0"
                         const [46]: "baseAmount"
3A2F  01                 const type 3
3A30  FED25B38           const [47]: (945541886)
3A34  01                 const type 3
3A35  F85AA4C4           const [48]: (-995861768)
3A39  04                 const type 4
3A3A  10                 string size (16)
3A3B  44545F4845414C54+  "DT_HEALT"
3A43  485F445241494E00   "H_DRAIN\0"
                         const [49]: "DT_HEALTH_DRAIN"
3A4B  01                 const type 3
3A4C  83B1EDE6           const [50]: (-420630141)
3A50  01                 const type 3
3A51  35D2DA85           const [51]: (-2049256907)
3A55  04                 const type 4
3A56  06                 string size (6)
3A57  7461626C6500       "table\0"
                         const [52]: "table"
3A5D  01                 const type 3
3A5E  9D0C45E6           const [53]: (-431682403)
3A62  01                 const type 3
3A63  DFD39374           const [54]: (1955845087)
3A67  01                 const type 3
3A68  1FD0B58D           const [55]: (-1917464545)
3A6C  01                 const type 3
3A6D  59AC7869           const [56]: (1769516121)
3A71  01                 const type 3
3A72  5D679CCE           const [57]: (-828610723)
                         * functions:
3A76  00                 sizep (0)
                         * lines:
3A78  02                 sizelineinfo (265)
                         [pc] (line)
3A79  92                 [001] (-110)
3A7A  02                 [002] (-110)
3A7B  00                 [003] (-110)
3A7C  00                 [004] (-110)
3A7D  92                 [005] (-110)
3A7E  02                 [006] (-109)
3A7F  00                 [007] (-106)
3A80  00                 [008] (-106)
3A81  92                 [009] (-106)
3A82  02                 [010] (-106)
3A83  00                 [011] (-106)
3A84  00                 [012] (-105)
3A85  92                 [013] (-105)
3A86  02                 [014] (-104)
3A87  00                 [015] (-104)
3A88  00                 [016] (-104)
3A89  92                 [017] (-104)
3A8A  02                 [018] (-104)
3A8B  00                 [019] (-104)
3A8C  00                 [020] (-104)
3A8D  93                 [021] (-104)
3A8E  02                 [022] (-104)
3A8F  00                 [023] (-104)
3A90  00                 [024] (-104)
3A91  96                 [025] (-103)
3A92  02                 [026] (-100)
3A93  00                 [027] (-100)
3A94  00                 [028] (-100)
3A95  96                 [029] (-97)
3A96  02                 [030] (-97)
3A97  00                 [031] (-97)
3A98  00                 [032] (-97)
3A99  96                 [033] (-97)
3A9A  02                 [034] (-97)
3A9B  00                 [035] (-97)
3A9C  00                 [036] (-97)
3A9D  96                 [037] (-97)
3A9E  02                 [038] (-96)
3A9F  00                 [039] (-93)
3AA0  00                 [040] (-93)
3AA1  96                 [041] (-93)
3AA2  02                 [042] (-92)
3AA3  00                 [043] (-92)
3AA4  00                 [044] (-92)
3AA5  97                 [045] (-92)
3AA6  02                 [046] (-92)
3AA7  00                 [047] (-92)
3AA8  00                 [048] (-92)
3AA9  97                 [049] (-91)
3AAA  02                 [050] (-87)
3AAB  00                 [051] (-87)
3AAC  00                 [052] (-87)
3AAD  98                 [053] (-87)
3AAE  02                 [054] (-87)
3AAF  00                 [055] (-87)
3AB0  00                 [056] (-86)
3AB1  98                 [057] (-86)
3AB2  02                 [058] (-86)
3AB3  00                 [059] (-83)
3AB4  00                 [060] (-83)
3AB5  98                 [061] (-82)
3AB6  02                 [062] (-80)
3AB7  00                 [063] (-80)
3AB8  00                 [064] (-80)
3AB9  98                 [065] (-80)
3ABA  02                 [066] (-80)
3ABB  00                 [067] (-79)
3ABC  00                 [068] (-79)
3ABD  98                 [069] (-78)
3ABE  02                 [070] (-78)
3ABF  00                 [071] (-78)
3AC0  00                 [072] (-78)
3AC1  98                 [073] (-78)
3AC2  02                 [074] (-78)
3AC3  00                 [075] (-78)
3AC4  00                 [076] (-78)
3AC5  98                 [077] (-78)
3AC6  02                 [078] (-78)
3AC7  00                 [079] (-78)
3AC8  00                 [080] (-78)
3AC9  98                 [081] (-78)
3ACA  02                 [082] (-77)
3ACB  00                 [083] (-77)
3ACC  00                 [084] (-77)
3ACD  98                 [085] (-77)
3ACE  02                 [086] (-76)
3ACF  00                 [087] (-72)
3AD0  00                 [088] (-72)
3AD1  98                 [089] (-71)
3AD2  02                 [090] (-71)
3AD3  00                 [091] (-71)
3AD4  00                 [092] (-71)
3AD5  98                 [093] (-71)
3AD6  02                 [094] (-71)
3AD7  00                 [095] (-71)
3AD8  00                 [096] (-71)
3AD9  99                 [097] (-71)
3ADA  02                 [098] (-70)
3ADB  00                 [099] (-70)
3ADC  00                 [100] (-70)
3ADD  9C                 [101] (-70)
3ADE  02                 [102] (-70)
3ADF  00                 [103] (-70)
3AE0  00                 [104] (-70)
3AE1  9C                 [105] (-67)
3AE2  02                 [106] (-67)
3AE3  00                 [107] (-67)
3AE4  00                 [108] (-66)
3AE5  9C                 [109] (-66)
3AE6  02                 [110] (-66)
3AE7  00                 [111] (-63)
3AE8  00                 [112] (-63)
3AE9  9F                 [113] (-63)
3AEA  02                 [114] (-62)
3AEB  00                 [115] (-62)
3AEC  00                 [116] (-61)
3AED  9F                 [117] (-61)
3AEE  02                 [118] (-61)
3AEF  00                 [119] (-60)
3AF0  00                 [120] (-60)
3AF1  9F                 [121] (-60)
3AF2  02                 [122] (-60)
3AF3  00                 [123] (-60)
3AF4  00                 [124] (-60)
3AF5  9F                 [125] (-56)
3AF6  02                 [126] (-56)
3AF7  00                 [127] (-56)
3AF8  00                 [128] (-56)
3AF9  9F                 [129] (-56)
3AFA  02                 [130] (-56)
3AFB  00                 [131] (-56)
3AFC  00                 [132] (-56)
3AFD  9F                 [133] (-56)
3AFE  02                 [134] (-56)
3AFF  00                 [135] (-56)
3B00  00                 [136] (-56)
3B01  9F                 [137] (-56)
3B02  02                 [138] (-56)
3B03  00                 [139] (-56)
3B04  00                 [140] (-56)
3B05  9F                 [141] (-56)
3B06  02                 [142] (-56)
3B07  00                 [143] (-50)
3B08  00                 [144] (-50)
3B09  9F                 [145] (-50)
3B0A  02                 [146] (-50)
3B0B  00                 [147] (-50)
3B0C  00                 [148] (-50)
3B0D  A0                 [149] (-50)
3B0E  02                 [150] (-50)
3B0F  00                 [151] (-50)
3B10  00                 [152] (-49)
3B11  A3                 [153] (-49)
3B12  02                 [154] (-49)
3B13  00                 [155] (-49)
3B14  00                 [156] (-49)
3B15  A3                 [157] (-49)
3B16  02                 [158] (-48)
3B17  00                 [159] (-48)
3B18  00                 [160] (-48)
3B19  A3                 [161] (-48)
3B1A  02                 [162] (-46)
3B1B  00                 [163] (-46)
3B1C  00                 [164] (-46)
3B1D  A4                 [165] (-43)
3B1E  02                 [166] (-43)
3B1F  00                 [167] (-43)
3B20  00                 [168] (-43)
3B21  A4                 [169] (-43)
3B22  02                 [170] (-42)
3B23  00                 [171] (-42)
3B24  00                 [172] (-42)
3B25  A4                 [173] (-42)
3B26  02                 [174] (-42)
3B27  00                 [175] (-41)
3B28  00                 [176] (-41)
3B29  A4                 [177] (-41)
3B2A  02                 [178] (-41)
3B2B  00                 [179] (-41)
3B2C  00                 [180] (-41)
3B2D  A4                 [181] (-41)
3B2E  02                 [182] (-41)
3B2F  00                 [183] (-41)
3B30  00                 [184] (-41)
3B31  A4                 [185] (-41)
3B32  02                 [186] (-41)
3B33  00                 [187] (-40)
3B34  00                 [188] (-40)
3B35  A4                 [189] (-40)
3B36  02                 [190] (-40)
3B37  00                 [191] (-38)
3B38  00                 [192] (-36)
3B39  A5                 [193] (-36)
3B3A  02                 [194] (-36)
3B3B  00                 [195] (-36)
3B3C  00                 [196] (-36)
3B3D  A9                 [197] (-35)
3B3E  02                 [198] (-35)
3B3F  00                 [199] (-35)
3B40  00                 [200] (-35)
3B41  A9                 [201] (-35)
3B42  02                 [202] (-34)
3B43  00                 [203] (-34)
3B44  00                 [204] (-34)
3B45  A9                 [205] (-34)
3B46  02                 [206] (-33)
3B47  00                 [207] (-33)
3B48  00                 [208] (-33)
3B49  A9                 [209] (-30)
3B4A  02                 [210] (-30)
3B4B  00                 [211] (-30)
3B4C  00                 [212] (-30)
3B4D  A9                 [213] (-30)
3B4E  02                 [214] (-29)
3B4F  00                 [215] (-29)
3B50  00                 [216] (-29)
3B51  A9                 [217] (-29)
3B52  02                 [218] (-26)
3B53  00                 [219] (-25)
3B54  00                 [220] (-25)
3B55  AA                 [221] (-25)
3B56  02                 [222] (-24)
3B57  00                 [223] (-24)
3B58  00                 [224] (-24)
3B59  AA                 [225] (-24)
3B5A  02                 [226] (-24)
3B5B  00                 [227] (-23)
3B5C  00                 [228] (-23)
3B5D  AA                 [229] (-23)
3B5E  02                 [230] (-23)
3B5F  00                 [231] (-23)
3B60  00                 [232] (-22)
3B61  AD                 [233] (-22)
3B62  02                 [234] (-22)
3B63  00                 [235] (-21)
3B64  00                 [236] (-21)
3B65  AD                 [237] (-21)
3B66  02                 [238] (-20)
3B67  00                 [239] (-20)
3B68  00                 [240] (-20)
3B69  AE                 [241] (-20)
3B6A  02                 [242] (-20)
3B6B  00                 [243] (-20)
3B6C  00                 [244] (-20)
3B6D  B0                 [245] (-20)
3B6E  02                 [246] (-20)
3B6F  00                 [247] (-20)
3B70  00                 [248] (-20)
3B71  B0                 [249] (-20)
3B72  02                 [250] (-20)
3B73  00                 [251] (-19)
3B74  00                 [252] (-17)
3B75  B0                 [253] (-17)
3B76  02                 [254] (-17)
3B77  00                 [255] (-17)
3B78  00                 [256] (-16)
3B79  B0                 [257] (-16)
3B7A  02                 [258] (-16)
3B7B  00                 [259] (-16)
3B7C  00                 [260] (-16)
3B7D  B0                 [261] (-15)
3B7E  02                 [262] (-15)
3B7F  00                 [263] (-15)
3B80  00                 [264] (-15)
3B81  B1                 [265] (-11)
                         * locals:
3E9D  00                 sizelocvars (0)
                         * upvalues:
3E9E  00                 sizeupvalues (0)
                         ** end of function **

                         
3E9F                     ** function [7] definition (level 2)
                         ** start of function **
3E9F  00                 string size (0)
                         source name: (none)
3EA1  05                 line defined (759)
3EA2  D4                 last line defined (852)
3EA3  06                 nups (3)
3EA4  03                 numparams (2)
3EA5  02                 is_vararg (0)
3EA6  00                 maxstacksize (15)
                         * code:
3EA9  01                 sizecode (247)
3EAA  9D000000           [001] getglobal  2   0        ; 1074689893
3EAE  D2008000           [002] move       3   1      
3EB2  A2800001           [003] call       2   2   2  
3EB6  98000000           [004] test       2       0    ; to [6] if true
3EBA  1A000080           [005] jmp        1            ; to [7]
3EBE  1E008000           [006] return     0   1      
3EC2  A440C000           [007] self       2   1   257  ; -1957065004
3EC6  1D810000           [008] getglobal  4   2        ; gHitProxyPhysicsType
3ECA  A2808001           [009] call       2   3   2  
3ECE  98000000           [010] test       2       0    ; to [12] if true
3ED2  1A000480           [011] jmp        17           ; to [29]
3ED6  A4C0C000           [012] self       2   1   259  ; -242235676
3EDA  A2800001           [013] call       2   2   2  
3EDE  DD000000           [014] getglobal  3   0        ; 1074689893
3EE2  12010001           [015] move       4   2      
3EE6  E2800001           [016] call       3   2   2  
3EEA  D8400000           [017] test       3       1    ; to [19] if false
3EEE  1A400180           [018] jmp        6            ; to [25]
3EF2  E4004101           [019] self       3   2   260  ; -2135033564
3EF6  5D410100           [020] getglobal  5   5        ; Engine
3EFA  4E81C102           [021] gettable   5   5   262  ; "Ragdoll_TORSO"
3EFE  E2808001           [022] call       3   3   2  
fail op	35
3F02  63408001           [023] close      1  
3F06  1A000080           [024] jmp        1            ; to [26]
3F0A  1E008000           [025] return     0   1      
3F0E  E4C04101           [026] self       3   2   263  ; 332067969
3F12  E2800001           [027] call       3   2   2  
3F16  52008001           [028] move       1   3      
3F1A  DD000000           [029] getglobal  3   0        ; 1074689893
3F1E  12018000           [030] move       4   1      
3F22  E2800001           [031] call       3   2   2  
3F26  D8000000           [032] test       3       0    ; to [34] if true
3F2A  1A000080           [033] jmp        1            ; to [35]
3F2E  1E008000           [034] return     0   1      
3F32  DD000200           [035] getglobal  3   8        ; appliesDamageBarrier
3F36  D8000000           [036] test       3       0    ; to [38] if true
3F3A  1AC00180           [037] jmp        8            ; to [46]
3F3E  E440C200           [038] self       3   1   265  ; -1544157541
3F42  E2800001           [039] call       3   2   2  
3F46  E480C201           [040] self       3   3   266  ; -417913560
3F4A  52010000           [041] move       5   0      
3F4E  E2808001           [042] call       3   3   2  
3F52  D8400000           [043] test       3       1    ; to [45] if false
3F56  1A000080           [044] jmp        1            ; to [46]
3F5A  1E008000           [045] return     0   1      
3F5E  DD000000           [046] getglobal  3   0        ; 1074689893
3F62  1DC10200           [047] getglobal  4   11       ; _T
3F66  0E014302           [048] gettable   4   4   268  ; "grantedImmunities"
3F6A  E2800001           [049] call       3   2   2  
3F6E  D8000000           [050] test       3       0    ; to [52] if true
3F72  1A800080           [051] jmp        3            ; to [55]
3F76  DDC00200           [052] getglobal  3   11       ; _T
3F7A  0B010000           [053] newtable   4   0   0    ; array=0, hash=0
3F7E  CC000186           [054] settable   3   268 4    ; "grantedImmunities"
3F82  E4404300           [055] self       3   0   269  ; 129677183
3F86  E2800001           [056] call       3   2   2  
3F8A  17018000           [057] loadbool   4   1   0    ; true
3F8E  46010003           [058] loadnil    5   6      
3F92  DD010000           [059] getglobal  7   0        ; 1074689893
3F96  12028001           [060] move       8   3      
3F9A  E2810001           [061] call       7   2   2  
3F9E  D8410000           [062] test       7       1    ; to [64] if false
3FA2  1AC00480           [063] jmp        20           ; to [84]
3FA6  E481C301           [064] self       7   3   270  ; 880936306
3FAA  E2810001           [065] call       7   2   2  
3FAE  92018003           [066] move       6   7      
3FB2  DD010000           [067] getglobal  7   0        ; 1074689893
3FB6  1DC20200           [068] getglobal  8   11       ; _T
3FBA  0EC24304           [069] gettable   8   8   271  ; "nullifierAbilities"
3FBE  E2810001           [070] call       7   2   2  
3FC2  D8410000           [071] test       7       1    ; to [73] if false
3FC6  1A800280           [072] jmp        11           ; to [84]
3FCA  DD010000           [073] getglobal  7   0        ; 1074689893
3FCE  1DC20200           [074] getglobal  8   11       ; _T
3FD2  0EC24304           [075] gettable   8   8   271  ; "nullifierAbilities"
3FD6  0E820104           [076] gettable   8   8   6  
3FDA  E2810001           [077] call       7   2   2  
3FDE  D8410000           [078] test       7       1    ; to [80] if false
3FE2  1AC00080           [079] jmp        4            ; to [84]
3FE6  DDC10200           [080] getglobal  7   11       ; _T
3FEA  CEC1C303           [081] gettable   7   7   271  ; "nullifierAbilities"
3FEE  4E818103           [082] gettable   5   7   6  
3FF2  17010000           [083] loadbool   4   0   0    ; false
3FF6  E401C400           [084] self       7   1   272  ; -605089866
3FFA  E2810001           [085] call       7   2   2  
3FFE  24424300           [086] self       8   0   269  ; 129677183
4002  22820001           [087] call       8   2   2  
4006  5D420400           [088] getglobal  9   17       ; notCreated
400A  58020000           [089] test       9       0    ; to [91] if true
400E  1A800080           [090] jmp        3            ; to [94]
4012  64824400           [091] self       9   0   274  ; -704974830
4016  62820001           [092] call       9   2   2  
401A  12028004           [093] move       8   9      
401E  5D020200           [094] getglobal  9   8        ; appliesDamageBarrier
4022  58020000           [095] test       9       0    ; to [97] if true
4026  1A000180           [096] jmp        5            ; to [102]
402A  6442C200           [097] self       9   1   265  ; -1544157541
402E  62820001           [098] call       9   2   2  
4032  64C2C404           [099] self       9   9   275  ; -1336458774
4036  D2020000           [100] move       11  0      
403A  62428001           [101] call       9   3   1  
403E  5D020500           [102] getglobal  9   20       ; needsAgentBasedCheck
4042  58020000           [103] test       9       0    ; to [105] if true
4046  1A800D80           [104] jmp        55           ; to [160]
404A  5D020000           [105] getglobal  9   0        ; 1074689893
404E  92020004           [106] move       10  8      
4052  62820001           [107] call       9   2   2  
4056  58420000           [108] test       9       1    ; to [110] if false
405A  1A400C80           [109] jmp        50           ; to [160]
405E  64424004           [110] self       9   8   257  ; -1957065004
4062  DD420500           [111] getglobal  11  21       ; gLotusNpcAvatarType
4066  62828001           [112] call       9   3   2  
406A  58020000           [113] test       9       0    ; to [115] if true
406E  1A000B80           [114] jmp        45           ; to [160]
4072  64824504           [115] self       9   8   278  ; -784553045
4076  D2028000           [116] move       11  1      
407A  62828001           [117] call       9   3   2  
407E  58020000           [118] test       9       0    ; to [120] if true
4082  1AC00980           [119] jmp        40           ; to [160]
4086  18010000           [120] test       4       0    ; to [122] if true
408A  1A001F80           [121] jmp        125          ; to [247]
408E  5D020000           [122] getglobal  9   0        ; 1074689893
4092  9DC20200           [123] getglobal  10  11       ; _T
4096  8E024305           [124] gettable   10  10  268  ; "grantedImmunities"
409A  8EC20105           [125] gettable   10  10  7  
409E  62820001           [126] call       9   2   2  
40A2  58420000           [127] test       9       1    ; to [129] if false
40A6  1A401D80           [128] jmp        118          ; to [247]
40AA  5DC20200           [129] getglobal  9   11       ; _T
40AE  4E02C304           [130] gettable   9   9   268  ; "grantedImmunities"
40B2  9DC20200           [131] getglobal  10  11       ; _T
40B6  8E024305           [132] gettable   10  10  268  ; "grantedImmunities"
40BA  8EC20105           [133] gettable   10  10  7  
40BE  8DC24505           [134] sub        10  10  279  ; 0
40C2  4C828203           [135] settable   9   7   10 
40C6  5DC20200           [136] getglobal  9   11       ; _T
40CA  4E02C304           [137] gettable   9   9   268  ; "grantedImmunities"
40CE  4EC28104           [138] gettable   9   9   7  
fail op	33
40D2  2100C604           [139] tforloop   0       280  ; to [141] if exit
40D6  1A401A80           [140] jmp        106          ; to [247]
40DA  6442C000           [141] self       9   1   257  ; -1957065004
40DE  DD420500           [142] getglobal  11  21       ; gLotusNpcAvatarType
40E2  62828001           [143] call       9   3   2  
40E6  58020000           [144] test       9       0    ; to [146] if true
40EA  1A400280           [145] jmp        10           ; to [156]
40EE  6442C600           [146] self       9   1   281  ; 1846115603
40F2  DD820600           [147] getglobal  11  26       ; Lotus_Game
40F6  CEC2C605           [148] gettable   11  11  283  ; "AR_IMMUNE_ALL"
40FA  13030000           [149] getupval   12  0      
40FE  62420002           [150] call       9   4   1  
4102  6442C200           [151] self       9   1   265  ; -1544157541
4106  62820001           [152] call       9   2   2  
410A  6402C704           [153] self       9   9   284  ; 384596175
410E  D3028000           [154] getupval   11  1      
4112  62428001           [155] call       9   3   1  
4116  5DC20200           [156] getglobal  9   11       ; _T
411A  4E02C304           [157] gettable   9   9   268  ; "grantedImmunities"
411E  4C42C703           [158] settable   9   7   285  ; nil
4122  1A801580           [159] jmp        87           ; to [247]
4126  53020001           [160] getupval   9   2      
412A  92028000           [161] move       10  1      
412E  62820001           [162] call       9   2   2  
4132  58020000           [163] test       9       0    ; to [165] if true
4136  1A800B80           [164] jmp        47           ; to [212]
413A  5D820700           [165] getglobal  9   30       ; gRegion
413E  64C2C704           [166] self       9   9   287  ; -1520831144
4142  62820001           [167] call       9   2   2  
4146  58020000           [168] test       9       0    ; to [170] if true
414A  1A001380           [169] jmp        77           ; to [247]
414E  5DC20200           [170] getglobal  9   11       ; _T
4152  4E02C804           [171] gettable   9   9   288  ; "nullifierDamage"
fail op	35
4156  6340C704           [172] close      1  
415A  1A001280           [173] jmp        73           ; to [247]
415E  5DC20200           [174] getglobal  9   11       ; _T
4162  4E02C804           [175] gettable   9   9   288  ; "nullifierDamage"
4166  4EC28104           [176] gettable   9   9   7  
fail op	35
416A  6340C704           [177] close      1  
416E  1AC01080           [178] jmp        68           ; to [247]
4172  6442C200           [179] self       9   1   265  ; -1544157541
4176  62820001           [180] call       9   2   2  
417A  6442C804           [181] self       9   9   289  ; 767910429
417E  DDC20200           [182] getglobal  11  11       ; _T
4182  CE02C805           [183] gettable   11  11  288  ; "nullifierDamage"
4186  CEC28105           [184] gettable   11  11  7  
418A  CEC2C505           [185] gettable   11  11  279  ; 0
418E  62428001           [186] call       9   3   1  
4192  5D820800           [187] getglobal  9   34       ; table
4196  4EC2C804           [188] gettable   9   9   291  ; -843973282
419A  9DC20200           [189] getglobal  10  11       ; _T
419E  8E024805           [190] gettable   10  10  288  ; "nullifierDamage"
41A2  8EC20105           [191] gettable   10  10  7  
41A6  D9C20500           [192] loadk      11  23       ; 0
41AA  62428001           [193] call       9   3   1  
41AE  5DC20200           [194] getglobal  9   11       ; _T
41B2  4E02C804           [195] gettable   9   9   288  ; "nullifierDamage"
41B6  4EC28104           [196] gettable   9   9   7  
41BA  4A028004           [197] len        9   9      
fail op	35
41BE  2300C604           [198] close      0  
41C2  1A800B80           [199] jmp        47           ; to [247]
41C6  5DC20200           [200] getglobal  9   11       ; _T
41CA  4E02C804           [201] gettable   9   9   288  ; "nullifierDamage"
41CE  4C42C703           [202] settable   9   7   285  ; nil
41D2  5D020900           [203] getglobal  9   36       ; -1442191459
41D6  9DC20200           [204] getglobal  10  11       ; _T
41DA  8E024805           [205] gettable   10  10  288  ; "nullifierDamage"
41DE  62820001           [206] call       9   2   2  
fail op	35
41E2  2340C704           [207] close      0  
41E6  1A400980           [208] jmp        38           ; to [247]
41EA  5DC20200           [209] getglobal  9   11       ; _T
41EE  4C424790           [210] settable   9   288 285  ; "nullifierDamage" nil
41F2  1A800880           [211] jmp        35           ; to [247]
41F6  6442C900           [212] self       9   1   293  ; -1917464545
41FA  62820001           [213] call       9   2   2  
41FE  6482C904           [214] self       9   9   294  ; 1769516121
4202  62820001           [215] call       9   2   2  
4206  9D020000           [216] getglobal  10  0        ; 1074689893
420A  D2028004           [217] move       11  9      
420E  A2820001           [218] call       10  2   2  
4212  98420000           [219] test       10      1    ; to [221] if false
4216  1A400680           [220] jmp        26           ; to [247]
421A  86020005           [221] loadnil    10  10     
421E  DD020000           [222] getglobal  11  0        ; 1074689893
4222  12030003           [223] move       12  6      
4226  E2820001           [224] call       11  2   2  
422A  D8420000           [225] test       11      1    ; to [227] if false
422E  1AC00380           [226] jmp        16           ; to [243]
4232  DD020000           [227] getglobal  11  0        ; 1074689893
4236  1DC30200           [228] getglobal  12  11       ; _T
423A  0EC34306           [229] gettable   12  12  271  ; "nullifierAbilities"
423E  E2820001           [230] call       11  2   2  
4242  D8420000           [231] test       11      1    ; to [233] if false
4246  1A400280           [232] jmp        10           ; to [243]
424A  DD020000           [233] getglobal  11  0        ; 1074689893
424E  1DC30200           [234] getglobal  12  11       ; _T
4252  0EC34306           [235] gettable   12  12  271  ; "nullifierAbilities"
4256  0E830106           [236] gettable   12  12  6  
425A  E2820001           [237] call       11  2   2  
425E  D8420000           [238] test       11      1    ; to [240] if false
4262  1A800080           [239] jmp        3            ; to [243]
4266  DDC20200           [240] getglobal  11  11       ; _T
426A  CEC2C305           [241] gettable   11  11  271  ; "nullifierAbilities"
426E  8E828105           [242] gettable   10  11  6  
4272  E4C2C904           [243] self       11  9   295  ; -828610723
4276  57030000           [244] loadbool   13  0   0    ; false
427A  92030005           [245] move       14  10     
427E  E2420002           [246] call       11  4   1  
4282  1E008000           [247] return     0   1      
                         * constants:
4286  28                 sizek (40)
4287  01                 const type 3
4288  65770E40           const [0]: (1074689893)
428C  01                 const type 3
428D  D48E598B           const [1]: (-1957065004)
4291  04                 const type 4
4292  15                 string size (21)
4293  6748697450726F78+  "gHitProx"
429B  7950687973696373+  "yPhysics"
42A3  5479706500         "Type\0"
                         const [2]: "gHitProxyPhysicsType"
42A8  01                 const type 3
42A9  E4C68FF1           const [3]: (-242235676)
42AD  01                 const type 3
42AE  24F9BD80           const [4]: (-2135033564)
42B2  04                 const type 4
42B3  07                 string size (7)
42B4  456E67696E6500     "Engine\0"
                         const [5]: "Engine"
42BB  04                 const type 4
42BC  0E                 string size (14)
42BD  526167646F6C6C5F+  "Ragdoll_"
42C5  544F52534F00       "TORSO\0"
                         const [6]: "Ragdoll_TORSO"
42CB  01                 const type 3
42CC  81F4CA13           const [7]: (332067969)
42D0  04                 const type 4
42D1  15                 string size (21)
42D2  6170706C69657344+  "appliesD"
42DA  616D616765426172+  "amageBar"
42E2  7269657200         "rier\0"
                         const [8]: "appliesDamageBarrier"
42E7  01                 const type 3
42E8  9B06F6A3           const [9]: (-1544157541)
42EC  01                 const type 3
42ED  282517E7           const [10]: (-417913560)
42F1  04                 const type 4
42F2  03                 string size (3)
42F3  5F5400             "_T\0"
                         const [11]: "_T"
42F6  04                 const type 4
42F7  12                 string size (18)
42F8  6772616E74656449+  "grantedI"
4300  6D6D756E69746965+  "mmunitie"
4308  7300               "s\0"
                         const [12]: "grantedImmunities"
430A  01                 const type 3
430B  7FB7BA07           const [13]: (129677183)
430F  01                 const type 3
4310  72058234           const [14]: (880936306)
4314  04                 const type 4
4315  13                 string size (19)
4316  6E756C6C69666965+  "nullifie"
431E  724162696C697469+  "rAbiliti"
4326  657300             "es\0"
                         const [15]: "nullifierAbilities"
4329  01                 const type 3
432A  B60FEFDB           const [16]: (-605089866)
432E  04                 const type 4
432F  0B                 string size (11)
4330  6E6F744372656174+  "notCreat"
4338  656400             "ed\0"
                         const [17]: "notCreated"
433B  01                 const type 3
433C  12F0FAD5           const [18]: (-704974830)
4340  01                 const type 3
4341  EA4157B0           const [19]: (-1336458774)
4345  04                 const type 4
4346  15                 string size (21)
4347  6E65656473416765+  "needsAge"
434F  6E74426173656443+  "ntBasedC"
4357  6865636B00         "heck\0"
                         const [20]: "needsAgentBasedCheck"
435C  04                 const type 4
435D  14                 string size (20)
435E  674C6F7475734E70+  "gLotusNp"
4366  6341766174617254+  "cAvatarT"
436E  79706500           "ype\0"
                         const [21]: "gLotusNpcAvatarType"
4372  01                 const type 3
4373  ABAB3CD1           const [22]: (-784553045)
4377  03                 const type 3
4378  0000803F           const [23]: (0)
437C  03                 const type 3
437D  00000000           const [24]: (0)
4381  01                 const type 3
4382  137D096E           const [25]: (1846115603)
4386  04                 const type 4
4387  0B                 string size (11)
4388  4C6F7475735F4761+  "Lotus_Ga"
4390  6D6500             "me\0"
                         const [26]: "Lotus_Game"
4393  04                 const type 4
4394  0E                 string size (14)
4395  41525F494D4D554E+  "AR_IMMUN"
439D  455F414C4C00       "E_ALL\0"
                         const [27]: "AR_IMMUNE_ALL"
43A3  01                 const type 3
43A4  CF78EC16           const [28]: (384596175)
43A8  00                 const type 0
                         const [29]: nil
43A9  04                 const type 4
43AA  08                 string size (8)
43AB  67526567696F6E00   "gRegion\0"
                         const [30]: "gRegion"
43B3  01                 const type 3
43B4  58F559A5           const [31]: (-1520831144)
43B8  04                 const type 4
43B9  10                 string size (16)
43BA  6E756C6C69666965+  "nullifie"
43C2  7244616D61676500   "rDamage\0"
                         const [32]: "nullifierDamage"
43CA  01                 const type 3
43CB  1D62C52D           const [33]: (767910429)
43CF  04                 const type 4
43D0  06                 string size (6)
43D1  7461626C6500       "table\0"
                         const [34]: "table"
43D7  01                 const type 3
43D8  5EFDB1CD           const [35]: (-843973282)
43DC  01                 const type 3
43DD  9DE709AA           const [36]: (-1442191459)
43E1  01                 const type 3
43E2  1FD0B58D           const [37]: (-1917464545)
43E6  01                 const type 3
43E7  59AC7869           const [38]: (1769516121)
43EB  01                 const type 3
43EC  5D679CCE           const [39]: (-828610723)
                         * functions:
43F0  00                 sizep (0)
                         * lines:
43F2  01                 sizelineinfo (247)
                         [pc] (line)
43F3  F8                 [001] (-8)
43F4  02                 [002] (-8)
43F5  00                 [003] (-8)
43F6  00                 [004] (-8)
43F7  F8                 [005] (-8)
43F8  02                 [006] (-7)
43F9  00                 [007] (-4)
43FA  00                 [008] (-4)
43FB  F8                 [009] (-4)
43FC  02                 [010] (-4)
43FD  00                 [011] (-4)
43FE  00                 [012] (-3)
43FF  F8                 [013] (-3)
4400  02                 [014] (-2)
4401  00                 [015] (-2)
4402  00                 [016] (-2)
4403  F8                 [017] (-2)
4404  02                 [018] (-2)
4405  00                 [019] (-2)
4406  00                 [020] (-2)
4407  F9                 [021] (-2)
4408  02                 [022] (-2)
4409  00                 [023] (-2)
440A  00                 [024] (-2)
440B  FC                 [025] (-1)
440C  02                 [026] (2)
440D  00                 [027] (2)
440E  00                 [028] (2)
440F  FC                 [029] (5)
4410  02                 [030] (5)
4411  00                 [031] (5)
4412  00                 [032] (5)
4413  FC                 [033] (5)
4414  02                 [034] (6)
4415  00                 [035] (9)
4416  00                 [036] (9)
4417  FC                 [037] (9)
4418  02                 [038] (10)
4419  00                 [039] (10)
441A  00                 [040] (10)
441B  FC                 [041] (10)
441C  02                 [042] (10)
441D  00                 [043] (10)
441E  00                 [044] (10)
441F  FD                 [045] (11)
4420  02                 [046] (15)
4421  00                 [047] (15)
4422  00                 [048] (15)
4423  FD                 [049] (15)
4424  02                 [050] (15)
4425  00                 [051] (15)
4426  00                 [052] (16)
4427  FE                 [053] (16)
4428  02                 [054] (16)
4429  00                 [055] (19)
442A  00                 [056] (19)
442B  FE                 [057] (20)
442C  02                 [058] (21)
442D  00                 [059] (23)
442E  00                 [060] (23)
442F  FE                 [061] (23)
4430  02                 [062] (23)
4431  00                 [063] (23)
4432  00                 [064] (24)
4433  FE                 [065] (24)
4434  02                 [066] (24)
4435  00                 [067] (25)
4436  00                 [068] (25)
4437  FE                 [069] (25)
4438  02                 [070] (25)
4439  00                 [071] (25)
443A  00                 [072] (25)
443B  FE                 [073] (25)
443C  02                 [074] (25)
443D  00                 [075] (25)
443E  00                 [076] (25)
443F  FE                 [077] (25)
4440  02                 [078] (25)
4441  00                 [079] (25)
4442  00                 [080] (26)
4443  FE                 [081] (26)
4444  02                 [082] (26)
4445  00                 [083] (27)
4446  00                 [084] (31)
4447  FE                 [085] (31)
4448  02                 [086] (32)
4449  00                 [087] (32)
444A  00                 [088] (34)
444B  FE                 [089] (34)
444C  02                 [090] (34)
444D  00                 [091] (35)
444E  00                 [092] (35)
444F  FE                 [093] (35)
4450  02                 [094] (38)
4451  00                 [095] (38)
4452  00                 [096] (38)
4453  FF                 [097] (39)
4454  02                 [098] (39)
4455  00                 [099] (39)
4456  00                 [100] (39)
4457  02                 [101] (39)
4458  03                 [102] (42)
4459  00                 [103] (42)
445A  00                 [104] (42)
445B  02                 [105] (42)
445C  03                 [106] (42)
445D  00                 [107] (42)
445E  00                 [108] (42)
445F  02                 [109] (42)
4460  03                 [110] (42)
4461  00                 [111] (42)
4462  00                 [112] (42)
4463  05                 [113] (42)
4464  03                 [114] (42)
4465  00                 [115] (42)
4466  00                 [116] (42)
4467  05                 [117] (42)
4468  03                 [118] (42)
4469  00                 [119] (42)
446A  00                 [120] (48)
446B  05                 [121] (48)
446C  03                 [122] (48)
446D  00                 [123] (48)
446E  00                 [124] (48)
446F  05                 [125] (48)
4470  03                 [126] (48)
4471  00                 [127] (48)
4472  00                 [128] (48)
4473  05                 [129] (49)
4474  03                 [130] (49)
4475  00                 [131] (49)
4476  00                 [132] (49)
4477  06                 [133] (49)
4478  03                 [134] (49)
4479  00                 [135] (49)
447A  00                 [136] (50)
447B  09                 [137] (50)
447C  03                 [138] (50)
447D  00                 [139] (50)
447E  00                 [140] (50)
447F  09                 [141] (51)
4480  03                 [142] (51)
4481  00                 [143] (51)
4482  00                 [144] (51)
4483  09                 [145] (51)
4484  03                 [146] (52)
4485  00                 [147] (52)
4486  00                 [148] (52)
4487  0A                 [149] (52)
4488  03                 [150] (52)
4489  00                 [151] (53)
448A  00                 [152] (53)
448B  0A                 [153] (53)
448C  03                 [154] (53)
448D  00                 [155] (53)
448E  00                 [156] (55)
448F  0A                 [157] (55)
4490  03                 [158] (55)
4491  00                 [159] (57)
4492  00                 [160] (59)
4493  0A                 [161] (59)
4494  03                 [162] (59)
4495  00                 [163] (59)
4496  00                 [164] (59)
4497  0A                 [165] (60)
4498  03                 [166] (60)
4499  00                 [167] (60)
449A  00                 [168] (60)
449B  0A                 [169] (60)
449C  03                 [170] (61)
449D  00                 [171] (61)
449E  00                 [172] (61)
449F  0A                 [173] (61)
44A0  03                 [174] (61)
44A1  00                 [175] (61)
44A2  00                 [176] (61)
44A3  0B                 [177] (61)
44A4  03                 [178] (61)
44A5  00                 [179] (62)
44A6  00                 [180] (62)
44A7  0F                 [181] (62)
44A8  03                 [182] (62)
44A9  00                 [183] (62)
44AA  00                 [184] (62)
44AB  0F                 [185] (62)
44AC  03                 [186] (62)
44AD  00                 [187] (63)
44AE  00                 [188] (63)
44AF  0F                 [189] (63)
44B0  03                 [190] (63)
44B1  00                 [191] (63)
44B2  00                 [192] (63)
44B3  0F                 [193] (63)
44B4  03                 [194] (65)
44B5  00                 [195] (65)
44B6  00                 [196] (65)
44B7  0F                 [197] (65)
44B8  03                 [198] (65)
44B9  00                 [199] (65)
44BA  00                 [200] (66)
44BB  0F                 [201] (66)
44BC  03                 [202] (66)
44BD  00                 [203] (67)
44BE  00                 [204] (67)
44BF  10                 [205] (67)
44C0  03                 [206] (67)
44C1  00                 [207] (67)
44C2  00                 [208] (67)
44C3  10                 [209] (68)
44C4  03                 [210] (68)
44C5  00                 [211] (72)
44C6  00                 [212] (74)
44C7  10                 [213] (74)
44C8  03                 [214] (74)
44C9  00                 [215] (74)
44CA  00                 [216] (75)
44CB  13                 [217] (75)
44CC  03                 [218] (75)
44CD  00                 [219] (75)
44CE  00                 [220] (75)
44CF  13                 [221] (76)
44D0  03                 [222] (77)
44D1  00                 [223] (77)
44D2  00                 [224] (77)
44D3  14                 [225] (77)
44D4  03                 [226] (77)
44D5  00                 [227] (77)
44D6  00                 [228] (77)
44D7  15                 [229] (77)
44D8  03                 [230] (77)
44D9  00                 [231] (77)
44DA  00                 [232] (77)
44DB  17                 [233] (77)
44DC  03                 [234] (77)
44DD  00                 [235] (77)
44DE  00                 [236] (77)
44DF  17                 [237] (77)
44E0  03                 [238] (77)
44E1  00                 [239] (77)
44E2  00                 [240] (78)
44E3  17                 [241] (78)
44E4  03                 [242] (78)
44E5  00                 [243] (80)
44E6  00                 [244] (80)
44E7  17                 [245] (80)
44E8  03                 [246] (80)
44E9  00                 [247] (84)
                         * locals:
47CF  00                 sizelocvars (0)
                         * upvalues:
47D0  00                 sizeupvalues (0)
                         ** end of function **

                         
47D1                     ** function [8] definition (level 2)
                         ** start of function **
47D1  00                 string size (0)
                         source name: (none)
47D3  06                 line defined (854)
47D4  F7                 last line defined (887)
47D5  06                 nups (0)
47D6  00                 numparams (1)
47D7  01                 is_vararg (0)
47D8  00                 maxstacksize (8)
                         * code:
47DA  4E                 sizecode (78)
47DB  99000000           [01] loadk      2   0        ; 0
47DF  D9400000           [02] loadk      3   1        ; -51
47E3  19810000           [03] loadk      4   2        ; 0
47E7  5DC10000           [04] getglobal  5   3        ; 1074689893
47EB  92018000           [05] move       6   1      
47EF  62810001           [06] call       5   2   2  
47F3  58010000           [07] test       5       0    ; to [9] if true
47F7  1A400280           [08] jmp        10           ; to [19]
fail op	33
47FB  21800002           [09] tforloop   0       2    ; to [11] if exit
47FF  1AC00180           [10] jmp        8            ; to [19]
4803  64014100           [11] self       5   0   260  ; -1870903749
4807  62810001           [12] call       5   2   2  
480B  52008002           [13] move       1   5      
480F  03C10002           [14] add        4   4   3  
4813  5D410100           [15] getglobal  5   5        ; 538022378
4817  92018001           [16] move       6   3      
481B  62410001           [17] call       5   2   1  
481F  1A00FC7F           [18] jmp        -15          ; to [4]
4823  5DC10000           [19] getglobal  5   3        ; 1074689893
4827  92018000           [20] move       6   1      
482B  62810001           [21] call       5   2   2  
482F  58410000           [22] test       5       1    ; to [24] if false
4833  1A400080           [23] jmp        2            ; to [26]
fail op	21
4837  15000101           [24] concat     0   2   4  
483B  1A000080           [25] jmp        1            ; to [27]
483F  1E008000           [26] return     0   1      
4843  6481C100           [27] self       5   1   262  ; -1957065004
4847  DDC10100           [28] getglobal  7   7        ; gBaseAvatarType
484B  62818001           [29] call       5   3   2  
484F  58410000           [30] test       5       1    ; to [32] if false
4853  1A000080           [31] jmp        1            ; to [33]
4857  1E008000           [32] return     0   1      
485B  5D010200           [33] getglobal  5   8        ; gRegion
485F  6441C202           [34] self       5   5   265  ; -1520831144
4863  62810001           [35] call       5   2   2  
4867  58010000           [36] test       5       0    ; to [38] if true
486B  1AC00980           [37] jmp        40           ; to [78]
486F  5DC10000           [38] getglobal  5   3        ; 1074689893
4873  92018000           [39] move       6   1      
4877  62810001           [40] call       5   2   2  
487B  58410000           [41] test       5       1    ; to [43] if false
487F  1A000880           [42] jmp        33           ; to [76]
4883  6481C100           [43] self       5   1   262  ; -1957065004
4887  DDC10100           [44] getglobal  7   7        ; gBaseAvatarType
488B  62818001           [45] call       5   3   2  
488F  58010000           [46] test       5       0    ; to [48] if true
4893  1AC00680           [47] jmp        28           ; to [76]
4897  64814200           [48] self       5   0   266  ; 796523475
489B  62810001           [49] call       5   2   2  
fail op	21
489F  15400181           [50] concat     0   258 5  
48A3  1AC00580           [51] jmp        24           ; to [76]
48A7  64C1C200           [52] self       5   1   267  ; 2059635593
48AB  DD010300           [53] getglobal  7   12       ; Engine
48AF  CE41C303           [54] gettable   7   7   269  ; "FBA_ROLL"
48B3  62818001           [55] call       5   3   2  
48B7  58410000           [56] test       5       1    ; to [58] if false
48BB  1A400480           [57] jmp        18           ; to [76]
48BF  64014100           [58] self       5   0   260  ; -1870903749
48C3  62810001           [59] call       5   2   2  
48C7  52008002           [60] move       1   5      
48CB  6481C300           [61] self       5   1   270  ; -1917464545
48CF  62810001           [62] call       5   2   2  
48D3  58010000           [63] test       5       0    ; to [65] if true
48D7  1A800180           [64] jmp        7            ; to [72]
48DB  6481C300           [65] self       5   1   270  ; -1917464545
48DF  62810001           [66] call       5   2   2  
48E3  64C1C302           [67] self       5   5   271  ; 2021995050
48E7  62810001           [68] call       5   2   2  
48EB  58010000           [69] test       5       0    ; to [71] if true
48EF  1A000080           [70] jmp        1            ; to [72]
48F3  1AC00080           [71] jmp        4            ; to [76]
48F7  5D410100           [72] getglobal  5   5        ; 538022378
48FB  99810000           [73] loadk      6   2        ; 0
48FF  62410001           [74] call       5   2   1  
4903  1A40F67F           [75] jmp        -38          ; to [38]
4907  64014400           [76] self       5   0   272  ; -1990411311
490B  62410001           [77] call       5   2   1  
490F  1E008000           [78] return     0   1      
                         * constants:
4913  11                 sizek (17)
4914  03                 const type 3
4915  00000040           const [0]: (0)
4919  03                 const type 3
491A  CDCCCC3D           const [1]: (-51)
491E  03                 const type 3
491F  00000000           const [2]: (0)
4923  01                 const type 3
4924  65770E40           const [3]: (1074689893)
4928  01                 const type 3
4929  3B467C90           const [4]: (-1870903749)
492D  01                 const type 3
492E  EA911120           const [5]: (538022378)
4932  01                 const type 3
4933  D48E598B           const [6]: (-1957065004)
4937  04                 const type 4
4938  10                 string size (16)
4939  6742617365417661+  "gBaseAva"
4941  7461725479706500   "tarType\0"
                         const [7]: "gBaseAvatarType"
4949  04                 const type 4
494A  08                 string size (8)
494B  67526567696F6E00   "gRegion\0"
                         const [8]: "gRegion"
4953  01                 const type 3
4954  58F559A5           const [9]: (-1520831144)
4958  01                 const type 3
4959  D3FB792F           const [10]: (796523475)
495D  01                 const type 3
495E  898BC37A           const [11]: (2059635593)
4962  04                 const type 4
4963  07                 string size (7)
4964  456E67696E6500     "Engine\0"
                         const [12]: "Engine"
496B  04                 const type 4
496C  09                 string size (9)
496D  4642415F524F4C4C+  "FBA_ROLL"
4975  00                 "\0"
                         const [13]: "FBA_ROLL"
4976  01                 const type 3
4977  1FD0B58D           const [14]: (-1917464545)
497B  01                 const type 3
497C  2A328578           const [15]: (2021995050)
4980  01                 const type 3
4981  D1BB5C89           const [16]: (-1990411311)
                         * functions:
4985  00                 sizep (0)
                         * lines:
4986  4E                 sizelineinfo (78)
                         [pc] (line)
4987  58                 [01] (88)
4988  03                 [02] (89)
4989  00                 [03] (90)
498A  00                 [04] (92)
498B  59                 [05] (92)
498C  03                 [06] (92)
498D  00                 [07] (92)
498E  00                 [08] (92)
498F  5A                 [09] (92)
4990  03                 [10] (92)
4991  00                 [11] (93)
4992  00                 [12] (93)
4993  5C                 [13] (93)
4994  03                 [14] (94)
4995  00                 [15] (95)
4996  00                 [16] (95)
4997  5C                 [17] (95)
4998  03                 [18] (95)
4999  00                 [19] (98)
499A  00                 [20] (98)
499B  5C                 [21] (98)
499C  03                 [22] (98)
499D  00                 [23] (98)
499E  00                 [24] (98)
499F  5C                 [25] (98)
49A0  03                 [26] (99)
49A1  00                 [27] (102)
49A2  00                 [28] (102)
49A3  5C                 [29] (102)
49A4  03                 [30] (102)
49A5  00                 [31] (102)
49A6  00                 [32] (103)
49A7  5C                 [33] (106)
49A8  03                 [34] (106)
49A9  00                 [35] (106)
49AA  00                 [36] (106)
49AB  5C                 [37] (106)
49AC  03                 [38] (107)
49AD  00                 [39] (107)
49AE  00                 [40] (107)
49AF  5D                 [41] (107)
49B0  03                 [42] (107)
49B1  00                 [43] (107)
49B2  00                 [44] (107)
49B3  5D                 [45] (107)
49B4  03                 [46] (107)
49B5  00                 [47] (107)
49B6  00                 [48] (107)
49B7  5D                 [49] (107)
49B8  03                 [50] (107)
49B9  00                 [51] (107)
49BA  00                 [52] (107)
49BB  5E                 [53] (107)
49BC  03                 [54] (107)
49BD  00                 [55] (107)
49BE  00                 [56] (107)
49BF  5F                 [57] (107)
49C0  03                 [58] (109)
49C1  00                 [59] (109)
49C2  00                 [60] (109)
49C3  5F                 [61] (111)
49C4  03                 [62] (111)
49C5  00                 [63] (111)
49C6  00                 [64] (111)
49C7  5F                 [65] (111)
49C8  03                 [66] (111)
49C9  00                 [67] (111)
49CA  00                 [68] (111)
49CB  5F                 [69] (111)
49CC  03                 [70] (111)
49CD  00                 [71] (112)
49CE  00                 [72] (114)
49CF  62                 [73] (114)
49D0  03                 [74] (114)
49D1  00                 [75] (114)
49D2  00                 [76] (117)
49D3  62                 [77] (117)
49D4  03                 [78] (119)
                         * locals:
4ABF  00                 sizelocvars (0)
                         * upvalues:
4AC0  00                 sizeupvalues (0)
                         ** end of function **

                         
4AC1                     ** function [9] definition (level 2)
                         ** start of function **
4AC1  00                 string size (0)
                         source name: (none)
4AC3  06                 line defined (889)
4AC4  9E                 last line defined (926)
4AC5  07                 nups (0)
4AC6  00                 numparams (2)
4AC7  02                 is_vararg (0)
4AC8  00                 maxstacksize (13)
                         * code:
4ACA  73                 sizecode (115)
4ACB  9D000000           [001] getglobal  2   0        ; gRegion
4ACF  A4404001           [002] self       2   2   257  ; -1520831144
4AD3  A2800001           [003] call       2   2   2  
4AD7  98000000           [004] test       2       0    ; to [6] if true
4ADB  1A001B80           [005] jmp        109          ; to [115]
4ADF  9D800000           [006] getglobal  2   2        ; 1074689893
4AE3  D2008000           [007] move       3   1      
4AE7  A2800001           [008] call       2   2   2  
4AEB  98400000           [009] test       2       1    ; to [11] if false
4AEF  1AC01980           [010] jmp        104          ; to [115]
4AF3  A4C0C000           [011] self       2   1   259  ; 154574904
4AF7  A2800001           [012] call       2   2   2  
4AFB  C6008001           [013] loadnil    3   3      
4AFF  1D810000           [014] getglobal  4   2        ; 1074689893
4B03  52010001           [015] move       5   2      
4B07  22810001           [016] call       4   2   2  
4B0B  18010000           [017] test       4       0    ; to [19] if true
4B0F  1A400580           [018] jmp        22           ; to [41]
4B13  2401C100           [019] self       4   1   260  ; 72954849
4B17  22810001           [020] call       4   2   2  
4B1B  D2000002           [021] move       3   4      
4B1F  1D810000           [022] getglobal  4   2        ; 1074689893
4B23  52018001           [023] move       5   3      
4B27  22810001           [024] call       4   2   2  
4B2B  18410000           [025] test       4       1    ; to [27] if false
4B2F  1A000180           [026] jmp        5            ; to [32]
4B33  2441C101           [027] self       4   3   261  ; -1957065004
4B37  9D810100           [028] getglobal  6   6        ; gBaseAvatarType
4B3B  22818001           [029] call       4   3   2  
4B3F  18410000           [030] test       4       1    ; to [32] if false
4B43  1A000080           [031] jmp        1            ; to [33]
4B47  1E008000           [032] return     0   1      
4B4B  24C1C100           [033] self       4   1   263  ; -1450829232
4B4F  22810001           [034] call       4   2   2  
4B53  6401C201           [035] self       5   3   264  ; -1917464545
4B57  62810001           [036] call       5   2   2  
4B5B  6441C202           [037] self       5   5   265  ; -1340700632
4B5F  D2010002           [038] move       7   4      
4B63  62818001           [039] call       5   3   2  
4B67  92008002           [040] move       2   5      
4B6B  5D810000           [041] getglobal  5   2        ; 1074689893
4B6F  92010001           [042] move       6   2      
4B73  62810001           [043] call       5   2   2  
4B77  58410000           [044] test       5       1    ; to [46] if false
4B7B  1A001180           [045] jmp        69           ; to [115]
4B7F  64414101           [046] self       5   2   261  ; -1957065004
4B83  DD810200           [047] getglobal  7   10       ; gWeaponExType
4B87  62818001           [048] call       5   3   2  
4B8B  58010000           [049] test       5       0    ; to [51] if true
4B8F  1AC00F80           [050] jmp        64           ; to [115]
4B93  5D810000           [051] getglobal  5   2        ; 1074689893
4B97  92018001           [052] move       6   3      
4B9B  62810001           [053] call       5   2   2  
4B9F  58010000           [054] test       5       0    ; to [56] if true
4BA3  1A800080           [055] jmp        3            ; to [59]
4BA7  64C14201           [056] self       5   2   267  ; -1538682285
4BAB  62810001           [057] call       5   2   2  
4BAF  D2008002           [058] move       3   5      
4BB3  5D810000           [059] getglobal  5   2        ; 1074689893
4BB7  92018001           [060] move       6   3      
4BBB  62810001           [061] call       5   2   2  
4BBF  58410000           [062] test       5       1    ; to [64] if false
4BC3  1A800C80           [063] jmp        51           ; to [115]
4BC7  6401C201           [064] self       5   3   264  ; -1917464545
4BCB  62810001           [065] call       5   2   2  
4BCF  6401C302           [066] self       5   5   268  ; -940929887
4BD3  D9410300           [067] loadk      7   13       ; 0
4BD7  1D820300           [068] getglobal  8   14       ; Game
4BDB  0EC24304           [069] gettable   8   8   271  ; "WEAPON_NULLIFIER_BUBBLE_POP_CHANCE"
4BDF  64024401           [070] self       9   2   272  ; -491574171
4BE3  62820001           [071] call       9   2   2  
4BE7  92020001           [072] move       10  2      
4BEB  62810003           [073] call       5   6   2  
4BEF  9D410400           [074] getglobal  6   17       ; math
4BF3  8E814403           [075] gettable   6   6   274  ; -2040962569
4BF7  A2818000           [076] call       6   1   2  
fail op	21
4BFB  15400103           [077] concat     0   6   5  
4BFF  1AC00880           [078] jmp        36           ; to [115]
4C03  A4C14400           [079] self       6   0   275  ; -1870903749
4C07  A2810001           [080] call       6   2   2  
4C0B  DD810000           [081] getglobal  7   2        ; 1074689893
4C0F  12020003           [082] move       8   6      
4C13  E2810001           [083] call       7   2   2  
4C17  D8410000           [084] test       7       1    ; to [86] if false
4C1B  1A000780           [085] jmp        29           ; to [115]
4C1F  E4014503           [086] self       7   6   276  ; -1625438872
4C23  5D420500           [087] getglobal  9   21       ; bubbleCapDamageProxyType
4C27  E2818001           [088] call       7   3   2  
4C2B  1D820000           [089] getglobal  8   2        ; 1074689893
4C2F  52028003           [090] move       9   7      
4C33  22820001           [091] call       8   2   2  
4C37  18420000           [092] test       8       1    ; to [94] if false
4C3B  1A800480           [093] jmp        19           ; to [113]
4C3F  1D820500           [094] getglobal  8   22       ; Engine
4C43  0EC24504           [095] gettable   8   8   279  ; -98643418
4C47  22828000           [096] call       8   1   2  
4C4B  64024604           [097] self       9   8   280  ; -995861768
4C4F  DD820500           [098] getglobal  11  22       ; Engine
4C53  CE42C605           [099] gettable   11  11  281  ; "DT_HEALTH_DRAIN"
4C57  19830600           [100] loadk      12  26       ; 0
4C5B  62420002           [101] call       9   4   1  
4C5F  6402C703           [102] self       9   7   284  ; 796523475
4C63  62820001           [103] call       9   2   2  
4C67  4382C604           [104] add        9   9   282  ; 0
4C6B  0C42828D           [105] settable   8   283 9    ; "baseAmount"
4C6F  64424704           [106] self       9   8   285  ; -420630141
4C73  D2028001           [107] move       11  3      
4C77  62428001           [108] call       9   3   1  
4C7B  6482C703           [109] self       9   7   286  ; 1193457265
4C7F  D2020004           [110] move       11  8      
4C83  62428001           [111] call       9   3   1  
4C87  1A400080           [112] jmp        2            ; to [115]
4C8B  64C24700           [113] self       9   0   287  ; -725453761
4C8F  62420001           [114] call       9   2   1  
4C93  1E008000           [115] return     0   1      
                         * constants:
4C97  20                 sizek (32)
4C98  04                 const type 4
4C99  08                 string size (8)
4C9A  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
4CA2  01                 const type 3
4CA3  58F559A5           const [1]: (-1520831144)
4CA7  01                 const type 3
4CA8  65770E40           const [2]: (1074689893)
4CAC  01                 const type 3
4CAD  38A03609           const [3]: (154574904)
4CB1  01                 const type 3
4CB2  E1335904           const [4]: (72954849)
4CB6  01                 const type 3
4CB7  D48E598B           const [5]: (-1957065004)
4CBB  04                 const type 4
4CBC  10                 string size (16)
4CBD  6742617365417661+  "gBaseAva"
4CC5  7461725479706500   "tarType\0"
                         const [6]: "gBaseAvatarType"
4CCD  01                 const type 3
4CCE  501A86A9           const [7]: (-1450829232)
4CD2  01                 const type 3
4CD3  1FD0B58D           const [8]: (-1917464545)
4CD7  01                 const type 3
4CD8  288816B0           const [9]: (-1340700632)
4CDC  04                 const type 4
4CDD  0E                 string size (14)
4CDE  67576561706F6E45+  "gWeaponE"
4CE6  785479706500       "xType\0"
                         const [10]: "gWeaponExType"
4CEC  01                 const type 3
4CED  539249A4           const [11]: (-1538682285)
4CF1  01                 const type 3
4CF2  A18CEAC7           const [12]: (-940929887)
4CF6  03                 const type 3
4CF7  00000000           const [13]: (0)
4CFB  04                 const type 4
4CFC  05                 string size (5)
4CFD  47616D6500         "Game\0"
                         const [14]: "Game"
4D02  04                 const type 4
4D03  23                 string size (35)
4D04  574541504F4E5F4E+  "WEAPON_N"
4D0C  554C4C4946494552+  "ULLIFIER"
4D14  5F425542424C455F+  "_BUBBLE_"
4D1C  504F505F4348414E+  "POP_CHAN"
4D24  434500             "CE\0"
                         const [15]: "WEAPON_NULLIFIER_BUBBLE_POP_CHANCE"
4D27  01                 const type 3
4D28  652CB3E2           const [16]: (-491574171)
4D2C  04                 const type 4
4D2D  05                 string size (5)
4D2E  6D61746800         "math\0"
                         const [17]: "math"
4D33  01                 const type 3
4D34  F7615986           const [18]: (-2040962569)
4D38  01                 const type 3
4D39  3B467C90           const [19]: (-1870903749)
4D3D  01                 const type 3
4D3E  68C51D9F           const [20]: (-1625438872)
4D42  04                 const type 4
4D43  19                 string size (25)
4D44  627562626C654361+  "bubbleCa"
4D4C  7044616D61676550+  "pDamageP"
4D54  726F787954797065+  "roxyType"
4D5C  00                 "\0"
                         const [21]: "bubbleCapDamageProxyType"
4D5D  04                 const type 4
4D5E  07                 string size (7)
4D5F  456E67696E6500     "Engine\0"
                         const [22]: "Engine"
4D66  01                 const type 3
4D67  26D21EFA           const [23]: (-98643418)
4D6B  01                 const type 3
4D6C  F85AA4C4           const [24]: (-995861768)
4D70  04                 const type 4
4D71  10                 string size (16)
4D72  44545F4845414C54+  "DT_HEALT"
4D7A  485F445241494E00   "H_DRAIN\0"
                         const [25]: "DT_HEALTH_DRAIN"
4D82  03                 const type 3
4D83  0000803F           const [26]: (0)
4D87  04                 const type 4
4D88  0B                 string size (11)
4D89  62617365416D6F75+  "baseAmou"
4D91  6E7400             "nt\0"
                         const [27]: "baseAmount"
4D94  01                 const type 3
4D95  D3FB792F           const [28]: (796523475)
4D99  01                 const type 3
4D9A  83B1EDE6           const [29]: (-420630141)
4D9E  01                 const type 3
4D9F  71B62247           const [30]: (1193457265)
4DA3  01                 const type 3
4DA4  3F74C2D4           const [31]: (-725453761)
                         * functions:
4DA8  00                 sizep (0)
                         * lines:
4DA9  73                 sizelineinfo (115)
                         [pc] (line)
4DAA  7A                 [001] (122)
4DAB  03                 [002] (122)
4DAC  00                 [003] (122)
4DAD  00                 [004] (122)
4DAE  7A                 [005] (122)
4DAF  03                 [006] (122)
4DB0  00                 [007] (122)
4DB1  00                 [008] (122)
4DB2  7A                 [009] (122)
4DB3  03                 [010] (122)
4DB4  00                 [011] (123)
4DB5  00                 [012] (123)
4DB6  7A                 [013] (124)
4DB7  03                 [014] (125)
4DB8  00                 [015] (125)
4DB9  00                 [016] (125)
4DBA  7A                 [017] (125)
4DBB  03                 [018] (125)
4DBC  00                 [019] (126)
4DBD  00                 [020] (126)
4DBE  7A                 [021] (126)
4DBF  03                 [022] (127)
4DC0  00                 [023] (127)
4DC1  00                 [024] (127)
4DC2  7A                 [025] (127)
4DC3  03                 [026] (127)
4DC4  00                 [027] (127)
4DC5  00                 [028] (127)
4DC6  7A                 [029] (127)
4DC7  03                 [030] (127)
4DC8  00                 [031] (127)
4DC9  00                 [032] (-128)
4DCA  7A                 [033] (-125)
4DCB  03                 [034] (-125)
4DCC  00                 [035] (-124)
4DCD  00                 [036] (-124)
4DCE  7A                 [037] (-124)
4DCF  03                 [038] (-124)
4DD0  00                 [039] (-124)
4DD1  00                 [040] (-124)
4DD2  7B                 [041] (-122)
4DD3  03                 [042] (-122)
4DD4  00                 [043] (-122)
4DD5  00                 [044] (-122)
4DD6  7B                 [045] (-122)
4DD7  03                 [046] (-122)
4DD8  00                 [047] (-122)
4DD9  00                 [048] (-122)
4DDA  7C                 [049] (-122)
4DDB  03                 [050] (-122)
4DDC  00                 [051] (-121)
4DDD  00                 [052] (-121)
4DDE  7D                 [053] (-121)
4DDF  03                 [054] (-121)
4DE0  00                 [055] (-121)
4DE1  00                 [056] (-120)
4DE2  7D                 [057] (-120)
4DE3  03                 [058] (-120)
4DE4  00                 [059] (-118)
4DE5  00                 [060] (-118)
4DE6  7D                 [061] (-118)
4DE7  03                 [062] (-118)
4DE8  00                 [063] (-118)
4DE9  00                 [064] (-117)
4DEA  7D                 [065] (-117)
4DEB  03                 [066] (-117)
4DEC  00                 [067] (-117)
4DED  00                 [068] (-117)
4DEE  7D                 [069] (-117)
4DEF  03                 [070] (-117)
4DF0  00                 [071] (-117)
4DF1  00                 [072] (-117)
4DF2  7E                 [073] (-117)
4DF3  03                 [074] (-116)
4DF4  00                 [075] (-116)
4DF5  00                 [076] (-116)
4DF6  7E                 [077] (-116)
4DF7  03                 [078] (-116)
4DF8  00                 [079] (-115)
4DF9  00                 [080] (-115)
4DFA  7E                 [081] (-114)
4DFB  03                 [082] (-114)
4DFC  00                 [083] (-114)
4DFD  00                 [084] (-114)
4DFE  7F                 [085] (-114)
4DFF  03                 [086] (-113)
4E00  00                 [087] (-113)
4E01  00                 [088] (-113)
4E02  7F                 [089] (-112)
4E03  03                 [090] (-112)
4E04  00                 [091] (-112)
4E05  00                 [092] (-112)
4E06  7F                 [093] (-112)
4E07  03                 [094] (-111)
4E08  00                 [095] (-111)
4E09  00                 [096] (-111)
4E0A  7F                 [097] (-110)
4E0B  03                 [098] (-110)
4E0C  00                 [099] (-110)
4E0D  00                 [100] (-110)
4E0E  7F                 [101] (-110)
4E0F  03                 [102] (-109)
4E10  00                 [103] (-109)
4E11  00                 [104] (-109)
4E12  7F                 [105] (-109)
4E13  03                 [106] (-108)
4E14  00                 [107] (-108)
4E15  00                 [108] (-108)
4E16  7F                 [109] (-107)
4E17  03                 [110] (-107)
4E18  00                 [111] (-107)
4E19  00                 [112] (-107)
4E1A  7F                 [113] (-105)
4E1B  03                 [114] (-105)
4E1C  00                 [115] (-98)
                         * locals:
4F76  00                 sizelocvars (0)
                         * upvalues:
4F77  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
4F78  2B                 sizelineinfo (43)
                         [pc] (line)
4F79  31                 [01] (49)
4F7A  00                 [02] (49)
4F7B  00                 [03] (49)
4F7C  00                 [04] (57)
4F7D  31                 [05] (81)
4F7E  00                 [06] (81)
4F7F  00                 [07] (96)
4F80  00                 [08] (96)
4F81  31                 [09] (83)
4F82  00                 [10] (111)
4F83  00                 [11] (111)
4F84  00                 [12] (98)
4F85  39                 [13] (-126)
4F86  00                 [14] (-116)
4F87  00                 [15] (-116)
4F88  00                 [16] (-116)
4F89  51                 [17] (-116)
4F8A  00                 [18] (-124)
4F8B  00                 [19] (-114)
4F8C  00                 [20] (-114)
4F8D  51                 [21] (-114)
4F8E  00                 [22] (-113)
4F8F  00                 [23] (-113)
4F90  00                 [24] (-113)
4F91  60                 [25] (-11)
4F92  00                 [26] (-11)
4F93  00                 [27] (-11)
4F94  00                 [28] (-11)
4F95  60                 [29] (-11)
4F96  00                 [30] (-111)
4F97  00                 [31] (84)
4F98  00                 [32] (84)
4F99  53                 [33] (84)
4F9A  00                 [34] (84)
4F9B  00                 [35] (84)
4F9C  00                 [36] (-9)
4F9D  6F                 [37] (119)
4F9E  00                 [38] (119)
4F9F  00                 [39] (86)
4FA0  00                 [40] (-98)
4FA1  6F                 [41] (-98)
4FA2  00                 [42] (121)
4FA3  00                 [43] (-98)
                         * locals:
5025  00                 sizelocvars (0)
                         * upvalues:
5026  00                 sizeupvalues (0)
                         ** end of function **

5027                     ** end of chunk **
