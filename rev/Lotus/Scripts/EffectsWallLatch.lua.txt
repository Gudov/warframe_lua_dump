1	C:\wlua_dump\path\Lotus\Scripts\EffectsWallLatch.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Scripts\EffectsWallLatch.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  09                 size of number (bytes)
0008  31                 integral (1=integral)
449
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
GAME_L1_LEG2
GAME_R1_LEG2
GAME_L1_ARM2
GAME_R1_ARM2
GAME_C1_SPINE1
GAME_C1_SPINE2
GAME_C1_HEAD1
ExtrudeVector
ExtrudePoint
OffsetTime
/Lotus/Powersuits/Loki/LokiBaseSuit
WallLatchFX
AimGlideEffects
gTennoAvatarType
wallLatchStartSound
Engine
SP_VERY_LOW
lokiWallLatchLoopSound
wallLatchLoopSound
x
y
z
projType
EMPTY_SYMBOL
ZERO_VECTOR
ZERO_ROTATION
gRegion
windType
latchBeamType
math
table
postProcess
WALLRUNNING_LEFT
WALLRUNNING_RIGHT
WALLRUNNING_UP
Lotus_Game
ALPHA_ATTEN
viewShake
mShakeAmbient
wallLatchEndSound
gRegion
postProcess
viewShake
mShakeAmbient
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  09                 maxstacksize (9)
                         * code:
0008  31                 sizecode (49)
0009  0B000003           [01] newtable   0   6   0    ; array=6, hash=0
000D  5D000000           [02] getglobal  1   0        ; -332969190
0011  99400000           [03] loadk      2   1        ; "GAME_L1_LEG2"
0015  62800001           [04] call       1   2   2  
0019  9D000000           [05] getglobal  2   0        ; -332969190
001D  D9800000           [06] loadk      3   2        ; "GAME_R1_LEG2"
0021  A2800001           [07] call       2   2   2  
0025  DD000000           [08] getglobal  3   0        ; -332969190
0029  19C10000           [09] loadk      4   3        ; "GAME_L1_ARM2"
002D  E2800001           [10] call       3   2   2  
0031  1D010000           [11] getglobal  4   0        ; -332969190
0035  59010100           [12] loadk      5   4        ; "GAME_R1_ARM2"
0039  22810001           [13] call       4   2   2  
003D  5D010000           [14] getglobal  5   0        ; -332969190
0041  99410100           [15] loadk      6   5        ; "GAME_C1_SPINE1"
0045  62810001           [16] call       5   2   2  
0049  9D010000           [17] getglobal  6   0        ; -332969190
004D  D9810100           [18] loadk      7   6        ; "GAME_C1_SPINE2"
0051  A2810001           [19] call       6   2   2  
0055  DD010000           [20] getglobal  7   0        ; -332969190
0059  19C20100           [21] loadk      8   7        ; "GAME_C1_HEAD1"
005D  E2010001           [22] call       7   2   0  
0061  1B400000           [23] setlist    0   0   1    ; index 1 to top
0065  5D000000           [24] getglobal  1   0        ; -332969190
0069  99000200           [25] loadk      2   8        ; "ExtrudeVector"
006D  62800001           [26] call       1   2   2  
0071  9D000000           [27] getglobal  2   0        ; -332969190
0075  D9400200           [28] loadk      3   9        ; "ExtrudePoint"
0079  A2800001           [29] call       2   2   2  
007D  DD000000           [30] getglobal  3   0        ; -332969190
0081  19810200           [31] loadk      4   10       ; "OffsetTime"
0085  E2800001           [32] call       3   2   2  
0089  19C10200           [33] loadk      4   11       ; -102
008D  5D010300           [34] getglobal  5   12       ; 738251817
0091  99410300           [35] loadk      6   13       ; "/Lotus/Powersuits/Loki/LokiBaseSuit"
0095  62810001           [36] call       5   2   2  
0099  A5010000           [37] closure    6   0      
009D  12008002           [38] move       0   5      
00A1  12008000           [39] move       0   1      
00A5  12000001           [40] move       0   2      
00A9  12000000           [41] move       0   0      
00AD  12000002           [42] move       0   4      
00B1  12008001           [43] move       0   3      
00B5  A0810300           [44] setglobal  6   14       ; WallLatchFX
00B9  A0C10300           [45] setglobal  6   15       ; 717239586
00BD  A5410000           [46] closure    6   1      
00C1  A0010400           [47] setglobal  6   16       ; AimGlideEffects
00C5  A0410400           [48] setglobal  6   17       ; -1435574315
00C9  1E008000           [49] return     0   1      
                         * constants:
00CD  12                 sizek (18)
00CE  01                 const type 3
00CF  1A4B27EC           const [0]: (-332969190)
00D3  04                 const type 4
00D4  0D                 string size (13)
00D5  47414D455F4C315F+  "GAME_L1_"
00DD  4C45473200         "LEG2\0"
                         const [1]: "GAME_L1_LEG2"
00E2  04                 const type 4
00E3  0D                 string size (13)
00E4  47414D455F52315F+  "GAME_R1_"
00EC  4C45473200         "LEG2\0"
                         const [2]: "GAME_R1_LEG2"
00F1  04                 const type 4
00F2  0D                 string size (13)
00F3  47414D455F4C315F+  "GAME_L1_"
00FB  41524D3200         "ARM2\0"
                         const [3]: "GAME_L1_ARM2"
0100  04                 const type 4
0101  0D                 string size (13)
0102  47414D455F52315F+  "GAME_R1_"
010A  41524D3200         "ARM2\0"
                         const [4]: "GAME_R1_ARM2"
010F  04                 const type 4
0110  0F                 string size (15)
0111  47414D455F43315F+  "GAME_C1_"
0119  5350494E453100     "SPINE1\0"
                         const [5]: "GAME_C1_SPINE1"
0120  04                 const type 4
0121  0F                 string size (15)
0122  47414D455F43315F+  "GAME_C1_"
012A  5350494E453200     "SPINE2\0"
                         const [6]: "GAME_C1_SPINE2"
0131  04                 const type 4
0132  0E                 string size (14)
0133  47414D455F43315F+  "GAME_C1_"
013B  484541443100       "HEAD1\0"
                         const [7]: "GAME_C1_HEAD1"
0141  04                 const type 4
0142  0E                 string size (14)
0143  4578747275646556+  "ExtrudeV"
014B  6563746F7200       "ector\0"
                         const [8]: "ExtrudeVector"
0151  04                 const type 4
0152  0D                 string size (13)
0153  4578747275646550+  "ExtrudeP"
015B  6F696E7400         "oint\0"
                         const [9]: "ExtrudePoint"
0160  04                 const type 4
0161  0B                 string size (11)
0162  4F66667365745469+  "OffsetTi"
016A  6D6500             "me\0"
                         const [10]: "OffsetTime"
016D  03                 const type 3
016E  9A99193E           const [11]: (-102)
0172  01                 const type 3
0173  29D4002C           const [12]: (738251817)
0177  04                 const type 4
0178  24                 string size (36)
0179  2F4C6F7475732F50+  "/Lotus/P"
0181  6F77657273756974+  "owersuit"
0189  732F4C6F6B692F4C+  "s/Loki/L"
0191  6F6B694261736553+  "okiBaseS"
0199  75697400           "uit\0"
                         const [13]: "/Lotus/Powersuits/Loki/LokiBaseSuit"
019D  04                 const type 4
019E  0C                 string size (12)
019F  57616C6C4C617463+  "WallLatc"
01A7  68465800           "hFX\0"
                         const [14]: "WallLatchFX"
01AB  01                 const type 3
01AC  2235C02A           const [15]: (717239586)
01B0  04                 const type 4
01B1  10                 string size (16)
01B2  41696D476C696465+  "AimGlide"
01BA  4566666563747300   "Effects\0"
                         const [16]: "AimGlideEffects"
01C2  01                 const type 3
01C3  D5DF6EAA           const [17]: (-1435574315)
                         * functions:
01C7  02                 sizep (2)
                         
01C8                     ** function [0] definition (level 2)
                         ** start of function **
01C8  00                 string size (0)
                         source name: (none)
01C9  19                 line defined (25)
01CA  AE                 last line defined (174)
01CB  01                 nups (6)
01CC  06                 numparams (1)
01CD  01                 is_vararg (0)
01CE  00                 maxstacksize (48)
                         * code:
01D1  03                 sizecode (449)
01D2  5D000000           [001] getglobal  1   0        ; 538022378
01D6  99400000           [002] loadk      2   1        ; -51
01DA  62400001           [003] call       1   2   1  
01DE  64804000           [004] self       1   0   258  ; -1870903749
01E2  62800001           [005] call       1   2   2  
01E6  9DC00000           [006] getglobal  2   3        ; 1074689893
01EA  D2008000           [007] move       3   1      
01EE  A2800001           [008] call       2   2   2  
01F2  98000000           [009] test       2       0    ; to [11] if true
01F6  1A000080           [010] jmp        1            ; to [12]
01FA  1E008000           [011] return     0   1      
01FE  A400C100           [012] self       2   1   260  ; -1957065004
0202  1D410100           [013] getglobal  4   5        ; gTennoAvatarType
0206  A2808001           [014] call       2   3   2  
020A  E480C100           [015] self       3   1   262  ; -1917464545
020E  E2800001           [016] call       3   2   2  
0212  E4C0C101           [017] self       3   3   263  ; 1769516121
0216  E2800001           [018] call       3   2   2  
021A  1DC10000           [019] getglobal  4   3        ; 1074689893
021E  52018001           [020] move       5   3      
0222  22810001           [021] call       4   2   2  
0226  18010000           [022] test       4       0    ; to [24] if true
022A  1A000080           [023] jmp        1            ; to [25]
022E  1E008000           [024] return     0   1      
0232  2401C101           [025] self       4   3   260  ; -1957065004
0236  93010000           [026] getupval   6   0      
023A  22818001           [027] call       4   3   2  
023E  6401C200           [028] self       5   1   264  ; 630793108
0242  DD410200           [029] getglobal  7   9        ; wallLatchStartSound
0246  17020000           [030] loadbool   8   0   0    ; false
024A  5D820200           [031] getglobal  9   10       ; Engine
024E  4EC2C204           [032] gettable   9   9   267  ; "SP_VERY_LOW"
0252  97020000           [033] loadbool   10  0   0    ; false
0256  62410003           [034] call       5   6   1  
025A  46018002           [035] loadnil    5   5      
025E  18010000           [036] test       4       0    ; to [38] if true
0262  1A000280           [037] jmp        9            ; to [47]
0266  A401C200           [038] self       6   1   264  ; 630793108
026A  1D020300           [039] getglobal  8   12       ; lokiWallLatchLoopSound
026E  57020000           [040] loadbool   9   0   0    ; false
0272  9D820200           [041] getglobal  10  10       ; Engine
0276  8EC24205           [042] gettable   10  10  267  ; "SP_VERY_LOW"
027A  D7020000           [043] loadbool   11  0   0    ; false
027E  A2810003           [044] call       6   6   2  
0282  52010003           [045] move       5   6      
0286  1AC00180           [046] jmp        8            ; to [55]
028A  A401C200           [047] self       6   1   264  ; 630793108
028E  1D420300           [048] getglobal  8   13       ; wallLatchLoopSound
0292  57020000           [049] loadbool   9   0   0    ; false
0296  9D820200           [050] getglobal  10  10       ; Engine
029A  8EC24205           [051] gettable   10  10  267  ; "SP_VERY_LOW"
029E  D7020000           [052] loadbool   11  0   0    ; false
02A2  A2810003           [053] call       6   6   2  
02A6  52010003           [054] move       5   6      
02AA  A4814300           [055] self       6   0   270  ; 917683095
02AE  A2810001           [056] call       6   2   2  
02B2  DDC10300           [057] getglobal  7   15       ; 1287559689
02B6  1D020400           [058] getglobal  8   16       ; 572299008
02BA  4E424403           [059] gettable   9   6   273  ; "x"
fail op	0
02BE  40028004           [060] move       9   9      
02C2  8E824403           [061] gettable   10  6   274  ; "y"
02C6  CEC24403           [062] gettable   11  6   275  ; "z"
02CA  22820002           [063] call       8   4   2  
02CE  6402C500           [064] self       9   1   276  ; 54877834
02D2  62020001           [065] call       9   2   0  
02D6  E2810000           [066] call       7   0   2  
02DA  2442C500           [067] self       8   1   277  ; -1625438872
02DE  9D820500           [068] getglobal  10  22       ; projType
02E2  22828001           [069] call       8   3   2  
02E6  5DC20000           [070] getglobal  9   3        ; 1074689893
02EA  92020004           [071] move       10  8      
02EE  62820001           [072] call       9   2   2  
02F2  58020000           [073] test       9       0    ; to [75] if true
02F6  1AC00180           [074] jmp        8            ; to [83]
02FA  64C2C500           [075] self       9   1   279  ; -1421644046
02FE  DD820500           [076] getglobal  11  22       ; projType
0302  1D030600           [077] getglobal  12  24       ; EMPTY_SYMBOL
0306  5D430600           [078] getglobal  13  25       ; ZERO_VECTOR
030A  9D830600           [079] getglobal  14  26       ; ZERO_ROTATION
030E  D2038000           [080] move       15  1      
0312  62828003           [081] call       9   7   2  
0316  12028004           [082] move       8   9      
031A  5DC20000           [083] getglobal  9   3        ; 1074689893
031E  92020004           [084] move       10  8      
0322  62820001           [085] call       9   2   2  
0326  58420000           [086] test       9       1    ; to [88] if false
032A  1AC00280           [087] jmp        12           ; to [100]
032E  64C24604           [088] self       9   8   283  ; -786111647
0332  D3028000           [089] getupval   11  1      
0336  0E43C403           [090] gettable   12  7   273  ; "x"
033A  59030700           [091] loadk      13  28       ; 0
033E  8EC3C403           [092] gettable   14  7   275  ; "z"
0342  62420003           [093] call       9   6   1  
0346  64C24604           [094] self       9   8   283  ; -786111647
034A  D3020001           [095] getupval   11  2      
034E  0E43C403           [096] gettable   12  7   273  ; "x"
0352  59430700           [097] loadk      13  29       ; 0
0356  8EC3C403           [098] gettable   14  7   275  ; "z"
035A  62420003           [099] call       9   6   1  
035E  6482C700           [100] self       9   1   286  ; 196800914
0362  62820001           [101] call       9   2   2  
0366  9D020400           [102] getglobal  10  16       ; 572299008
036A  D9020700           [103] loadk      11  28       ; 0
036E  19C30700           [104] loadk      12  31       ; -51
0372  59030700           [105] loadk      13  28       ; 0
0376  A2820002           [106] call       10  4   2  
037A  43828204           [107] add        9   9   10 
037E  4DC28104           [108] sub        9   9   7  
0382  9D020800           [109] getglobal  10  32       ; gRegion
0386  A4424805           [110] self       10  10  289  ; -1110225722
038A  1D830800           [111] getglobal  12  34       ; windType
038E  52038004           [112] move       13  9      
0392  9D830600           [113] getglobal  14  26       ; ZERO_ROTATION
0396  A2828002           [114] call       10  5   2  
039A  E4C2C800           [115] self       11  1   291  ; 366271214
039E  5D030900           [116] getglobal  13  36       ; latchBeamType
03A2  E2828001           [117] call       11  3   2  
03A6  19430700           [118] loadk      12  29       ; 0
03AA  4A038005           [119] len        13  11     
03AE  99430700           [120] loadk      14  29       ; 0
03B2  10830080           [121] forprep    12  3        ; to [125]
03B6  0EC48305           [122] gettable   16  11  15 
03BA  24444908           [123] self       16  16  293  ; -725453761
03BE  22440001           [124] call       16  2   1  
03C2  14C3FE7F           [125] forloop    12  -4       ; to [122] if loop
03C6  0B040000           [126] newtable   16  0   0    ; array=0, hash=0
03CA  6484C900           [127] self       17  1   294  ; -1770455219
03CE  62840001           [128] call       17  2   2  
03D2  99440700           [129] loadk      18  29       ; 0
03D6  DDC40900           [130] getglobal  19  39       ; math
03DA  CE04CA09           [131] gettable   19  19  296  ; -1124579617
03DE  13058001           [132] getupval   20  3      
03E2  0A05000A           [133] len        20  20     
03E6  0445040A           [134] mul        20  20  17 
03EA  E2840001           [135] call       19  2   2  
03EE  19450700           [136] loadk      20  29       ; 0
03F2  90440B80           [137] forprep    18  46       ; to [184]
03F6  A4C5C500           [138] self       22  1   279  ; -1421644046
03FA  1D060900           [139] getglobal  24  36       ; latchBeamType
03FE  53068001           [140] getupval   25  3      
0402  4E46850C           [141] gettable   25  25  21 
0406  9D460600           [142] getglobal  26  25       ; ZERO_VECTOR
040A  DD860600           [143] getglobal  27  26       ; ZERO_ROTATION
040E  12078000           [144] move       28  1      
0412  A2858003           [145] call       22  7   2  
0416  DDC50000           [146] getglobal  23  3        ; 1074689893
041A  1206000B           [147] move       24  22     
041E  E2850001           [148] call       23  2   2  
0422  D8450000           [149] test       23      1    ; to [151] if false
0426  1A000880           [150] jmp        33           ; to [184]
042A  E405C500           [151] self       23  1   276  ; 54877834
042E  E2850001           [152] call       23  2   2  
0432  24464A0B           [153] self       24  22  297  ; 1311555023
0436  9DC60300           [154] getglobal  26  15       ; 1287559689
043A  DD060400           [155] getglobal  27  16       ; 572299008
043E  1D870A00           [156] getglobal  28  42       ; -1941280958
0442  53070002           [157] getupval   29  4      
fail op	0
0446  4007800E           [158] move       29  29     
044A  93070002           [159] getupval   30  4      
044E  22878001           [160] call       28  3   2  
0452  5D870A00           [161] getglobal  29  42       ; -1941280958
0456  93070002           [162] getupval   30  4      
fail op	0
045A  8007000F           [163] move       30  30     
045E  D3070002           [164] getupval   31  4      
0462  62878001           [165] call       29  3   2  
0466  99070700           [166] loadk      30  28       ; 0
046A  E2860002           [167] call       27  4   2  
046E  1207800B           [168] move       28  23     
0472  A2868001           [169] call       26  3   2  
0476  83868604           [170] add        26  9   26 
047A  22468001           [171] call       24  3   1  
047E  24C6460B           [172] self       24  22  283  ; -786111647
0482  93068002           [173] getupval   26  5      
0486  DD860A00           [174] getglobal  27  42       ; -1941280958
048A  19070700           [175] loadk      28  28       ; 0
048E  59C70A00           [176] loadk      29  43       ; 0
0492  E2068001           [177] call       27  3   0  
0496  22460000           [178] call       24  0   1  
049A  1D060B00           [179] getglobal  24  44       ; table
049E  0E464B0C           [180] gettable   24  24  301  ; -431682403
04A2  52060008           [181] move       25  16     
04A6  9206000B           [182] move       26  22     
04AA  22468001           [183] call       24  3   1  
04AE  9404F47F           [184] forloop    18  -47      ; to [138] if loop
04B2  0606000C           [185] loadnil    24  24     
04B6  59460700           [186] loadk      25  29       ; 0
04BA  A486CB00           [187] self       26  1   302  ; -1201586349
04BE  A2860001           [188] call       26  2   2  
04C2  98060000           [189] test       26      0    ; to [191] if true
04C6  1AC00080           [190] jmp        4            ; to [195]
04CA  9D060800           [191] getglobal  26  32       ; gRegion
04CE  A4C64B0D           [192] self       26  26  303  ; -1456226250
04D2  A2860001           [193] call       26  2   2  
04D6  0E064C0D           [194] gettable   24  26  304  ; "postProcess"
04DA  9DC60000           [195] getglobal  26  3        ; 1074689893
04DE  D2068000           [196] move       27  1      
04E2  A2860001           [197] call       26  2   2  
04E6  98460000           [198] test       26      1    ; to [200] if false
04EA  1A802B80           [199] jmp        175          ; to [375]
04EE  A446CC00           [200] self       26  1   305  ; 1511086594
04F2  A2860001           [201] call       26  2   2  
04F6  98460000           [202] test       26      1    ; to [204] if false
04FA  1A802A80           [203] jmp        171          ; to [375]
04FE  A486CC00           [204] self       26  1   306  ; -49551937
0502  A2860001           [205] call       26  2   2  
0506  DD860200           [206] getglobal  27  10       ; Engine
050A  CEC6CC0D           [207] gettable   27  27  307  ; "WALLRUNNING_LEFT"
fail op	35
050E  63C0060D           [208] close      1  
0512  1AC00280           [209] jmp        12           ; to [222]
0516  A486CC00           [210] self       26  1   306  ; -49551937
051A  A2860001           [211] call       26  2   2  
051E  DD860200           [212] getglobal  27  10       ; Engine
0522  CE06CD0D           [213] gettable   27  27  308  ; "WALLRUNNING_RIGHT"
fail op	35
0526  63C0060D           [214] close      1  
052A  1A400180           [215] jmp        6            ; to [222]
052E  A486CC00           [216] self       26  1   306  ; -49551937
0532  A2860001           [217] call       26  2   2  
0536  DD860200           [218] getglobal  27  10       ; Engine
053A  CE46CD0D           [219] gettable   27  27  309  ; "WALLRUNNING_UP"
fail op	35
053E  23C0060D           [220] close      0  
0542  1A002680           [221] jmp        153          ; to [375]
fail op	21
0546  1540048E           [222] concat     0   284 17 
054A  1A802580           [223] jmp        151          ; to [375]
054E  98000000           [224] test       2       0    ; to [226] if true
0552  1A000180           [225] jmp        5            ; to [231]
0556  A486CD00           [226] self       26  1   310  ; -1989965367
055A  A2860001           [227] call       26  2   2  
055E  98460000           [228] test       26      1    ; to [230] if false
0562  1A000080           [229] jmp        1            ; to [231]
0566  1AC02380           [230] jmp        144          ; to [375]
056A  A486C700           [231] self       26  1   286  ; 196800914
056E  A2860001           [232] call       26  2   2  
0572  5202000D           [233] move       9   26     
0576  A486C900           [234] self       26  1   294  ; -1770455219
057A  A2860001           [235] call       26  2   2  
057E  5204000D           [236] move       17  26     
0582  9DC60000           [237] getglobal  26  3        ; 1074689893
0586  D2060004           [238] move       27  8      
058A  A2860001           [239] call       26  2   2  
058E  98460000           [240] test       26      1    ; to [242] if false
0592  1A400580           [241] jmp        22           ; to [264]
0596  A4C64604           [242] self       26  8   283  ; -786111647
059A  1DC70D00           [243] getglobal  28  55       ; Lotus_Game
059E  0E074E0E           [244] gettable   28  28  312  ; "ALPHA_ATTEN"
05A2  52078008           [245] move       29  17     
05A6  A2460002           [246] call       26  4   1  
05AA  9DC60300           [247] getglobal  26  15       ; 1287559689
05AE  DD060400           [248] getglobal  27  16       ; 572299008
05B2  0E474403           [249] gettable   28  6   273  ; "x"
fail op	0
05B6  0007000E           [250] move       28  28     
05BA  4E874403           [251] gettable   29  6   274  ; "y"
05BE  8EC74403           [252] gettable   30  6   275  ; "z"
05C2  E2860002           [253] call       27  4   2  
05C6  2407C500           [254] self       28  1   276  ; 54877834
05CA  22070001           [255] call       28  2   0  
05CE  A2860000           [256] call       26  0   2  
05D2  D201000D           [257] move       7   26     
05D6  A4C64604           [258] self       26  8   283  ; -786111647
05DA  13070001           [259] getupval   28  2      
05DE  4E47C403           [260] gettable   29  7   273  ; "x"
05E2  99470700           [261] loadk      30  29       ; 0
05E6  CEC7C403           [262] gettable   31  7   275  ; "z"
05EA  A2460003           [263] call       26  6   1  
05EE  99460700           [264] loadk      26  29       ; 0
05F2  CA060008           [265] len        27  16     
05F6  19470700           [266] loadk      28  29       ; 0
05FA  90460C80           [267] forprep    26  50       ; to [318]
05FE  9DC70000           [268] getglobal  30  3        ; 1074689893
0602  CE470708           [269] gettable   31  16  29 
0606  A2870001           [270] call       30  2   2  
060A  98470000           [271] test       30      1    ; to [273] if false
060E  1A000B80           [272] jmp        45           ; to [318]
0612  93078001           [273] getupval   30  3      
0616  8A07000F           [274] len        30  30     
061A  8447040F           [275] mul        30  30  17 
fail op	21
061E  1540070F           [276] concat     0   30  29 
0622  1A000280           [277] jmp        9            ; to [287]
0626  8E470708           [278] gettable   30  16  29 
062A  DD070B00           [279] getglobal  31  44       ; table
062E  CE47CE0F           [280] gettable   31  31  313  ; -843973282
0632  12080008           [281] move       32  16     
0636  5208800E           [282] move       33  29     
063A  E2478001           [283] call       31  3   1  
063E  E447490F           [284] self       31  30  293  ; -725453761
0642  E2470001           [285] call       31  2   1  
0646  1A800780           [286] jmp        31           ; to [318]
064A  DD870E00           [287] getglobal  31  58       ; 1491452635
064E  E2878000           [288] call       31  1   2  
0652  C4C7CE0F           [289] mul        31  31  315  ; -51
0656  1D080F00           [290] getglobal  32  60       ; -1430027948
065A  59480F00           [291] loadk      33  61       ; 0
065E  99C80700           [292] loadk      34  31       ; -51
0662  C3C8870E           [293] add        35  29  31 
0666  0389CF0E           [294] add        36  29  318  ; -102
066A  03C90712           [295] add        36  36  31 
066E  22888002           [296] call       32  5   2  
0672  5D080F00           [297] getglobal  33  60       ; -1430027948
0676  99480F00           [298] loadk      34  61       ; 0
067A  D9C80700           [299] loadk      35  31       ; -51
067E  0349879F           [300] add        36  319 29   ; 51
0682  03C90712           [301] add        36  36  31 
0686  4349879F           [302] add        37  319 29   ; 51
068A  4389CF12           [303] add        37  37  318  ; -102
068E  43C98712           [304] add        37  37  31 
0692  62888002           [305] call       33  5   2  
0696  8E480708           [306] gettable   34  16  29 
069A  A4484A11           [307] self       34  34  297  ; 1311555023
069E  1D090400           [308] getglobal  36  16       ; 572299008
06A2  44095010           [309] mul        37  32  320  ; -51
06A6  84C9CE10           [310] mul        38  33  315  ; -51
06AA  8389898E           [311] add        38  285 38   ; 0
fail op	0
06AE  C0090010           [312] move       39  32     
06B2  C409D013           [313] mul        39  39  320  ; -51
06B6  22890002           [314] call       36  4   2  
06BA  03098904           [315] add        36  9   36 
06BE  0D890112           [316] sub        36  36  6  
06C2  A2488001           [317] call       34  3   1  
06C6  9406F37F           [318] forloop    26  -51      ; to [268] if loop
06CA  9DC80000           [319] getglobal  34  3        ; 1074689893
06CE  D2080005           [320] move       35  10     
06D2  A2880001           [321] call       34  2   2  
06D6  98480000           [322] test       34      1    ; to [324] if false
06DA  1A000480           [323] jmp        17           ; to [341]
06DE  A4485005           [324] self       34  10  321  ; -333955620
06E2  1D090400           [325] getglobal  36  16       ; 572299008
06E6  59090700           [326] loadk      37  28       ; 0
06EA  99C90700           [327] loadk      38  31       ; -51
06EE  D9090700           [328] loadk      39  28       ; 0
06F2  22890002           [329] call       36  4   2  
06F6  03098904           [330] add        36  9   36 
06FA  0D890112           [331] sub        36  36  6  
06FE  A2488001           [332] call       34  3   1  
0702  9D881000           [333] getglobal  34  66       ; 160735655
0706  C4488495           [334] mul        35  299 17   ; 0
070A  CDC888A1           [335] sub        35  323 35   ; 0
070E  19090700           [336] loadk      36  28       ; 0
0712  A2888001           [337] call       34  3   2  
0716  E4085105           [338] self       35  10  324  ; -892691945
071A  52090011           [339] move       37  34     
071E  E2488001           [340] call       35  3   1  
0722  18410000           [341] test       4       1    ; to [343] if false
0726  1AC00280           [342] jmp        12           ; to [355]
072A  DDC80900           [343] getglobal  35  39       ; math
072E  CE48D111           [344] gettable   35  35  325  ; -688728047
0732  12098008           [345] move       36  17     
0736  59891100           [346] loadk      37  70       ; 0
073A  E2888001           [347] call       35  3   2  
073E  24C9D102           [348] self       36  5   327  ; 1748762930
0742  9D091200           [349] getglobal  38  72       ; -1828500651
0746  D9891100           [350] loadk      39  70       ; 0
074A  194A1200           [351] loadk      40  73       ; 0
074E  520A8011           [352] move       41  35     
0752  A2090002           [353] call       38  4   0  
0756  22490000           [354] call       36  0   1  
075A  1DC90000           [355] getglobal  36  3        ; 1074689893
075E  5209000C           [356] move       37  24     
0762  22890001           [357] call       36  2   2  
0766  18490000           [358] test       36      1    ; to [360] if false
076A  1A800180           [359] jmp        7            ; to [367]
076E  0E89520C           [360] gettable   36  24  330  ; "viewShake"
0772  5DC90900           [361] getglobal  37  39       ; math
0776  4E09D312           [362] gettable   37  37  332  ; -1962864584
077A  99090700           [363] loadk      38  28       ; 0
077E  C449D30C           [364] mul        39  25  333  ; 0
0782  62898001           [365] call       37  3   2  
0786  0C4989A5           [366] settable   36  331 37   ; "mShakeAmbient"
078A  1D891300           [367] getglobal  36  78       ; 1289681407
078E  22898000           [368] call       36  1   2  
0792  04895112           [369] mul        36  36  326  ; 0
0796  4D06890C           [370] sub        25  25  36 
079A  1D090000           [371] getglobal  36  0        ; 538022378
079E  59090700           [372] loadk      37  28       ; 0
07A2  22490001           [373] call       36  2   1  
07A6  1AC0D27F           [374] jmp        -180         ; to [195]
07AA  1DC90000           [375] getglobal  36  3        ; 1074689893
07AE  5209000C           [376] move       37  24     
07B2  22890001           [377] call       36  2   2  
07B6  18490000           [378] test       36      1    ; to [380] if false
07BA  1A400080           [379] jmp        2            ; to [382]
07BE  0E89520C           [380] gettable   36  24  330  ; "viewShake"
07C2  0C09C7A5           [381] settable   36  331 284  ; "mShakeAmbient" 0
07C6  17090000           [382] loadbool   36  0   0    ; false
07CA  18090000           [383] test       36      0    ; to [385] if true
07CE  1A400280           [384] jmp        10           ; to [395]
07D2  19490700           [385] loadk      36  29       ; 0
fail op	21
07D6  1500098E           [386] concat     0   284 36 
07DA  1A800180           [387] jmp        7            ; to [395]
07DE  5D891300           [388] getglobal  37  78       ; 1289681407
07E2  62898000           [389] call       37  1   2  
07E6  0D490912           [390] sub        36  36  37 
07EA  5D090000           [391] getglobal  37  0        ; 538022378
07EE  99090700           [392] loadk      38  28       ; 0
07F2  62490001           [393] call       37  2   1  
07F6  1A80FD7F           [394] jmp        -9           ; to [386]
07FA  59490700           [395] loadk      37  29       ; 0
07FE  8A090008           [396] len        38  16     
0802  D9490700           [397] loadk      39  29       ; 0
0806  50C90180           [398] forprep    37  8        ; to [407]
080A  4E0A0A08           [399] gettable   41  16  40 
080E  9DCA0000           [400] getglobal  42  3        ; 1074689893
0812  D20A8014           [401] move       43  41     
0816  A28A0001           [402] call       42  2   2  
081A  984A0000           [403] test       42      1    ; to [405] if false
081E  1A400080           [404] jmp        2            ; to [407]
0822  A44AC914           [405] self       42  41  293  ; -725453761
0826  A24A0001           [406] call       42  2   1  
082A  5489FD7F           [407] forloop    37  -9       ; to [399] if loop
082E  9DCA0000           [408] getglobal  42  3        ; 1074689893
0832  D20A8000           [409] move       43  1      
0836  A28A0001           [410] call       42  2   2  
083A  984A0000           [411] test       42      1    ; to [413] if false
083E  1A800180           [412] jmp        7            ; to [420]
0842  A40AC200           [413] self       42  1   264  ; 630793108
0846  1DCB1300           [414] getglobal  44  79       ; wallLatchEndSound
084A  570B0000           [415] loadbool   45  0   0    ; false
084E  9D8B0200           [416] getglobal  46  10       ; Engine
0852  8ECB4217           [417] gettable   46  46  267  ; "SP_VERY_LOW"
0856  D70B0000           [418] loadbool   47  0   0    ; false
085A  A24A0003           [419] call       42  6   1  
085E  9DCA0000           [420] getglobal  42  3        ; 1074689893
0862  D20A0005           [421] move       43  10     
0866  A28A0001           [422] call       42  2   2  
086A  984A0000           [423] test       42      1    ; to [425] if false
086E  1A400080           [424] jmp        2            ; to [427]
0872  A44A4905           [425] self       42  10  293  ; -725453761
0876  A24A0001           [426] call       42  2   1  
087A  9DCA0000           [427] getglobal  42  3        ; 1074689893
087E  D20A0004           [428] move       43  8      
0882  A28A0001           [429] call       42  2   2  
0886  984A0000           [430] test       42      1    ; to [432] if false
088A  1A400080           [431] jmp        2            ; to [434]
088E  A44A4904           [432] self       42  8   293  ; -725453761
0892  A24A0001           [433] call       42  2   1  
0896  9DCA0000           [434] getglobal  42  3        ; 1074689893
089A  D20A8002           [435] move       43  5      
089E  A28A0001           [436] call       42  2   2  
08A2  984A0000           [437] test       42      1    ; to [439] if false
08A6  1A800080           [438] jmp        3            ; to [442]
08AA  A40AD402           [439] self       42  5   336  ; 675444810
08AE  170B8000           [440] loadbool   44  1   0    ; true
08B2  A24A8001           [441] call       42  3   1  
08B6  9DCA0000           [442] getglobal  42  3        ; 1074689893
08BA  D20A0000           [443] move       43  0      
08BE  A28A0001           [444] call       42  2   2  
08C2  984A0000           [445] test       42      1    ; to [447] if false
08C6  1A400080           [446] jmp        2            ; to [449]
08CA  A44A4900           [447] self       42  0   293  ; -725453761
08CE  A24A0001           [448] call       42  2   1  
08D2  1E008000           [449] return     0   1      
                         * constants:
08D6  51                 sizek (81)
08D7  01                 const type 3
08D8  EA911120           const [0]: (538022378)
08DC  03                 const type 3
08DD  CDCCCC3D           const [1]: (-51)
08E1  01                 const type 3
08E2  3B467C90           const [2]: (-1870903749)
08E6  01                 const type 3
08E7  65770E40           const [3]: (1074689893)
08EB  01                 const type 3
08EC  D48E598B           const [4]: (-1957065004)
08F0  04                 const type 4
08F1  11                 string size (17)
08F2  6754656E6E6F4176+  "gTennoAv"
08FA  6174617254797065+  "atarType"
0902  00                 "\0"
                         const [5]: "gTennoAvatarType"
0903  01                 const type 3
0904  1FD0B58D           const [6]: (-1917464545)
0908  01                 const type 3
0909  59AC7869           const [7]: (1769516121)
090D  01                 const type 3
090E  94239925           const [8]: (630793108)
0912  04                 const type 4
0913  14                 string size (20)
0914  77616C6C4C617463+  "wallLatc"
091C  685374617274536F+  "hStartSo"
0924  756E6400           "und\0"
                         const [9]: "wallLatchStartSound"
0928  04                 const type 4
0929  07                 string size (7)
092A  456E67696E6500     "Engine\0"
                         const [10]: "Engine"
0931  04                 const type 4
0932  0C                 string size (12)
0933  53505F564552595F+  "SP_VERY_"
093B  4C4F5700           "LOW\0"
                         const [11]: "SP_VERY_LOW"
093F  04                 const type 4
0940  17                 string size (23)
0941  6C6F6B6957616C6C+  "lokiWall"
0949  4C617463684C6F6F+  "LatchLoo"
0951  70536F756E6400     "pSound\0"
                         const [12]: "lokiWallLatchLoopSound"
0958  04                 const type 4
0959  13                 string size (19)
095A  77616C6C4C617463+  "wallLatc"
0962  684C6F6F70536F75+  "hLoopSou"
096A  6E6400             "nd\0"
                         const [13]: "wallLatchLoopSound"
096D  01                 const type 3
096E  97BBB236           const [14]: (917683095)
0972  01                 const type 3
0973  099ABE4C           const [15]: (1287559689)
0977  01                 const type 3
0978  00971C22           const [16]: (572299008)
097C  04                 const type 4
097D  02                 string size (2)
097E  7800               "x\0"
                         const [17]: "x"
0980  04                 const type 4
0981  02                 string size (2)
0982  7900               "y\0"
                         const [18]: "y"
0984  04                 const type 4
0985  02                 string size (2)
0986  7A00               "z\0"
                         const [19]: "z"
0988  01                 const type 3
0989  8A5E4503           const [20]: (54877834)
098D  01                 const type 3
098E  68C51D9F           const [21]: (-1625438872)
0992  04                 const type 4
0993  09                 string size (9)
0994  70726F6A54797065+  "projType"
099C  00                 "\0"
                         const [22]: "projType"
099D  01                 const type 3
099E  F26E43AB           const [23]: (-1421644046)
09A2  04                 const type 4
09A3  0D                 string size (13)
09A4  454D5054595F5359+  "EMPTY_SY"
09AC  4D424F4C00         "MBOL\0"
                         const [24]: "EMPTY_SYMBOL"
09B1  04                 const type 4
09B2  0C                 string size (12)
09B3  5A45524F5F564543+  "ZERO_VEC"
09BB  544F5200           "TOR\0"
                         const [25]: "ZERO_VECTOR"
09BF  04                 const type 4
09C0  0E                 string size (14)
09C1  5A45524F5F524F54+  "ZERO_ROT"
09C9  4154494F4E00       "ATION\0"
                         const [26]: "ZERO_ROTATION"
09CF  01                 const type 3
09D0  61E324D1           const [27]: (-786111647)
09D4  03                 const type 3
09D5  00000000           const [28]: (0)
09D9  03                 const type 3
09DA  0000803F           const [29]: (0)
09DE  01                 const type 3
09DF  92F1BA0B           const [30]: (196800914)
09E3  03                 const type 3
09E4  CDCC4C3F           const [31]: (-51)
09E8  04                 const type 4
09E9  08                 string size (8)
09EA  67526567696F6E00   "gRegion\0"
                         const [32]: "gRegion"
09F2  01                 const type 3
09F3  C64CD3BD           const [33]: (-1110225722)
09F7  04                 const type 4
09F8  09                 string size (9)
09F9  77696E6454797065+  "windType"
0A01  00                 "\0"
                         const [34]: "windType"
0A02  01                 const type 3
0A03  EEDAD415           const [35]: (366271214)
0A07  04                 const type 4
0A08  0E                 string size (14)
0A09  6C61746368426561+  "latchBea"
0A11  6D5479706500       "mType\0"
                         const [36]: "latchBeamType"
0A17  01                 const type 3
0A18  3F74C2D4           const [37]: (-725453761)
0A1C  01                 const type 3
0A1D  4DFF7896           const [38]: (-1770455219)
0A21  04                 const type 4
0A22  05                 string size (5)
0A23  6D61746800         "math\0"
                         const [39]: "math"
0A28  01                 const type 3
0A29  DF46F8BC           const [40]: (-1124579617)
0A2D  01                 const type 3
0A2E  CFBD2C4E           const [41]: (1311555023)
0A32  01                 const type 3
0A33  42674A8C           const [42]: (-1941280958)
0A37  03                 const type 3
0A38  00002041           const [43]: (0)
0A3C  04                 const type 4
0A3D  06                 string size (6)
0A3E  7461626C6500       "table\0"
                         const [44]: "table"
0A44  01                 const type 3
0A45  9D0C45E6           const [45]: (-431682403)
0A49  01                 const type 3
0A4A  533F61B8           const [46]: (-1201586349)
0A4E  01                 const type 3
0A4F  36C033A9           const [47]: (-1456226250)
0A53  04                 const type 4
0A54  0C                 string size (12)
0A55  706F737450726F63+  "postProc"
0A5D  65737300           "ess\0"
                         const [48]: "postProcess"
0A61  01                 const type 3
0A62  025A115A           const [49]: (1511086594)
0A66  01                 const type 3
0A67  BFE50BFD           const [50]: (-49551937)
0A6B  04                 const type 4
0A6C  11                 string size (17)
0A6D  57414C4C52554E4E+  "WALLRUNN"
0A75  494E475F4C454654+  "ING_LEFT"
0A7D  00                 "\0"
                         const [51]: "WALLRUNNING_LEFT"
0A7E  04                 const type 4
0A7F  12                 string size (18)
0A80  57414C4C52554E4E+  "WALLRUNN"
0A88  494E475F52494748+  "ING_RIGH"
0A90  5400               "T\0"
                         const [52]: "WALLRUNNING_RIGHT"
0A92  04                 const type 4
0A93  0F                 string size (15)
0A94  57414C4C52554E4E+  "WALLRUNN"
0A9C  494E475F555000     "ING_UP\0"
                         const [53]: "WALLRUNNING_UP"
0AA3  01                 const type 3
0AA4  C9896389           const [54]: (-1989965367)
0AA8  04                 const type 4
0AA9  0B                 string size (11)
0AAA  4C6F7475735F4761+  "Lotus_Ga"
0AB2  6D6500             "me\0"
                         const [55]: "Lotus_Game"
0AB5  04                 const type 4
0AB6  0C                 string size (12)
0AB7  414C5048415F4154+  "ALPHA_AT"
0ABF  54454E00           "TEN\0"
                         const [56]: "ALPHA_ATTEN"
0AC3  01                 const type 3
0AC4  5EFDB1CD           const [57]: (-843973282)
0AC8  01                 const type 3
0AC9  DBC2E558           const [58]: (1491452635)
0ACD  03                 const type 3
0ACE  CDCC4C3E           const [59]: (-51)
0AD2  01                 const type 3
0AD3  5481C3AA           const [60]: (-1430027948)
0AD7  03                 const type 3
0AD8  00004040           const [61]: (0)
0ADC  03                 const type 3
0ADD  9A99993E           const [62]: (-102)
0AE1  03                 const type 3
0AE2  3333333F           const [63]: (51)
0AE6  03                 const type 3
0AE7  CDCC4C3D           const [64]: (-51)
0AEB  01                 const type 3
0AEC  DC3D18EC           const [65]: (-333955620)
0AF0  01                 const type 3
0AF1  A7A19409           const [66]: (160735655)
0AF5  03                 const type 3
0AF6  000000C0           const [67]: (0)
0AFA  01                 const type 3
0AFB  179ACACA           const [68]: (-892691945)
0AFF  01                 const type 3
0B00  11D8F2D6           const [69]: (-688728047)
0B04  03                 const type 3
0B05  0000003F           const [70]: (0)
0B09  01                 const type 3
0B0A  32013C68           const [71]: (1748762930)
0B0E  01                 const type 3
0B0F  554B0393           const [72]: (-1828500651)
0B13  03                 const type 3
0B14  0000E03F           const [73]: (0)
0B18  04                 const type 4
0B19  0A                 string size (10)
0B1A  766965775368616B+  "viewShak"
0B22  6500               "e\0"
                         const [74]: "viewShake"
0B24  04                 const type 4
0B25  0E                 string size (14)
0B26  6D5368616B65416D+  "mShakeAm"
0B2E  6269656E7400       "bient\0"
                         const [75]: "mShakeAmbient"
0B34  01                 const type 3
0B35  3810018B           const [76]: (-1962864584)
0B39  03                 const type 3
0B3A  0000A040           const [77]: (0)
0B3E  01                 const type 3
0B3F  FFF9DE4C           const [78]: (1289681407)
0B43  04                 const type 4
0B44  12                 string size (18)
0B45  77616C6C4C617463+  "wallLatc"
0B4D  68456E64536F756E+  "hEndSoun"
0B55  6400               "d\0"
                         const [79]: "wallLatchEndSound"
0B57  01                 const type 3
0B58  4A784228           const [80]: (675444810)
                         * functions:
0B5C  00                 sizep (0)
                         * lines:
0B5E  03                 sizelineinfo (449)
                         [pc] (line)
0B5F  1A                 [001] (26)
0B60  00                 [002] (26)
0B61  00                 [003] (26)
0B62  00                 [004] (27)
0B63  1A                 [005] (27)
0B64  00                 [006] (28)
0B65  00                 [007] (28)
0B66  00                 [008] (28)
0B67  1A                 [009] (28)
0B68  00                 [010] (28)
0B69  00                 [011] (29)
0B6A  00                 [012] (32)
0B6B  1B                 [013] (32)
0B6C  00                 [014] (32)
0B6D  00                 [015] (34)
0B6E  00                 [016] (34)
0B6F  1B                 [017] (34)
0B70  00                 [018] (34)
0B71  00                 [019] (35)
0B72  00                 [020] (35)
0B73  1C                 [021] (35)
0B74  00                 [022] (35)
0B75  00                 [023] (35)
0B76  00                 [024] (36)
0B77  1C                 [025] (38)
0B78  00                 [026] (38)
0B79  00                 [027] (38)
0B7A  00                 [028] (40)
0B7B  1C                 [029] (40)
0B7C  00                 [030] (40)
0B7D  00                 [031] (40)
0B7E  00                 [032] (40)
0B7F  1C                 [033] (40)
0B80  00                 [034] (40)
0B81  00                 [035] (42)
0B82  00                 [036] (43)
0B83  1C                 [037] (43)
0B84  00                 [038] (44)
0B85  00                 [039] (44)
0B86  00                 [040] (44)
0B87  1D                 [041] (44)
0B88  00                 [042] (44)
0B89  00                 [043] (44)
0B8A  00                 [044] (44)
0B8B  20                 [045] (44)
0B8C  00                 [046] (44)
0B8D  00                 [047] (46)
0B8E  00                 [048] (46)
0B8F  20                 [049] (46)
0B90  00                 [050] (46)
0B91  00                 [051] (46)
0B92  00                 [052] (46)
0B93  20                 [053] (46)
0B94  00                 [054] (46)
0B95  00                 [055] (49)
0B96  00                 [056] (49)
0B97  22                 [057] (50)
0B98  00                 [058] (50)
0B99  00                 [059] (50)
0B9A  00                 [060] (50)
0B9B  22                 [061] (50)
0B9C  00                 [062] (50)
0B9D  00                 [063] (50)
0B9E  00                 [064] (50)
0B9F  22                 [065] (50)
0BA0  00                 [066] (50)
0BA1  00                 [067] (52)
0BA2  00                 [068] (52)
0BA3  22                 [069] (52)
0BA4  00                 [070] (53)
0BA5  00                 [071] (53)
0BA6  00                 [072] (53)
0BA7  23                 [073] (53)
0BA8  00                 [074] (53)
0BA9  00                 [075] (54)
0BAA  00                 [076] (54)
0BAB  23                 [077] (54)
0BAC  00                 [078] (54)
0BAD  00                 [079] (54)
0BAE  00                 [080] (54)
0BAF  23                 [081] (54)
0BB0  00                 [082] (54)
0BB1  00                 [083] (56)
0BB2  00                 [084] (56)
0BB3  23                 [085] (56)
0BB4  00                 [086] (56)
0BB5  00                 [087] (56)
0BB6  00                 [088] (57)
0BB7  23                 [089] (57)
0BB8  00                 [090] (57)
0BB9  00                 [091] (57)
0BBA  00                 [092] (57)
0BBB  24                 [093] (57)
0BBC  00                 [094] (58)
0BBD  00                 [095] (58)
0BBE  00                 [096] (58)
0BBF  26                 [097] (58)
0BC0  00                 [098] (58)
0BC1  00                 [099] (58)
0BC2  00                 [100] (61)
0BC3  26                 [101] (61)
0BC4  00                 [102] (61)
0BC5  00                 [103] (61)
0BC6  00                 [104] (61)
0BC7  26                 [105] (61)
0BC8  00                 [106] (61)
0BC9  00                 [107] (61)
0BCA  00                 [108] (61)
0BCB  28                 [109] (63)
0BCC  00                 [110] (63)
0BCD  00                 [111] (63)
0BCE  00                 [112] (63)
0BCF  28                 [113] (63)
0BD0  00                 [114] (63)
0BD1  00                 [115] (65)
0BD2  00                 [116] (65)
0BD3  28                 [117] (65)
0BD4  00                 [118] (66)
0BD5  00                 [119] (66)
0BD6  00                 [120] (66)
0BD7  28                 [121] (66)
0BD8  00                 [122] (67)
0BD9  00                 [123] (67)
0BDA  00                 [124] (67)
0BDB  28                 [125] (66)
0BDC  00                 [126] (69)
0BDD  00                 [127] (70)
0BDE  00                 [128] (70)
0BDF  28                 [129] (71)
0BE0  00                 [130] (71)
0BE1  00                 [131] (71)
0BE2  00                 [132] (71)
0BE3  28                 [133] (71)
0BE4  00                 [134] (71)
0BE5  00                 [135] (71)
0BE6  00                 [136] (71)
0BE7  2A                 [137] (71)
0BE8  00                 [138] (72)
0BE9  00                 [139] (72)
0BEA  00                 [140] (72)
0BEB  2B                 [141] (72)
0BEC  00                 [142] (72)
0BED  00                 [143] (72)
0BEE  00                 [144] (72)
0BEF  2B                 [145] (72)
0BF0  00                 [146] (73)
0BF1  00                 [147] (73)
0BF2  00                 [148] (73)
0BF3  2C                 [149] (73)
0BF4  00                 [150] (73)
0BF5  00                 [151] (74)
0BF6  00                 [152] (74)
0BF7  2C                 [153] (75)
0BF8  00                 [154] (75)
0BF9  00                 [155] (75)
0BFA  00                 [156] (75)
0BFB  2C                 [157] (75)
0BFC  00                 [158] (75)
0BFD  00                 [159] (75)
0BFE  00                 [160] (75)
0BFF  2C                 [161] (75)
0C00  00                 [162] (75)
0C01  00                 [163] (75)
0C02  00                 [164] (75)
0C03  2C                 [165] (75)
0C04  00                 [166] (75)
0C05  00                 [167] (75)
0C06  00                 [168] (75)
0C07  2C                 [169] (75)
0C08  00                 [170] (75)
0C09  00                 [171] (75)
0C0A  00                 [172] (76)
0C0B  2C                 [173] (76)
0C0C  00                 [174] (76)
0C0D  00                 [175] (76)
0C0E  00                 [176] (76)
0C0F  2C                 [177] (76)
0C10  00                 [178] (76)
0C11  00                 [179] (77)
0C12  00                 [180] (77)
0C13  2C                 [181] (77)
0C14  00                 [182] (77)
0C15  00                 [183] (77)
0C16  00                 [184] (71)
0C17  2E                 [185] (81)
0C18  00                 [186] (82)
0C19  00                 [187] (83)
0C1A  00                 [188] (83)
0C1B  2E                 [189] (83)
0C1C  00                 [190] (83)
0C1D  00                 [191] (84)
0C1E  00                 [192] (84)
0C1F  2E                 [193] (84)
0C20  00                 [194] (84)
0C21  00                 [195] (87)
0C22  00                 [196] (87)
0C23  2E                 [197] (87)
0C24  00                 [198] (87)
0C25  00                 [199] (87)
0C26  00                 [200] (87)
0C27  2E                 [201] (87)
0C28  00                 [202] (87)
0C29  00                 [203] (87)
0C2A  00                 [204] (87)
0C2B  2E                 [205] (87)
0C2C  00                 [206] (87)
0C2D  00                 [207] (87)
0C2E  00                 [208] (87)
0C2F  2E                 [209] (87)
0C30  00                 [210] (87)
0C31  00                 [211] (87)
0C32  00                 [212] (87)
0C33  2E                 [213] (87)
0C34  00                 [214] (87)
0C35  00                 [215] (87)
0C36  00                 [216] (87)
0C37  31                 [217] (87)
0C38  00                 [218] (87)
0C39  00                 [219] (87)
0C3A  00                 [220] (87)
0C3B  31                 [221] (87)
0C3C  00                 [222] (87)
0C3D  00                 [223] (87)
0C3E  00                 [224] (88)
0C3F  32                 [225] (88)
0C40  00                 [226] (88)
0C41  00                 [227] (88)
0C42  00                 [228] (88)
0C43  32                 [229] (88)
0C44  00                 [230] (89)
0C45  00                 [231] (92)
0C46  00                 [232] (92)
0C47  32                 [233] (92)
0C48  00                 [234] (93)
0C49  00                 [235] (93)
0C4A  00                 [236] (93)
0C4B  32                 [237] (95)
0C4C  00                 [238] (95)
0C4D  00                 [239] (95)
0C4E  00                 [240] (95)
0C4F  32                 [241] (95)
0C50  00                 [242] (96)
0C51  00                 [243] (96)
0C52  00                 [244] (96)
0C53  32                 [245] (96)
0C54  00                 [246] (96)
0C55  00                 [247] (97)
0C56  00                 [248] (97)
0C57  32                 [249] (97)
0C58  00                 [250] (97)
0C59  00                 [251] (97)
0C5A  00                 [252] (97)
0C5B  32                 [253] (97)
0C5C  00                 [254] (97)
0C5D  00                 [255] (97)
0C5E  00                 [256] (97)
0C5F  32                 [257] (97)
0C60  00                 [258] (98)
0C61  00                 [259] (98)
0C62  00                 [260] (98)
0C63  32                 [261] (98)
0C64  00                 [262] (98)
0C65  00                 [263] (98)
0C66  00                 [264] (101)
0C67  34                 [265] (101)
0C68  00                 [266] (101)
0C69  00                 [267] (101)
0C6A  00                 [268] (102)
0C6B  34                 [269] (102)
0C6C  00                 [270] (102)
0C6D  00                 [271] (102)
0C6E  00                 [272] (102)
0C6F  34                 [273] (103)
0C70  00                 [274] (103)
0C71  00                 [275] (103)
0C72  00                 [276] (103)
0C73  35                 [277] (103)
0C74  00                 [278] (104)
0C75  00                 [279] (105)
0C76  00                 [280] (105)
0C77  35                 [281] (105)
0C78  00                 [282] (105)
0C79  00                 [283] (105)
0C7A  00                 [284] (106)
0C7B  35                 [285] (106)
0C7C  00                 [286] (106)
0C7D  00                 [287] (109)
0C7E  00                 [288] (109)
0C7F  35                 [289] (109)
0C80  00                 [290] (110)
0C81  00                 [291] (110)
0C82  00                 [292] (110)
0C83  35                 [293] (110)
0C84  00                 [294] (110)
0C85  00                 [295] (110)
0C86  00                 [296] (110)
0C87  36                 [297] (111)
0C88  00                 [298] (111)
0C89  00                 [299] (111)
0C8A  00                 [300] (111)
0C8B  36                 [301] (111)
0C8C  00                 [302] (111)
0C8D  00                 [303] (111)
0C8E  00                 [304] (111)
0C8F  36                 [305] (111)
0C90  00                 [306] (112)
0C91  00                 [307] (112)
0C92  00                 [308] (112)
0C93  36                 [309] (112)
0C94  00                 [310] (112)
0C95  00                 [311] (112)
0C96  00                 [312] (112)
0C97  36                 [313] (112)
0C98  00                 [314] (112)
0C99  00                 [315] (112)
0C9A  00                 [316] (112)
0C9B  36                 [317] (112)
0C9C  00                 [318] (101)
0C9D  00                 [319] (117)
0C9E  00                 [320] (117)
0C9F  36                 [321] (117)
0CA0  00                 [322] (117)
0CA1  00                 [323] (117)
0CA2  00                 [324] (118)
0CA3  36                 [325] (118)
0CA4  00                 [326] (118)
0CA5  00                 [327] (118)
0CA6  00                 [328] (118)
0CA7  38                 [329] (118)
0CA8  00                 [330] (118)
0CA9  00                 [331] (118)
0CAA  00                 [332] (118)
0CAB  38                 [333] (119)
0CAC  00                 [334] (119)
0CAD  00                 [335] (119)
0CAE  00                 [336] (119)
0CAF  38                 [337] (119)
0CB0  00                 [338] (120)
0CB1  00                 [339] (120)
0CB2  00                 [340] (120)
0CB3  38                 [341] (123)
0CB4  00                 [342] (123)
0CB5  00                 [343] (124)
0CB6  00                 [344] (124)
0CB7  38                 [345] (124)
0CB8  00                 [346] (124)
0CB9  00                 [347] (124)
0CBA  00                 [348] (125)
0CBB  39                 [349] (125)
0CBC  00                 [350] (125)
0CBD  00                 [351] (125)
0CBE  00                 [352] (125)
0CBF  39                 [353] (125)
0CC0  00                 [354] (125)
0CC1  00                 [355] (-128)
0CC2  00                 [356] (-128)
0CC3  39                 [357] (-128)
0CC4  00                 [358] (-128)
0CC5  00                 [359] (-128)
0CC6  00                 [360] (-127)
0CC7  39                 [361] (-127)
0CC8  00                 [362] (-127)
0CC9  00                 [363] (-127)
0CCA  00                 [364] (-127)
0CCB  39                 [365] (-127)
0CCC  00                 [366] (-127)
0CCD  00                 [367] (-125)
0CCE  00                 [368] (-125)
0CCF  39                 [369] (-125)
0CD0  00                 [370] (-125)
0CD1  00                 [371] (-124)
0CD2  00                 [372] (-124)
0CD3  3A                 [373] (-124)
0CD4  00                 [374] (-124)
0CD5  00                 [375] (-121)
0CD6  00                 [376] (-121)
0CD7  3A                 [377] (-121)
0CD8  00                 [378] (-121)
0CD9  00                 [379] (-121)
0CDA  00                 [380] (-120)
0CDB  3A                 [381] (-120)
0CDC  00                 [382] (-117)
0CDD  00                 [383] (-117)
0CDE  00                 [384] (-117)
0CDF  3A                 [385] (-116)
0CE0  00                 [386] (-115)
0CE1  00                 [387] (-115)
0CE2  00                 [388] (-114)
0CE3  3A                 [389] (-114)
0CE4  00                 [390] (-114)
0CE5  00                 [391] (-113)
0CE6  00                 [392] (-113)
0CE7  3A                 [393] (-113)
0CE8  00                 [394] (-113)
0CE9  00                 [395] (-109)
0CEA  00                 [396] (-109)
0CEB  3D                 [397] (-109)
0CEC  00                 [398] (-109)
0CED  00                 [399] (-108)
0CEE  00                 [400] (-107)
0CEF  3D                 [401] (-107)
0CF0  00                 [402] (-107)
0CF1  00                 [403] (-107)
0CF2  00                 [404] (-107)
0CF3  3D                 [405] (-106)
0CF4  00                 [406] (-106)
0CF5  00                 [407] (-109)
0CF6  00                 [408] (-102)
0CF7  3D                 [409] (-102)
0CF8  00                 [410] (-102)
0CF9  00                 [411] (-102)
0CFA  00                 [412] (-102)
0CFB  3D                 [413] (-101)
0CFC  00                 [414] (-101)
0CFD  00                 [415] (-101)
0CFE  00                 [416] (-101)
0CFF  3D                 [417] (-101)
0D00  00                 [418] (-101)
0D01  00                 [419] (-101)
0D02  00                 [420] (-98)
0D03  3D                 [421] (-98)
0D04  00                 [422] (-98)
0D05  00                 [423] (-98)
0D06  00                 [424] (-98)
0D07  3D                 [425] (-97)
0D08  00                 [426] (-97)
0D09  00                 [427] (-93)
0D0A  00                 [428] (-93)
0D0B  3D                 [429] (-93)
0D0C  00                 [430] (-93)
0D0D  00                 [431] (-93)
0D0E  00                 [432] (-92)
0D0F  3F                 [433] (-92)
0D10  00                 [434] (-89)
0D11  00                 [435] (-89)
0D12  00                 [436] (-89)
0D13  3F                 [437] (-89)
0D14  00                 [438] (-89)
0D15  00                 [439] (-88)
0D16  00                 [440] (-88)
0D17  3F                 [441] (-88)
0D18  00                 [442] (-85)
0D19  00                 [443] (-85)
0D1A  00                 [444] (-85)
0D1B  3F                 [445] (-85)
0D1C  00                 [446] (-85)
0D1D  00                 [447] (-84)
0D1E  00                 [448] (-84)
0D1F  3F                 [449] (-82)
                         * locals:
1263  00                 sizelocvars (0)
                         * upvalues:
1264  00                 sizeupvalues (0)
                         ** end of function **

                         
1265                     ** function [1] definition (level 2)
                         ** start of function **
1265  00                 string size (0)
                         source name: (none)
1267  01                 line defined (176)
1268  CE                 last line defined (206)
1269  01                 nups (0)
126A  00                 numparams (1)
126B  01                 is_vararg (0)
126C  00                 maxstacksize (7)
                         * code:
126E  43                 sizecode (67)
126F  5D000000           [01] getglobal  1   0        ; 538022378
1273  99400000           [02] loadk      2   1        ; 0
1277  62400001           [03] call       1   2   1  
127B  64804000           [04] self       1   0   258  ; -1870903749
127F  62800001           [05] call       1   2   2  
1283  9DC00000           [06] getglobal  2   3        ; 1074689893
1287  D2008000           [07] move       3   1      
128B  A2800001           [08] call       2   2   2  
128F  98000000           [09] test       2       0    ; to [11] if true
1293  1A000080           [10] jmp        1            ; to [12]
1297  1E008000           [11] return     0   1      
129B  A400C100           [12] self       2   1   260  ; -1201586349
129F  A2800001           [13] call       2   2   2  
12A3  98400000           [14] test       2       1    ; to [16] if false
12A7  1A000080           [15] jmp        1            ; to [17]
12AB  1E008000           [16] return     0   1      
12AF  86000001           [17] loadnil    2   2      
12B3  D9400100           [18] loadk      3   5        ; 0
12B7  1D810100           [19] getglobal  4   6        ; gRegion
12BB  24C14102           [20] self       4   4   263  ; -1456226250
12BF  22810001           [21] call       4   2   2  
12C3  8E004202           [22] gettable   2   4   264  ; "postProcess"
12C7  2441C200           [23] self       4   1   265  ; -1770455219
12CB  22810001           [24] call       4   2   2  
12CF  5DC10000           [25] getglobal  5   3        ; 1074689893
12D3  92018000           [26] move       6   1      
12D7  62810001           [27] call       5   2   2  
12DB  58410000           [28] test       5       1    ; to [30] if false
12DF  1A800580           [29] jmp        23           ; to [53]
fail op	21
12E3  15008180           [30] concat     0   257 4  
12E7  1A000580           [31] jmp        21           ; to [53]
fail op	21
12EB  15C08080           [32] concat     0   257 3  
12EF  1A800480           [33] jmp        19           ; to [53]
12F3  6441C200           [34] self       5   1   265  ; -1770455219
12F7  62810001           [35] call       5   2   2  
12FB  12018002           [36] move       4   5      
12FF  5DC10000           [37] getglobal  5   3        ; 1074689893
1303  92010001           [38] move       6   2      
1307  62810001           [39] call       5   2   2  
130B  58410000           [40] test       5       1    ; to [42] if false
130F  1A800080           [41] jmp        3            ; to [45]
1313  4E814201           [42] gettable   5   2   266  ; "viewShake"
1317  8401C301           [43] mul        6   3   268  ; 0
131B  4C818185           [44] settable   5   267 6    ; "mShakeAmbient"
131F  5D410300           [45] getglobal  5   13       ; 1289681407
1323  62818000           [46] call       5   1   2  
1327  4481C302           [47] mul        5   5   270  ; -102
132B  CD408101           [48] sub        3   3   5  
132F  5D010000           [49] getglobal  5   0        ; 538022378
1333  99410000           [50] loadk      6   1        ; 0
1337  62410001           [51] call       5   2   1  
133B  1AC0F87F           [52] jmp        -28          ; to [25]
133F  5DC10000           [53] getglobal  5   3        ; 1074689893
1343  92010001           [54] move       6   2      
1347  62810001           [55] call       5   2   2  
134B  58410000           [56] test       5       1    ; to [58] if false
134F  1A400080           [57] jmp        2            ; to [60]
1353  4E814201           [58] gettable   5   2   266  ; "viewShake"
1357  4C41C085           [59] settable   5   267 257  ; "mShakeAmbient" 0
135B  5DC10000           [60] getglobal  5   3        ; 1074689893
135F  92010000           [61] move       6   0      
1363  62810001           [62] call       5   2   2  
1367  58410000           [63] test       5       1    ; to [65] if false
136B  1A400080           [64] jmp        2            ; to [67]
136F  64C14300           [65] self       5   0   271  ; -725453761
1373  62410001           [66] call       5   2   1  
1377  1E008000           [67] return     0   1      
                         * constants:
137B  10                 sizek (16)
137C  01                 const type 3
137D  EA911120           const [0]: (538022378)
1381  03                 const type 3
1382  00000000           const [1]: (0)
1386  01                 const type 3
1387  3B467C90           const [2]: (-1870903749)
138B  01                 const type 3
138C  65770E40           const [3]: (1074689893)
1390  01                 const type 3
1391  533F61B8           const [4]: (-1201586349)
1395  03                 const type 3
1396  0000803F           const [5]: (0)
139A  04                 const type 4
139B  08                 string size (8)
139C  67526567696F6E00   "gRegion\0"
                         const [6]: "gRegion"
13A4  01                 const type 3
13A5  36C033A9           const [7]: (-1456226250)
13A9  04                 const type 4
13AA  0C                 string size (12)
13AB  706F737450726F63+  "postProc"
13B3  65737300           "ess\0"
                         const [8]: "postProcess"
13B7  01                 const type 3
13B8  4DFF7896           const [9]: (-1770455219)
13BC  04                 const type 4
13BD  0A                 string size (10)
13BE  766965775368616B+  "viewShak"
13C6  6500               "e\0"
                         const [10]: "viewShake"
13C8  04                 const type 4
13C9  0E                 string size (14)
13CA  6D5368616B65416D+  "mShakeAm"
13D2  6269656E7400       "bient\0"
                         const [11]: "mShakeAmbient"
13D8  03                 const type 3
13D9  00002041           const [12]: (0)
13DD  01                 const type 3
13DE  FFF9DE4C           const [13]: (1289681407)
13E2  03                 const type 3
13E3  9A99193F           const [14]: (-102)
13E7  01                 const type 3
13E8  3F74C2D4           const [15]: (-725453761)
                         * functions:
13EC  00                 sizep (0)
                         * lines:
13ED  43                 sizelineinfo (67)
                         [pc] (line)
13EE  B1                 [01] (-79)
13EF  00                 [02] (-79)
13F0  00                 [03] (-79)
13F1  00                 [04] (-78)
13F2  B1                 [05] (-78)
13F3  00                 [06] (-77)
13F4  00                 [07] (-77)
13F5  00                 [08] (-77)
13F6  B1                 [09] (-77)
13F7  00                 [10] (-77)
13F8  00                 [11] (-76)
13F9  00                 [12] (-74)
13FA  B2                 [13] (-74)
13FB  00                 [14] (-74)
13FC  00                 [15] (-74)
13FD  00                 [16] (-73)
13FE  B2                 [17] (-71)
13FF  00                 [18] (-70)
1400  00                 [19] (-69)
1401  00                 [20] (-69)
1402  B3                 [21] (-69)
1403  00                 [22] (-69)
1404  00                 [23] (-68)
1405  00                 [24] (-68)
1406  B3                 [25] (-66)
1407  00                 [26] (-66)
1408  00                 [27] (-66)
1409  00                 [28] (-66)
140A  B3                 [29] (-66)
140B  00                 [30] (-66)
140C  00                 [31] (-66)
140D  00                 [32] (-66)
140E  B3                 [33] (-66)
140F  00                 [34] (-65)
1410  00                 [35] (-65)
1411  00                 [36] (-65)
1412  B3                 [37] (-64)
1413  00                 [38] (-64)
1414  00                 [39] (-64)
1415  00                 [40] (-64)
1416  B4                 [41] (-64)
1417  00                 [42] (-63)
1418  00                 [43] (-63)
1419  00                 [44] (-63)
141A  B6                 [45] (-61)
141B  00                 [46] (-61)
141C  00                 [47] (-61)
141D  00                 [48] (-61)
141E  B6                 [49] (-60)
141F  00                 [50] (-60)
1420  00                 [51] (-60)
1421  00                 [52] (-60)
1422  B6                 [53] (-57)
1423  00                 [54] (-57)
1424  00                 [55] (-57)
1425  00                 [56] (-57)
1426  B6                 [57] (-57)
1427  00                 [58] (-56)
1428  00                 [59] (-56)
1429  00                 [60] (-53)
142A  B7                 [61] (-53)
142B  00                 [62] (-53)
142C  00                 [63] (-53)
142D  00                 [64] (-53)
142E  B9                 [65] (-52)
142F  00                 [66] (-52)
1430  00                 [67] (-50)
                         * locals:
14FA  00                 sizelocvars (0)
                         * upvalues:
14FB  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
14FC  31                 sizelineinfo (49)
                         [pc] (line)
14FD  09                 [01] (9)
14FE  00                 [02] (10)
14FF  00                 [03] (10)
1500  00                 [04] (10)
1501  0A                 [05] (11)
1502  00                 [06] (11)
1503  00                 [07] (11)
1504  00                 [08] (12)
1505  0A                 [09] (12)
1506  00                 [10] (12)
1507  00                 [11] (13)
1508  00                 [12] (13)
1509  0A                 [13] (13)
150A  00                 [14] (14)
150B  00                 [15] (14)
150C  00                 [16] (14)
150D  0B                 [17] (15)
150E  00                 [18] (15)
150F  00                 [19] (15)
1510  00                 [20] (16)
1511  0B                 [21] (16)
1512  00                 [22] (16)
1513  00                 [23] (17)
1514  00                 [24] (18)
1515  0B                 [25] (18)
1516  00                 [26] (18)
1517  00                 [27] (19)
1518  00                 [28] (19)
1519  0C                 [29] (19)
151A  00                 [30] (20)
151B  00                 [31] (20)
151C  00                 [32] (20)
151D  0C                 [33] (21)
151E  00                 [34] (23)
151F  00                 [35] (23)
1520  00                 [36] (23)
1521  0C                 [37] (-82)
1522  00                 [38] (-82)
1523  00                 [39] (-82)
1524  00                 [40] (-82)
1525  0D                 [41] (-82)
1526  00                 [42] (-82)
1527  00                 [43] (-82)
1528  00                 [44] (-82)
1529  0D                 [45] (25)
152A  00                 [46] (-50)
152B  00                 [47] (-50)
152C  00                 [48] (-80)
152D  0D                 [49] (-50)
                         * locals:
15C1  00                 sizelocvars (0)
                         * upvalues:
15C2  00                 sizeupvalues (0)
                         ** end of function **

15C3                     ** end of chunk **
