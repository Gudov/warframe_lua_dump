1	C:\wlua_dump\path\Lotus\Scripts\EffectsBeamExplodeOnDeath.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Scripts\EffectsBeamExplodeOnDeath.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  06                 size of number (bytes)
0008  15                 integral (1=integral)
421
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
CloakHDR
/EE/Types/Physics/Ragdoll
EffectsDeco
/Lotus/Types/Player/TennoAvatar
DissolveTheEnemy
gDecorationType
UnlitAtten
table
gBaseAvatarType
baseEnergyColor
gLotusWeaponType
Lotus_Game
PrimaryColors
EnergyColor
mEnergyColor
red
green
blue
timeLength
leadUpFxToKill
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  06                 maxstacksize (6)
                         * code:
0008  15                 sizecode (21)
0009  1D000000           [01] getglobal  0   0        ; -332969190
000D  59400000           [02] loadk      1   1        ; "CloakHDR"
0011  22800001           [03] call       0   2   2  
0015  5D800000           [04] getglobal  1   2        ; -895206725
0019  99C00000           [05] loadk      2   3        ; "/EE/Types/Physics/Ragdoll"
001D  62800001           [06] call       1   2   2  
0021  9D000000           [07] getglobal  2   0        ; -332969190
0025  D9000100           [08] loadk      3   4        ; "EffectsDeco"
0029  A2800001           [09] call       2   2   2  
002D  DD400100           [10] getglobal  3   5        ; 738251817
0031  19810100           [11] loadk      4   6        ; "/Lotus/Types/Player/TennoAvatar"
0035  E2800001           [12] call       3   2   2  
0039  25010000           [13] closure    4   0      
003D  12000001           [14] move       0   2      
0041  65410000           [15] closure    5   1      
0045  12008000           [16] move       0   1      
0049  12000000           [17] move       0   0      
004D  12008001           [18] move       0   3      
0051  60C10100           [19] setglobal  5   7        ; DissolveTheEnemy
0055  60010200           [20] setglobal  5   8        ; -247101660
0059  1E008000           [21] return     0   1      
                         * constants:
005D  09                 sizek (9)
005E  01                 const type 3
005F  1A4B27EC           const [0]: (-332969190)
0063  04                 const type 4
0064  09                 string size (9)
0065  436C6F616B484452+  "CloakHDR"
006D  00                 "\0"
                         const [1]: "CloakHDR"
006E  01                 const type 3
006F  BB3AA4CA           const [2]: (-895206725)
0073  04                 const type 4
0074  1A                 string size (26)
0075  2F45452F54797065+  "/EE/Type"
007D  732F506879736963+  "s/Physic"
0085  732F526167646F6C+  "s/Ragdol"
008D  6C00               "l\0"
                         const [3]: "/EE/Types/Physics/Ragdoll"
008F  04                 const type 4
0090  0C                 string size (12)
0091  4566666563747344+  "EffectsD"
0099  65636F00           "eco\0"
                         const [4]: "EffectsDeco"
009D  01                 const type 3
009E  29D4002C           const [5]: (738251817)
00A2  04                 const type 4
00A3  20                 string size (32)
00A4  2F4C6F7475732F54+  "/Lotus/T"
00AC  797065732F506C61+  "ypes/Pla"
00B4  7965722F54656E6E+  "yer/Tenn"
00BC  6F41766174617200   "oAvatar\0"
                         const [6]: "/Lotus/Types/Player/TennoAvatar"
00C4  04                 const type 4
00C5  11                 string size (17)
00C6  446973736F6C7665+  "Dissolve"
00CE  546865456E656D79+  "TheEnemy"
00D6  00                 "\0"
                         const [7]: "DissolveTheEnemy"
00D7  01                 const type 3
00D8  248745F1           const [8]: (-247101660)
                         * functions:
00DC  02                 sizep (2)
                         
00DD                     ** function [0] definition (level 2)
                         ** start of function **
00DD  00                 string size (0)
                         source name: (none)
00DE  0B                 line defined (11)
00DF  17                 last line defined (23)
00E0  01                 nups (1)
00E1  01                 numparams (1)
00E2  00                 is_vararg (0)
00E3  0D                 maxstacksize (13)
                         * code:
00E4  24                 sizecode (36)
00E5  64004000           [01] self       1   0   256  ; 366271214
00E9  DD400000           [02] getglobal  3   1        ; gDecorationType
00ED  62808001           [03] call       1   3   2  
00F1  8B000000           [04] newtable   2   0   0    ; array=0, hash=0
00F5  DD800000           [05] getglobal  3   2        ; 1672515847
00F9  12018000           [06] move       4   1      
00FD  E2000101           [07] call       3   2   4  
0101  1A800480           [08] jmp        19           ; to [28]
0105  24C2C003           [09] self       8   7   259  ; 1781416269
0109  99020100           [10] loadk      10  4        ; 0
010D  22828001           [11] call       8   3   2  
0111  64424104           [12] self       9   8   261  ; -1615759522
0115  D9820100           [13] loadk      11  6        ; "UnlitAtten"
0119  19030100           [14] loadk      12  4        ; 0
011D  62820002           [15] call       9   4   2  
fail op	21
0121  15408283           [16] concat     0   263 9  
0125  1A400280           [17] jmp        10           ; to [28]
0129  A402C203           [18] self       10  7   264  ; -830264577
012D  A2820001           [19] call       10  2   2  
0131  D3020000           [20] getupval   11  0      
fail op	35
0135  63C00205           [21] close      1  
0139  1A000180           [22] jmp        5            ; to [28]
013D  9D420200           [23] getglobal  10  9        ; table
0141  8E824205           [24] gettable   10  10  266  ; -431682403
0145  D2020001           [25] move       11  2      
0149  12038003           [26] move       12  7      
014D  A2428001           [27] call       10  3   1  
0151  D6800000           [28] tforloop   3       2    ; to [30] if exit
0155  1A80FA7F           [29] jmp        -21          ; to [9]
0159  9D420200           [30] getglobal  10  9        ; table
015D  8E824205           [31] gettable   10  10  266  ; -431682403
0161  D2020001           [32] move       11  2      
0165  12030000           [33] move       12  0      
0169  A2428001           [34] call       10  3   1  
016D  9E000001           [35] return     2   2      
0171  1E008000           [36] return     0   1      
                         * constants:
0175  0B                 sizek (11)
0176  01                 const type 3
0177  EEDAD415           const [0]: (366271214)
017B  04                 const type 4
017C  10                 string size (16)
017D  674465636F726174+  "gDecorat"
0185  696F6E5479706500   "ionType\0"
                         const [1]: "gDecorationType"
018D  01                 const type 3
018E  0791B063           const [2]: (1672515847)
0192  01                 const type 3
0193  4D412E6A           const [3]: (1781416269)
0197  03                 const type 3
0198  00000000           const [4]: (0)
019C  01                 const type 3
019D  5E77B19F           const [5]: (-1615759522)
01A1  04                 const type 4
01A2  0B                 string size (11)
01A3  556E6C6974417474+  "UnlitAtt"
01AB  656E00             "en\0"
                         const [6]: "UnlitAtten"
01AE  03                 const type 3
01AF  0000C842           const [7]: (0)
01B3  01                 const type 3
01B4  FF2A83CE           const [8]: (-830264577)
01B8  04                 const type 4
01B9  06                 string size (6)
01BA  7461626C6500       "table\0"
                         const [9]: "table"
01C0  01                 const type 3
01C1  9D0C45E6           const [10]: (-431682403)
                         * functions:
01C5  00                 sizep (0)
                         * lines:
01C6  24                 sizelineinfo (36)
                         [pc] (line)
01C7  0C                 [01] (12)
01C8  00                 [02] (12)
01C9  00                 [03] (12)
01CA  00                 [04] (13)
01CB  0C                 [05] (14)
01CC  00                 [06] (14)
01CD  00                 [07] (14)
01CE  00                 [08] (14)
01CF  0C                 [09] (15)
01D0  00                 [10] (15)
01D1  00                 [11] (15)
01D2  00                 [12] (16)
01D3  0D                 [13] (16)
01D4  00                 [14] (16)
01D5  00                 [15] (16)
01D6  00                 [16] (17)
01D7  0E                 [17] (17)
01D8  00                 [18] (17)
01D9  00                 [19] (17)
01DA  00                 [20] (17)
01DB  0E                 [21] (17)
01DC  00                 [22] (17)
01DD  00                 [23] (18)
01DE  00                 [24] (18)
01DF  0E                 [25] (18)
01E0  00                 [26] (18)
01E1  00                 [27] (18)
01E2  00                 [28] (14)
01E3  0E                 [29] (19)
01E4  00                 [30] (21)
01E5  00                 [31] (21)
01E6  00                 [32] (21)
01E7  0F                 [33] (21)
01E8  00                 [34] (21)
01E9  00                 [35] (22)
01EA  00                 [36] (23)
                         * locals:
0257  00                 sizelocvars (0)
                         * upvalues:
0258  00                 sizeupvalues (0)
                         ** end of function **

                         
0259                     ** function [1] definition (level 2)
                         ** start of function **
0259  00                 string size (0)
                         source name: (none)
025A  19                 line defined (25)
025B  87                 last line defined (135)
025C  01                 nups (3)
025D  03                 numparams (1)
025E  01                 is_vararg (0)
025F  00                 maxstacksize (36)
                         * code:
0262  01                 sizecode (253)
0263  5D000000           [001] getglobal  1   0        ; 538022378
0267  99400000           [002] loadk      2   1        ; 0
026B  62400001           [003] call       1   2   1  
026F  5D800000           [004] getglobal  1   2        ; 1074689893
0273  92000000           [005] move       2   0      
0277  62800001           [006] call       1   2   2  
027B  58000000           [007] test       1       0    ; to [9] if true
027F  1A000080           [008] jmp        1            ; to [10]
0283  1E008000           [009] return     0   1      
0287  64C04000           [010] self       1   0   259  ; -704974830
028B  62800001           [011] call       1   2   2  
028F  92008000           [012] move       2   1      
0293  DD800000           [013] getglobal  3   2        ; 1074689893
0297  12010001           [014] move       4   2      
029B  E2800001           [015] call       3   2   2  
029F  D8000000           [016] test       3       0    ; to [18] if true
02A3  1A000080           [017] jmp        1            ; to [19]
02A7  1E008000           [018] return     0   1      
02AB  E4004101           [019] self       3   2   260  ; -1957065004
02AF  53010000           [020] getupval   5   0      
02B3  E2808001           [021] call       3   3   2  
02B7  D8000000           [022] test       3       0    ; to [24] if true
02BB  1A800080           [023] jmp        3            ; to [27]
02BF  E4404101           [024] self       3   2   261  ; 332067969
02C3  E2800001           [025] call       3   2   2  
02C7  52008001           [026] move       1   3      
02CB  DD800000           [027] getglobal  3   2        ; 1074689893
02CF  12018000           [028] move       4   1      
02D3  E2800001           [029] call       3   2   2  
02D7  D8400000           [030] test       3       1    ; to [32] if false
02DB  1A000180           [031] jmp        5            ; to [37]
02DF  E400C100           [032] self       3   1   260  ; -1957065004
02E3  5D810100           [033] getglobal  5   6        ; gBaseAvatarType
02E7  E2808001           [034] call       3   3   2  
02EB  D8400000           [035] test       3       1    ; to [37] if false
02EF  1A000080           [036] jmp        1            ; to [38]
02F3  1E008000           [037] return     0   1      
02F7  E4C04100           [038] self       3   0   263  ; 129677183
02FB  E2800001           [039] call       3   2   2  
02FF  1D010200           [040] getglobal  4   8        ; baseEnergyColor
0303  5D810000           [041] getglobal  5   2        ; 1074689893
0307  92018001           [042] move       6   3      
030B  62810001           [043] call       5   2   2  
030F  58410000           [044] test       5       1    ; to [46] if false
0313  1A000580           [045] jmp        21           ; to [67]
0317  6401C101           [046] self       5   3   260  ; -1957065004
031B  DD410200           [047] getglobal  7   9        ; gLotusWeaponType
031F  62818001           [048] call       5   3   2  
0323  58010000           [049] test       5       0    ; to [51] if true
0327  1AC00380           [050] jmp        16           ; to [67]
032B  6481C201           [051] self       5   3   266  ; -1348043987
032F  62810001           [052] call       5   2   2  
0333  A4C1C202           [053] self       6   5   267  ; -479391803
0337  1D020300           [054] getglobal  8   12       ; Lotus_Game
033B  0E424304           [055] gettable   8   8   269  ; "PrimaryColors"
033F  A2818001           [056] call       6   3   2  
0343  E4814303           [057] self       7   6   270  ; 979293742
0347  5D020300           [058] getglobal  9   12       ; Lotus_Game
034B  4EC2C304           [059] gettable   9   9   271  ; "EnergyColor"
034F  E2818001           [060] call       7   3   2  
0353  D8010000           [061] test       7       0    ; to [63] if true
0357  1AC00080           [062] jmp        4            ; to [67]
035B  DD010400           [063] getglobal  7   16       ; -1247440829
035F  0E424403           [064] gettable   8   6   273  ; "mEnergyColor"
0363  E2810001           [065] call       7   2   2  
0367  12018003           [066] move       4   7      
036B  D7010000           [067] loadbool   7   0   0    ; false
036F  06020004           [068] loadnil    8   8      
0373  6482C400           [069] self       9   1   274  ; -786111647
0377  D3028000           [070] getupval   11  1      
037B  0EC34402           [071] gettable   12  4   275  ; "red"
037F  1C034506           [072] div        12  12  276  ; 0
0383  4E434502           [073] gettable   13  4   277  ; "green"
0387  5C03C506           [074] div        13  13  276  ; 0
038B  8E834502           [075] gettable   14  4   278  ; "blue"
038F  9C034507           [076] div        14  14  276  ; 0
0393  D9C30500           [077] loadk      15  23       ; 0
0397  62428003           [078] call       9   7   1  
039B  6402C600           [079] self       9   1   280  ; -1003314401
039F  62820001           [080] call       9   2   2  
fail op	21
03A3  15408280           [081] concat     0   257 9  
03A7  1AC00580           [082] jmp        24           ; to [107]
03AB  99420000           [083] loadk      10  1        ; 0
03AF  CDC2C504           [084] sub        11  9   279  ; 0
03B3  19C30500           [085] loadk      12  23       ; 0
03B7  90820480           [086] forprep    10  19       ; to [106]
03BB  A443C600           [087] self       14  1   281  ; -1753287718
03BF  12048006           [088] move       16  13     
03C3  A2838001           [089] call       14  3   2  
03C7  12020007           [090] move       8   14     
03CB  9D830000           [091] getglobal  14  2        ; 1074689893
03CF  D2030004           [092] move       15  8      
03D3  A2830001           [093] call       14  2   2  
03D7  98430000           [094] test       14      1    ; to [96] if false
03DB  1A400280           [095] jmp        10           ; to [106]
03DF  A4834404           [096] self       14  8   274  ; -786111647
03E3  13048000           [097] getupval   16  1      
03E7  4EC44402           [098] gettable   17  4   275  ; "red"
03EB  5C04C508           [099] div        17  17  276  ; 0
03EF  8E444502           [100] gettable   18  4   277  ; "green"
03F3  9C044509           [101] div        18  18  276  ; 0
03F7  CE844502           [102] gettable   19  4   278  ; "blue"
03FB  DC04C509           [103] div        19  19  276  ; 0
03FF  19C50500           [104] loadk      20  23       ; 0
0403  A2438003           [105] call       14  7   1  
0407  94C2FA7F           [106] forloop    10  -20      ; to [87] if loop
040B  99430000           [107] loadk      14  1        ; 0
040F  D9430000           [108] loadk      15  1        ; 0
0413  1D840600           [109] getglobal  16  26       ; timeLength
fail op	21
0417  15000407           [110] concat     0   14  16 
041B  1AC01580           [111] jmp        88           ; to [200]
041F  1D840000           [112] getglobal  16  2        ; 1074689893
0423  52048000           [113] move       17  1      
0427  22840001           [114] call       16  2   2  
042B  18440000           [115] test       16      1    ; to [117] if false
042F  1A801480           [116] jmp        83           ; to [200]
0433  1D840000           [117] getglobal  16  2        ; 1074689893
0437  52048000           [118] move       17  1      
043B  22840001           [119] call       16  2   2  
043F  18440000           [120] test       16      1    ; to [122] if false
0443  1A800180           [121] jmp        7            ; to [129]
0447  24C4C600           [122] self       16  1   283  ; 796523475
044B  22840001           [123] call       16  2   2  
fail op	33
044F  21404008           [124] tforloop   0       257  ; to [126] if exit
0453  1A800080           [125] jmp        3            ; to [129]
0457  D8410000           [126] test       7       1    ; to [128] if false
045B  1A000080           [127] jmp        1            ; to [129]
045F  D7018000           [128] loadbool   7   1   0    ; true
0463  D8010000           [129] test       7       0    ; to [131] if true
0467  1A400E80           [130] jmp        58           ; to [189]
046B  1D840000           [131] getglobal  16  2        ; 1074689893
046F  52048000           [132] move       17  1      
0473  22840001           [133] call       16  2   2  
0477  18440000           [134] test       16      1    ; to [136] if false
047B  1A000D80           [135] jmp        53           ; to [189]
047F  2404C600           [136] self       16  1   280  ; -1003314401
0483  22840001           [137] call       16  2   2  
0487  52020008           [138] move       9   16     
fail op	21
048B  15408280           [139] concat     0   257 9  
048F  1AC00B80           [140] jmp        48           ; to [189]
0493  19440000           [141] loadk      16  1        ; 0
0497  4DC4C504           [142] sub        17  9   279  ; 0
049B  99C40500           [143] loadk      18  23       ; 0
049F  10440A80           [144] forprep    16  42       ; to [187]
04A3  2445C600           [145] self       20  1   281  ; -1753287718
04A7  92058009           [146] move       22  19     
04AB  22858001           [147] call       20  3   2  
04AF  1202000A           [148] move       8   20     
04B3  1D850000           [149] getglobal  20  2        ; 1074689893
04B7  52050004           [150] move       21  8      
04BB  22850001           [151] call       20  2   2  
04BF  18450000           [152] test       20      1    ; to [154] if false
04C3  1A000880           [153] jmp        33           ; to [187]
fail op	21
04C7  1500C707           [154] concat     0   15  284
04CB  1A800680           [155] jmp        27           ; to [183]
04CF  24854404           [156] self       20  8   274  ; -786111647
04D3  93058000           [157] getupval   22  1      
04D7  CEC54402           [158] gettable   23  4   275  ; "red"
04DB  DC05C50B           [159] div        23  23  276  ; 0
04DF  0E464502           [160] gettable   24  4   277  ; "green"
04E3  1C06450C           [161] div        24  24  276  ; 0
04E7  4E864502           [162] gettable   25  4   278  ; "blue"
04EB  5C06C50C           [163] div        25  25  276  ; 0
04EF  99C60500           [164] loadk      26  23       ; 0
04F3  22458003           [165] call       20  7   1  
04F7  19C50500           [166] loadk      20  23       ; 0
04FB  5D450700           [167] getglobal  21  29       ; leadUpFxToKill
04FF  4A05800A           [168] len        21  21     
0503  99C50500           [169] loadk      22  23       ; 0
0507  10850280           [170] forprep    20  11       ; to [182]
050B  24864704           [171] self       24  8   286  ; -1625438872
050F  9D460700           [172] getglobal  26  29       ; leadUpFxToKill
0513  8EC6050D           [173] gettable   26  26  23 
0517  22868001           [174] call       24  3   2  
051B  5D860000           [175] getglobal  25  2        ; 1074689893
051F  9206000C           [176] move       26  24     
0523  62860001           [177] call       25  2   2  
0527  58460000           [178] test       25      1    ; to [180] if false
052B  1A400080           [179] jmp        2            ; to [182]
052F  64C6470C           [180] self       25  24  287  ; -725453761
0533  62460001           [181] call       25  2   1  
0537  14C5FC7F           [182] forloop    20  -12      ; to [171] if loop
053B  64064804           [183] self       25  8   288  ; -703571861
053F  DD860600           [184] getglobal  27  26       ; timeLength
0543  DCC60607           [185] div        27  14  27 
0547  62468001           [186] call       25  3   1  
054B  1404F57F           [187] forloop    16  -43      ; to [145] if loop
054F  C3C3C507           [188] add        15  15  279  ; 0
0553  6406C800           [189] self       25  1   288  ; -703571861
0557  DD860600           [190] getglobal  27  26       ; timeLength
055B  DCC60607           [191] div        27  14  27 
055F  62468001           [192] call       25  3   1  
0563  5D460800           [193] getglobal  25  33       ; 1289681407
0567  62868000           [194] call       25  1   2  
056B  83430607           [195] add        14  14  25 
056F  5D060000           [196] getglobal  25  0        ; 538022378
0573  99460000           [197] loadk      26  1        ; 0
0577  62460001           [198] call       25  2   1  
057B  1A00E97F           [199] jmp        -91          ; to [109]
057F  5D060000           [200] getglobal  25  0        ; 538022378
0583  99860800           [201] loadk      26  34       ; 0
0587  62460001           [202] call       25  2   1  
058B  5D860000           [203] getglobal  25  2        ; 1074689893
058F  92068000           [204] move       26  1      
0593  62860001           [205] call       25  2   2  
0597  58060000           [206] test       25      0    ; to [208] if true
059B  1A000080           [207] jmp        1            ; to [209]
059F  1E008000           [208] return     0   1      
05A3  6406C600           [209] self       25  1   280  ; -1003314401
05A7  62860001           [210] call       25  2   2  
fail op	21
05AB  15408680           [211] concat     0   257 25 
05AF  1A800280           [212] jmp        11           ; to [224]
05B3  99460000           [213] loadk      26  1        ; 0
05B7  CDC6C50C           [214] sub        27  25  279  ; 0
05BB  19C70500           [215] loadk      28  23       ; 0
05BF  90060180           [216] forprep    26  5        ; to [222]
05C3  A447C600           [217] self       30  1   281  ; -1753287718
05C7  1208800E           [218] move       32  29     
05CB  A2878001           [219] call       30  3   2  
05CF  E4C7470F           [220] self       31  30  287  ; -725453761
05D3  E2470001           [221] call       31  2   1  
05D7  9446FE7F           [222] forloop    26  -6       ; to [217] if loop
05DB  1A000780           [223] jmp        29           ; to [253]
05DF  E4C7C800           [224] self       31  1   291  ; -1411785325
05E3  E2870001           [225] call       31  2   2  
05E7  2408C900           [226] self       32  1   292  ; -564624675
05EB  22880001           [227] call       32  2   2  
05EF  5D880000           [228] getglobal  33  2        ; 1074689893
05F3  9208800F           [229] move       34  31     
05F7  62880001           [230] call       33  2   2  
05FB  58080000           [231] test       33      0    ; to [233] if true
05FF  1A000080           [232] jmp        1            ; to [234]
0603  1E008000           [233] return     0   1      
0607  5D880000           [234] getglobal  33  2        ; 1074689893
060B  92080010           [235] move       34  32     
060F  62880001           [236] call       33  2   2  
0613  58480000           [237] test       33      1    ; to [239] if false
0617  1A000080           [238] jmp        1            ; to [240]
061B  1E008000           [239] return     0   1      
061F  6408C100           [240] self       33  1   260  ; -1957065004
0623  D3080001           [241] getupval   35  2      
0627  62888001           [242] call       33  3   2  
062B  58080000           [243] test       33      0    ; to [245] if true
062F  1A000080           [244] jmp        1            ; to [246]
0633  1E008000           [245] return     0   1      
0637  5D880000           [246] getglobal  33  2        ; 1074689893
063B  92088000           [247] move       34  1      
063F  62880001           [248] call       33  2   2  
0643  58480000           [249] test       33      1    ; to [251] if false
0647  1A400080           [250] jmp        2            ; to [253]
064B  64C8C700           [251] self       33  1   287  ; -725453761
064F  62480001           [252] call       33  2   1  
0653  1E008000           [253] return     0   1      
                         * constants:
0657  25                 sizek (37)
0658  01                 const type 3
0659  EA911120           const [0]: (538022378)
065D  03                 const type 3
065E  00000000           const [1]: (0)
0662  01                 const type 3
0663  65770E40           const [2]: (1074689893)
0667  01                 const type 3
0668  12F0FAD5           const [3]: (-704974830)
066C  01                 const type 3
066D  D48E598B           const [4]: (-1957065004)
0671  01                 const type 3
0672  81F4CA13           const [5]: (332067969)
0676  04                 const type 4
0677  10                 string size (16)
0678  6742617365417661+  "gBaseAva"
0680  7461725479706500   "tarType\0"
                         const [6]: "gBaseAvatarType"
0688  01                 const type 3
0689  7FB7BA07           const [7]: (129677183)
068D  04                 const type 4
068E  10                 string size (16)
068F  62617365456E6572+  "baseEner"
0697  6779436F6C6F7200   "gyColor\0"
                         const [8]: "baseEnergyColor"
069F  04                 const type 4
06A0  11                 string size (17)
06A1  674C6F7475735765+  "gLotusWe"
06A9  61706F6E54797065+  "aponType"
06B1  00                 "\0"
                         const [9]: "gLotusWeaponType"
06B2  01                 const type 3
06B3  2D7BA6AF           const [10]: (-1348043987)
06B7  01                 const type 3
06B8  C50F6DE3           const [11]: (-479391803)
06BC  04                 const type 4
06BD  0B                 string size (11)
06BE  4C6F7475735F4761+  "Lotus_Ga"
06C6  6D6500             "me\0"
                         const [12]: "Lotus_Game"
06C9  04                 const type 4
06CA  0E                 string size (14)
06CB  5072696D61727943+  "PrimaryC"
06D3  6F6C6F727300       "olors\0"
                         const [13]: "PrimaryColors"
06D9  01                 const type 3
06DA  2ED65E3A           const [14]: (979293742)
06DE  04                 const type 4
06DF  0C                 string size (12)
06E0  456E65726779436F+  "EnergyCo"
06E8  6C6F7200           "lor\0"
                         const [15]: "EnergyColor"
06EC  01                 const type 3
06ED  4390A5B5           const [16]: (-1247440829)
06F1  04                 const type 4
06F2  0D                 string size (13)
06F3  6D456E6572677943+  "mEnergyC"
06FB  6F6C6F7200         "olor\0"
                         const [17]: "mEnergyColor"
0700  01                 const type 3
0701  61E324D1           const [18]: (-786111647)
0705  04                 const type 4
0706  04                 string size (4)
0707  72656400           "red\0"
                         const [19]: "red"
070B  03                 const type 3
070C  00004842           const [20]: (0)
0710  04                 const type 4
0711  06                 string size (6)
0712  677265656E00       "green\0"
                         const [21]: "green"
0718  04                 const type 4
0719  05                 string size (5)
071A  626C756500         "blue\0"
                         const [22]: "blue"
071F  03                 const type 3
0720  0000803F           const [23]: (0)
0724  01                 const type 3
0725  1FA332C4           const [24]: (-1003314401)
0729  01                 const type 3
072A  DAF37E97           const [25]: (-1753287718)
072E  04                 const type 4
072F  0B                 string size (11)
0730  74696D654C656E67+  "timeLeng"
0738  746800             "th\0"
                         const [26]: "timeLength"
073B  01                 const type 3
073C  D3FB792F           const [27]: (796523475)
0740  03                 const type 3
0741  0000A040           const [28]: (0)
0745  04                 const type 4
0746  0F                 string size (15)
0747  6C65616455704678+  "leadUpFx"
074F  546F4B696C6C00     "ToKill\0"
                         const [29]: "leadUpFxToKill"
0756  01                 const type 3
0757  68C51D9F           const [30]: (-1625438872)
075B  01                 const type 3
075C  3F74C2D4           const [31]: (-725453761)
0760  01                 const type 3
0761  6B5810D6           const [32]: (-703571861)
0765  01                 const type 3
0766  FFF9DE4C           const [33]: (1289681407)
076A  03                 const type 3
076B  00000040           const [34]: (0)
076F  01                 const type 3
0770  93DDD9AB           const [35]: (-1411785325)
0774  01                 const type 3
0775  DD8258DE           const [36]: (-564624675)
                         * functions:
0779  00                 sizep (0)
                         * lines:
077B  01                 sizelineinfo (253)
                         [pc] (line)
077C  1A                 [001] (26)
077D  00                 [002] (26)
077E  00                 [003] (26)
077F  00                 [004] (27)
0780  1A                 [005] (27)
0781  00                 [006] (27)
0782  00                 [007] (27)
0783  00                 [008] (27)
0784  1A                 [009] (28)
0785  00                 [010] (30)
0786  00                 [011] (30)
0787  00                 [012] (31)
0788  1B                 [013] (32)
0789  00                 [014] (32)
078A  00                 [015] (32)
078B  00                 [016] (32)
078C  1B                 [017] (32)
078D  00                 [018] (33)
078E  00                 [019] (37)
078F  00                 [020] (37)
0790  1B                 [021] (37)
0791  00                 [022] (37)
0792  00                 [023] (37)
0793  00                 [024] (38)
0794  1B                 [025] (38)
0795  00                 [026] (38)
0796  00                 [027] (41)
0797  00                 [028] (41)
0798  1B                 [029] (41)
0799  00                 [030] (41)
079A  00                 [031] (41)
079B  00                 [032] (41)
079C  1C                 [033] (41)
079D  00                 [034] (41)
079E  00                 [035] (41)
079F  00                 [036] (41)
07A0  1E                 [037] (42)
07A1  00                 [038] (45)
07A2  00                 [039] (45)
07A3  00                 [040] (46)
07A4  1E                 [041] (47)
07A5  00                 [042] (47)
07A6  00                 [043] (47)
07A7  00                 [044] (47)
07A8  1F                 [045] (47)
07A9  00                 [046] (47)
07AA  00                 [047] (47)
07AB  00                 [048] (47)
07AC  20                 [049] (47)
07AD  00                 [050] (47)
07AE  00                 [051] (48)
07AF  00                 [052] (48)
07B0  20                 [053] (49)
07B1  00                 [054] (49)
07B2  00                 [055] (49)
07B3  00                 [056] (49)
07B4  20                 [057] (50)
07B5  00                 [058] (50)
07B6  00                 [059] (50)
07B7  00                 [060] (50)
07B8  20                 [061] (50)
07B9  00                 [062] (50)
07BA  00                 [063] (51)
07BB  00                 [064] (51)
07BC  20                 [065] (51)
07BD  00                 [066] (51)
07BE  00                 [067] (55)
07BF  00                 [068] (56)
07C0  21                 [069] (57)
07C1  00                 [070] (57)
07C2  00                 [071] (57)
07C3  00                 [072] (57)
07C4  25                 [073] (57)
07C5  00                 [074] (57)
07C6  00                 [075] (57)
07C7  00                 [076] (57)
07C8  25                 [077] (57)
07C9  00                 [078] (57)
07CA  00                 [079] (59)
07CB  00                 [080] (59)
07CC  25                 [081] (60)
07CD  00                 [082] (60)
07CE  00                 [083] (61)
07CF  00                 [084] (61)
07D0  25                 [085] (61)
07D1  00                 [086] (61)
07D2  00                 [087] (62)
07D3  00                 [088] (62)
07D4  25                 [089] (62)
07D5  00                 [090] (62)
07D6  00                 [091] (63)
07D7  00                 [092] (63)
07D8  26                 [093] (63)
07D9  00                 [094] (63)
07DA  00                 [095] (63)
07DB  00                 [096] (64)
07DC  26                 [097] (64)
07DD  00                 [098] (64)
07DE  00                 [099] (64)
07DF  00                 [100] (64)
07E0  26                 [101] (64)
07E1  00                 [102] (64)
07E2  00                 [103] (64)
07E3  00                 [104] (64)
07E4  29                 [105] (64)
07E5  00                 [106] (61)
07E6  00                 [107] (69)
07E7  00                 [108] (70)
07E8  29                 [109] (71)
07E9  00                 [110] (71)
07EA  00                 [111] (71)
07EB  00                 [112] (71)
07EC  29                 [113] (71)
07ED  00                 [114] (71)
07EE  00                 [115] (71)
07EF  00                 [116] (71)
07F0  29                 [117] (72)
07F1  00                 [118] (72)
07F2  00                 [119] (72)
07F3  00                 [120] (72)
07F4  29                 [121] (72)
07F5  00                 [122] (73)
07F6  00                 [123] (73)
07F7  00                 [124] (73)
07F8  29                 [125] (73)
07F9  00                 [126] (73)
07FA  00                 [127] (73)
07FB  00                 [128] (74)
07FC  29                 [129] (77)
07FD  00                 [130] (77)
07FE  00                 [131] (77)
07FF  00                 [132] (77)
0800  29                 [133] (77)
0801  00                 [134] (77)
0802  00                 [135] (77)
0803  00                 [136] (78)
0804  29                 [137] (78)
0805  00                 [138] (78)
0806  00                 [139] (79)
0807  00                 [140] (79)
0808  29                 [141] (80)
0809  00                 [142] (80)
080A  00                 [143] (80)
080B  00                 [144] (80)
080C  2A                 [145] (81)
080D  00                 [146] (81)
080E  00                 [147] (81)
080F  00                 [148] (81)
0810  2D                 [149] (82)
0811  00                 [150] (82)
0812  00                 [151] (82)
0813  00                 [152] (82)
0814  2D                 [153] (82)
0815  00                 [154] (83)
0816  00                 [155] (83)
0817  00                 [156] (84)
0818  2E                 [157] (84)
0819  00                 [158] (84)
081A  00                 [159] (84)
081B  00                 [160] (84)
081C  2F                 [161] (84)
081D  00                 [162] (84)
081E  00                 [163] (84)
081F  00                 [164] (84)
0820  2F                 [165] (84)
0821  00                 [166] (85)
0822  00                 [167] (85)
0823  00                 [168] (85)
0824  2F                 [169] (85)
0825  00                 [170] (85)
0826  00                 [171] (86)
0827  00                 [172] (86)
0828  2F                 [173] (86)
0829  00                 [174] (86)
082A  00                 [175] (87)
082B  00                 [176] (87)
082C  2F                 [177] (87)
082D  00                 [178] (87)
082E  00                 [179] (87)
082F  00                 [180] (88)
0830  2F                 [181] (88)
0831  00                 [182] (85)
0832  00                 [183] (92)
0833  00                 [184] (92)
0834  2F                 [185] (92)
0835  00                 [186] (92)
0836  00                 [187] (80)
0837  00                 [188] (96)
0838  2F                 [189] (99)
0839  00                 [190] (99)
083A  00                 [191] (99)
083B  00                 [192] (99)
083C  2F                 [193] (100)
083D  00                 [194] (100)
083E  00                 [195] (100)
083F  00                 [196] (101)
0840  2F                 [197] (101)
0841  00                 [198] (101)
0842  00                 [199] (101)
0843  00                 [200] (104)
0844  30                 [201] (104)
0845  00                 [202] (104)
0846  00                 [203] (105)
0847  00                 [204] (105)
0848  30                 [205] (105)
0849  00                 [206] (105)
084A  00                 [207] (105)
084B  00                 [208] (106)
084C  31                 [209] (108)
084D  00                 [210] (108)
084E  00                 [211] (109)
084F  00                 [212] (109)
0850  31                 [213] (110)
0851  00                 [214] (110)
0852  00                 [215] (110)
0853  00                 [216] (110)
0854  31                 [217] (111)
0855  00                 [218] (111)
0856  00                 [219] (111)
0857  00                 [220] (112)
0858  31                 [221] (112)
0859  00                 [222] (110)
085A  00                 [223] (113)
085B  00                 [224] (116)
085C  32                 [225] (116)
085D  00                 [226] (117)
085E  00                 [227] (117)
085F  00                 [228] (119)
0860  32                 [229] (119)
0861  00                 [230] (119)
0862  00                 [231] (119)
0863  00                 [232] (119)
0864  32                 [233] (120)
0865  00                 [234] (123)
0866  00                 [235] (123)
0867  00                 [236] (123)
0868  32                 [237] (123)
0869  00                 [238] (123)
086A  00                 [239] (124)
086B  00                 [240] (127)
086C  32                 [241] (127)
086D  00                 [242] (127)
086E  00                 [243] (127)
086F  00                 [244] (127)
0870  32                 [245] (-128)
0871  00                 [246] (-125)
0872  00                 [247] (-125)
0873  00                 [248] (-125)
0874  33                 [249] (-125)
0875  00                 [250] (-125)
0876  00                 [251] (-124)
0877  00                 [252] (-124)
0878  33                 [253] (-121)
                         * locals:
0B70  00                 sizelocvars (0)
                         * upvalues:
0B71  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
0B72  15                 sizelineinfo (21)
                         [pc] (line)
0B73  05                 [01] (5)
0B74  00                 [02] (5)
0B75  00                 [03] (5)
0B76  00                 [04] (7)
0B77  05                 [05] (7)
0B78  00                 [06] (7)
0B79  00                 [07] (8)
0B7A  00                 [08] (8)
0B7B  05                 [09] (8)
0B7C  00                 [10] (9)
0B7D  00                 [11] (9)
0B7E  00                 [12] (9)
0B7F  07                 [13] (23)
0B80  00                 [14] (23)
0B81  00                 [15] (-121)
0B82  00                 [16] (-121)
0B83  07                 [17] (-121)
0B84  00                 [18] (-121)
0B85  00                 [19] (-121)
0B86  00                 [20] (25)
0B87  07                 [21] (-121)
                         * locals:
0BC7  00                 sizelocvars (0)
                         * upvalues:
0BC8  00                 sizeupvalues (0)
                         ** end of function **

0BC9                     ** end of chunk **
