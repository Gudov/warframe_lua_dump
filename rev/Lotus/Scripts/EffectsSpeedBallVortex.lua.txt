1	C:\wlua_dump\path\Lotus\Scripts\EffectsSpeedBallVortex.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Scripts\EffectsSpeedBallVortex.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  04                 size of number (bytes)
0008  0E                 integral (1=integral)
414
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
SpeedBallVortex
PveSpeedBallVortex
gLotusAvatarType
Engine
SLOT_6
blockSequencerType
EMPTY_SYMBOL
sequencerType
projectorType
blockDecoType
ZERO_ROTATION
decoType
gLotusAvatarType
Engine
SLOT_6
sequencerType
EMPTY_SYMBOL
projectorType
decoType
ZERO_ROTATION
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  04                 maxstacksize (4)
                         * code:
0008  0E                 sizecode (14)
0009  1D000000           [01] getglobal  0   0        ; 572299008
000D  59400000           [02] loadk      1   1        ; -113
0011  99800000           [03] loadk      2   2        ; -113
0015  D9C00000           [04] loadk      3   3        ; 0
0019  22800002           [05] call       0   4   2  
001D  65000000           [06] closure    1   0      
0021  12000000           [07] move       0   0      
0025  60000100           [08] setglobal  1   4        ; SpeedBallVortex
0029  60400100           [09] setglobal  1   5        ; -850597366
002D  65400000           [10] closure    1   1      
0031  12000000           [11] move       0   0      
0035  60800100           [12] setglobal  1   6        ; PveSpeedBallVortex
0039  60C00100           [13] setglobal  1   7        ; -688268959
003D  1E008000           [14] return     0   1      
                         * constants:
0041  08                 sizek (8)
0042  01                 const type 3
0043  00971C22           const [0]: (572299008)
0047  03                 const type 3
0048  8FC2F53D           const [1]: (-113)
004C  03                 const type 3
004D  8FC2F5BD           const [2]: (-113)
0051  03                 const type 3
0052  0000803E           const [3]: (0)
0056  04                 const type 4
0057  10                 string size (16)
0058  537065656442616C+  "SpeedBal"
0060  6C566F7274657800   "lVortex\0"
                         const [4]: "SpeedBallVortex"
0068  01                 const type 3
0069  0AEA4CCD           const [5]: (-850597366)
006D  04                 const type 4
006E  13                 string size (19)
006F  5076655370656564+  "PveSpeed"
0077  42616C6C566F7274+  "BallVort"
007F  657800             "ex\0"
                         const [6]: "PveSpeedBallVortex"
0082  01                 const type 3
0083  61D9F9D6           const [7]: (-688268959)
                         * functions:
0087  02                 sizep (2)
                         
0088                     ** function [0] definition (level 2)
                         ** start of function **
0088  00                 string size (0)
                         source name: (none)
0089  09                 line defined (9)
008A  39                 last line defined (57)
008B  01                 nups (1)
008C  01                 numparams (1)
008D  00                 is_vararg (0)
008E  0F                 maxstacksize (15)
                         * code:
0090  01                 sizecode (137)
0091  24014000           [001] self       4   0   256  ; -704974830
0095  22810001           [002] call       4   2   2  
0099  64414000           [003] self       5   0   257  ; -1870903749
009D  62810001           [004] call       5   2   2  
00A1  9D810000           [005] getglobal  6   2        ; 1074689893
00A5  D2010002           [006] move       7   4      
00A9  A2810001           [007] call       6   2   2  
00AD  98410000           [008] test       6       1    ; to [10] if false
00B1  1A801F80           [009] jmp        127          ; to [137]
00B5  A4C14002           [010] self       6   4   259  ; -1957065004
00B9  1D020100           [011] getglobal  8   4        ; gLotusAvatarType
00BD  A2818001           [012] call       6   3   2  
00C1  98010000           [013] test       6       0    ; to [15] if true
00C5  1A401E80           [014] jmp        122          ; to [137]
00C9  A4414102           [015] self       6   4   261  ; -1917464545
00CD  A2810001           [016] call       6   2   2  
00D1  E4814103           [017] self       7   6   262  ; 1674984496
00D5  5DC20100           [018] getglobal  9   7        ; Engine
00D9  4E02C204           [019] gettable   9   9   264  ; "SLOT_6"
00DD  E2818001           [020] call       7   3   2  
00E1  1D820000           [021] getglobal  8   2        ; 1074689893
00E5  52020000           [022] move       9   0      
00E9  22820001           [023] call       8   2   2  
00ED  18420000           [024] test       8       1    ; to [26] if false
00F1  1A801B80           [025] jmp        111          ; to [137]
00F5  1D820000           [026] getglobal  8   2        ; 1074689893
00F9  52028002           [027] move       9   5      
00FD  22820001           [028] call       8   2   2  
0101  18420000           [029] test       8       1    ; to [31] if false
0105  1A401A80           [030] jmp        106          ; to [137]
0109  1D820000           [031] getglobal  8   2        ; 1074689893
010D  52020002           [032] move       9   4      
0111  22820001           [033] call       8   2   2  
0115  18420000           [034] test       8       1    ; to [36] if false
0119  1A001980           [035] jmp        101          ; to [137]
011D  1D820000           [036] getglobal  8   2        ; 1074689893
0121  52028003           [037] move       9   7      
0125  22820001           [038] call       8   2   2  
0129  18420000           [039] test       8       1    ; to [41] if false
012D  1AC01780           [040] jmp        96           ; to [137]
0131  2442C203           [041] self       8   7   265  ; 1726374501
0135  22820001           [042] call       8   2   2  
0139  18020000           [043] test       8       0    ; to [45] if true
013D  1A800F80           [044] jmp        63           ; to [108]
0141  1D820000           [045] getglobal  8   2        ; 1074689893
0145  52028000           [046] move       9   1      
0149  22820001           [047] call       8   2   2  
014D  18020000           [048] test       8       0    ; to [50] if true
0151  1A800380           [049] jmp        15           ; to [65]
0155  2482C203           [050] self       8   7   266  ; 24631625
0159  22820001           [051] call       8   2   2  
015D  18020000           [052] test       8       0    ; to [54] if true
0161  1A400180           [053] jmp        6            ; to [60]
0165  24C24200           [054] self       8   0   267  ; -1421644046
0169  9D020300           [055] getglobal  10  12       ; blockSequencerType
016D  DD420300           [056] getglobal  11  13       ; EMPTY_SYMBOL
0171  22820002           [057] call       8   4   2  
0175  52000004           [058] move       1   8      
0179  1A000180           [059] jmp        5            ; to [65]
017D  24C24200           [060] self       8   0   267  ; -1421644046
0181  9D820300           [061] getglobal  10  14       ; sequencerType
0185  DD420300           [062] getglobal  11  13       ; EMPTY_SYMBOL
0189  22820002           [063] call       8   4   2  
018D  52000004           [064] move       1   8      
0191  1D820000           [065] getglobal  8   2        ; 1074689893
0195  52028001           [066] move       9   3      
0199  22820001           [067] call       8   2   2  
019D  18020000           [068] test       8       0    ; to [70] if true
01A1  1A800280           [069] jmp        11           ; to [81]
01A5  1D820000           [070] getglobal  8   2        ; 1074689893
01A9  52028002           [071] move       9   5      
01AD  22820001           [072] call       8   2   2  
01B1  18420000           [073] test       8       1    ; to [75] if false
01B5  1A400180           [074] jmp        6            ; to [81]
01B9  24C2C202           [075] self       8   5   267  ; -1421644046
01BD  9DC20300           [076] getglobal  10  15       ; projectorType
01C1  DD420300           [077] getglobal  11  13       ; EMPTY_SYMBOL
01C5  13030000           [078] getupval   12  0      
01C9  22828002           [079] call       8   5   2  
01CD  D2000004           [080] move       3   8      
01D1  1D820000           [081] getglobal  8   2        ; 1074689893
01D5  52020001           [082] move       9   2      
01D9  22820001           [083] call       8   2   2  
01DD  18020000           [084] test       8       0    ; to [86] if true
01E1  1A800B80           [085] jmp        47           ; to [133]
01E5  2482C203           [086] self       8   7   266  ; 24631625
01E9  22820001           [087] call       8   2   2  
01ED  18020000           [088] test       8       0    ; to [90] if true
01F1  1A000280           [089] jmp        9            ; to [99]
01F5  24C2C202           [090] self       8   5   267  ; -1421644046
01F9  9D020400           [091] getglobal  10  16       ; blockDecoType
01FD  DD420300           [092] getglobal  11  13       ; EMPTY_SYMBOL
0201  13030000           [093] getupval   12  0      
0205  5D430400           [094] getglobal  13  17       ; ZERO_ROTATION
0209  92030002           [095] move       14  4      
020D  22828003           [096] call       8   7   2  
0211  92000004           [097] move       2   8      
0215  1A400880           [098] jmp        34           ; to [133]
0219  24C2C202           [099] self       8   5   267  ; -1421644046
021D  9D820400           [100] getglobal  10  18       ; decoType
0221  DD420300           [101] getglobal  11  13       ; EMPTY_SYMBOL
0225  13030000           [102] getupval   12  0      
0229  5D430400           [103] getglobal  13  17       ; ZERO_ROTATION
022D  92030002           [104] move       14  4      
0231  22828003           [105] call       8   7   2  
0235  92000004           [106] move       2   8      
0239  1A000680           [107] jmp        25           ; to [133]
023D  1D820000           [108] getglobal  8   2        ; 1074689893
0241  52028000           [109] move       9   1      
0245  22820001           [110] call       8   2   2  
0249  18420000           [111] test       8       1    ; to [113] if false
024D  1A800080           [112] jmp        3            ; to [116]
0251  24C2C400           [113] self       8   1   275  ; -725453761
0255  22420001           [114] call       8   2   1  
0259  46008000           [115] loadnil    1   1      
025D  1D820000           [116] getglobal  8   2        ; 1074689893
0261  52028001           [117] move       9   3      
0265  22820001           [118] call       8   2   2  
0269  18420000           [119] test       8       1    ; to [121] if false
026D  1A400080           [120] jmp        2            ; to [123]
0271  24C2C401           [121] self       8   3   275  ; -725453761
0275  22420001           [122] call       8   2   1  
0279  1D820000           [123] getglobal  8   2        ; 1074689893
027D  52020001           [124] move       9   2      
0281  22820001           [125] call       8   2   2  
0285  18420000           [126] test       8       1    ; to [128] if false
0289  1A000180           [127] jmp        5            ; to [133]
028D  24024501           [128] self       8   2   276  ; 1521658607
0291  22420001           [129] call       8   2   1  
0295  24424501           [130] self       8   2   277  ; -1990411311
0299  22420001           [131] call       8   2   1  
029D  86000001           [132] loadnil    2   2      
02A1  1D820500           [133] getglobal  8   22       ; 538022378
02A5  59C20500           [134] loadk      9   23       ; 0
02A9  22420001           [135] call       8   2   1  
02AD  1AC0E27F           [136] jmp        -116         ; to [21]
02B1  1E008000           [137] return     0   1      
                         * constants:
02B5  18                 sizek (24)
02B6  01                 const type 3
02B7  12F0FAD5           const [0]: (-704974830)
02BB  01                 const type 3
02BC  3B467C90           const [1]: (-1870903749)
02C0  01                 const type 3
02C1  65770E40           const [2]: (1074689893)
02C5  01                 const type 3
02C6  D48E598B           const [3]: (-1957065004)
02CA  04                 const type 4
02CB  11                 string size (17)
02CC  674C6F7475734176+  "gLotusAv"
02D4  6174617254797065+  "atarType"
02DC  00                 "\0"
                         const [4]: "gLotusAvatarType"
02DD  01                 const type 3
02DE  1FD0B58D           const [5]: (-1917464545)
02E2  01                 const type 3
02E3  303CD663           const [6]: (1674984496)
02E7  04                 const type 4
02E8  07                 string size (7)
02E9  456E67696E6500     "Engine\0"
                         const [7]: "Engine"
02F0  04                 const type 4
02F1  07                 string size (7)
02F2  534C4F545F3600     "SLOT_6\0"
                         const [8]: "SLOT_6"
02F9  01                 const type 3
02FA  6562E666           const [9]: (1726374501)
02FE  01                 const type 3
02FF  49D97701           const [10]: (24631625)
0303  01                 const type 3
0304  F26E43AB           const [11]: (-1421644046)
0308  04                 const type 4
0309  13                 string size (19)
030A  626C6F636B536571+  "blockSeq"
0312  75656E6365725479+  "uencerTy"
031A  706500             "pe\0"
                         const [12]: "blockSequencerType"
031D  04                 const type 4
031E  0D                 string size (13)
031F  454D5054595F5359+  "EMPTY_SY"
0327  4D424F4C00         "MBOL\0"
                         const [13]: "EMPTY_SYMBOL"
032C  04                 const type 4
032D  0E                 string size (14)
032E  73657175656E6365+  "sequence"
0336  725479706500       "rType\0"
                         const [14]: "sequencerType"
033C  04                 const type 4
033D  0E                 string size (14)
033E  70726F6A6563746F+  "projecto"
0346  725479706500       "rType\0"
                         const [15]: "projectorType"
034C  04                 const type 4
034D  0E                 string size (14)
034E  626C6F636B446563+  "blockDec"
0356  6F5479706500       "oType\0"
                         const [16]: "blockDecoType"
035C  04                 const type 4
035D  0E                 string size (14)
035E  5A45524F5F524F54+  "ZERO_ROT"
0366  4154494F4E00       "ATION\0"
                         const [17]: "ZERO_ROTATION"
036C  04                 const type 4
036D  09                 string size (9)
036E  6465636F54797065+  "decoType"
0376  00                 "\0"
                         const [18]: "decoType"
0377  01                 const type 3
0378  3F74C2D4           const [19]: (-725453761)
037C  01                 const type 3
037D  EFAAB25A           const [20]: (1521658607)
0381  01                 const type 3
0382  D1BB5C89           const [21]: (-1990411311)
0386  01                 const type 3
0387  EA911120           const [22]: (538022378)
038B  03                 const type 3
038C  00000000           const [23]: (0)
                         * functions:
0390  00                 sizep (0)
                         * lines:
0392  01                 sizelineinfo (137)
                         [pc] (line)
0393  0E                 [001] (14)
0394  00                 [002] (14)
0395  00                 [003] (15)
0396  00                 [004] (15)
0397  0E                 [005] (17)
0398  00                 [006] (17)
0399  00                 [007] (17)
039A  00                 [008] (17)
039B  0F                 [009] (17)
039C  00                 [010] (17)
039D  00                 [011] (17)
039E  00                 [012] (17)
039F  0F                 [013] (17)
03A0  00                 [014] (17)
03A1  00                 [015] (18)
03A2  00                 [016] (18)
03A3  11                 [017] (19)
03A4  00                 [018] (19)
03A5  00                 [019] (19)
03A6  00                 [020] (19)
03A7  11                 [021] (21)
03A8  00                 [022] (21)
03A9  00                 [023] (21)
03AA  00                 [024] (21)
03AB  11                 [025] (21)
03AC  00                 [026] (21)
03AD  00                 [027] (21)
03AE  00                 [028] (21)
03AF  11                 [029] (21)
03B0  00                 [030] (21)
03B1  00                 [031] (21)
03B2  00                 [032] (21)
03B3  11                 [033] (21)
03B4  00                 [034] (21)
03B5  00                 [035] (21)
03B6  00                 [036] (21)
03B7  11                 [037] (21)
03B8  00                 [038] (21)
03B9  00                 [039] (21)
03BA  00                 [040] (21)
03BB  11                 [041] (22)
03BC  00                 [042] (22)
03BD  00                 [043] (22)
03BE  00                 [044] (22)
03BF  11                 [045] (23)
03C0  00                 [046] (23)
03C1  00                 [047] (23)
03C2  00                 [048] (23)
03C3  11                 [049] (23)
03C4  00                 [050] (24)
03C5  00                 [051] (24)
03C6  00                 [052] (24)
03C7  11                 [053] (24)
03C8  00                 [054] (25)
03C9  00                 [055] (25)
03CA  00                 [056] (25)
03CB  12                 [057] (25)
03CC  00                 [058] (25)
03CD  00                 [059] (25)
03CE  00                 [060] (27)
03CF  12                 [061] (27)
03D0  00                 [062] (27)
03D1  00                 [063] (27)
03D2  00                 [064] (27)
03D3  13                 [065] (30)
03D4  00                 [066] (30)
03D5  00                 [067] (30)
03D6  00                 [068] (30)
03D7  13                 [069] (30)
03D8  00                 [070] (30)
03D9  00                 [071] (30)
03DA  00                 [072] (30)
03DB  13                 [073] (30)
03DC  00                 [074] (30)
03DD  00                 [075] (31)
03DE  00                 [076] (31)
03DF  13                 [077] (31)
03E0  00                 [078] (31)
03E1  00                 [079] (31)
03E2  00                 [080] (31)
03E3  15                 [081] (33)
03E4  00                 [082] (33)
03E5  00                 [083] (33)
03E6  00                 [084] (33)
03E7  15                 [085] (33)
03E8  00                 [086] (34)
03E9  00                 [087] (34)
03EA  00                 [088] (34)
03EB  15                 [089] (34)
03EC  00                 [090] (35)
03ED  00                 [091] (35)
03EE  00                 [092] (35)
03EF  15                 [093] (35)
03F0  00                 [094] (35)
03F1  00                 [095] (35)
03F2  00                 [096] (35)
03F3  15                 [097] (35)
03F4  00                 [098] (35)
03F5  00                 [099] (37)
03F6  00                 [100] (37)
03F7  15                 [101] (37)
03F8  00                 [102] (37)
03F9  00                 [103] (37)
03FA  00                 [104] (37)
03FB  15                 [105] (37)
03FC  00                 [106] (37)
03FD  00                 [107] (39)
03FE  00                 [108] (41)
03FF  15                 [109] (41)
0400  00                 [110] (41)
0401  00                 [111] (41)
0402  00                 [112] (41)
0403  15                 [113] (42)
0404  00                 [114] (42)
0405  00                 [115] (43)
0406  00                 [116] (45)
0407  15                 [117] (45)
0408  00                 [118] (45)
0409  00                 [119] (45)
040A  00                 [120] (45)
040B  15                 [121] (46)
040C  00                 [122] (46)
040D  00                 [123] (48)
040E  00                 [124] (48)
040F  15                 [125] (48)
0410  00                 [126] (48)
0411  00                 [127] (48)
0412  00                 [128] (49)
0413  15                 [129] (49)
0414  00                 [130] (50)
0415  00                 [131] (50)
0416  00                 [132] (51)
0417  15                 [133] (54)
0418  00                 [134] (54)
0419  00                 [135] (54)
041A  00                 [136] (54)
041B  15                 [137] (57)
                         * locals:
05B7  00                 sizelocvars (0)
                         * upvalues:
05B8  00                 sizeupvalues (0)
                         ** end of function **

                         
05B9                     ** function [1] definition (level 2)
                         ** start of function **
05B9  00                 string size (0)
                         source name: (none)
05BA  3B                 line defined (59)
05BB  64                 last line defined (100)
05BC  01                 nups (1)
05BD  01                 numparams (1)
05BE  00                 is_vararg (0)
05BF  10                 maxstacksize (16)
                         * code:
05C0  79                 sizecode (121)
05C1  24014000           [001] self       4   0   256  ; -704974830
05C5  22810001           [002] call       4   2   2  
05C9  64414000           [003] self       5   0   257  ; -1870903749
05CD  62810001           [004] call       5   2   2  
05D1  9D810000           [005] getglobal  6   2        ; 1074689893
05D5  D2010002           [006] move       7   4      
05D9  A2810001           [007] call       6   2   2  
05DD  98410000           [008] test       6       1    ; to [10] if false
05E1  1A801B80           [009] jmp        111          ; to [121]
05E5  A4C14002           [010] self       6   4   259  ; -1957065004
05E9  1D020100           [011] getglobal  8   4        ; gLotusAvatarType
05ED  A2818001           [012] call       6   3   2  
05F1  98010000           [013] test       6       0    ; to [15] if true
05F5  1A401A80           [014] jmp        106          ; to [121]
05F9  A4414102           [015] self       6   4   261  ; -1917464545
05FD  A2810001           [016] call       6   2   2  
0601  E4814103           [017] self       7   6   262  ; 1674984496
0605  5DC20100           [018] getglobal  9   7        ; Engine
0609  4E02C204           [019] gettable   9   9   264  ; "SLOT_6"
060D  E2818001           [020] call       7   3   2  
0611  2442C203           [021] self       8   7   265  ; 1474710840
0615  99820200           [022] loadk      10  10       ; 0
0619  22828001           [023] call       8   3   2  
061D  5D820000           [024] getglobal  9   2        ; 1074689893
0621  92020000           [025] move       10  0      
0625  62820001           [026] call       9   2   2  
0629  58420000           [027] test       9       1    ; to [29] if false
062D  1AC01680           [028] jmp        92           ; to [121]
0631  5D820000           [029] getglobal  9   2        ; 1074689893
0635  92028002           [030] move       10  5      
0639  62820001           [031] call       9   2   2  
063D  58420000           [032] test       9       1    ; to [34] if false
0641  1A801580           [033] jmp        87           ; to [121]
0645  5D820000           [034] getglobal  9   2        ; 1074689893
0649  92020002           [035] move       10  4      
064D  62820001           [036] call       9   2   2  
0651  58420000           [037] test       9       1    ; to [39] if false
0655  1A401480           [038] jmp        82           ; to [121]
0659  5D820000           [039] getglobal  9   2        ; 1074689893
065D  92028003           [040] move       10  7      
0661  62820001           [041] call       9   2   2  
0665  58420000           [042] test       9       1    ; to [44] if false
0669  1A001380           [043] jmp        77           ; to [121]
066D  64C2C203           [044] self       9   7   267  ; 1726374501
0671  62820001           [045] call       9   2   2  
0675  58020000           [046] test       9       0    ; to [48] if true
0679  1AC00A80           [047] jmp        44           ; to [92]
067D  64024304           [048] self       9   8   268  ; 24631625
0681  62820001           [049] call       9   2   2  
0685  58420000           [050] test       9       1    ; to [52] if false
0689  1AC00980           [051] jmp        40           ; to [92]
068D  5D820000           [052] getglobal  9   2        ; 1074689893
0691  92028000           [053] move       10  1      
0695  62820001           [054] call       9   2   2  
0699  58020000           [055] test       9       0    ; to [57] if true
069D  1A000180           [056] jmp        5            ; to [62]
06A1  64424300           [057] self       9   0   269  ; -1421644046
06A5  DD820300           [058] getglobal  11  14       ; sequencerType
06A9  1DC30300           [059] getglobal  12  15       ; EMPTY_SYMBOL
06AD  62820002           [060] call       9   4   2  
06B1  52008004           [061] move       1   9      
06B5  5D820000           [062] getglobal  9   2        ; 1074689893
06B9  92028001           [063] move       10  3      
06BD  62820001           [064] call       9   2   2  
06C1  58020000           [065] test       9       0    ; to [67] if true
06C5  1A800280           [066] jmp        11           ; to [78]
06C9  5D820000           [067] getglobal  9   2        ; 1074689893
06CD  92028002           [068] move       10  5      
06D1  62820001           [069] call       9   2   2  
06D5  58420000           [070] test       9       1    ; to [72] if false
06D9  1A400180           [071] jmp        6            ; to [78]
06DD  6442C302           [072] self       9   5   269  ; -1421644046
06E1  DD020400           [073] getglobal  11  16       ; projectorType
06E5  1DC30300           [074] getglobal  12  15       ; EMPTY_SYMBOL
06E9  53030000           [075] getupval   13  0      
06ED  62828002           [076] call       9   5   2  
06F1  D2008004           [077] move       3   9      
06F5  5D820000           [078] getglobal  9   2        ; 1074689893
06F9  92020001           [079] move       10  2      
06FD  62820001           [080] call       9   2   2  
0701  58020000           [081] test       9       0    ; to [83] if true
0705  1A400880           [082] jmp        34           ; to [117]
0709  6442C302           [083] self       9   5   269  ; -1421644046
070D  DD420400           [084] getglobal  11  17       ; decoType
0711  1DC30300           [085] getglobal  12  15       ; EMPTY_SYMBOL
0715  53030000           [086] getupval   13  0      
0719  9D830400           [087] getglobal  14  18       ; ZERO_ROTATION
071D  D2030002           [088] move       15  4      
0721  62828003           [089] call       9   7   2  
0725  92008004           [090] move       2   9      
0729  1A000680           [091] jmp        25           ; to [117]
072D  5D820000           [092] getglobal  9   2        ; 1074689893
0731  92028000           [093] move       10  1      
0735  62820001           [094] call       9   2   2  
0739  58420000           [095] test       9       1    ; to [97] if false
073D  1A800080           [096] jmp        3            ; to [100]
0741  64C2C400           [097] self       9   1   275  ; -725453761
0745  62420001           [098] call       9   2   1  
0749  46008000           [099] loadnil    1   1      
074D  5D820000           [100] getglobal  9   2        ; 1074689893
0751  92028001           [101] move       10  3      
0755  62820001           [102] call       9   2   2  
0759  58420000           [103] test       9       1    ; to [105] if false
075D  1A400080           [104] jmp        2            ; to [107]
0761  64C2C401           [105] self       9   3   275  ; -725453761
0765  62420001           [106] call       9   2   1  
0769  5D820000           [107] getglobal  9   2        ; 1074689893
076D  92020001           [108] move       10  2      
0771  62820001           [109] call       9   2   2  
0775  58420000           [110] test       9       1    ; to [112] if false
0779  1A000180           [111] jmp        5            ; to [117]
077D  64024501           [112] self       9   2   276  ; 1521658607
0781  62420001           [113] call       9   2   1  
0785  64424501           [114] self       9   2   277  ; -1990411311
0789  62420001           [115] call       9   2   1  
078D  86000001           [116] loadnil    2   2      
0791  5D820500           [117] getglobal  9   22       ; 538022378
0795  99C20500           [118] loadk      10  23       ; 0
0799  62420001           [119] call       9   2   1  
079D  1A80E77F           [120] jmp        -97          ; to [24]
07A1  1E008000           [121] return     0   1      
                         * constants:
07A5  18                 sizek (24)
07A6  01                 const type 3
07A7  12F0FAD5           const [0]: (-704974830)
07AB  01                 const type 3
07AC  3B467C90           const [1]: (-1870903749)
07B0  01                 const type 3
07B1  65770E40           const [2]: (1074689893)
07B5  01                 const type 3
07B6  D48E598B           const [3]: (-1957065004)
07BA  04                 const type 4
07BB  11                 string size (17)
07BC  674C6F7475734176+  "gLotusAv"
07C4  6174617254797065+  "atarType"
07CC  00                 "\0"
                         const [4]: "gLotusAvatarType"
07CD  01                 const type 3
07CE  1FD0B58D           const [5]: (-1917464545)
07D2  01                 const type 3
07D3  303CD663           const [6]: (1674984496)
07D7  04                 const type 4
07D8  07                 string size (7)
07D9  456E67696E6500     "Engine\0"
                         const [7]: "Engine"
07E0  04                 const type 4
07E1  07                 string size (7)
07E2  534C4F545F3600     "SLOT_6\0"
                         const [8]: "SLOT_6"
07E9  01                 const type 3
07EA  384DE657           const [9]: (1474710840)
07EE  03                 const type 3
07EF  0000803F           const [10]: (0)
07F3  01                 const type 3
07F4  6562E666           const [11]: (1726374501)
07F8  01                 const type 3
07F9  49D97701           const [12]: (24631625)
07FD  01                 const type 3
07FE  F26E43AB           const [13]: (-1421644046)
0802  04                 const type 4
0803  0E                 string size (14)
0804  73657175656E6365+  "sequence"
080C  725479706500       "rType\0"
                         const [14]: "sequencerType"
0812  04                 const type 4
0813  0D                 string size (13)
0814  454D5054595F5359+  "EMPTY_SY"
081C  4D424F4C00         "MBOL\0"
                         const [15]: "EMPTY_SYMBOL"
0821  04                 const type 4
0822  0E                 string size (14)
0823  70726F6A6563746F+  "projecto"
082B  725479706500       "rType\0"
                         const [16]: "projectorType"
0831  04                 const type 4
0832  09                 string size (9)
0833  6465636F54797065+  "decoType"
083B  00                 "\0"
                         const [17]: "decoType"
083C  04                 const type 4
083D  0E                 string size (14)
083E  5A45524F5F524F54+  "ZERO_ROT"
0846  4154494F4E00       "ATION\0"
                         const [18]: "ZERO_ROTATION"
084C  01                 const type 3
084D  3F74C2D4           const [19]: (-725453761)
0851  01                 const type 3
0852  EFAAB25A           const [20]: (1521658607)
0856  01                 const type 3
0857  D1BB5C89           const [21]: (-1990411311)
085B  01                 const type 3
085C  EA911120           const [22]: (538022378)
0860  03                 const type 3
0861  00000000           const [23]: (0)
                         * functions:
0865  00                 sizep (0)
                         * lines:
0866  79                 sizelineinfo (121)
                         [pc] (line)
0867  40                 [001] (64)
0868  00                 [002] (64)
0869  00                 [003] (65)
086A  00                 [004] (65)
086B  40                 [005] (67)
086C  00                 [006] (67)
086D  00                 [007] (67)
086E  00                 [008] (67)
086F  41                 [009] (67)
0870  00                 [010] (67)
0871  00                 [011] (67)
0872  00                 [012] (67)
0873  41                 [013] (67)
0874  00                 [014] (67)
0875  00                 [015] (68)
0876  00                 [016] (68)
0877  43                 [017] (69)
0878  00                 [018] (69)
0879  00                 [019] (69)
087A  00                 [020] (69)
087B  43                 [021] (70)
087C  00                 [022] (70)
087D  00                 [023] (70)
087E  00                 [024] (72)
087F  43                 [025] (72)
0880  00                 [026] (72)
0881  00                 [027] (72)
0882  00                 [028] (72)
0883  43                 [029] (72)
0884  00                 [030] (72)
0885  00                 [031] (72)
0886  00                 [032] (72)
0887  43                 [033] (72)
0888  00                 [034] (72)
0889  00                 [035] (72)
088A  00                 [036] (72)
088B  43                 [037] (72)
088C  00                 [038] (72)
088D  00                 [039] (72)
088E  00                 [040] (72)
088F  43                 [041] (72)
0890  00                 [042] (72)
0891  00                 [043] (72)
0892  00                 [044] (73)
0893  43                 [045] (73)
0894  00                 [046] (73)
0895  00                 [047] (73)
0896  00                 [048] (73)
0897  43                 [049] (73)
0898  00                 [050] (73)
0899  00                 [051] (73)
089A  00                 [052] (74)
089B  43                 [053] (74)
089C  00                 [054] (74)
089D  00                 [055] (74)
089E  00                 [056] (74)
089F  44                 [057] (75)
08A0  00                 [058] (75)
08A1  00                 [059] (75)
08A2  00                 [060] (75)
08A3  44                 [061] (75)
08A4  00                 [062] (77)
08A5  00                 [063] (77)
08A6  00                 [064] (77)
08A7  45                 [065] (77)
08A8  00                 [066] (77)
08A9  00                 [067] (77)
08AA  00                 [068] (77)
08AB  45                 [069] (77)
08AC  00                 [070] (77)
08AD  00                 [071] (77)
08AE  00                 [072] (78)
08AF  45                 [073] (78)
08B0  00                 [074] (78)
08B1  00                 [075] (78)
08B2  00                 [076] (78)
08B3  45                 [077] (78)
08B4  00                 [078] (80)
08B5  00                 [079] (80)
08B6  00                 [080] (80)
08B7  46                 [081] (80)
08B8  00                 [082] (80)
08B9  00                 [083] (81)
08BA  00                 [084] (81)
08BB  46                 [085] (81)
08BC  00                 [086] (81)
08BD  00                 [087] (81)
08BE  00                 [088] (81)
08BF  46                 [089] (81)
08C0  00                 [090] (81)
08C1  00                 [091] (82)
08C2  00                 [092] (84)
08C3  48                 [093] (84)
08C4  00                 [094] (84)
08C5  00                 [095] (84)
08C6  00                 [096] (84)
08C7  48                 [097] (85)
08C8  00                 [098] (85)
08C9  00                 [099] (86)
08CA  00                 [100] (88)
08CB  48                 [101] (88)
08CC  00                 [102] (88)
08CD  00                 [103] (88)
08CE  00                 [104] (88)
08CF  48                 [105] (89)
08D0  00                 [106] (89)
08D1  00                 [107] (91)
08D2  00                 [108] (91)
08D3  48                 [109] (91)
08D4  00                 [110] (91)
08D5  00                 [111] (91)
08D6  00                 [112] (92)
08D7  48                 [113] (92)
08D8  00                 [114] (93)
08D9  00                 [115] (93)
08DA  00                 [116] (94)
08DB  48                 [117] (97)
08DC  00                 [118] (97)
08DD  00                 [119] (97)
08DE  00                 [120] (97)
08DF  48                 [121] (100)
                         * locals:
0A4B  00                 sizelocvars (0)
                         * upvalues:
0A4C  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
0A4D  0E                 sizelineinfo (14)
                         [pc] (line)
0A4E  07                 [01] (7)
0A4F  00                 [02] (7)
0A50  00                 [03] (7)
0A51  00                 [04] (7)
0A52  07                 [05] (7)
0A53  00                 [06] (57)
0A54  00                 [07] (57)
0A55  00                 [08] (57)
0A56  07                 [09] (9)
0A57  00                 [10] (100)
0A58  00                 [11] (100)
0A59  00                 [12] (100)
0A5A  07                 [13] (59)
0A5B  00                 [14] (100)
                         * locals:
0A86  00                 sizelocvars (0)
                         * upvalues:
0A87  00                 sizeupvalues (0)
                         ** end of function **

0A88                     ** end of chunk **
