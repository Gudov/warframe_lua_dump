1	C:\wlua_dump\path\Lotus\Powersuits\NpcPowersuits\NpcPowersuitAbilitiesModCrpRadialNullify.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Powersuits\NpcPowersuits\NpcPowersuitAbilitiesModCrpRadialNullify.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  02                 size of number (bytes)
0008  07                 integral (1=integral)
47
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
NpcEvaluateAbility
ActivateAbility
helmetBaseType
distanceToTarget
range
helmetTypes
activateStartAnim
Engine
ATMM_PHYSICS_DRIVEN
PRT_ONCE
activateAttackAnim
PRT_LOOP
attackLoopTime
GAME_C1_HEAD1
gRegion
shockwaveTypes
shockwaveSound
endDelay
staggerAnim
activateRecoverAnim
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  02                 maxstacksize (2)
                         * code:
0008  07                 sizecode (7)
0009  25000000           [1] closure    0   0      
000D  20000000           [2] setglobal  0   0        ; NpcEvaluateAbility
0011  20400000           [3] setglobal  0   1        ; -319690153
0015  25400000           [4] closure    0   1      
0019  20800000           [5] setglobal  0   2        ; ActivateAbility
001D  20C00000           [6] setglobal  0   3        ; -871687712
0021  1E008000           [7] return     0   1      
                         * constants:
0025  04                 sizek (4)
0026  04                 const type 4
0027  13                 string size (19)
0028  4E70634576616C75+  "NpcEvalu"
0030  6174654162696C69+  "ateAbili"
0038  747900             "ty\0"
                         const [0]: "NpcEvaluateAbility"
003B  01                 const type 3
003C  57EAF1EC           const [1]: (-319690153)
0040  04                 const type 4
0041  10                 string size (16)
0042  4163746976617465+  "Activate"
004A  4162696C69747900   "Ability\0"
                         const [2]: "ActivateAbility"
0052  01                 const type 3
0053  E0190BCC           const [3]: (-871687712)
                         * functions:
0057  02                 sizep (2)
                         
0058                     ** function [0] definition (level 2)
                         ** start of function **
0058  00                 string size (0)
                         source name: (none)
0059  0D                 line defined (13)
005A  23                 last line defined (35)
005B  00                 nups (0)
005C  02                 numparams (2)
005D  00                 is_vararg (0)
005E  0B                 maxstacksize (11)
                         * code:
005F  24                 sizecode (36)
0060  9D000000           [01] getglobal  2   0        ; 1074689893
0064  E440C000           [02] self       3   1   257  ; -1625438872
0068  5D810000           [03] getglobal  5   2        ; helmetBaseType
006C  E2008001           [04] call       3   3   0  
0070  A2800000           [05] call       2   0   2  
0074  98000000           [06] test       2       0    ; to [8] if true
0078  1A000080           [07] jmp        1            ; to [9]
007C  1E008000           [08] return     0   1      
0080  99C00000           [09] loadk      2   3        ; 0
0084  E400C100           [10] self       3   1   260  ; -1411785325
0088  E2800001           [11] call       3   2   2  
008C  E440C101           [12] self       3   3   261  ; -7370619
0090  E2800001           [13] call       3   2   2  
0094  19810100           [14] loadk      4   6        ; 0
0098  4A018001           [15] len        5   3      
009C  99810100           [16] loadk      6   6        ; 0
00A0  10C10380           [17] forprep    4   16       ; to [34]
00A4  0EC28101           [18] gettable   8   3   7  
00A8  24C24104           [19] self       8   8   263  ; 1018140032
00AC  22820001           [20] call       8   2   2  
00B0  18020000           [21] test       8       0    ; to [23] if true
00B4  1A800280           [22] jmp        11           ; to [34]
00B8  0EC28101           [23] gettable   8   3   7  
00BC  0E024204           [24] gettable   8   8   264  ; "distanceToTarget"
00C0  5D420200           [25] getglobal  9   9        ; range
fail op	33
00C4  21400204           [26] tforloop   0       9    ; to [28] if exit
00C8  1A400180           [27] jmp        6            ; to [34]
00CC  5D420200           [28] getglobal  9   9        ; range
00D0  5C420204           [29] div        9   8   9  
00D4  4D420283           [30] sub        9   262 9    ; 0
00D8  8A028001           [31] len        10  3      
00DC  5C828204           [32] div        9   9   10 
00E0  83400201           [33] add        2   2   9  
00E4  1481FB7F           [34] forloop    4   -17      ; to [18] if loop
00E8  9E000001           [35] return     2   2      
00EC  1E008000           [36] return     0   1      
                         * constants:
00F0  0A                 sizek (10)
00F1  01                 const type 3
00F2  65770E40           const [0]: (1074689893)
00F6  01                 const type 3
00F7  68C51D9F           const [1]: (-1625438872)
00FB  04                 const type 4
00FC  0F                 string size (15)
00FD  68656C6D65744261+  "helmetBa"
0105  73655479706500     "seType\0"
                         const [2]: "helmetBaseType"
010C  03                 const type 3
010D  00000000           const [3]: (0)
0111  01                 const type 3
0112  93DDD9AB           const [4]: (-1411785325)
0116  01                 const type 3
0117  85888FFF           const [5]: (-7370619)
011B  03                 const type 3
011C  0000803F           const [6]: (0)
0120  01                 const type 3
0121  8095AF3C           const [7]: (1018140032)
0125  04                 const type 4
0126  11                 string size (17)
0127  64697374616E6365+  "distance"
012F  546F546172676574+  "ToTarget"
0137  00                 "\0"
                         const [8]: "distanceToTarget"
0138  04                 const type 4
0139  06                 string size (6)
013A  72616E676500       "range\0"
                         const [9]: "range"
                         * functions:
0140  00                 sizep (0)
                         * lines:
0141  24                 sizelineinfo (36)
                         [pc] (line)
0142  0F                 [01] (15)
0143  00                 [02] (15)
0144  00                 [03] (15)
0145  00                 [04] (15)
0146  0F                 [05] (15)
0147  00                 [06] (15)
0148  00                 [07] (15)
0149  00                 [08] (16)
014A  0F                 [09] (19)
014B  00                 [10] (21)
014C  00                 [11] (21)
014D  00                 [12] (21)
014E  0F                 [13] (21)
014F  00                 [14] (23)
0150  00                 [15] (23)
0151  00                 [16] (23)
0152  0F                 [17] (23)
0153  00                 [18] (24)
0154  00                 [19] (24)
0155  00                 [20] (24)
0156  0F                 [21] (24)
0157  00                 [22] (24)
0158  00                 [23] (25)
0159  00                 [24] (25)
015A  0F                 [25] (26)
015B  00                 [26] (26)
015C  00                 [27] (26)
015D  00                 [28] (27)
015E  10                 [29] (27)
015F  00                 [30] (27)
0160  00                 [31] (27)
0161  00                 [32] (27)
0162  13                 [33] (27)
0163  00                 [34] (23)
0164  00                 [35] (34)
0165  00                 [36] (35)
                         * locals:
01D2  00                 sizelocvars (0)
                         * upvalues:
01D3  00                 sizeupvalues (0)
                         ** end of function **

                         
01D4                     ** function [1] definition (level 2)
                         ** start of function **
01D4  00                 string size (0)
                         source name: (none)
01D5  25                 line defined (37)
01D6  5D                 last line defined (93)
01D7  00                 nups (0)
01D8  04                 numparams (4)
01D9  00                 is_vararg (0)
01DA  14                 maxstacksize (20)
                         * code:
01DC  01                 sizecode (149)
01DD  59010000           [001] loadk      5   0        ; 0
01E1  99410000           [002] loadk      6   1        ; 0
01E5  DD810000           [003] getglobal  7   2        ; helmetTypes
01E9  CA018003           [004] len        7   7      
01ED  19420000           [005] loadk      8   1        ; 0
01F1  90C10280           [006] forprep    6   12       ; to [19]
01F5  A4C2C000           [007] self       10  1   259  ; -1625438872
01F9  1D830000           [008] getglobal  12  2        ; helmetTypes
01FD  0E430206           [009] gettable   12  12  9  
0201  A2828001           [010] call       10  3   2  
0205  12010005           [011] move       4   10     
0209  9D020100           [012] getglobal  10  4        ; 1074689893
020D  D2020002           [013] move       11  4      
0211  A2820001           [014] call       10  2   2  
0215  98420000           [015] test       10      1    ; to [17] if false
0219  1A400080           [016] jmp        2            ; to [19]
021D  52018004           [017] move       5   9      
0221  1A000080           [018] jmp        1            ; to [20]
0225  9481FC7F           [019] forloop    6   -13      ; to [7] if loop
0229  9D020100           [020] getglobal  10  4        ; 1074689893
022D  D2020002           [021] move       11  4      
0231  A2820001           [022] call       10  2   2  
0235  98420000           [023] test       10      1    ; to [25] if false
0239  1A400080           [024] jmp        2            ; to [27]
fail op	35
023D  2300C002           [025] close      0  
0241  1A000080           [026] jmp        1            ; to [28]
0245  1E008000           [027] return     0   1      
0249  A442C100           [028] self       10  1   261  ; 2056776437
024D  1D830100           [029] getglobal  12  6        ; activateStartAnim
0251  57038000           [030] loadbool   13  1   0    ; true
0255  9DC30100           [031] getglobal  14  7        ; Engine
0259  8E034207           [032] gettable   14  14  264  ; "ATMM_PHYSICS_DRIVEN"
025D  DDC30100           [033] getglobal  15  7        ; Engine
0261  CE43C207           [034] gettable   15  15  265  ; "PRT_ONCE"
0265  17048000           [035] loadbool   16  1   0    ; true
0269  A2428003           [036] call       10  7   1  
026D  A442C100           [037] self       10  1   261  ; 2056776437
0271  1D830200           [038] getglobal  12  10       ; activateAttackAnim
0275  57030000           [039] loadbool   13  0   0    ; false
0279  9DC30100           [040] getglobal  14  7        ; Engine
027D  8E034207           [041] gettable   14  14  264  ; "ATMM_PHYSICS_DRIVEN"
0281  DDC30100           [042] getglobal  15  7        ; Engine
0285  CEC3C207           [043] gettable   15  15  267  ; "PRT_LOOP"
0289  17048000           [044] loadbool   16  1   0    ; true
028D  A2428003           [045] call       10  7   1  
0291  99020000           [046] loadk      10  0        ; 0
0295  DD020300           [047] getglobal  11  12       ; attackLoopTime
fail op	21
0299  15C00205           [048] concat     0   10  11 
029D  1A400480           [049] jmp        18           ; to [68]
02A1  E4C2C000           [050] self       11  1   259  ; -1625438872
02A5  5D830000           [051] getglobal  13  2        ; helmetTypes
02A9  4E438106           [052] gettable   13  13  5  
02AD  E2828001           [053] call       11  3   2  
02B1  12018005           [054] move       4   11     
02B5  DD020100           [055] getglobal  11  4        ; 1074689893
02B9  12030002           [056] move       12  4      
02BD  E2820001           [057] call       11  2   2  
02C1  D8020000           [058] test       11      0    ; to [60] if true
02C5  1A000080           [059] jmp        1            ; to [61]
02C9  1A800180           [060] jmp        7            ; to [68]
02CD  DD420300           [061] getglobal  11  13       ; 1289681407
02D1  E2828000           [062] call       11  1   2  
02D5  83C20205           [063] add        10  10  11 
02D9  DD820300           [064] getglobal  11  14       ; 538022378
02DD  19030000           [065] loadk      12  0        ; 0
02E1  E2420001           [066] call       11  2   1  
02E5  1A80FA7F           [067] jmp        -21          ; to [47]
02E9  E4C2C300           [068] self       11  1   271  ; -1565518332
02ED  5D030400           [069] getglobal  13  16       ; -332969190
02F1  99430400           [070] loadk      14  17       ; "GAME_C1_HEAD1"
02F5  62030001           [071] call       13  2   0  
02F9  E2820000           [072] call       11  0   2  
02FD  06030006           [073] loadnil    12  12     
0301  5D030100           [074] getglobal  13  4        ; 1074689893
0305  92030002           [075] move       14  4      
0309  62830001           [076] call       13  2   2  
030D  58430000           [077] test       13      1    ; to [79] if false
0311  1A000480           [078] jmp        17           ; to [96]
0315  5D830400           [079] getglobal  13  18       ; gRegion
0319  64C3C406           [080] self       13  13  275  ; -1110225722
031D  DD030500           [081] getglobal  15  20       ; shockwaveTypes
0321  CE438107           [082] gettable   15  15  5  
0325  12048005           [083] move       16  11     
0329  6444C500           [084] self       17  1   277  ; -231049143
032D  62840001           [085] call       17  2   2  
0331  92048000           [086] move       18  1      
0335  D2040002           [087] move       19  4      
0339  62838003           [088] call       13  7   2  
033D  12038006           [089] move       12  13     
0341  6483C500           [090] self       13  1   278  ; 630793108
0345  DDC30500           [091] getglobal  15  23       ; shockwaveSound
0349  17040000           [092] loadbool   16  0   0    ; false
034D  59040000           [093] loadk      17  0        ; 0
0351  97048000           [094] loadbool   18  1   0    ; true
0355  62430003           [095] call       13  6   1  
0359  99020000           [096] loadk      10  0        ; 0
035D  5D030600           [097] getglobal  13  24       ; endDelay
fail op	21
0361  15400305           [098] concat     0   10  13 
0365  1A000680           [099] jmp        25           ; to [125]
0369  64C3C000           [100] self       13  1   259  ; -1625438872
036D  DD830000           [101] getglobal  15  2        ; helmetTypes
0371  CE438107           [102] gettable   15  15  5  
0375  62838001           [103] call       13  3   2  
0379  12018006           [104] move       4   13     
037D  5D030100           [105] getglobal  13  4        ; 1074689893
0381  92030002           [106] move       14  4      
0385  62830001           [107] call       13  2   2  
0389  58030000           [108] test       13      0    ; to [110] if true
038D  1AC00180           [109] jmp        8            ; to [118]
0391  5D030100           [110] getglobal  13  4        ; 1074689893
0395  92030006           [111] move       14  12     
0399  62830001           [112] call       13  2   2  
039D  58430000           [113] test       13      1    ; to [115] if false
03A1  1A800080           [114] jmp        3            ; to [118]
03A5  64434606           [115] self       13  12  281  ; -725453761
03A9  62430001           [116] call       13  2   1  
03AD  1A800180           [117] jmp        7            ; to [125]
03B1  5D430300           [118] getglobal  13  13       ; 1289681407
03B5  62838000           [119] call       13  1   2  
03B9  83420305           [120] add        10  10  13 
03BD  5D830300           [121] getglobal  13  14       ; 538022378
03C1  99030000           [122] loadk      14  0        ; 0
03C5  62430001           [123] call       13  2   1  
03C9  1AC0F87F           [124] jmp        -28          ; to [97]
03CD  5D030100           [125] getglobal  13  4        ; 1074689893
03D1  92030002           [126] move       14  4      
03D5  62830001           [127] call       13  2   2  
03D9  58030000           [128] test       13      0    ; to [130] if true
03DD  1A400280           [129] jmp        10           ; to [140]
03E1  6443C100           [130] self       13  1   261  ; 2056776437
03E5  DD830600           [131] getglobal  15  26       ; staggerAnim
03E9  17048000           [132] loadbool   16  1   0    ; true
03ED  5DC40100           [133] getglobal  17  7        ; Engine
03F1  4E04C208           [134] gettable   17  17  264  ; "ATMM_PHYSICS_DRIVEN"
03F5  9DC40100           [135] getglobal  18  7        ; Engine
03F9  8E444209           [136] gettable   18  18  265  ; "PRT_ONCE"
03FD  D7048000           [137] loadbool   19  1   0    ; true
0401  62438003           [138] call       13  7   1  
0405  1A000280           [139] jmp        9            ; to [149]
0409  6443C100           [140] self       13  1   261  ; 2056776437
040D  DDC30600           [141] getglobal  15  27       ; activateRecoverAnim
0411  17048000           [142] loadbool   16  1   0    ; true
0415  5DC40100           [143] getglobal  17  7        ; Engine
0419  4E04C208           [144] gettable   17  17  264  ; "ATMM_PHYSICS_DRIVEN"
041D  9DC40100           [145] getglobal  18  7        ; Engine
0421  8E444209           [146] gettable   18  18  265  ; "PRT_ONCE"
0425  D7048000           [147] loadbool   19  1   0    ; true
0429  62438003           [148] call       13  7   1  
042D  1E008000           [149] return     0   1      
                         * constants:
0431  1C                 sizek (28)
0432  03                 const type 3
0433  00000000           const [0]: (0)
0437  03                 const type 3
0438  0000803F           const [1]: (0)
043C  04                 const type 4
043D  0C                 string size (12)
043E  68656C6D65745479+  "helmetTy"
0446  70657300           "pes\0"
                         const [2]: "helmetTypes"
044A  01                 const type 3
044B  68C51D9F           const [3]: (-1625438872)
044F  01                 const type 3
0450  65770E40           const [4]: (1074689893)
0454  01                 const type 3
0455  F5EA977A           const [5]: (2056776437)
0459  04                 const type 4
045A  12                 string size (18)
045B  6163746976617465+  "activate"
0463  5374617274416E69+  "StartAni"
046B  6D00               "m\0"
                         const [6]: "activateStartAnim"
046D  04                 const type 4
046E  07                 string size (7)
046F  456E67696E6500     "Engine\0"
                         const [7]: "Engine"
0476  04                 const type 4
0477  14                 string size (20)
0478  41544D4D5F504859+  "ATMM_PHY"
0480  534943535F445249+  "SICS_DRI"
0488  56454E00           "VEN\0"
                         const [8]: "ATMM_PHYSICS_DRIVEN"
048C  04                 const type 4
048D  09                 string size (9)
048E  5052545F4F4E4345+  "PRT_ONCE"
0496  00                 "\0"
                         const [9]: "PRT_ONCE"
0497  04                 const type 4
0498  13                 string size (19)
0499  6163746976617465+  "activate"
04A1  41747461636B416E+  "AttackAn"
04A9  696D00             "im\0"
                         const [10]: "activateAttackAnim"
04AC  04                 const type 4
04AD  09                 string size (9)
04AE  5052545F4C4F4F50+  "PRT_LOOP"
04B6  00                 "\0"
                         const [11]: "PRT_LOOP"
04B7  04                 const type 4
04B8  0F                 string size (15)
04B9  61747461636B4C6F+  "attackLo"
04C1  6F7054696D6500     "opTime\0"
                         const [12]: "attackLoopTime"
04C8  01                 const type 3
04C9  FFF9DE4C           const [13]: (1289681407)
04CD  01                 const type 3
04CE  EA911120           const [14]: (538022378)
04D2  01                 const type 3
04D3  0416B0A2           const [15]: (-1565518332)
04D7  01                 const type 3
04D8  1A4B27EC           const [16]: (-332969190)
04DC  04                 const type 4
04DD  0E                 string size (14)
04DE  47414D455F43315F+  "GAME_C1_"
04E6  484541443100       "HEAD1\0"
                         const [17]: "GAME_C1_HEAD1"
04EC  04                 const type 4
04ED  08                 string size (8)
04EE  67526567696F6E00   "gRegion\0"
                         const [18]: "gRegion"
04F6  01                 const type 3
04F7  C64CD3BD           const [19]: (-1110225722)
04FB  04                 const type 4
04FC  0F                 string size (15)
04FD  73686F636B776176+  "shockwav"
0505  65547970657300     "eTypes\0"
                         const [20]: "shockwaveTypes"
050C  01                 const type 3
050D  49783AF2           const [21]: (-231049143)
0511  01                 const type 3
0512  94239925           const [22]: (630793108)
0516  04                 const type 4
0517  0F                 string size (15)
0518  73686F636B776176+  "shockwav"
0520  65536F756E6400     "eSound\0"
                         const [23]: "shockwaveSound"
0527  04                 const type 4
0528  09                 string size (9)
0529  656E6444656C6179+  "endDelay"
0531  00                 "\0"
                         const [24]: "endDelay"
0532  01                 const type 3
0533  3F74C2D4           const [25]: (-725453761)
0537  04                 const type 4
0538  0C                 string size (12)
0539  7374616767657241+  "staggerA"
0541  6E696D00           "nim\0"
                         const [26]: "staggerAnim"
0545  04                 const type 4
0546  14                 string size (20)
0547  6163746976617465+  "activate"
054F  5265636F76657241+  "RecoverA"
0557  6E696D00           "nim\0"
                         const [27]: "activateRecoverAnim"
                         * functions:
055B  00                 sizep (0)
                         * lines:
055D  01                 sizelineinfo (149)
                         [pc] (line)
055E  27                 [001] (39)
055F  00                 [002] (41)
0560  00                 [003] (41)
0561  00                 [004] (41)
0562  29                 [005] (41)
0563  00                 [006] (41)
0564  00                 [007] (42)
0565  00                 [008] (42)
0566  29                 [009] (42)
0567  00                 [010] (42)
0568  00                 [011] (42)
0569  00                 [012] (43)
056A  29                 [013] (43)
056B  00                 [014] (43)
056C  00                 [015] (43)
056D  00                 [016] (43)
056E  29                 [017] (44)
056F  00                 [018] (45)
0570  00                 [019] (41)
0571  00                 [020] (49)
0572  29                 [021] (49)
0573  00                 [022] (49)
0574  00                 [023] (49)
0575  00                 [024] (49)
0576  2A                 [025] (49)
0577  00                 [026] (49)
0578  00                 [027] (50)
0579  00                 [028] (53)
057A  2A                 [029] (53)
057B  00                 [030] (53)
057C  00                 [031] (53)
057D  00                 [032] (53)
057E  2A                 [033] (53)
057F  00                 [034] (53)
0580  00                 [035] (53)
0581  00                 [036] (53)
0582  2A                 [037] (54)
0583  00                 [038] (54)
0584  00                 [039] (54)
0585  00                 [040] (54)
0586  2A                 [041] (54)
0587  00                 [042] (54)
0588  00                 [043] (54)
0589  00                 [044] (54)
058A  2B                 [045] (54)
058B  00                 [046] (56)
058C  00                 [047] (57)
058D  00                 [048] (57)
058E  2B                 [049] (57)
058F  00                 [050] (58)
0590  00                 [051] (58)
0591  00                 [052] (58)
0592  2B                 [053] (58)
0593  00                 [054] (58)
0594  00                 [055] (59)
0595  00                 [056] (59)
0596  2B                 [057] (59)
0597  00                 [058] (59)
0598  00                 [059] (59)
0599  00                 [060] (60)
059A  2B                 [061] (62)
059B  00                 [062] (62)
059C  00                 [063] (62)
059D  00                 [064] (63)
059E  2C                 [065] (63)
059F  00                 [066] (63)
05A0  00                 [067] (63)
05A1  00                 [068] (66)
05A2  2D                 [069] (66)
05A3  00                 [070] (66)
05A4  00                 [071] (66)
05A5  00                 [072] (66)
05A6  29                 [073] (68)
05A7  00                 [074] (69)
05A8  00                 [075] (69)
05A9  00                 [076] (69)
05AA  31                 [077] (69)
05AB  00                 [078] (69)
05AC  00                 [079] (70)
05AD  00                 [080] (70)
05AE  31                 [081] (70)
05AF  00                 [082] (70)
05B0  00                 [083] (70)
05B1  00                 [084] (70)
05B2  31                 [085] (70)
05B3  00                 [086] (70)
05B4  00                 [087] (70)
05B5  00                 [088] (70)
05B6  31                 [089] (70)
05B7  00                 [090] (71)
05B8  00                 [091] (71)
05B9  00                 [092] (71)
05BA  31                 [093] (71)
05BB  00                 [094] (71)
05BC  00                 [095] (71)
05BD  00                 [096] (75)
05BE  31                 [097] (76)
05BF  00                 [098] (76)
05C0  00                 [099] (76)
05C1  00                 [100] (77)
05C2  31                 [101] (77)
05C3  00                 [102] (77)
05C4  00                 [103] (77)
05C5  00                 [104] (77)
05C6  32                 [105] (78)
05C7  00                 [106] (78)
05C8  00                 [107] (78)
05C9  00                 [108] (78)
05CA  35                 [109] (78)
05CB  00                 [110] (79)
05CC  00                 [111] (79)
05CD  00                 [112] (79)
05CE  35                 [113] (79)
05CF  00                 [114] (79)
05D0  00                 [115] (80)
05D1  00                 [116] (80)
05D2  35                 [117] (81)
05D3  00                 [118] (84)
05D4  00                 [119] (84)
05D5  00                 [120] (84)
05D6  35                 [121] (85)
05D7  00                 [122] (85)
05D8  00                 [123] (85)
05D9  00                 [124] (85)
05DA  35                 [125] (88)
05DB  00                 [126] (88)
05DC  00                 [127] (88)
05DD  00                 [128] (88)
05DE  35                 [129] (88)
05DF  00                 [130] (89)
05E0  00                 [131] (89)
05E1  00                 [132] (89)
05E2  35                 [133] (89)
05E3  00                 [134] (89)
05E4  00                 [135] (89)
05E5  00                 [136] (89)
05E6  35                 [137] (89)
05E7  00                 [138] (89)
05E8  00                 [139] (89)
05E9  00                 [140] (91)
05EA  35                 [141] (91)
05EB  00                 [142] (91)
05EC  00                 [143] (91)
05ED  00                 [144] (91)
05EE  36                 [145] (91)
05EF  00                 [146] (91)
05F0  00                 [147] (91)
05F1  00                 [148] (91)
05F2  36                 [149] (93)
                         * locals:
07B2  00                 sizelocvars (0)
                         * upvalues:
07B3  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
07B4  07                 sizelineinfo (7)
                         [pc] (line)
07B5  23                 [1] (35)
07B6  00                 [2] (35)
07B7  00                 [3] (13)
07B8  00                 [4] (93)
07B9  23                 [5] (93)
07BA  00                 [6] (37)
07BB  00                 [7] (93)
                         * locals:
07D1  00                 sizelocvars (0)
                         * upvalues:
07D2  00                 sizeupvalues (0)
                         ** end of function **

07D3                     ** end of chunk **
