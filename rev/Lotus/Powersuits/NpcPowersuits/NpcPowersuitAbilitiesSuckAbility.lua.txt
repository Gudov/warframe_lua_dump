1	C:\wlua_dump\path\Lotus\Powersuits\NpcPowersuits\NpcPowersuitAbilitiesSuckAbility.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Powersuits\NpcPowersuits\NpcPowersuitAbilitiesSuckAbility.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  03                 size of number (bytes)
0008  16                 integral (1=integral)
422
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
NpcEvaluateAbility
ActivateAbility
DeactivateAbility
ItemStored
ItemDestroyed
triggerTypes
_T
gSuckTriggers
No trigger types, can't run SuckAbility for 
!
EMPTY_SYMBOL
ZERO_VECTOR
ZERO_ROTATION
_T
gSuckTriggers
No trigger types, can't run SuckAbility for 
!
EMPTY_SYMBOL
ZERO_VECTOR
ZERO_ROTATION
vacuumEffect
modType
gRegion
modNukeType
resourceType
Game
AVATAR_ARMOUR
STACKING_MULTIPLY
healthOrbType
energyOrbType
xpOrbType
GAMEPLAY_FACTION_DAMAGE
ammoType
WEAPON_FIRE_RATE
_T
gSuckTriggers
gBaseAvatarType
modType
altModType
gRegion
modNukeType
ZERO_ROTATION
gRegion
gBaseAvatarType
resourceType
Game
AVATAR_ARMOUR
STACKING_MULTIPLY
healthOrbType
energyOrbType
xpOrbType
GAMEPLAY_FACTION_DAMAGE
ammoType
WEAPON_FIRE_RATE
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  03                 maxstacksize (3)
                         * code:
0008  16                 sizecode (22)
0009  25000000           [01] closure    0   0      
000D  65400000           [02] closure    1   1      
0011  12000000           [03] move       0   0      
0015  A5800000           [04] closure    2   2      
0019  12008000           [05] move       0   1      
001D  A0000000           [06] setglobal  2   0        ; NpcEvaluateAbility
0021  A0400000           [07] setglobal  2   1        ; -319690153
0025  A5C00000           [08] closure    2   3      
0029  12000000           [09] move       0   0      
002D  12008000           [10] move       0   1      
0031  A0800000           [11] setglobal  2   2        ; ActivateAbility
0035  A0C00000           [12] setglobal  2   3        ; -871687712
0039  A5000100           [13] closure    2   4      
003D  A0000100           [14] setglobal  2   4        ; DeactivateAbility
0041  A0400100           [15] setglobal  2   5        ; 33405088
0045  A5400100           [16] closure    2   5      
0049  A0800100           [17] setglobal  2   6        ; ItemStored
004D  A0C00100           [18] setglobal  2   7        ; -466094969
0051  A5800100           [19] closure    2   6      
0055  A0000200           [20] setglobal  2   8        ; ItemDestroyed
0059  A0400200           [21] setglobal  2   9        ; 1337418094
005D  1E008000           [22] return     0   1      
                         * constants:
0061  0A                 sizek (10)
0062  04                 const type 4
0063  13                 string size (19)
0064  4E70634576616C75+  "NpcEvalu"
006C  6174654162696C69+  "ateAbili"
0074  747900             "ty\0"
                         const [0]: "NpcEvaluateAbility"
0077  01                 const type 3
0078  57EAF1EC           const [1]: (-319690153)
007C  04                 const type 4
007D  10                 string size (16)
007E  4163746976617465+  "Activate"
0086  4162696C69747900   "Ability\0"
                         const [2]: "ActivateAbility"
008E  01                 const type 3
008F  E0190BCC           const [3]: (-871687712)
0093  04                 const type 4
0094  12                 string size (18)
0095  4465616374697661+  "Deactiva"
009D  74654162696C6974+  "teAbilit"
00A5  7900               "y\0"
                         const [4]: "DeactivateAbility"
00A7  01                 const type 3
00A8  A0B8FD01           const [5]: (33405088)
00AC  04                 const type 4
00AD  0B                 string size (11)
00AE  4974656D53746F72+  "ItemStor"
00B6  656400             "ed\0"
                         const [6]: "ItemStored"
00B9  01                 const type 3
00BA  87F437E4           const [7]: (-466094969)
00BE  04                 const type 4
00BF  0E                 string size (14)
00C0  4974656D44657374+  "ItemDest"
00C8  726F79656400       "royed\0"
                         const [8]: "ItemDestroyed"
00CE  01                 const type 3
00CF  6E61B74F           const [9]: (1337418094)
                         * functions:
00D3  07                 sizep (7)
                         
00D4                     ** function [0] definition (level 2)
                         ** start of function **
00D4  00                 string size (0)
                         source name: (none)
00D5  0D                 line defined (13)
00D6  16                 last line defined (22)
00D7  00                 nups (0)
00D8  01                 numparams (1)
00D9  00                 is_vararg (0)
00DA  03                 maxstacksize (3)
                         * code:
00DB  0F                 sizecode (15)
00DC  9D000000           [01] getglobal  2   0        ; triggerTypes
00E0  8A000001           [02] len        2   2      
fail op	33
00E4  21800000           [03] tforloop   0       2    ; to [5] if exit
00E8  1A800080           [04] jmp        3            ; to [8]
00EC  9D000000           [05] getglobal  2   0        ; triggerTypes
00F0  4E000001           [06] gettable   1   2   0  
00F4  1A400180           [07] jmp        6            ; to [14]
00F8  9D000000           [08] getglobal  2   0        ; triggerTypes
00FC  8A000001           [09] len        2   2      
fail op	21
0100  15808080           [10] concat     0   257 2  
0104  1A400080           [11] jmp        2            ; to [14]
0108  9D000000           [12] getglobal  2   0        ; triggerTypes
010C  4E804001           [13] gettable   1   2   258  ; 0
0110  5E000001           [14] return     1   2      
0114  1E008000           [15] return     0   1      
                         * constants:
0118  03                 sizek (3)
0119  04                 const type 4
011A  0D                 string size (13)
011B  7472696767657254+  "triggerT"
0123  7970657300         "ypes\0"
                         const [0]: "triggerTypes"
0128  03                 const type 3
0129  00000000           const [1]: (0)
012D  03                 const type 3
012E  0000803F           const [2]: (0)
                         * functions:
0132  00                 sizep (0)
                         * lines:
0133  0F                 sizelineinfo (15)
                         [pc] (line)
0134  0F                 [01] (15)
0135  00                 [02] (15)
0136  00                 [03] (15)
0137  00                 [04] (15)
0138  0F                 [05] (16)
0139  00                 [06] (16)
013A  00                 [07] (16)
013B  00                 [08] (17)
013C  0F                 [09] (17)
013D  00                 [10] (17)
013E  00                 [11] (17)
013F  00                 [12] (18)
0140  0F                 [13] (18)
0141  00                 [14] (21)
0142  00                 [15] (22)
                         * locals:
0170  00                 sizelocvars (0)
                         * upvalues:
0171  00                 sizeupvalues (0)
                         ** end of function **

                         
0172                     ** function [1] definition (level 2)
                         ** start of function **
0172  00                 string size (0)
                         source name: (none)
0173  18                 line defined (24)
0174  3C                 last line defined (60)
0175  01                 nups (1)
0176  04                 numparams (4)
0177  00                 is_vararg (0)
0178  0E                 maxstacksize (14)
                         * code:
0179  4C                 sizecode (76)
017A  2401C000           [01] self       4   1   256  ; 455421500
017E  22810001           [02] call       4   2   2  
0182  5D410000           [03] getglobal  5   1        ; 1074689893
0186  9D810000           [04] getglobal  6   2        ; _T
018A  8EC14003           [05] gettable   6   6   259  ; "gSuckTriggers"
018E  62810001           [06] call       5   2   2  
0192  58010000           [07] test       5       0    ; to [9] if true
0196  1A800080           [08] jmp        3            ; to [12]
019A  5D810000           [09] getglobal  5   2        ; _T
019E  8B010000           [10] newtable   6   0   0    ; array=0, hash=0
01A2  4C818181           [11] settable   5   259 6    ; "gSuckTriggers"
01A6  5D410000           [12] getglobal  5   1        ; 1074689893
01AA  9D810000           [13] getglobal  6   2        ; _T
01AE  8EC14003           [14] gettable   6   6   259  ; "gSuckTriggers"
01B2  8E010103           [15] gettable   6   6   4  
01B6  62810001           [16] call       5   2   2  
01BA  58010000           [17] test       5       0    ; to [19] if true
01BE  1A400680           [18] jmp        26           ; to [45]
01C2  53010000           [19] getupval   5   0      
01C6  99010100           [20] loadk      6   4        ; 0
01CA  62810001           [21] call       5   2   2  
01CE  9D410000           [22] getglobal  6   1        ; 1074689893
01D2  D2018002           [23] move       7   5      
01D6  A2810001           [24] call       6   2   2  
01DA  98010000           [25] test       6       0    ; to [27] if true
01DE  1AC00180           [26] jmp        8            ; to [35]
01E2  9D410100           [27] getglobal  6   5        ; -1817107093
01E6  D9810100           [28] loadk      7   6        ; "No trigger types, can't run SuckAbility for "
01EA  12020002           [29] move       8   4      
01EE  59C20100           [30] loadk      9   7        ; "!"
01F2  C2418203           [31] concat     7   7   9  
01F6  A2410001           [32] call       6   2   1  
01FA  99010200           [33] loadk      6   8        ; 0
01FE  9E010001           [34] return     6   2      
0202  9D810000           [35] getglobal  6   2        ; _T
0206  8EC14003           [36] gettable   6   6   259  ; "gSuckTriggers"
020A  E441C200           [37] self       7   1   265  ; -1421644046
020E  52028002           [38] move       9   5      
0212  9D820200           [39] getglobal  10  10       ; EMPTY_SYMBOL
0216  DDC20200           [40] getglobal  11  11       ; ZERO_VECTOR
021A  1D030300           [41] getglobal  12  12       ; ZERO_ROTATION
021E  52038000           [42] move       13  1      
0222  E2818003           [43] call       7   7   2  
0226  8CC10102           [44] settable   6   4   7  
022A  9D410000           [45] getglobal  6   1        ; 1074689893
022E  DD810000           [46] getglobal  7   2        ; _T
0232  CEC1C003           [47] gettable   7   7   259  ; "gSuckTriggers"
0236  CE018103           [48] gettable   7   7   4  
023A  A2810001           [49] call       6   2   2  
023E  98410000           [50] test       6       1    ; to [52] if false
0242  1A400580           [51] jmp        22           ; to [74]
0246  9D810000           [52] getglobal  6   2        ; _T
024A  8EC14003           [53] gettable   6   6   259  ; "gSuckTriggers"
024E  8E010103           [54] gettable   6   6   4  
0252  A4414303           [55] self       6   6   269  ; 1916070914
0256  A2810001           [56] call       6   2   2  
025A  D9810300           [57] loadk      7   14       ; 0
025E  0A020003           [58] len        8   6      
0262  59820300           [59] loadk      9   14       ; 0
0266  D0C10280           [60] forprep    7   12       ; to [73]
026A  CE820203           [61] gettable   11  6   10 
026E  1D430000           [62] getglobal  12  1        ; 1074689893
0272  52038005           [63] move       13  11     
0276  22830001           [64] call       12  2   2  
027A  18430000           [65] test       12      1    ; to [67] if false
027E  1A400180           [66] jmp        6            ; to [73]
0282  24C3C305           [67] self       12  11  271  ; -13989128
0286  22830001           [68] call       12  2   2  
028A  18030000           [69] test       12      0    ; to [71] if true
028E  1A400080           [70] jmp        2            ; to [73]
0292  19830300           [71] loadk      12  14       ; 0
0296  1E030001           [72] return     12  2      
029A  D481FC7F           [73] forloop    7   -13      ; to [61] if loop
029E  19030200           [74] loadk      12  8        ; 0
02A2  1E030001           [75] return     12  2      
02A6  1E008000           [76] return     0   1      
                         * constants:
02AA  10                 sizek (16)
02AB  01                 const type 3
02AC  3C2E251B           const [0]: (455421500)
02B0  01                 const type 3
02B1  65770E40           const [1]: (1074689893)
02B5  04                 const type 4
02B6  03                 string size (3)
02B7  5F5400             "_T\0"
                         const [2]: "_T"
02BA  04                 const type 4
02BB  0E                 string size (14)
02BC  675375636B547269+  "gSuckTri"
02C4  676765727300       "ggers\0"
                         const [3]: "gSuckTriggers"
02CA  03                 const type 3
02CB  00004040           const [4]: (0)
02CF  01                 const type 3
02D0  6B25B193           const [5]: (-1817107093)
02D4  04                 const type 4
02D5  2D                 string size (45)
02D6  4E6F207472696767+  "No trigg"
02DE  6572207479706573+  "er types"
02E6  2C2063616E277420+  ", can't "
02EE  72756E205375636B+  "run Suck"
02F6  4162696C69747920+  "Ability "
02FE  666F722000         "for \0"
                         const [6]: "No trigger types, can't run SuckAbility for "
0303  04                 const type 4
0304  02                 string size (2)
0305  2100               "!\0"
                         const [7]: "!"
0307  03                 const type 3
0308  00000000           const [8]: (0)
030C  01                 const type 3
030D  F26E43AB           const [9]: (-1421644046)
0311  04                 const type 4
0312  0D                 string size (13)
0313  454D5054595F5359+  "EMPTY_SY"
031B  4D424F4C00         "MBOL\0"
                         const [10]: "EMPTY_SYMBOL"
0320  04                 const type 4
0321  0C                 string size (12)
0322  5A45524F5F564543+  "ZERO_VEC"
032A  544F5200           "TOR\0"
                         const [11]: "ZERO_VECTOR"
032E  04                 const type 4
032F  0E                 string size (14)
0330  5A45524F5F524F54+  "ZERO_ROT"
0338  4154494F4E00       "ATION\0"
                         const [12]: "ZERO_ROTATION"
033E  01                 const type 3
033F  02EC3472           const [13]: (1916070914)
0343  03                 const type 3
0344  0000803F           const [14]: (0)
0348  01                 const type 3
0349  F88A2AFF           const [15]: (-13989128)
                         * functions:
034D  00                 sizep (0)
                         * lines:
034E  4C                 sizelineinfo (76)
                         [pc] (line)
034F  1A                 [01] (26)
0350  00                 [02] (26)
0351  00                 [03] (28)
0352  00                 [04] (28)
0353  1A                 [05] (28)
0354  00                 [06] (28)
0355  00                 [07] (28)
0356  00                 [08] (28)
0357  1C                 [09] (29)
0358  00                 [10] (29)
0359  00                 [11] (29)
035A  00                 [12] (32)
035B  1C                 [13] (32)
035C  00                 [14] (32)
035D  00                 [15] (32)
035E  00                 [16] (32)
035F  1C                 [17] (32)
0360  00                 [18] (32)
0361  00                 [19] (33)
0362  00                 [20] (33)
0363  1C                 [21] (33)
0364  00                 [22] (35)
0365  00                 [23] (35)
0366  00                 [24] (35)
0367  1C                 [25] (35)
0368  00                 [26] (35)
0369  00                 [27] (36)
036A  00                 [28] (36)
036B  1C                 [29] (36)
036C  00                 [30] (36)
036D  00                 [31] (36)
036E  00                 [32] (36)
036F  1D                 [33] (37)
0370  00                 [34] (37)
0371  00                 [35] (40)
0372  00                 [36] (40)
0373  1D                 [37] (40)
0374  00                 [38] (40)
0375  00                 [39] (40)
0376  00                 [40] (40)
0377  1D                 [41] (40)
0378  00                 [42] (40)
0379  00                 [43] (40)
037A  00                 [44] (40)
037B  20                 [45] (43)
037C  00                 [46] (43)
037D  00                 [47] (43)
037E  00                 [48] (43)
037F  20                 [49] (43)
0380  00                 [50] (43)
0381  00                 [51] (43)
0382  00                 [52] (44)
0383  20                 [53] (44)
0384  00                 [54] (44)
0385  00                 [55] (44)
0386  00                 [56] (44)
0387  20                 [57] (45)
0388  00                 [58] (45)
0389  00                 [59] (45)
038A  00                 [60] (45)
038B  20                 [61] (46)
038C  00                 [62] (49)
038D  00                 [63] (49)
038E  00                 [64] (49)
038F  20                 [65] (49)
0390  00                 [66] (49)
0391  00                 [67] (50)
0392  00                 [68] (50)
0393  20                 [69] (50)
0394  00                 [70] (50)
0395  00                 [71] (54)
0396  00                 [72] (54)
0397  21                 [73] (45)
0398  00                 [74] (59)
0399  00                 [75] (59)
039A  00                 [76] (60)
                         * locals:
047F  00                 sizelocvars (0)
                         * upvalues:
0480  00                 sizeupvalues (0)
                         ** end of function **

                         
0481                     ** function [2] definition (level 2)
                         ** start of function **
0481  00                 string size (0)
                         source name: (none)
0482  3E                 line defined (62)
0483  40                 last line defined (64)
0484  01                 nups (1)
0485  04                 numparams (4)
0486  00                 is_vararg (0)
0487  09                 maxstacksize (9)
                         * code:
0488  08                 sizecode (8)
0489  13010000           [1] getupval   4   0      
048D  52010000           [2] move       5   0      
0491  92018000           [3] move       6   1      
0495  D2010001           [4] move       7   2      
0499  12028001           [5] move       8   3      
049D  07018002           [6] tailcall   4   5   0  
04A1  1E010000           [7] return     4   0      
04A5  1E008000           [8] return     0   1      
                         * constants:
04A9  00                 sizek (0)
                         * functions:
04AA  00                 sizep (0)
                         * lines:
04AB  08                 sizelineinfo (8)
                         [pc] (line)
04AC  3F                 [1] (63)
04AD  00                 [2] (63)
04AE  00                 [3] (63)
04AF  00                 [4] (63)
04B0  3F                 [5] (63)
04B1  00                 [6] (63)
04B2  00                 [7] (63)
04B3  00                 [8] (64)
                         * locals:
04CC  00                 sizelocvars (0)
                         * upvalues:
04CD  00                 sizeupvalues (0)
                         ** end of function **

                         
04CE                     ** function [3] definition (level 2)
                         ** start of function **
04CE  00                 string size (0)
                         source name: (none)
04CF  42                 line defined (66)
04D0  C1                 last line defined (193)
04D1  01                 nups (2)
04D2  02                 numparams (5)
04D3  05                 is_vararg (0)
04D4  00                 maxstacksize (28)
                         * code:
04D7  02                 sizecode (297)
04D8  6401C000           [001] self       5   1   256  ; 455421500
04DC  62810001           [002] call       5   2   2  
04E0  9D410000           [003] getglobal  6   1        ; 1074689893
04E4  DD810000           [004] getglobal  7   2        ; _T
04E8  CEC1C003           [005] gettable   7   7   259  ; "gSuckTriggers"
04EC  A2810001           [006] call       6   2   2  
04F0  98010000           [007] test       6       0    ; to [9] if true
04F4  1A800080           [008] jmp        3            ; to [12]
04F8  9D810000           [009] getglobal  6   2        ; _T
04FC  CB010000           [010] newtable   7   0   0    ; array=0, hash=0
0500  8CC18181           [011] settable   6   259 7    ; "gSuckTriggers"
0504  9D410000           [012] getglobal  6   1        ; 1074689893
0508  DD810000           [013] getglobal  7   2        ; _T
050C  CEC1C003           [014] gettable   7   7   259  ; "gSuckTriggers"
0510  CE418103           [015] gettable   7   7   5  
0514  A2810001           [016] call       6   2   2  
0518  98010000           [017] test       6       0    ; to [19] if true
051C  1A000980           [018] jmp        37           ; to [56]
0520  93010000           [019] getupval   6   0      
0524  D9010100           [020] loadk      7   4        ; 0
0528  A2810001           [021] call       6   2   2  
052C  DD410000           [022] getglobal  7   1        ; 1074689893
0530  12020003           [023] move       8   6      
0534  E2810001           [024] call       7   2   2  
0538  D8010000           [025] test       7       0    ; to [27] if true
053C  1A800180           [026] jmp        7            ; to [34]
0540  DD410100           [027] getglobal  7   5        ; -1817107093
0544  19820100           [028] loadk      8   6        ; "No trigger types, can't run SuckAbility for "
0548  52028002           [029] move       9   5      
054C  99C20100           [030] loadk      10  7        ; "!"
0550  02820204           [031] concat     8   8   10 
0554  E2410001           [032] call       7   2   1  
0558  1E008000           [033] return     0   1      
055C  DD810000           [034] getglobal  7   2        ; _T
0560  CEC1C003           [035] gettable   7   7   259  ; "gSuckTriggers"
0564  2402C200           [036] self       8   1   264  ; -1421644046
0568  92020003           [037] move       10  6      
056C  DD420200           [038] getglobal  11  9        ; EMPTY_SYMBOL
0570  1D830200           [039] getglobal  12  10       ; ZERO_VECTOR
0574  5DC30200           [040] getglobal  13  11       ; ZERO_ROTATION
0578  92038000           [041] move       14  1      
057C  22828003           [042] call       8   7   2  
0580  CC018202           [043] settable   7   5   8  
0584  DD010300           [044] getglobal  7   12       ; 538022378
0588  19420300           [045] loadk      8   13       ; 0
058C  E2410001           [046] call       7   2   1  
0590  DD010300           [047] getglobal  7   12       ; 538022378
0594  19420300           [048] loadk      8   13       ; 0
0598  E2410001           [049] call       7   2   1  
059C  DD010300           [050] getglobal  7   12       ; 538022378
05A0  19420300           [051] loadk      8   13       ; 0
05A4  E2410001           [052] call       7   2   1  
05A8  DD010300           [053] getglobal  7   12       ; 538022378
05AC  19420300           [054] loadk      8   13       ; 0
05B0  E2410001           [055] call       7   2   1  
05B4  D9410300           [056] loadk      7   13       ; 0
05B8  1D420000           [057] getglobal  8   1        ; 1074689893
05BC  5D820000           [058] getglobal  9   2        ; _T
05C0  4EC2C004           [059] gettable   9   9   259  ; "gSuckTriggers"
05C4  4E428104           [060] gettable   9   9   5  
05C8  22820001           [061] call       8   2   2  
05CC  18420000           [062] test       8       1    ; to [64] if false
05D0  1A003A80           [063] jmp        233          ; to [297]
05D4  17020000           [064] loadbool   8   0   0    ; false
05D8  57028000           [065] loadbool   9   1   0    ; true
05DC  9D820000           [066] getglobal  10  2        ; _T
05E0  8EC24005           [067] gettable   10  10  259  ; "gSuckTriggers"
05E4  8E420105           [068] gettable   10  10  5  
05E8  A4824305           [069] self       10  10  270  ; 1916070914
05EC  A2820001           [070] call       10  2   2  
05F0  D9C20300           [071] loadk      11  15       ; 0
05F4  0A030005           [072] len        12  10     
05F8  59C30300           [073] loadk      13  15       ; 0
05FC  D0C22B80           [074] forprep    11  176      ; to [251]
0600  CE830305           [075] gettable   15  10  14 
0604  1D440000           [076] getglobal  16  1        ; 1074689893
0608  52048007           [077] move       17  15     
060C  22840001           [078] call       16  2   2  
0610  18440000           [079] test       16      1    ; to [81] if false
0614  1A402A80           [080] jmp        170          ; to [251]
0618  2404C407           [081] self       16  15  272  ; -13989128
061C  22840001           [082] call       16  2   2  
0620  18040000           [083] test       16      0    ; to [85] if true
0624  1A002980           [084] jmp        165          ; to [250]
0628  1D440000           [085] getglobal  16  1        ; 1074689893
062C  6444C407           [086] self       17  15  273  ; -1870903749
0630  62040001           [087] call       17  2   0  
0634  22840000           [088] call       16  0   2  
0638  18440000           [089] test       16      1    ; to [91] if false
063C  1A400080           [090] jmp        2            ; to [93]
0640  2484C407           [091] self       16  15  274  ; -1990411311
0644  22440001           [092] call       16  2   1  
0648  24C4C407           [093] self       16  15  275  ; -751689315
064C  22840001           [094] call       16  2   2  
0650  18040000           [095] test       16      0    ; to [97] if true
0654  1A802180           [096] jmp        135          ; to [232]
0658  2404C500           [097] self       16  1   276  ; 196800914
065C  22840001           [098] call       16  2   2  
0660  6404C507           [099] self       17  15  276  ; 196800914
0664  62840001           [100] call       17  2   2  
0668  0D440408           [101] sub        16  16  17 
066C  5D440500           [102] getglobal  17  21       ; 562846818
0670  92040008           [103] move       18  16     
0674  62840001           [104] call       17  2   2  
0678  9D840500           [105] getglobal  18  22       ; 1166235580
067C  D2040008           [106] move       19  16     
0680  A2440001           [107] call       18  2   1  
0684  A4C4C507           [108] self       18  15  279  ; -1625438872
0688  1D050600           [109] getglobal  20  24       ; vacuumEffect
068C  A2848001           [110] call       18  3   2  
0690  DD440000           [111] getglobal  19  1        ; 1074689893
0694  12050009           [112] move       20  18     
0698  E2840001           [113] call       19  2   2  
069C  D8040000           [114] test       19      0    ; to [116] if true
06A0  1AC00080           [115] jmp        4            ; to [120]
06A4  E404C207           [116] self       19  15  264  ; -1421644046
06A8  5D050600           [117] getglobal  21  24       ; vacuumEffect
06AC  9D450200           [118] getglobal  22  9        ; EMPTY_SYMBOL
06B0  E2440002           [119] call       19  4   1  
06B4  E444C607           [120] self       19  15  281  ; 970454089
06B8  6405C507           [121] self       21  15  276  ; 196800914
06BC  62850001           [122] call       21  2   2  
06C0  9D850600           [123] getglobal  22  26       ; 1289681407
06C4  A2858000           [124] call       22  1   2  
06C8  84850508           [125] mul        22  16  22 
06CC  8445040B           [126] mul        22  22  17 
06D0  8405410B           [127] mul        22  22  260  ; 0
06D4  4385850A           [128] add        21  21  22 
06D8  A4C5C607           [129] self       22  15  283  ; -231049143
06DC  A2050001           [130] call       22  2   0  
06E0  E2440000           [131] call       19  0   1  
fail op	21
06E4  15C0C308           [132] concat     0   17  271
06E8  1AC01780           [133] jmp        96           ; to [230]
06EC  E404C707           [134] self       19  15  284  ; 1313672219
06F0  E2840001           [135] call       19  2   2  
06F4  2445C709           [136] self       20  19  285  ; -1957065004
06F8  9D850700           [137] getglobal  22  30       ; modType
06FC  22858001           [138] call       20  3   2  
0700  18050000           [139] test       20      0    ; to [141] if true
0704  1A000280           [140] jmp        9            ; to [150]
0708  1DC50700           [141] getglobal  20  31       ; gRegion
070C  2405480A           [142] self       20  20  288  ; -1110225722
0710  9D450800           [143] getglobal  22  33       ; modNukeType
0714  E405C500           [144] self       23  1   276  ; 196800914
0718  E2850001           [145] call       23  2   2  
071C  1DC60200           [146] getglobal  24  11       ; ZERO_ROTATION
0720  52068000           [147] move       25  1      
0724  22450003           [148] call       20  6   1  
0728  1A401380           [149] jmp        78           ; to [228]
072C  2445C709           [150] self       20  19  285  ; -1957065004
0730  9D850800           [151] getglobal  22  34       ; resourceType
0734  22858001           [152] call       20  3   2  
0738  18050000           [153] test       20      0    ; to [155] if true
073C  1A400280           [154] jmp        10           ; to [165]
0740  24C5C800           [155] self       20  1   291  ; -1917464545
0744  22850001           [156] call       20  2   2  
0748  2405490A           [157] self       20  20  292  ; 991629753
074C  9D450900           [158] getglobal  22  37       ; Game
0750  8E85490B           [159] gettable   22  22  294  ; "AVATAR_ARMOUR"
0754  DD450900           [160] getglobal  23  37       ; Game
0758  CEC5C90B           [161] gettable   23  23  295  ; "STACKING_MULTIPLY"
075C  19060A00           [162] loadk      24  40       ; -51
0760  22458002           [163] call       20  5   1  
0764  1A800F80           [164] jmp        63           ; to [228]
0768  2445C709           [165] self       20  19  285  ; -1957065004
076C  9D450A00           [166] getglobal  22  41       ; healthOrbType
0770  22858001           [167] call       20  3   2  
0774  18050000           [168] test       20      0    ; to [170] if true
0778  1A800280           [169] jmp        11           ; to [181]
077C  2485CA00           [170] self       20  1   298  ; 1511086594
0780  22850001           [171] call       20  2   2  
0784  18450000           [172] test       20      1    ; to [174] if false
0788  1A400D80           [173] jmp        54           ; to [228]
078C  24C5CA00           [174] self       20  1   299  ; 1992436207
0790  A405CB00           [175] self       22  1   300  ; 796523475
0794  A2850001           [176] call       22  2   2  
0798  83454B0B           [177] add        22  22  301  ; 0
079C  D7058000           [178] loadbool   23  1   0    ; true
07A0  22450002           [179] call       20  4   1  
07A4  1A800B80           [180] jmp        47           ; to [228]
07A8  2445C709           [181] self       20  19  285  ; -1957065004
07AC  9D850B00           [182] getglobal  22  46       ; energyOrbType
07B0  22858001           [183] call       20  3   2  
07B4  18050000           [184] test       20      0    ; to [186] if true
07B8  1A000380           [185] jmp        13           ; to [199]
07BC  24C5CB00           [186] self       20  1   303  ; -1544157541
07C0  22850001           [187] call       20  2   2  
07C4  64054C0A           [188] self       21  20  304  ; -227502409
07C8  62850001           [189] call       21  2   2  
07CC  A4454C0A           [190] self       22  20  305  ; -1583259949
07D0  A2850001           [191] call       22  2   2  
07D4  E4854C0A           [192] self       23  20  306  ; -1814078075
07D8  4346CB0A           [193] add        25  21  301  ; 0
07DC  E2458001           [194] call       23  3   1  
07E0  E4C54C0A           [195] self       23  20  307  ; -1992773175
07E4  43464B0B           [196] add        25  22  301  ; 0
07E8  E2458001           [197] call       23  3   1  
07EC  1A000780           [198] jmp        29           ; to [228]
07F0  E445C709           [199] self       23  19  285  ; -1957065004
07F4  5D060D00           [200] getglobal  25  52       ; xpOrbType
07F8  E2858001           [201] call       23  3   2  
07FC  D8050000           [202] test       23      0    ; to [204] if true
0800  1A400280           [203] jmp        10           ; to [214]
0804  E4C5C800           [204] self       23  1   291  ; -1917464545
0808  E2850001           [205] call       23  2   2  
080C  E405C90B           [206] self       23  23  292  ; 991629753
0810  5D460900           [207] getglobal  25  37       ; Game
0814  4E46CD0C           [208] gettable   25  25  309  ; "GAMEPLAY_FACTION_DAMAGE"
0818  9D460900           [209] getglobal  26  37       ; Game
081C  8EC6490D           [210] gettable   26  26  295  ; "STACKING_MULTIPLY"
0820  D9060A00           [211] loadk      27  40       ; -51
0824  E2458002           [212] call       23  5   1  
0828  1A400380           [213] jmp        14           ; to [228]
082C  E445C709           [214] self       23  19  285  ; -1957065004
0830  5D860D00           [215] getglobal  25  54       ; ammoType
0834  E2858001           [216] call       23  3   2  
0838  D8050000           [217] test       23      0    ; to [219] if true
083C  1A000280           [218] jmp        9            ; to [228]
0840  E4C5C800           [219] self       23  1   291  ; -1917464545
0844  E2850001           [220] call       23  2   2  
0848  E405C90B           [221] self       23  23  292  ; 991629753
084C  5D460900           [222] getglobal  25  37       ; Game
0850  4EC6CD0C           [223] gettable   25  25  311  ; "WEAPON_FIRE_RATE"
0854  9D460900           [224] getglobal  26  37       ; Game
0858  8EC6490D           [225] gettable   26  26  295  ; "STACKING_MULTIPLY"
085C  D9060E00           [226] loadk      27  56       ; -51
0860  E2458002           [227] call       23  5   1  
0864  E445CE07           [228] self       23  15  313  ; -725453761
0868  E2450001           [229] call       23  2   1  
086C  17028000           [230] loadbool   8   1   0    ; true
0870  1A800480           [231] jmp        19           ; to [251]
0874  DDC50700           [232] getglobal  23  31       ; gRegion
0878  E485CE0B           [233] self       23  23  314  ; -1520831144
087C  E2850001           [234] call       23  2   2  
0880  D8450000           [235] test       23      1    ; to [237] if false
0884  1AC00080           [236] jmp        4            ; to [241]
0888  E4C5CE07           [237] self       23  15  315  ; -1982412333
088C  E2850001           [238] call       23  2   2  
0890  D8050000           [239] test       23      0    ; to [241] if true
0894  1A800080           [240] jmp        3            ; to [244]
0898  E405CF07           [241] self       23  15  316  ; -205141565
089C  E2450001           [242] call       23  2   1  
08A0  1A800180           [243] jmp        7            ; to [251]
08A4  E4C5CE07           [244] self       23  15  315  ; -1982412333
08A8  E2850001           [245] call       23  2   2  
08AC  D8450000           [246] test       23      1    ; to [248] if false
08B0  1A800080           [247] jmp        3            ; to [251]
08B4  17028000           [248] loadbool   8   1   0    ; true
08B8  1A000080           [249] jmp        1            ; to [251]
08BC  57020000           [250] loadbool   9   0   0    ; false
08C0  D482D37F           [251] forloop    11  -177     ; to [75] if loop
08C4  18420000           [252] test       8       1    ; to [254] if false
08C8  1A400080           [253] jmp        2            ; to [256]
08CC  58420000           [254] test       9       1    ; to [256] if false
08D0  1A000180           [255] jmp        5            ; to [261]
08D4  DDC50700           [256] getglobal  23  31       ; gRegion
08D8  E485CE0B           [257] self       23  23  314  ; -1520831144
08DC  E2850001           [258] call       23  2   2  
08E0  D8050000           [259] test       23      0    ; to [261] if true
08E4  1AC0FF7F           [260] jmp        0            ; to [261]
08E8  DD850600           [261] getglobal  23  26       ; 1289681407
08EC  E2858000           [262] call       23  1   2  
08F0  C3C18503           [263] add        7   7   23 
fail op	21
08F4  15C0819E           [264] concat     0   317 7  
08F8  1A000080           [265] jmp        1            ; to [267]
08FC  1A400780           [266] jmp        30           ; to [297]
0900  DD050300           [267] getglobal  23  12       ; 538022378
0904  19460300           [268] loadk      24  13       ; 0
0908  E2450001           [269] call       23  2   1  
090C  1A40CA7F           [270] jmp        -214         ; to [57]
0910  1A000680           [271] jmp        25           ; to [297]
0914  DDC50700           [272] getglobal  23  31       ; gRegion
0918  E485CE0B           [273] self       23  23  314  ; -1520831144
091C  E2850001           [274] call       23  2   2  
0920  D8050000           [275] test       23      0    ; to [277] if true
0924  1A800480           [276] jmp        19           ; to [296]
0928  D3058000           [277] getupval   23  1      
092C  12060000           [278] move       24  0      
0930  52068000           [279] move       25  1      
0934  92068001           [280] move       26  3      
0938  D2060002           [281] move       27  4      
093C  E2858002           [282] call       23  5   2  
fail op	21
0940  15C08586           [283] concat     0   269 23 
0944  1AC00080           [284] jmp        4            ; to [289]
0948  DD050300           [285] getglobal  23  12       ; 538022378
094C  19C60300           [286] loadk      24  15       ; 0
0950  E2450001           [287] call       23  2   1  
0954  1AC0FC7F           [288] jmp        -12          ; to [277]
0958  E4854E00           [289] self       23  0   314  ; -1520831144
095C  E2850001           [290] call       23  2   2  
0960  D8050000           [291] test       23      0    ; to [293] if true
0964  1AC00080           [292] jmp        4            ; to [297]
0968  E4854F00           [293] self       23  0   318  ; -1969966559
096C  E2450001           [294] call       23  2   1  
0970  1A000080           [295] jmp        1            ; to [297]
0974  1E008000           [296] return     0   1      
0978  1E008000           [297] return     0   1      
                         * constants:
097C  3F                 sizek (63)
097D  01                 const type 3
097E  3C2E251B           const [0]: (455421500)
0982  01                 const type 3
0983  65770E40           const [1]: (1074689893)
0987  04                 const type 4
0988  03                 string size (3)
0989  5F5400             "_T\0"
                         const [2]: "_T"
098C  04                 const type 4
098D  0E                 string size (14)
098E  675375636B547269+  "gSuckTri"
0996  676765727300       "ggers\0"
                         const [3]: "gSuckTriggers"
099C  03                 const type 3
099D  00004040           const [4]: (0)
09A1  01                 const type 3
09A2  6B25B193           const [5]: (-1817107093)
09A6  04                 const type 4
09A7  2D                 string size (45)
09A8  4E6F207472696767+  "No trigg"
09B0  6572207479706573+  "er types"
09B8  2C2063616E277420+  ", can't "
09C0  72756E205375636B+  "run Suck"
09C8  4162696C69747920+  "Ability "
09D0  666F722000         "for \0"
                         const [6]: "No trigger types, can't run SuckAbility for "
09D5  04                 const type 4
09D6  02                 string size (2)
09D7  2100               "!\0"
                         const [7]: "!"
09D9  01                 const type 3
09DA  F26E43AB           const [8]: (-1421644046)
09DE  04                 const type 4
09DF  0D                 string size (13)
09E0  454D5054595F5359+  "EMPTY_SY"
09E8  4D424F4C00         "MBOL\0"
                         const [9]: "EMPTY_SYMBOL"
09ED  04                 const type 4
09EE  0C                 string size (12)
09EF  5A45524F5F564543+  "ZERO_VEC"
09F7  544F5200           "TOR\0"
                         const [10]: "ZERO_VECTOR"
09FB  04                 const type 4
09FC  0E                 string size (14)
09FD  5A45524F5F524F54+  "ZERO_ROT"
0A05  4154494F4E00       "ATION\0"
                         const [11]: "ZERO_ROTATION"
0A0B  01                 const type 3
0A0C  EA911120           const [12]: (538022378)
0A10  03                 const type 3
0A11  00000000           const [13]: (0)
0A15  01                 const type 3
0A16  02EC3472           const [14]: (1916070914)
0A1A  03                 const type 3
0A1B  0000803F           const [15]: (0)
0A1F  01                 const type 3
0A20  F88A2AFF           const [16]: (-13989128)
0A24  01                 const type 3
0A25  3B467C90           const [17]: (-1870903749)
0A29  01                 const type 3
0A2A  D1BB5C89           const [18]: (-1990411311)
0A2E  01                 const type 3
0A2F  9D2132D3           const [19]: (-751689315)
0A33  01                 const type 3
0A34  92F1BA0B           const [20]: (196800914)
0A38  01                 const type 3
0A39  625C8C21           const [21]: (562846818)
0A3D  01                 const type 3
0A3E  BC578345           const [22]: (1166235580)
0A42  01                 const type 3
0A43  68C51D9F           const [23]: (-1625438872)
0A47  04                 const type 4
0A48  0D                 string size (13)
0A49  76616375756D4566+  "vacuumEf"
0A51  6665637400         "fect\0"
                         const [24]: "vacuumEffect"
0A56  01                 const type 3
0A57  49F4D739           const [25]: (970454089)
0A5B  01                 const type 3
0A5C  FFF9DE4C           const [26]: (1289681407)
0A60  01                 const type 3
0A61  49783AF2           const [27]: (-231049143)
0A65  01                 const type 3
0A66  1B0C4D4E           const [28]: (1313672219)
0A6A  01                 const type 3
0A6B  D48E598B           const [29]: (-1957065004)
0A6F  04                 const type 4
0A70  08                 string size (8)
0A71  6D6F645479706500   "modType\0"
                         const [30]: "modType"
0A79  04                 const type 4
0A7A  08                 string size (8)
0A7B  67526567696F6E00   "gRegion\0"
                         const [31]: "gRegion"
0A83  01                 const type 3
0A84  C64CD3BD           const [32]: (-1110225722)
0A88  04                 const type 4
0A89  0C                 string size (12)
0A8A  6D6F644E756B6554+  "modNukeT"
0A92  79706500           "ype\0"
                         const [33]: "modNukeType"
0A96  04                 const type 4
0A97  0D                 string size (13)
0A98  7265736F75726365+  "resource"
0AA0  5479706500         "Type\0"
                         const [34]: "resourceType"
0AA5  01                 const type 3
0AA6  1FD0B58D           const [35]: (-1917464545)
0AAA  01                 const type 3
0AAB  B9111B3B           const [36]: (991629753)
0AAF  04                 const type 4
0AB0  05                 string size (5)
0AB1  47616D6500         "Game\0"
                         const [37]: "Game"
0AB6  04                 const type 4
0AB7  0E                 string size (14)
0AB8  4156415441525F41+  "AVATAR_A"
0AC0  524D4F555200       "RMOUR\0"
                         const [38]: "AVATAR_ARMOUR"
0AC6  04                 const type 4
0AC7  12                 string size (18)
0AC8  535441434B494E47+  "STACKING"
0AD0  5F4D554C5449504C+  "_MULTIPL"
0AD8  5900               "Y\0"
                         const [39]: "STACKING_MULTIPLY"
0ADA  03                 const type 3
0ADB  CDCCCC3D           const [40]: (-51)
0ADF  04                 const type 4
0AE0  0E                 string size (14)
0AE1  6865616C74684F72+  "healthOr"
0AE9  625479706500       "bType\0"
                         const [41]: "healthOrbType"
0AEF  01                 const type 3
0AF0  025A115A           const [42]: (1511086594)
0AF4  01                 const type 3
0AF5  EF29C276           const [43]: (1992436207)
0AF9  01                 const type 3
0AFA  D3FB792F           const [44]: (796523475)
0AFE  03                 const type 3
0AFF  0000C842           const [45]: (0)
0B03  04                 const type 4
0B04  0E                 string size (14)
0B05  656E657267794F72+  "energyOr"
0B0D  625479706500       "bType\0"
                         const [46]: "energyOrbType"
0B13  01                 const type 3
0B14  9B06F6A3           const [47]: (-1544157541)
0B18  01                 const type 3
0B19  B79670F2           const [48]: (-227502409)
0B1D  01                 const type 3
0B1E  D35EA1A1           const [49]: (-1583259949)
0B22  01                 const type 3
0B23  855DDF93           const [50]: (-1814078075)
0B27  01                 const type 3
0B28  C9B13889           const [51]: (-1992773175)
0B2C  04                 const type 4
0B2D  0A                 string size (10)
0B2E  78704F7262547970+  "xpOrbTyp"
0B36  6500               "e\0"
                         const [52]: "xpOrbType"
0B38  04                 const type 4
0B39  18                 string size (24)
0B3A  47414D45504C4159+  "GAMEPLAY"
0B42  5F46414354494F4E+  "_FACTION"
0B4A  5F44414D41474500   "_DAMAGE\0"
                         const [53]: "GAMEPLAY_FACTION_DAMAGE"
0B52  04                 const type 4
0B53  09                 string size (9)
0B54  616D6D6F54797065+  "ammoType"
0B5C  00                 "\0"
                         const [54]: "ammoType"
0B5D  04                 const type 4
0B5E  11                 string size (17)
0B5F  574541504F4E5F46+  "WEAPON_F"
0B67  4952455F52415445+  "IRE_RATE"
0B6F  00                 "\0"
                         const [55]: "WEAPON_FIRE_RATE"
0B70  03                 const type 3
0B71  CDCC4C3D           const [56]: (-51)
0B75  01                 const type 3
0B76  3F74C2D4           const [57]: (-725453761)
0B7A  01                 const type 3
0B7B  58F559A5           const [58]: (-1520831144)
0B7F  01                 const type 3
0B80  D3C9D689           const [59]: (-1982412333)
0B84  01                 const type 3
0B85  C3C9C5F3           const [60]: (-205141565)
0B89  03                 const type 3
0B8A  0000A040           const [61]: (0)
0B8E  01                 const type 3
0B8F  21B2948A           const [62]: (-1969966559)
                         * functions:
0B93  00                 sizep (0)
                         * lines:
0B95  02                 sizelineinfo (297)
                         [pc] (line)
0B96  46                 [001] (70)
0B97  00                 [002] (70)
0B98  00                 [003] (71)
0B99  00                 [004] (71)
0B9A  46                 [005] (71)
0B9B  00                 [006] (71)
0B9C  00                 [007] (71)
0B9D  00                 [008] (71)
0B9E  47                 [009] (72)
0B9F  00                 [010] (72)
0BA0  00                 [011] (72)
0BA1  00                 [012] (75)
0BA2  47                 [013] (75)
0BA3  00                 [014] (75)
0BA4  00                 [015] (75)
0BA5  00                 [016] (75)
0BA6  47                 [017] (75)
0BA7  00                 [018] (75)
0BA8  00                 [019] (76)
0BA9  00                 [020] (76)
0BAA  47                 [021] (76)
0BAB  00                 [022] (78)
0BAC  00                 [023] (78)
0BAD  00                 [024] (78)
0BAE  47                 [025] (78)
0BAF  00                 [026] (78)
0BB0  00                 [027] (79)
0BB1  00                 [028] (79)
0BB2  47                 [029] (79)
0BB3  00                 [030] (79)
0BB4  00                 [031] (79)
0BB5  00                 [032] (79)
0BB6  48                 [033] (80)
0BB7  00                 [034] (83)
0BB8  00                 [035] (83)
0BB9  00                 [036] (83)
0BBA  48                 [037] (83)
0BBB  00                 [038] (83)
0BBC  00                 [039] (83)
0BBD  00                 [040] (83)
0BBE  48                 [041] (83)
0BBF  00                 [042] (83)
0BC0  00                 [043] (83)
0BC1  00                 [044] (87)
0BC2  4B                 [045] (87)
0BC3  00                 [046] (87)
0BC4  00                 [047] (88)
0BC5  00                 [048] (88)
0BC6  4B                 [049] (88)
0BC7  00                 [050] (89)
0BC8  00                 [051] (89)
0BC9  00                 [052] (89)
0BCA  4B                 [053] (90)
0BCB  00                 [054] (90)
0BCC  00                 [055] (90)
0BCD  00                 [056] (92)
0BCE  4B                 [057] (94)
0BCF  00                 [058] (94)
0BD0  00                 [059] (94)
0BD1  00                 [060] (94)
0BD2  4B                 [061] (94)
0BD3  00                 [062] (94)
0BD4  00                 [063] (94)
0BD5  00                 [064] (98)
0BD6  4B                 [065] (99)
0BD7  00                 [066] (100)
0BD8  00                 [067] (100)
0BD9  00                 [068] (100)
0BDA  4B                 [069] (100)
0BDB  00                 [070] (100)
0BDC  00                 [071] (102)
0BDD  00                 [072] (102)
0BDE  4C                 [073] (102)
0BDF  00                 [074] (102)
0BE0  00                 [075] (103)
0BE1  00                 [076] (105)
0BE2  4C                 [077] (105)
0BE3  00                 [078] (105)
0BE4  00                 [079] (105)
0BE5  00                 [080] (105)
0BE6  4C                 [081] (106)
0BE7  00                 [082] (106)
0BE8  00                 [083] (106)
0BE9  00                 [084] (106)
0BEA  4E                 [085] (107)
0BEB  00                 [086] (107)
0BEC  00                 [087] (107)
0BED  00                 [088] (107)
0BEE  4E                 [089] (107)
0BEF  00                 [090] (107)
0BF0  00                 [091] (108)
0BF1  00                 [092] (108)
0BF2  4E                 [093] (111)
0BF3  00                 [094] (111)
0BF4  00                 [095] (111)
0BF5  00                 [096] (111)
0BF6  4E                 [097] (112)
0BF7  00                 [098] (112)
0BF8  00                 [099] (112)
0BF9  00                 [100] (112)
0BFA  4E                 [101] (112)
0BFB  00                 [102] (113)
0BFC  00                 [103] (113)
0BFD  00                 [104] (113)
0BFE  4F                 [105] (114)
0BFF  00                 [106] (114)
0C00  00                 [107] (114)
0C01  00                 [108] (116)
0C02  4F                 [109] (116)
0C03  00                 [110] (116)
0C04  00                 [111] (117)
0C05  00                 [112] (117)
0C06  4F                 [113] (117)
0C07  00                 [114] (117)
0C08  00                 [115] (117)
0C09  00                 [116] (118)
0C0A  4F                 [117] (118)
0C0B  00                 [118] (118)
0C0C  00                 [119] (118)
0C0D  00                 [120] (120)
0C0E  4F                 [121] (120)
0C0F  00                 [122] (120)
0C10  00                 [123] (120)
0C11  00                 [124] (120)
0C12  4F                 [125] (120)
0C13  00                 [126] (120)
0C14  00                 [127] (120)
0C15  00                 [128] (120)
0C16  50                 [129] (120)
0C17  00                 [130] (120)
0C18  00                 [131] (120)
0C19  00                 [132] (121)
0C1A  53                 [133] (121)
0C1B  00                 [134] (122)
0C1C  00                 [135] (122)
0C1D  00                 [136] (123)
0C1E  53                 [137] (123)
0C1F  00                 [138] (123)
0C20  00                 [139] (123)
0C21  00                 [140] (123)
0C22  53                 [141] (125)
0C23  00                 [142] (125)
0C24  00                 [143] (125)
0C25  00                 [144] (125)
0C26  53                 [145] (125)
0C27  00                 [146] (125)
0C28  00                 [147] (125)
0C29  00                 [148] (125)
0C2A  53                 [149] (125)
0C2B  00                 [150] (126)
0C2C  00                 [151] (126)
0C2D  00                 [152] (126)
0C2E  53                 [153] (126)
0C2F  00                 [154] (126)
0C30  00                 [155] (-128)
0C31  00                 [156] (-128)
0C32  53                 [157] (-128)
0C33  00                 [158] (-128)
0C34  00                 [159] (-128)
0C35  00                 [160] (-128)
0C36  53                 [161] (-128)
0C37  00                 [162] (-128)
0C38  00                 [163] (-128)
0C39  00                 [164] (-128)
0C3A  53                 [165] (-126)
0C3B  00                 [166] (-126)
0C3C  00                 [167] (-126)
0C3D  00                 [168] (-126)
0C3E  53                 [169] (-126)
0C3F  00                 [170] (-124)
0C40  00                 [171] (-124)
0C41  00                 [172] (-124)
0C42  57                 [173] (-124)
0C43  00                 [174] (-123)
0C44  00                 [175] (-123)
0C45  00                 [176] (-123)
0C46  57                 [177] (-123)
0C47  00                 [178] (-123)
0C48  00                 [179] (-123)
0C49  00                 [180] (-122)
0C4A  57                 [181] (-121)
0C4B  00                 [182] (-121)
0C4C  00                 [183] (-121)
0C4D  00                 [184] (-121)
0C4E  58                 [185] (-121)
0C4F  00                 [186] (-119)
0C50  00                 [187] (-119)
0C51  00                 [188] (-118)
0C52  58                 [189] (-118)
0C53  00                 [190] (-117)
0C54  00                 [191] (-117)
0C55  00                 [192] (-116)
0C56  58                 [193] (-116)
0C57  00                 [194] (-116)
0C58  00                 [195] (-114)
0C59  00                 [196] (-114)
0C5A  59                 [197] (-114)
0C5B  00                 [198] (-114)
0C5C  00                 [199] (-113)
0C5D  00                 [200] (-113)
0C5E  59                 [201] (-113)
0C5F  00                 [202] (-113)
0C60  00                 [203] (-113)
0C61  00                 [204] (-111)
0C62  59                 [205] (-111)
0C63  00                 [206] (-111)
0C64  00                 [207] (-111)
0C65  00                 [208] (-111)
0C66  5A                 [209] (-111)
0C67  00                 [210] (-111)
0C68  00                 [211] (-111)
0C69  00                 [212] (-111)
0C6A  5A                 [213] (-111)
0C6B  00                 [214] (-110)
0C6C  00                 [215] (-110)
0C6D  00                 [216] (-110)
0C6E  5A                 [217] (-110)
0C6F  00                 [218] (-110)
0C70  00                 [219] (-108)
0C71  00                 [220] (-108)
0C72  5C                 [221] (-108)
0C73  00                 [222] (-108)
0C74  00                 [223] (-108)
0C75  00                 [224] (-108)
0C76  5E                 [225] (-108)
0C77  00                 [226] (-108)
0C78  00                 [227] (-108)
0C79  00                 [228] (-106)
0C7A  5E                 [229] (-106)
0C7B  00                 [230] (-104)
0C7C  00                 [231] (-104)
0C7D  00                 [232] (-103)
0C7E  5E                 [233] (-103)
0C7F  00                 [234] (-103)
0C80  00                 [235] (-103)
0C81  00                 [236] (-103)
0C82  5E                 [237] (-103)
0C83  00                 [238] (-103)
0C84  00                 [239] (-103)
0C85  00                 [240] (-103)
0C86  5E                 [241] (-100)
0C87  00                 [242] (-100)
0C88  00                 [243] (-100)
0C89  00                 [244] (-99)
0C8A  5E                 [245] (-99)
0C8B  00                 [246] (-99)
0C8C  00                 [247] (-99)
0C8D  00                 [248] (-97)
0C8E  5E                 [249] (-96)
0C8F  00                 [250] (-94)
0C90  00                 [251] (102)
0C91  00                 [252] (-88)
0C92  62                 [253] (-88)
0C93  00                 [254] (-88)
0C94  00                 [255] (-88)
0C95  00                 [256] (-87)
0C96  63                 [257] (-87)
0C97  00                 [258] (-87)
0C98  00                 [259] (-87)
0C99  00                 [260] (-87)
0C9A  64                 [261] (-83)
0C9B  00                 [262] (-83)
0C9C  00                 [263] (-83)
0C9D  00                 [264] (-82)
0C9E  64                 [265] (-82)
0C9F  00                 [266] (-81)
0CA0  00                 [267] (-79)
0CA1  00                 [268] (-79)
0CA2  64                 [269] (-79)
0CA3  00                 [270] (-79)
0CA4  00                 [271] (-78)
0CA5  00                 [272] (-77)
0CA6  64                 [273] (-77)
0CA7  00                 [274] (-77)
0CA8  00                 [275] (-77)
0CA9  00                 [276] (-77)
0CAA  64                 [277] (-76)
0CAB  00                 [278] (-76)
0CAC  00                 [279] (-76)
0CAD  00                 [280] (-76)
0CAE  66                 [281] (-76)
0CAF  00                 [282] (-76)
0CB0  00                 [283] (-76)
0CB1  00                 [284] (-76)
0CB2  66                 [285] (-73)
0CB3  00                 [286] (-73)
0CB4  00                 [287] (-73)
0CB5  00                 [288] (-73)
0CB6  66                 [289] (-70)
0CB7  00                 [290] (-70)
0CB8  00                 [291] (-70)
0CB9  00                 [292] (-70)
0CBA  66                 [293] (-69)
0CBB  00                 [294] (-69)
0CBC  00                 [295] (-68)
0CBD  00                 [296] (-65)
0CBE  67                 [297] (-63)
                         * locals:
103A  00                 sizelocvars (0)
                         * upvalues:
103B  00                 sizeupvalues (0)
                         ** end of function **

                         
103C                     ** function [4] definition (level 2)
                         ** start of function **
103C  00                 string size (0)
                         source name: (none)
103E  01                 line defined (195)
103F  D4                 last line defined (212)
1040  01                 nups (0)
1041  00                 numparams (4)
1042  04                 is_vararg (0)
1043  00                 maxstacksize (13)
                         * code:
1045  24                 sizecode (36)
1046  2401C000           [01] self       4   1   256  ; 455421500
104A  22810001           [02] call       4   2   2  
104E  5D410000           [03] getglobal  5   1        ; 1074689893
1052  9D810000           [04] getglobal  6   2        ; _T
1056  8EC14003           [05] gettable   6   6   259  ; "gSuckTriggers"
105A  62810001           [06] call       5   2   2  
105E  58410000           [07] test       5       1    ; to [9] if false
1062  1A800680           [08] jmp        27           ; to [36]
1066  5D410000           [09] getglobal  5   1        ; 1074689893
106A  9D810000           [10] getglobal  6   2        ; _T
106E  8EC14003           [11] gettable   6   6   259  ; "gSuckTriggers"
1072  8E010103           [12] gettable   6   6   4  
1076  62810001           [13] call       5   2   2  
107A  58410000           [14] test       5       1    ; to [16] if false
107E  1AC00480           [15] jmp        20           ; to [36]
1082  5D810000           [16] getglobal  5   2        ; _T
1086  4EC1C002           [17] gettable   5   5   259  ; "gSuckTriggers"
108A  4E018102           [18] gettable   5   5   4  
108E  6401C102           [19] self       5   5   260  ; 1916070914
1092  62810001           [20] call       5   2   2  
1096  99410100           [21] loadk      6   5        ; 0
109A  CA018002           [22] len        7   5      
109E  19420100           [23] loadk      8   5        ; 0
10A2  90410280           [24] forprep    6   10       ; to [35]
10A6  8E428202           [25] gettable   10  5   9  
10AA  DD420000           [26] getglobal  11  1        ; 1074689893
10AE  12030005           [27] move       12  10     
10B2  E2820001           [28] call       11  2   2  
10B6  D8420000           [29] test       11      1    ; to [31] if false
10BA  1AC00080           [30] jmp        4            ; to [35]
10BE  E4824105           [31] self       11  10  262  ; -13989128
10C2  E2820001           [32] call       11  2   2  
10C6  D8020000           [33] test       11      0    ; to [35] if true
10CA  1AC0FF7F           [34] jmp        0            ; to [35]
10CE  9401FD7F           [35] forloop    6   -11      ; to [25] if loop
10D2  1E008000           [36] return     0   1      
                         * constants:
10D6  07                 sizek (7)
10D7  01                 const type 3
10D8  3C2E251B           const [0]: (455421500)
10DC  01                 const type 3
10DD  65770E40           const [1]: (1074689893)
10E1  04                 const type 4
10E2  03                 string size (3)
10E3  5F5400             "_T\0"
                         const [2]: "_T"
10E6  04                 const type 4
10E7  0E                 string size (14)
10E8  675375636B547269+  "gSuckTri"
10F0  676765727300       "ggers\0"
                         const [3]: "gSuckTriggers"
10F6  01                 const type 3
10F7  02EC3472           const [4]: (1916070914)
10FB  03                 const type 3
10FC  0000803F           const [5]: (0)
1100  01                 const type 3
1101  F88A2AFF           const [6]: (-13989128)
                         * functions:
1105  00                 sizep (0)
                         * lines:
1106  24                 sizelineinfo (36)
                         [pc] (line)
1107  C5                 [01] (-59)
1108  00                 [02] (-59)
1109  00                 [03] (-57)
110A  00                 [04] (-57)
110B  C5                 [05] (-57)
110C  00                 [06] (-57)
110D  00                 [07] (-57)
110E  00                 [08] (-57)
110F  C7                 [09] (-57)
1110  00                 [10] (-57)
1111  00                 [11] (-57)
1112  00                 [12] (-57)
1113  C7                 [13] (-57)
1114  00                 [14] (-57)
1115  00                 [15] (-57)
1116  00                 [16] (-56)
1117  C7                 [17] (-56)
1118  00                 [18] (-56)
1119  00                 [19] (-56)
111A  00                 [20] (-56)
111B  C7                 [21] (-53)
111C  00                 [22] (-53)
111D  00                 [23] (-53)
111E  00                 [24] (-53)
111F  C7                 [25] (-52)
1120  00                 [26] (-51)
1121  00                 [27] (-51)
1122  00                 [28] (-51)
1123  C7                 [29] (-51)
1124  00                 [30] (-51)
1125  00                 [31] (-51)
1126  00                 [32] (-51)
1127  C7                 [33] (-51)
1128  00                 [34] (-51)
1129  00                 [35] (-53)
112A  00                 [36] (-44)
                         * locals:
1197  00                 sizelocvars (0)
                         * upvalues:
1198  00                 sizeupvalues (0)
                         ** end of function **

                         
1199                     ** function [5] definition (level 2)
                         ** start of function **
1199  00                 string size (0)
                         source name: (none)
119B  01                 line defined (216)
119C  E6                 last line defined (230)
119D  01                 nups (0)
119E  00                 numparams (2)
119F  02                 is_vararg (0)
11A0  00                 maxstacksize (9)
                         * code:
11A2  2B                 sizecode (43)
11A3  9D000000           [01] getglobal  2   0        ; 1074689893
11A7  D2000000           [02] move       3   0      
11AB  A2800001           [03] call       2   2   2  
11AF  98400000           [04] test       2       1    ; to [6] if false
11B3  1A000180           [05] jmp        5            ; to [11]
11B7  9D000000           [06] getglobal  2   0        ; 1074689893
11BB  D2008000           [07] move       3   1      
11BF  A2800001           [08] call       2   2   2  
11C3  98000000           [09] test       2       0    ; to [11] if true
11C7  1A000080           [10] jmp        1            ; to [12]
11CB  1E008000           [11] return     0   1      
11CF  A4404000           [12] self       2   0   257  ; -704974830
11D3  A2800001           [13] call       2   2   2  
11D7  DD000000           [14] getglobal  3   0        ; 1074689893
11DB  12010001           [15] move       4   2      
11DF  E2800001           [16] call       3   2   2  
11E3  D8400000           [17] test       3       1    ; to [19] if false
11E7  1A000180           [18] jmp        5            ; to [24]
11EB  E4804001           [19] self       3   2   258  ; -1957065004
11EF  5DC10000           [20] getglobal  5   3        ; gBaseAvatarType
11F3  E2808001           [21] call       3   3   2  
11F7  D8400000           [22] test       3       1    ; to [24] if false
11FB  1A000080           [23] jmp        1            ; to [25]
11FF  1E008000           [24] return     0   1      
1203  E480C000           [25] self       3   1   258  ; -1957065004
1207  5D010100           [26] getglobal  5   4        ; modType
120B  E2808001           [27] call       3   3   2  
120F  D8400000           [28] test       3       1    ; to [30] if false
1213  1A000180           [29] jmp        5            ; to [35]
1217  E480C000           [30] self       3   1   258  ; -1957065004
121B  5D410100           [31] getglobal  5   5        ; altModType
121F  E2808001           [32] call       3   3   2  
1223  D8000000           [33] test       3       0    ; to [35] if true
1227  1AC00180           [34] jmp        8            ; to [43]
122B  DD800100           [35] getglobal  3   6        ; gRegion
122F  E4C0C101           [36] self       3   3   263  ; -1110225722
1233  5D010200           [37] getglobal  5   8        ; modNukeType
1237  A4414201           [38] self       6   2   265  ; 196800914
123B  A2810001           [39] call       6   2   2  
123F  DD810200           [40] getglobal  7   10       ; ZERO_ROTATION
1243  12020001           [41] move       8   2      
1247  E2400003           [42] call       3   6   1  
124B  1E008000           [43] return     0   1      
                         * constants:
124F  0B                 sizek (11)
1250  01                 const type 3
1251  65770E40           const [0]: (1074689893)
1255  01                 const type 3
1256  12F0FAD5           const [1]: (-704974830)
125A  01                 const type 3
125B  D48E598B           const [2]: (-1957065004)
125F  04                 const type 4
1260  10                 string size (16)
1261  6742617365417661+  "gBaseAva"
1269  7461725479706500   "tarType\0"
                         const [3]: "gBaseAvatarType"
1271  04                 const type 4
1272  08                 string size (8)
1273  6D6F645479706500   "modType\0"
                         const [4]: "modType"
127B  04                 const type 4
127C  0B                 string size (11)
127D  616C744D6F645479+  "altModTy"
1285  706500             "pe\0"
                         const [5]: "altModType"
1288  04                 const type 4
1289  08                 string size (8)
128A  67526567696F6E00   "gRegion\0"
                         const [6]: "gRegion"
1292  01                 const type 3
1293  C64CD3BD           const [7]: (-1110225722)
1297  04                 const type 4
1298  0C                 string size (12)
1299  6D6F644E756B6554+  "modNukeT"
12A1  79706500           "ype\0"
                         const [8]: "modNukeType"
12A5  01                 const type 3
12A6  92F1BA0B           const [9]: (196800914)
12AA  04                 const type 4
12AB  0E                 string size (14)
12AC  5A45524F5F524F54+  "ZERO_ROT"
12B4  4154494F4E00       "ATION\0"
                         const [10]: "ZERO_ROTATION"
                         * functions:
12BA  00                 sizep (0)
                         * lines:
12BB  2B                 sizelineinfo (43)
                         [pc] (line)
12BC  D9                 [01] (-39)
12BD  00                 [02] (-39)
12BE  00                 [03] (-39)
12BF  00                 [04] (-39)
12C0  D9                 [05] (-39)
12C1  00                 [06] (-39)
12C2  00                 [07] (-39)
12C3  00                 [08] (-39)
12C4  D9                 [09] (-39)
12C5  00                 [10] (-39)
12C6  00                 [11] (-38)
12C7  00                 [12] (-35)
12C8  D9                 [13] (-35)
12C9  00                 [14] (-34)
12CA  00                 [15] (-34)
12CB  00                 [16] (-34)
12CC  D9                 [17] (-34)
12CD  00                 [18] (-34)
12CE  00                 [19] (-34)
12CF  00                 [20] (-34)
12D0  D9                 [21] (-34)
12D1  00                 [22] (-34)
12D2  00                 [23] (-34)
12D3  00                 [24] (-33)
12D4  D9                 [25] (-30)
12D5  00                 [26] (-30)
12D6  00                 [27] (-30)
12D7  00                 [28] (-30)
12D8  D9                 [29] (-30)
12D9  00                 [30] (-30)
12DA  00                 [31] (-30)
12DB  00                 [32] (-30)
12DC  D9                 [33] (-30)
12DD  00                 [34] (-30)
12DE  00                 [35] (-28)
12DF  00                 [36] (-28)
12E0  D9                 [37] (-28)
12E1  00                 [38] (-28)
12E2  00                 [39] (-28)
12E3  00                 [40] (-28)
12E4  DA                 [41] (-28)
12E5  00                 [42] (-28)
12E6  00                 [43] (-26)
                         * locals:
1368  00                 sizelocvars (0)
                         * upvalues:
1369  00                 sizeupvalues (0)
                         ** end of function **

                         
136A                     ** function [6] definition (level 2)
                         ** start of function **
136A  00                 string size (0)
                         source name: (none)
136C  01                 line defined (232)
136D  8C                 last line defined (268)
136E  02                 nups (0)
136F  00                 numparams (2)
1370  02                 is_vararg (0)
1371  00                 maxstacksize (11)
                         * code:
1373  6D                 sizecode (109)
1374  9D000000           [001] getglobal  2   0        ; gRegion
1378  A4404001           [002] self       2   2   257  ; -1520831144
137C  A2800001           [003] call       2   2   2  
1380  98400000           [004] test       2       1    ; to [6] if false
1384  1A000080           [005] jmp        1            ; to [7]
1388  1E008000           [006] return     0   1      
138C  9D800000           [007] getglobal  2   2        ; 1074689893
1390  D2000000           [008] move       3   0      
1394  A2800001           [009] call       2   2   2  
1398  98400000           [010] test       2       1    ; to [12] if false
139C  1A000180           [011] jmp        5            ; to [17]
13A0  9D800000           [012] getglobal  2   2        ; 1074689893
13A4  D2008000           [013] move       3   1      
13A8  A2800001           [014] call       2   2   2  
13AC  98000000           [015] test       2       0    ; to [17] if true
13B0  1A000080           [016] jmp        1            ; to [18]
13B4  1E008000           [017] return     0   1      
13B8  A4C04000           [018] self       2   0   259  ; -704974830
13BC  A2800001           [019] call       2   2   2  
13C0  DD800000           [020] getglobal  3   2        ; 1074689893
13C4  12010001           [021] move       4   2      
13C8  E2800001           [022] call       3   2   2  
13CC  D8400000           [023] test       3       1    ; to [25] if false
13D0  1A000180           [024] jmp        5            ; to [30]
13D4  E4004101           [025] self       3   2   260  ; -1957065004
13D8  5D410100           [026] getglobal  5   5        ; gBaseAvatarType
13DC  E2808001           [027] call       3   3   2  
13E0  D8400000           [028] test       3       1    ; to [30] if false
13E4  1A000080           [029] jmp        1            ; to [31]
13E8  1E008000           [030] return     0   1      
13EC  E400C100           [031] self       3   1   260  ; -1957065004
13F0  5D810100           [032] getglobal  5   6        ; resourceType
13F4  E2808001           [033] call       3   3   2  
13F8  D8000000           [034] test       3       0    ; to [36] if true
13FC  1A400280           [035] jmp        10           ; to [46]
1400  E4C04101           [036] self       3   2   263  ; -1917464545
1404  E2800001           [037] call       3   2   2  
1408  E400C201           [038] self       3   3   264  ; 991629753
140C  5D410200           [039] getglobal  5   9        ; Game
1410  4E81C202           [040] gettable   5   5   266  ; "AVATAR_ARMOUR"
1414  9D410200           [041] getglobal  6   9        ; Game
1418  8EC14203           [042] gettable   6   6   267  ; "STACKING_MULTIPLY"
141C  D9010300           [043] loadk      7   12       ; -51
1420  E2408002           [044] call       3   5   1  
1424  1A800F80           [045] jmp        63           ; to [109]
1428  E400C100           [046] self       3   1   260  ; -1957065004
142C  5D410300           [047] getglobal  5   13       ; healthOrbType
1430  E2808001           [048] call       3   3   2  
1434  D8000000           [049] test       3       0    ; to [51] if true
1438  1A800280           [050] jmp        11           ; to [62]
143C  E4804301           [051] self       3   2   270  ; 1511086594
1440  E2800001           [052] call       3   2   2  
1444  D8400000           [053] test       3       1    ; to [55] if false
1448  1A400D80           [054] jmp        54           ; to [109]
144C  E4C04301           [055] self       3   2   271  ; 1992436207
1450  64014401           [056] self       5   2   272  ; 796523475
1454  62810001           [057] call       5   2   2  
1458  4341C402           [058] add        5   5   273  ; 0
145C  97018000           [059] loadbool   6   1   0    ; true
1460  E2400002           [060] call       3   4   1  
1464  1A800B80           [061] jmp        47           ; to [109]
1468  E400C100           [062] self       3   1   260  ; -1957065004
146C  5D810400           [063] getglobal  5   18       ; energyOrbType
1470  E2808001           [064] call       3   3   2  
1474  D8000000           [065] test       3       0    ; to [67] if true
1478  1A000380           [066] jmp        13           ; to [80]
147C  E4C04401           [067] self       3   2   275  ; -1544157541
1480  E2800001           [068] call       3   2   2  
1484  2401C501           [069] self       4   3   276  ; -227502409
1488  22810001           [070] call       4   2   2  
148C  6441C501           [071] self       5   3   277  ; -1583259949
1490  62810001           [072] call       5   2   2  
1494  A481C501           [073] self       6   3   278  ; -1814078075
1498  03424402           [074] add        8   4   273  ; 0
149C  A2418001           [075] call       6   3   1  
14A0  A4C1C501           [076] self       6   3   279  ; -1992773175
14A4  0342C402           [077] add        8   5   273  ; 0
14A8  A2418001           [078] call       6   3   1  
14AC  1A000780           [079] jmp        29           ; to [109]
14B0  A401C100           [080] self       6   1   260  ; -1957065004
14B4  1D020600           [081] getglobal  8   24       ; xpOrbType
14B8  A2818001           [082] call       6   3   2  
14BC  98010000           [083] test       6       0    ; to [85] if true
14C0  1A400280           [084] jmp        10           ; to [95]
14C4  A4C14101           [085] self       6   2   263  ; -1917464545
14C8  A2810001           [086] call       6   2   2  
14CC  A4014203           [087] self       6   6   264  ; 991629753
14D0  1D420200           [088] getglobal  8   9        ; Game
14D4  0E424604           [089] gettable   8   8   281  ; "GAMEPLAY_FACTION_DAMAGE"
14D8  5D420200           [090] getglobal  9   9        ; Game
14DC  4EC2C204           [091] gettable   9   9   267  ; "STACKING_MULTIPLY"
14E0  99020300           [092] loadk      10  12       ; -51
14E4  A2418002           [093] call       6   5   1  
14E8  1A400380           [094] jmp        14           ; to [109]
14EC  A401C100           [095] self       6   1   260  ; -1957065004
14F0  1D820600           [096] getglobal  8   26       ; ammoType
14F4  A2818001           [097] call       6   3   2  
14F8  98010000           [098] test       6       0    ; to [100] if true
14FC  1A000280           [099] jmp        9            ; to [109]
1500  A4C14101           [100] self       6   2   263  ; -1917464545
1504  A2810001           [101] call       6   2   2  
1508  A4014203           [102] self       6   6   264  ; 991629753
150C  1D420200           [103] getglobal  8   9        ; Game
1510  0EC24604           [104] gettable   8   8   283  ; "WEAPON_FIRE_RATE"
1514  5D420200           [105] getglobal  9   9        ; Game
1518  4EC2C204           [106] gettable   9   9   267  ; "STACKING_MULTIPLY"
151C  99020700           [107] loadk      10  28       ; -51
1520  A2418002           [108] call       6   5   1  
1524  1E008000           [109] return     0   1      
                         * constants:
1528  1D                 sizek (29)
1529  04                 const type 4
152A  08                 string size (8)
152B  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
1533  01                 const type 3
1534  58F559A5           const [1]: (-1520831144)
1538  01                 const type 3
1539  65770E40           const [2]: (1074689893)
153D  01                 const type 3
153E  12F0FAD5           const [3]: (-704974830)
1542  01                 const type 3
1543  D48E598B           const [4]: (-1957065004)
1547  04                 const type 4
1548  10                 string size (16)
1549  6742617365417661+  "gBaseAva"
1551  7461725479706500   "tarType\0"
                         const [5]: "gBaseAvatarType"
1559  04                 const type 4
155A  0D                 string size (13)
155B  7265736F75726365+  "resource"
1563  5479706500         "Type\0"
                         const [6]: "resourceType"
1568  01                 const type 3
1569  1FD0B58D           const [7]: (-1917464545)
156D  01                 const type 3
156E  B9111B3B           const [8]: (991629753)
1572  04                 const type 4
1573  05                 string size (5)
1574  47616D6500         "Game\0"
                         const [9]: "Game"
1579  04                 const type 4
157A  0E                 string size (14)
157B  4156415441525F41+  "AVATAR_A"
1583  524D4F555200       "RMOUR\0"
                         const [10]: "AVATAR_ARMOUR"
1589  04                 const type 4
158A  12                 string size (18)
158B  535441434B494E47+  "STACKING"
1593  5F4D554C5449504C+  "_MULTIPL"
159B  5900               "Y\0"
                         const [11]: "STACKING_MULTIPLY"
159D  03                 const type 3
159E  CDCCCC3D           const [12]: (-51)
15A2  04                 const type 4
15A3  0E                 string size (14)
15A4  6865616C74684F72+  "healthOr"
15AC  625479706500       "bType\0"
                         const [13]: "healthOrbType"
15B2  01                 const type 3
15B3  025A115A           const [14]: (1511086594)
15B7  01                 const type 3
15B8  EF29C276           const [15]: (1992436207)
15BC  01                 const type 3
15BD  D3FB792F           const [16]: (796523475)
15C1  03                 const type 3
15C2  0000C842           const [17]: (0)
15C6  04                 const type 4
15C7  0E                 string size (14)
15C8  656E657267794F72+  "energyOr"
15D0  625479706500       "bType\0"
                         const [18]: "energyOrbType"
15D6  01                 const type 3
15D7  9B06F6A3           const [19]: (-1544157541)
15DB  01                 const type 3
15DC  B79670F2           const [20]: (-227502409)
15E0  01                 const type 3
15E1  D35EA1A1           const [21]: (-1583259949)
15E5  01                 const type 3
15E6  855DDF93           const [22]: (-1814078075)
15EA  01                 const type 3
15EB  C9B13889           const [23]: (-1992773175)
15EF  04                 const type 4
15F0  0A                 string size (10)
15F1  78704F7262547970+  "xpOrbTyp"
15F9  6500               "e\0"
                         const [24]: "xpOrbType"
15FB  04                 const type 4
15FC  18                 string size (24)
15FD  47414D45504C4159+  "GAMEPLAY"
1605  5F46414354494F4E+  "_FACTION"
160D  5F44414D41474500   "_DAMAGE\0"
                         const [25]: "GAMEPLAY_FACTION_DAMAGE"
1615  04                 const type 4
1616  09                 string size (9)
1617  616D6D6F54797065+  "ammoType"
161F  00                 "\0"
                         const [26]: "ammoType"
1620  04                 const type 4
1621  11                 string size (17)
1622  574541504F4E5F46+  "WEAPON_F"
162A  4952455F52415445+  "IRE_RATE"
1632  00                 "\0"
                         const [27]: "WEAPON_FIRE_RATE"
1633  03                 const type 3
1634  CDCC4C3D           const [28]: (-51)
                         * functions:
1638  00                 sizep (0)
                         * lines:
1639  6D                 sizelineinfo (109)
                         [pc] (line)
163A  E9                 [001] (-23)
163B  00                 [002] (-23)
163C  00                 [003] (-23)
163D  00                 [004] (-23)
163E  E9                 [005] (-23)
163F  00                 [006] (-22)
1640  00                 [007] (-19)
1641  00                 [008] (-19)
1642  E9                 [009] (-19)
1643  00                 [010] (-19)
1644  00                 [011] (-19)
1645  00                 [012] (-19)
1646  E9                 [013] (-19)
1647  00                 [014] (-19)
1648  00                 [015] (-19)
1649  00                 [016] (-19)
164A  E9                 [017] (-18)
164B  00                 [018] (-15)
164C  00                 [019] (-15)
164D  00                 [020] (-14)
164E  EA                 [021] (-14)
164F  00                 [022] (-14)
1650  00                 [023] (-14)
1651  00                 [024] (-14)
1652  ED                 [025] (-14)
1653  00                 [026] (-14)
1654  00                 [027] (-14)
1655  00                 [028] (-14)
1656  ED                 [029] (-14)
1657  00                 [030] (-13)
1658  00                 [031] (-10)
1659  00                 [032] (-10)
165A  ED                 [033] (-10)
165B  00                 [034] (-10)
165C  00                 [035] (-10)
165D  00                 [036] (-8)
165E  ED                 [037] (-8)
165F  00                 [038] (-8)
1660  00                 [039] (-8)
1661  00                 [040] (-8)
1662  ED                 [041] (-8)
1663  00                 [042] (-8)
1664  00                 [043] (-8)
1665  00                 [044] (-8)
1666  ED                 [045] (-8)
1667  00                 [046] (-7)
1668  00                 [047] (-7)
1669  00                 [048] (-7)
166A  ED                 [049] (-7)
166B  00                 [050] (-7)
166C  00                 [051] (-5)
166D  00                 [052] (-5)
166E  ED                 [053] (-5)
166F  00                 [054] (-5)
1670  00                 [055] (-4)
1671  00                 [056] (-4)
1672  ED                 [057] (-4)
1673  00                 [058] (-4)
1674  00                 [059] (-4)
1675  00                 [060] (-4)
1676  ED                 [061] (-3)
1677  00                 [062] (-2)
1678  00                 [063] (-2)
1679  00                 [064] (-2)
167A  EE                 [065] (-2)
167B  00                 [066] (-2)
167C  00                 [067] (0)
167D  00                 [068] (0)
167E  F1                 [069] (1)
167F  00                 [070] (1)
1680  00                 [071] (2)
1681  00                 [072] (2)
1682  F1                 [073] (3)
1683  00                 [074] (3)
1684  00                 [075] (3)
1685  00                 [076] (4)
1686  F2                 [077] (4)
1687  00                 [078] (4)
1688  00                 [079] (4)
1689  00                 [080] (5)
168A  F2                 [081] (5)
168B  00                 [082] (5)
168C  00                 [083] (5)
168D  00                 [084] (5)
168E  F2                 [085] (7)
168F  00                 [086] (7)
1690  00                 [087] (7)
1691  00                 [088] (7)
1692  F2                 [089] (7)
1693  00                 [090] (7)
1694  00                 [091] (7)
1695  00                 [092] (7)
1696  F2                 [093] (7)
1697  00                 [094] (7)
1698  00                 [095] (8)
1699  00                 [096] (8)
169A  F2                 [097] (8)
169B  00                 [098] (8)
169C  00                 [099] (8)
169D  00                 [100] (10)
169E  F2                 [101] (10)
169F  00                 [102] (10)
16A0  00                 [103] (10)
16A1  00                 [104] (10)
16A2  F2                 [105] (10)
16A3  00                 [106] (10)
16A4  00                 [107] (10)
16A5  00                 [108] (10)
16A6  F2                 [109] (12)
                         * locals:
17EE  00                 sizelocvars (0)
                         * upvalues:
17EF  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
17F0  16                 sizelineinfo (22)
                         [pc] (line)
17F1  16                 [01] (22)
17F2  00                 [02] (60)
17F3  00                 [03] (60)
17F4  00                 [04] (64)
17F5  3C                 [05] (64)
17F6  00                 [06] (64)
17F7  00                 [07] (62)
17F8  00                 [08] (-63)
17F9  3C                 [09] (-63)
17FA  00                 [10] (-63)
17FB  00                 [11] (-63)
17FC  00                 [12] (66)
17FD  40                 [13] (-44)
17FE  00                 [14] (-44)
17FF  00                 [15] (-61)
1800  00                 [16] (-26)
1801  40                 [17] (-26)
1802  00                 [18] (-40)
1803  00                 [19] (12)
1804  00                 [20] (12)
1805  40                 [21] (-24)
1806  00                 [22] (12)
                         * locals:
1849  00                 sizelocvars (0)
                         * upvalues:
184A  00                 sizeupvalues (0)
                         ** end of function **

184B                     ** end of chunk **
