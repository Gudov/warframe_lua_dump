1	C:\wlua_dump\path\Lotus\Powersuits\PowersuitAbilitiesOperatorTransference.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\Powersuits\PowersuitAbilitiesOperatorTransference.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  23                 size of number (bytes)
0008  AC                 integral (1=integral)
4172
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
TransferenceFaction
Transference
UmbraPause
SandBoxInv
CloakHDR
Lotus.Interface.LotusUtilities
EE.Interface.Utilities
Lotus.Scripts.Libs.AbilitiesLib
Lotus.Powersuits.Operator.OperatorLib
Lotus.Scripts.Libs.OcclusionLib
Lotus.Powersuits.PowersuitAbilities.PVPLib
tag
HealthMax
mult
GetDescriptionInfo
AssignShipOperator
SpawnOperator
NpcEvaluateAbility
EvaluateAbility
ActivateAbility
DeactivateAbility
TemporaryControl
TemporaryNpcControl
DoPreDeathOrForcedTransference
QuillsRoomEnter
QuillsRoomExit
UmbraAvatarSpawned
UmbraAvatarKilled
tag
PERCENT
math
mult
cjson
math
mOperatorCustomization
Lotus_Game
TOSS_VOICE
mItemType
gRegion
postProcess
fade
cameraColorCorrection
lightning
exitVoidEffect
ZERO_ROTATION
inVoidLocalSequencer
Engine
WALK
PM_IN_AIR
PM_WALLJUMP
PM_GRAV_DISABLED
_T
transferenceUmbra
gRegion
_T
defaultOperatorPos
gRegion
blockingInputFilter
operatorTransferenceOutFx
EMPTY_SYMBOL
warframeToOperatorBank
Engine
ATMM_PHYSICS_DRIVEN
PRT_ONCE
gGameRules
GetPet
Lotus_Game
PET_KUBROW
OperatorSpawnControl
_T
PodState
LastPlayed
podAnim
riftJumpCompleteFx
IsOperatorOnShipTutorial
postProcess
fade
Status
PendingAnimation
closePodAnim
RateOverride
gRegion
shipAvatarType
powerSuitCollapsedAnim
Engine
ATMM_PHYSICS_DRIVEN
PRT_FREEZE
_T
HideTransferenceFx
warframeToOperatorFx
EMPTY_SYMBOL
operatorToWarframeBank
blockingInputFilter
postProcess
fade
ATMM_ANIMATION_DRIVEN
PRT_ONCE
y
OverrideTransferencePos
podCameraSpotType
ZERO_ROTATION
PodState
LastPlayed
Status
PendingAnimation
podAnim
RateOverride
shipAnimController
femaleBodySkin
femaleShipAnimController
gGameRules
GetPet
Lotus_Game
PET_KUBROW
powerMenuInputFilter
weaponType
SLOT_2
MAIN_HAND
InventoryControllerBase_ES_INSTANT_EQUIP
Engine
STUN
KNOCKDOWN
STAGGER
DT_ANY
ANY_PART
DHT_NONE
mCombatOperatorUnlocked
gPlayerProfileMgr
Lotus_Game
OT_COMBAT
avatarType
gGameRules
hubAvatarType
combatAvatarType
gRegion
isControllingOperator
isSpawned
_T
InSimulacrum
warframesInvincible
mOperatorCustomization
combatAnimController
femaleCombatAnimController
combatMotionController
LOT_OPERATOR
Engine
SLOT_2
weaponType
amplifierXp
amplifierFocusXp
MAIN_HAND
InventoryControllerBase_ES_INSTANT_EQUIP
hubInputFilter
HubInvuln
DT_ANY
ANY_PART
WEAPONTYPE_NORMAL
meleeWeaponType
BlastSelfShield
shieldMeleeWeaponType
BlastCharge
chargeableMeleeWeaponTypes
combatMeleeWeaponType
tag
mult
Game
AVATAR_HEALTH_MAX
MULTIPLY
isControllingOperator
operatorPos
powerSuitPos
blockingInputFilter
powerSuitCollapsedAnim
Engine
ATMM_PHYSICS_DRIVEN
PRT_FREEZE
gClient
gRegion
gPromotedToHost
operatorPos
powerSuitPos
ZERO_VECTOR
_T
GoldenMawStage
gGameRules
operatorHudWasOn
HideTransferenceFx
InstantRevive
gLotusNpcAvatarType
RequireValidPosture
ValidNpcPosture
Lotus_Game
OT_PHYSICAL
gGameRules
gLotusAttractModeGameRulesType
transferenceDisabled
_T
CustomOperatorTransferenceEvaluate
npcSearchRangeOnAimingFailure
gRegion
gLotusNpcAvatarType
heading
pitch
gLisetTutorialTransference
gLisetTutorialTransferenceDone
gBaseAvatarType
DisableTransferenceToFrame
/Lotus/Language/Game/AbilityErrorInvalidTarget
gLotusOperatorAvatarType
combatAvatarType
y
gRegion
transferenceCameraSpotType
math
ZERO_VECTOR
powerMenuInputFilter
gGameRules
operatorSpawnImmunityDuration
Engine
SLOT_3
SLOT_2
MAIN_HAND
InventoryControllerBase_ES_INSTANT_EQUIP
gTennoAvatarType
gRegion
possessedAgentType
possessedAgentTeam
Engine
DT_ANY
ANY_PART
DHT_NONE
powerMenuInputFilter
blockingInputFilter
_T
HideTransferenceFx
ATMM_ANIMATION_DRIVEN
PRT_ONCE
operatorPreDeathAnim
operatorPreDeathAnimAlt
operatorDeathTransferenceOutFx
EMPTY_SYMBOL
ATMM_ANIMATION_HORIZ_PHYSICS_VERT
transferenceOutProjectorType
transferenceReturnAnim
ATMM_PHYSICS_DRIVEN
operatorTransferenceOutFx
gGameRules
riftJumpCompleteFx
riftJumpStartFx
transferenceUmbra
warframeTransferenceDamageReduction
gLotusSpaceFlightMotionControllerType
powerSuitCollapsedAnim
PRT_FREEZE
transferenceAnim
operatorTransferenceInFx
warframeToOperatorFx
Lotus_Game
LOT_NORMAL
SUIT_SLOT
mUmbraDate
DisableTransferenceToFrame
echoesAgent
umbraAgent
Alpha
gLotusAuraUpgradeType
MAIN_HAND
InventoryControllerBase_ES_INSTANT_EQUIP
isControllingOperator
InQuillsRoom
CaveWaypoint
TemporaryNpcControl
gLotusNpcAvatarType
ToggleOperatorCallbacks
gRegion
_T
FakeTransferenceActivated
Aborting transference, instigator powersuit is null
CustomTransferenceActivation
Engine
PM_AIRBORNE
gGameRules
gLotusPhotoBoothGameRulesType
gLotusHubGameRulesType
UI_MODE_IN_SPACE_SHIP
PM_AIM
gTennoAvatarType
IsOperatorOnShipTutorial
powerMenuInputFilter
blockingInputFilter
operatorDeathTransferenceOutFx
EMPTY_SYMBOL
transferenceOutProjectorType
operatorTransferenceOutFx
operatorTransferenceInFx
warframeToOperatorFx
isOperatorTransferring
warframeTransferenceDamageReduction
DT_ANY
ANY_PART
DHT_NONE
powerSuitCollapsedAnim
ATMM_PHYSICS_DRIVEN
PRT_FREEZE
math
fade
y
gGameRules
blockingInputFilter
Engine
ATMM_PHYSICS_DRIVEN
PRT_FREEZE
gLotusOperatorAvatarType
_T
transferenceInterrupted
operatorTransferenceInFx
EMPTY_SYMBOL
gTennoAvatarType
powerSuitCollapsedAnim
gRegion
gChallengeMgr
TRANSFERENCE_OUT
TRANSFERENCE_IN
Lotus_Game
instigator
affected
buffType
BT_TIMER
mOwner
abilityType
buffData
_T
gGameRules
HideAbilityDots

HideAffinity
mOwner
TENNO
gRegion
RequireValidPosture
ValidNpcPosture
postProcess
viewShake
mShakeSpeed
npcTransferenceEnergyPerSecond
mShakeAmbient
isEndingNpcControl
_T
InQuillsRoom
transferenceUmbra
_T
InQuillsRoom
transferenceUmbra
_T
transferenceUmbra
UmbraTransference
Engine
DT_ANY
ANY_PART
DHT_NONE
gRegion
isStreamingLevel
EOMOpen
MissionEnded
gRagdollType
_T
transferenceUmbra
/Lotus/Powersuits/Wisp/WispBaseSuit
UmbraTransference
gRegion
isStreamingLevel
EOMOpen
MissionEnded
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  23                 maxstacksize (35)
                         * code:
0009  01                 sizecode (172)
000A  17000000           [001] loadbool   0   0   0    ; false
000E  59000000           [002] loadk      1   0        ; 0
0012  99400000           [003] loadk      2   1        ; 102
0016  D9800000           [004] loadk      3   2        ; 0
001A  1DC10000           [005] getglobal  4   3        ; -332969190
001E  59010100           [006] loadk      5   4        ; "TransferenceFaction"
0022  22810001           [007] call       4   2   2  
0026  5DC10000           [008] getglobal  5   3        ; -332969190
002A  99410100           [009] loadk      6   5        ; "Transference"
002E  62810001           [010] call       5   2   2  
0032  9DC10000           [011] getglobal  6   3        ; -332969190
0036  D9810100           [012] loadk      7   6        ; "UmbraPause"
003A  A2810001           [013] call       6   2   2  
003E  DDC10000           [014] getglobal  7   3        ; -332969190
0042  19C20100           [015] loadk      8   7        ; "SandBoxInv"
0046  E2810001           [016] call       7   2   2  
004A  1DC20000           [017] getglobal  8   3        ; -332969190
004E  59020200           [018] loadk      9   8        ; "CloakHDR"
0052  22820001           [019] call       8   2   2  
0056  5D420200           [020] getglobal  9   9        ; 849075268
005A  99820200           [021] loadk      10  10       ; "Lotus.Interface.LotusUtilities"
005E  62820001           [022] call       9   2   2  
0062  9D420200           [023] getglobal  10  9        ; 849075268
0066  D9C20200           [024] loadk      11  11       ; "EE.Interface.Utilities"
006A  A2820001           [025] call       10  2   2  
006E  DD420200           [026] getglobal  11  9        ; 849075268
0072  19030300           [027] loadk      12  12       ; "Lotus.Scripts.Libs.AbilitiesLib"
0076  E2820001           [028] call       11  2   2  
007A  1D430200           [029] getglobal  12  9        ; 849075268
007E  59430300           [030] loadk      13  13       ; "Lotus.Powersuits.Operator.OperatorLib"
0082  22830001           [031] call       12  2   2  
0086  5D430200           [032] getglobal  13  9        ; 849075268
008A  99830300           [033] loadk      14  14       ; "Lotus.Scripts.Libs.OcclusionLib"
008E  62830001           [034] call       13  2   2  
0092  9D430200           [035] getglobal  14  9        ; 849075268
0096  D9C30300           [036] loadk      15  15       ; "Lotus.Powersuits.PowersuitAbilities.PVPLib"
009A  A2830001           [037] call       14  2   2  
009E  D9030400           [038] loadk      15  16       ; 0
00A2  19440400           [039] loadk      16  17       ; -51
00A6  4B840000           [040] newtable   17  0   2    ; array=0, hash=2
00AA  9DC40000           [041] getglobal  18  3        ; -332969190
00AE  D9C40400           [042] loadk      19  19       ; "HealthMax"
00B2  A2840001           [043] call       18  2   2  
00B6  4C840489           [044] settable   17  274 18   ; "tag"
00BA  8B040002           [045] newtable   18  4   0    ; array=4, hash=0
00BE  D9440500           [046] loadk      19  21       ; 0
00C2  19850500           [047] loadk      20  22       ; 0
00C6  59C50500           [048] loadk      21  23       ; 0
00CA  99050600           [049] loadk      22  24       ; 0
00CE  9B440002           [050] setlist    18  4   1    ; index 1 to 4
00D2  4C84048A           [051] settable   17  276 18   ; "mult"
00D6  A5040000           [052] closure    18  0      
00DA  12008008           [053] move       0   17     
00DE  A0440600           [054] setglobal  18  25       ; GetDescriptionInfo
00E2  A0840600           [055] setglobal  18  26       ; 504423499
00E6  A5440000           [056] closure    18  1      
00EA  E5840000           [057] closure    19  2      
00EE  25C50000           [058] closure    20  3      
00F2  12000004           [059] move       0   8      
00F6  65050100           [060] closure    21  4      
00FA  A5450100           [061] closure    22  5      
00FE  A0C50600           [062] setglobal  22  27       ; AssignShipOperator
0102  A0050700           [063] setglobal  22  28       ; -871673487
0106  A5850100           [064] closure    22  6      
010A  12000005           [065] move       0   10     
010E  12000006           [066] move       0   12     
0112  12000009           [067] move       0   18     
0116  E5C50100           [068] closure    23  7      
011A  12000005           [069] move       0   10     
011E  25060200           [070] closure    24  8      
0122  12008003           [071] move       0   7      
0126  65460200           [072] closure    25  9      
012A  1200000C           [073] move       0   24     
012E  12000006           [074] move       0   12     
0132  12008008           [075] move       0   17     
0136  A5860200           [076] closure    26  10     
013A  1200800C           [077] move       0   25     
013E  E5C60200           [078] closure    27  11     
0142  1200000D           [079] move       0   26     
0146  12000005           [080] move       0   10     
014A  1200800C           [081] move       0   25     
014E  12000009           [082] move       0   18     
0152  E0460700           [083] setglobal  27  29       ; SpawnOperator
0156  E0860700           [084] setglobal  27  30       ; 1315124365
015A  E5060300           [085] closure    27  12     
015E  25470300           [086] closure    28  13     
0162  20C70700           [087] setglobal  28  31       ; NpcEvaluateAbility
0166  20070800           [088] setglobal  28  32       ; -319690153
016A  25870300           [089] closure    28  14     
016E  65C70300           [090] closure    29  15     
0172  12000006           [091] move       0   12     
0176  1200800D           [092] move       0   27     
017A  1200000E           [093] move       0   28     
017E  12000000           [094] move       0   0      
0182  60470800           [095] setglobal  29  33       ; EvaluateAbility
0186  60870800           [096] setglobal  29  34       ; -2023457913
018A  65070400           [097] closure    29  16     
018E  A5470400           [098] closure    30  17     
0192  12008000           [099] move       0   1      
0196  12000001           [100] move       0   2      
019A  E5870400           [101] closure    31  18     
019E  1200800E           [102] move       0   29     
01A2  1200000F           [103] move       0   30     
01A6  25C80400           [104] closure    32  19     
01AA  12008002           [105] move       0   5      
01AE  12000009           [106] move       0   18     
01B2  12008005           [107] move       0   11     
01B6  1200000F           [108] move       0   30     
01BA  1200800F           [109] move       0   31     
01BE  12000007           [110] move       0   14     
01C2  12000000           [111] move       0   0      
01C6  1200800D           [112] move       0   27     
01CA  12000005           [113] move       0   10     
01CE  1200800E           [114] move       0   29     
01D2  12000002           [115] move       0   4      
01D6  65080500           [116] closure    33  20     
01DA  12008004           [117] move       0   9      
01DE  1200800C           [118] move       0   25     
01E2  12008009           [119] move       0   19     
01E6  12008006           [120] move       0   13     
01EA  1200800A           [121] move       0   21     
01EE  1200800B           [122] move       0   23     
01F2  1200000B           [123] move       0   22     
01F6  12000010           [124] move       0   32     
01FA  12008005           [125] move       0   11     
01FE  12008002           [126] move       0   5      
0202  12008000           [127] move       0   1      
0206  12000001           [128] move       0   2      
020A  1200800E           [129] move       0   29     
020E  12000006           [130] move       0   12     
0212  A5480500           [131] closure    34  21     
0216  12008010           [132] move       0   33     
021A  A0C80800           [133] setglobal  34  35       ; ActivateAbility
021E  A0080900           [134] setglobal  34  36       ; -871687712
0222  A5880500           [135] closure    34  22     
0226  12008002           [136] move       0   5      
022A  A0480900           [137] setglobal  34  37       ; DeactivateAbility
022E  A0880900           [138] setglobal  34  38       ; 33405088
0232  A5C80500           [139] closure    34  23     
0236  12008001           [140] move       0   3      
023A  1200800C           [141] move       0   25     
023E  12008010           [142] move       0   33     
0242  A0C80900           [143] setglobal  34  39       ; TemporaryControl
0246  A0080A00           [144] setglobal  34  40       ; 1340113242
024A  A5080600           [145] closure    34  24     
024E  12000002           [146] move       0   4      
0252  12000008           [147] move       0   16     
0256  12008007           [148] move       0   15     
025A  1200800C           [149] move       0   25     
025E  12000006           [150] move       0   12     
0262  12008010           [151] move       0   33     
0266  A0480A00           [152] setglobal  34  41       ; TemporaryNpcControl
026A  A0880A00           [153] setglobal  34  42       ; -1853634421
026E  A5480600           [154] closure    34  25     
0272  12008010           [155] move       0   33     
0276  A0C80A00           [156] setglobal  34  43       ; DoPreDeathOrForcedTransference
027A  A0080B00           [157] setglobal  34  44       ; 137490948
027E  A5880600           [158] closure    34  26     
0282  12000003           [159] move       0   6      
0286  A0480B00           [160] setglobal  34  45       ; QuillsRoomEnter
028A  A0880B00           [161] setglobal  34  46       ; 1277051174
028E  A5C80600           [162] closure    34  27     
0292  12000003           [163] move       0   6      
0296  A0C80B00           [164] setglobal  34  47       ; QuillsRoomExit
029A  A0080C00           [165] setglobal  34  48       ; -296222595
029E  A5080700           [166] closure    34  28     
02A2  A0480C00           [167] setglobal  34  49       ; UmbraAvatarSpawned
02A6  A0880C00           [168] setglobal  34  50       ; -1790745678
02AA  A5480700           [169] closure    34  29     
02AE  A0C80C00           [170] setglobal  34  51       ; UmbraAvatarKilled
02B2  A0080D00           [171] setglobal  34  52       ; -860534043
02B6  1E008000           [172] return     0   1      
                         * constants:
02BA  35                 sizek (53)
02BB  03                 const type 3
02BC  0000B841           const [0]: (0)
02C0  03                 const type 3
02C1  66660640           const [1]: (102)
02C5  03                 const type 3
02C6  0000A041           const [2]: (0)
02CA  01                 const type 3
02CB  1A4B27EC           const [3]: (-332969190)
02CF  04                 const type 4
02D0  14                 string size (20)
02D1  5472616E73666572+  "Transfer"
02D9  656E636546616374+  "enceFact"
02E1  696F6E00           "ion\0"
                         const [4]: "TransferenceFaction"
02E5  04                 const type 4
02E6  0D                 string size (13)
02E7  5472616E73666572+  "Transfer"
02EF  656E636500         "ence\0"
                         const [5]: "Transference"
02F4  04                 const type 4
02F5  0B                 string size (11)
02F6  556D627261506175+  "UmbraPau"
02FE  736500             "se\0"
                         const [6]: "UmbraPause"
0301  04                 const type 4
0302  0B                 string size (11)
0303  53616E64426F7849+  "SandBoxI"
030B  6E7600             "nv\0"
                         const [7]: "SandBoxInv"
030E  04                 const type 4
030F  09                 string size (9)
0310  436C6F616B484452+  "CloakHDR"
0318  00                 "\0"
                         const [8]: "CloakHDR"
0319  01                 const type 3
031A  44DC9B32           const [9]: (849075268)
031E  04                 const type 4
031F  1F                 string size (31)
0320  4C6F7475732E496E+  "Lotus.In"
0328  746572666163652E+  "terface."
0330  4C6F747573557469+  "LotusUti"
0338  6C697469657300     "lities\0"
                         const [10]: "Lotus.Interface.LotusUtilities"
033F  04                 const type 4
0340  17                 string size (23)
0341  45452E496E746572+  "EE.Inter"
0349  666163652E557469+  "face.Uti"
0351  6C697469657300     "lities\0"
                         const [11]: "EE.Interface.Utilities"
0358  04                 const type 4
0359  20                 string size (32)
035A  4C6F7475732E5363+  "Lotus.Sc"
0362  72697074732E4C69+  "ripts.Li"
036A  62732E4162696C69+  "bs.Abili"
0372  746965734C696200   "tiesLib\0"
                         const [12]: "Lotus.Scripts.Libs.AbilitiesLib"
037A  04                 const type 4
037B  26                 string size (38)
037C  4C6F7475732E506F+  "Lotus.Po"
0384  7765727375697473+  "wersuits"
038C  2E4F70657261746F+  ".Operato"
0394  722E4F7065726174+  "r.Operat"
039C  6F724C696200       "orLib\0"
                         const [13]: "Lotus.Powersuits.Operator.OperatorLib"
03A2  04                 const type 4
03A3  20                 string size (32)
03A4  4C6F7475732E5363+  "Lotus.Sc"
03AC  72697074732E4C69+  "ripts.Li"
03B4  62732E4F63636C75+  "bs.Occlu"
03BC  73696F6E4C696200   "sionLib\0"
                         const [14]: "Lotus.Scripts.Libs.OcclusionLib"
03C4  04                 const type 4
03C5  2B                 string size (43)
03C6  4C6F7475732E506F+  "Lotus.Po"
03CE  7765727375697473+  "wersuits"
03D6  2E506F7765727375+  ".Powersu"
03DE  69744162696C6974+  "itAbilit"
03E6  6965732E5056504C+  "ies.PVPL"
03EE  696200             "ib\0"
                         const [15]: "Lotus.Powersuits.PowersuitAbilities.PVPLib"
03F1  03                 const type 3
03F2  0000003F           const [16]: (0)
03F6  03                 const type 3
03F7  CDCCCC3F           const [17]: (-51)
03FB  04                 const type 4
03FC  04                 string size (4)
03FD  74616700           "tag\0"
                         const [18]: "tag"
0401  04                 const type 4
0402  0A                 string size (10)
0403  4865616C74684D61+  "HealthMa"
040B  7800               "x\0"
                         const [19]: "HealthMax"
040D  04                 const type 4
040E  05                 string size (5)
040F  6D756C7400         "mult\0"
                         const [20]: "mult"
0414  03                 const type 3
0415  0000A03F           const [21]: (0)
0419  03                 const type 3
041A  0000C03F           const [22]: (0)
041E  03                 const type 3
041F  00000040           const [23]: (0)
0423  03                 const type 3
0424  00002040           const [24]: (0)
0428  04                 const type 4
0429  13                 string size (19)
042A  4765744465736372+  "GetDescr"
0432  697074696F6E496E+  "iptionIn"
043A  666F00             "fo\0"
                         const [25]: "GetDescriptionInfo"
043D  01                 const type 3
043E  4BE4101E           const [26]: (504423499)
0442  04                 const type 4
0443  13                 string size (19)
0444  41737369676E5368+  "AssignSh"
044C  69704F7065726174+  "ipOperat"
0454  6F7200             "or\0"
                         const [27]: "AssignShipOperator"
0457  01                 const type 3
0458  71510BCC           const [28]: (-871673487)
045C  04                 const type 4
045D  0E                 string size (14)
045E  537061776E4F7065+  "SpawnOpe"
0466  7261746F7200       "rator\0"
                         const [29]: "SpawnOperator"
046C  01                 const type 3
046D  8D34634E           const [30]: (1315124365)
0471  04                 const type 4
0472  13                 string size (19)
0473  4E70634576616C75+  "NpcEvalu"
047B  6174654162696C69+  "ateAbili"
0483  747900             "ty\0"
                         const [31]: "NpcEvaluateAbility"
0486  01                 const type 3
0487  57EAF1EC           const [32]: (-319690153)
048B  04                 const type 4
048C  10                 string size (16)
048D  4576616C75617465+  "Evaluate"
0495  4162696C69747900   "Ability\0"
                         const [33]: "EvaluateAbility"
049D  01                 const type 3
049E  877B6487           const [34]: (-2023457913)
04A2  04                 const type 4
04A3  10                 string size (16)
04A4  4163746976617465+  "Activate"
04AC  4162696C69747900   "Ability\0"
                         const [35]: "ActivateAbility"
04B4  01                 const type 3
04B5  E0190BCC           const [36]: (-871687712)
04B9  04                 const type 4
04BA  12                 string size (18)
04BB  4465616374697661+  "Deactiva"
04C3  74654162696C6974+  "teAbilit"
04CB  7900               "y\0"
                         const [37]: "DeactivateAbility"
04CD  01                 const type 3
04CE  A0B8FD01           const [38]: (33405088)
04D2  04                 const type 4
04D3  11                 string size (17)
04D4  54656D706F726172+  "Temporar"
04DC  79436F6E74726F6C+  "yControl"
04E4  00                 "\0"
                         const [39]: "TemporaryControl"
04E5  01                 const type 3
04E6  5A81E04F           const [40]: (1340113242)
04EA  04                 const type 4
04EB  14                 string size (20)
04EC  54656D706F726172+  "Temporar"
04F4  794E7063436F6E74+  "yNpcCont"
04FC  726F6C00           "rol\0"
                         const [41]: "TemporaryNpcControl"
0500  01                 const type 3
0501  8BC88391           const [42]: (-1853634421)
0505  04                 const type 4
0506  1F                 string size (31)
0507  446F507265446561+  "DoPreDea"
050F  74684F72466F7263+  "thOrForc"
0517  65645472616E7366+  "edTransf"
051F  6572656E636500     "erence\0"
                         const [43]: "DoPreDeathOrForcedTransference"
0526  01                 const type 3
0527  04F23108           const [44]: (137490948)
052B  04                 const type 4
052C  10                 string size (16)
052D  5175696C6C73526F+  "QuillsRo"
0535  6F6D456E74657200   "omEnter\0"
                         const [45]: "QuillsRoomEnter"
053D  01                 const type 3
053E  26411E4C           const [46]: (1277051174)
0542  04                 const type 4
0543  0F                 string size (15)
0544  5175696C6C73526F+  "QuillsRo"
054C  6F6D4578697400     "omExit\0"
                         const [47]: "QuillsRoomExit"
0553  01                 const type 3
0554  7D0058EE           const [48]: (-296222595)
0558  04                 const type 4
0559  13                 string size (19)
055A  556D627261417661+  "UmbraAva"
0562  746172537061776E+  "tarSpawn"
056A  656400             "ed\0"
                         const [49]: "UmbraAvatarSpawned"
056D  01                 const type 3
056E  B2634395           const [50]: (-1790745678)
0572  04                 const type 4
0573  12                 string size (18)
0574  556D627261417661+  "UmbraAva"
057C  7461724B696C6C65+  "tarKille"
0584  6400               "d\0"
                         const [51]: "UmbraAvatarKilled"
0586  01                 const type 3
0587  E54AB5CC           const [52]: (-860534043)
                         * functions:
058B  1E                 sizep (30)
                         
058C                     ** function [0] definition (level 2)
                         ** start of function **
058C  00                 string size (0)
                         source name: (none)
058D  5B                 line defined (91)
058E  6A                 last line defined (106)
058F  01                 nups (1)
0590  03                 numparams (3)
0591  00                 is_vararg (0)
0592  0A                 maxstacksize (10)
                         * code:
0593  1C                 sizecode (28)
0594  CB000000           [01] newtable   3   0   0    ; array=0, hash=0
0598  25010000           [02] closure    4   0      
059C  12008000           [03] move       0   1      
05A0  5D010000           [04] getglobal  5   0        ; -332969190
05A4  92010000           [05] move       6   0      
05A8  62810001           [06] call       5   2   2  
05AC  93010000           [07] getupval   6   0      
05B0  8E414003           [08] gettable   6   6   257  ; "tag"
fail op	35
05B4  23808102           [09] close      0  
05B8  1AC00280           [10] jmp        12           ; to [23]
05BC  8B410000           [11] newtable   6   0   1    ; array=0, hash=1
05C0  DDC10000           [12] getglobal  7   3        ; math
05C4  CE01C103           [13] gettable   7   7   260  ; -150971781
05C8  12020002           [14] move       8   4      
05CC  53020000           [15] getupval   9   0      
05D0  4E42C104           [16] gettable   9   9   261  ; "mult"
05D4  22820001           [17] call       8   2   2  
05D8  0D824104           [18] sub        8   8   262  ; 0
05DC  04C24104           [19] mul        8   8   263  ; 0
05E0  E2810001           [20] call       7   2   2  
05E4  8CC10181           [21] settable   6   258 7    ; "PERCENT"
05E8  D2000003           [22] move       3   6      
05EC  9D010200           [23] getglobal  6   8        ; cjson
05F0  8E414203           [24] gettable   6   6   265  ; -1916729509
05F4  D2018001           [25] move       7   3      
05F8  87010001           [26] tailcall   6   2   0  
05FC  9E010000           [27] return     6   0      
0600  1E008000           [28] return     0   1      
                         * constants:
0604  0A                 sizek (10)
0605  01                 const type 3
0606  1A4B27EC           const [0]: (-332969190)
060A  04                 const type 4
060B  04                 string size (4)
060C  74616700           "tag\0"
                         const [1]: "tag"
0610  04                 const type 4
0611  08                 string size (8)
0612  50455243454E5400   "PERCENT\0"
                         const [2]: "PERCENT"
061A  04                 const type 4
061B  05                 string size (5)
061C  6D61746800         "math\0"
                         const [3]: "math"
0621  01                 const type 3
0622  7B5A00F7           const [4]: (-150971781)
0626  04                 const type 4
0627  05                 string size (5)
0628  6D756C7400         "mult\0"
                         const [5]: "mult"
062D  03                 const type 3
062E  0000803F           const [6]: (0)
0632  03                 const type 3
0633  0000C842           const [7]: (0)
0637  04                 const type 4
0638  06                 string size (6)
0639  636A736F6E00       "cjson\0"
                         const [8]: "cjson"
063F  01                 const type 3
0640  5B07C18D           const [9]: (-1916729509)
                         * functions:
0644  01                 sizep (1)
                         
0645                     ** function [0] definition (level 3)
                         ** start of function **
0645  00                 string size (0)
                         source name: (none)
0646  5E                 line defined (94)
0647  60                 last line defined (96)
0648  01                 nups (1)
0649  01                 numparams (1)
064A  00                 is_vararg (0)
064B  04                 maxstacksize (4)
                         * code:
064C  08                 sizecode (8)
064D  5D000000           [1] getglobal  1   0        ; math
0651  4E40C000           [2] gettable   1   1   257  ; 1710846250
0655  93000000           [3] getupval   2   0      
0659  CA000000           [4] len        3   0      
065D  62808001           [5] call       1   3   2  
0661  4E400000           [6] gettable   1   0   1  
0665  5E000001           [7] return     1   2      
0669  1E008000           [8] return     0   1      
                         * constants:
066D  02                 sizek (2)
066E  04                 const type 4
066F  05                 string size (5)
0670  6D61746800         "math\0"
                         const [0]: "math"
0675  01                 const type 3
0676  2A71F965           const [1]: (1710846250)
                         * functions:
067A  00                 sizep (0)
                         * lines:
067B  08                 sizelineinfo (8)
                         [pc] (line)
067C  5F                 [1] (95)
067D  00                 [2] (95)
067E  00                 [3] (95)
067F  00                 [4] (95)
0680  5F                 [5] (95)
0681  00                 [6] (95)
0682  00                 [7] (95)
0683  00                 [8] (96)
                         * locals:
069C  00                 sizelocvars (0)
                         * upvalues:
069D  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
069E  1C                 sizelineinfo (28)
                         [pc] (line)
069F  5C                 [01] (92)
06A0  00                 [02] (96)
06A1  00                 [03] (96)
06A2  00                 [04] (98)
06A3  60                 [05] (98)
06A4  00                 [06] (98)
06A5  00                 [07] (99)
06A6  00                 [08] (99)
06A7  60                 [09] (99)
06A8  00                 [10] (99)
06A9  00                 [11] (100)
06AA  00                 [12] (101)
06AB  62                 [13] (101)
06AC  00                 [14] (101)
06AD  00                 [15] (101)
06AE  00                 [16] (101)
06AF  62                 [17] (101)
06B0  00                 [18] (101)
06B1  00                 [19] (101)
06B2  00                 [20] (101)
06B3  62                 [21] (101)
06B4  00                 [22] (102)
06B5  00                 [23] (105)
06B6  00                 [24] (105)
06B7  63                 [25] (105)
06B8  00                 [26] (105)
06B9  00                 [27] (105)
06BA  00                 [28] (106)
                         * locals:
070F  00                 sizelocvars (0)
                         * upvalues:
0710  00                 sizeupvalues (0)
                         ** end of function **

                         
0711                     ** function [1] definition (level 2)
                         ** start of function **
0711  00                 string size (0)
                         source name: (none)
0712  6C                 line defined (108)
0713  7B                 last line defined (123)
0714  00                 nups (0)
0715  02                 numparams (2)
0716  00                 is_vararg (0)
0717  08                 maxstacksize (8)
                         * code:
0718  20                 sizecode (32)
0719  A4004000           [01] self       2   0   256  ; 51109503
071D  A2800001           [02] call       2   2   2  
0721  CE404001           [03] gettable   3   2   257  ; "mOperatorCustomization"
0725  2481C001           [04] self       4   3   258  ; -1871371820
0729  9DC10000           [05] getglobal  6   3        ; Lotus_Game
072D  8E014103           [06] gettable   6   6   260  ; "TOSS_VOICE"
0731  22818001           [07] call       4   3   2  
0735  5D410100           [08] getglobal  5   5        ; 1074689893
0739  8E814102           [09] gettable   6   4   262  ; "mItemType"
073D  62810001           [10] call       5   2   2  
0741  58410000           [11] test       5       1    ; to [13] if false
0745  1A000480           [12] jmp        17           ; to [30]
0749  5DC10100           [13] getglobal  5   7        ; 2083004503
074D  8E814102           [14] gettable   6   4   262  ; "mItemType"
0751  62810001           [15] call       5   2   2  
0755  9D410100           [16] getglobal  6   5        ; 1074689893
0759  D2018002           [17] move       7   5      
075D  A2810001           [18] call       6   2   2  
0761  98410000           [19] test       6       1    ; to [21] if false
0765  1A000280           [20] jmp        9            ; to [30]
0769  58000000           [21] test       1       0    ; to [23] if true
076D  1AC00080           [22] jmp        4            ; to [27]
0771  A401C202           [23] self       6   5   264  ; -952849075
0775  A2810001           [24] call       6   2   2  
0779  9E010001           [25] return     6   2      
077D  1A800080           [26] jmp        3            ; to [30]
0781  A441C202           [27] self       6   5   265  ; 693618867
0785  A2810001           [28] call       6   2   2  
0789  9E010001           [29] return     6   2      
078D  86010003           [30] loadnil    6   6      
0791  9E010001           [31] return     6   2      
0795  1E008000           [32] return     0   1      
                         * constants:
0799  0A                 sizek (10)
079A  01                 const type 3
079B  7FDE0B03           const [0]: (51109503)
079F  04                 const type 4
07A0  17                 string size (23)
07A1  6D4F70657261746F+  "mOperato"
07A9  72437573746F6D69+  "rCustomi"
07B1  7A6174696F6E00     "zation\0"
                         const [1]: "mOperatorCustomization"
07B8  01                 const type 3
07B9  D4217590           const [2]: (-1871371820)
07BD  04                 const type 4
07BE  0B                 string size (11)
07BF  4C6F7475735F4761+  "Lotus_Ga"
07C7  6D6500             "me\0"
                         const [3]: "Lotus_Game"
07CA  04                 const type 4
07CB  0B                 string size (11)
07CC  544F53535F564F49+  "TOSS_VOI"
07D4  434500             "CE\0"
                         const [4]: "TOSS_VOICE"
07D7  01                 const type 3
07D8  65770E40           const [5]: (1074689893)
07DC  04                 const type 4
07DD  0A                 string size (10)
07DE  6D4974656D547970+  "mItemTyp"
07E6  6500               "e\0"
                         const [6]: "mItemType"
07E8  01                 const type 3
07E9  5720287C           const [7]: (2083004503)
07ED  01                 const type 3
07EE  4DAD34C7           const [8]: (-952849075)
07F2  01                 const type 3
07F3  B3C85729           const [9]: (693618867)
                         * functions:
07F7  00                 sizep (0)
                         * lines:
07F8  20                 sizelineinfo (32)
                         [pc] (line)
07F9  6D                 [01] (109)
07FA  00                 [02] (109)
07FB  00                 [03] (110)
07FC  00                 [04] (111)
07FD  6D                 [05] (111)
07FE  00                 [06] (111)
07FF  00                 [07] (111)
0800  00                 [08] (112)
0801  6E                 [09] (112)
0802  00                 [10] (112)
0803  00                 [11] (112)
0804  00                 [12] (112)
0805  6F                 [13] (113)
0806  00                 [14] (113)
0807  00                 [15] (113)
0808  00                 [16] (114)
0809  6F                 [17] (114)
080A  00                 [18] (114)
080B  00                 [19] (114)
080C  00                 [20] (114)
080D  6F                 [21] (115)
080E  00                 [22] (115)
080F  00                 [23] (116)
0810  00                 [24] (116)
0811  6F                 [25] (116)
0812  00                 [26] (116)
0813  00                 [27] (118)
0814  00                 [28] (118)
0815  70                 [29] (118)
0816  00                 [30] (122)
0817  00                 [31] (122)
0818  00                 [32] (123)
                         * locals:
0879  00                 sizelocvars (0)
                         * upvalues:
087A  00                 sizeupvalues (0)
                         ** end of function **

                         
087B                     ** function [2] definition (level 2)
                         ** start of function **
087B  00                 string size (0)
                         source name: (none)
087C  7D                 line defined (125)
087D  90                 last line defined (144)
087E  01                 nups (0)
087F  00                 numparams (1)
0880  01                 is_vararg (0)
0881  00                 maxstacksize (10)
                         * code:
0883  2B                 sizecode (43)
0884  5D000000           [01] getglobal  1   0        ; gRegion
0888  6440C000           [02] self       1   1   257  ; -1456226250
088C  62800001           [03] call       1   2   2  
0890  9D800000           [04] getglobal  2   2        ; 1074689893
0894  D2008000           [05] move       3   1      
0898  A2800001           [06] call       2   2   2  
089C  98000000           [07] test       2       0    ; to [9] if true
08A0  1A000080           [08] jmp        1            ; to [10]
08A4  1E008000           [09] return     0   1      
08A8  A4C04000           [10] self       2   0   259  ; 1525877273
08AC  A2800001           [11] call       2   2   2  
08B0  CE00C100           [12] gettable   3   1   260  ; "postProcess"
08B4  CC80C182           [13] settable   3   261 262  ; "fade" 0
08B8  1D810000           [14] getglobal  4   2        ; 1074689893
08BC  52010001           [15] move       5   2      
08C0  22810001           [16] call       4   2   2  
08C4  18410000           [17] test       4       1    ; to [19] if false
08C8  1A000180           [18] jmp        5            ; to [24]
08CC  24C14101           [19] self       4   2   263  ; 1612278193
08D0  9D010200           [20] getglobal  6   8        ; cameraColorCorrection
08D4  22418001           [21] call       4   3   1  
08D8  24414201           [22] self       4   2   265  ; 1051525123
08DC  22410001           [23] call       4   2   1  
08E0  CCC04285           [24] settable   3   266 267  ; "lightning" 0
08E4  1D010000           [25] getglobal  4   0        ; gRegion
08E8  24014302           [26] self       4   4   268  ; -1110225722
08EC  9D410300           [27] getglobal  6   13       ; exitVoidEffect
08F0  E4814300           [28] self       7   0   270  ; -427739093
08F4  E2810001           [29] call       7   2   2  
08F8  1DC20300           [30] getglobal  8   15       ; ZERO_ROTATION
08FC  52020000           [31] move       9   0      
0900  22410003           [32] call       4   6   1  
0904  24014400           [33] self       4   0   272  ; -1625438872
0908  9D410400           [34] getglobal  6   17       ; inVoidLocalSequencer
090C  22818001           [35] call       4   3   2  
0910  5D810000           [36] getglobal  5   2        ; 1074689893
0914  92010002           [37] move       6   4      
0918  62810001           [38] call       5   2   2  
091C  58410000           [39] test       5       1    ; to [41] if false
0920  1A400080           [40] jmp        2            ; to [43]
0924  64814402           [41] self       5   4   274  ; -725453761
0928  62410001           [42] call       5   2   1  
092C  1E008000           [43] return     0   1      
                         * constants:
0930  13                 sizek (19)
0931  04                 const type 4
0932  08                 string size (8)
0933  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
093B  01                 const type 3
093C  36C033A9           const [1]: (-1456226250)
0940  01                 const type 3
0941  65770E40           const [2]: (1074689893)
0945  01                 const type 3
0946  190AF35A           const [3]: (1525877273)
094A  04                 const type 4
094B  0C                 string size (12)
094C  706F737450726F63+  "postProc"
0954  65737300           "ess\0"
                         const [4]: "postProcess"
0958  04                 const type 4
0959  05                 string size (5)
095A  6661646500         "fade\0"
                         const [5]: "fade"
095F  03                 const type 3
0960  00000000           const [6]: (0)
0964  01                 const type 3
0965  B1691960           const [7]: (1612278193)
0969  04                 const type 4
096A  16                 string size (22)
096B  63616D657261436F+  "cameraCo"
0973  6C6F72436F727265+  "lorCorre"
097B  6374696F6E00       "ction\0"
                         const [8]: "cameraColorCorrection"
0981  01                 const type 3
0982  0300AD3E           const [9]: (1051525123)
0986  04                 const type 4
0987  0A                 string size (10)
0988  6C696768746E696E+  "lightnin"
0990  6700               "g\0"
                         const [10]: "lightning"
0992  01                 const type 3
0993  00000000           const [11]: (0)
0997  01                 const type 3
0998  C64CD3BD           const [12]: (-1110225722)
099C  04                 const type 4
099D  0F                 string size (15)
099E  65786974566F6964+  "exitVoid"
09A6  45666665637400     "Effect\0"
                         const [13]: "exitVoidEffect"
09AD  01                 const type 3
09AE  2B3881E6           const [14]: (-427739093)
09B2  04                 const type 4
09B3  0E                 string size (14)
09B4  5A45524F5F524F54+  "ZERO_ROT"
09BC  4154494F4E00       "ATION\0"
                         const [15]: "ZERO_ROTATION"
09C2  01                 const type 3
09C3  68C51D9F           const [16]: (-1625438872)
09C7  04                 const type 4
09C8  15                 string size (21)
09C9  696E566F69644C6F+  "inVoidLo"
09D1  63616C5365717565+  "calSeque"
09D9  6E63657200         "ncer\0"
                         const [17]: "inVoidLocalSequencer"
09DE  01                 const type 3
09DF  3F74C2D4           const [18]: (-725453761)
                         * functions:
09E3  00                 sizep (0)
                         * lines:
09E4  2B                 sizelineinfo (43)
                         [pc] (line)
09E5  7E                 [01] (126)
09E6  00                 [02] (126)
09E7  00                 [03] (126)
09E8  00                 [04] (127)
09E9  7E                 [05] (127)
09EA  00                 [06] (127)
09EB  00                 [07] (127)
09EC  00                 [08] (127)
09ED  7E                 [09] (-128)
09EE  00                 [10] (-125)
09EF  00                 [11] (-125)
09F0  00                 [12] (-124)
09F1  7F                 [13] (-123)
09F2  00                 [14] (-122)
09F3  00                 [15] (-122)
09F4  00                 [16] (-122)
09F5  7F                 [17] (-122)
09F6  00                 [18] (-122)
09F7  00                 [19] (-121)
09F8  00                 [20] (-121)
09F9  7F                 [21] (-121)
09FA  00                 [22] (-120)
09FB  00                 [23] (-120)
09FC  00                 [24] (-118)
09FD  7F                 [25] (-117)
09FE  00                 [26] (-117)
09FF  00                 [27] (-117)
0A00  00                 [28] (-117)
0A01  7F                 [29] (-117)
0A02  00                 [30] (-117)
0A03  00                 [31] (-117)
0A04  00                 [32] (-117)
0A05  80                 [33] (-116)
0A06  00                 [34] (-116)
0A07  00                 [35] (-116)
0A08  00                 [36] (-115)
0A09  83                 [37] (-115)
0A0A  00                 [38] (-115)
0A0B  00                 [39] (-115)
0A0C  00                 [40] (-115)
0A0D  83                 [41] (-114)
0A0E  00                 [42] (-114)
0A0F  00                 [43] (-112)
                         * locals:
0A91  00                 sizelocvars (0)
                         * upvalues:
0A92  00                 sizeupvalues (0)
                         ** end of function **

                         
0A93                     ** function [3] definition (level 2)
                         ** start of function **
0A93  00                 string size (0)
                         source name: (none)
0A95  01                 line defined (146)
0A96  9D                 last line defined (157)
0A97  01                 nups (1)
0A98  01                 numparams (2)
0A99  02                 is_vararg (0)
0A9A  00                 maxstacksize (12)
                         * code:
0A9C  1F                 sizecode (31)
0A9D  99000000           [01] loadk      2   0        ; 0
0AA1  D2008000           [02] move       3   1      
0AA5  19010000           [03] loadk      4   0        ; 0
0AA9  64414000           [04] self       5   0   257  ; -786111647
0AAD  D3010000           [05] getupval   7   0      
0AB1  19820000           [06] loadk      8   2        ; 0
0AB5  59C20000           [07] loadk      9   3        ; 0
0AB9  99020100           [08] loadk      10  4        ; 0
0ABD  D9420100           [09] loadk      11  5        ; 0
0AC1  62418003           [10] call       5   7   1  
0AC5  5D810100           [11] getglobal  5   6        ; 1074689893
0AC9  92010000           [12] move       6   0      
0ACD  62810001           [13] call       5   2   2  
0AD1  58410000           [14] test       5       1    ; to [16] if false
0AD5  1A800380           [15] jmp        15           ; to [31]
fail op	33
0AD9  21C00001           [16] tforloop   0       3    ; to [18] if exit
0ADD  1A000380           [17] jmp        13           ; to [31]
0AE1  64C14100           [18] self       5   0   263  ; -703571861
0AE5  D2010002           [19] move       7   4      
0AE9  62418001           [20] call       5   3   1  
0AED  5D010200           [21] getglobal  5   8        ; 538022378
0AF1  99010000           [22] loadk      6   0        ; 0
0AF5  62410001           [23] call       5   2   1  
0AF9  5D410200           [24] getglobal  5   9        ; 1289681407
0AFD  62818000           [25] call       5   1   2  
0B01  83400101           [26] add        2   2   5  
0B05  4D818001           [27] sub        5   3   2  
0B09  5CC18002           [28] div        5   5   3  
0B0D  0D418182           [29] sub        4   261 5    ; 0
0B11  1AC0FA7F           [30] jmp        -20          ; to [11]
0B15  1E008000           [31] return     0   1      
                         * constants:
0B19  0A                 sizek (10)
0B1A  03                 const type 3
0B1B  00000000           const [0]: (0)
0B1F  01                 const type 3
0B20  61E324D1           const [1]: (-786111647)
0B24  03                 const type 3
0B25  00000041           const [2]: (0)
0B29  03                 const type 3
0B2A  00004040           const [3]: (0)
0B2E  03                 const type 3
0B2F  0000003F           const [4]: (0)
0B33  03                 const type 3
0B34  0000803F           const [5]: (0)
0B38  01                 const type 3
0B39  65770E40           const [6]: (1074689893)
0B3D  01                 const type 3
0B3E  6B5810D6           const [7]: (-703571861)
0B42  01                 const type 3
0B43  EA911120           const [8]: (538022378)
0B47  01                 const type 3
0B48  FFF9DE4C           const [9]: (1289681407)
                         * functions:
0B4C  00                 sizep (0)
                         * lines:
0B4D  1F                 sizelineinfo (31)
                         [pc] (line)
0B4E  93                 [01] (-109)
0B4F  00                 [02] (-108)
0B50  00                 [03] (-107)
0B51  00                 [04] (-106)
0B52  94                 [05] (-106)
0B53  00                 [06] (-106)
0B54  00                 [07] (-106)
0B55  00                 [08] (-106)
0B56  95                 [09] (-106)
0B57  00                 [10] (-106)
0B58  00                 [11] (-105)
0B59  00                 [12] (-105)
0B5A  96                 [13] (-105)
0B5B  00                 [14] (-105)
0B5C  00                 [15] (-105)
0B5D  00                 [16] (-105)
0B5E  96                 [17] (-105)
0B5F  00                 [18] (-104)
0B60  00                 [19] (-104)
0B61  00                 [20] (-104)
0B62  96                 [21] (-103)
0B63  00                 [22] (-103)
0B64  00                 [23] (-103)
0B65  00                 [24] (-102)
0B66  96                 [25] (-102)
0B67  00                 [26] (-102)
0B68  00                 [27] (-101)
0B69  00                 [28] (-101)
0B6A  96                 [29] (-101)
0B6B  00                 [30] (-101)
0B6C  00                 [31] (-99)
                         * locals:
0BCA  00                 sizelocvars (0)
                         * upvalues:
0BCB  00                 sizeupvalues (0)
                         ** end of function **

                         
0BCC                     ** function [4] definition (level 2)
                         ** start of function **
0BCC  00                 string size (0)
                         source name: (none)
0BCE  01                 line defined (159)
0BCF  AB                 last line defined (171)
0BD0  01                 nups (0)
0BD1  00                 numparams (1)
0BD2  01                 is_vararg (0)
0BD3  00                 maxstacksize (5)
                         * code:
0BD5  2C                 sizecode (44)
0BD6  64004000           [01] self       1   0   256  ; 255413362
0BDA  62800001           [02] call       1   2   2  
0BDE  58000000           [03] test       1       0    ; to [5] if true
0BE2  1AC00180           [04] jmp        8            ; to [13]
0BE6  64404000           [05] self       1   0   257  ; -1201586349
0BEA  62800001           [06] call       1   2   2  
0BEE  58000000           [07] test       1       0    ; to [9] if true
0BF2  1AC00080           [08] jmp        4            ; to [13]
0BF6  64804000           [09] self       1   0   258  ; -529567558
0BFA  DDC00000           [10] getglobal  3   3        ; Engine
0BFE  CE00C101           [11] gettable   3   3   260  ; "WALK"
0C02  62408001           [12] call       1   3   1  
0C06  64404100           [13] self       1   0   261  ; -452063099
0C0A  DDC00000           [14] getglobal  3   3        ; Engine
0C0E  CE80C101           [15] gettable   3   3   262  ; "PM_IN_AIR"
0C12  17010000           [16] loadbool   4   0   0    ; false
0C16  62400002           [17] call       1   4   1  
0C1A  64404100           [18] self       1   0   261  ; -452063099
0C1E  DDC00000           [19] getglobal  3   3        ; Engine
0C22  CEC0C101           [20] gettable   3   3   263  ; "PM_WALLJUMP"
0C26  17010000           [21] loadbool   4   0   0    ; false
0C2A  62400002           [22] call       1   4   1  
0C2E  64404100           [23] self       1   0   261  ; -452063099
0C32  DDC00000           [24] getglobal  3   3        ; Engine
0C36  CE00C201           [25] gettable   3   3   264  ; "PM_GRAV_DISABLED"
0C3A  17010000           [26] loadbool   4   0   0    ; false
0C3E  62400002           [27] call       1   4   1  
0C42  5D400200           [28] getglobal  1   9        ; _T
0C46  4E80C200           [29] gettable   1   1   266  ; "transferenceUmbra"
fail op	35
0C4A  63C0C200           [30] close      1  
0C4E  1A000280           [31] jmp        9            ; to [41]
0C52  5D000300           [32] getglobal  1   12       ; 1074689893
0C56  9D400200           [33] getglobal  2   9        ; _T
0C5A  8E804201           [34] gettable   2   2   266  ; "transferenceUmbra"
0C5E  E4404300           [35] self       3   0   269  ; -605089866
0C62  E2800001           [36] call       3   2   2  
0C66  8EC00001           [37] gettable   2   2   3  
0C6A  62800001           [38] call       1   2   2  
0C6E  58000000           [39] test       1       0    ; to [41] if true
0C72  1A800080           [40] jmp        3            ; to [44]
0C76  64804300           [41] self       1   0   270  ; -2113194289
0C7A  D7000000           [42] loadbool   3   0   0    ; false
0C7E  62408001           [43] call       1   3   1  
0C82  1E008000           [44] return     0   1      
                         * constants:
0C86  0F                 sizek (15)
0C87  01                 const type 3
0C88  724C390F           const [0]: (255413362)
0C8C  01                 const type 3
0C8D  533F61B8           const [1]: (-1201586349)
0C91  01                 const type 3
0C92  BA706FE0           const [2]: (-529567558)
0C96  04                 const type 4
0C97  07                 string size (7)
0C98  456E67696E6500     "Engine\0"
                         const [3]: "Engine"
0C9F  04                 const type 4
0CA0  05                 string size (5)
0CA1  57414C4B00         "WALK\0"
                         const [4]: "WALK"
0CA6  01                 const type 3
0CA7  85100EE5           const [5]: (-452063099)
0CAB  04                 const type 4
0CAC  0A                 string size (10)
0CAD  504D5F494E5F4149+  "PM_IN_AI"
0CB5  5200               "R\0"
                         const [6]: "PM_IN_AIR"
0CB7  04                 const type 4
0CB8  0C                 string size (12)
0CB9  504D5F57414C4C4A+  "PM_WALLJ"
0CC1  554D5000           "UMP\0"
                         const [7]: "PM_WALLJUMP"
0CC5  04                 const type 4
0CC6  11                 string size (17)
0CC7  504D5F475241565F+  "PM_GRAV_"
0CCF  44495341424C4544+  "DISABLED"
0CD7  00                 "\0"
                         const [8]: "PM_GRAV_DISABLED"
0CD8  04                 const type 4
0CD9  03                 string size (3)
0CDA  5F5400             "_T\0"
                         const [9]: "_T"
0CDD  04                 const type 4
0CDE  12                 string size (18)
0CDF  7472616E73666572+  "transfer"
0CE7  656E6365556D6272+  "enceUmbr"
0CEF  6100               "a\0"
                         const [10]: "transferenceUmbra"
0CF1  00                 const type 0
                         const [11]: nil
0CF2  01                 const type 3
0CF3  65770E40           const [12]: (1074689893)
0CF7  01                 const type 3
0CF8  B60FEFDB           const [13]: (-605089866)
0CFC  01                 const type 3
0CFD  CF360B82           const [14]: (-2113194289)
                         * functions:
0D01  00                 sizep (0)
                         * lines:
0D02  2C                 sizelineinfo (44)
                         [pc] (line)
0D03  A1                 [01] (-95)
0D04  00                 [02] (-95)
0D05  00                 [03] (-95)
0D06  00                 [04] (-95)
0D07  A1                 [05] (-95)
0D08  00                 [06] (-95)
0D09  00                 [07] (-95)
0D0A  00                 [08] (-95)
0D0B  A1                 [09] (-94)
0D0C  00                 [10] (-94)
0D0D  00                 [11] (-94)
0D0E  00                 [12] (-94)
0D0F  A1                 [13] (-92)
0D10  00                 [14] (-92)
0D11  00                 [15] (-92)
0D12  00                 [16] (-92)
0D13  A1                 [17] (-92)
0D14  00                 [18] (-91)
0D15  00                 [19] (-91)
0D16  00                 [20] (-91)
0D17  A1                 [21] (-91)
0D18  00                 [22] (-91)
0D19  00                 [23] (-90)
0D1A  00                 [24] (-90)
0D1B  A1                 [25] (-90)
0D1C  00                 [26] (-90)
0D1D  00                 [27] (-90)
0D1E  00                 [28] (-88)
0D1F  A1                 [29] (-88)
0D20  00                 [30] (-88)
0D21  00                 [31] (-88)
0D22  00                 [32] (-88)
0D23  A2                 [33] (-88)
0D24  00                 [34] (-88)
0D25  00                 [35] (-88)
0D26  00                 [36] (-88)
0D27  A2                 [37] (-88)
0D28  00                 [38] (-88)
0D29  00                 [39] (-88)
0D2A  00                 [40] (-88)
0D2B  A2                 [41] (-87)
0D2C  00                 [42] (-87)
0D2D  00                 [43] (-87)
0D2E  00                 [44] (-85)
                         * locals:
0DB3  00                 sizelocvars (0)
                         * upvalues:
0DB4  00                 sizeupvalues (0)
                         ** end of function **

                         
0DB5                     ** function [5] definition (level 2)
                         ** start of function **
0DB5  00                 string size (0)
                         source name: (none)
0DB7  01                 line defined (173)
0DB8  B4                 last line defined (180)
0DB9  01                 nups (0)
0DBA  00                 numparams (1)
0DBB  01                 is_vararg (0)
0DBC  00                 maxstacksize (7)
                         * code:
0DBE  12                 sizecode (18)
0DBF  5D000000           [01] getglobal  1   0        ; gRegion
0DC3  6440C000           [02] self       1   1   257  ; 925677844
0DC7  62800001           [03] call       1   2   2  
0DCB  A4804000           [04] self       2   0   258  ; -2135866365
0DCF  A2800001           [05] call       2   2   2  
0DD3  E4C0C000           [06] self       3   1   259  ; 2116058430
0DD7  52010001           [07] move       5   2      
0DDB  E2408001           [08] call       3   3   1  
0DDF  E480C000           [09] self       3   1   258  ; -2135866365
0DE3  E2800001           [10] call       3   2   2  
0DE7  2401C100           [11] self       4   1   260  ; -1911513480
0DEB  92018001           [12] move       6   3      
0DEF  22418001           [13] call       4   3   1  
0DF3  1D410100           [14] getglobal  4   5        ; _T
0DF7  64C14101           [15] self       5   2   263  ; 1839670529
0DFB  62810001           [16] call       5   2   2  
0DFF  0C410183           [17] settable   4   262 5    ; "defaultOperatorPos"
0E03  1E008000           [18] return     0   1      
                         * constants:
0E07  08                 sizek (8)
0E08  04                 const type 4
0E09  08                 string size (8)
0E0A  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
0E12  01                 const type 3
0E13  14B92C37           const [1]: (925677844)
0E17  01                 const type 3
0E18  0344B180           const [2]: (-2135866365)
0E1C  01                 const type 3
0E1D  3E7D207E           const [3]: (2116058430)
0E21  01                 const type 3
0E22  789E108E           const [4]: (-1911513480)
0E26  04                 const type 4
0E27  03                 string size (3)
0E28  5F5400             "_T\0"
                         const [5]: "_T"
0E2B  04                 const type 4
0E2C  13                 string size (19)
0E2D  64656661756C744F+  "defaultO"
0E35  70657261746F7250+  "peratorP"
0E3D  6F7300             "os\0"
                         const [6]: "defaultOperatorPos"
0E40  01                 const type 3
0E41  0125A76D           const [7]: (1839670529)
                         * functions:
0E45  00                 sizep (0)
                         * lines:
0E46  12                 sizelineinfo (18)
                         [pc] (line)
0E47  AE                 [01] (-82)
0E48  00                 [02] (-82)
0E49  00                 [03] (-82)
0E4A  00                 [04] (-81)
0E4B  AE                 [05] (-81)
0E4C  00                 [06] (-80)
0E4D  00                 [07] (-80)
0E4E  00                 [08] (-80)
0E4F  AE                 [09] (-79)
0E50  00                 [10] (-79)
0E51  00                 [11] (-78)
0E52  00                 [12] (-78)
0E53  AF                 [13] (-78)
0E54  00                 [14] (-77)
0E55  00                 [15] (-77)
0E56  00                 [16] (-77)
0E57  AF                 [17] (-77)
0E58  00                 [18] (-76)
                         * locals:
0E8F  00                 sizelocvars (0)
                         * upvalues:
0E90  00                 sizeupvalues (0)
                         ** end of function **

                         
0E91                     ** function [6] definition (level 2)
                         ** start of function **
0E91  00                 string size (0)
                         source name: (none)
0E93  01                 line defined (182)
0E94  F6                 last line defined (246)
0E95  01                 nups (3)
0E96  03                 numparams (0)
0E97  00                 is_vararg (0)
0E98  00                 maxstacksize (15)
                         * code:
0E9B  01                 sizecode (200)
0E9C  1D000000           [001] getglobal  0   0        ; gRegion
0EA0  24404000           [002] self       0   0   257  ; 925677844
0EA4  22800001           [003] call       0   2   2  
0EA8  5D800000           [004] getglobal  1   2        ; 1074689893
0EAC  92000000           [005] move       2   0      
0EB0  62800001           [006] call       1   2   2  
0EB4  58000000           [007] test       1       0    ; to [9] if true
0EB8  1A000080           [008] jmp        1            ; to [10]
0EBC  1E008000           [009] return     0   1      
0EC0  64C04000           [010] self       1   0   259  ; -1813551355
0EC4  62800001           [011] call       1   2   2  
0EC8  9D800000           [012] getglobal  2   2        ; 1074689893
0ECC  D2008000           [013] move       3   1      
0ED0  A2800001           [014] call       2   2   2  
0ED4  98000000           [015] test       2       0    ; to [17] if true
0ED8  1A000080           [016] jmp        1            ; to [18]
0EDC  1E008000           [017] return     0   1      
0EE0  A4004100           [018] self       2   0   260  ; -1888201767
0EE4  A2800001           [019] call       2   2   2  
0EE8  DD800000           [020] getglobal  3   2        ; 1074689893
0EEC  12010001           [021] move       4   2      
0EF0  E2800001           [022] call       3   2   2  
0EF4  D8000000           [023] test       3       0    ; to [25] if true
0EF8  1A000080           [024] jmp        1            ; to [26]
0EFC  1E008000           [025] return     0   1      
0F00  E4404101           [026] self       3   2   261  ; 1129512439
0F04  5D810100           [027] getglobal  5   6        ; blockingInputFilter
0F08  E2408001           [028] call       3   3   1  
0F0C  DD000000           [029] getglobal  3   0        ; gRegion
0F10  E4C0C101           [030] self       3   3   263  ; -1110225722
0F14  5D010200           [031] getglobal  5   8        ; operatorTransferenceOutFx
0F18  A4414201           [032] self       6   2   265  ; 1839670529
0F1C  A2810001           [033] call       6   2   2  
0F20  E4814201           [034] self       7   2   266  ; -231049143
0F24  E2010001           [035] call       7   2   0  
0F28  E2800000           [036] call       3   0   2  
0F2C  24C14201           [037] self       4   2   267  ; -1421644046
0F30  92018001           [038] move       6   3      
0F34  DD010300           [039] getglobal  7   12       ; EMPTY_SYMBOL
0F38  22410002           [040] call       4   4   1  
0F3C  13010000           [041] getupval   4   0      
0F40  0E414302           [042] gettable   4   4   269  ; 630793108
0F44  5D810300           [043] getglobal  5   14       ; warframeToOperatorBank
0F48  22410001           [044] call       4   2   1  
0F4C  1DC10300           [045] getglobal  4   15       ; 538022378
0F50  59010400           [046] loadk      5   16       ; -102
0F54  22410001           [047] call       4   2   1  
0F58  24414401           [048] self       4   2   273  ; 1265388858
0F5C  9D810100           [049] getglobal  6   6        ; blockingInputFilter
0F60  22418001           [050] call       4   3   1  
0F64  24814400           [051] self       4   0   274  ; 542147163
0F68  92018000           [052] move       6   1      
0F6C  22418001           [053] call       4   3   1  
0F70  24C1C400           [054] self       4   1   275  ; 2056776437
0F74  86010003           [055] loadnil    6   6      
0F78  D7010000           [056] loadbool   7   0   0    ; false
0F7C  1D020500           [057] getglobal  8   20       ; Engine
0F80  0E424504           [058] gettable   8   8   277  ; "ATMM_PHYSICS_DRIVEN"
0F84  5D020500           [059] getglobal  9   20       ; Engine
0F88  4E82C504           [060] gettable   9   9   278  ; "PRT_ONCE"
0F8C  97028000           [061] loadbool   10  1   0    ; true
0F90  22418003           [062] call       4   7   1  
0F94  1D810000           [063] getglobal  4   2        ; 1074689893
0F98  5DC10500           [064] getglobal  5   23       ; gGameRules
0F9C  4E01C602           [065] gettable   5   5   280  ; "GetPet"
0FA0  22810001           [066] call       4   2   2  
0FA4  18410000           [067] test       4       1    ; to [69] if false
0FA8  1A000380           [068] jmp        13           ; to [82]
0FAC  1DC10500           [069] getglobal  4   23       ; gGameRules
0FB0  24414602           [070] self       4   4   281  ; 96279756
0FB4  9D810600           [071] getglobal  6   26       ; Lotus_Game
0FB8  8EC14603           [072] gettable   6   6   283  ; "PET_KUBROW"
0FBC  22818001           [073] call       4   3   2  
0FC0  5D810000           [074] getglobal  5   2        ; 1074689893
0FC4  92010002           [075] move       6   4      
0FC8  62810001           [076] call       5   2   2  
0FCC  58410000           [077] test       5       1    ; to [79] if false
0FD0  1A800080           [078] jmp        3            ; to [82]
0FD4  64014702           [079] self       5   4   284  ; -635572127
0FD8  D2018000           [080] move       7   1      
0FDC  62418001           [081] call       5   3   1  
0FE0  64414701           [082] self       5   2   285  ; -725453761
0FE4  62410001           [083] call       5   2   1  
0FE8  5D010000           [084] getglobal  5   0        ; gRegion
0FEC  6481C702           [085] self       5   5   286  ; -1485896174
0FF0  DDC10700           [086] getglobal  7   31       ; -332969190
0FF4  19020800           [087] loadk      8   32       ; "OperatorSpawnControl"
0FF8  E2010001           [088] call       7   2   0  
0FFC  62810000           [089] call       5   0   2  
1000  9D810000           [090] getglobal  6   2        ; 1074689893
1004  D2018002           [091] move       7   5      
1008  A2810001           [092] call       6   2   2  
100C  98410000           [093] test       6       1    ; to [95] if false
1010  1A400E80           [094] jmp        58           ; to [153]
1014  8E41C802           [095] gettable   6   5   289  ; 0
1018  E4814803           [096] self       7   6   290  ; -1139739557
101C  E2810001           [097] call       7   2   2  
1020  24C2C803           [098] self       8   7   291  ; -2135866365
1024  22820001           [099] call       8   2   2  
1028  53028000           [100] getupval   9   1      
102C  4E02C904           [101] gettable   9   9   292  ; 2065819395
1030  92020004           [102] move       10  8      
1034  62420001           [103] call       9   2   1  
1038  64424900           [104] self       9   0   293  ; 2116058430
103C  D2020004           [105] move       11  8      
1040  62428001           [106] call       9   3   1  
1044  5D820900           [107] getglobal  9   38       ; 562846818
1048  A442C200           [108] self       10  1   265  ; 1839670529
104C  A2820001           [109] call       10  2   2  
1050  E4424204           [110] self       11  8   265  ; 1839670529
1054  E2820001           [111] call       11  2   2  
1058  8DC20205           [112] sub        10  10  11 
105C  62820001           [113] call       9   2   2  
fail op	21
1060  15C0C904           [114] concat     0   9   295
1064  1A000580           [115] jmp        21           ; to [137]
1068  5D820000           [116] getglobal  9   2        ; 1074689893
106C  9D020A00           [117] getglobal  10  40       ; _T
1070  8E424A05           [118] gettable   10  10  297  ; "PodState"
1074  8E824A05           [119] gettable   10  10  298  ; "LastPlayed"
1078  62820001           [120] call       9   2   2  
107C  58420000           [121] test       9       1    ; to [123] if false
1080  1A400380           [122] jmp        14           ; to [137]
1084  5D020A00           [123] getglobal  9   40       ; _T
1088  4E42CA04           [124] gettable   9   9   297  ; "PodState"
108C  4E82CA04           [125] gettable   9   9   298  ; "LastPlayed"
1090  9DC20A00           [126] getglobal  10  43       ; podAnim
fail op	35
1094  23808204           [127] close      0  
1098  1AC00180           [128] jmp        8            ; to [137]
109C  5D020000           [129] getglobal  9   0        ; gRegion
10A0  64C2C104           [130] self       9   9   263  ; -1110225722
10A4  DD020B00           [131] getglobal  11  44       ; riftJumpCompleteFx
10A8  24434204           [132] self       12  8   265  ; 1839670529
10AC  22830001           [133] call       12  2   2  
10B0  64834204           [134] self       13  8   266  ; -231049143
10B4  62030001           [135] call       13  2   0  
10B8  62420000           [136] call       9   0   1  
10BC  5D820000           [137] getglobal  9   2        ; 1074689893
10C0  9D020A00           [138] getglobal  10  40       ; _T
10C4  8E424B05           [139] gettable   10  10  301  ; "IsOperatorOnShipTutorial"
10C8  62820001           [140] call       9   2   2  
10CC  58420000           [141] test       9       1    ; to [143] if false
10D0  1A400280           [142] jmp        10           ; to [153]
10D4  5D020A00           [143] getglobal  9   40       ; _T
10D8  4E42CB04           [144] gettable   9   9   301  ; "IsOperatorOnShipTutorial"
10DC  58020000           [145] test       9       0    ; to [147] if true
10E0  1A400180           [146] jmp        6            ; to [153]
10E4  64824B04           [147] self       9   8   302  ; -818780724
10E8  D7020000           [148] loadbool   11  0   0    ; false
10EC  62428001           [149] call       9   3   1  
10F0  64C24B04           [150] self       9   8   303  ; 1692428613
10F4  D7020000           [151] loadbool   11  0   0    ; false
10F8  62428001           [152] call       9   3   1  
10FC  5D020000           [153] getglobal  9   0        ; gRegion
1100  6402CC04           [154] self       9   9   304  ; -1456226250
1104  62820001           [155] call       9   2   2  
1108  4E42CC04           [156] gettable   9   9   305  ; "postProcess"
110C  4CC24C99           [157] settable   9   306 307  ; "fade" 0
1110  A442C300           [158] self       10  1   269  ; 630793108
1114  13030001           [159] getupval   12  2      
1118  52030000           [160] move       13  0      
111C  97030000           [161] loadbool   14  0   0    ; false
1120  22838001           [162] call       12  3   2  
1124  57030000           [163] loadbool   13  0   0    ; false
1128  A2420002           [164] call       10  4   1  
112C  9D820000           [165] getglobal  10  2        ; 1074689893
1130  DD020A00           [166] getglobal  11  40       ; _T
1134  CE42CA05           [167] gettable   11  11  297  ; "PodState"
1138  A2820001           [168] call       10  2   2  
113C  98420000           [169] test       10      1    ; to [171] if false
1140  1A800480           [170] jmp        19           ; to [190]
1144  9D820000           [171] getglobal  10  2        ; 1074689893
1148  DD020A00           [172] getglobal  11  40       ; _T
114C  CE42CA05           [173] gettable   11  11  297  ; "PodState"
1150  CE82CA05           [174] gettable   11  11  298  ; "LastPlayed"
1154  A2820001           [175] call       10  2   2  
1158  98420000           [176] test       10      1    ; to [178] if false
115C  1AC00280           [177] jmp        12           ; to [190]
1160  9D820000           [178] getglobal  10  2        ; 1074689893
1164  DD020A00           [179] getglobal  11  40       ; _T
1168  CE42CA05           [180] gettable   11  11  297  ; "PodState"
116C  CE02CD05           [181] gettable   11  11  308  ; "Status"
1170  A2820001           [182] call       10  2   2  
1174  98420000           [183] test       10      1    ; to [185] if false
1178  1A000180           [184] jmp        5            ; to [190]
117C  9D020A00           [185] getglobal  10  40       ; _T
1180  8E424A05           [186] gettable   10  10  297  ; "PodState"
1184  8E024D05           [187] gettable   10  10  308  ; "Status"
fail op	35
1188  23404805           [188] close      0  
118C  1A400280           [189] jmp        10           ; to [200]
1190  9D020A00           [190] getglobal  10  40       ; _T
1194  8E424A05           [191] gettable   10  10  297  ; "PodState"
1198  DD820D00           [192] getglobal  11  54       ; closePodAnim
119C  8CC2829A           [193] settable   10  309 11   ; "PendingAnimation"
11A0  9D020A00           [194] getglobal  10  40       ; _T
11A4  8E424A05           [195] gettable   10  10  297  ; "PodState"
11A8  8C42C89B           [196] settable   10  311 289  ; "RateOverride" 0
11AC  9D020A00           [197] getglobal  10  40       ; _T
11B0  8E424A05           [198] gettable   10  10  297  ; "PodState"
11B4  8CC24C9A           [199] settable   10  308 307  ; "Status" 0
11B8  1E008000           [200] return     0   1      
                         * constants:
11BC  38                 sizek (56)
11BD  04                 const type 4
11BE  08                 string size (8)
11BF  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
11C7  01                 const type 3
11C8  14B92C37           const [1]: (925677844)
11CC  01                 const type 3
11CD  65770E40           const [2]: (1074689893)
11D1  01                 const type 3
11D2  0567E793           const [3]: (-1813551355)
11D6  01                 const type 3
11D7  D953748F           const [4]: (-1888201767)
11DB  01                 const type 3
11DC  F7FD5243           const [5]: (1129512439)
11E0  04                 const type 4
11E1  14                 string size (20)
11E2  626C6F636B696E67+  "blocking"
11EA  496E70757446696C+  "InputFil"
11F2  74657200           "ter\0"
                         const [6]: "blockingInputFilter"
11F6  01                 const type 3
11F7  C64CD3BD           const [7]: (-1110225722)
11FB  04                 const type 4
11FC  1A                 string size (26)
11FD  6F70657261746F72+  "operator"
1205  5472616E73666572+  "Transfer"
120D  656E63654F757446+  "enceOutF"
1215  7800               "x\0"
                         const [8]: "operatorTransferenceOutFx"
1217  01                 const type 3
1218  0125A76D           const [9]: (1839670529)
121C  01                 const type 3
121D  49783AF2           const [10]: (-231049143)
1221  01                 const type 3
1222  F26E43AB           const [11]: (-1421644046)
1226  04                 const type 4
1227  0D                 string size (13)
1228  454D5054595F5359+  "EMPTY_SY"
1230  4D424F4C00         "MBOL\0"
                         const [12]: "EMPTY_SYMBOL"
1235  01                 const type 3
1236  94239925           const [13]: (630793108)
123A  04                 const type 4
123B  17                 string size (23)
123C  7761726672616D65+  "warframe"
1244  546F4F7065726174+  "ToOperat"
124C  6F7242616E6B00     "orBank\0"
                         const [14]: "warframeToOperatorBank"
1253  01                 const type 3
1254  EA911120           const [15]: (538022378)
1258  03                 const type 3
1259  9A99193F           const [16]: (-102)
125D  01                 const type 3
125E  3A4D6C4B           const [17]: (1265388858)
1262  01                 const type 3
1263  5B825020           const [18]: (542147163)
1267  01                 const type 3
1268  F5EA977A           const [19]: (2056776437)
126C  04                 const type 4
126D  07                 string size (7)
126E  456E67696E6500     "Engine\0"
                         const [20]: "Engine"
1275  04                 const type 4
1276  14                 string size (20)
1277  41544D4D5F504859+  "ATMM_PHY"
127F  534943535F445249+  "SICS_DRI"
1287  56454E00           "VEN\0"
                         const [21]: "ATMM_PHYSICS_DRIVEN"
128B  04                 const type 4
128C  09                 string size (9)
128D  5052545F4F4E4345+  "PRT_ONCE"
1295  00                 "\0"
                         const [22]: "PRT_ONCE"
1296  04                 const type 4
1297  0B                 string size (11)
1298  6747616D6552756C+  "gGameRul"
12A0  657300             "es\0"
                         const [23]: "gGameRules"
12A3  04                 const type 4
12A4  07                 string size (7)
12A5  47657450657400     "GetPet\0"
                         const [24]: "GetPet"
12AC  01                 const type 3
12AD  CC1CBD05           const [25]: (96279756)
12B1  04                 const type 4
12B2  0B                 string size (11)
12B3  4C6F7475735F4761+  "Lotus_Ga"
12BB  6D6500             "me\0"
                         const [26]: "Lotus_Game"
12BE  04                 const type 4
12BF  0B                 string size (11)
12C0  5045545F4B554252+  "PET_KUBR"
12C8  4F5700             "OW\0"
                         const [27]: "PET_KUBROW"
12CB  01                 const type 3
12CC  61F01DDA           const [28]: (-635572127)
12D0  01                 const type 3
12D1  3F74C2D4           const [29]: (-725453761)
12D5  01                 const type 3
12D6  12066FA7           const [30]: (-1485896174)
12DA  01                 const type 3
12DB  1A4B27EC           const [31]: (-332969190)
12DF  04                 const type 4
12E0  15                 string size (21)
12E1  4F70657261746F72+  "Operator"
12E9  537061776E436F6E+  "SpawnCon"
12F1  74726F6C00         "trol\0"
                         const [32]: "OperatorSpawnControl"
12F6  03                 const type 3
12F7  0000803F           const [33]: (0)
12FB  01                 const type 3
12FC  5BF410BC           const [34]: (-1139739557)
1300  01                 const type 3
1301  0344B180           const [35]: (-2135866365)
1305  01                 const type 3
1306  03E7217B           const [36]: (2065819395)
130A  01                 const type 3
130B  3E7D207E           const [37]: (2116058430)
130F  01                 const type 3
1310  625C8C21           const [38]: (562846818)
1314  03                 const type 3
1315  0000F041           const [39]: (0)
1319  04                 const type 4
131A  03                 string size (3)
131B  5F5400             "_T\0"
                         const [40]: "_T"
131E  04                 const type 4
131F  09                 string size (9)
1320  506F645374617465+  "PodState"
1328  00                 "\0"
                         const [41]: "PodState"
1329  04                 const type 4
132A  0B                 string size (11)
132B  4C617374506C6179+  "LastPlay"
1333  656400             "ed\0"
                         const [42]: "LastPlayed"
1336  04                 const type 4
1337  08                 string size (8)
1338  706F64416E696D00   "podAnim\0"
                         const [43]: "podAnim"
1340  04                 const type 4
1341  13                 string size (19)
1342  726966744A756D70+  "riftJump"
134A  436F6D706C657465+  "Complete"
1352  467800             "Fx\0"
                         const [44]: "riftJumpCompleteFx"
1355  04                 const type 4
1356  19                 string size (25)
1357  49734F7065726174+  "IsOperat"
135F  6F724F6E53686970+  "orOnShip"
1367  5475746F7269616C+  "Tutorial"
136F  00                 "\0"
                         const [45]: "IsOperatorOnShipTutorial"
1370  01                 const type 3
1371  CC6532CF           const [46]: (-818780724)
1375  01                 const type 3
1376  4569E064           const [47]: (1692428613)
137A  01                 const type 3
137B  36C033A9           const [48]: (-1456226250)
137F  04                 const type 4
1380  0C                 string size (12)
1381  706F737450726F63+  "postProc"
1389  65737300           "ess\0"
                         const [49]: "postProcess"
138D  04                 const type 4
138E  05                 string size (5)
138F  6661646500         "fade\0"
                         const [50]: "fade"
1394  03                 const type 3
1395  00000000           const [51]: (0)
1399  04                 const type 4
139A  07                 string size (7)
139B  53746174757300     "Status\0"
                         const [52]: "Status"
13A2  04                 const type 4
13A3  11                 string size (17)
13A4  50656E64696E6741+  "PendingA"
13AC  6E696D6174696F6E+  "nimation"
13B4  00                 "\0"
                         const [53]: "PendingAnimation"
13B5  04                 const type 4
13B6  0D                 string size (13)
13B7  636C6F7365506F64+  "closePod"
13BF  416E696D00         "Anim\0"
                         const [54]: "closePodAnim"
13C4  04                 const type 4
13C5  0D                 string size (13)
13C6  526174654F766572+  "RateOver"
13CE  7269646500         "ride\0"
                         const [55]: "RateOverride"
                         * functions:
13D3  00                 sizep (0)
                         * lines:
13D5  01                 sizelineinfo (200)
                         [pc] (line)
13D6  B7                 [001] (-73)
13D7  00                 [002] (-73)
13D8  00                 [003] (-73)
13D9  00                 [004] (-72)
13DA  B7                 [005] (-72)
13DB  00                 [006] (-72)
13DC  00                 [007] (-72)
13DD  00                 [008] (-72)
13DE  B7                 [009] (-71)
13DF  00                 [010] (-68)
13E0  00                 [011] (-68)
13E1  00                 [012] (-67)
13E2  B8                 [013] (-67)
13E3  00                 [014] (-67)
13E4  00                 [015] (-67)
13E5  00                 [016] (-67)
13E6  B8                 [017] (-66)
13E7  00                 [018] (-63)
13E8  00                 [019] (-63)
13E9  00                 [020] (-62)
13EA  B8                 [021] (-62)
13EB  00                 [022] (-62)
13EC  00                 [023] (-62)
13ED  00                 [024] (-62)
13EE  B8                 [025] (-61)
13EF  00                 [026] (-57)
13F0  00                 [027] (-57)
13F1  00                 [028] (-57)
13F2  B8                 [029] (-56)
13F3  00                 [030] (-56)
13F4  00                 [031] (-56)
13F5  00                 [032] (-56)
13F6  B9                 [033] (-56)
13F7  00                 [034] (-56)
13F8  00                 [035] (-56)
13F9  00                 [036] (-56)
13FA  BC                 [037] (-55)
13FB  00                 [038] (-55)
13FC  00                 [039] (-55)
13FD  00                 [040] (-55)
13FE  BC                 [041] (-54)
13FF  00                 [042] (-54)
1400  00                 [043] (-54)
1401  00                 [044] (-54)
1402  BD                 [045] (-53)
1403  00                 [046] (-53)
1404  00                 [047] (-53)
1405  00                 [048] (-52)
1406  BD                 [049] (-52)
1407  00                 [050] (-52)
1408  00                 [051] (-50)
1409  00                 [052] (-50)
140A  BD                 [053] (-50)
140B  00                 [054] (-49)
140C  00                 [055] (-49)
140D  00                 [056] (-49)
140E  BD                 [057] (-49)
140F  00                 [058] (-49)
1410  00                 [059] (-49)
1411  00                 [060] (-49)
1412  BD                 [061] (-49)
1413  00                 [062] (-49)
1414  00                 [063] (-47)
1415  00                 [064] (-47)
1416  BE                 [065] (-47)
1417  00                 [066] (-47)
1418  00                 [067] (-47)
1419  00                 [068] (-47)
141A  C1                 [069] (-46)
141B  00                 [070] (-46)
141C  00                 [071] (-46)
141D  00                 [072] (-46)
141E  C1                 [073] (-46)
141F  00                 [074] (-45)
1420  00                 [075] (-45)
1421  00                 [076] (-45)
1422  C2                 [077] (-45)
1423  00                 [078] (-45)
1424  00                 [079] (-44)
1425  00                 [080] (-44)
1426  C2                 [081] (-44)
1427  00                 [082] (-39)
1428  00                 [083] (-39)
1429  00                 [084] (-38)
142A  C2                 [085] (-38)
142B  00                 [086] (-38)
142C  00                 [087] (-38)
142D  00                 [088] (-38)
142E  C2                 [089] (-38)
142F  00                 [090] (-37)
1430  00                 [091] (-37)
1431  00                 [092] (-37)
1432  C2                 [093] (-37)
1433  00                 [094] (-37)
1434  00                 [095] (-36)
1435  00                 [096] (-35)
1436  C3                 [097] (-35)
1437  00                 [098] (-34)
1438  00                 [099] (-34)
1439  00                 [100] (-33)
143A  C7                 [101] (-33)
143B  00                 [102] (-33)
143C  00                 [103] (-33)
143D  00                 [104] (-32)
143E  C7                 [105] (-32)
143F  00                 [106] (-32)
1440  00                 [107] (-31)
1441  00                 [108] (-31)
1442  C7                 [109] (-31)
1443  00                 [110] (-31)
1444  00                 [111] (-31)
1445  00                 [112] (-31)
1446  C8                 [113] (-31)
1447  00                 [114] (-31)
1448  00                 [115] (-31)
1449  00                 [116] (-31)
144A  C8                 [117] (-31)
144B  00                 [118] (-31)
144C  00                 [119] (-31)
144D  00                 [120] (-31)
144E  C8                 [121] (-31)
144F  00                 [122] (-31)
1450  00                 [123] (-31)
1451  00                 [124] (-31)
1452  C8                 [125] (-31)
1453  00                 [126] (-31)
1454  00                 [127] (-31)
1455  00                 [128] (-31)
1456  C8                 [129] (-30)
1457  00                 [130] (-30)
1458  00                 [131] (-30)
1459  00                 [132] (-30)
145A  C8                 [133] (-30)
145B  00                 [134] (-30)
145C  00                 [135] (-30)
145D  00                 [136] (-30)
145E  C8                 [137] (-28)
145F  00                 [138] (-28)
1460  00                 [139] (-28)
1461  00                 [140] (-28)
1462  C8                 [141] (-28)
1463  00                 [142] (-28)
1464  00                 [143] (-28)
1465  00                 [144] (-28)
1466  C9                 [145] (-28)
1467  00                 [146] (-28)
1468  00                 [147] (-27)
1469  00                 [148] (-27)
146A  C9                 [149] (-27)
146B  00                 [150] (-26)
146C  00                 [151] (-26)
146D  00                 [152] (-26)
146E  C9                 [153] (-21)
146F  00                 [154] (-21)
1470  00                 [155] (-21)
1471  00                 [156] (-21)
1472  C9                 [157] (-20)
1473  00                 [158] (-18)
1474  00                 [159] (-18)
1475  00                 [160] (-18)
1476  CA                 [161] (-18)
1477  00                 [162] (-18)
1478  00                 [163] (-18)
1479  00                 [164] (-18)
147A  CA                 [165] (-15)
147B  00                 [166] (-15)
147C  00                 [167] (-15)
147D  00                 [168] (-15)
147E  CA                 [169] (-15)
147F  00                 [170] (-15)
1480  00                 [171] (-15)
1481  00                 [172] (-15)
1482  CA                 [173] (-15)
1483  00                 [174] (-15)
1484  00                 [175] (-15)
1485  00                 [176] (-15)
1486  CB                 [177] (-15)
1487  00                 [178] (-15)
1488  00                 [179] (-15)
1489  00                 [180] (-15)
148A  CB                 [181] (-15)
148B  00                 [182] (-15)
148C  00                 [183] (-15)
148D  00                 [184] (-15)
148E  CB                 [185] (-15)
148F  00                 [186] (-15)
1490  00                 [187] (-15)
1491  00                 [188] (-15)
1492  CC                 [189] (-15)
1493  00                 [190] (-14)
1494  00                 [191] (-14)
1495  00                 [192] (-14)
1496  CC                 [193] (-14)
1497  00                 [194] (-13)
1498  00                 [195] (-13)
1499  00                 [196] (-13)
149A  CC                 [197] (-12)
149B  00                 [198] (-12)
149C  00                 [199] (-12)
149D  00                 [200] (-10)
                         * locals:
16F6  00                 sizelocvars (0)
                         * upvalues:
16F7  00                 sizeupvalues (0)
                         ** end of function **

                         
16F8                     ** function [7] definition (level 2)
                         ** start of function **
16F8  00                 string size (0)
                         source name: (none)
16FA  01                 line defined (248)
16FB  EC                 last line defined (364)
16FC  02                 nups (1)
16FD  01                 numparams (1)
16FE  01                 is_vararg (0)
16FF  00                 maxstacksize (26)
                         * code:
1702  02                 sizecode (311)
1703  5D000000           [001] getglobal  1   0        ; gRegion
1707  6440C000           [002] self       1   1   257  ; 152279552
170B  DD800000           [003] getglobal  3   2        ; shipAvatarType
170F  62808001           [004] call       1   3   2  
1713  9DC00000           [005] getglobal  2   3        ; 1074689893
1717  D2008000           [006] move       3   1      
171B  A2800001           [007] call       2   2   2  
171F  98400000           [008] test       2       1    ; to [10] if false
1723  1A004B80           [009] jmp        301          ; to [311]
1727  9DC00000           [010] getglobal  2   3        ; 1074689893
172B  CE00C100           [011] gettable   3   1   260  ; 0
172F  A2800001           [012] call       2   2   2  
1733  98400000           [013] test       2       1    ; to [15] if false
1737  1AC04980           [014] jmp        296          ; to [311]
173B  9DC00000           [015] getglobal  2   3        ; 1074689893
173F  E4404100           [016] self       3   0   261  ; 1525877273
1743  E2000001           [017] call       3   2   0  
1747  A2800000           [018] call       2   0   2  
174B  98400000           [019] test       2       1    ; to [21] if false
174F  1A404880           [020] jmp        290          ; to [311]
1753  8E00C100           [021] gettable   2   1   260  ; 0
1757  DD000000           [022] getglobal  3   0        ; gRegion
175B  E480C101           [023] self       3   3   262  ; 925677844
175F  E2800001           [024] call       3   2   2  
1763  24C1C101           [025] self       4   3   263  ; -2135866365
1767  22810001           [026] call       4   2   2  
176B  64014202           [027] self       5   4   264  ; 2056776437
176F  DD410200           [028] getglobal  7   9        ; powerSuitCollapsedAnim
1773  17020000           [029] loadbool   8   0   0    ; false
1777  5D820200           [030] getglobal  9   10       ; Engine
177B  4EC2C204           [031] gettable   9   9   267  ; "ATMM_PHYSICS_DRIVEN"
177F  9D820200           [032] getglobal  10  10       ; Engine
1783  8E024305           [033] gettable   10  10  268  ; "PRT_FREEZE"
1787  D7028000           [034] loadbool   11  1   0    ; true
178B  62418003           [035] call       5   7   1  
178F  5D410300           [036] getglobal  5   13       ; _T
1793  4E81C302           [037] gettable   5   5   270  ; "HideTransferenceFx"
1797  58410000           [038] test       5       1    ; to [40] if false
179B  1AC00380           [039] jmp        16           ; to [56]
179F  5D010000           [040] getglobal  5   0        ; gRegion
17A3  64C1C302           [041] self       5   5   271  ; -1110225722
17A7  DD010400           [042] getglobal  7   16       ; warframeToOperatorFx
17AB  24424402           [043] self       8   4   273  ; 1839670529
17AF  22820001           [044] call       8   2   2  
17B3  64824402           [045] self       9   4   274  ; -231049143
17B7  62020001           [046] call       9   2   0  
17BB  62810000           [047] call       5   0   2  
17BF  A4C14402           [048] self       6   4   275  ; -1421644046
17C3  12028002           [049] move       8   5      
17C7  5D020500           [050] getglobal  9   20       ; EMPTY_SYMBOL
17CB  A2410002           [051] call       6   4   1  
17CF  93010000           [052] getupval   6   0      
17D3  8E414503           [053] gettable   6   6   277  ; 630793108
17D7  DD810500           [054] getglobal  7   22       ; operatorToWarframeBank
17DB  A2410001           [055] call       6   2   1  
17DF  9DC10500           [056] getglobal  6   23       ; 538022378
17E3  D9010600           [057] loadk      7   24       ; 0
17E7  A2410001           [058] call       6   2   1  
17EB  A4414601           [059] self       6   2   281  ; 1129512439
17EF  1D820600           [060] getglobal  8   26       ; blockingInputFilter
17F3  A2418001           [061] call       6   3   1  
17F7  9D010000           [062] getglobal  6   0        ; gRegion
17FB  A4C14603           [063] self       6   6   283  ; -1456226250
17FF  A2810001           [064] call       6   2   2  
1803  8E014703           [065] gettable   6   6   284  ; "postProcess"
1807  D9010100           [066] loadk      7   4        ; 0
180B  1D420300           [067] getglobal  8   13       ; _T
180F  0E824304           [068] gettable   8   8   270  ; "HideTransferenceFx"
1813  18420000           [069] test       8       1    ; to [71] if false
1817  1AC00380           [070] jmp        16           ; to [87]
181B  19420700           [071] loadk      8   29       ; 0
fail op	21
181F  15C00104           [072] concat     0   8   7  
1823  1A000380           [073] jmp        13           ; to [87]
1827  5DC20500           [074] getglobal  9   23       ; 538022378
182B  99420700           [075] loadk      10  29       ; 0
182F  62420001           [076] call       9   2   1  
1833  5D820700           [077] getglobal  9   30       ; 1289681407
1837  62828000           [078] call       9   1   2  
183B  03420204           [079] add        8   8   9  
183F  5D020800           [080] getglobal  9   32       ; -1828500651
1843  99420700           [081] loadk      10  29       ; 0
1847  D9020100           [082] loadk      11  4        ; 0
184B  1CC30104           [083] div        12  8   7  
184F  62820002           [084] call       9   4   2  
1853  8C41828F           [085] settable   6   287 9    ; "fade"
1857  1A00FC7F           [086] jmp        -15          ; to [72]
185B  64024201           [087] self       9   2   264  ; 2056776437
185F  C6028005           [088] loadnil    11  11     
1863  17030000           [089] loadbool   12  0   0    ; false
1867  5D830200           [090] getglobal  13  10       ; Engine
186B  4E43C806           [091] gettable   13  13  289  ; "ATMM_ANIMATION_DRIVEN"
186F  9D830200           [092] getglobal  14  10       ; Engine
1873  8E834807           [093] gettable   14  14  290  ; "PRT_ONCE"
1877  D7038000           [094] loadbool   15  1   0    ; true
187B  62428003           [095] call       9   7   1  
187F  5DC20800           [096] getglobal  9   35       ; 572299008
1883  99420700           [097] loadk      10  29       ; 0
1887  D9420700           [098] loadk      11  29       ; 0
188B  19030100           [099] loadk      12  4        ; 0
188F  62820002           [100] call       9   4   2  
1893  A4424401           [101] self       10  2   273  ; 1839670529
1897  A2820001           [102] call       10  2   2  
189B  C402C904           [103] mul        11  9   292  ; 0
189F  83C20205           [104] add        10  10  11 
18A3  CE424905           [105] gettable   11  10  293  ; "y"
18A7  C302C105           [106] add        11  11  260  ; 0
18AB  8CC28292           [107] settable   10  293 11   ; "y"
18AF  E442C101           [108] self       11  3   261  ; 1525877273
18B3  E2820001           [109] call       11  2   2  
18B7  2483C905           [110] self       12  11  294  ; -1705858434
18BB  22830001           [111] call       12  2   2  
18BF  46038006           [112] loadnil    13  13     
18C3  9D430300           [113] getglobal  14  13       ; _T
18C7  8EC34907           [114] gettable   14  14  295  ; "OverrideTransferencePos"
18CB  98430000           [115] test       14      1    ; to [117] if false
18CF  1A400480           [116] jmp        18           ; to [135]
18D3  A403CA05           [117] self       14  11  296  ; -2032683784
18D7  12040001           [118] move       16  2      
18DB  A2438001           [119] call       14  3   1  
18DF  9D030000           [120] getglobal  14  0        ; gRegion
18E3  A4C34307           [121] self       14  14  271  ; -1110225722
18E7  1D440A00           [122] getglobal  16  41       ; podCameraSpotType
18EB  52040005           [123] move       17  10     
18EF  9D840A00           [124] getglobal  18  42       ; ZERO_ROTATION
18F3  A2838002           [125] call       14  5   2  
18F7  52030007           [126] move       13  14     
18FB  A4C3CA06           [127] self       14  13  299  ; -1862702724
18FF  24444401           [128] self       16  2   273  ; 1839670529
1903  22040001           [129] call       16  2   0  
1907  A2430000           [130] call       14  0   1  
190B  A403CB05           [131] self       14  11  300  ; 1362416700
190F  12048006           [132] move       16  13     
1913  59440700           [133] loadk      17  29       ; 0
1917  A2430002           [134] call       14  4   1  
191B  A4434B01           [135] self       14  2   301  ; 1671500871
191F  A2430001           [136] call       14  2   1  
1923  A483CB01           [137] self       14  3   302  ; 542147163
1927  12040001           [138] move       16  2      
192B  57040000           [139] loadbool   17  0   0    ; false
192F  A2430002           [140] call       14  4   1  
1933  9D430300           [141] getglobal  14  13       ; _T
1937  8EC34907           [142] gettable   14  14  295  ; "OverrideTransferencePos"
193B  98430000           [143] test       14      1    ; to [145] if false
193F  1A400280           [144] jmp        10           ; to [155]
1943  A443C101           [145] self       14  3   261  ; 1525877273
1947  A2830001           [146] call       14  2   2  
194B  D2020007           [147] move       11  14     
194F  A4C3CB05           [148] self       14  11  303  ; 1071098030
1953  19440700           [149] loadk      16  29       ; 0
1957  A2438001           [150] call       14  3   1  
195B  A403CB05           [151] self       14  11  300  ; 1362416700
195F  12048006           [152] move       16  13     
1963  59440700           [153] loadk      17  29       ; 0
1967  A2430002           [154] call       14  4   1  
196B  9DC30000           [155] getglobal  14  3        ; 1074689893
196F  DD430300           [156] getglobal  15  13       ; _T
1973  CE03CC07           [157] gettable   15  15  304  ; "PodState"
1977  A2830001           [158] call       14  2   2  
197B  98430000           [159] test       14      1    ; to [161] if false
197F  1A800480           [160] jmp        19           ; to [180]
1983  9DC30000           [161] getglobal  14  3        ; 1074689893
1987  DD430300           [162] getglobal  15  13       ; _T
198B  CE03CC07           [163] gettable   15  15  304  ; "PodState"
198F  CE43CC07           [164] gettable   15  15  305  ; "LastPlayed"
1993  A2830001           [165] call       14  2   2  
1997  98430000           [166] test       14      1    ; to [168] if false
199B  1AC00280           [167] jmp        12           ; to [180]
199F  9DC30000           [168] getglobal  14  3        ; 1074689893
19A3  DD430300           [169] getglobal  15  13       ; _T
19A7  CE03CC07           [170] gettable   15  15  304  ; "PodState"
19AB  CE83CC07           [171] gettable   15  15  306  ; "Status"
19AF  A2830001           [172] call       14  2   2  
19B3  98430000           [173] test       14      1    ; to [175] if false
19B7  1A000180           [174] jmp        5            ; to [180]
19BB  9D430300           [175] getglobal  14  13       ; _T
19BF  8E034C07           [176] gettable   14  14  304  ; "PodState"
19C3  8E834C07           [177] gettable   14  14  306  ; "Status"
fail op	35
19C7  23404707           [178] close      0  
19CB  1A400280           [179] jmp        10           ; to [190]
19CF  9D430300           [180] getglobal  14  13       ; _T
19D3  8E034C07           [181] gettable   14  14  304  ; "PodState"
19D7  DD030D00           [182] getglobal  15  52       ; podAnim
19DB  8CC38399           [183] settable   14  307 15   ; "PendingAnimation"
19DF  9D430300           [184] getglobal  14  13       ; _T
19E3  8E034C07           [185] gettable   14  14  304  ; "PodState"
19E7  8C83CD9A           [186] settable   14  309 310  ; "RateOverride" 0
19EB  9D430300           [187] getglobal  14  13       ; _T
19EF  8E034C07           [188] gettable   14  14  304  ; "PodState"
19F3  8C034199           [189] settable   14  306 260  ; "Status" 0
19F7  9D430300           [190] getglobal  14  13       ; _T
19FB  8EC34907           [191] gettable   14  14  295  ; "OverrideTransferencePos"
19FF  98430000           [192] test       14      1    ; to [194] if false
1A03  1AC00080           [193] jmp        4            ; to [198]
1A07  E4434401           [194] self       15  2   273  ; 1839670529
1A0B  E2830001           [195] call       15  2   2  
1A0F  04C4CD04           [196] mul        16  9   311  ; 0
1A13  83038407           [197] add        14  15  16 
1A17  E4034E01           [198] self       15  2   312  ; 970454089
1A1B  52040007           [199] move       17  14     
1A1F  E2438001           [200] call       15  3   1  
1A23  E4434E01           [201] self       15  2   313  ; -1917464545
1A27  E2830001           [202] call       15  2   2  
1A2B  2484CE07           [203] self       16  15  314  ; 1769516121
1A2F  22840001           [204] call       16  2   2  
1A33  64C44E08           [205] self       17  16  315  ; -1348043987
1A37  62840001           [206] call       17  2   2  
1A3B  A404CF08           [207] self       18  17  316  ; -1592023674
1A3F  19050100           [208] loadk      20  4        ; 0
1A43  A2848001           [209] call       18  3   2  
1A47  DD440F00           [210] getglobal  19  61       ; shipAnimController
1A4B  1DC50000           [211] getglobal  20  3        ; 1074689893
1A4F  52050009           [212] move       21  18     
1A53  22850001           [213] call       20  2   2  
1A57  18450000           [214] test       20      1    ; to [216] if false
1A5B  1A400180           [215] jmp        6            ; to [222]
1A5F  24854F09           [216] self       20  18  318  ; -1957065004
1A63  9DC50F00           [217] getglobal  22  63       ; femaleBodySkin
1A67  22858001           [218] call       20  3   2  
1A6B  18050000           [219] test       20      0    ; to [221] if true
1A6F  1A000080           [220] jmp        1            ; to [222]
1A73  DD041000           [221] getglobal  19  64       ; femaleShipAnimController
1A77  24455008           [222] self       20  16  321  ; 905349177
1A7B  97050000           [223] loadbool   22  0   0    ; false
1A7F  22458001           [224] call       20  3   1  
1A83  24855001           [225] self       20  2   322  ; -389013178
1A87  92058009           [226] move       22  19     
1A8B  22458001           [227] call       20  3   1  
1A8F  1DC50000           [228] getglobal  20  3        ; 1074689893
1A93  5DC51000           [229] getglobal  21  67       ; gGameRules
1A97  4E05D10A           [230] gettable   21  21  324  ; "GetPet"
1A9B  22850001           [231] call       20  2   2  
1A9F  18450000           [232] test       20      1    ; to [234] if false
1AA3  1A000380           [233] jmp        13           ; to [247]
1AA7  1DC51000           [234] getglobal  20  67       ; gGameRules
1AAB  2445510A           [235] self       20  20  325  ; 96279756
1AAF  9D851100           [236] getglobal  22  70       ; Lotus_Game
1AB3  8EC5510B           [237] gettable   22  22  327  ; "PET_KUBROW"
1AB7  22858001           [238] call       20  3   2  
1ABB  5DC50000           [239] getglobal  21  3        ; 1074689893
1ABF  9205000A           [240] move       22  20     
1AC3  62850001           [241] call       21  2   2  
1AC7  58450000           [242] test       21      1    ; to [244] if false
1ACB  1A800080           [243] jmp        3            ; to [247]
1ACF  6405520A           [244] self       21  20  328  ; -635572127
1AD3  D2050001           [245] move       23  2      
1AD7  62458001           [246] call       21  3   1  
1ADB  5D450300           [247] getglobal  21  13       ; _T
1ADF  4EC5C90A           [248] gettable   21  21  295  ; "OverrideTransferencePos"
1AE3  58450000           [249] test       21      1    ; to [251] if false
1AE7  1AC00180           [250] jmp        8            ; to [259]
1AEB  64C5CB05           [251] self       21  11  303  ; 1071098030
1AEF  D2050006           [252] move       23  12     
1AF3  62458001           [253] call       21  3   1  
1AF7  6405CB05           [254] self       21  11  300  ; 1362416700
1AFB  C605800B           [255] loadnil    23  23     
1AFF  62458001           [256] call       21  3   1  
1B03  6445D206           [257] self       21  13  329  ; -725453761
1B07  62450001           [258] call       21  2   1  
1B0B  64855201           [259] self       21  2   330  ; 1292478819
1B0F  62850001           [260] call       21  2   2  
1B13  64C5D20A           [261] self       21  21  331  ; -1967775551
1B17  D7058000           [262] loadbool   23  1   0    ; true
1B1B  62458001           [263] call       21  3   1  
1B1F  64055302           [264] self       21  4   332  ; 1265388858
1B23  DD451300           [265] getglobal  23  77       ; powerMenuInputFilter
1B27  62458001           [266] call       21  3   1  
1B2B  64055301           [267] self       21  2   332  ; 1265388858
1B2F  DD850600           [268] getglobal  23  26       ; blockingInputFilter
1B33  62458001           [269] call       21  3   1  
1B37  64855301           [270] self       21  2   334  ; 1479835399
1B3B  DDC51300           [271] getglobal  23  79       ; weaponType
1B3F  17068000           [272] loadbool   24  1   0    ; true
1B43  62450002           [273] call       21  4   1  
1B47  6405D407           [274] self       21  15  336  ; 688774453
1B4B  DD850200           [275] getglobal  23  10       ; Engine
1B4F  CE45D40B           [276] gettable   23  23  337  ; "SLOT_2"
1B53  1D860200           [277] getglobal  24  10       ; Engine
1B57  0E86540C           [278] gettable   24  24  338  ; "MAIN_HAND"
1B5B  5D860200           [279] getglobal  25  10       ; Engine
1B5F  4EC6D40C           [280] gettable   25  25  339  ; "InventoryControllerBase_ES_INSTANT_EQUIP"
1B63  62458002           [281] call       21  5   1  
1B67  6405D507           [282] self       21  15  340  ; 1815503922
1B6B  D7050000           [283] loadbool   23  0   0    ; false
1B6F  62458001           [284] call       21  3   1  
1B73  64454E01           [285] self       21  2   313  ; -1917464545
1B77  62850001           [286] call       21  2   2  
1B7B  6445D50A           [287] self       21  21  341  ; -1572901801
1B7F  DD850200           [288] getglobal  23  10       ; Engine
1B83  CE85D40B           [289] gettable   23  23  338  ; "MAIN_HAND"
1B87  62458001           [290] call       21  3   1  
1B8B  5D450300           [291] getglobal  21  13       ; _T
1B8F  4E85C30A           [292] gettable   21  21  270  ; "HideTransferenceFx"
1B93  58450000           [293] test       21      1    ; to [295] if false
1B97  1AC00380           [294] jmp        16           ; to [311]
1B9B  59450700           [295] loadk      21  29       ; 0
fail op	21
1B9F  15C0810A           [296] concat     0   21  7  
1BA3  1A000380           [297] jmp        13           ; to [311]
1BA7  9DC50500           [298] getglobal  22  23       ; 538022378
1BAB  D9450700           [299] loadk      23  29       ; 0
1BAF  A2450001           [300] call       22  2   1  
1BB3  9D850700           [301] getglobal  22  30       ; 1289681407
1BB7  A2858000           [302] call       22  1   2  
1BBB  4385850A           [303] add        21  21  22 
1BBF  9D050800           [304] getglobal  22  32       ; -1828500651
1BC3  D9050100           [305] loadk      23  4        ; 0
1BC7  19460700           [306] loadk      24  29       ; 0
1BCB  5CC6810A           [307] div        25  21  7  
1BCF  A2850002           [308] call       22  4   2  
1BD3  8C81858F           [309] settable   6   287 22   ; "fade"
1BD7  1A00FC7F           [310] jmp        -15          ; to [296]
1BDB  1E008000           [311] return     0   1      
                         * constants:
1BDF  56                 sizek (86)
1BE0  04                 const type 4
1BE1  08                 string size (8)
1BE2  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
1BEA  01                 const type 3
1BEB  009A1309           const [1]: (152279552)
1BEF  04                 const type 4
1BF0  0F                 string size (15)
1BF1  7368697041766174+  "shipAvat"
1BF9  61725479706500     "arType\0"
                         const [2]: "shipAvatarType"
1C00  01                 const type 3
1C01  65770E40           const [3]: (1074689893)
1C05  03                 const type 3
1C06  0000803F           const [4]: (0)
1C0A  01                 const type 3
1C0B  190AF35A           const [5]: (1525877273)
1C0F  01                 const type 3
1C10  14B92C37           const [6]: (925677844)
1C14  01                 const type 3
1C15  0344B180           const [7]: (-2135866365)
1C19  01                 const type 3
1C1A  F5EA977A           const [8]: (2056776437)
1C1E  04                 const type 4
1C1F  17                 string size (23)
1C20  706F776572537569+  "powerSui"
1C28  74436F6C6C617073+  "tCollaps"
1C30  6564416E696D00     "edAnim\0"
                         const [9]: "powerSuitCollapsedAnim"
1C37  04                 const type 4
1C38  07                 string size (7)
1C39  456E67696E6500     "Engine\0"
                         const [10]: "Engine"
1C40  04                 const type 4
1C41  14                 string size (20)
1C42  41544D4D5F504859+  "ATMM_PHY"
1C4A  534943535F445249+  "SICS_DRI"
1C52  56454E00           "VEN\0"
                         const [11]: "ATMM_PHYSICS_DRIVEN"
1C56  04                 const type 4
1C57  0B                 string size (11)
1C58  5052545F46524545+  "PRT_FREE"
1C60  5A4500             "ZE\0"
                         const [12]: "PRT_FREEZE"
1C63  04                 const type 4
1C64  03                 string size (3)
1C65  5F5400             "_T\0"
                         const [13]: "_T"
1C68  04                 const type 4
1C69  13                 string size (19)
1C6A  486964655472616E+  "HideTran"
1C72  73666572656E6365+  "sference"
1C7A  467800             "Fx\0"
                         const [14]: "HideTransferenceFx"
1C7D  01                 const type 3
1C7E  C64CD3BD           const [15]: (-1110225722)
1C82  04                 const type 4
1C83  15                 string size (21)
1C84  7761726672616D65+  "warframe"
1C8C  546F4F7065726174+  "ToOperat"
1C94  6F72467800         "orFx\0"
                         const [16]: "warframeToOperatorFx"
1C99  01                 const type 3
1C9A  0125A76D           const [17]: (1839670529)
1C9E  01                 const type 3
1C9F  49783AF2           const [18]: (-231049143)
1CA3  01                 const type 3
1CA4  F26E43AB           const [19]: (-1421644046)
1CA8  04                 const type 4
1CA9  0D                 string size (13)
1CAA  454D5054595F5359+  "EMPTY_SY"
1CB2  4D424F4C00         "MBOL\0"
                         const [20]: "EMPTY_SYMBOL"
1CB7  01                 const type 3
1CB8  94239925           const [21]: (630793108)
1CBC  04                 const type 4
1CBD  17                 string size (23)
1CBE  6F70657261746F72+  "operator"
1CC6  546F576172667261+  "ToWarfra"
1CCE  6D6542616E6B00     "meBank\0"
                         const [22]: "operatorToWarframeBank"
1CD5  01                 const type 3
1CD6  EA911120           const [23]: (538022378)
1CDA  03                 const type 3
1CDB  0000003F           const [24]: (0)
1CDF  01                 const type 3
1CE0  F7FD5243           const [25]: (1129512439)
1CE4  04                 const type 4
1CE5  14                 string size (20)
1CE6  626C6F636B696E67+  "blocking"
1CEE  496E70757446696C+  "InputFil"
1CF6  74657200           "ter\0"
                         const [26]: "blockingInputFilter"
1CFA  01                 const type 3
1CFB  36C033A9           const [27]: (-1456226250)
1CFF  04                 const type 4
1D00  0C                 string size (12)
1D01  706F737450726F63+  "postProc"
1D09  65737300           "ess\0"
                         const [28]: "postProcess"
1D0D  03                 const type 3
1D0E  00000000           const [29]: (0)
1D12  01                 const type 3
1D13  FFF9DE4C           const [30]: (1289681407)
1D17  04                 const type 4
1D18  05                 string size (5)
1D19  6661646500         "fade\0"
                         const [31]: "fade"
1D1E  01                 const type 3
1D1F  554B0393           const [32]: (-1828500651)
1D23  04                 const type 4
1D24  16                 string size (22)
1D25  41544D4D5F414E49+  "ATMM_ANI"
1D2D  4D4154494F4E5F44+  "MATION_D"
1D35  524956454E00       "RIVEN\0"
                         const [33]: "ATMM_ANIMATION_DRIVEN"
1D3B  04                 const type 4
1D3C  09                 string size (9)
1D3D  5052545F4F4E4345+  "PRT_ONCE"
1D45  00                 "\0"
                         const [34]: "PRT_ONCE"
1D46  01                 const type 3
1D47  00971C22           const [35]: (572299008)
1D4B  03                 const type 3
1D4C  00008040           const [36]: (0)
1D50  04                 const type 4
1D51  02                 string size (2)
1D52  7900               "y\0"
                         const [37]: "y"
1D54  01                 const type 3
1D55  7EAA529A           const [38]: (-1705858434)
1D59  04                 const type 4
1D5A  18                 string size (24)
1D5B  4F76657272696465+  "Override"
1D63  5472616E73666572+  "Transfer"
1D6B  656E6365506F7300   "encePos\0"
                         const [39]: "OverrideTransferencePos"
1D73  01                 const type 3
1D74  F8B4D786           const [40]: (-2032683784)
1D78  04                 const type 4
1D79  12                 string size (18)
1D7A  706F6443616D6572+  "podCamer"
1D82  6153706F74547970+  "aSpotTyp"
1D8A  6500               "e\0"
                         const [41]: "podCameraSpotType"
1D8C  04                 const type 4
1D8D  0E                 string size (14)
1D8E  5A45524F5F524F54+  "ZERO_ROT"
1D96  4154494F4E00       "ATION\0"
                         const [42]: "ZERO_ROTATION"
1D9C  01                 const type 3
1D9D  7C69F990           const [43]: (-1862702724)
1DA1  01                 const type 3
1DA2  3CD43451           const [44]: (1362416700)
1DA6  01                 const type 3
1DA7  4714A163           const [45]: (1671500871)
1DAB  01                 const type 3
1DAC  5B825020           const [46]: (542147163)
1DB0  01                 const type 3
1DB1  AEA8D73F           const [47]: (1071098030)
1DB5  04                 const type 4
1DB6  09                 string size (9)
1DB7  506F645374617465+  "PodState"
1DBF  00                 "\0"
                         const [48]: "PodState"
1DC0  04                 const type 4
1DC1  0B                 string size (11)
1DC2  4C617374506C6179+  "LastPlay"
1DCA  656400             "ed\0"
                         const [49]: "LastPlayed"
1DCD  04                 const type 4
1DCE  07                 string size (7)
1DCF  53746174757300     "Status\0"
                         const [50]: "Status"
1DD6  04                 const type 4
1DD7  11                 string size (17)
1DD8  50656E64696E6741+  "PendingA"
1DE0  6E696D6174696F6E+  "nimation"
1DE8  00                 "\0"
                         const [51]: "PendingAnimation"
1DE9  04                 const type 4
1DEA  08                 string size (8)
1DEB  706F64416E696D00   "podAnim\0"
                         const [52]: "podAnim"
1DF3  04                 const type 4
1DF4  0D                 string size (13)
1DF5  526174654F766572+  "RateOver"
1DFD  7269646500         "ride\0"
                         const [53]: "RateOverride"
1E02  03                 const type 3
1E03  0000A040           const [54]: (0)
1E07  03                 const type 3
1E08  00000040           const [55]: (0)
1E0C  01                 const type 3
1E0D  49F4D739           const [56]: (970454089)
1E11  01                 const type 3
1E12  1FD0B58D           const [57]: (-1917464545)
1E16  01                 const type 3
1E17  59AC7869           const [58]: (1769516121)
1E1B  01                 const type 3
1E1C  2D7BA6AF           const [59]: (-1348043987)
1E20  01                 const type 3
1E21  86A51BA1           const [60]: (-1592023674)
1E25  04                 const type 4
1E26  13                 string size (19)
1E27  73686970416E696D+  "shipAnim"
1E2F  436F6E74726F6C6C+  "Controll"
1E37  657200             "er\0"
                         const [61]: "shipAnimController"
1E3A  01                 const type 3
1E3B  D48E598B           const [62]: (-1957065004)
1E3F  04                 const type 4
1E40  0F                 string size (15)
1E41  66656D616C65426F+  "femaleBo"
1E49  6479536B696E00     "dySkin\0"
                         const [63]: "femaleBodySkin"
1E50  04                 const type 4
1E51  19                 string size (25)
1E52  66656D616C655368+  "femaleSh"
1E5A  6970416E696D436F+  "ipAnimCo"
1E62  6E74726F6C6C6572+  "ntroller"
1E6A  00                 "\0"
                         const [64]: "femaleShipAnimController"
1E6B  01                 const type 3
1E6C  3988F635           const [65]: (905349177)
1E70  01                 const type 3
1E71  4621D0E8           const [66]: (-389013178)
1E75  04                 const type 4
1E76  0B                 string size (11)
1E77  6747616D6552756C+  "gGameRul"
1E7F  657300             "es\0"
                         const [67]: "gGameRules"
1E82  04                 const type 4
1E83  07                 string size (7)
1E84  47657450657400     "GetPet\0"
                         const [68]: "GetPet"
1E8B  01                 const type 3
1E8C  CC1CBD05           const [69]: (96279756)
1E90  04                 const type 4
1E91  0B                 string size (11)
1E92  4C6F7475735F4761+  "Lotus_Ga"
1E9A  6D6500             "me\0"
                         const [70]: "Lotus_Game"
1E9D  04                 const type 4
1E9E  0B                 string size (11)
1E9F  5045545F4B554252+  "PET_KUBR"
1EA7  4F5700             "OW\0"
                         const [71]: "PET_KUBROW"
1EAA  01                 const type 3
1EAB  61F01DDA           const [72]: (-635572127)
1EAF  01                 const type 3
1EB0  3F74C2D4           const [73]: (-725453761)
1EB4  01                 const type 3
1EB5  63A9094D           const [74]: (1292478819)
1EB9  01                 const type 3
1EBA  C120B68A           const [75]: (-1967775551)
1EBE  01                 const type 3
1EBF  3A4D6C4B           const [76]: (1265388858)
1EC3  04                 const type 4
1EC4  15                 string size (21)
1EC5  706F7765724D656E+  "powerMen"
1ECD  75496E7075744669+  "uInputFi"
1ED5  6C74657200         "lter\0"
                         const [77]: "powerMenuInputFilter"
1EDA  01                 const type 3
1EDB  077F3458           const [78]: (1479835399)
1EDF  04                 const type 4
1EE0  0B                 string size (11)
1EE1  776561706F6E5479+  "weaponTy"
1EE9  706500             "pe\0"
                         const [79]: "weaponType"
1EEC  01                 const type 3
1EED  35DD0D29           const [80]: (688774453)
1EF1  04                 const type 4
1EF2  07                 string size (7)
1EF3  534C4F545F3200     "SLOT_2\0"
                         const [81]: "SLOT_2"
1EFA  04                 const type 4
1EFB  0A                 string size (10)
1EFC  4D41494E5F48414E+  "MAIN_HAN"
1F04  4400               "D\0"
                         const [82]: "MAIN_HAND"
1F06  04                 const type 4
1F07  29                 string size (41)
1F08  496E76656E746F72+  "Inventor"
1F10  79436F6E74726F6C+  "yControl"
1F18  6C6572426173655F+  "lerBase_"
1F20  45535F494E535441+  "ES_INSTA"
1F28  4E545F4551554950+  "NT_EQUIP"
1F30  00                 "\0"
                         const [83]: "InventoryControllerBase_ES_INSTANT_EQUIP"
1F31  01                 const type 3
1F32  3264366C           const [84]: (1815503922)
1F36  01                 const type 3
1F37  576C3FA2           const [85]: (-1572901801)
                         * functions:
1F3B  00                 sizep (0)
                         * lines:
1F3D  02                 sizelineinfo (311)
                         [pc] (line)
1F3E  F9                 [001] (-7)
1F3F  00                 [002] (-7)
1F40  00                 [003] (-7)
1F41  00                 [004] (-7)
1F42  F9                 [005] (-6)
1F43  00                 [006] (-6)
1F44  00                 [007] (-6)
1F45  00                 [008] (-6)
1F46  F9                 [009] (-6)
1F47  00                 [010] (-6)
1F48  00                 [011] (-6)
1F49  00                 [012] (-6)
1F4A  F9                 [013] (-6)
1F4B  00                 [014] (-6)
1F4C  00                 [015] (-6)
1F4D  00                 [016] (-6)
1F4E  FA                 [017] (-6)
1F4F  00                 [018] (-6)
1F50  00                 [019] (-6)
1F51  00                 [020] (-6)
1F52  FA                 [021] (-4)
1F53  00                 [022] (-1)
1F54  00                 [023] (-1)
1F55  00                 [024] (-1)
1F56  FA                 [025] (0)
1F57  00                 [026] (0)
1F58  00                 [027] (1)
1F59  00                 [028] (1)
1F5A  FA                 [029] (1)
1F5B  00                 [030] (1)
1F5C  00                 [031] (1)
1F5D  00                 [032] (1)
1F5E  FA                 [033] (1)
1F5F  00                 [034] (1)
1F60  00                 [035] (1)
1F61  00                 [036] (3)
1F62  FA                 [037] (3)
1F63  00                 [038] (3)
1F64  00                 [039] (3)
1F65  00                 [040] (4)
1F66  FA                 [041] (4)
1F67  00                 [042] (4)
1F68  00                 [043] (4)
1F69  00                 [044] (4)
1F6A  FA                 [045] (4)
1F6B  00                 [046] (4)
1F6C  00                 [047] (4)
1F6D  00                 [048] (5)
1F6E  FA                 [049] (5)
1F6F  00                 [050] (5)
1F70  00                 [051] (5)
1F71  00                 [052] (6)
1F72  FA                 [053] (6)
1F73  00                 [054] (6)
1F74  00                 [055] (6)
1F75  00                 [056] (9)
1F76  FA                 [057] (9)
1F77  00                 [058] (9)
1F78  00                 [059] (11)
1F79  00                 [060] (11)
1F7A  FA                 [061] (11)
1F7B  00                 [062] (13)
1F7C  00                 [063] (13)
1F7D  00                 [064] (13)
1F7E  FA                 [065] (13)
1F7F  00                 [066] (14)
1F80  00                 [067] (15)
1F81  00                 [068] (15)
1F82  FA                 [069] (15)
1F83  00                 [070] (15)
1F84  00                 [071] (16)
1F85  00                 [072] (17)
1F86  FA                 [073] (17)
1F87  00                 [074] (18)
1F88  00                 [075] (18)
1F89  00                 [076] (18)
1F8A  FA                 [077] (19)
1F8B  00                 [078] (19)
1F8C  00                 [079] (19)
1F8D  00                 [080] (20)
1F8E  FC                 [081] (20)
1F8F  00                 [082] (20)
1F90  00                 [083] (20)
1F91  00                 [084] (20)
1F92  FF                 [085] (20)
1F93  00                 [086] (20)
1F94  00                 [087] (25)
1F95  00                 [088] (25)
1F96  FF                 [089] (25)
1F97  00                 [090] (25)
1F98  00                 [091] (25)
1F99  00                 [092] (25)
1F9A  FF                 [093] (25)
1F9B  00                 [094] (25)
1F9C  00                 [095] (25)
1F9D  00                 [096] (27)
1F9E  00                 [097] (27)
1F9F  01                 [098] (27)
1FA0  00                 [099] (27)
1FA1  00                 [100] (27)
1FA2  00                 [101] (28)
1FA3  01                 [102] (28)
1FA4  00                 [103] (28)
1FA5  00                 [104] (28)
1FA6  01                 [105] (29)
1FA7  01                 [106] (29)
1FA8  00                 [107] (29)
1FA9  00                 [108] (30)
1FAA  01                 [109] (30)
1FAB  01                 [110] (31)
1FAC  00                 [111] (31)
1FAD  00                 [112] (32)
1FAE  01                 [113] (33)
1FAF  01                 [114] (33)
1FB0  00                 [115] (33)
1FB1  00                 [116] (33)
1FB2  01                 [117] (35)
1FB3  01                 [118] (35)
1FB4  00                 [119] (35)
1FB5  00                 [120] (36)
1FB6  01                 [121] (36)
1FB7  01                 [122] (36)
1FB8  00                 [123] (36)
1FB9  00                 [124] (36)
1FBA  01                 [125] (36)
1FBB  01                 [126] (36)
1FBC  00                 [127] (37)
1FBD  00                 [128] (37)
1FBE  01                 [129] (37)
1FBF  01                 [130] (37)
1FC0  00                 [131] (38)
1FC1  00                 [132] (38)
1FC2  01                 [133] (38)
1FC3  01                 [134] (38)
1FC4  00                 [135] (42)
1FC5  00                 [136] (42)
1FC6  01                 [137] (43)
1FC7  01                 [138] (43)
1FC8  00                 [139] (43)
1FC9  00                 [140] (43)
1FCA  03                 [141] (45)
1FCB  01                 [142] (45)
1FCC  00                 [143] (45)
1FCD  00                 [144] (45)
1FCE  03                 [145] (46)
1FCF  01                 [146] (46)
1FD0  00                 [147] (46)
1FD1  00                 [148] (47)
1FD2  03                 [149] (47)
1FD3  01                 [150] (47)
1FD4  00                 [151] (48)
1FD5  00                 [152] (48)
1FD6  03                 [153] (48)
1FD7  01                 [154] (48)
1FD8  00                 [155] (52)
1FD9  00                 [156] (52)
1FDA  04                 [157] (52)
1FDB  01                 [158] (52)
1FDC  00                 [159] (52)
1FDD  00                 [160] (52)
1FDE  04                 [161] (52)
1FDF  01                 [162] (52)
1FE0  00                 [163] (52)
1FE1  00                 [164] (52)
1FE2  04                 [165] (52)
1FE3  01                 [166] (52)
1FE4  00                 [167] (52)
1FE5  00                 [168] (52)
1FE6  04                 [169] (52)
1FE7  01                 [170] (52)
1FE8  00                 [171] (52)
1FE9  00                 [172] (52)
1FEA  04                 [173] (52)
1FEB  01                 [174] (52)
1FEC  00                 [175] (52)
1FED  00                 [176] (52)
1FEE  04                 [177] (52)
1FEF  01                 [178] (52)
1FF0  00                 [179] (52)
1FF1  00                 [180] (53)
1FF2  04                 [181] (53)
1FF3  01                 [182] (53)
1FF4  00                 [183] (53)
1FF5  00                 [184] (54)
1FF6  04                 [185] (54)
1FF7  01                 [186] (54)
1FF8  00                 [187] (55)
1FF9  00                 [188] (55)
1FFA  05                 [189] (55)
1FFB  01                 [190] (58)
1FFC  00                 [191] (58)
1FFD  00                 [192] (59)
1FFE  05                 [193] (59)
1FFF  01                 [194] (61)
2000  00                 [195] (61)
2001  00                 [196] (61)
2002  05                 [197] (61)
2003  01                 [198] (63)
2004  00                 [199] (63)
2005  00                 [200] (63)
2006  05                 [201] (66)
2007  01                 [202] (66)
2008  00                 [203] (67)
2009  00                 [204] (67)
200A  06                 [205] (68)
200B  01                 [206] (68)
200C  00                 [207] (69)
200D  00                 [208] (69)
200E  06                 [209] (69)
200F  01                 [210] (70)
2010  00                 [211] (71)
2011  00                 [212] (71)
2012  06                 [213] (71)
2013  01                 [214] (71)
2014  00                 [215] (71)
2015  00                 [216] (71)
2016  06                 [217] (71)
2017  01                 [218] (71)
2018  00                 [219] (71)
2019  00                 [220] (71)
201A  09                 [221] (72)
201B  01                 [222] (74)
201C  00                 [223] (74)
201D  00                 [224] (74)
201E  09                 [225] (75)
201F  01                 [226] (75)
2020  00                 [227] (75)
2021  00                 [228] (77)
2022  09                 [229] (77)
2023  01                 [230] (77)
2024  00                 [231] (77)
2025  00                 [232] (77)
2026  0B                 [233] (77)
2027  01                 [234] (78)
2028  00                 [235] (78)
2029  00                 [236] (78)
202A  0B                 [237] (78)
202B  01                 [238] (78)
202C  00                 [239] (79)
202D  00                 [240] (79)
202E  0B                 [241] (79)
202F  01                 [242] (79)
2030  00                 [243] (79)
2031  00                 [244] (80)
2032  0D                 [245] (80)
2033  01                 [246] (80)
2034  00                 [247] (84)
2035  00                 [248] (84)
2036  0D                 [249] (84)
2037  01                 [250] (84)
2038  00                 [251] (86)
2039  00                 [252] (86)
203A  0D                 [253] (86)
203B  01                 [254] (87)
203C  00                 [255] (87)
203D  00                 [256] (87)
203E  0D                 [257] (88)
203F  01                 [258] (88)
2040  00                 [259] (90)
2041  00                 [260] (90)
2042  0E                 [261] (90)
2043  01                 [262] (90)
2044  00                 [263] (90)
2045  00                 [264] (91)
2046  0F                 [265] (91)
2047  01                 [266] (91)
2048  00                 [267] (92)
2049  00                 [268] (92)
204A  0F                 [269] (92)
204B  01                 [270] (94)
204C  00                 [271] (94)
204D  00                 [272] (94)
204E  0F                 [273] (94)
204F  01                 [274] (95)
2050  00                 [275] (95)
2051  00                 [276] (95)
2052  0F                 [277] (95)
2053  01                 [278] (95)
2054  00                 [279] (95)
2055  00                 [280] (95)
2056  10                 [281] (95)
2057  01                 [282] (96)
2058  00                 [283] (96)
2059  00                 [284] (96)
205A  11                 [285] (97)
205B  01                 [286] (97)
205C  00                 [287] (97)
205D  00                 [288] (97)
205E  11                 [289] (97)
205F  01                 [290] (97)
2060  00                 [291] (99)
2061  00                 [292] (99)
2062  12                 [293] (99)
2063  01                 [294] (99)
2064  00                 [295] (100)
2065  00                 [296] (101)
2066  12                 [297] (101)
2067  01                 [298] (102)
2068  00                 [299] (102)
2069  00                 [300] (102)
206A  12                 [301] (103)
206B  01                 [302] (103)
206C  00                 [303] (103)
206D  00                 [304] (104)
206E  13                 [305] (104)
206F  01                 [306] (104)
2070  00                 [307] (104)
2071  00                 [308] (104)
2072  13                 [309] (104)
2073  01                 [310] (104)
2074  00                 [311] (108)
                         * locals:
241A  00                 sizelocvars (0)
                         * upvalues:
241B  00                 sizeupvalues (0)
                         ** end of function **

                         
241C                     ** function [8] definition (level 2)
                         ** start of function **
241C  00                 string size (0)
                         source name: (none)
241E  02                 line defined (366)
241F  F7                 last line defined (375)
2420  02                 nups (1)
2421  01                 numparams (1)
2422  01                 is_vararg (0)
2423  00                 maxstacksize (9)
                         * code:
2425  24                 sizecode (36)
2426  64004000           [01] self       1   0   256  ; -1544157541
242A  62800001           [02] call       1   2   2  
242E  9D400000           [03] getglobal  2   1        ; 1074689893
2432  D2008000           [04] move       3   1      
2436  A2800001           [05] call       2   2   2  
243A  98400000           [06] test       2       1    ; to [8] if false
243E  1AC00680           [07] jmp        28           ; to [36]
2442  A480C000           [08] self       2   1   258  ; 1685228074
2446  1DC10000           [09] getglobal  4   3        ; Engine
244A  0E014102           [10] gettable   4   4   260  ; "STUN"
244E  53010000           [11] getupval   5   0      
2452  A2400002           [12] call       2   4   1  
2456  A480C000           [13] self       2   1   258  ; 1685228074
245A  1DC10000           [14] getglobal  4   3        ; Engine
245E  0E414102           [15] gettable   4   4   261  ; "KNOCKDOWN"
2462  53010000           [16] getupval   5   0      
2466  A2400002           [17] call       2   4   1  
246A  A480C000           [18] self       2   1   258  ; 1685228074
246E  1DC10000           [19] getglobal  4   3        ; Engine
2472  0E814102           [20] gettable   4   4   262  ; "STAGGER"
2476  53010000           [21] getupval   5   0      
247A  A2400002           [22] call       2   4   1  
247E  A4C0C100           [23] self       2   1   263  ; 17344149
2482  13010000           [24] getupval   4   0      
2486  A2408001           [25] call       2   3   1  
248A  A400C200           [26] self       2   1   264  ; 808964080
248E  13010000           [27] getupval   4   0      
2492  5DC10000           [28] getglobal  5   3        ; Engine
2496  4E41C202           [29] gettable   5   5   265  ; "DT_ANY"
249A  9DC10000           [30] getglobal  6   3        ; Engine
249E  8E814203           [31] gettable   6   6   266  ; "ANY_PART"
24A2  DDC10000           [32] getglobal  7   3        ; Engine
24A6  CEC1C203           [33] gettable   7   7   267  ; "DHT_NONE"
24AA  19020300           [34] loadk      8   12       ; 0
24AE  A2408003           [35] call       2   7   1  
24B2  1E008000           [36] return     0   1      
                         * constants:
24B6  0D                 sizek (13)
24B7  01                 const type 3
24B8  9B06F6A3           const [0]: (-1544157541)
24BC  01                 const type 3
24BD  65770E40           const [1]: (1074689893)
24C1  01                 const type 3
24C2  2A8A7264           const [2]: (1685228074)
24C6  04                 const type 4
24C7  07                 string size (7)
24C8  456E67696E6500     "Engine\0"
                         const [3]: "Engine"
24CF  04                 const type 4
24D0  05                 string size (5)
24D1  5354554E00         "STUN\0"
                         const [4]: "STUN"
24D6  04                 const type 4
24D7  0A                 string size (10)
24D8  4B4E4F434B444F57+  "KNOCKDOW"
24E0  4E00               "N\0"
                         const [5]: "KNOCKDOWN"
24E2  04                 const type 4
24E3  08                 string size (8)
24E4  5354414747455200   "STAGGER\0"
                         const [6]: "STAGGER"
24EC  01                 const type 3
24ED  95A60801           const [7]: (17344149)
24F1  01                 const type 3
24F2  F0CF3730           const [8]: (808964080)
24F6  04                 const type 4
24F7  07                 string size (7)
24F8  44545F414E5900     "DT_ANY\0"
                         const [9]: "DT_ANY"
24FF  04                 const type 4
2500  09                 string size (9)
2501  414E595F50415254+  "ANY_PART"
2509  00                 "\0"
                         const [10]: "ANY_PART"
250A  04                 const type 4
250B  09                 string size (9)
250C  4448545F4E4F4E45+  "DHT_NONE"
2514  00                 "\0"
                         const [11]: "DHT_NONE"
2515  03                 const type 3
2516  00000000           const [12]: (0)
                         * functions:
251A  00                 sizep (0)
                         * lines:
251B  24                 sizelineinfo (36)
                         [pc] (line)
251C  6F                 [01] (111)
251D  01                 [02] (111)
251E  00                 [03] (112)
251F  00                 [04] (112)
2520  6F                 [05] (112)
2521  01                 [06] (112)
2522  00                 [07] (112)
2523  00                 [08] (113)
2524  70                 [09] (113)
2525  01                 [10] (113)
2526  00                 [11] (113)
2527  00                 [12] (113)
2528  70                 [13] (114)
2529  01                 [14] (114)
252A  00                 [15] (114)
252B  00                 [16] (114)
252C  70                 [17] (114)
252D  01                 [18] (115)
252E  00                 [19] (115)
252F  00                 [20] (115)
2530  70                 [21] (115)
2531  01                 [22] (115)
2532  00                 [23] (116)
2533  00                 [24] (116)
2534  70                 [25] (116)
2535  01                 [26] (117)
2536  00                 [27] (117)
2537  00                 [28] (117)
2538  71                 [29] (117)
2539  01                 [30] (117)
253A  00                 [31] (117)
253B  00                 [32] (117)
253C  71                 [33] (117)
253D  01                 [34] (117)
253E  00                 [35] (117)
253F  00                 [36] (119)
                         * locals:
25AC  00                 sizelocvars (0)
                         * upvalues:
25AD  00                 sizeupvalues (0)
                         ** end of function **

                         
25AE                     ** function [9] definition (level 2)
                         ** start of function **
25AE  00                 string size (0)
                         source name: (none)
25B0  02                 line defined (377)
25B1  FE                 last line defined (510)
25B2  03                 nups (3)
25B3  03                 numparams (3)
25B4  03                 is_vararg (0)
25B5  00                 maxstacksize (27)
                         * code:
25B8  02                 sizecode (321)
25B9  1D010000           [001] getglobal  4   0        ; 1074689893
25BD  52018000           [002] move       5   1      
25C1  22810001           [003] call       4   2   2  
25C5  18410000           [004] test       4       1    ; to [6] if false
25C9  1AC00080           [005] jmp        4            ; to [10]
25CD  2441C000           [006] self       4   1   257  ; -231049143
25D1  22810001           [007] call       4   2   2  
25D5  D2000002           [008] move       3   4      
25D9  1A800080           [009] jmp        3            ; to [13]
25DD  1D810000           [010] getglobal  4   2        ; 508519041
25E1  22818000           [011] call       4   1   2  
25E5  D2000002           [012] move       3   4      
25E9  24C14000           [013] self       4   0   259  ; 51109503
25ED  22810001           [014] call       4   2   2  
25F1  4E014102           [015] gettable   5   4   260  ; "mCombatOperatorUnlocked"
25F5  97010000           [016] loadbool   6   0   0    ; false
25F9  98010000           [017] test       6       0    ; to [19] if true
25FD  1AC00580           [018] jmp        24           ; to [43]
2601  9D410100           [019] getglobal  6   5        ; gPlayerProfileMgr
2605  A4814103           [020] self       6   6   262  ; 569342746
2609  19C20100           [021] loadk      8   7        ; 0
260D  A2818001           [022] call       6   3   2  
2611  DD010000           [023] getglobal  7   0        ; 1074689893
2615  12020003           [024] move       8   6      
2619  E2810001           [025] call       7   2   2  
261D  D8410000           [026] test       7       1    ; to [28] if false
2621  1A800380           [027] jmp        15           ; to [43]
2625  E4014203           [028] self       7   6   264  ; 1699680402
2629  E2810001           [029] call       7   2   2  
262D  1D020000           [030] getglobal  8   0        ; 1074689893
2631  52028003           [031] move       9   7      
2635  22820001           [032] call       8   2   2  
2639  18420000           [033] test       8       1    ; to [35] if false
263D  1AC00180           [034] jmp        8            ; to [43]
2641  2442C203           [035] self       8   7   265  ; -1769100871
2645  22820001           [036] call       8   2   2  
2649  5D820200           [037] getglobal  9   10       ; Lotus_Game
264D  4EC2C204           [038] gettable   9   9   267  ; "OT_COMBAT"
fail op	35
2651  63400204           [039] close      1  
2655  1A000080           [040] jmp        1            ; to [42]
2659  57410000           [041] loadbool   5   0   1    ; false, to [43]
265D  57018000           [042] loadbool   5   1   0    ; true
2661  1D020300           [043] getglobal  8   12       ; avatarType
2665  5D420300           [044] getglobal  9   13       ; gGameRules
2669  6482C304           [045] self       9   9   270  ; -569679
266D  62820001           [046] call       9   2   2  
2671  58020000           [047] test       9       0    ; to [49] if true
2675  1A400080           [048] jmp        2            ; to [51]
2679  1DC20300           [049] getglobal  8   15       ; hubAvatarType
267D  1A800080           [050] jmp        3            ; to [54]
2681  58010000           [051] test       5       0    ; to [53] if true
2685  1A000080           [052] jmp        1            ; to [54]
2689  1D020400           [053] getglobal  8   16       ; combatAvatarType
268D  9D420400           [054] getglobal  10  17       ; gRegion
2691  A4824405           [055] self       10  10  274  ; -1110225722
2695  12030004           [056] move       12  8      
2699  52030001           [057] move       13  2      
269D  92038001           [058] move       14  3      
26A1  D2030000           [059] move       15  0      
26A5  12040000           [060] move       16  0      
26A9  A2828003           [061] call       10  7   2  
26AD  DD020000           [062] getglobal  11  0        ; 1074689893
26B1  12030005           [063] move       12  10     
26B5  E2820001           [064] call       11  2   2  
26B9  D8420000           [065] test       11      1    ; to [67] if false
26BD  1A003F80           [066] jmp        253          ; to [320]
26C1  DD020000           [067] getglobal  11  0        ; 1074689893
26C5  12038000           [068] move       12  1      
26C9  E2820001           [069] call       11  2   2  
26CD  D8420000           [070] test       11      1    ; to [72] if false
26D1  1AC03D80           [071] jmp        248          ; to [320]
26D5  E4C24400           [072] self       11  0   275  ; 1048009728
26D9  E2820001           [073] call       11  2   2  
26DD  CC42458A           [074] settable   11  276 277  ; "isControllingOperator" 1
26E1  CC42458B           [075] settable   11  278 277  ; "isSpawned" 1
26E5  24C34500           [076] self       12  0   279  ; 1927866546
26E9  92038005           [077] move       14  11     
26ED  22438001           [078] call       12  3   1  
26F1  24034600           [079] self       12  0   280  ; 2116058430
26F5  92030005           [080] move       14  10     
26F9  22438001           [081] call       12  3   1  
26FD  24434605           [082] self       12  10  281  ; -1183140784
2701  92030000           [083] move       14  0      
2705  22438001           [084] call       12  3   1  
2709  1D830600           [085] getglobal  12  26       ; _T
270D  0EC34606           [086] gettable   12  12  283  ; "InSimulacrum"
2711  18030000           [087] test       12      0    ; to [89] if true
2715  1A800180           [088] jmp        7            ; to [96]
2719  1D830600           [089] getglobal  12  26       ; _T
271D  0E034706           [090] gettable   12  12  284  ; "warframesInvincible"
2721  18030000           [091] test       12      0    ; to [93] if true
2725  1A800080           [092] jmp        3            ; to [96]
2729  13030000           [093] getupval   12  0      
272D  52030005           [094] move       13  10     
2731  22430001           [095] call       12  2   1  
2735  24434705           [096] self       12  10  285  ; -1921329643
2739  22830001           [097] call       12  2   2  
273D  52010006           [098] move       5   12     
2741  58010000           [099] test       5       0    ; to [101] if true
2745  1A800380           [100] jmp        15           ; to [116]
2749  0E834702           [101] gettable   12  4   286  ; "mOperatorCustomization"
274D  24C34706           [102] self       12  12  287  ; 1293079353
2751  22830001           [103] call       12  2   2  
2755  18030000           [104] test       12      0    ; to [106] if true
2759  1AC00080           [105] jmp        4            ; to [110]
275D  24034805           [106] self       12  10  288  ; -389013178
2761  9D430800           [107] getglobal  14  33       ; combatAnimController
2765  22438001           [108] call       12  3   1  
2769  1A800080           [109] jmp        3            ; to [113]
276D  24034805           [110] self       12  10  288  ; -389013178
2771  9D830800           [111] getglobal  14  34       ; femaleCombatAnimController
2775  22438001           [112] call       12  3   1  
2779  24C34805           [113] self       12  10  291  ; -1117644970
277D  9D030900           [114] getglobal  14  36       ; combatMotionController
2781  22438001           [115] call       12  3   1  
2785  13038000           [116] getupval   12  1      
2789  0E434906           [117] gettable   12  12  293  ; 2065819395
278D  52030005           [118] move       13  10     
2791  92030002           [119] move       14  4      
2795  22438001           [120] call       12  3   1  
2799  06030006           [121] loadnil    12  12     
279D  64834905           [122] self       13  10  294  ; -1917464545
27A1  62830001           [123] call       13  2   2  
27A5  58010000           [124] test       5       0    ; to [126] if true
27A9  1AC00680           [125] jmp        28           ; to [154]
27AD  A4C3C906           [126] self       14  13  295  ; -1192489543
27B1  12040002           [127] move       16  4      
27B5  5D840200           [128] getglobal  17  10       ; Lotus_Game
27B9  4E04CA08           [129] gettable   17  17  296  ; "LOT_OPERATOR"
27BD  A2430002           [130] call       14  4   1  
27C1  A443CA06           [131] self       14  13  297  ; 1674984496
27C5  1D840A00           [132] getglobal  16  42       ; Engine
27C9  0EC44A08           [133] gettable   16  16  299  ; "SLOT_2"
27CD  A2838001           [134] call       14  3   2  
27D1  12030007           [135] move       12  14     
27D5  9D030000           [136] getglobal  14  0        ; 1074689893
27D9  D2030006           [137] move       15  12     
27DD  A2830001           [138] call       14  2   2  
27E1  98030000           [139] test       14      0    ; to [141] if true
27E5  1A400180           [140] jmp        6            ; to [147]
27E9  A4034B05           [141] self       14  10  300  ; 1479835399
27ED  1D440B00           [142] getglobal  16  45       ; weaponType
27F1  57048000           [143] loadbool   17  1   0    ; true
27F5  A2830002           [144] call       14  4   2  
27F9  12030007           [145] move       12  14     
27FD  1AC00280           [146] jmp        12           ; to [159]
2801  A4834B06           [147] self       14  12  302  ; -140890631
2805  0EC4CB05           [148] gettable   16  11  303  ; "amplifierXp"
2809  A2438001           [149] call       14  3   1  
280D  A4034C06           [150] self       14  12  304  ; 981564690
2811  0E44CC05           [151] gettable   16  11  305  ; "amplifierFocusXp"
2815  A2438001           [152] call       14  3   1  
2819  1A000180           [153] jmp        5            ; to [159]
281D  A4034B05           [154] self       14  10  300  ; 1479835399
2821  1D440B00           [155] getglobal  16  45       ; weaponType
2825  57048000           [156] loadbool   17  1   0    ; true
2829  A2830002           [157] call       14  4   2  
282D  12030007           [158] move       12  14     
2831  A483CC06           [159] self       14  13  306  ; 688774453
2835  1D840A00           [160] getglobal  16  42       ; Engine
2839  0EC44A08           [161] gettable   16  16  299  ; "SLOT_2"
283D  5D840A00           [162] getglobal  17  42       ; Engine
2841  4EC4CC08           [163] gettable   17  17  307  ; "MAIN_HAND"
2845  9D840A00           [164] getglobal  18  42       ; Engine
2849  8E044D09           [165] gettable   18  18  308  ; "InventoryControllerBase_ES_INSTANT_EQUIP"
284D  A2438002           [166] call       14  5   1  
2851  58410000           [167] test       5       1    ; to [169] if false
2855  1A800480           [168] jmp        19           ; to [188]
2859  9D430100           [169] getglobal  14  5        ; gPlayerProfileMgr
285D  A4834107           [170] self       14  14  262  ; 569342746
2861  19C40100           [171] loadk      16  7        ; 0
2865  A2838001           [172] call       14  3   2  
2869  DD030000           [173] getglobal  15  0        ; 1074689893
286D  12040007           [174] move       16  14     
2871  E2830001           [175] call       15  2   2  
2875  D8430000           [176] test       15      1    ; to [178] if false
2879  1A400280           [177] jmp        10           ; to [188]
287D  E4034207           [178] self       15  14  264  ; 1699680402
2881  E2830001           [179] call       15  2   2  
2885  1D040000           [180] getglobal  16  0        ; 1074689893
2889  52048007           [181] move       17  15     
288D  22840001           [182] call       16  2   2  
2891  18440000           [183] test       16      1    ; to [185] if false
2895  1A800080           [184] jmp        3            ; to [188]
2899  2444CD06           [185] self       16  13  309  ; -1572476588
289D  92048007           [186] move       18  15     
28A1  22448001           [187] call       16  3   1  
28A5  58020000           [188] test       9       0    ; to [190] if true
28A9  1A400580           [189] jmp        22           ; to [212]
28AD  2484CD06           [190] self       16  13  310  ; 1815503922
28B1  97040000           [191] loadbool   18  0   0    ; false
28B5  22448001           [192] call       16  3   1  
28B9  24C4CD06           [193] self       16  13  311  ; -1572901801
28BD  9D840A00           [194] getglobal  18  42       ; Engine
28C1  8EC44C09           [195] gettable   18  18  307  ; "MAIN_HAND"
28C5  22448001           [196] call       16  3   1  
28C9  24044E05           [197] self       16  10  312  ; 1129512439
28CD  9D440E00           [198] getglobal  18  57       ; hubInputFilter
28D1  22448001           [199] call       16  3   1  
28D5  24844E05           [200] self       16  10  314  ; -1544157541
28D9  22840001           [201] call       16  2   2  
28DD  24C44E08           [202] self       16  16  315  ; -1844106636
28E1  9D040F00           [203] getglobal  18  60       ; -332969190
28E5  D9440F00           [204] loadk      19  61       ; "HubInvuln"
28E9  A2840001           [205] call       18  2   2  
28ED  DD840A00           [206] getglobal  19  42       ; Engine
28F1  CE84CF09           [207] gettable   19  19  318  ; "DT_ANY"
28F5  1D850A00           [208] getglobal  20  42       ; Engine
28F9  0EC54F0A           [209] gettable   20  20  319  ; "ANY_PART"
28FD  59C50100           [210] loadk      21  7        ; 0
2901  22440003           [211] call       16  6   1  
2905  58010000           [212] test       5       0    ; to [214] if true
2909  1A000380           [213] jmp        13           ; to [227]
290D  1D040000           [214] getglobal  16  0        ; 1074689893
2911  52040006           [215] move       17  12     
2915  22840001           [216] call       16  2   2  
2919  18440000           [217] test       16      1    ; to [219] if false
291D  1AC00180           [218] jmp        8            ; to [227]
2921  58020000           [219] test       9       0    ; to [221] if true
2925  1A400180           [220] jmp        6            ; to [227]
2929  24045006           [221] self       16  12  320  ; -650403200
292D  22840001           [222] call       16  2   2  
2931  24445008           [223] self       16  16  321  ; 320286133
2935  9D840A00           [224] getglobal  18  42       ; Engine
2939  8E845009           [225] gettable   18  18  322  ; "WEAPONTYPE_NORMAL"
293D  22448001           [226] call       16  3   1  
2941  1D840600           [227] getglobal  16  26       ; _T
2945  0EC44608           [228] gettable   16  16  283  ; "InSimulacrum"
2949  18040000           [229] test       16      0    ; to [231] if true
294D  1A000180           [230] jmp        5            ; to [236]
2951  24844905           [231] self       16  10  294  ; -1917464545
2955  22840001           [232] call       16  2   2  
2959  24C45008           [233] self       16  16  323  ; -950066567
295D  97040000           [234] loadbool   18  0   0    ; false
2961  22448001           [235] call       16  3   1  
2965  24045105           [236] self       16  10  324  ; 1992436207
2969  A4445105           [237] self       18  10  325  ; 945541886
296D  A2040001           [238] call       18  2   0  
2971  22440000           [239] call       16  0   1  
2975  2484C900           [240] self       16  1   294  ; -1917464545
2979  22840001           [241] call       16  2   2  
297D  64845108           [242] self       17  16  326  ; 977333418
2981  62840001           [243] call       17  2   2  
2985  58040000           [244] test       17      0    ; to [246] if true
2989  1A800080           [245] jmp        3            ; to [249]
298D  64C45108           [246] self       17  16  327  ; -1689873672
2991  D2040005           [247] move       19  10     
2995  62448001           [248] call       17  3   1  
2999  58420000           [249] test       9       1    ; to [251] if false
299D  1A801080           [250] jmp        67           ; to [318]
29A1  5D041200           [251] getglobal  17  72       ; meleeWeaponType
29A5  93048000           [252] getupval   18  1      
29A9  8E445209           [253] gettable   18  18  329  ; -75093794
29AD  D2040005           [254] move       19  10     
29B1  1D050F00           [255] getglobal  20  60       ; -332969190
29B5  59851200           [256] loadk      21  74       ; "BlastSelfShield"
29B9  22050001           [257] call       20  2   0  
29BD  A2840000           [258] call       18  0   2  
fail op	21
29C1  15808483           [259] concat     0   263 18 
29C5  1A400080           [260] jmp        2            ; to [263]
29C9  5DC41200           [261] getglobal  17  75       ; shieldMeleeWeaponType
29CD  1A400480           [262] jmp        18           ; to [281]
29D1  93048000           [263] getupval   18  1      
29D5  8E445209           [264] gettable   18  18  329  ; -75093794
29D9  D2040005           [265] move       19  10     
29DD  1D050F00           [266] getglobal  20  60       ; -332969190
29E1  59051300           [267] loadk      21  76       ; "BlastCharge"
29E5  22850001           [268] call       20  2   2  
29E9  5D451300           [269] getglobal  21  77       ; chargeableMeleeWeaponTypes
29ED  A2840002           [270] call       18  4   2  
fail op	21
29F1  15808483           [271] concat     0   263 18 
29F5  1A800080           [272] jmp        3            ; to [276]
29F9  DD441300           [273] getglobal  19  77       ; chargeableMeleeWeaponTypes
29FD  4E848409           [274] gettable   17  19  18 
2A01  1A000180           [275] jmp        5            ; to [281]
2A05  E4444705           [276] self       19  10  285  ; -1921329643
2A09  E2840001           [277] call       19  2   2  
2A0D  D8040000           [278] test       19      0    ; to [280] if true
2A11  1A000080           [279] jmp        1            ; to [281]
2A15  5D841300           [280] getglobal  17  78       ; combatMeleeWeaponType
2A19  E4044B05           [281] self       19  10  300  ; 1479835399
2A1D  52058008           [282] move       21  17     
2A21  97050000           [283] loadbool   22  0   0    ; false
2A25  E2440002           [284] call       19  4   1  
2A29  D3048000           [285] getupval   19  1      
2A2D  CE44D209           [286] gettable   19  19  329  ; -75093794
2A31  12050005           [287] move       20  10     
2A35  53050001           [288] getupval   21  2      
2A39  4EC5D30A           [289] gettable   21  21  335  ; "tag"
2A3D  93050001           [290] getupval   22  2      
2A41  8E05540B           [291] gettable   22  22  336  ; "mult"
2A45  E2840002           [292] call       19  4   2  
fail op	21
2A49  15C08483           [293] concat     0   263 19 
2A4D  1A800580           [294] jmp        23           ; to [318]
2A51  24854905           [295] self       20  10  294  ; -1917464545
2A55  22850001           [296] call       20  2   2  
2A59  6445540A           [297] self       21  20  337  ; 1554076758
2A5D  D3050001           [298] getupval   23  2      
2A61  CEC5D30B           [299] gettable   23  23  335  ; "tag"
2A65  62858001           [300] call       21  3   2  
2A69  58450000           [301] test       21      1    ; to [303] if false
2A6D  1A800380           [302] jmp        15           ; to [318]
2A71  6485540A           [303] self       21  20  338  ; 1183180483
2A75  D3050001           [304] getupval   23  2      
2A79  CEC5D30B           [305] gettable   23  23  335  ; "tag"
2A7D  1DC61400           [306] getglobal  24  83       ; Game
2A81  0E06550C           [307] gettable   24  24  340  ; "AVATAR_HEALTH_MAX"
2A85  5DC61400           [308] getglobal  25  83       ; Game
2A89  4E46D50C           [309] gettable   25  25  341  ; "MULTIPLY"
2A8D  93060001           [310] getupval   26  2      
2A91  8E06540D           [311] gettable   26  26  336  ; "mult"
2A95  8EC6040D           [312] gettable   26  26  19 
2A99  62450003           [313] call       21  6   1  
2A9D  64055105           [314] self       21  10  324  ; 1992436207
2AA1  E4455105           [315] self       23  10  325  ; 945541886
2AA5  E2050001           [316] call       23  2   0  
2AA9  62450000           [317] call       21  0   1  
2AAD  64855505           [318] self       21  10  342  ; 115701976
2AB1  62450001           [319] call       21  2   1  
2AB5  9E020001           [320] return     10  2      
2AB9  1E008000           [321] return     0   1      
                         * constants:
2ABD  57                 sizek (87)
2ABE  01                 const type 3
2ABF  65770E40           const [0]: (1074689893)
2AC3  01                 const type 3
2AC4  49783AF2           const [1]: (-231049143)
2AC8  01                 const type 3
2AC9  81624F1E           const [2]: (508519041)
2ACD  01                 const type 3
2ACE  7FDE0B03           const [3]: (51109503)
2AD2  04                 const type 4
2AD3  18                 string size (24)
2AD4  6D436F6D6261744F+  "mCombatO"
2ADC  70657261746F7255+  "peratorU"
2AE4  6E6C6F636B656400   "nlocked\0"
                         const [4]: "mCombatOperatorUnlocked"
2AEC  04                 const type 4
2AED  12                 string size (18)
2AEE  67506C6179657250+  "gPlayerP"
2AF6  726F66696C654D67+  "rofileMg"
2AFE  7200               "r\0"
                         const [5]: "gPlayerProfileMgr"
2B00  01                 const type 3
2B01  1A7BEF21           const [6]: (569342746)
2B05  03                 const type 3
2B06  00000000           const [7]: (0)
2B0A  01                 const type 3
2B0B  92104F65           const [8]: (1699680402)
2B0F  01                 const type 3
2B10  B9A98D96           const [9]: (-1769100871)
2B14  04                 const type 4
2B15  0B                 string size (11)
2B16  4C6F7475735F4761+  "Lotus_Ga"
2B1E  6D6500             "me\0"
                         const [10]: "Lotus_Game"
2B21  04                 const type 4
2B22  0A                 string size (10)
2B23  4F545F434F4D4241+  "OT_COMBA"
2B2B  5400               "T\0"
                         const [11]: "OT_COMBAT"
2B2D  04                 const type 4
2B2E  0B                 string size (11)
2B2F  6176617461725479+  "avatarTy"
2B37  706500             "pe\0"
                         const [12]: "avatarType"
2B3A  04                 const type 4
2B3B  0B                 string size (11)
2B3C  6747616D6552756C+  "gGameRul"
2B44  657300             "es\0"
                         const [13]: "gGameRules"
2B47  01                 const type 3
2B48  B14EF7FF           const [14]: (-569679)
2B4C  04                 const type 4
2B4D  0E                 string size (14)
2B4E  6875624176617461+  "hubAvata"
2B56  725479706500       "rType\0"
                         const [15]: "hubAvatarType"
2B5C  04                 const type 4
2B5D  11                 string size (17)
2B5E  636F6D6261744176+  "combatAv"
2B66  6174617254797065+  "atarType"
2B6E  00                 "\0"
                         const [16]: "combatAvatarType"
2B6F  04                 const type 4
2B70  08                 string size (8)
2B71  67526567696F6E00   "gRegion\0"
                         const [17]: "gRegion"
2B79  01                 const type 3
2B7A  C64CD3BD           const [18]: (-1110225722)
2B7E  01                 const type 3
2B7F  005C773E           const [19]: (1048009728)
2B83  04                 const type 4
2B84  16                 string size (22)
2B85  6973436F6E74726F+  "isContro"
2B8D  6C6C696E674F7065+  "llingOpe"
2B95  7261746F7200       "rator\0"
                         const [20]: "isControllingOperator"
2B9B  01                 const type 3
2B9C  01000000           const [21]: (1)
2BA0  04                 const type 4
2BA1  0A                 string size (10)
2BA2  6973537061776E65+  "isSpawne"
2BAA  6400               "d\0"
                         const [22]: "isSpawned"
2BAC  01                 const type 3
2BAD  B2E8E872           const [23]: (1927866546)
2BB1  01                 const type 3
2BB2  3E7D207E           const [24]: (2116058430)
2BB6  01                 const type 3
2BB7  50B47AB9           const [25]: (-1183140784)
2BBB  04                 const type 4
2BBC  03                 string size (3)
2BBD  5F5400             "_T\0"
                         const [26]: "_T"
2BC0  04                 const type 4
2BC1  0D                 string size (13)
2BC2  496E53696D756C61+  "InSimula"
2BCA  6372756D00         "crum\0"
                         const [27]: "InSimulacrum"
2BCF  04                 const type 4
2BD0  14                 string size (20)
2BD1  7761726672616D65+  "warframe"
2BD9  73496E76696E6369+  "sInvinci"
2BE1  626C6500           "ble\0"
                         const [28]: "warframesInvincible"
2BE5  01                 const type 3
2BE6  15D67A8D           const [29]: (-1921329643)
2BEA  04                 const type 4
2BEB  17                 string size (23)
2BEC  6D4F70657261746F+  "mOperato"
2BF4  72437573746F6D69+  "rCustomi"
2BFC  7A6174696F6E00     "zation\0"
                         const [30]: "mOperatorCustomization"
2C03  01                 const type 3
2C04  39D3124D           const [31]: (1293079353)
2C08  01                 const type 3
2C09  4621D0E8           const [32]: (-389013178)
2C0D  04                 const type 4
2C0E  15                 string size (21)
2C0F  636F6D626174416E+  "combatAn"
2C17  696D436F6E74726F+  "imContro"
2C1F  6C6C657200         "ller\0"
                         const [33]: "combatAnimController"
2C24  04                 const type 4
2C25  1B                 string size (27)
2C26  66656D616C65436F+  "femaleCo"
2C2E  6D626174416E696D+  "mbatAnim"
2C36  436F6E74726F6C6C+  "Controll"
2C3E  657200             "er\0"
                         const [34]: "femaleCombatAnimController"
2C41  01                 const type 3
2C42  561762BD           const [35]: (-1117644970)
2C46  04                 const type 4
2C47  17                 string size (23)
2C48  636F6D6261744D6F+  "combatMo"
2C50  74696F6E436F6E74+  "tionCont"
2C58  726F6C6C657200     "roller\0"
                         const [36]: "combatMotionController"
2C5F  01                 const type 3
2C60  03E7217B           const [37]: (2065819395)
2C64  01                 const type 3
2C65  1FD0B58D           const [38]: (-1917464545)
2C69  01                 const type 3
2C6A  B90DECB8           const [39]: (-1192489543)
2C6E  04                 const type 4
2C6F  0D                 string size (13)
2C70  4C4F545F4F504552+  "LOT_OPER"
2C78  41544F5200         "ATOR\0"
                         const [40]: "LOT_OPERATOR"
2C7D  01                 const type 3
2C7E  303CD663           const [41]: (1674984496)
2C82  04                 const type 4
2C83  07                 string size (7)
2C84  456E67696E6500     "Engine\0"
                         const [42]: "Engine"
2C8B  04                 const type 4
2C8C  07                 string size (7)
2C8D  534C4F545F3200     "SLOT_2\0"
                         const [43]: "SLOT_2"
2C94  01                 const type 3
2C95  077F3458           const [44]: (1479835399)
2C99  04                 const type 4
2C9A  0B                 string size (11)
2C9B  776561706F6E5479+  "weaponTy"
2CA3  706500             "pe\0"
                         const [45]: "weaponType"
2CA6  01                 const type 3
2CA7  F92D9AF7           const [46]: (-140890631)
2CAB  04                 const type 4
2CAC  0C                 string size (12)
2CAD  616D706C69666965+  "amplifie"
2CB5  72587000           "rXp\0"
                         const [47]: "amplifierXp"
2CB9  01                 const type 3
2CBA  127D813A           const [48]: (981564690)
2CBE  04                 const type 4
2CBF  11                 string size (17)
2CC0  616D706C69666965+  "amplifie"
2CC8  72466F6375735870+  "rFocusXp"
2CD0  00                 "\0"
                         const [49]: "amplifierFocusXp"
2CD1  01                 const type 3
2CD2  35DD0D29           const [50]: (688774453)
2CD6  04                 const type 4
2CD7  0A                 string size (10)
2CD8  4D41494E5F48414E+  "MAIN_HAN"
2CE0  4400               "D\0"
                         const [51]: "MAIN_HAND"
2CE2  04                 const type 4
2CE3  29                 string size (41)
2CE4  496E76656E746F72+  "Inventor"
2CEC  79436F6E74726F6C+  "yControl"
2CF4  6C6572426173655F+  "lerBase_"
2CFC  45535F494E535441+  "ES_INSTA"
2D04  4E545F4551554950+  "NT_EQUIP"
2D0C  00                 "\0"
                         const [52]: "InventoryControllerBase_ES_INSTANT_EQUIP"
2D0D  01                 const type 3
2D0E  54E945A2           const [53]: (-1572476588)
2D12  01                 const type 3
2D13  3264366C           const [54]: (1815503922)
2D17  01                 const type 3
2D18  576C3FA2           const [55]: (-1572901801)
2D1C  01                 const type 3
2D1D  F7FD5243           const [56]: (1129512439)
2D21  04                 const type 4
2D22  0F                 string size (15)
2D23  687562496E707574+  "hubInput"
2D2B  46696C74657200     "Filter\0"
                         const [57]: "hubInputFilter"
2D32  01                 const type 3
2D33  9B06F6A3           const [58]: (-1544157541)
2D37  01                 const type 3
2D38  742A1592           const [59]: (-1844106636)
2D3C  01                 const type 3
2D3D  1A4B27EC           const [60]: (-332969190)
2D41  04                 const type 4
2D42  0A                 string size (10)
2D43  487562496E76756C+  "HubInvul"
2D4B  6E00               "n\0"
                         const [61]: "HubInvuln"
2D4D  04                 const type 4
2D4E  07                 string size (7)
2D4F  44545F414E5900     "DT_ANY\0"
                         const [62]: "DT_ANY"
2D56  04                 const type 4
2D57  09                 string size (9)
2D58  414E595F50415254+  "ANY_PART"
2D60  00                 "\0"
                         const [63]: "ANY_PART"
2D61  01                 const type 3
2D62  80A23BD9           const [64]: (-650403200)
2D66  01                 const type 3
2D67  B52D1713           const [65]: (320286133)
2D6B  04                 const type 4
2D6C  12                 string size (18)
2D6D  574541504F4E5459+  "WEAPONTY"
2D75  50455F4E4F524D41+  "PE_NORMA"
2D7D  4C00               "L\0"
                         const [66]: "WEAPONTYPE_NORMAL"
2D7F  01                 const type 3
2D80  79225FC7           const [67]: (-950066567)
2D84  01                 const type 3
2D85  EF29C276           const [68]: (1992436207)
2D89  01                 const type 3
2D8A  FED25B38           const [69]: (945541886)
2D8E  01                 const type 3
2D8F  AAEC403A           const [70]: (977333418)
2D93  01                 const type 3
2D94  F892469B           const [71]: (-1689873672)
2D98  04                 const type 4
2D99  10                 string size (16)
2D9A  6D656C6565576561+  "meleeWea"
2DA2  706F6E5479706500   "ponType\0"
                         const [72]: "meleeWeaponType"
2DAA  01                 const type 3
2DAB  DE2886FB           const [73]: (-75093794)
2DAF  04                 const type 4
2DB0  10                 string size (16)
2DB1  426C61737453656C+  "BlastSel"
2DB9  66536869656C6400   "fShield\0"
                         const [74]: "BlastSelfShield"
2DC1  04                 const type 4
2DC2  16                 string size (22)
2DC3  736869656C644D65+  "shieldMe"
2DCB  6C6565576561706F+  "leeWeapo"
2DD3  6E5479706500       "nType\0"
                         const [75]: "shieldMeleeWeaponType"
2DD9  04                 const type 4
2DDA  0C                 string size (12)
2DDB  426C617374436861+  "BlastCha"
2DE3  72676500           "rge\0"
                         const [76]: "BlastCharge"
2DE7  04                 const type 4
2DE8  1B                 string size (27)
2DE9  6368617267656162+  "chargeab"
2DF1  6C654D656C656557+  "leMeleeW"
2DF9  6561706F6E547970+  "eaponTyp"
2E01  657300             "es\0"
                         const [77]: "chargeableMeleeWeaponTypes"
2E04  04                 const type 4
2E05  16                 string size (22)
2E06  636F6D6261744D65+  "combatMe"
2E0E  6C6565576561706F+  "leeWeapo"
2E16  6E5479706500       "nType\0"
                         const [78]: "combatMeleeWeaponType"
2E1C  04                 const type 4
2E1D  04                 string size (4)
2E1E  74616700           "tag\0"
                         const [79]: "tag"
2E22  04                 const type 4
2E23  05                 string size (5)
2E24  6D756C7400         "mult\0"
                         const [80]: "mult"
2E29  01                 const type 3
2E2A  5654A15C           const [81]: (1554076758)
2E2E  01                 const type 3
2E2F  C3E68546           const [82]: (1183180483)
2E33  04                 const type 4
2E34  05                 string size (5)
2E35  47616D6500         "Game\0"
                         const [83]: "Game"
2E3A  04                 const type 4
2E3B  12                 string size (18)
2E3C  4156415441525F48+  "AVATAR_H"
2E44  45414C54485F4D41+  "EALTH_MA"
2E4C  5800               "X\0"
                         const [84]: "AVATAR_HEALTH_MAX"
2E4E  04                 const type 4
2E4F  09                 string size (9)
2E50  4D554C5449504C59+  "MULTIPLY"
2E58  00                 "\0"
                         const [85]: "MULTIPLY"
2E59  01                 const type 3
2E5A  D878E506           const [86]: (115701976)
                         * functions:
2E5E  00                 sizep (0)
                         * lines:
2E60  02                 sizelineinfo (321)
                         [pc] (line)
2E61  7B                 [001] (123)
2E62  01                 [002] (123)
2E63  00                 [003] (123)
2E64  00                 [004] (123)
2E65  7B                 [005] (123)
2E66  01                 [006] (124)
2E67  00                 [007] (124)
2E68  00                 [008] (124)
2E69  7B                 [009] (124)
2E6A  01                 [010] (126)
2E6B  00                 [011] (126)
2E6C  00                 [012] (126)
2E6D  7B                 [013] (-127)
2E6E  01                 [014] (-127)
2E6F  00                 [015] (-126)
2E70  00                 [016] (-125)
2E71  7B                 [017] (-125)
2E72  01                 [018] (-125)
2E73  00                 [019] (-124)
2E74  00                 [020] (-124)
2E75  7C                 [021] (-124)
2E76  01                 [022] (-124)
2E77  00                 [023] (-123)
2E78  00                 [024] (-123)
2E79  7C                 [025] (-123)
2E7A  01                 [026] (-123)
2E7B  00                 [027] (-123)
2E7C  00                 [028] (-122)
2E7D  7C                 [029] (-122)
2E7E  01                 [030] (-121)
2E7F  00                 [031] (-121)
2E80  00                 [032] (-121)
2E81  7C                 [033] (-121)
2E82  01                 [034] (-121)
2E83  00                 [035] (-120)
2E84  00                 [036] (-120)
2E85  7E                 [037] (-120)
2E86  01                 [038] (-120)
2E87  00                 [039] (-120)
2E88  00                 [040] (-120)
2E89  7E                 [041] (-120)
2E8A  01                 [042] (-120)
2E8B  00                 [043] (-115)
2E8C  00                 [044] (-114)
2E8D  7E                 [045] (-114)
2E8E  01                 [046] (-114)
2E8F  00                 [047] (-113)
2E90  00                 [048] (-113)
2E91  81                 [049] (-112)
2E92  01                 [050] (-112)
2E93  00                 [051] (-111)
2E94  00                 [052] (-111)
2E95  81                 [053] (-110)
2E96  01                 [054] (-107)
2E97  00                 [055] (-107)
2E98  00                 [056] (-107)
2E99  82                 [057] (-107)
2E9A  01                 [058] (-107)
2E9B  00                 [059] (-107)
2E9C  00                 [060] (-107)
2E9D  83                 [061] (-107)
2E9E  01                 [062] (-106)
2E9F  00                 [063] (-106)
2EA0  00                 [064] (-106)
2EA1  83                 [065] (-106)
2EA2  01                 [066] (-106)
2EA3  00                 [067] (-106)
2EA4  00                 [068] (-106)
2EA5  83                 [069] (-106)
2EA6  01                 [070] (-106)
2EA7  00                 [071] (-106)
2EA8  00                 [072] (-105)
2EA9  84                 [073] (-105)
2EAA  01                 [074] (-104)
2EAB  00                 [075] (-103)
2EAC  00                 [076] (-102)
2EAD  84                 [077] (-102)
2EAE  01                 [078] (-102)
2EAF  00                 [079] (-101)
2EB0  00                 [080] (-101)
2EB1  84                 [081] (-101)
2EB2  01                 [082] (-100)
2EB3  00                 [083] (-100)
2EB4  00                 [084] (-100)
2EB5  84                 [085] (-98)
2EB6  01                 [086] (-98)
2EB7  00                 [087] (-98)
2EB8  00                 [088] (-98)
2EB9  85                 [089] (-98)
2EBA  01                 [090] (-98)
2EBB  00                 [091] (-98)
2EBC  00                 [092] (-98)
2EBD  85                 [093] (-97)
2EBE  01                 [094] (-97)
2EBF  00                 [095] (-97)
2EC0  00                 [096] (-94)
2EC1  85                 [097] (-94)
2EC2  01                 [098] (-94)
2EC3  00                 [099] (-93)
2EC4  00                 [100] (-93)
2EC5  85                 [101] (-92)
2EC6  01                 [102] (-92)
2EC7  00                 [103] (-92)
2EC8  00                 [104] (-92)
2EC9  85                 [105] (-92)
2ECA  01                 [106] (-91)
2ECB  00                 [107] (-91)
2ECC  00                 [108] (-91)
2ECD  86                 [109] (-91)
2ECE  01                 [110] (-89)
2ECF  00                 [111] (-89)
2ED0  00                 [112] (-89)
2ED1  86                 [113] (-87)
2ED2  01                 [114] (-87)
2ED3  00                 [115] (-87)
2ED4  00                 [116] (-85)
2ED5  87                 [117] (-85)
2ED6  01                 [118] (-85)
2ED7  00                 [119] (-85)
2ED8  00                 [120] (-85)
2ED9  87                 [121] (-83)
2EDA  01                 [122] (-82)
2EDB  00                 [123] (-82)
2EDC  00                 [124] (-80)
2EDD  87                 [125] (-80)
2EDE  01                 [126] (-79)
2EDF  00                 [127] (-79)
2EE0  00                 [128] (-79)
2EE1  87                 [129] (-79)
2EE2  01                 [130] (-79)
2EE3  00                 [131] (-78)
2EE4  00                 [132] (-78)
2EE5  87                 [133] (-78)
2EE6  01                 [134] (-78)
2EE7  00                 [135] (-78)
2EE8  00                 [136] (-77)
2EE9  88                 [137] (-77)
2EEA  01                 [138] (-77)
2EEB  00                 [139] (-77)
2EEC  00                 [140] (-77)
2EED  88                 [141] (-76)
2EEE  01                 [142] (-76)
2EEF  00                 [143] (-76)
2EF0  00                 [144] (-76)
2EF1  88                 [145] (-76)
2EF2  01                 [146] (-76)
2EF3  00                 [147] (-74)
2EF4  00                 [148] (-74)
2EF5  88                 [149] (-74)
2EF6  01                 [150] (-73)
2EF7  00                 [151] (-73)
2EF8  00                 [152] (-73)
2EF9  88                 [153] (-72)
2EFA  01                 [154] (-70)
2EFB  00                 [155] (-70)
2EFC  00                 [156] (-70)
2EFD  88                 [157] (-70)
2EFE  01                 [158] (-70)
2EFF  00                 [159] (-67)
2F00  00                 [160] (-67)
2F01  88                 [161] (-67)
2F02  01                 [162] (-67)
2F03  00                 [163] (-67)
2F04  00                 [164] (-67)
2F05  88                 [165] (-67)
2F06  01                 [166] (-67)
2F07  00                 [167] (-64)
2F08  00                 [168] (-64)
2F09  8D                 [169] (-63)
2F0A  01                 [170] (-63)
2F0B  00                 [171] (-63)
2F0C  00                 [172] (-63)
2F0D  8E                 [173] (-62)
2F0E  01                 [174] (-62)
2F0F  00                 [175] (-62)
2F10  00                 [176] (-62)
2F11  8E                 [177] (-62)
2F12  01                 [178] (-61)
2F13  00                 [179] (-61)
2F14  00                 [180] (-60)
2F15  8E                 [181] (-60)
2F16  01                 [182] (-60)
2F17  00                 [183] (-60)
2F18  00                 [184] (-60)
2F19  8F                 [185] (-59)
2F1A  01                 [186] (-59)
2F1B  00                 [187] (-59)
2F1C  00                 [188] (-54)
2F1D  8F                 [189] (-54)
2F1E  01                 [190] (-53)
2F1F  00                 [191] (-53)
2F20  00                 [192] (-53)
2F21  90                 [193] (-52)
2F22  01                 [194] (-52)
2F23  00                 [195] (-52)
2F24  00                 [196] (-52)
2F25  90                 [197] (-51)
2F26  01                 [198] (-51)
2F27  00                 [199] (-51)
2F28  00                 [200] (-50)
2F29  91                 [201] (-50)
2F2A  01                 [202] (-50)
2F2B  00                 [203] (-50)
2F2C  00                 [204] (-50)
2F2D  91                 [205] (-50)
2F2E  01                 [206] (-50)
2F2F  00                 [207] (-50)
2F30  00                 [208] (-50)
2F31  92                 [209] (-50)
2F32  01                 [210] (-50)
2F33  00                 [211] (-50)
2F34  00                 [212] (-47)
2F35  95                 [213] (-47)
2F36  01                 [214] (-47)
2F37  00                 [215] (-47)
2F38  00                 [216] (-47)
2F39  95                 [217] (-47)
2F3A  01                 [218] (-47)
2F3B  00                 [219] (-45)
2F3C  00                 [220] (-45)
2F3D  95                 [221] (-44)
2F3E  01                 [222] (-44)
2F3F  00                 [223] (-44)
2F40  00                 [224] (-44)
2F41  95                 [225] (-44)
2F42  01                 [226] (-44)
2F43  00                 [227] (-40)
2F44  00                 [228] (-40)
2F45  95                 [229] (-40)
2F46  01                 [230] (-40)
2F47  00                 [231] (-39)
2F48  00                 [232] (-39)
2F49  95                 [233] (-39)
2F4A  01                 [234] (-39)
2F4B  00                 [235] (-39)
2F4C  00                 [236] (-37)
2F4D  95                 [237] (-37)
2F4E  01                 [238] (-37)
2F4F  00                 [239] (-37)
2F50  00                 [240] (-35)
2F51  95                 [241] (-35)
2F52  01                 [242] (-34)
2F53  00                 [243] (-34)
2F54  00                 [244] (-34)
2F55  96                 [245] (-34)
2F56  01                 [246] (-33)
2F57  00                 [247] (-33)
2F58  00                 [248] (-33)
2F59  96                 [249] (-30)
2F5A  01                 [250] (-30)
2F5B  00                 [251] (-29)
2F5C  00                 [252] (-28)
2F5D  96                 [253] (-28)
2F5E  01                 [254] (-28)
2F5F  00                 [255] (-28)
2F60  00                 [256] (-28)
2F61  96                 [257] (-28)
2F62  01                 [258] (-28)
2F63  00                 [259] (-28)
2F64  00                 [260] (-28)
2F65  96                 [261] (-27)
2F66  01                 [262] (-27)
2F67  00                 [263] (-25)
2F68  00                 [264] (-25)
2F69  96                 [265] (-25)
2F6A  01                 [266] (-25)
2F6B  00                 [267] (-25)
2F6C  00                 [268] (-25)
2F6D  96                 [269] (-25)
2F6E  01                 [270] (-25)
2F6F  00                 [271] (-24)
2F70  00                 [272] (-24)
2F71  96                 [273] (-23)
2F72  01                 [274] (-23)
2F73  00                 [275] (-23)
2F74  00                 [276] (-22)
2F75  96                 [277] (-22)
2F76  01                 [278] (-22)
2F77  00                 [279] (-22)
2F78  00                 [280] (-21)
2F79  96                 [281] (-18)
2F7A  01                 [282] (-18)
2F7B  00                 [283] (-18)
2F7C  00                 [284] (-18)
2F7D  97                 [285] (-16)
2F7E  01                 [286] (-16)
2F7F  00                 [287] (-16)
2F80  00                 [288] (-16)
2F81  97                 [289] (-16)
2F82  01                 [290] (-16)
2F83  00                 [291] (-16)
2F84  00                 [292] (-16)
2F85  98                 [293] (-15)
2F86  01                 [294] (-15)
2F87  00                 [295] (-14)
2F88  00                 [296] (-14)
2F89  99                 [297] (-13)
2F8A  01                 [298] (-13)
2F8B  00                 [299] (-13)
2F8C  00                 [300] (-13)
2F8D  9A                 [301] (-13)
2F8E  01                 [302] (-13)
2F8F  00                 [303] (-12)
2F90  00                 [304] (-12)
2F91  9A                 [305] (-12)
2F92  01                 [306] (-12)
2F93  00                 [307] (-12)
2F94  00                 [308] (-12)
2F95  9A                 [309] (-12)
2F96  01                 [310] (-12)
2F97  00                 [311] (-12)
2F98  00                 [312] (-12)
2F99  9B                 [313] (-12)
2F9A  01                 [314] (-11)
2F9B  00                 [315] (-11)
2F9C  00                 [316] (-11)
2F9D  9B                 [317] (-11)
2F9E  01                 [318] (-6)
2F9F  00                 [319] (-6)
2FA0  00                 [320] (-3)
2FA1  9B                 [321] (-2)
                         * locals:
3365  00                 sizelocvars (0)
                         * upvalues:
3366  00                 sizeupvalues (0)
                         ** end of function **

                         
3367                     ** function [10] definition (level 2)
                         ** start of function **
3367  00                 string size (0)
                         source name: (none)
3369  04                 line defined (512)
336A  98                 last line defined (536)
336B  04                 nups (1)
336C  01                 numparams (3)
336D  03                 is_vararg (0)
336E  00                 maxstacksize (12)
                         * code:
3370  33                 sizecode (51)
3371  DD000000           [01] getglobal  3   0        ; 538022378
3375  19410000           [02] loadk      4   1        ; 0
3379  E2400001           [03] call       3   2   1  
337D  CE804000           [04] gettable   3   0   258  ; "isControllingOperator"
3381  13010000           [05] getupval   4   0      
3385  52018000           [06] move       5   1      
3389  92010001           [07] move       6   2      
338D  CEC14000           [08] gettable   7   0   259  ; "operatorPos"
3391  22810002           [09] call       4   4   2  
3395  5D010100           [10] getglobal  5   4        ; 1074689893
3399  92010002           [11] move       6   4      
339D  62810001           [12] call       5   2   2  
33A1  58010000           [13] test       5       0    ; to [15] if true
33A5  1A000080           [14] jmp        1            ; to [16]
33A9  1E008000           [15] return     0   1      
33AD  D8400000           [16] test       3       1    ; to [18] if false
33B1  1AC00080           [17] jmp        4            ; to [22]
33B5  64414102           [18] self       5   4   261  ; -1183140784
33B9  D2018000           [19] move       7   1      
33BD  62418001           [20] call       5   3   1  
33C1  1E008000           [21] return     0   1      
33C5  6481C100           [22] self       5   1   262  ; 542147163
33C9  D2010002           [23] move       7   4      
33CD  62418001           [24] call       5   3   1  
33D1  5D010000           [25] getglobal  5   0        ; 538022378
33D5  99410000           [26] loadk      6   1        ; 0
33D9  62410001           [27] call       5   2   1  
33DD  64C14101           [28] self       5   2   263  ; 970454089
33E1  CE014200           [29] gettable   7   0   264  ; "powerSuitPos"
33E5  62418001           [30] call       5   3   1  
33E9  64414202           [31] self       5   4   265  ; 155743781
33ED  D9410000           [32] loadk      7   1        ; 0
33F1  62418001           [33] call       5   3   1  
33F5  64814201           [34] self       5   2   266  ; 1265388858
33F9  DDC10200           [35] getglobal  7   11       ; blockingInputFilter
33FD  62418001           [36] call       5   3   1  
3401  64014301           [37] self       5   2   268  ; 2056776437
3405  DD410300           [38] getglobal  7   13       ; powerSuitCollapsedAnim
3409  17020000           [39] loadbool   8   0   0    ; false
340D  5D820300           [40] getglobal  9   14       ; Engine
3411  4EC2C304           [41] gettable   9   9   271  ; "ATMM_PHYSICS_DRIVEN"
3415  9D820300           [42] getglobal  10  14       ; Engine
3419  8E024405           [43] gettable   10  10  272  ; "PRT_FREEZE"
341D  D7020000           [44] loadbool   11  0   0    ; false
3421  62418003           [45] call       5   7   1  
3425  64414201           [46] self       5   2   265  ; 155743781
3429  D9410400           [47] loadk      7   17       ; 0
342D  62418001           [48] call       5   3   1  
3431  64814402           [49] self       5   4   274  ; -832323870
3435  62410001           [50] call       5   2   1  
3439  1E008000           [51] return     0   1      
                         * constants:
343D  13                 sizek (19)
343E  01                 const type 3
343F  EA911120           const [0]: (538022378)
3443  03                 const type 3
3444  00000000           const [1]: (0)
3448  04                 const type 4
3449  16                 string size (22)
344A  6973436F6E74726F+  "isContro"
3452  6C6C696E674F7065+  "llingOpe"
345A  7261746F7200       "rator\0"
                         const [2]: "isControllingOperator"
3460  04                 const type 4
3461  0C                 string size (12)
3462  6F70657261746F72+  "operator"
346A  506F7300           "Pos\0"
                         const [3]: "operatorPos"
346E  01                 const type 3
346F  65770E40           const [4]: (1074689893)
3473  01                 const type 3
3474  50B47AB9           const [5]: (-1183140784)
3478  01                 const type 3
3479  5B825020           const [6]: (542147163)
347D  01                 const type 3
347E  49F4D739           const [7]: (970454089)
3482  04                 const type 4
3483  0D                 string size (13)
3484  706F776572537569+  "powerSui"
348C  74506F7300         "tPos\0"
                         const [8]: "powerSuitPos"
3491  01                 const type 3
3492  25764809           const [9]: (155743781)
3496  01                 const type 3
3497  3A4D6C4B           const [10]: (1265388858)
349B  04                 const type 4
349C  14                 string size (20)
349D  626C6F636B696E67+  "blocking"
34A5  496E70757446696C+  "InputFil"
34AD  74657200           "ter\0"
                         const [11]: "blockingInputFilter"
34B1  01                 const type 3
34B2  F5EA977A           const [12]: (2056776437)
34B6  04                 const type 4
34B7  17                 string size (23)
34B8  706F776572537569+  "powerSui"
34C0  74436F6C6C617073+  "tCollaps"
34C8  6564416E696D00     "edAnim\0"
                         const [13]: "powerSuitCollapsedAnim"
34CF  04                 const type 4
34D0  07                 string size (7)
34D1  456E67696E6500     "Engine\0"
                         const [14]: "Engine"
34D8  04                 const type 4
34D9  14                 string size (20)
34DA  41544D4D5F504859+  "ATMM_PHY"
34E2  534943535F445249+  "SICS_DRI"
34EA  56454E00           "VEN\0"
                         const [15]: "ATMM_PHYSICS_DRIVEN"
34EE  04                 const type 4
34EF  0B                 string size (11)
34F0  5052545F46524545+  "PRT_FREE"
34F8  5A4500             "ZE\0"
                         const [16]: "PRT_FREEZE"
34FB  03                 const type 3
34FC  0000A0C0           const [17]: (0)
3500  01                 const type 3
3501  E2BE63CE           const [18]: (-832323870)
                         * functions:
3505  00                 sizep (0)
                         * lines:
3506  33                 sizelineinfo (51)
                         [pc] (line)
3507  01                 [01] (1)
3508  02                 [02] (1)
3509  00                 [03] (1)
350A  00                 [04] (2)
350B  01                 [05] (3)
350C  02                 [06] (3)
350D  00                 [07] (3)
350E  00                 [08] (3)
350F  01                 [09] (3)
3510  02                 [10] (5)
3511  00                 [11] (5)
3512  00                 [12] (5)
3513  02                 [13] (5)
3514  02                 [14] (5)
3515  00                 [15] (6)
3516  00                 [16] (9)
3517  03                 [17] (9)
3518  02                 [18] (10)
3519  00                 [19] (10)
351A  00                 [20] (10)
351B  03                 [21] (11)
351C  02                 [22] (13)
351D  00                 [23] (13)
351E  00                 [24] (13)
351F  03                 [25] (14)
3520  02                 [26] (14)
3521  00                 [27] (14)
3522  00                 [28] (15)
3523  03                 [29] (15)
3524  02                 [30] (15)
3525  00                 [31] (17)
3526  00                 [32] (17)
3527  03                 [33] (17)
3528  02                 [34] (19)
3529  00                 [35] (19)
352A  00                 [36] (19)
352B  05                 [37] (20)
352C  02                 [38] (20)
352D  00                 [39] (20)
352E  00                 [40] (20)
352F  05                 [41] (20)
3530  02                 [42] (20)
3531  00                 [43] (20)
3532  00                 [44] (20)
3533  05                 [45] (20)
3534  02                 [46] (21)
3535  00                 [47] (21)
3536  00                 [48] (21)
3537  05                 [49] (23)
3538  02                 [50] (23)
3539  00                 [51] (24)
                         * locals:
35D3  00                 sizelocvars (0)
                         * upvalues:
35D4  00                 sizeupvalues (0)
                         ** end of function **

                         
35D5                     ** function [11] definition (level 2)
                         ** start of function **
35D5  00                 string size (0)
                         source name: (none)
35D7  04                 line defined (538)
35D8  D5                 last line defined (597)
35D9  04                 nups (4)
35DA  04                 numparams (3)
35DB  03                 is_vararg (0)
35DC  00                 maxstacksize (18)
                         * code:
35DF  01                 sizecode (160)
35E0  98400000           [001] test       2       1    ; to [3] if false
35E4  1A000680           [002] jmp        25           ; to [28]
35E8  DD000000           [003] getglobal  3   0        ; gClient
35EC  E440C001           [004] self       3   3   257  ; 681706190
35F0  E2800001           [005] call       3   2   2  
35F4  D8000000           [006] test       3       0    ; to [8] if true
35F8  1AC00080           [007] jmp        4            ; to [12]
35FC  DD800000           [008] getglobal  3   2        ; 538022378
3600  19C10000           [009] loadk      4   3        ; 0
3604  E2400001           [010] call       3   2   1  
3608  1A80FD7F           [011] jmp        -9           ; to [3]
360C  DD000100           [012] getglobal  3   4        ; gRegion
3610  E440C101           [013] self       3   3   261  ; 2066713391
3614  E2800001           [014] call       3   2   2  
3618  1D810100           [015] getglobal  4   6        ; 1074689893
361C  52018001           [016] move       5   3      
3620  22810001           [017] call       4   2   2  
3624  18410000           [018] test       4       1    ; to [20] if false
3628  1AC00180           [019] jmp        8            ; to [28]
362C  1D010100           [020] getglobal  4   4        ; gRegion
3630  24414102           [021] self       4   4   261  ; 2066713391
3634  22810001           [022] call       4   2   2  
3638  D2000002           [023] move       3   4      
363C  1D810000           [024] getglobal  4   2        ; 538022378
3640  59C10000           [025] loadk      5   3        ; 0
3644  22410001           [026] call       4   2   1  
3648  1A80FC7F           [027] jmp        -13          ; to [15]
364C  1DC10100           [028] getglobal  4   7        ; gPromotedToHost
3650  18010000           [029] test       4       0    ; to [31] if true
3654  1A400480           [030] jmp        18           ; to [49]
3658  98400000           [031] test       2       1    ; to [33] if false
365C  1AC00380           [032] jmp        16           ; to [49]
3660  24014200           [033] self       4   0   264  ; 1048009728
3664  22810001           [034] call       4   2   2  
3668  5D410200           [035] getglobal  5   9        ; 572299008
366C  62818000           [036] call       5   1   2  
3670  8E814202           [037] gettable   6   4   266  ; "operatorPos"
fail op	35
3674  63400103           [038] close      1  
3678  1A000280           [039] jmp        9            ; to [49]
367C  8EC14202           [040] gettable   6   4   267  ; "powerSuitPos"
fail op	35
3680  63400103           [041] close      1  
3684  1A400180           [042] jmp        6            ; to [49]
3688  93010000           [043] getupval   6   0      
368C  D2010002           [044] move       7   4      
3690  12020000           [045] move       8   0      
3694  52028000           [046] move       9   1      
3698  A2410002           [047] call       6   4   1  
369C  1E008000           [048] return     0   1      
36A0  A401C300           [049] self       6   1   268  ; -931961296
36A4  A2810001           [050] call       6   2   2  
36A8  D3018000           [051] getupval   7   1      
36AC  CE41C303           [052] gettable   7   7   269  ; -132701534
36B0  1D820300           [053] getglobal  8   14       ; ZERO_VECTOR
fail op	35
36B4  63000203           [054] close      1  
36B8  1A000080           [055] jmp        1            ; to [57]
36BC  17420000           [056] loadbool   8   0   1    ; false, to [58]
36C0  17028000           [057] loadbool   8   1   0    ; true
36C4  64C2C300           [058] self       9   1   271  ; 1839670529
36C8  62820001           [059] call       9   2   2  
36CC  A402C400           [060] self       10  1   272  ; -365711519
36D0  A2820001           [061] call       10  2   2  
36D4  43828204           [062] add        9   9   10 
36D8  92020003           [063] move       10  6      
36DC  E2810002           [064] call       7   4   2  
36E0  24424400           [065] self       8   0   273  ; 1588514395
36E4  22820001           [066] call       8   2   2  
36E8  5D820100           [067] getglobal  9   6        ; 1074689893
36EC  92020004           [068] move       10  8      
36F0  62820001           [069] call       9   2   2  
36F4  58420000           [070] test       9       1    ; to [72] if false
36F8  1A800080           [071] jmp        3            ; to [75]
36FC  64C24304           [072] self       9   8   271  ; 1839670529
3700  62820001           [073] call       9   2   2  
3704  D2018004           [074] move       7   9      
3708  53020001           [075] getupval   9   2      
370C  92020000           [076] move       10  0      
3710  D2028000           [077] move       11  1      
3714  12038003           [078] move       12  7      
3718  62820002           [079] call       9   4   2  
371C  9D820100           [080] getglobal  10  6        ; 1074689893
3720  D2028004           [081] move       11  9      
3724  A2820001           [082] call       10  2   2  
3728  98020000           [083] test       10      0    ; to [85] if true
372C  1A000080           [084] jmp        1            ; to [86]
3730  1E008000           [085] return     0   1      
3734  9D820100           [086] getglobal  10  6        ; 1074689893
3738  DD820400           [087] getglobal  11  18       ; _T
373C  CEC2C405           [088] gettable   11  11  275  ; "GoldenMawStage"
3740  A2820001           [089] call       10  2   2  
3744  98420000           [090] test       10      1    ; to [92] if false
3748  1A000580           [091] jmp        21           ; to [113]
374C  9D020500           [092] getglobal  10  20       ; gGameRules
3750  A4424505           [093] self       10  10  277  ; -2029400442
3754  A2820001           [094] call       10  2   2  
3758  DD820400           [095] getglobal  11  18       ; _T
375C  CCC2458B           [096] settable   11  278 279  ; "operatorHudWasOn" 1
3760  DD820100           [097] getglobal  11  6        ; 1074689893
3764  12030005           [098] move       12  10     
3768  E2820001           [099] call       11  2   2  
376C  D8420000           [100] test       11      1    ; to [102] if false
3770  1A800280           [101] jmp        11           ; to [113]
3774  DD820400           [102] getglobal  11  18       ; _T
3778  24034605           [103] self       12  10  280  ; -1944400657
377C  22830001           [104] call       12  2   2  
3780  CC02038B           [105] settable   11  278 12   ; "operatorHudWasOn"
3784  DD820400           [106] getglobal  11  18       ; _T
3788  CE82C505           [107] gettable   11  11  278  ; "operatorHudWasOn"
378C  D8020000           [108] test       11      0    ; to [110] if true
3790  1A800080           [109] jmp        3            ; to [113]
3794  E4424605           [110] self       11  10  281  ; 1649906088
3798  57030000           [111] loadbool   13  0   0    ; false
379C  E2428001           [112] call       11  3   1  
37A0  E482C600           [113] self       11  1   282  ; -1544157541
37A4  E2820001           [114] call       11  2   2  
37A8  E4C2C605           [115] self       11  11  283  ; -451868902
37AC  E2820001           [116] call       11  2   2  
37B0  2403C700           [117] self       12  1   284  ; 1415377731
37B4  22830001           [118] call       12  2   2  
37B8  6483C604           [119] self       13  9   282  ; -1544157541
37BC  62830001           [120] call       13  2   2  
37C0  6443C706           [121] self       13  13  285  ; -1453579917
37C4  D2038005           [122] move       15  11     
37C8  62438001           [123] call       13  3   1  
37CC  6483C704           [124] self       13  9   286  ; -1603427123
37D0  D2030006           [125] move       15  12     
37D4  62438001           [126] call       13  3   1  
37D8  98000000           [127] test       2       0    ; to [129] if true
37DC  1A800180           [128] jmp        7            ; to [136]
37E0  5D030100           [129] getglobal  13  4        ; gRegion
37E4  64C3C706           [130] self       13  13  287  ; -1693828985
37E8  D2038000           [131] move       15  1      
37EC  62438001           [132] call       13  3   1  
37F0  64034800           [133] self       13  0   288  ; 542147163
37F4  D2038004           [134] move       15  9      
37F8  62438001           [135] call       13  3   1  
37FC  6443C804           [136] self       13  9   289  ; 155743781
3800  D9C30000           [137] loadk      15  3        ; 0
3804  62438001           [138] call       13  3   1  
3808  5D830400           [139] getglobal  13  18       ; _T
380C  4E83C806           [140] gettable   13  13  290  ; "HideTransferenceFx"
3810  58430000           [141] test       13      1    ; to [143] if false
3814  1A000480           [142] jmp        17           ; to [160]
3818  5D830100           [143] getglobal  13  6        ; 1074689893
381C  9D830400           [144] getglobal  14  18       ; _T
3820  8EC34807           [145] gettable   14  14  291  ; "InstantRevive"
3824  62830001           [146] call       13  2   2  
3828  58430000           [147] test       13      1    ; to [149] if false
382C  1AC00080           [148] jmp        4            ; to [153]
3830  5D830400           [149] getglobal  13  18       ; _T
3834  4EC3C806           [150] gettable   13  13  291  ; "InstantRevive"
3838  58430000           [151] test       13      1    ; to [153] if false
383C  1A800180           [152] jmp        7            ; to [160]
3840  6403C904           [153] self       13  9   292  ; 630793108
3844  D3038001           [154] getupval   15  3      
3848  12040000           [155] move       16  0      
384C  57048000           [156] loadbool   17  1   0    ; true
3850  E2838001           [157] call       15  3   2  
3854  17040000           [158] loadbool   16  0   0    ; false
3858  62430002           [159] call       13  4   1  
385C  1E008000           [160] return     0   1      
                         * constants:
3860  25                 sizek (37)
3861  04                 const type 4
3862  08                 string size (8)
3863  67436C69656E7400   "gClient\0"
                         const [0]: "gClient"
386B  01                 const type 3
386C  CE02A228           const [1]: (681706190)
3870  01                 const type 3
3871  EA911120           const [2]: (538022378)
3875  03                 const type 3
3876  00000000           const [3]: (0)
387A  04                 const type 4
387B  08                 string size (8)
387C  67526567696F6E00   "gRegion\0"
                         const [4]: "gRegion"
3884  01                 const type 3
3885  2F8B2F7B           const [5]: (2066713391)
3889  01                 const type 3
388A  65770E40           const [6]: (1074689893)
388E  04                 const type 4
388F  10                 string size (16)
3890  6750726F6D6F7465+  "gPromote"
3898  64546F486F737400   "dToHost\0"
                         const [7]: "gPromotedToHost"
38A0  01                 const type 3
38A1  005C773E           const [8]: (1048009728)
38A5  01                 const type 3
38A6  00971C22           const [9]: (572299008)
38AA  04                 const type 4
38AB  0C                 string size (12)
38AC  6F70657261746F72+  "operator"
38B4  506F7300           "Pos\0"
                         const [10]: "operatorPos"
38B8  04                 const type 4
38B9  0D                 string size (13)
38BA  706F776572537569+  "powerSui"
38C2  74506F7300         "tPos\0"
                         const [11]: "powerSuitPos"
38C7  01                 const type 3
38C8  306673C8           const [12]: (-931961296)
38CC  01                 const type 3
38CD  A22217F8           const [13]: (-132701534)
38D1  04                 const type 4
38D2  0C                 string size (12)
38D3  5A45524F5F564543+  "ZERO_VEC"
38DB  544F5200           "TOR\0"
                         const [14]: "ZERO_VECTOR"
38DF  01                 const type 3
38E0  0125A76D           const [15]: (1839670529)
38E4  01                 const type 3
38E5  61AF33EA           const [16]: (-365711519)
38E9  01                 const type 3
38EA  5BCEAE5E           const [17]: (1588514395)
38EE  04                 const type 4
38EF  03                 string size (3)
38F0  5F5400             "_T\0"
                         const [18]: "_T"
38F3  04                 const type 4
38F4  0F                 string size (15)
38F5  476F6C64656E4D61+  "GoldenMa"
38FD  77537461676500     "wStage\0"
                         const [19]: "GoldenMawStage"
3904  04                 const type 4
3905  0B                 string size (11)
3906  6747616D6552756C+  "gGameRul"
390E  657300             "es\0"
                         const [20]: "gGameRules"
3911  01                 const type 3
3912  86CE0987           const [21]: (-2029400442)
3916  04                 const type 4
3917  11                 string size (17)
3918  6F70657261746F72+  "operator"
3920  4875645761734F6E+  "HudWasOn"
3928  00                 "\0"
                         const [22]: "operatorHudWasOn"
3929  01                 const type 3
392A  01000000           const [23]: (1)
392E  01                 const type 3
392F  EFCC1A8C           const [24]: (-1944400657)
3933  01                 const type 3
3934  A8915762           const [25]: (1649906088)
3938  01                 const type 3
3939  9B06F6A3           const [26]: (-1544157541)
393D  01                 const type 3
393E  1A0711E5           const [27]: (-451868902)
3942  01                 const type 3
3943  43F35C54           const [28]: (1415377731)
3947  01                 const type 3
3948  73215CA9           const [29]: (-1453579917)
394C  01                 const type 3
394D  CDA46DA0           const [30]: (-1603427123)
3951  01                 const type 3
3952  87380A9B           const [31]: (-1693828985)
3956  01                 const type 3
3957  5B825020           const [32]: (542147163)
395B  01                 const type 3
395C  25764809           const [33]: (155743781)
3960  04                 const type 4
3961  13                 string size (19)
3962  486964655472616E+  "HideTran"
396A  73666572656E6365+  "sference"
3972  467800             "Fx\0"
                         const [34]: "HideTransferenceFx"
3975  04                 const type 4
3976  0E                 string size (14)
3977  496E7374616E7452+  "InstantR"
397F  657669766500       "evive\0"
                         const [35]: "InstantRevive"
3985  01                 const type 3
3986  94239925           const [36]: (630793108)
                         * functions:
398A  00                 sizep (0)
                         * lines:
398C  01                 sizelineinfo (160)
                         [pc] (line)
398D  1B                 [001] (27)
398E  02                 [002] (27)
398F  00                 [003] (28)
3990  00                 [004] (28)
3991  1B                 [005] (28)
3992  02                 [006] (28)
3993  00                 [007] (28)
3994  00                 [008] (29)
3995  1C                 [009] (29)
3996  02                 [010] (29)
3997  00                 [011] (29)
3998  00                 [012] (31)
3999  1C                 [013] (31)
399A  02                 [014] (31)
399B  00                 [015] (32)
399C  00                 [016] (32)
399D  1C                 [017] (32)
399E  02                 [018] (32)
399F  00                 [019] (32)
39A0  00                 [020] (33)
39A1  1C                 [021] (33)
39A2  02                 [022] (33)
39A3  00                 [023] (33)
39A4  00                 [024] (34)
39A5  1C                 [025] (34)
39A6  02                 [026] (34)
39A7  00                 [027] (34)
39A8  00                 [028] (38)
39A9  1D                 [029] (38)
39AA  02                 [030] (38)
39AB  00                 [031] (38)
39AC  00                 [032] (38)
39AD  1D                 [033] (39)
39AE  02                 [034] (39)
39AF  00                 [035] (40)
39B0  00                 [036] (40)
39B1  1D                 [037] (41)
39B2  02                 [038] (41)
39B3  00                 [039] (41)
39B4  00                 [040] (41)
39B5  1D                 [041] (41)
39B6  02                 [042] (41)
39B7  00                 [043] (42)
39B8  00                 [044] (42)
39B9  1F                 [045] (42)
39BA  02                 [046] (42)
39BB  00                 [047] (42)
39BC  00                 [048] (43)
39BD  1F                 [049] (47)
39BE  02                 [050] (47)
39BF  00                 [051] (48)
39C0  00                 [052] (48)
39C1  1F                 [053] (48)
39C2  02                 [054] (48)
39C3  00                 [055] (48)
39C4  00                 [056] (48)
39C5  20                 [057] (48)
39C6  02                 [058] (48)
39C7  00                 [059] (48)
39C8  00                 [060] (48)
39C9  20                 [061] (48)
39CA  02                 [062] (48)
39CB  00                 [063] (48)
39CC  00                 [064] (48)
39CD  20                 [065] (49)
39CE  02                 [066] (49)
39CF  00                 [067] (50)
39D0  00                 [068] (50)
39D1  20                 [069] (50)
39D2  02                 [070] (50)
39D3  00                 [071] (50)
39D4  00                 [072] (51)
39D5  20                 [073] (51)
39D6  02                 [074] (51)
39D7  00                 [075] (53)
39D8  00                 [076] (53)
39D9  21                 [077] (53)
39DA  02                 [078] (53)
39DB  00                 [079] (53)
39DC  00                 [080] (55)
39DD  21                 [081] (55)
39DE  02                 [082] (55)
39DF  00                 [083] (55)
39E0  00                 [084] (55)
39E1  21                 [085] (56)
39E2  02                 [086] (59)
39E3  00                 [087] (59)
39E4  00                 [088] (59)
39E5  21                 [089] (59)
39E6  02                 [090] (59)
39E7  00                 [091] (59)
39E8  00                 [092] (60)
39E9  22                 [093] (60)
39EA  02                 [094] (60)
39EB  00                 [095] (61)
39EC  00                 [096] (61)
39ED  22                 [097] (62)
39EE  02                 [098] (62)
39EF  00                 [099] (62)
39F0  00                 [100] (62)
39F1  22                 [101] (62)
39F2  02                 [102] (63)
39F3  00                 [103] (63)
39F4  00                 [104] (63)
39F5  22                 [105] (63)
39F6  02                 [106] (64)
39F7  00                 [107] (64)
39F8  00                 [108] (64)
39F9  26                 [109] (64)
39FA  02                 [110] (65)
39FB  00                 [111] (65)
39FC  00                 [112] (65)
39FD  26                 [113] (70)
39FE  02                 [114] (70)
39FF  00                 [115] (70)
3A00  00                 [116] (70)
3A01  26                 [117] (71)
3A02  02                 [118] (71)
3A03  00                 [119] (73)
3A04  00                 [120] (73)
3A05  26                 [121] (73)
3A06  02                 [122] (73)
3A07  00                 [123] (73)
3A08  00                 [124] (74)
3A09  26                 [125] (74)
3A0A  02                 [126] (74)
3A0B  00                 [127] (76)
3A0C  00                 [128] (76)
3A0D  27                 [129] (77)
3A0E  02                 [130] (77)
3A0F  00                 [131] (77)
3A10  00                 [132] (77)
3A11  27                 [133] (78)
3A12  02                 [134] (78)
3A13  00                 [135] (78)
3A14  00                 [136] (80)
3A15  28                 [137] (80)
3A16  02                 [138] (80)
3A17  00                 [139] (82)
3A18  00                 [140] (82)
3A19  28                 [141] (82)
3A1A  02                 [142] (82)
3A1B  00                 [143] (82)
3A1C  00                 [144] (82)
3A1D  29                 [145] (82)
3A1E  02                 [146] (82)
3A1F  00                 [147] (82)
3A20  00                 [148] (82)
3A21  29                 [149] (82)
3A22  02                 [150] (82)
3A23  00                 [151] (82)
3A24  00                 [152] (82)
3A25  29                 [153] (83)
3A26  02                 [154] (83)
3A27  00                 [155] (83)
3A28  00                 [156] (83)
3A29  29                 [157] (83)
3A2A  02                 [158] (83)
3A2B  00                 [159] (83)
3A2C  00                 [160] (85)
                         * locals:
3C0D  00                 sizelocvars (0)
                         * upvalues:
3C0E  00                 sizeupvalues (0)
                         ** end of function **

                         
3C0F                     ** function [12] definition (level 2)
                         ** start of function **
3C0F  00                 string size (0)
                         source name: (none)
3C11  04                 line defined (599)
3C12  EC                 last line defined (620)
3C13  04                 nups (0)
3C14  00                 numparams (2)
3C15  02                 is_vararg (0)
3C16  00                 maxstacksize (5)
                         * code:
3C18  2E                 sizecode (46)
3C19  9D000000           [01] getglobal  2   0        ; 1074689893
3C1D  D2000000           [02] move       3   0      
3C21  A2800001           [03] call       2   2   2  
3C25  98400000           [04] test       2       1    ; to [6] if false
3C29  1A000180           [05] jmp        5            ; to [11]
3C2D  A4404000           [06] self       2   0   257  ; -1957065004
3C31  1D810000           [07] getglobal  4   2        ; gLotusNpcAvatarType
3C35  A2808001           [08] call       2   3   2  
3C39  98400000           [09] test       2       1    ; to [11] if false
3C3D  1A400080           [10] jmp        2            ; to [13]
3C41  97000000           [11] loadbool   2   0   0    ; false
3C45  9E000001           [12] return     2   2      
3C49  A4C0C000           [13] self       2   1   259  ; -1813551355
3C4D  A2800001           [14] call       2   2   2  
fail op	35
3C51  23800000           [15] close      0  
3C55  1A400080           [16] jmp        2            ; to [19]
3C59  97008000           [17] loadbool   2   1   0    ; true
3C5D  9E000001           [18] return     2   2      
3C61  9D000000           [19] getglobal  2   0        ; 1074689893
3C65  E4004100           [20] self       3   0   260  ; -564624675
3C69  E2000001           [21] call       3   2   0  
3C6D  A2800000           [22] call       2   0   2  
3C71  98000000           [23] test       2       0    ; to [25] if true
3C75  1A800480           [24] jmp        19           ; to [44]
3C79  A4404100           [25] self       2   0   261  ; 1336580517
3C7D  A2800001           [26] call       2   2   2  
3C81  98000000           [27] test       2       0    ; to [29] if true
3C85  1A800380           [28] jmp        15           ; to [44]
3C89  9D800100           [29] getglobal  2   6        ; RequireValidPosture
3C8D  98000000           [30] test       2       0    ; to [32] if true
3C91  1A400280           [31] jmp        10           ; to [42]
3C95  A4C04100           [32] self       2   0   263  ; -214694299
3C99  1D010200           [33] getglobal  4   8        ; ValidNpcPosture
3C9D  A2808001           [34] call       2   3   2  
3CA1  98000000           [35] test       2       0    ; to [37] if true
3CA5  1A800080           [36] jmp        3            ; to [40]
3CA9  97008000           [37] loadbool   2   1   0    ; true
3CAD  9E000001           [38] return     2   2      
3CB1  1A400080           [39] jmp        2            ; to [42]
3CB5  97000000           [40] loadbool   2   0   0    ; false
3CB9  9E000001           [41] return     2   2      
3CBD  97008000           [42] loadbool   2   1   0    ; true
3CC1  9E000001           [43] return     2   2      
3CC5  97000000           [44] loadbool   2   0   0    ; false
3CC9  9E000001           [45] return     2   2      
3CCD  1E008000           [46] return     0   1      
                         * constants:
3CD1  09                 sizek (9)
3CD2  01                 const type 3
3CD3  65770E40           const [0]: (1074689893)
3CD7  01                 const type 3
3CD8  D48E598B           const [1]: (-1957065004)
3CDC  04                 const type 4
3CDD  14                 string size (20)
3CDE  674C6F7475734E70+  "gLotusNp"
3CE6  6341766174617254+  "cAvatarT"
3CEE  79706500           "ype\0"
                         const [2]: "gLotusNpcAvatarType"
3CF2  01                 const type 3
3CF3  0567E793           const [3]: (-1813551355)
3CF7  01                 const type 3
3CF8  DD8258DE           const [4]: (-564624675)
3CFC  01                 const type 3
3CFD  A599AA4F           const [5]: (1336580517)
3D01  04                 const type 4
3D02  14                 string size (20)
3D03  5265717569726556+  "RequireV"
3D0B  616C6964506F7374+  "alidPost"
3D13  75726500           "ure\0"
                         const [6]: "RequireValidPosture"
3D17  01                 const type 3
3D18  650634F3           const [7]: (-214694299)
3D1C  04                 const type 4
3D1D  10                 string size (16)
3D1E  56616C69644E7063+  "ValidNpc"
3D26  506F737475726500   "Posture\0"
                         const [8]: "ValidNpcPosture"
                         * functions:
3D2E  00                 sizep (0)
                         * lines:
3D2F  2E                 sizelineinfo (46)
                         [pc] (line)
3D30  58                 [01] (88)
3D31  02                 [02] (88)
3D32  00                 [03] (88)
3D33  00                 [04] (88)
3D34  58                 [05] (88)
3D35  02                 [06] (88)
3D36  00                 [07] (88)
3D37  00                 [08] (88)
3D38  58                 [09] (88)
3D39  02                 [10] (88)
3D3A  00                 [11] (89)
3D3B  00                 [12] (89)
3D3C  58                 [13] (92)
3D3D  02                 [14] (92)
3D3E  00                 [15] (92)
3D3F  00                 [16] (92)
3D40  58                 [17] (93)
3D41  02                 [18] (93)
3D42  00                 [19] (96)
3D43  00                 [20] (96)
3D44  58                 [21] (96)
3D45  02                 [22] (96)
3D46  00                 [23] (96)
3D47  00                 [24] (96)
3D48  58                 [25] (96)
3D49  02                 [26] (96)
3D4A  00                 [27] (96)
3D4B  00                 [28] (96)
3D4C  58                 [29] (97)
3D4D  02                 [30] (97)
3D4E  00                 [31] (97)
3D4F  00                 [32] (98)
3D50  58                 [33] (98)
3D51  02                 [34] (98)
3D52  00                 [35] (98)
3D53  00                 [36] (98)
3D54  58                 [37] (99)
3D55  02                 [38] (99)
3D56  00                 [39] (99)
3D57  00                 [40] (101)
3D58  59                 [41] (101)
3D59  02                 [42] (104)
3D5A  00                 [43] (104)
3D5B  00                 [44] (107)
3D5C  59                 [45] (107)
3D5D  02                 [46] (108)
                         * locals:
3DE8  00                 sizelocvars (0)
                         * upvalues:
3DE9  00                 sizeupvalues (0)
                         ** end of function **

                         
3DEA                     ** function [13] definition (level 2)
                         ** start of function **
3DEA  00                 string size (0)
                         source name: (none)
3DEC  04                 line defined (622)
3DED  F1                 last line defined (625)
3DEE  04                 nups (0)
3DEF  00                 numparams (2)
3DF0  02                 is_vararg (0)
3DF1  00                 maxstacksize (3)
                         * code:
3DF3  03                 sizecode (3)
3DF4  99000000           [1] loadk      2   0        ; 0
3DF8  9E000001           [2] return     2   2      
3DFC  1E008000           [3] return     0   1      
                         * constants:
3E00  01                 sizek (1)
3E01  03                 const type 3
3E02  00000000           const [0]: (0)
                         * functions:
3E06  00                 sizep (0)
                         * lines:
3E07  03                 sizelineinfo (3)
                         [pc] (line)
3E08  70                 [1] (112)
3E09  02                 [2] (112)
3E0A  00                 [3] (113)
                         * locals:
3E14  00                 sizelocvars (0)
                         * upvalues:
3E15  00                 sizeupvalues (0)
                         ** end of function **

                         
3E16                     ** function [14] definition (level 2)
                         ** start of function **
3E16  00                 string size (0)
                         source name: (none)
3E18  04                 line defined (627)
3E19  FD                 last line defined (637)
3E1A  04                 nups (0)
3E1B  00                 numparams (2)
3E1C  02                 is_vararg (0)
3E1D  00                 maxstacksize (3)
                         * code:
3E1F  0B                 sizecode (11)
3E20  8D400000           [01] sub        2   0   1  
fail op	21
3E24  15800080           [02] concat     0   256 2  
3E28  1A000080           [03] jmp        1            ; to [5]
3E2C  0D404000           [04] sub        0   0   257  ; 0
3E30  8D400000           [05] sub        2   0   1  
fail op	21
3E34  15804001           [06] concat     0   2   258
3E38  1A000080           [07] jmp        1            ; to [9]
3E3C  03404000           [08] add        0   0   257  ; 0
3E40  8D400000           [09] sub        2   0   1  
3E44  9E000001           [10] return     2   2      
3E48  1E008000           [11] return     0   1      
                         * constants:
3E4C  03                 sizek (3)
3E4D  03                 const type 3
3E4E  00003443           const [0]: (0)
3E52  03                 const type 3
3E53  0000B443           const [1]: (0)
3E57  03                 const type 3
3E58  000034C3           const [2]: (0)
                         * functions:
3E5C  00                 sizep (0)
                         * lines:
3E5D  0B                 sizelineinfo (11)
                         [pc] (line)
3E5E  74                 [01] (116)
3E5F  02                 [02] (116)
3E60  00                 [03] (116)
3E61  00                 [04] (117)
3E62  74                 [05] (120)
3E63  02                 [06] (120)
3E64  00                 [07] (120)
3E65  00                 [08] (121)
3E66  74                 [09] (124)
3E67  02                 [10] (124)
3E68  00                 [11] (125)
                         * locals:
3E8A  00                 sizelocvars (0)
                         * upvalues:
3E8B  00                 sizeupvalues (0)
                         ** end of function **

                         
3E8C                     ** function [15] definition (level 2)
                         ** start of function **
3E8C  00                 string size (0)
                         source name: (none)
3E8E  04                 line defined (639)
3E8F  E8                 last line defined (744)
3E90  05                 nups (4)
3E91  04                 numparams (3)
3E92  03                 is_vararg (0)
3E93  00                 maxstacksize (23)
                         * code:
3E96  02                 sizecode (321)
3E97  E400C000           [001] self       3   1   256  ; 263007870
3E9B  E2800001           [002] call       3   2   2  
3E9F  D8000000           [003] test       3       0    ; to [5] if true
3EA3  1A400080           [004] jmp        2            ; to [7]
3EA7  D7000000           [005] loadbool   3   0   0    ; false
3EAB  DE000001           [006] return     3   2      
3EAF  E440C000           [007] self       3   1   257  ; -564624675
3EB3  E2800001           [008] call       3   2   2  
3EB7  1D810000           [009] getglobal  4   2        ; 1074689893
3EBB  52018001           [010] move       5   3      
3EBF  22810001           [011] call       4   2   2  
3EC3  18010000           [012] test       4       0    ; to [14] if true
3EC7  1A400080           [013] jmp        2            ; to [16]
3ECB  17010000           [014] loadbool   4   0   0    ; false
3ECF  1E010001           [015] return     4   2      
3ED3  13010000           [016] getupval   4   0      
3ED7  0EC14002           [017] gettable   4   4   259  ; -1769100871
3EDB  22818000           [018] call       4   1   2  
3EDF  5D010100           [019] getglobal  5   4        ; Lotus_Game
3EE3  4E41C102           [020] gettable   5   5   261  ; "OT_PHYSICAL"
fail op	21
3EE7  15400102           [021] concat     0   4   5  
3EEB  1A800180           [022] jmp        7            ; to [30]
3EEF  13010000           [023] getupval   4   0      
3EF3  0E814102           [024] gettable   4   4   262  ; 138413187
3EF7  22818000           [025] call       4   1   2  
3EFB  18410000           [026] test       4       1    ; to [28] if false
3EFF  1A400080           [027] jmp        2            ; to [30]
3F03  17010000           [028] loadbool   4   0   0    ; false
3F07  1E010001           [029] return     4   2      
3F0B  1D810000           [030] getglobal  4   2        ; 1074689893
3F0F  5DC10100           [031] getglobal  5   7        ; gGameRules
3F13  22810001           [032] call       4   2   2  
3F17  18410000           [033] test       4       1    ; to [35] if false
3F1B  1A800480           [034] jmp        19           ; to [54]
3F1F  1DC10100           [035] getglobal  4   7        ; gGameRules
3F23  24014202           [036] self       4   4   264  ; -1957065004
3F27  9D410200           [037] getglobal  6   9        ; gLotusAttractModeGameRulesType
3F2B  22818001           [038] call       4   3   2  
3F2F  18410000           [039] test       4       1    ; to [41] if false
3F33  1A000380           [040] jmp        13           ; to [54]
3F37  1DC10100           [041] getglobal  4   7        ; gGameRules
3F3B  24814202           [042] self       4   4   266  ; -1201441975
3F3F  22810001           [043] call       4   2   2  
3F43  5D810000           [044] getglobal  5   2        ; 1074689893
3F47  92010002           [045] move       6   4      
3F4B  62810001           [046] call       5   2   2  
3F4F  58410000           [047] test       5       1    ; to [49] if false
3F53  1A000180           [048] jmp        5            ; to [54]
3F57  4EC14202           [049] gettable   5   4   267  ; "transferenceDisabled"
3F5B  58010000           [050] test       5       0    ; to [52] if true
3F5F  1A400080           [051] jmp        2            ; to [54]
3F63  57010000           [052] loadbool   5   0   0    ; false
3F67  5E010001           [053] return     5   2      
3F6B  64014300           [054] self       5   0   268  ; -1130691958
3F6F  62810001           [055] call       5   2   2  
3F73  58010000           [056] test       5       0    ; to [58] if true
3F77  1A803580           [057] jmp        215          ; to [273]
3F7B  6441C300           [058] self       5   1   269  ; 1415377731
3F7F  62810001           [059] call       5   2   2  
3F83  58410000           [060] test       5       1    ; to [62] if false
3F87  1A400080           [061] jmp        2            ; to [64]
3F8B  57010000           [062] loadbool   5   0   0    ; false
3F8F  5E010001           [063] return     5   2      
3F93  5D810000           [064] getglobal  5   2        ; 1074689893
3F97  9D810300           [065] getglobal  6   14       ; _T
3F9B  8EC14303           [066] gettable   6   6   271  ; "CustomOperatorTransferenceEvaluate"
3F9F  62810001           [067] call       5   2   2  
3FA3  58410000           [068] test       5       1    ; to [70] if false
3FA7  1A800180           [069] jmp        7            ; to [77]
3FAB  5D810300           [070] getglobal  5   14       ; _T
3FAF  4E01C402           [071] gettable   5   5   272  ; -630241840
3FB3  92010000           [072] move       6   0      
3FB7  D2018000           [073] move       7   1      
3FBB  12020001           [074] move       8   2      
3FBF  47010002           [075] tailcall   5   4   0  
3FC3  5E010000           [076] return     5   0      
3FC7  6441C400           [077] self       5   1   273  ; -1917464545
3FCB  62810001           [078] call       5   2   2  
3FCF  6481C402           [079] self       5   5   274  ; -767978347
3FD3  62810001           [080] call       5   2   2  
3FD7  9D810000           [081] getglobal  6   2        ; 1074689893
3FDB  D2018002           [082] move       7   5      
3FDF  A2810001           [083] call       6   2   2  
3FE3  98410000           [084] test       6       1    ; to [86] if false
3FE7  1A400180           [085] jmp        6            ; to [92]
3FEB  93018000           [086] getupval   6   1      
3FEF  D2018002           [087] move       7   5      
3FF3  12028001           [088] move       8   3      
3FF7  A2818001           [089] call       6   3   2  
3FFB  98410000           [090] test       6       1    ; to [92] if false
3FFF  1A401580           [091] jmp        86           ; to [178]
4003  A4C1C400           [092] self       6   1   275  ; 1155442732
4007  19020500           [093] loadk      8   20       ; 0
400B  5D420500           [094] getglobal  9   21       ; npcSearchRangeOnAimingFailure
400F  99820500           [095] loadk      10  22       ; 0
4013  D7020000           [096] loadbool   11  0   0    ; false
4017  17038000           [097] loadbool   12  1   0    ; true
401B  57030000           [098] loadbool   13  0   0    ; false
401F  A2810004           [099] call       6   8   2  
4023  DD810000           [100] getglobal  7   2        ; 1074689893
4027  12020003           [101] move       8   6      
402B  E2810001           [102] call       7   2   2  
402F  D8410000           [103] test       7       1    ; to [105] if false
4033  1A800080           [104] jmp        3            ; to [108]
4037  CA010003           [105] len        7   6      
fail op	35
403B  23C0C503           [106] close      0  
403F  1A000280           [107] jmp        9            ; to [117]
4043  DD010600           [108] getglobal  7   24       ; gRegion
4047  E441C603           [109] self       7   7   281  ; 152279552
404B  5D820600           [110] getglobal  9   26       ; gLotusNpcAvatarType
404F  A4C2C600           [111] self       10  1   283  ; 1839670529
4053  A2820001           [112] call       10  2   2  
4057  D9C20500           [113] loadk      11  23       ; 0
405B  1D430500           [114] getglobal  12  21       ; npcSearchRangeOnAimingFailure
405F  E2810003           [115] call       7   6   2  
4063  92018003           [116] move       6   7      
4067  D9010700           [117] loadk      7   28       ; -16
406B  06020004           [118] loadnil    8   8      
406F  6442C700           [119] self       9   1   285  ; 1525877273
4073  62820001           [120] call       9   2   2  
4077  6482C704           [121] self       9   9   286  ; -1168753176
407B  62820001           [122] call       9   2   2  
407F  A4C2C700           [123] self       10  1   287  ; -1493157159
4083  A2820001           [124] call       10  2   2  
4087  DD020800           [125] getglobal  11  32       ; 572299008
408B  19C30500           [126] loadk      12  23       ; 0
408F  59430800           [127] loadk      13  33       ; 0
4093  99C30500           [128] loadk      14  23       ; 0
4097  E2820002           [129] call       11  4   2  
409B  19030500           [130] loadk      12  20       ; 0
409F  4A030003           [131] len        13  6      
40A3  99030500           [132] loadk      14  20       ; 0
40A7  10030980           [133] forprep    12  37       ; to [171]
40AB  1D840000           [134] getglobal  16  2        ; 1074689893
40AF  4EC40303           [135] gettable   17  6   15 
40B3  22840001           [136] call       16  2   2  
40B7  18440000           [137] test       16      1    ; to [139] if false
40BB  1AC00780           [138] jmp        32           ; to [171]
40BF  13048000           [139] getupval   16  1      
40C3  4EC40303           [140] gettable   17  6   15 
40C7  92048001           [141] move       18  3      
40CB  22848001           [142] call       16  3   2  
40CF  18040000           [143] test       16      0    ; to [145] if true
40D3  1A400680           [144] jmp        26           ; to [171]
40D7  1D840800           [145] getglobal  16  34       ; -304944129
40DB  52040005           [146] move       17  10     
40DF  8EC40303           [147] gettable   18  6   15 
40E3  A4C44609           [148] self       18  18  283  ; 1839670529
40E7  A2840001           [149] call       18  2   2  
40EB  83C40209           [150] add        18  18  11 
40EF  22848001           [151] call       16  3   2  
40F3  59C40500           [152] loadk      17  23       ; 0
40F7  9DC40800           [153] getglobal  18  35       ; -918195135
40FB  D3040001           [154] getupval   19  2      
40FF  0E054908           [155] gettable   20  16  292  ; "heading"
4103  4E05C904           [156] gettable   21  9   292  ; "heading"
4107  E2048001           [157] call       19  3   0  
410B  A2840000           [158] call       18  0   2  
410F  43848408           [159] add        17  17  18 
4113  9DC40800           [160] getglobal  18  35       ; -918195135
4117  D3040001           [161] getupval   19  2      
411B  0E454908           [162] gettable   20  16  293  ; "pitch"
411F  4E45C904           [163] gettable   21  9   293  ; "pitch"
4123  E2048001           [164] call       19  3   0  
4127  A2840000           [165] call       18  0   2  
412B  43848408           [166] add        17  17  18 
fail op	21
412F  15C08108           [167] concat     0   17  7  
4133  1A400080           [168] jmp        2            ; to [171]
4137  D2018008           [169] move       7   17     
413B  0EC20303           [170] gettable   8   6   15 
413F  1443F67F           [171] forloop    12  -38      ; to [134] if loop
4143  9D840000           [172] getglobal  18  2        ; 1074689893
4147  D2040004           [173] move       19  8      
414B  A2840001           [174] call       18  2   2  
414F  98440000           [175] test       18      1    ; to [177] if false
4153  1A000080           [176] jmp        1            ; to [178]
4157  52010004           [177] move       5   8      
415B  9D840300           [178] getglobal  18  14       ; _T
415F  8E844909           [179] gettable   18  18  294  ; "gLisetTutorialTransference"
4163  98040000           [180] test       18      0    ; to [182] if true
4167  1A000280           [181] jmp        9            ; to [191]
416B  9D840300           [182] getglobal  18  14       ; _T
416F  8EC44909           [183] gettable   18  18  295  ; "gLisetTutorialTransferenceDone"
4173  98440000           [184] test       18      1    ; to [186] if false
4177  1A000180           [185] jmp        5            ; to [191]
417B  9D840300           [186] getglobal  18  14       ; _T
417F  8C04CA93           [187] settable   18  295 296  ; "gLisetTutorialTransferenceDone" 1
4183  97048000           [188] loadbool   18  1   0    ; true
4187  9E040001           [189] return     18  2      
418B  1A401280           [190] jmp        74           ; to [265]
418F  93048000           [191] getupval   18  1      
4193  D2048002           [192] move       19  5      
4197  12058001           [193] move       20  3      
419B  A2848001           [194] call       18  3   2  
419F  98440000           [195] test       18      1    ; to [197] if false
41A3  1AC00180           [196] jmp        8            ; to [205]
41A7  93048001           [197] getupval   18  3      
41AB  98040000           [198] test       18      0    ; to [200] if true
41AF  1A400680           [199] jmp        26           ; to [226]
41B3  A404C202           [200] self       18  5   264  ; -1957065004
41B7  1D450A00           [201] getglobal  20  41       ; gBaseAvatarType
41BB  A2848001           [202] call       18  3   2  
41BF  98040000           [203] test       18      0    ; to [205] if true
41C3  1A000580           [204] jmp        21           ; to [226]
41C7  9D840000           [205] getglobal  18  2        ; 1074689893
41CB  E444C002           [206] self       19  5   257  ; -564624675
41CF  E2040001           [207] call       19  2   0  
41D3  A2840000           [208] call       18  0   2  
41D7  98040000           [209] test       18      0    ; to [211] if true
41DB  1A800380           [210] jmp        15           ; to [226]
41DF  A404C002           [211] self       18  5   256  ; 263007870
41E3  A2840001           [212] call       18  2   2  
41E7  98040000           [213] test       18      0    ; to [215] if true
41EB  1A400080           [214] jmp        2            ; to [217]
41EF  97040000           [215] loadbool   18  0   0    ; false
41F3  9E040001           [216] return     18  2      
41F7  A484CA00           [217] self       18  1   298  ; -1143195026
41FB  17058000           [218] loadbool   20  1   0    ; true
41FF  A2448001           [219] call       18  3   1  
4203  A4C44A00           [220] self       18  0   299  ; -1398432575
4207  12058002           [221] move       20  5      
420B  A2448001           [222] call       18  3   1  
420F  97048000           [223] loadbool   18  1   0    ; true
4213  9E040001           [224] return     18  2      
4217  1A800980           [225] jmp        39           ; to [265]
421B  9D840300           [226] getglobal  18  14       ; _T
421F  8E044B09           [227] gettable   18  18  300  ; "DisableTransferenceToFrame"
4223  98040000           [228] test       18      0    ; to [230] if true
4227  1A800080           [229] jmp        3            ; to [233]
422B  97040000           [230] loadbool   18  0   0    ; false
422F  9E040001           [231] return     18  2      
4233  1AC00780           [232] jmp        32           ; to [265]
4237  A444CB01           [233] self       18  3   301  ; -1813551355
423B  A2840001           [234] call       18  2   2  
423F  DD840000           [235] getglobal  19  2        ; 1074689893
4243  12050009           [236] move       20  18     
4247  E2840001           [237] call       19  2   2  
424B  D8440000           [238] test       19      1    ; to [240] if false
424F  1A000680           [239] jmp        25           ; to [265]
fail op	35
4253  63400009           [240] close      1  
4257  1A800580           [241] jmp        23           ; to [265]
425B  DD840000           [242] getglobal  19  2        ; 1074689893
425F  24454009           [243] self       20  18  257  ; -564624675
4263  22050001           [244] call       20  2   0  
4267  E2840000           [245] call       19  0   2  
426B  D8040000           [246] test       19      0    ; to [248] if true
426F  1A000480           [247] jmp        17           ; to [265]
4273  E4044009           [248] self       19  18  256  ; 263007870
4277  E2840001           [249] call       19  2   2  
427B  D8040000           [250] test       19      0    ; to [252] if true
427F  1A400080           [251] jmp        2            ; to [254]
4283  D7040000           [252] loadbool   19  0   0    ; false
4287  DE040001           [253] return     19  2      
428B  E484CA00           [254] self       19  1   298  ; -1143195026
428F  57058000           [255] loadbool   21  1   0    ; true
4293  E2448001           [256] call       19  3   1  
4297  E4844A09           [257] self       19  18  298  ; -1143195026
429B  57058000           [258] loadbool   21  1   0    ; true
429F  E2448001           [259] call       19  3   1  
42A3  E4C44A00           [260] self       19  0   299  ; -1398432575
42A7  52050009           [261] move       21  18     
42AB  E2448001           [262] call       19  3   1  
42AF  D7048000           [263] loadbool   19  1   0    ; true
42B3  DE040001           [264] return     19  2      
42B7  E484CB00           [265] self       19  1   302  ; 521725352
42BB  5DC50B00           [266] getglobal  21  47       ; -332969190
42BF  99050C00           [267] loadk      22  48       ; "/Lotus/Language/Game/AbilityErrorInvalidTarget"
42C3  62050001           [268] call       21  2   0  
42C7  E2440000           [269] call       19  0   1  
42CB  D7040000           [270] loadbool   19  0   0    ; false
42CF  DE040001           [271] return     19  2      
42D3  1A400B80           [272] jmp        46           ; to [319]
42D7  E444CC01           [273] self       19  3   305  ; -1888201767
42DB  E2840001           [274] call       19  2   2  
42DF  1D850000           [275] getglobal  20  2        ; 1074689893
42E3  52058009           [276] move       21  19     
42E7  22850001           [277] call       20  2   2  
42EB  18450000           [278] test       20      1    ; to [280] if false
42EF  1A400680           [279] jmp        26           ; to [306]
fail op	35
42F3  63408009           [280] close      1  
42F7  1AC00580           [281] jmp        24           ; to [306]
42FB  1D850000           [282] getglobal  20  2        ; 1074689893
42FF  6445C009           [283] self       21  19  257  ; -564624675
4303  62050001           [284] call       21  2   0  
4307  22850000           [285] call       20  0   2  
430B  18050000           [286] test       20      0    ; to [288] if true
430F  1A400480           [287] jmp        18           ; to [306]
4313  2405C009           [288] self       20  19  256  ; 263007870
4317  22850001           [289] call       20  2   2  
431B  18050000           [290] test       20      0    ; to [292] if true
431F  1A400080           [291] jmp        2            ; to [294]
4323  17050000           [292] loadbool   20  0   0    ; false
4327  1E050001           [293] return     20  2      
432B  2485CA00           [294] self       20  1   298  ; -1143195026
432F  97058000           [295] loadbool   22  1   0    ; true
4333  22458001           [296] call       20  3   1  
4337  2485CA09           [297] self       20  19  298  ; -1143195026
433B  97058000           [298] loadbool   22  1   0    ; true
433F  22458001           [299] call       20  3   1  
4343  24C54A00           [300] self       20  0   299  ; -1398432575
4347  92058009           [301] move       22  19     
434B  22458001           [302] call       20  3   1  
434F  17058000           [303] loadbool   20  1   0    ; true
4353  1E050001           [304] return     20  2      
4357  1A000380           [305] jmp        13           ; to [319]
435B  1D850000           [306] getglobal  20  2        ; 1074689893
435F  52058009           [307] move       21  19     
4363  22850001           [308] call       20  2   2  
4367  18050000           [309] test       20      0    ; to [311] if true
436B  1AC00180           [310] jmp        8            ; to [319]
436F  24C54A00           [311] self       20  0   299  ; -1398432575
4373  8605000B           [312] loadnil    22  22     
4377  22458001           [313] call       20  3   1  
437B  2485CA00           [314] self       20  1   298  ; -1143195026
437F  97058000           [315] loadbool   22  1   0    ; true
4383  22458001           [316] call       20  3   1  
4387  17058000           [317] loadbool   20  1   0    ; true
438B  1E050001           [318] return     20  2      
438F  17050000           [319] loadbool   20  0   0    ; false
4393  1E050001           [320] return     20  2      
4397  1E008000           [321] return     0   1      
                         * constants:
439B  32                 sizek (50)
439C  01                 const type 3
439D  7E2EAD0F           const [0]: (263007870)
43A1  01                 const type 3
43A2  DD8258DE           const [1]: (-564624675)
43A6  01                 const type 3
43A7  65770E40           const [2]: (1074689893)
43AB  01                 const type 3
43AC  B9A98D96           const [3]: (-1769100871)
43B0  04                 const type 4
43B1  0B                 string size (11)
43B2  4C6F7475735F4761+  "Lotus_Ga"
43BA  6D6500             "me\0"
                         const [4]: "Lotus_Game"
43BD  04                 const type 4
43BE  0C                 string size (12)
43BF  4F545F5048595349+  "OT_PHYSI"
43C7  43414C00           "CAL\0"
                         const [5]: "OT_PHYSICAL"
43CB  01                 const type 3
43CC  83044008           const [6]: (138413187)
43D0  04                 const type 4
43D1  0B                 string size (11)
43D2  6747616D6552756C+  "gGameRul"
43DA  657300             "es\0"
                         const [7]: "gGameRules"
43DD  01                 const type 3
43DE  D48E598B           const [8]: (-1957065004)
43E2  04                 const type 4
43E3  1F                 string size (31)
43E4  674C6F7475734174+  "gLotusAt"
43EC  74726163744D6F64+  "tractMod"
43F4  6547616D6552756C+  "eGameRul"
43FC  65735479706500     "esType\0"
                         const [9]: "gLotusAttractModeGameRulesType"
4403  01                 const type 3
4404  497363B8           const [10]: (-1201441975)
4408  04                 const type 4
4409  15                 string size (21)
440A  7472616E73666572+  "transfer"
4412  656E636544697361+  "enceDisa"
441A  626C656400         "bled\0"
                         const [11]: "transferenceDisabled"
441F  01                 const type 3
4420  8A029BBC           const [12]: (-1130691958)
4424  01                 const type 3
4425  43F35C54           const [13]: (1415377731)
4429  04                 const type 4
442A  03                 string size (3)
442B  5F5400             "_T\0"
                         const [14]: "_T"
442E  04                 const type 4
442F  23                 string size (35)
4430  437573746F6D4F70+  "CustomOp"
4438  657261746F725472+  "eratorTr"
4440  616E73666572656E+  "ansferen"
4448  63654576616C7561+  "ceEvalua"
4450  746500             "te\0"
                         const [15]: "CustomOperatorTransferenceEvaluate"
4453  01                 const type 3
4454  D0456FDA           const [16]: (-630241840)
4458  01                 const type 3
4459  1FD0B58D           const [17]: (-1917464545)
445D  01                 const type 3
445E  959439D2           const [18]: (-767978347)
4462  01                 const type 3
4463  2CA8DE44           const [19]: (1155442732)
4467  03                 const type 3
4468  0000803F           const [20]: (0)
446C  04                 const type 4
446D  1E                 string size (30)
446E  6E70635365617263+  "npcSearc"
4476  6852616E67654F6E+  "hRangeOn"
447E  41696D696E674661+  "AimingFa"
4486  696C75726500       "ilure\0"
                         const [21]: "npcSearchRangeOnAimingFailure"
448C  03                 const type 3
448D  00004040           const [22]: (0)
4491  03                 const type 3
4492  00000000           const [23]: (0)
4496  04                 const type 4
4497  08                 string size (8)
4498  67526567696F6E00   "gRegion\0"
                         const [24]: "gRegion"
44A0  01                 const type 3
44A1  009A1309           const [25]: (152279552)
44A5  04                 const type 4
44A6  14                 string size (20)
44A7  674C6F7475734E70+  "gLotusNp"
44AF  6341766174617254+  "cAvatarT"
44B7  79706500           "ype\0"
                         const [26]: "gLotusNpcAvatarType"
44BB  01                 const type 3
44BC  0125A76D           const [27]: (1839670529)
44C0  03                 const type 3
44C1  F0237449           const [28]: (-16)
44C5  01                 const type 3
44C6  190AF35A           const [29]: (1525877273)
44CA  01                 const type 3
44CB  E83D56BA           const [30]: (-1168753176)
44CF  01                 const type 3
44D0  D93A00A7           const [31]: (-1493157159)
44D4  01                 const type 3
44D5  00971C22           const [32]: (572299008)
44D9  03                 const type 3
44DA  0000003F           const [33]: (0)
44DE  01                 const type 3
44DF  FFEBD2ED           const [34]: (-304944129)
44E3  01                 const type 3
44E4  417445C9           const [35]: (-918195135)
44E8  04                 const type 4
44E9  08                 string size (8)
44EA  68656164696E6700   "heading\0"
                         const [36]: "heading"
44F2  04                 const type 4
44F3  06                 string size (6)
44F4  706974636800       "pitch\0"
                         const [37]: "pitch"
44FA  04                 const type 4
44FB  1B                 string size (27)
44FC  674C697365745475+  "gLisetTu"
4504  746F7269616C5472+  "torialTr"
450C  616E73666572656E+  "ansferen"
4514  636500             "ce\0"
                         const [38]: "gLisetTutorialTransference"
4517  04                 const type 4
4518  1F                 string size (31)
4519  674C697365745475+  "gLisetTu"
4521  746F7269616C5472+  "torialTr"
4529  616E73666572656E+  "ansferen"
4531  6365446F6E6500     "ceDone\0"
                         const [39]: "gLisetTutorialTransferenceDone"
4538  01                 const type 3
4539  01000000           const [40]: (1)
453D  04                 const type 4
453E  10                 string size (16)
453F  6742617365417661+  "gBaseAva"
4547  7461725479706500   "tarType\0"
                         const [41]: "gBaseAvatarType"
454F  01                 const type 3
4550  6E3ADCBB           const [42]: (-1143195026)
4554  01                 const type 3
4555  C19CA5AC           const [43]: (-1398432575)
4559  04                 const type 4
455A  1B                 string size (27)
455B  44697361626C6554+  "DisableT"
4563  72616E7366657265+  "ransfere"
456B  6E6365546F467261+  "nceToFra"
4573  6D6500             "me\0"
                         const [44]: "DisableTransferenceToFrame"
4576  01                 const type 3
4577  0567E793           const [45]: (-1813551355)
457B  01                 const type 3
457C  A8E5181F           const [46]: (521725352)
4580  01                 const type 3
4581  1A4B27EC           const [47]: (-332969190)
4585  04                 const type 4
4586  2F                 string size (47)
4587  2F4C6F7475732F4C+  "/Lotus/L"
458F  616E67756167652F+  "anguage/"
4597  47616D652F416269+  "Game/Abi"
459F  6C6974794572726F+  "lityErro"
45A7  72496E76616C6964+  "rInvalid"
45AF  54617267657400     "Target\0"
                         const [48]: "/Lotus/Language/Game/AbilityErrorInvalidTarget"
45B6  01                 const type 3
45B7  D953748F           const [49]: (-1888201767)
                         * functions:
45BB  00                 sizep (0)
                         * lines:
45BD  02                 sizelineinfo (321)
                         [pc] (line)
45BE  80                 [001] (-128)
45BF  02                 [002] (-128)
45C0  00                 [003] (-128)
45C1  00                 [004] (-128)
45C2  80                 [005] (-127)
45C3  02                 [006] (-127)
45C4  00                 [007] (-124)
45C5  00                 [008] (-124)
45C6  80                 [009] (-123)
45C7  02                 [010] (-123)
45C8  00                 [011] (-123)
45C9  00                 [012] (-123)
45CA  80                 [013] (-123)
45CB  02                 [014] (-122)
45CC  00                 [015] (-122)
45CD  00                 [016] (-119)
45CE  81                 [017] (-119)
45CF  02                 [018] (-119)
45D0  00                 [019] (-119)
45D1  00                 [020] (-119)
45D2  81                 [021] (-119)
45D3  02                 [022] (-119)
45D4  00                 [023] (-119)
45D5  00                 [024] (-119)
45D6  84                 [025] (-119)
45D7  02                 [026] (-119)
45D8  00                 [027] (-119)
45D9  00                 [028] (-118)
45DA  84                 [029] (-118)
45DB  02                 [030] (-115)
45DC  00                 [031] (-115)
45DD  00                 [032] (-115)
45DE  85                 [033] (-115)
45DF  02                 [034] (-115)
45E0  00                 [035] (-115)
45E1  00                 [036] (-115)
45E2  85                 [037] (-115)
45E3  02                 [038] (-115)
45E4  00                 [039] (-115)
45E5  00                 [040] (-115)
45E6  85                 [041] (-114)
45E7  02                 [042] (-114)
45E8  00                 [043] (-114)
45E9  00                 [044] (-113)
45EA  85                 [045] (-113)
45EB  02                 [046] (-113)
45EC  00                 [047] (-113)
45ED  00                 [048] (-113)
45EE  85                 [049] (-113)
45EF  02                 [050] (-113)
45F0  00                 [051] (-113)
45F1  00                 [052] (-112)
45F2  86                 [053] (-112)
45F3  02                 [054] (-108)
45F4  00                 [055] (-108)
45F5  00                 [056] (-108)
45F6  86                 [057] (-108)
45F7  02                 [058] (-107)
45F8  00                 [059] (-107)
45F9  00                 [060] (-107)
45FA  89                 [061] (-107)
45FB  02                 [062] (-106)
45FC  00                 [063] (-106)
45FD  00                 [064] (-103)
45FE  89                 [065] (-103)
45FF  02                 [066] (-103)
4600  00                 [067] (-103)
4601  00                 [068] (-103)
4602  89                 [069] (-103)
4603  02                 [070] (-102)
4604  00                 [071] (-102)
4605  00                 [072] (-102)
4606  89                 [073] (-102)
4607  02                 [074] (-102)
4608  00                 [075] (-102)
4609  00                 [076] (-102)
460A  89                 [077] (-99)
460B  02                 [078] (-99)
460C  00                 [079] (-99)
460D  00                 [080] (-99)
460E  89                 [081] (-98)
460F  02                 [082] (-98)
4610  00                 [083] (-98)
4611  00                 [084] (-98)
4612  89                 [085] (-98)
4613  02                 [086] (-98)
4614  00                 [087] (-98)
4615  00                 [088] (-98)
4616  89                 [089] (-98)
4617  02                 [090] (-98)
4618  00                 [091] (-98)
4619  00                 [092] (-97)
461A  89                 [093] (-97)
461B  02                 [094] (-97)
461C  00                 [095] (-97)
461D  00                 [096] (-97)
461E  89                 [097] (-97)
461F  02                 [098] (-97)
4620  00                 [099] (-97)
4621  00                 [100] (-95)
4622  89                 [101] (-95)
4623  02                 [102] (-95)
4624  00                 [103] (-95)
4625  00                 [104] (-95)
4626  89                 [105] (-95)
4627  02                 [106] (-95)
4628  00                 [107] (-95)
4629  00                 [108] (-94)
462A  8A                 [109] (-94)
462B  02                 [110] (-94)
462C  00                 [111] (-94)
462D  00                 [112] (-94)
462E  8A                 [113] (-94)
462F  02                 [114] (-94)
4630  00                 [115] (-94)
4631  00                 [116] (-94)
4632  8D                 [117] (-91)
4633  02                 [118] (-90)
4634  00                 [119] (-89)
4635  00                 [120] (-89)
4636  8D                 [121] (-89)
4637  02                 [122] (-89)
4638  00                 [123] (-88)
4639  00                 [124] (-88)
463A  8D                 [125] (-87)
463B  02                 [126] (-87)
463C  00                 [127] (-87)
463D  00                 [128] (-87)
463E  8D                 [129] (-87)
463F  02                 [130] (-86)
4640  00                 [131] (-86)
4641  00                 [132] (-86)
4642  8D                 [133] (-86)
4643  02                 [134] (-85)
4644  00                 [135] (-85)
4645  00                 [136] (-85)
4646  8D                 [137] (-85)
4647  02                 [138] (-85)
4648  00                 [139] (-85)
4649  00                 [140] (-85)
464A  8D                 [141] (-85)
464B  02                 [142] (-85)
464C  00                 [143] (-85)
464D  00                 [144] (-85)
464E  8D                 [145] (-84)
464F  02                 [146] (-84)
4650  00                 [147] (-84)
4651  00                 [148] (-84)
4652  8D                 [149] (-84)
4653  02                 [150] (-84)
4654  00                 [151] (-84)
4655  00                 [152] (-83)
4656  8D                 [153] (-82)
4657  02                 [154] (-82)
4658  00                 [155] (-82)
4659  00                 [156] (-82)
465A  8D                 [157] (-82)
465B  02                 [158] (-82)
465C  00                 [159] (-82)
465D  00                 [160] (-81)
465E  8E                 [161] (-81)
465F  02                 [162] (-81)
4660  00                 [163] (-81)
4661  00                 [164] (-81)
4662  8E                 [165] (-81)
4663  02                 [166] (-81)
4664  00                 [167] (-80)
4665  00                 [168] (-80)
4666  8E                 [169] (-79)
4667  02                 [170] (-78)
4668  00                 [171] (-86)
4669  00                 [172] (-73)
466A  8F                 [173] (-73)
466B  02                 [174] (-73)
466C  00                 [175] (-73)
466D  00                 [176] (-73)
466E  8F                 [177] (-72)
466F  02                 [178] (-68)
4670  00                 [179] (-68)
4671  00                 [180] (-68)
4672  8F                 [181] (-68)
4673  02                 [182] (-68)
4674  00                 [183] (-68)
4675  00                 [184] (-68)
4676  8F                 [185] (-68)
4677  02                 [186] (-67)
4678  00                 [187] (-67)
4679  00                 [188] (-66)
467A  8F                 [189] (-66)
467B  02                 [190] (-66)
467C  00                 [191] (-65)
467D  00                 [192] (-65)
467E  8F                 [193] (-65)
467F  02                 [194] (-65)
4680  00                 [195] (-65)
4681  00                 [196] (-65)
4682  8F                 [197] (-65)
4683  02                 [198] (-65)
4684  00                 [199] (-65)
4685  00                 [200] (-65)
4686  8F                 [201] (-65)
4687  02                 [202] (-65)
4688  00                 [203] (-65)
4689  00                 [204] (-65)
468A  90                 [205] (-65)
468B  02                 [206] (-65)
468C  00                 [207] (-65)
468D  00                 [208] (-65)
468E  90                 [209] (-65)
468F  02                 [210] (-65)
4690  00                 [211] (-64)
4691  00                 [212] (-64)
4692  94                 [213] (-64)
4693  02                 [214] (-64)
4694  00                 [215] (-63)
4695  00                 [216] (-63)
4696  94                 [217] (-61)
4697  02                 [218] (-61)
4698  00                 [219] (-61)
4699  00                 [220] (-60)
469A  94                 [221] (-60)
469B  02                 [222] (-60)
469C  00                 [223] (-59)
469D  00                 [224] (-59)
469E  94                 [225] (-59)
469F  02                 [226] (-58)
46A0  00                 [227] (-58)
46A1  00                 [228] (-58)
46A2  95                 [229] (-58)
46A3  02                 [230] (-57)
46A4  00                 [231] (-57)
46A5  00                 [232] (-57)
46A6  95                 [233] (-55)
46A7  02                 [234] (-55)
46A8  00                 [235] (-54)
46A9  00                 [236] (-54)
46AA  95                 [237] (-54)
46AB  02                 [238] (-54)
46AC  00                 [239] (-54)
46AD  00                 [240] (-54)
46AE  95                 [241] (-54)
46AF  02                 [242] (-54)
46B0  00                 [243] (-54)
46B1  00                 [244] (-54)
46B2  96                 [245] (-54)
46B3  02                 [246] (-54)
46B4  00                 [247] (-54)
46B5  00                 [248] (-53)
46B6  96                 [249] (-53)
46B7  02                 [250] (-53)
46B8  00                 [251] (-53)
46B9  00                 [252] (-52)
46BA  99                 [253] (-52)
46BB  02                 [254] (-50)
46BC  00                 [255] (-50)
46BD  00                 [256] (-50)
46BE  99                 [257] (-49)
46BF  02                 [258] (-49)
46C0  00                 [259] (-49)
46C1  00                 [260] (-48)
46C2  99                 [261] (-48)
46C3  02                 [262] (-48)
46C4  00                 [263] (-47)
46C5  00                 [264] (-47)
46C6  99                 [265] (-44)
46C7  02                 [266] (-44)
46C8  00                 [267] (-44)
46C9  00                 [268] (-44)
46CA  99                 [269] (-44)
46CB  02                 [270] (-43)
46CC  00                 [271] (-43)
46CD  00                 [272] (-43)
46CE  99                 [273] (-41)
46CF  02                 [274] (-41)
46D0  00                 [275] (-40)
46D1  00                 [276] (-40)
46D2  9A                 [277] (-40)
46D3  02                 [278] (-40)
46D4  00                 [279] (-40)
46D5  00                 [280] (-40)
46D6  9A                 [281] (-40)
46D7  02                 [282] (-40)
46D8  00                 [283] (-40)
46D9  00                 [284] (-40)
46DA  9A                 [285] (-40)
46DB  02                 [286] (-40)
46DC  00                 [287] (-40)
46DD  00                 [288] (-39)
46DE  9A                 [289] (-39)
46DF  02                 [290] (-39)
46E0  00                 [291] (-39)
46E1  00                 [292] (-38)
46E2  9A                 [293] (-38)
46E3  02                 [294] (-36)
46E4  00                 [295] (-36)
46E5  00                 [296] (-36)
46E6  9A                 [297] (-35)
46E7  02                 [298] (-35)
46E8  00                 [299] (-35)
46E9  00                 [300] (-34)
46EA  9A                 [301] (-34)
46EB  02                 [302] (-34)
46EC  00                 [303] (-33)
46ED  00                 [304] (-33)
46EE  9D                 [305] (-33)
46EF  02                 [306] (-32)
46F0  00                 [307] (-32)
46F1  00                 [308] (-32)
46F2  9D                 [309] (-32)
46F3  02                 [310] (-32)
46F4  00                 [311] (-31)
46F5  00                 [312] (-31)
46F6  9D                 [313] (-31)
46F7  02                 [314] (-30)
46F8  00                 [315] (-30)
46F9  00                 [316] (-30)
46FA  9D                 [317] (-29)
46FB  02                 [318] (-29)
46FC  00                 [319] (-25)
46FD  00                 [320] (-25)
46FE  9E                 [321] (-24)
                         * locals:
4AC2  00                 sizelocvars (0)
                         * upvalues:
4AC3  00                 sizeupvalues (0)
                         ** end of function **

                         
4AC4                     ** function [16] definition (level 2)
                         ** start of function **
4AC4  00                 string size (0)
                         source name: (none)
4AC6  05                 line defined (746)
4AC7  A9                 last line defined (809)
4AC8  06                 nups (0)
4AC9  00                 numparams (3)
4ACA  03                 is_vararg (0)
4ACB  00                 maxstacksize (17)
                         * code:
4ACE  01                 sizecode (138)
4ACF  DD000000           [001] getglobal  3   0        ; 1074689893
4AD3  12018000           [002] move       4   1      
4AD7  E2800001           [003] call       3   2   2  
4ADB  D8400000           [004] test       3       1    ; to [6] if false
4ADF  1A400280           [005] jmp        10           ; to [16]
4AE3  DD000000           [006] getglobal  3   0        ; 1074689893
4AE7  12010001           [007] move       4   2      
4AEB  E2800001           [008] call       3   2   2  
4AEF  D8400000           [009] test       3       1    ; to [11] if false
4AF3  1A000180           [010] jmp        5            ; to [16]
4AF7  DD000000           [011] getglobal  3   0        ; 1074689893
4AFB  12010000           [012] move       4   0      
4AFF  E2800001           [013] call       3   2   2  
4B03  D8000000           [014] test       3       0    ; to [16] if true
4B07  1A000080           [015] jmp        1            ; to [17]
4B0B  1E008000           [016] return     0   1      
4B0F  E440C000           [017] self       3   1   257  ; -1957065004
4B13  5D810000           [018] getglobal  5   2        ; gLotusOperatorAvatarType
4B17  E2808001           [019] call       3   3   2  
4B1B  06018002           [020] loadnil    4   5      
4B1F  A4C14000           [021] self       6   0   259  ; -1936482629
4B23  A2810001           [022] call       6   2   2  
4B27  DD010000           [023] getglobal  7   0        ; 1074689893
4B2B  12020003           [024] move       8   6      
4B2F  E2810001           [025] call       7   2   2  
4B33  D8010000           [026] test       7       0    ; to [28] if true
4B37  1A000080           [027] jmp        1            ; to [29]
4B3B  1E008000           [028] return     0   1      
4B3F  D8000000           [029] test       3       0    ; to [31] if true
4B43  1A000280           [030] jmp        9            ; to [40]
4B47  E4014103           [031] self       7   6   260  ; 196800914
4B4B  E2810001           [032] call       7   2   2  
4B4F  24424103           [033] self       8   6   261  ; -365711519
4B53  22820001           [034] call       8   2   2  
4B57  03018203           [035] add        4   7   8  
4B5B  E4814103           [036] self       7   6   262  ; 54877834
4B5F  E2810001           [037] call       7   2   2  
4B63  52018003           [038] move       5   7      
4B67  1A800780           [039] jmp        31           ; to [71]
4B6B  D9C10100           [040] loadk      7   7        ; 0
4B6F  24424001           [041] self       8   2   257  ; -1957065004
4B73  9D020200           [042] getglobal  10  8        ; combatAvatarType
4B77  22828001           [043] call       8   3   2  
4B7B  18420000           [044] test       8       1    ; to [46] if false
4B7F  1A000080           [045] jmp        1            ; to [47]
4B83  D9410200           [046] loadk      7   9        ; 0
4B87  1D820200           [047] getglobal  8   10       ; 562846818
4B8B  6402C100           [048] self       9   1   260  ; 196800914
4B8F  62820001           [049] call       9   2   2  
4B93  A4024101           [050] self       10  2   260  ; 196800914
4B97  A2820001           [051] call       10  2   2  
4B9B  4D828204           [052] sub        9   9   10 
4B9F  22820001           [053] call       8   2   2  
fail op	21
4BA3  15C04204           [054] concat     0   8   267
4BA7  1A400080           [055] jmp        2            ; to [58]
4BAB  5C024304           [056] div        9   8   268  ; 0
4BAF  C4418203           [057] mul        7   7   9  
4BB3  6442C100           [058] self       9   1   261  ; -365711519
4BB7  62820001           [059] call       9   2   2  
4BBB  44C28104           [060] mul        9   9   7  
4BBF  4C82C386           [061] settable   9   269 270  ; "y" 0
4BC3  A4024103           [062] self       10  6   260  ; 196800914
4BC7  A2820001           [063] call       10  2   2  
4BCB  03410205           [064] add        4   10  9  
4BCF  8E424302           [065] gettable   10  4   269  ; "y"
4BD3  8DC24305           [066] sub        10  10  271  ; 0
4BD7  0C818286           [067] settable   4   269 10   ; "y"
4BDB  A4824103           [068] self       10  6   262  ; 54877834
4BDF  A2820001           [069] call       10  2   2  
4BE3  52010005           [070] move       5   10     
4BE7  9D020400           [071] getglobal  10  16       ; gRegion
4BEB  A4424405           [072] self       10  10  273  ; -1110225722
4BEF  1D830400           [073] getglobal  12  18       ; transferenceCameraSpotType
4BF3  52030002           [074] move       13  4      
4BF7  92038002           [075] move       14  5      
4BFB  A2828002           [076] call       10  5   2  
4BFF  D8000000           [077] test       3       0    ; to [79] if true
4C03  1AC00780           [078] jmp        32           ; to [111]
4C07  E4C24401           [079] self       11  2   275  ; 1525877273
4C0B  E2820001           [080] call       11  2   2  
4C0F  1D030000           [081] getglobal  12  0        ; 1074689893
4C13  52038005           [082] move       13  11     
4C17  22830001           [083] call       12  2   2  
4C1B  18430000           [084] test       12      1    ; to [86] if false
4C1F  1AC00B80           [085] jmp        48           ; to [134]
4C23  2403C505           [086] self       12  11  276  ; 1362416700
4C27  92030005           [087] move       14  10     
4C2B  D9430500           [088] loadk      15  21       ; 10
4C2F  22430002           [089] call       12  4   1  
4C33  1D830500           [090] getglobal  12  22       ; 538022378
4C37  59C30500           [091] loadk      13  23       ; -51
4C3B  22430001           [092] call       12  2   1  
4C3F  1D030000           [093] getglobal  12  0        ; 1074689893
4C43  52030001           [094] move       13  2      
4C47  22830001           [095] call       12  2   2  
4C4B  18430000           [096] test       12      1    ; to [98] if false
4C4F  1AC00880           [097] jmp        36           ; to [134]
4C53  24C34401           [098] self       12  2   275  ; 1525877273
4C57  22830001           [099] call       12  2   2  
4C5B  D2020006           [100] move       11  12     
4C5F  1D030000           [101] getglobal  12  0        ; 1074689893
4C63  52038005           [102] move       13  11     
4C67  22830001           [103] call       12  2   2  
4C6B  18430000           [104] test       12      1    ; to [106] if false
4C6F  1AC00680           [105] jmp        28           ; to [134]
4C73  2403C505           [106] self       12  11  276  ; 1362416700
4C77  86030007           [107] loadnil    14  14     
4C7B  D9830300           [108] loadk      15  14       ; 0
4C7F  22430002           [109] call       12  4   1  
4C83  1A800580           [110] jmp        23           ; to [134]
4C87  24C3C400           [111] self       12  1   275  ; 1525877273
4C8B  22830001           [112] call       12  2   2  
4C8F  5D030000           [113] getglobal  13  0        ; 1074689893
4C93  92030006           [114] move       14  12     
4C97  62830001           [115] call       13  2   2  
4C9B  58430000           [116] test       13      1    ; to [118] if false
4C9F  1AC00380           [117] jmp        16           ; to [134]
4CA3  64034506           [118] self       13  12  276  ; 1362416700
4CA7  D2030005           [119] move       15  10     
4CAB  19C40500           [120] loadk      16  23       ; -51
4CAF  62430002           [121] call       13  4   1  
4CB3  5D830500           [122] getglobal  13  22       ; 538022378
4CB7  99030600           [123] loadk      14  24       ; -20
4CBB  62430001           [124] call       13  2   1  
4CBF  5D030000           [125] getglobal  13  0        ; 1074689893
4CC3  92030006           [126] move       14  12     
4CC7  62830001           [127] call       13  2   2  
4CCB  58430000           [128] test       13      1    ; to [130] if false
4CCF  1AC00080           [129] jmp        4            ; to [134]
4CD3  64034506           [130] self       13  12  276  ; 1362416700
4CD7  C6038007           [131] loadnil    15  15     
4CDB  19440500           [132] loadk      16  21       ; 10
4CDF  62430002           [133] call       13  4   1  
4CE3  5D030400           [134] getglobal  13  16       ; gRegion
4CE7  6443C606           [135] self       13  13  281  ; -1693828985
4CEB  D2030005           [136] move       15  10     
4CEF  62438001           [137] call       13  3   1  
4CF3  1E008000           [138] return     0   1      
                         * constants:
4CF7  1A                 sizek (26)
4CF8  01                 const type 3
4CF9  65770E40           const [0]: (1074689893)
4CFD  01                 const type 3
4CFE  D48E598B           const [1]: (-1957065004)
4D02  04                 const type 4
4D03  19                 string size (25)
4D04  674C6F7475734F70+  "gLotusOp"
4D0C  657261746F724176+  "eratorAv"
4D14  6174617254797065+  "atarType"
4D1C  00                 "\0"
                         const [2]: "gLotusOperatorAvatarType"
4D1D  01                 const type 3
4D1E  BB9E938C           const [3]: (-1936482629)
4D22  01                 const type 3
4D23  92F1BA0B           const [4]: (196800914)
4D27  01                 const type 3
4D28  61AF33EA           const [5]: (-365711519)
4D2C  01                 const type 3
4D2D  8A5E4503           const [6]: (54877834)
4D31  03                 const type 3
4D32  00006040           const [7]: (0)
4D36  04                 const type 4
4D37  11                 string size (17)
4D38  636F6D6261744176+  "combatAv"
4D40  6174617254797065+  "atarType"
4D48  00                 "\0"
                         const [8]: "combatAvatarType"
4D49  03                 const type 3
4D4A  0000A040           const [9]: (0)
4D4E  01                 const type 3
4D4F  625C8C21           const [10]: (562846818)
4D53  03                 const type 3
4D54  0000C03F           const [11]: (0)
4D58  03                 const type 3
4D59  00000040           const [12]: (0)
4D5D  04                 const type 4
4D5E  02                 string size (2)
4D5F  7900               "y\0"
                         const [13]: "y"
4D61  03                 const type 3
4D62  00000000           const [14]: (0)
4D66  03                 const type 3
4D67  0000803E           const [15]: (0)
4D6B  04                 const type 4
4D6C  08                 string size (8)
4D6D  67526567696F6E00   "gRegion\0"
                         const [16]: "gRegion"
4D75  01                 const type 3
4D76  C64CD3BD           const [17]: (-1110225722)
4D7A  04                 const type 4
4D7B  1B                 string size (27)
4D7C  7472616E73666572+  "transfer"
4D84  656E636543616D65+  "enceCame"
4D8C  726153706F745479+  "raSpotTy"
4D94  706500             "pe\0"
                         const [18]: "transferenceCameraSpotType"
4D97  01                 const type 3
4D98  190AF35A           const [19]: (1525877273)
4D9C  01                 const type 3
4D9D  3CD43451           const [20]: (1362416700)
4DA1  03                 const type 3
4DA2  0AD7233C           const [21]: (10)
4DA6  01                 const type 3
4DA7  EA911120           const [22]: (538022378)
4DAB  03                 const type 3
4DAC  CDCC4C3D           const [23]: (-51)
4DB0  03                 const type 3
4DB1  EC51B83D           const [24]: (-20)
4DB5  01                 const type 3
4DB6  87380A9B           const [25]: (-1693828985)
                         * functions:
4DBA  00                 sizep (0)
                         * lines:
4DBC  01                 sizelineinfo (138)
                         [pc] (line)
4DBD  EB                 [001] (-21)
4DBE  02                 [002] (-21)
4DBF  00                 [003] (-21)
4DC0  00                 [004] (-21)
4DC1  EB                 [005] (-21)
4DC2  02                 [006] (-21)
4DC3  00                 [007] (-21)
4DC4  00                 [008] (-21)
4DC5  EB                 [009] (-21)
4DC6  02                 [010] (-21)
4DC7  00                 [011] (-21)
4DC8  00                 [012] (-21)
4DC9  EB                 [013] (-21)
4DCA  02                 [014] (-21)
4DCB  00                 [015] (-21)
4DCC  00                 [016] (-20)
4DCD  EB                 [017] (-17)
4DCE  02                 [018] (-17)
4DCF  00                 [019] (-17)
4DD0  00                 [020] (-15)
4DD1  EB                 [021] (-13)
4DD2  02                 [022] (-13)
4DD3  00                 [023] (-11)
4DD4  00                 [024] (-11)
4DD5  EB                 [025] (-11)
4DD6  02                 [026] (-11)
4DD7  00                 [027] (-11)
4DD8  00                 [028] (-10)
4DD9  EB                 [029] (-7)
4DDA  02                 [030] (-7)
4DDB  00                 [031] (-6)
4DDC  00                 [032] (-6)
4DDD  EB                 [033] (-6)
4DDE  02                 [034] (-6)
4DDF  00                 [035] (-6)
4DE0  00                 [036] (-5)
4DE1  EB                 [037] (-5)
4DE2  02                 [038] (-5)
4DE3  00                 [039] (-5)
4DE4  00                 [040] (-3)
4DE5  EB                 [041] (-1)
4DE6  02                 [042] (-1)
4DE7  00                 [043] (-1)
4DE8  00                 [044] (-1)
4DE9  EB                 [045] (-1)
4DEA  02                 [046] (0)
4DEB  00                 [047] (3)
4DEC  00                 [048] (3)
4DED  EB                 [049] (3)
4DEE  02                 [050] (3)
4DEF  00                 [051] (3)
4DF0  00                 [052] (3)
4DF1  EB                 [053] (3)
4DF2  02                 [054] (4)
4DF3  00                 [055] (4)
4DF4  00                 [056] (5)
4DF5  EB                 [057] (5)
4DF6  02                 [058] (8)
4DF7  00                 [059] (8)
4DF8  00                 [060] (8)
4DF9  EC                 [061] (9)
4DFA  02                 [062] (10)
4DFB  00                 [063] (10)
4DFC  00                 [064] (10)
4DFD  EF                 [065] (11)
4DFE  02                 [066] (11)
4DFF  00                 [067] (11)
4E00  00                 [068] (12)
4E01  EF                 [069] (12)
4E02  02                 [070] (12)
4E03  00                 [071] (15)
4E04  00                 [072] (15)
4E05  EF                 [073] (15)
4E06  02                 [074] (15)
4E07  00                 [075] (15)
4E08  00                 [076] (15)
4E09  F1                 [077] (17)
4E0A  02                 [078] (17)
4E0B  00                 [079] (18)
4E0C  00                 [080] (18)
4E0D  F3                 [081] (19)
4E0E  02                 [082] (19)
4E0F  00                 [083] (19)
4E10  00                 [084] (19)
4E11  F3                 [085] (19)
4E12  02                 [086] (20)
4E13  00                 [087] (20)
4E14  00                 [088] (20)
4E15  F5                 [089] (20)
4E16  02                 [090] (21)
4E17  00                 [091] (21)
4E18  00                 [092] (21)
4E19  F5                 [093] (22)
4E1A  02                 [094] (22)
4E1B  00                 [095] (22)
4E1C  00                 [096] (22)
4E1D  F5                 [097] (22)
4E1E  02                 [098] (23)
4E1F  00                 [099] (23)
4E20  00                 [100] (23)
4E21  F5                 [101] (24)
4E22  02                 [102] (24)
4E23  00                 [103] (24)
4E24  00                 [104] (24)
4E25  F5                 [105] (24)
4E26  02                 [106] (25)
4E27  00                 [107] (25)
4E28  00                 [108] (25)
4E29  F6                 [109] (25)
4E2A  02                 [110] (28)
4E2B  00                 [111] (30)
4E2C  00                 [112] (30)
4E2D  F9                 [113] (31)
4E2E  02                 [114] (31)
4E2F  00                 [115] (31)
4E30  00                 [116] (31)
4E31  F9                 [117] (31)
4E32  02                 [118] (32)
4E33  00                 [119] (32)
4E34  00                 [120] (32)
4E35  FA                 [121] (32)
4E36  02                 [122] (33)
4E37  00                 [123] (33)
4E38  00                 [124] (33)
4E39  FA                 [125] (34)
4E3A  02                 [126] (34)
4E3B  00                 [127] (34)
4E3C  00                 [128] (34)
4E3D  FA                 [129] (34)
4E3E  02                 [130] (35)
4E3F  00                 [131] (35)
4E40  00                 [132] (35)
4E41  FA                 [133] (35)
4E42  02                 [134] (40)
4E43  00                 [135] (40)
4E44  00                 [136] (40)
4E45  FA                 [137] (40)
4E46  02                 [138] (41)
                         * locals:
4FE5  00                 sizelocvars (0)
                         * upvalues:
4FE6  00                 sizeupvalues (0)
                         ** end of function **

                         
4FE7                     ** function [17] definition (level 2)
                         ** start of function **
4FE7  00                 string size (0)
                         source name: (none)
4FE9  06                 line defined (811)
4FEA  B2                 last line defined (818)
4FEB  06                 nups (2)
4FEC  02                 numparams (2)
4FED  02                 is_vararg (0)
4FEE  00                 maxstacksize (7)
                         * code:
4FF0  13                 sizecode (19)
4FF1  A4004000           [01] self       2   0   256  ; -523646496
4FF5  A2800001           [02] call       2   2   2  
4FF9  D3000000           [03] getupval   3   0      
4FFD  1D410000           [04] getglobal  4   1        ; 562846818
5001  52010001           [05] move       5   2      
5005  22810001           [06] call       4   2   2  
5009  DC008101           [07] div        3   3   4  
fail op	21
500D  15C00081           [08] concat     0   258 3  
5011  1A400180           [09] jmp        6            ; to [16]
5015  1DC10000           [10] getglobal  4   3        ; math
5019  0E014102           [11] gettable   4   4   260  ; 1710846250
501D  53018000           [12] getupval   5   1      
5021  92018001           [13] move       6   3      
5025  22818001           [14] call       4   3   2  
5029  84000101           [15] mul        2   2   4  
502D  2441C100           [16] self       4   1   261  ; 1798224701
5031  92010001           [17] move       6   2      
5035  22418001           [18] call       4   3   1  
5039  1E008000           [19] return     0   1      
                         * constants:
503D  06                 sizek (6)
503E  01                 const type 3
503F  E0C9C9E0           const [0]: (-523646496)
5043  01                 const type 3
5044  625C8C21           const [1]: (562846818)
5048  03                 const type 3
5049  0000803F           const [2]: (0)
504D  04                 const type 4
504E  05                 string size (5)
504F  6D61746800         "math\0"
                         const [3]: "math"
5054  01                 const type 3
5055  2A71F965           const [4]: (1710846250)
5059  01                 const type 3
505A  3DBB2E6B           const [5]: (1798224701)
                         * functions:
505E  00                 sizep (0)
                         * lines:
505F  13                 sizelineinfo (19)
                         [pc] (line)
5060  2C                 [01] (44)
5061  03                 [02] (44)
5062  00                 [03] (45)
5063  00                 [04] (45)
5064  2C                 [05] (45)
5065  03                 [06] (45)
5066  00                 [07] (45)
5067  00                 [08] (46)
5068  2D                 [09] (46)
5069  03                 [10] (47)
506A  00                 [11] (47)
506B  00                 [12] (47)
506C  2D                 [13] (47)
506D  03                 [14] (47)
506E  00                 [15] (47)
506F  00                 [16] (49)
5070  2D                 [17] (49)
5071  03                 [18] (49)
5072  00                 [19] (50)
                         * locals:
50AC  00                 sizelocvars (0)
                         * upvalues:
50AD  00                 sizeupvalues (0)
                         ** end of function **

                         
50AE                     ** function [18] definition (level 2)
                         ** start of function **
50AE  00                 string size (0)
                         source name: (none)
50B0  06                 line defined (820)
50B1  F0                 last line defined (880)
50B2  06                 nups (2)
50B3  02                 numparams (4)
50B4  04                 is_vararg (0)
50B5  00                 maxstacksize (11)
                         * code:
50B8  01                 sizecode (152)
50B9  1D010000           [001] getglobal  4   0        ; 1074689893
50BD  52018000           [002] move       5   1      
50C1  22810001           [003] call       4   2   2  
50C5  18410000           [004] test       4       1    ; to [6] if false
50C9  1A802380           [005] jmp        143          ; to [149]
50CD  24414001           [006] self       4   2   257  ; 1511086594
50D1  22810001           [007] call       4   2   2  
50D5  18410000           [008] test       4       1    ; to [10] if false
50D9  1A002280           [009] jmp        137          ; to [147]
50DD  24814001           [010] self       4   2   258  ; -1519595333
50E1  22810001           [011] call       4   2   2  
50E5  18410000           [012] test       4       1    ; to [14] if false
50E9  1A002180           [013] jmp        133          ; to [147]
50ED  24C14001           [014] self       4   2   259  ; 796523475
50F1  22810001           [015] call       4   2   2  
50F5  64014101           [016] self       5   2   260  ; -1544157541
50F9  62810001           [017] call       5   2   2  
50FD  6441C102           [018] self       5   5   261  ; -655244917
5101  62810001           [019] call       5   2   2  
fail op	33
5105  21008102           [020] tforloop   0       4    ; to [22] if exit
5109  1A001F80           [021] jmp        125          ; to [147]
510D  2481C100           [022] self       4   1   262  ; 606226066
5111  97018000           [023] loadbool   6   1   0    ; true
5115  22418001           [024] call       4   3   1  
5119  24C1C100           [025] self       4   1   263  ; -2013261060
511D  97018000           [026] loadbool   6   1   0    ; true
5121  22418001           [027] call       4   3   1  
5125  2401C200           [028] self       4   1   264  ; -2113194289
5129  97010000           [029] loadbool   6   0   0    ; false
512D  22418001           [030] call       4   3   1  
5131  2441C200           [031] self       4   1   265  ; -986181426
5135  97010000           [032] loadbool   6   0   0    ; false
5139  22418001           [033] call       4   3   1  
513D  2481C200           [034] self       4   1   266  ; 1292478819
5141  22810001           [035] call       4   2   2  
5145  24C14202           [036] self       4   4   267  ; 176029597
5149  9D010300           [037] getglobal  6   12       ; ZERO_VECTOR
514D  22418001           [038] call       4   3   1  
5151  D8400000           [039] test       3       1    ; to [41] if false
5155  1A400080           [040] jmp        2            ; to [43]
5159  2441C300           [041] self       4   1   269  ; -252114176
515D  22410001           [042] call       4   2   1  
5161  1D810300           [043] getglobal  4   14       ; 538022378
5165  59C10300           [044] loadk      5   15       ; 0
5169  22410001           [045] call       4   2   1  
516D  1D010000           [046] getglobal  4   0        ; 1074689893
5171  52010001           [047] move       5   2      
5175  22810001           [048] call       4   2   2  
5179  18010000           [049] test       4       0    ; to [51] if true
517D  1A000080           [050] jmp        1            ; to [52]
5181  1E008000           [051] return     0   1      
5185  24014401           [052] self       4   2   272  ; -717859730
5189  22810001           [053] call       4   2   2  
518D  18010000           [054] test       4       0    ; to [56] if true
5191  1AC00380           [055] jmp        16           ; to [72]
5195  13010000           [056] getupval   4   0      
5199  52010000           [057] move       5   0      
519D  92010001           [058] move       6   2      
51A1  D2018000           [059] move       7   1      
51A5  22410002           [060] call       4   4   1  
51A9  1D010000           [061] getglobal  4   0        ; 1074689893
51AD  52010001           [062] move       5   2      
51B1  22810001           [063] call       4   2   2  
51B5  18410000           [064] test       4       1    ; to [66] if false
51B9  1A000180           [065] jmp        5            ; to [71]
51BD  1D010000           [066] getglobal  4   0        ; 1074689893
51C1  52018000           [067] move       5   1      
51C5  22810001           [068] call       4   2   2  
51C9  18010000           [069] test       4       0    ; to [71] if true
51CD  1A000080           [070] jmp        1            ; to [72]
51D1  1E008000           [071] return     0   1      
51D5  2441C400           [072] self       4   1   273  ; -1917464545
51D9  22810001           [073] call       4   2   2  
51DD  24814402           [074] self       4   4   274  ; -800545834
51E1  A4414401           [075] self       6   2   273  ; -1917464545
51E5  A2010001           [076] call       6   2   0  
51E9  22410000           [077] call       4   0   1  
51ED  24C14401           [078] self       4   2   275  ; 1265388858
51F1  9D010500           [079] getglobal  6   20       ; powerMenuInputFilter
51F5  22418001           [080] call       4   3   1  
51F9  24414500           [081] self       4   0   277  ; 542147163
51FD  92018000           [082] move       6   1      
5201  22418001           [083] call       4   3   1  
5205  1D810500           [084] getglobal  4   22       ; gGameRules
5209  24C14502           [085] self       4   4   279  ; -569679
520D  22810001           [086] call       4   2   2  
5211  18410000           [087] test       4       1    ; to [89] if false
5215  1AC00080           [088] jmp        4            ; to [93]
5219  13018000           [089] getupval   4   1      
521D  52010001           [090] move       5   2      
5221  92018000           [091] move       6   1      
5225  22418001           [092] call       4   3   1  
5229  2401C100           [093] self       4   1   260  ; -1544157541
522D  22810001           [094] call       4   2   2  
5231  5D010000           [095] getglobal  5   0        ; 1074689893
5235  92010002           [096] move       6   4      
5239  62810001           [097] call       5   2   2  
523D  58410000           [098] test       5       1    ; to [100] if false
5241  1AC00280           [099] jmp        12           ; to [112]
5245  64014602           [100] self       5   4   280  ; 2053793344
5249  62810001           [101] call       5   2   2  
524D  58010000           [102] test       5       0    ; to [104] if true
5251  1AC00080           [103] jmp        4            ; to [108]
5255  64414602           [104] self       5   4   281  ; -1677224104
5259  DD810600           [105] getglobal  7   26       ; operatorSpawnImmunityDuration
525D  62418001           [106] call       5   3   1  
5261  1AC00080           [107] jmp        4            ; to [112]
5265  64C14602           [108] self       5   4   283  ; 1849910085
5269  DD810600           [109] getglobal  7   26       ; operatorSpawnImmunityDuration
526D  1D820600           [110] getglobal  8   26       ; operatorSpawnImmunityDuration
5271  62410002           [111] call       5   4   1  
5275  6401C700           [112] self       5   1   284  ; 1637313982
5279  62810001           [113] call       5   2   2  
527D  58010000           [114] test       5       0    ; to [116] if true
5281  1A400180           [115] jmp        6            ; to [122]
5285  6441C700           [116] self       5   1   285  ; -832323870
5289  62410001           [117] call       5   2   1  
528D  5D810300           [118] getglobal  5   14       ; 538022378
5291  99C10300           [119] loadk      6   15       ; 0
5295  62410001           [120] call       5   2   1  
5299  1A40FD7F           [121] jmp        -10          ; to [112]
529D  6441C400           [122] self       5   1   273  ; -1917464545
52A1  62810001           [123] call       5   2   2  
52A5  6481C702           [124] self       5   5   286  ; 1674984496
52A9  DDC10700           [125] getglobal  7   31       ; Engine
52AD  CE01C803           [126] gettable   7   7   288  ; "SLOT_3"
52B1  62818001           [127] call       5   3   2  
52B5  9D010000           [128] getglobal  6   0        ; 1074689893
52B9  D2018002           [129] move       7   5      
52BD  A2810001           [130] call       6   2   2  
52C1  98410000           [131] test       6       1    ; to [133] if false
52C5  1AC00380           [132] jmp        16           ; to [149]
52C9  A441C800           [133] self       6   1   289  ; -655368910
52CD  12028002           [134] move       8   5      
52D1  A2418001           [135] call       6   3   1  
52D5  A441C400           [136] self       6   1   273  ; -1917464545
52D9  A2810001           [137] call       6   2   2  
52DD  A4814803           [138] self       6   6   290  ; 688774453
52E1  1DC20700           [139] getglobal  8   31       ; Engine
52E5  0EC24804           [140] gettable   8   8   291  ; "SLOT_2"
52E9  5DC20700           [141] getglobal  9   31       ; Engine
52ED  4E02C904           [142] gettable   9   9   292  ; "MAIN_HAND"
52F1  9DC20700           [143] getglobal  10  31       ; Engine
52F5  8E424905           [144] gettable   10  10  293  ; "InventoryControllerBase_ES_INSTANT_EQUIP"
52F9  A2418002           [145] call       6   5   1  
52FD  1A400080           [146] jmp        2            ; to [149]
5301  A481C900           [147] self       6   1   294  ; 115701976
5305  A2410001           [148] call       6   2   1  
5309  9D810300           [149] getglobal  6   14       ; 538022378
530D  D9C10300           [150] loadk      7   15       ; 0
5311  A2410001           [151] call       6   2   1  
5315  1E008000           [152] return     0   1      
                         * constants:
5319  27                 sizek (39)
531A  01                 const type 3
531B  65770E40           const [0]: (1074689893)
531F  01                 const type 3
5320  025A115A           const [1]: (1511086594)
5324  01                 const type 3
5325  BBD06CA5           const [2]: (-1519595333)
5329  01                 const type 3
532A  D3FB792F           const [3]: (796523475)
532E  01                 const type 3
532F  9B06F6A3           const [4]: (-1544157541)
5333  01                 const type 3
5334  8BC1F1D8           const [5]: (-655244917)
5338  01                 const type 3
5339  92462224           const [6]: (606226066)
533D  01                 const type 3
533E  FC120088           const [7]: (-2013261060)
5342  01                 const type 3
5343  CF360B82           const [8]: (-2113194289)
5347  01                 const type 3
5348  CE1038C5           const [9]: (-986181426)
534C  01                 const type 3
534D  63A9094D           const [10]: (1292478819)
5351  01                 const type 3
5352  9DFF7D0A           const [11]: (176029597)
5356  04                 const type 4
5357  0C                 string size (12)
5358  5A45524F5F564543+  "ZERO_VEC"
5360  544F5200           "TOR\0"
                         const [12]: "ZERO_VECTOR"
5364  01                 const type 3
5365  000BF9F0           const [13]: (-252114176)
5369  01                 const type 3
536A  EA911120           const [14]: (538022378)
536E  03                 const type 3
536F  00000000           const [15]: (0)
5373  01                 const type 3
5374  6E5436D5           const [16]: (-717859730)
5378  01                 const type 3
5379  1FD0B58D           const [17]: (-1917464545)
537D  01                 const type 3
537E  D6A348D0           const [18]: (-800545834)
5382  01                 const type 3
5383  3A4D6C4B           const [19]: (1265388858)
5387  04                 const type 4
5388  15                 string size (21)
5389  706F7765724D656E+  "powerMen"
5391  75496E7075744669+  "uInputFi"
5399  6C74657200         "lter\0"
                         const [20]: "powerMenuInputFilter"
539E  01                 const type 3
539F  5B825020           const [21]: (542147163)
53A3  04                 const type 4
53A4  0B                 string size (11)
53A5  6747616D6552756C+  "gGameRul"
53AD  657300             "es\0"
                         const [22]: "gGameRules"
53B0  01                 const type 3
53B1  B14EF7FF           const [23]: (-569679)
53B5  01                 const type 3
53B6  40666A7A           const [24]: (2053793344)
53BA  01                 const type 3
53BB  5897079C           const [25]: (-1677224104)
53BF  04                 const type 4
53C0  1E                 string size (30)
53C1  6F70657261746F72+  "operator"
53C9  537061776E496D6D+  "SpawnImm"
53D1  756E697479447572+  "unityDur"
53D9  6174696F6E00       "ation\0"
                         const [26]: "operatorSpawnImmunityDuration"
53DF  01                 const type 3
53E0  4563436E           const [27]: (1849910085)
53E4  01                 const type 3
53E5  BE6D9761           const [28]: (1637313982)
53E9  01                 const type 3
53EA  E2BE63CE           const [29]: (-832323870)
53EE  01                 const type 3
53EF  303CD663           const [30]: (1674984496)
53F3  04                 const type 4
53F4  07                 string size (7)
53F5  456E67696E6500     "Engine\0"
                         const [31]: "Engine"
53FC  04                 const type 4
53FD  07                 string size (7)
53FE  534C4F545F3300     "SLOT_3\0"
                         const [32]: "SLOT_3"
5405  01                 const type 3
5406  32DDEFD8           const [33]: (-655368910)
540A  01                 const type 3
540B  35DD0D29           const [34]: (688774453)
540F  04                 const type 4
5410  07                 string size (7)
5411  534C4F545F3200     "SLOT_2\0"
                         const [35]: "SLOT_2"
5418  04                 const type 4
5419  0A                 string size (10)
541A  4D41494E5F48414E+  "MAIN_HAN"
5422  4400               "D\0"
                         const [36]: "MAIN_HAND"
5424  04                 const type 4
5425  29                 string size (41)
5426  496E76656E746F72+  "Inventor"
542E  79436F6E74726F6C+  "yControl"
5436  6C6572426173655F+  "lerBase_"
543E  45535F494E535441+  "ES_INSTA"
5446  4E545F4551554950+  "NT_EQUIP"
544E  00                 "\0"
                         const [37]: "InventoryControllerBase_ES_INSTANT_EQUIP"
544F  01                 const type 3
5450  D878E506           const [38]: (115701976)
                         * functions:
5454  00                 sizep (0)
                         * lines:
5456  01                 sizelineinfo (152)
                         [pc] (line)
5457  35                 [001] (53)
5458  03                 [002] (53)
5459  00                 [003] (53)
545A  00                 [004] (53)
545B  35                 [005] (53)
545C  03                 [006] (54)
545D  00                 [007] (54)
545E  00                 [008] (54)
545F  35                 [009] (54)
5460  03                 [010] (54)
5461  00                 [011] (54)
5462  00                 [012] (54)
5463  35                 [013] (54)
5464  03                 [014] (54)
5465  00                 [015] (54)
5466  00                 [016] (54)
5467  35                 [017] (54)
5468  03                 [018] (54)
5469  00                 [019] (54)
546A  00                 [020] (54)
546B  36                 [021] (54)
546C  03                 [022] (55)
546D  00                 [023] (55)
546E  00                 [024] (55)
546F  36                 [025] (56)
5470  03                 [026] (56)
5471  00                 [027] (56)
5472  00                 [028] (57)
5473  36                 [029] (57)
5474  03                 [030] (57)
5475  00                 [031] (58)
5476  00                 [032] (58)
5477  36                 [033] (58)
5478  03                 [034] (59)
5479  00                 [035] (59)
547A  00                 [036] (59)
547B  36                 [037] (59)
547C  03                 [038] (59)
547D  00                 [039] (61)
547E  00                 [040] (61)
547F  36                 [041] (62)
5480  03                 [042] (62)
5481  00                 [043] (65)
5482  00                 [044] (65)
5483  36                 [045] (65)
5484  03                 [046] (67)
5485  00                 [047] (67)
5486  00                 [048] (67)
5487  36                 [049] (67)
5488  03                 [050] (67)
5489  00                 [051] (68)
548A  00                 [052] (71)
548B  36                 [053] (71)
548C  03                 [054] (71)
548D  00                 [055] (71)
548E  00                 [056] (72)
548F  36                 [057] (72)
5490  03                 [058] (72)
5491  00                 [059] (72)
5492  00                 [060] (72)
5493  36                 [061] (73)
5494  03                 [062] (73)
5495  00                 [063] (73)
5496  00                 [064] (73)
5497  36                 [065] (73)
5498  03                 [066] (73)
5499  00                 [067] (73)
549A  00                 [068] (73)
549B  36                 [069] (73)
549C  03                 [070] (73)
549D  00                 [071] (74)
549E  00                 [072] (78)
549F  36                 [073] (78)
54A0  03                 [074] (78)
54A1  00                 [075] (78)
54A2  00                 [076] (78)
54A3  36                 [077] (78)
54A4  03                 [078] (80)
54A5  00                 [079] (80)
54A6  00                 [080] (80)
54A7  36                 [081] (81)
54A8  03                 [082] (81)
54A9  00                 [083] (81)
54AA  00                 [084] (83)
54AB  37                 [085] (83)
54AC  03                 [086] (83)
54AD  00                 [087] (83)
54AE  00                 [088] (83)
54AF  37                 [089] (84)
54B0  03                 [090] (84)
54B1  00                 [091] (84)
54B2  00                 [092] (84)
54B3  37                 [093] (87)
54B4  03                 [094] (87)
54B5  00                 [095] (88)
54B6  00                 [096] (88)
54B7  38                 [097] (88)
54B8  03                 [098] (88)
54B9  00                 [099] (88)
54BA  00                 [100] (89)
54BB  38                 [101] (89)
54BC  03                 [102] (89)
54BD  00                 [103] (89)
54BE  00                 [104] (90)
54BF  38                 [105] (90)
54C0  03                 [106] (90)
54C1  00                 [107] (90)
54C2  00                 [108] (92)
54C3  39                 [109] (92)
54C4  03                 [110] (92)
54C5  00                 [111] (92)
54C6  00                 [112] (96)
54C7  39                 [113] (96)
54C8  03                 [114] (96)
54C9  00                 [115] (96)
54CA  00                 [116] (97)
54CB  39                 [117] (97)
54CC  03                 [118] (98)
54CD  00                 [119] (98)
54CE  00                 [120] (98)
54CF  3A                 [121] (98)
54D0  03                 [122] (101)
54D1  00                 [123] (101)
54D2  00                 [124] (101)
54D3  3A                 [125] (101)
54D4  03                 [126] (101)
54D5  00                 [127] (101)
54D6  00                 [128] (102)
54D7  3A                 [129] (102)
54D8  03                 [130] (102)
54D9  00                 [131] (102)
54DA  00                 [132] (102)
54DB  3B                 [133] (103)
54DC  03                 [134] (103)
54DD  00                 [135] (103)
54DE  00                 [136] (104)
54DF  3B                 [137] (104)
54E0  03                 [138] (104)
54E1  00                 [139] (104)
54E2  00                 [140] (104)
54E3  3B                 [141] (104)
54E4  03                 [142] (104)
54E5  00                 [143] (104)
54E6  00                 [144] (104)
54E7  3B                 [145] (104)
54E8  03                 [146] (105)
54E9  00                 [147] (107)
54EA  00                 [148] (107)
54EB  3B                 [149] (111)
54EC  03                 [150] (111)
54ED  00                 [151] (111)
54EE  00                 [152] (112)
                         * locals:
56B7  00                 sizelocvars (0)
                         * upvalues:
56B8  00                 sizeupvalues (0)
                         ** end of function **

                         
56B9                     ** function [19] definition (level 2)
                         ** start of function **
56B9  00                 string size (0)
                         source name: (none)
56BB  06                 line defined (882)
56BC  A9                 last line defined (1193)
56BD  09                 nups (11)
56BE  0B                 numparams (4)
56BF  04                 is_vararg (0)
56C0  00                 maxstacksize (50)
                         * code:
56C3  06                 sizecode (884)
56C4  1D010000           [001] getglobal  4   0        ; 1074689893
56C8  52010001           [002] move       5   2      
56CC  22810001           [003] call       4   2   2  
56D0  18010000           [004] test       4       0    ; to [6] if true
56D4  1A000080           [005] jmp        1            ; to [7]
56D8  1E008000           [006] return     0   1      
56DC  2441C000           [007] self       4   1   257  ; -564624675
56E0  22810001           [008] call       4   2   2  
56E4  5D010000           [009] getglobal  5   0        ; 1074689893
56E8  92010002           [010] move       6   4      
56EC  62810001           [011] call       5   2   2  
56F0  58010000           [012] test       5       0    ; to [14] if true
56F4  1A000080           [013] jmp        1            ; to [15]
56F8  1E008000           [014] return     0   1      
56FC  64814001           [015] self       5   2   258  ; 155743781
5700  D9C10000           [016] loadk      7   3        ; 0
5704  62418001           [017] call       5   3   1  
5708  6481C000           [018] self       5   1   258  ; 155743781
570C  D9010100           [019] loadk      7   4        ; 0
5710  62418001           [020] call       5   3   1  
5714  64414100           [021] self       5   0   261  ; -1130691958
5718  62810001           [022] call       5   2   2  
571C  A4814101           [023] self       6   2   262  ; -1957065004
5720  1DC20100           [024] getglobal  8   7        ; gTennoAvatarType
5724  A2818001           [025] call       6   3   2  
fail op	9
5728  89010003           [026] settable   6   6   0  
572C  D7010000           [027] loadbool   7   0   0    ; false
5730  2482C100           [028] self       8   1   262  ; -1957065004
5734  9DC20100           [029] getglobal  10  7        ; gTennoAvatarType
5738  22828001           [030] call       8   3   2  
573C  18420000           [031] test       8       1    ; to [33] if false
5740  1AC00380           [032] jmp        16           ; to [49]
5744  24024202           [033] self       8   4   264  ; 1048009728
5748  22820001           [034] call       8   2   2  
574C  5D420200           [035] getglobal  9   9        ; gRegion
5750  6482C204           [036] self       9   9   266  ; -1520831144
5754  62820001           [037] call       9   2   2  
5758  58020000           [038] test       9       0    ; to [40] if true
575C  1A000280           [039] jmp        9            ; to [49]
5760  5D020000           [040] getglobal  9   0        ; 1074689893
5764  8EC24204           [041] gettable   10  8   267  ; "possessedAgentType"
5768  62820001           [042] call       9   2   2  
576C  58420000           [043] test       9       1    ; to [45] if false
5770  1AC00080           [044] jmp        4            ; to [49]
5774  6402C300           [045] self       9   1   268  ; -322284174
5778  CEC24204           [046] gettable   11  8   267  ; "possessedAgentType"
577C  0E434304           [047] gettable   12  8   269  ; "possessedAgentTeam"
5780  62420002           [048] call       9   4   1  
5784  98410000           [049] test       6       1    ; to [51] if false
5788  1A808A80           [050] jmp        555          ; to [606]
578C  58010000           [051] test       5       0    ; to [53] if true
5790  1A403480           [052] jmp        210          ; to [263]
5794  6482C300           [053] self       9   1   270  ; -1544157541
5798  62820001           [054] call       9   2   2  
579C  64C2C304           [055] self       9   9   271  ; 808964080
57A0  D3020000           [056] getupval   11  0      
57A4  1D030400           [057] getglobal  12  16       ; Engine
57A8  0E434406           [058] gettable   12  12  273  ; "DT_ANY"
57AC  5D030400           [059] getglobal  13  16       ; Engine
57B0  4E83C406           [060] gettable   13  13  274  ; "ANY_PART"
57B4  9D030400           [061] getglobal  14  16       ; Engine
57B8  8EC34407           [062] gettable   14  14  275  ; "DHT_NONE"
57BC  D9C30000           [063] loadk      15  3        ; 0
57C0  62428003           [064] call       9   7   1  
57C4  6402C500           [065] self       9   1   276  ; 1265388858
57C8  DD420500           [066] getglobal  11  21       ; powerMenuInputFilter
57CC  62428001           [067] call       9   3   1  
57D0  6482C500           [068] self       9   1   278  ; 1129512439
57D4  DDC20500           [069] getglobal  11  23       ; blockingInputFilter
57D8  62428001           [070] call       9   3   1  
57DC  5D020600           [071] getglobal  9   24       ; _T
57E0  4E42C604           [072] gettable   9   9   281  ; "HideTransferenceFx"
57E4  58420000           [073] test       9       1    ; to [75] if false
57E8  1A800180           [074] jmp        7            ; to [82]
57EC  6482C600           [075] self       9   1   282  ; 630793108
57F0  D3028000           [076] getupval   11  1      
57F4  12030002           [077] move       12  4      
57F8  57030000           [078] loadbool   13  0   0    ; false
57FC  E2828001           [079] call       11  3   2  
5800  17030000           [080] loadbool   12  0   0    ; false
5804  62420002           [081] call       9   4   1  
5808  64C24601           [082] self       9   2   283  ; 2056776437
580C  C6028005           [083] loadnil    11  11     
5810  17038000           [084] loadbool   12  1   0    ; true
5814  5D030400           [085] getglobal  13  16       ; Engine
5818  4E03C706           [086] gettable   13  13  284  ; "ATMM_ANIMATION_DRIVEN"
581C  9D030400           [087] getglobal  14  16       ; Engine
5820  8E434707           [088] gettable   14  14  285  ; "PRT_ONCE"
5824  D7038000           [089] loadbool   15  1   0    ; true
5828  62428003           [090] call       9   7   1  
582C  D8000000           [091] test       3       0    ; to [93] if true
5830  1A000A80           [092] jmp        41           ; to [134]
5834  5D820700           [093] getglobal  9   30       ; operatorPreDeathAnim
5838  9DC20700           [094] getglobal  10  31       ; 1489265602
583C  A2828000           [095] call       10  1   2  
fail op	33
5840  21004805           [096] tforloop   0       288  ; to [98] if exit
5844  1A000080           [097] jmp        1            ; to [99]
5848  5D420800           [098] getglobal  9   33       ; operatorPreDeathAnimAlt
584C  9D020600           [099] getglobal  10  24       ; _T
5850  8E424605           [100] gettable   10  10  281  ; "HideTransferenceFx"
5854  98420000           [101] test       10      1    ; to [103] if false
5858  1AC00080           [102] jmp        4            ; to [107]
585C  A482C800           [103] self       10  1   290  ; -1421644046
5860  1DC30800           [104] getglobal  12  35       ; operatorDeathTransferenceOutFx
5864  5D030900           [105] getglobal  13  36       ; EMPTY_SYMBOL
5868  A2420002           [106] call       10  4   1  
586C  A4C2C600           [107] self       10  1   283  ; 2056776437
5870  12038004           [108] move       12  9      
5874  57030000           [109] loadbool   13  0   0    ; false
5878  9D030400           [110] getglobal  14  16       ; Engine
587C  8E434907           [111] gettable   14  14  293  ; "ATMM_ANIMATION_HORIZ_PHYSICS_VERT"
5880  DD030400           [112] getglobal  15  16       ; Engine
5884  CE43C707           [113] gettable   15  15  285  ; "PRT_ONCE"
5888  17048000           [114] loadbool   16  1   0    ; true
588C  A2428003           [115] call       10  7   1  
5890  93020001           [116] getupval   10  2      
5894  8E824905           [117] gettable   10  10  294  ; 1866016139
5898  D2028000           [118] move       11  1      
589C  1DC30900           [119] getglobal  12  39       ; transferenceOutProjectorType
58A0  5DC30900           [120] getglobal  13  39       ; transferenceOutProjectorType
58A4  A2420002           [121] call       10  4   1  
58A8  A402CA00           [122] self       10  1   296  ; -832323870
58AC  A2420001           [123] call       10  2   1  
58B0  9D420A00           [124] getglobal  10  41       ; 538022378
58B4  D9820A00           [125] loadk      11  42       ; 0
58B8  A2420001           [126] call       10  2   1  
58BC  93020001           [127] getupval   10  2      
58C0  8EC24A05           [128] gettable   10  10  299  ; -1970331308
58C4  D2028000           [129] move       11  1      
58C8  1DC30900           [130] getglobal  12  39       ; transferenceOutProjectorType
58CC  5DC30900           [131] getglobal  13  39       ; transferenceOutProjectorType
58D0  A2420002           [132] call       10  4   1  
58D4  1AC00480           [133] jmp        20           ; to [154]
58D8  A4C2C600           [134] self       10  1   283  ; 2056776437
58DC  1D030B00           [135] getglobal  12  44       ; transferenceReturnAnim
58E0  57030000           [136] loadbool   13  0   0    ; false
58E4  9D030400           [137] getglobal  14  16       ; Engine
58E8  8E434B07           [138] gettable   14  14  301  ; "ATMM_PHYSICS_DRIVEN"
58EC  DD030400           [139] getglobal  15  16       ; Engine
58F0  CE43C707           [140] gettable   15  15  285  ; "PRT_ONCE"
58F4  17040000           [141] loadbool   16  0   0    ; false
58F8  A2428003           [142] call       10  7   1  
58FC  9D020600           [143] getglobal  10  24       ; _T
5900  8E424605           [144] gettable   10  10  281  ; "HideTransferenceFx"
5904  98420000           [145] test       10      1    ; to [147] if false
5908  1AC00080           [146] jmp        4            ; to [151]
590C  A482C800           [147] self       10  1   290  ; -1421644046
5910  1D830B00           [148] getglobal  12  46       ; operatorTransferenceOutFx
5914  5D030900           [149] getglobal  13  36       ; EMPTY_SYMBOL
5918  A2420002           [150] call       10  4   1  
591C  9D420A00           [151] getglobal  10  41       ; 538022378
5920  D9020800           [152] loadk      11  32       ; 0
5924  A2420001           [153] call       10  2   1  
5928  9D020000           [154] getglobal  10  0        ; 1074689893
592C  D2020001           [155] move       11  2      
5930  A2820001           [156] call       10  2   2  
5934  98420000           [157] test       10      1    ; to [159] if false
5938  1A000180           [158] jmp        5            ; to [164]
593C  9D020000           [159] getglobal  10  0        ; 1074689893
5940  D2028000           [160] move       11  1      
5944  A2820001           [161] call       10  2   2  
5948  98020000           [162] test       10      0    ; to [164] if true
594C  1A000080           [163] jmp        1            ; to [165]
5950  1E008000           [164] return     0   1      
5954  9DC20B00           [165] getglobal  10  47       ; gGameRules
5958  A4024C05           [166] self       10  10  304  ; -569679
595C  A2820001           [167] call       10  2   2  
5960  98420000           [168] test       10      1    ; to [170] if false
5964  1AC00080           [169] jmp        4            ; to [174]
5968  93028001           [170] getupval   10  3      
596C  D2028000           [171] move       11  1      
5970  12030001           [172] move       12  2      
5974  A2428001           [173] call       10  3   1  
5978  A4424C01           [174] self       10  2   305  ; 840728497
597C  17030000           [175] loadbool   12  0   0    ; false
5980  A2428001           [176] call       10  3   1  
5984  A482CC00           [177] self       10  1   306  ; 115701976
5988  A2420001           [178] call       10  2   1  
598C  A4C2CC00           [179] self       10  1   307  ; -986181426
5990  17038000           [180] loadbool   12  1   0    ; true
5994  A2428001           [181] call       10  3   1  
5998  9D020600           [182] getglobal  10  24       ; _T
599C  8E424605           [183] gettable   10  10  281  ; "HideTransferenceFx"
59A0  98420000           [184] test       10      1    ; to [186] if false
59A4  1A400580           [185] jmp        22           ; to [208]
59A8  9D420200           [186] getglobal  10  9        ; gRegion
59AC  A4024D05           [187] self       10  10  308  ; -1110225722
59B0  1D430D00           [188] getglobal  12  53       ; riftJumpCompleteFx
59B4  6483CD00           [189] self       13  1   310  ; 1839670529
59B8  62830001           [190] call       13  2   2  
59BC  A4C3CD00           [191] self       14  1   311  ; -231049143
59C0  A2830001           [192] call       14  2   2  
59C4  D2030001           [193] move       15  2      
59C8  A2420003           [194] call       10  6   1  
59CC  9D420200           [195] getglobal  10  9        ; gRegion
59D0  A4024D05           [196] self       10  10  308  ; -1110225722
59D4  1D030E00           [197] getglobal  12  56       ; riftJumpStartFx
59D8  64834D01           [198] self       13  2   310  ; 1839670529
59DC  62830001           [199] call       13  2   2  
59E0  9D430E00           [200] getglobal  14  57       ; -304944129
59E4  E4834D01           [201] self       15  2   310  ; 1839670529
59E8  E2830001           [202] call       15  2   2  
59EC  2484CD00           [203] self       16  1   310  ; 1839670529
59F0  22040001           [204] call       16  2   0  
59F4  A2830000           [205] call       14  0   2  
59F8  D2030001           [206] move       15  2      
59FC  A2420003           [207] call       10  6   1  
5A00  9D020600           [208] getglobal  10  24       ; _T
5A04  8E824E05           [209] gettable   10  10  314  ; "transferenceUmbra"
fail op	35
5A08  63C04E05           [210] close      1  
5A0C  1A006080           [211] jmp        385          ; to [597]
5A10  A4024F01           [212] self       10  2   316  ; -605089866
5A14  A2820001           [213] call       10  2   2  
5A18  DD020600           [214] getglobal  11  24       ; _T
5A1C  CE82CE05           [215] gettable   11  11  314  ; "transferenceUmbra"
5A20  CE828205           [216] gettable   11  11  10 
fail op	35
5A24  63C0CE05           [217] close      1  
5A28  1A405E80           [218] jmp        378          ; to [597]
5A2C  DD020600           [219] getglobal  11  24       ; _T
5A30  CE82CE05           [220] gettable   11  11  314  ; "transferenceUmbra"
5A34  CE828205           [221] gettable   11  11  10 
5A38  1D030600           [222] getglobal  12  24       ; _T
5A3C  0E834E06           [223] gettable   12  12  314  ; "transferenceUmbra"
5A40  0CC34E05           [224] settable   12  10  315  ; nil
5A44  1D430F00           [225] getglobal  12  61       ; -1442191459
5A48  5D030600           [226] getglobal  13  24       ; _T
5A4C  4E83CE06           [227] gettable   13  13  314  ; "transferenceUmbra"
5A50  22830001           [228] call       12  2   2  
fail op	35
5A54  23C04E06           [229] close      0  
5A58  1A400080           [230] jmp        2            ; to [233]
5A5C  1D030600           [231] getglobal  12  24       ; _T
5A60  0CC34E9D           [232] settable   12  314 315  ; "transferenceUmbra" nil
5A64  1D030000           [233] getglobal  12  0        ; 1074689893
5A68  52038005           [234] move       13  11     
5A6C  22830001           [235] call       12  2   2  
5A70  18430000           [236] test       12      1    ; to [238] if false
5A74  1A805980           [237] jmp        359          ; to [597]
5A78  2483CF05           [238] self       12  11  318  ; 1511086594
5A7C  22830001           [239] call       12  2   2  
5A80  18430000           [240] test       12      1    ; to [242] if false
5A84  1A000380           [241] jmp        13           ; to [255]
5A88  24C34F01           [242] self       12  2   319  ; 1992436207
5A8C  A403D005           [243] self       14  11  320  ; 796523475
5A90  A2030001           [244] call       14  2   0  
5A94  22430000           [245] call       12  0   1  
5A98  24834301           [246] self       12  2   270  ; -1544157541
5A9C  22830001           [247] call       12  2   2  
5AA0  24435006           [248] self       12  12  321  ; -1992773175
5AA4  A483C305           [249] self       14  11  270  ; -1544157541
5AA8  A2830001           [250] call       14  2   2  
5AAC  A4835007           [251] self       14  14  322  ; -1583259949
5AB0  A2830001           [252] call       14  2   2  
5AB4  D7038000           [253] loadbool   15  1   0    ; true
5AB8  22430002           [254] call       12  4   1  
5ABC  24C3D005           [255] self       12  11  323  ; -1525609078
5AC0  22430001           [256] call       12  2   1  
5AC4  2403D100           [257] self       12  1   324  ; -336692075
5AC8  92038005           [258] move       14  11     
5ACC  D2030001           [259] move       15  2      
5AD0  22430002           [260] call       12  4   1  
5AD4  D7018000           [261] loadbool   7   1   0    ; true
5AD8  1A405380           [262] jmp        334          ; to [597]
5ADC  2483C100           [263] self       12  1   262  ; -1957065004
5AE0  9DC30100           [264] getglobal  14  7        ; gTennoAvatarType
5AE4  22838001           [265] call       12  3   2  
5AE8  18030000           [266] test       12      0    ; to [268] if true
5AEC  1A801180           [267] jmp        71           ; to [339]
5AF0  17030000           [268] loadbool   12  0   0    ; false
5AF4  64435100           [269] self       13  0   325  ; -1928567582
5AF8  62830001           [270] call       13  2   2  
5AFC  99831100           [271] loadk      14  70       ; 0
5B00  CA038006           [272] len        15  13     
5B04  19841100           [273] loadk      16  70       ; 0
5B08  90030280           [274] forprep    14  9        ; to [284]
fail op	21
5B0C  15C0D108           [275] concat     0   17  327
5B10  1A800180           [276] jmp        7            ; to [284]
5B14  8E448406           [277] gettable   18  13  17 
5B18  A4045209           [278] self       18  18  328  ; 188678183
5B1C  A2840001           [279] call       18  2   2  
5B20  98040000           [280] test       18      0    ; to [282] if true
5B24  1A400080           [281] jmp        2            ; to [284]
5B28  17038000           [282] loadbool   12  1   0    ; true
5B2C  1A000080           [283] jmp        1            ; to [285]
5B30  9443FD7F           [284] forloop    14  -10      ; to [275] if loop
5B34  18030000           [285] test       12      0    ; to [287] if true
5B38  1A000380           [286] jmp        13           ; to [300]
5B3C  A484C300           [287] self       18  1   270  ; -1544157541
5B40  A2840001           [288] call       18  2   2  
5B44  A4C44309           [289] self       18  18  271  ; 808964080
5B48  13050000           [290] getupval   20  0      
5B4C  5D050400           [291] getglobal  21  16       ; Engine
5B50  4E45C40A           [292] gettable   21  21  273  ; "DT_ANY"
5B54  9D050400           [293] getglobal  22  16       ; Engine
5B58  8E85440B           [294] gettable   22  22  274  ; "ANY_PART"
5B5C  DD050400           [295] getglobal  23  16       ; Engine
5B60  CEC5C40B           [296] gettable   23  23  275  ; "DHT_NONE"
5B64  1D461200           [297] getglobal  24  73       ; warframeTransferenceDamageReduction
5B68  A2448003           [298] call       18  7   1  
5B6C  1A800380           [299] jmp        15           ; to [315]
5B70  A444CC00           [300] self       18  1   305  ; 840728497
5B74  17058000           [301] loadbool   20  1   0    ; true
5B78  A2448001           [302] call       18  3   1  
5B7C  A484C300           [303] self       18  1   270  ; -1544157541
5B80  A2840001           [304] call       18  2   2  
5B84  A4C44309           [305] self       18  18  271  ; 808964080
5B88  13050000           [306] getupval   20  0      
5B8C  5D050400           [307] getglobal  21  16       ; Engine
5B90  4E45C40A           [308] gettable   21  21  273  ; "DT_ANY"
5B94  9D050400           [309] getglobal  22  16       ; Engine
5B98  8E85440B           [310] gettable   22  22  274  ; "ANY_PART"
5B9C  DD050400           [311] getglobal  23  16       ; Engine
5BA0  CEC5C40B           [312] gettable   23  23  275  ; "DHT_NONE"
5BA4  19C60000           [313] loadk      24  3        ; 0
5BA8  A2448003           [314] call       18  7   1  
5BAC  A484D200           [315] self       18  1   330  ; 1292478819
5BB0  A2840001           [316] call       18  2   2  
5BB4  DD040000           [317] getglobal  19  0        ; 1074689893
5BB8  12050009           [318] move       20  18     
5BBC  E2840001           [319] call       19  2   2  
5BC0  D8440000           [320] test       19      1    ; to [322] if false
5BC4  1A000280           [321] jmp        9            ; to [331]
5BC8  E4844109           [322] self       19  18  262  ; -1957065004
5BCC  5DC51200           [323] getglobal  21  75       ; gLotusSpaceFlightMotionControllerType
5BD0  E2848001           [324] call       19  3   2  
5BD4  D8040000           [325] test       19      0    ; to [327] if true
5BD8  1AC00080           [326] jmp        4            ; to [331]
5BDC  E4045309           [327] self       19  18  332  ; 165366471
5BE0  E2840001           [328] call       19  2   2  
5BE4  D8440000           [329] test       19      1    ; to [331] if false
5BE8  1AC00180           [330] jmp        8            ; to [339]
5BEC  E4C4C600           [331] self       19  1   283  ; 2056776437
5BF0  5D451300           [332] getglobal  21  77       ; powerSuitCollapsedAnim
5BF4  97050000           [333] loadbool   22  0   0    ; false
5BF8  DD050400           [334] getglobal  23  16       ; Engine
5BFC  CE45CB0B           [335] gettable   23  23  301  ; "ATMM_PHYSICS_DRIVEN"
5C00  1D060400           [336] getglobal  24  16       ; Engine
5C04  0E86530C           [337] gettable   24  24  334  ; "PRT_FREEZE"
5C08  E2440003           [338] call       19  6   1  
5C0C  E4C45301           [339] self       19  2   335  ; -703571861
5C10  59C50000           [340] loadk      21  3        ; 0
5C14  E2448001           [341] call       19  3   1  
5C18  E4C44601           [342] self       19  2   283  ; 2056776437
5C1C  5D051400           [343] getglobal  21  80       ; transferenceAnim
5C20  97050000           [344] loadbool   22  0   0    ; false
5C24  DD050400           [345] getglobal  23  16       ; Engine
5C28  CE45CB0B           [346] gettable   23  23  301  ; "ATMM_PHYSICS_DRIVEN"
5C2C  1D060400           [347] getglobal  24  16       ; Engine
5C30  0E46470C           [348] gettable   24  24  285  ; "PRT_ONCE"
5C34  57060000           [349] loadbool   25  0   0    ; false
5C38  E2448003           [350] call       19  7   1  
5C3C  E4044501           [351] self       19  2   276  ; 1265388858
5C40  5DC50500           [352] getglobal  21  23       ; blockingInputFilter
5C44  E2448001           [353] call       19  3   1  
5C48  DD040600           [354] getglobal  19  24       ; _T
5C4C  CE44C609           [355] gettable   19  19  281  ; "HideTransferenceFx"
5C50  D8440000           [356] test       19      1    ; to [358] if false
5C54  1AC00480           [357] jmp        20           ; to [378]
5C58  E4844801           [358] self       19  2   290  ; -1421644046
5C5C  5D451400           [359] getglobal  21  81       ; operatorTransferenceInFx
5C60  9D050900           [360] getglobal  22  36       ; EMPTY_SYMBOL
5C64  E2440002           [361] call       19  4   1  
5C68  E484C800           [362] self       19  1   290  ; -1421644046
5C6C  5D851400           [363] getglobal  21  82       ; warframeToOperatorFx
5C70  9D050900           [364] getglobal  22  36       ; EMPTY_SYMBOL
5C74  E2440002           [365] call       19  4   1  
5C78  E4C45401           [366] self       19  2   339  ; 1637313982
5C7C  E2840001           [367] call       19  2   2  
5C80  D8440000           [368] test       19      1    ; to [370] if false
5C84  1AC00180           [369] jmp        8            ; to [378]
5C88  DD440200           [370] getglobal  19  9        ; gRegion
5C8C  E404CD09           [371] self       19  19  308  ; -1110225722
5C90  5D450D00           [372] getglobal  21  53       ; riftJumpCompleteFx
5C94  A4854D01           [373] self       22  2   310  ; 1839670529
5C98  A2850001           [374] call       22  2   2  
5C9C  E4C54D01           [375] self       23  2   311  ; -231049143
5CA0  E2050001           [376] call       23  2   0  
5CA4  E2440000           [377] call       19  0   1  
5CA8  D3040002           [378] getupval   19  4      
5CAC  12050002           [379] move       20  4      
5CB0  52050001           [380] move       21  2      
5CB4  92058000           [381] move       22  1      
5CB8  D2058001           [382] move       23  3      
5CBC  E2448002           [383] call       19  5   1  
5CC0  DD040000           [384] getglobal  19  0        ; 1074689893
5CC4  12050001           [385] move       20  2      
5CC8  E2840001           [386] call       19  2   2  
5CCC  D8440000           [387] test       19      1    ; to [389] if false
5CD0  1A000180           [388] jmp        5            ; to [394]
5CD4  DD040000           [389] getglobal  19  0        ; 1074689893
5CD8  12058000           [390] move       20  1      
5CDC  E2840001           [391] call       19  2   2  
5CE0  D8040000           [392] test       19      0    ; to [394] if true
5CE4  1A000080           [393] jmp        1            ; to [395]
5CE8  1E008000           [394] return     0   1      
5CEC  E4045502           [395] self       19  4   340  ; 51109503
5CF0  E2840001           [396] call       19  2   2  
5CF4  2445D509           [397] self       20  19  341  ; 1644212373
5CF8  9D851500           [398] getglobal  22  86       ; Lotus_Game
5CFC  8EC5550B           [399] gettable   22  22  343  ; "LOT_NORMAL"
5D00  DD851500           [400] getglobal  23  86       ; Lotus_Game
5D04  CE05D60B           [401] gettable   23  23  344  ; "SUIT_SLOT"
5D08  22850002           [402] call       20  4   2  
5D0C  5D050000           [403] getglobal  21  0        ; 1074689893
5D10  92050000           [404] move       22  0      
5D14  62850001           [405] call       21  2   2  
5D18  58450000           [406] test       21      1    ; to [408] if false
5D1C  1A402C80           [407] jmp        178          ; to [586]
5D20  64455600           [408] self       21  0   345  ; -343492726
5D24  62850001           [409] call       21  2   2  
5D28  58450000           [410] test       21      1    ; to [412] if false
5D2C  1A000180           [411] jmp        5            ; to [417]
5D30  4E85560A           [412] gettable   21  20  346  ; "mUmbraDate"
5D34  64C5D60A           [413] self       21  21  347  ; 828278287
5D38  62850001           [414] call       21  2   2  
5D3C  58050000           [415] test       21      0    ; to [417] if true
5D40  1A002A80           [416] jmp        169          ; to [586]
5D44  5D050000           [417] getglobal  21  0        ; 1074689893
5D48  92050002           [418] move       22  4      
5D4C  62850001           [419] call       21  2   2  
5D50  58450000           [420] test       21      1    ; to [422] if false
5D54  1AC02880           [421] jmp        164          ; to [586]
5D58  5D050600           [422] getglobal  21  24       ; _T
5D5C  4E05D70A           [423] gettable   21  21  348  ; "DisableTransferenceToFrame"
5D60  58450000           [424] test       21      1    ; to [426] if false
5D64  1AC02780           [425] jmp        160          ; to [586]
5D68  5D451700           [426] getglobal  21  93       ; echoesAgent
5D6C  A4455600           [427] self       22  0   345  ; -343492726
5D70  A2850001           [428] call       22  2   2  
5D74  98050000           [429] test       22      0    ; to [431] if true
5D78  1AC00080           [430] jmp        4            ; to [435]
5D7C  9D851700           [431] getglobal  22  94       ; -895206725
5D80  DDC51700           [432] getglobal  23  95       ; umbraAgent
5D84  A2850001           [433] call       22  2   2  
5D88  5205000B           [434] move       21  22     
5D8C  9D450200           [435] getglobal  22  9        ; gRegion
5D90  A405580B           [436] self       22  22  352  ; -774964848
5D94  A2850001           [437] call       22  2   2  
5D98  A445580B           [438] self       22  22  353  ; 436282865
5D9C  1206800A           [439] move       24  21     
5DA0  6486D800           [440] self       25  1   354  ; 196800914
5DA4  62860001           [441] call       25  2   2  
5DA8  A4C6D800           [442] self       26  1   355  ; 54877834
5DAC  A2860001           [443] call       26  2   2  
5DB0  DD061900           [444] getglobal  27  100      ; -332969190
5DB4  19471900           [445] loadk      28  101      ; "Alpha"
5DB8  E2860001           [446] call       27  2   2  
5DBC  24875900           [447] self       28  0   358  ; 1250786858
5DC0  22870001           [448] call       28  2   2  
5DC4  57078000           [449] loadbool   29  1   0    ; true
5DC8  A2850004           [450] call       22  8   2  
5DCC  DD050000           [451] getglobal  23  0        ; 1074689893
5DD0  1206000B           [452] move       24  22     
5DD4  E2850001           [453] call       23  2   2  
5DD8  D8450000           [454] test       23      1    ; to [456] if false
5DDC  1A402080           [455] jmp        130          ; to [586]
5DE0  E4C5590B           [456] self       23  22  359  ; 428480489
5DE4  57060000           [457] loadbool   25  0   0    ; false
5DE8  E2458001           [458] call       23  3   1  
5DEC  E4055A0B           [459] self       23  22  360  ; -2135866365
5DF0  E2850001           [460] call       23  2   2  
5DF4  2446DA0B           [461] self       24  23  361  ; -1338608417
5DF8  A486DA00           [462] self       26  1   362  ; -1081228973
5DFC  A2060001           [463] call       26  2   0  
5E00  22460000           [464] call       24  0   1  
5E04  24C6DA0B           [465] self       24  23  363  ; 491709460
5E08  92060001           [466] move       26  2      
5E0C  22468001           [467] call       24  3   1  
5E10  2406DB0B           [468] self       24  23  364  ; -315621992
5E14  92068000           [469] move       26  1      
5E18  22468001           [470] call       24  3   1  
5E1C  1DC60B00           [471] getglobal  24  47       ; gGameRules
5E20  24465B0C           [472] self       24  24  365  ; -1805384599
5E24  9D861B00           [473] getglobal  26  110      ; gLotusAuraUpgradeType
5E28  D2068000           [474] move       27  1      
5E2C  22860002           [475] call       24  4   2  
5E30  5D060000           [476] getglobal  25  0        ; 1074689893
5E34  9206000C           [477] move       26  24     
5E38  62860001           [478] call       25  2   2  
5E3C  58460000           [479] test       25      1    ; to [481] if false
5E40  1A400080           [480] jmp        2            ; to [483]
5E44  64C65B0C           [481] self       25  24  367  ; 1874885897
5E48  62460001           [482] call       25  2   1  
5E4C  6406DC0B           [483] self       25  23  368  ; -1917464545
5E50  62860001           [484] call       25  2   2  
5E54  A446DC0C           [485] self       26  25  369  ; -925013987
5E58  12070002           [486] move       28  4      
5E5C  57070000           [487] loadbool   29  0   0    ; false
5E60  93078002           [488] getupval   30  5      
5E64  8E875C0F           [489] gettable   30  30  370  ; 590154099
5E68  A2878000           [490] call       30  1   2  
5E6C  98070000           [491] test       30      0    ; to [493] if true
5E70  1AC00080           [492] jmp        4            ; to [497]
5E74  9DC70B00           [493] getglobal  30  47       ; gGameRules
5E78  A4C75C0F           [494] self       30  30  371  ; 2081656303
5E7C  A2870001           [495] call       30  2   2  
fail op	9
5E80  8907000F           [496] settable   30  30  0  
5E84  D7070000           [497] loadbool   31  0   0    ; false
5E88  A2460003           [498] call       26  6   1  
5E8C  A406DD0C           [499] self       26  25  372  ; 1769516121
5E90  A2860001           [500] call       26  2   2  
5E94  DD060000           [501] getglobal  27  0        ; 1074689893
5E98  1207000D           [502] move       28  26     
5E9C  E2860001           [503] call       27  2   2  
5EA0  D8460000           [504] test       27      1    ; to [506] if false
5EA4  1A400180           [505] jmp        6            ; to [512]
5EA8  E486410D           [506] self       27  26  262  ; -1957065004
5EAC  64475D00           [507] self       29  0   373  ; -491574171
5EB0  62070001           [508] call       29  2   0  
5EB4  E2860000           [509] call       27  0   2  
5EB8  D8460000           [510] test       27      1    ; to [512] if false
5EBC  1A000180           [511] jmp        5            ; to [517]
5EC0  E486DD0B           [512] self       27  23  374  ; 1479835399
5EC4  64C75D00           [513] self       29  0   375  ; -899636345
5EC8  62870001           [514] call       29  2   2  
5ECC  97070000           [515] loadbool   30  0   0    ; false
5ED0  E2460002           [516] call       27  4   1  
5ED4  E406DE0C           [517] self       27  25  376  ; 688774453
5ED8  6407DC00           [518] self       29  1   368  ; -1917464545
5EDC  62870001           [519] call       29  2   2  
5EE0  6447DE0E           [520] self       29  29  377  ; 731035688
5EE4  DD070400           [521] getglobal  31  16       ; Engine
5EE8  CE87DE0F           [522] gettable   31  31  378  ; "MAIN_HAND"
5EEC  62878001           [523] call       29  3   2  
5EF0  9D070400           [524] getglobal  30  16       ; Engine
5EF4  8E875E0F           [525] gettable   30  30  378  ; "MAIN_HAND"
5EF8  DD070400           [526] getglobal  31  16       ; Engine
5EFC  CEC7DE0F           [527] gettable   31  31  379  ; "InventoryControllerBase_ES_INSTANT_EQUIP"
5F00  E2468002           [528] call       27  5   1  
5F04  E406DF0B           [529] self       27  23  380  ; 2090114668
5F08  6447DF00           [530] self       29  1   381  ; 945541886
5F0C  D7070000           [531] loadbool   31  0   0    ; false
5F10  62878001           [532] call       29  3   2  
5F14  97078000           [533] loadbool   30  1   0    ; true
5F18  E2460002           [534] call       27  4   1  
5F1C  E4C6CF0B           [535] self       27  23  319  ; 1992436207
5F20  6407D000           [536] self       29  1   320  ; 796523475
5F24  62070001           [537] call       29  2   0  
5F28  E2460000           [538] call       27  0   1  
5F2C  E486C30B           [539] self       27  23  270  ; -1544157541
5F30  E2860001           [540] call       27  2   2  
5F34  2487C300           [541] self       28  1   270  ; -1544157541
5F38  22870001           [542] call       28  2   2  
5F3C  6487DF0D           [543] self       29  27  382  ; -1814078075
5F40  DDC71F00           [544] getglobal  31  127      ; 2083004503
5F44  24485D0E           [545] self       32  28  373  ; -491574171
5F48  22080001           [546] call       32  2   0  
5F4C  E2870000           [547] call       31  0   2  
5F50  E407E00F           [548] self       31  31  384  ; -227502409
5F54  E2070001           [549] call       31  2   0  
5F58  62470000           [550] call       29  0   1  
5F5C  6447D00D           [551] self       29  27  321  ; -1992773175
5F60  E487500E           [552] self       31  28  322  ; -1583259949
5F64  E2870001           [553] call       31  2   2  
5F68  17088000           [554] loadbool   32  1   0    ; true
5F6C  62470002           [555] call       29  4   1  
5F70  64475600           [556] self       29  0   345  ; -343492726
5F74  62870001           [557] call       29  2   2  
5F78  58070000           [558] test       29      0    ; to [560] if true
5F7C  1A400280           [559] jmp        10           ; to [570]
5F80  59C70000           [560] loadk      29  3        ; 0
5F84  99472000           [561] loadk      30  129      ; 0
5F88  D9871100           [562] loadk      31  70       ; 0
5F8C  50070180           [563] forprep    29  5        ; to [569]
5F90  64886000           [564] self       33  0   386  ; 33405088
5F94  E4C86000           [565] self       35  0   387  ; 269067035
5F98  52090010           [566] move       37  32     
5F9C  E2088001           [567] call       35  3   0  
5FA0  62480000           [568] call       33  0   1  
5FA4  5447FE7F           [569] forloop    29  -6       ; to [564] if loop
5FA8  64085101           [570] self       33  2   324  ; -336692075
5FAC  D2088000           [571] move       35  1      
5FB0  1209800B           [572] move       36  23     
5FB4  62480002           [573] call       33  4   1  
5FB8  5D080600           [574] getglobal  33  24       ; _T
5FBC  4E88CE10           [575] gettable   33  33  314  ; "transferenceUmbra"
fail op	35
5FC0  23C0CE10           [576] close      0  
5FC4  1A800080           [577] jmp        3            ; to [581]
5FC8  5D080600           [578] getglobal  33  24       ; _T
5FCC  8B080000           [579] newtable   34  0   0    ; array=0, hash=0
5FD0  4C88089D           [580] settable   33  314 34   ; "transferenceUmbra"
5FD4  5D080600           [581] getglobal  33  24       ; _T
5FD8  4E88CE10           [582] gettable   33  33  314  ; "transferenceUmbra"
5FDC  A408CF00           [583] self       34  1   316  ; -605089866
5FE0  A2880001           [584] call       34  2   2  
5FE4  4CC80511           [585] settable   33  34  23 
5FE8  5D080600           [586] getglobal  33  24       ; _T
5FEC  4E48C610           [587] gettable   33  33  281  ; "HideTransferenceFx"
5FF0  58480000           [588] test       33      1    ; to [590] if false
5FF4  1A800180           [589] jmp        7            ; to [597]
5FF8  64884601           [590] self       33  2   282  ; 630793108
5FFC  D3088000           [591] getupval   35  1      
6000  12090002           [592] move       36  4      
6004  57098000           [593] loadbool   37  1   0    ; true
6008  E2888001           [594] call       35  3   2  
600C  17090000           [595] loadbool   36  0   0    ; false
6010  62480002           [596] call       33  4   1  
6014  6408E100           [597] self       33  1   388  ; 1798224701
6018  DD482100           [598] getglobal  35  133      ; 572299008
601C  E2088000           [599] call       35  1   0  
6020  62480000           [600] call       33  0   1  
6024  64884301           [601] self       33  2   270  ; -1544157541
6028  62880001           [602] call       33  2   2  
602C  6488E110           [603] self       33  33  390  ; 197552586
6030  D3080000           [604] getupval   35  0      
6034  62488001           [605] call       33  3   1  
6038  64884F01           [606] self       33  2   318  ; 1511086594
603C  62880001           [607] call       33  2   2  
6040  58480000           [608] test       33      1    ; to [610] if false
6044  1AC03680           [609] jmp        220          ; to [830]
6048  64084202           [610] self       33  4   264  ; 1048009728
604C  62880001           [611] call       33  2   2  
fail op	9
6050  89088002           [612] settable   34  5   0  
6054  4C8888C3           [613] settable   33  391 34   ; "isControllingOperator"
6058  58010000           [614] test       5       0    ; to [616] if true
605C  1A803480           [615] jmp        211          ; to [827]
6060  98010000           [616] test       6       0    ; to [618] if true
6064  1A800780           [617] jmp        31           ; to [649]
6068  A4086201           [618] self       34  2   392  ; -148144755
606C  A2880001           [619] call       34  2   2  
6070  4C888885           [620] settable   33  267 34   ; "possessedAgentType"
6074  9D080000           [621] getglobal  34  0        ; 1074689893
6078  E4486201           [622] self       35  2   393  ; -1411785325
607C  E2080001           [623] call       35  2   0  
6080  A2880000           [624] call       34  0   2  
6084  98480000           [625] test       34      1    ; to [627] if false
6088  1A000180           [626] jmp        5            ; to [632]
608C  A4486201           [627] self       34  2   393  ; -1411785325
6090  A2880001           [628] call       34  2   2  
6094  A4886211           [629] self       34  34  394  ; 1653689631
6098  A2880001           [630] call       34  2   2  
609C  4C888886           [631] settable   33  269 34   ; "possessedAgentTeam"
60A0  A4C86201           [632] self       34  2   395  ; 1671500871
60A4  A2480001           [633] call       34  2   1  
60A8  93080003           [634] getupval   34  6      
60AC  98080000           [635] test       34      0    ; to [637] if true
60B0  1A400280           [636] jmp        10           ; to [647]
60B4  93088003           [637] getupval   34  7      
60B8  D2080001           [638] move       35  2      
60BC  12090002           [639] move       36  4      
60C0  A2888001           [640] call       34  3   2  
60C4  98480000           [641] test       34      1    ; to [643] if false
60C8  1AC00080           [642] jmp        4            ; to [647]
60CC  A4884501           [643] self       34  2   278  ; 1129512439
60D0  2409E300           [644] self       36  1   396  ; 369898059
60D4  22090001           [645] call       36  2   0  
60D8  A2480000           [646] call       34  0   1  
60DC  A488CC00           [647] self       34  1   306  ; 115701976
60E0  A2480001           [648] call       34  2   1  
60E4  D8400000           [649] test       3       1    ; to [651] if false
60E8  1A400280           [650] jmp        10           ; to [661]
60EC  9D080600           [651] getglobal  34  24       ; _T
60F0  8E486311           [652] gettable   34  34  397  ; "InQuillsRoom"
60F4  98480000           [653] test       34      1    ; to [655] if false
60F8  1A400180           [654] jmp        6            ; to [661]
60FC  A4886301           [655] self       34  2   398  ; -252114176
6100  A2480001           [656] call       34  2   1  
6104  9D480A00           [657] getglobal  34  41       ; 538022378
6108  D9C80000           [658] loadk      35  3        ; 0
610C  A2480001           [659] call       34  2   1  
6110  1A800D80           [660] jmp        55           ; to [716]
6114  9D080600           [661] getglobal  34  24       ; _T
6118  8E486311           [662] gettable   34  34  397  ; "InQuillsRoom"
611C  98080000           [663] test       34      0    ; to [665] if true
6120  1A800C80           [664] jmp        51           ; to [716]
6124  93080004           [665] getupval   34  8      
6128  8EC86311           [666] gettable   34  34  399  ; -1827748401
612C  D9082400           [667] loadk      35  144      ; "CaveWaypoint"
6130  A2880001           [668] call       34  2   2  
6134  DD080000           [669] getglobal  35  0        ; 1074689893
6138  12090011           [670] move       36  34     
613C  E2880001           [671] call       35  2   2  
6140  D8480000           [672] test       35      1    ; to [674] if false
6144  1A400A80           [673] jmp        42           ; to [716]
6148  E4884D11           [674] self       35  34  310  ; 1839670529
614C  E2880001           [675] call       35  2   2  
6150  1D492400           [676] getglobal  36  145      ; 1287559689
6154  5D492100           [677] getglobal  37  133      ; 572299008
6158  99C90000           [678] loadk      38  3        ; 0
615C  D9C90000           [679] loadk      39  3        ; 0
6160  198A1100           [680] loadk      40  70       ; 0
6164  62890002           [681] call       37  4   2  
6168  A4C94D11           [682] self       38  34  311  ; -231049143
616C  A2090001           [683] call       38  2   0  
6170  22890000           [684] call       36  0   2  
6174  CD088911           [685] sub        35  35  36 
6178  1D492100           [686] getglobal  36  133      ; 572299008
617C  22898000           [687] call       36  1   2  
6180  5D490200           [688] getglobal  37  9        ; gRegion
6184  6489E412           [689] self       37  37  402  ; 187283819
6188  DD492100           [690] getglobal  39  133      ; 572299008
618C  19CA0000           [691] loadk      40  3        ; 0
6190  59CA2400           [692] loadk      41  147      ; -51
6194  99CA0000           [693] loadk      42  3        ; 0
6198  E2890002           [694] call       39  4   2  
619C  C3C98911           [695] add        39  35  39 
61A0  1D4A2100           [696] getglobal  40  133      ; 572299008
61A4  59CA0000           [697] loadk      41  3        ; 0
61A8  998A1100           [698] loadk      42  70       ; 0
61AC  D9CA0000           [699] loadk      43  3        ; 0
61B0  228A0002           [700] call       40  4   2  
61B4  0D0A8A11           [701] sub        40  35  40 
61B8  460A0015           [702] loadnil    41  42     
61BC  D20A0012           [703] move       43  36     
61C0  62898003           [704] call       37  7   2  
61C4  58090000           [705] test       37      0    ; to [707] if true
61C8  1A000080           [706] jmp        1            ; to [708]
61CC  D2080012           [707] move       35  36     
61D0  64096501           [708] self       37  2   404  ; 970454089
61D4  D2098011           [709] move       39  35     
61D8  24CA4D11           [710] self       40  34  311  ; -231049143
61DC  220A0001           [711] call       40  2   0  
61E0  62490000           [712] call       37  0   1  
61E4  5D490A00           [713] getglobal  37  41       ; 538022378
61E8  99C90000           [714] loadk      38  3        ; 0
61EC  62490001           [715] call       37  2   1  
61F0  64496502           [716] self       37  4   405  ; 542147163
61F4  D2090001           [717] move       39  2      
61F8  170A8000           [718] loadbool   40  1   0    ; true
61FC  570A8000           [719] loadbool   41  1   0    ; true
6200  62498002           [720] call       37  5   1  
6204  64896501           [721] self       37  2   406  ; -487914330
6208  D7098000           [722] loadbool   39  1   0    ; true
620C  62498001           [723] call       37  3   1  
6210  D8010000           [724] test       7       0    ; to [726] if true
6214  1AC00280           [725] jmp        12           ; to [738]
6218  5DC90B00           [726] getglobal  37  47       ; gGameRules
621C  6449DB12           [727] self       37  37  365  ; -1805384599
6220  DD891B00           [728] getglobal  39  110      ; gLotusAuraUpgradeType
6224  120A0001           [729] move       40  2      
6228  62890002           [730] call       37  4   2  
622C  9D090000           [731] getglobal  38  0        ; 1074689893
6230  D2098012           [732] move       39  37     
6234  A2890001           [733] call       38  2   2  
6238  98490000           [734] test       38      1    ; to [736] if false
623C  1A400080           [735] jmp        2            ; to [738]
6240  A4C9E512           [736] self       38  37  407  ; -74301401
6244  A2490001           [737] call       38  2   1  
6248  D8000000           [738] test       3       0    ; to [740] if true
624C  1A800380           [739] jmp        15           ; to [755]
6250  A409E600           [740] self       38  1   408  ; -717859730
6254  A2890001           [741] call       38  2   2  
6258  98090000           [742] test       38      0    ; to [744] if true
625C  1A800280           [743] jmp        11           ; to [755]
6260  A449E600           [744] self       38  1   409  ; -1143195026
6264  170A8000           [745] loadbool   40  1   0    ; true
6268  A2498001           [746] call       38  3   1  
626C  9D490A00           [747] getglobal  38  41       ; 538022378
6270  D9C90000           [748] loadk      39  3        ; 0
6274  A2490001           [749] call       38  2   1  
6278  93098004           [750] getupval   38  9      
627C  D2090002           [751] move       39  4      
6280  120A8000           [752] move       40  1      
6284  520A0001           [753] move       41  2      
6288  A2490002           [754] call       38  4   1  
628C  D8000000           [755] test       3       0    ; to [757] if true
6290  1A800580           [756] jmp        23           ; to [780]
6294  9D090000           [757] getglobal  38  0        ; 1074689893
6298  D2098000           [758] move       39  1      
629C  A2890001           [759] call       38  2   2  
62A0  98490000           [760] test       38      1    ; to [762] if false
62A4  1A400480           [761] jmp        18           ; to [780]
62A8  A489CF00           [762] self       38  1   318  ; 1511086594
62AC  A2890001           [763] call       38  2   2  
62B0  98490000           [764] test       38      1    ; to [766] if false
62B4  1A400380           [765] jmp        14           ; to [780]
62B8  A489E600           [766] self       38  1   410  ; -1519595333
62BC  A2890001           [767] call       38  2   2  
62C0  98490000           [768] test       38      1    ; to [770] if false
62C4  1A400280           [769] jmp        10           ; to [780]
62C8  9D090000           [770] getglobal  38  0        ; 1074689893
62CC  E4C9E600           [771] self       39  1   411  ; -242235676
62D0  E2090001           [772] call       39  2   0  
62D4  A2890000           [773] call       38  0   2  
62D8  98090000           [774] test       38      0    ; to [776] if true
62DC  1AC00080           [775] jmp        4            ; to [780]
62E0  A4C9CF00           [776] self       38  1   319  ; 1992436207
62E4  244ADF00           [777] self       40  1   381  ; 945541886
62E8  220A0001           [778] call       40  2   0  
62EC  A2490000           [779] call       38  0   1  
62F0  A4096702           [780] self       38  4   412  ; -1813551355
62F4  A2890001           [781] call       38  2   2  
62F8  DD090000           [782] getglobal  39  0        ; 1074689893
62FC  120A0013           [783] move       40  38     
6300  E2890001           [784] call       39  2   2  
6304  D8490000           [785] test       39      1    ; to [787] if false
6308  1AC00180           [786] jmp        8            ; to [795]
630C  E4095C13           [787] self       39  38  368  ; -1917464545
6310  E2890001           [788] call       39  2   2  
6314  240ADC00           [789] self       40  1   368  ; -1917464545
6318  228A0001           [790] call       40  2   2  
631C  644AE713           [791] self       41  39  413  ; 607379275
6320  D20A0014           [792] move       43  40     
6324  170B8000           [793] loadbool   44  1   0    ; true
6328  624A0002           [794] call       41  4   1  
632C  5D0A0000           [795] getglobal  41  0        ; 1074689893
6330  920A8000           [796] move       42  1      
6334  628A0001           [797] call       41  2   2  
6338  584A0000           [798] test       41      1    ; to [800] if false
633C  1A000480           [799] jmp        17           ; to [817]
6340  648AE700           [800] self       41  1   414  ; 606226066
6344  D70A0000           [801] loadbool   43  0   0    ; false
6348  624A8001           [802] call       41  3   1  
634C  64CAE700           [803] self       41  1   415  ; -2013261060
6350  D70A0000           [804] loadbool   43  0   0    ; false
6354  624A8001           [805] call       41  3   1  
6358  640AE800           [806] self       41  1   416  ; -2113194289
635C  D70A8000           [807] loadbool   43  1   0    ; true
6360  624A8001           [808] call       41  3   1  
6364  644AE800           [809] self       41  1   417  ; -1132227358
6368  624A0001           [810] call       41  2   1  
636C  640AC500           [811] self       41  1   276  ; 1265388858
6370  DD4A0500           [812] getglobal  43  21       ; powerMenuInputFilter
6374  624A8001           [813] call       41  3   1  
6378  644AE600           [814] self       41  1   409  ; -1143195026
637C  D70A0000           [815] loadbool   43  0   0    ; false
6380  624A8001           [816] call       41  3   1  
6384  98010000           [817] test       6       0    ; to [819] if true
6388  1A400180           [818] jmp        6            ; to [825]
638C  648A6801           [819] self       41  2   418  ; -1302048094
6390  DD0A1900           [820] getglobal  43  100      ; -332969190
6394  19CB2800           [821] loadk      44  163      ; "TemporaryNpcControl"
6398  E28A0001           [822] call       43  2   2  
639C  170B0000           [823] loadbool   44  0   0    ; false
63A0  624A0002           [824] call       41  4   1  
63A4  46008000           [825] loadnil    1   1      
63A8  06000000           [826] loadnil    0   0      
63AC  640A6902           [827] self       41  4   420  ; 1927866546
63B0  D20A8010           [828] move       43  33     
63B4  624A8001           [829] call       41  3   1  
63B8  5D0A0000           [830] getglobal  41  0        ; 1074689893
63BC  920A0001           [831] move       42  2      
63C0  628A0001           [832] call       41  2   2  
63C4  584A0000           [833] test       41      1    ; to [835] if false
63C8  1A400880           [834] jmp        34           ; to [869]
63CC  5D0A0000           [835] getglobal  41  0        ; 1074689893
63D0  920A8000           [836] move       42  1      
63D4  628A0001           [837] call       41  2   2  
63D8  584A0000           [838] test       41      1    ; to [840] if false
63DC  1A000780           [839] jmp        29           ; to [869]
63E0  648AC100           [840] self       41  1   262  ; -1957065004
63E4  DD4A2900           [841] getglobal  43  165      ; gLotusNpcAvatarType
63E8  628A8001           [842] call       41  3   2  
63EC  580A0000           [843] test       41      0    ; to [845] if true
63F0  1AC00580           [844] jmp        24           ; to [869]
63F4  648AE900           [845] self       41  1   422  ; 307051124
63F8  D30A0005           [846] getupval   43  10     
63FC  624A8001           [847] call       41  3   1  
6400  59CA0000           [848] loadk      41  3        ; 0
6404  9D0A0000           [849] getglobal  42  0        ; 1074689893
6408  D20A0000           [850] move       43  0      
640C  A28A0001           [851] call       42  2   2  
6410  984A0000           [852] test       42      1    ; to [854] if false
6414  1A800080           [853] jmp        3            ; to [857]
6418  A4CA6900           [854] self       42  0   423  ; 1722612532
641C  A28A0001           [855] call       42  2   2  
6420  520A0015           [856] move       41  42     
6424  A40A5C01           [857] self       42  2   368  ; -1917464545
6428  A28A0001           [858] call       42  2   2  
642C  A40A5D15           [859] self       42  42  372  ; 1769516121
6430  A28A0001           [860] call       42  2   2  
6434  DD0A0000           [861] getglobal  43  0        ; 1074689893
6438  120B0015           [862] move       44  42     
643C  E28A0001           [863] call       43  2   2  
6440  D84A0000           [864] test       43      1    ; to [866] if false
6444  1A800080           [865] jmp        3            ; to [869]
6448  E40A6A15           [866] self       43  42  424  ; -1209210956
644C  520B8014           [867] move       45  41     
6450  E24A8001           [868] call       43  3   1  
6454  DD4A2A00           [869] getglobal  43  169      ; 1672515847
6458  1D0B0600           [870] getglobal  44  24       ; _T
645C  0E8B6A16           [871] gettable   44  44  426  ; "ToggleOperatorCallbacks"
6460  E20A0101           [872] call       43  2   4  
6464  1AC00180           [873] jmp        8            ; to [882]
6468  1D0C0000           [874] getglobal  48  0        ; 1074689893
646C  520C8017           [875] move       49  47     
6470  228C0001           [876] call       48  2   2  
6474  184C0000           [877] test       48      1    ; to [879] if false
6478  1A800080           [878] jmp        3            ; to [882]
647C  120C8017           [879] move       48  47     
6480  520C8002           [880] move       49  5      
6484  224C0001           [881] call       48  2   1  
6488  D68A0000           [882] tforloop   43      2    ; to [884] if exit
648C  1A40FD7F           [883] jmp        -10          ; to [874]
6490  1E008000           [884] return     0   1      
                         * constants:
6495  01                 sizek (171)
6496  01                 const type 3
6497  65770E40           const [0]: (1074689893)
649B  01                 const type 3
649C  DD8258DE           const [1]: (-564624675)
64A0  01                 const type 3
64A1  25764809           const [2]: (155743781)
64A5  03                 const type 3
64A6  00000000           const [3]: (0)
64AA  03                 const type 3
64AB  0000A0C0           const [4]: (0)
64AF  01                 const type 3
64B0  8A029BBC           const [5]: (-1130691958)
64B4  01                 const type 3
64B5  D48E598B           const [6]: (-1957065004)
64B9  04                 const type 4
64BA  11                 string size (17)
64BB  6754656E6E6F4176+  "gTennoAv"
64C3  6174617254797065+  "atarType"
64CB  00                 "\0"
                         const [7]: "gTennoAvatarType"
64CC  01                 const type 3
64CD  005C773E           const [8]: (1048009728)
64D1  04                 const type 4
64D2  08                 string size (8)
64D3  67526567696F6E00   "gRegion\0"
                         const [9]: "gRegion"
64DB  01                 const type 3
64DC  58F559A5           const [10]: (-1520831144)
64E0  04                 const type 4
64E1  13                 string size (19)
64E2  706F737365737365+  "possesse"
64EA  644167656E745479+  "dAgentTy"
64F2  706500             "pe\0"
                         const [11]: "possessedAgentType"
64F5  01                 const type 3
64F6  7255CAEC           const [12]: (-322284174)
64FA  04                 const type 4
64FB  13                 string size (19)
64FC  706F737365737365+  "possesse"
6504  644167656E745465+  "dAgentTe"
650C  616D00             "am\0"
                         const [13]: "possessedAgentTeam"
650F  01                 const type 3
6510  9B06F6A3           const [14]: (-1544157541)
6514  01                 const type 3
6515  F0CF3730           const [15]: (808964080)
6519  04                 const type 4
651A  07                 string size (7)
651B  456E67696E6500     "Engine\0"
                         const [16]: "Engine"
6522  04                 const type 4
6523  07                 string size (7)
6524  44545F414E5900     "DT_ANY\0"
                         const [17]: "DT_ANY"
652B  04                 const type 4
652C  09                 string size (9)
652D  414E595F50415254+  "ANY_PART"
6535  00                 "\0"
                         const [18]: "ANY_PART"
6536  04                 const type 4
6537  09                 string size (9)
6538  4448545F4E4F4E45+  "DHT_NONE"
6540  00                 "\0"
                         const [19]: "DHT_NONE"
6541  01                 const type 3
6542  3A4D6C4B           const [20]: (1265388858)
6546  04                 const type 4
6547  15                 string size (21)
6548  706F7765724D656E+  "powerMen"
6550  75496E7075744669+  "uInputFi"
6558  6C74657200         "lter\0"
                         const [21]: "powerMenuInputFilter"
655D  01                 const type 3
655E  F7FD5243           const [22]: (1129512439)
6562  04                 const type 4
6563  14                 string size (20)
6564  626C6F636B696E67+  "blocking"
656C  496E70757446696C+  "InputFil"
6574  74657200           "ter\0"
                         const [23]: "blockingInputFilter"
6578  04                 const type 4
6579  03                 string size (3)
657A  5F5400             "_T\0"
                         const [24]: "_T"
657D  04                 const type 4
657E  13                 string size (19)
657F  486964655472616E+  "HideTran"
6587  73666572656E6365+  "sference"
658F  467800             "Fx\0"
                         const [25]: "HideTransferenceFx"
6592  01                 const type 3
6593  94239925           const [26]: (630793108)
6597  01                 const type 3
6598  F5EA977A           const [27]: (2056776437)
659C  04                 const type 4
659D  16                 string size (22)
659E  41544D4D5F414E49+  "ATMM_ANI"
65A6  4D4154494F4E5F44+  "MATION_D"
65AE  524956454E00       "RIVEN\0"
                         const [28]: "ATMM_ANIMATION_DRIVEN"
65B4  04                 const type 4
65B5  09                 string size (9)
65B6  5052545F4F4E4345+  "PRT_ONCE"
65BE  00                 "\0"
                         const [29]: "PRT_ONCE"
65BF  04                 const type 4
65C0  15                 string size (21)
65C1  6F70657261746F72+  "operator"
65C9  5072654465617468+  "PreDeath"
65D1  416E696D00         "Anim\0"
                         const [30]: "operatorPreDeathAnim"
65D6  01                 const type 3
65D7  C263C458           const [31]: (1489265602)
65DB  03                 const type 3
65DC  0000003F           const [32]: (0)
65E0  04                 const type 4
65E1  18                 string size (24)
65E2  6F70657261746F72+  "operator"
65EA  5072654465617468+  "PreDeath"
65F2  416E696D416C7400   "AnimAlt\0"
                         const [33]: "operatorPreDeathAnimAlt"
65FA  01                 const type 3
65FB  F26E43AB           const [34]: (-1421644046)
65FF  04                 const type 4
6600  1F                 string size (31)
6601  6F70657261746F72+  "operator"
6609  4465617468547261+  "DeathTra"
6611  6E73666572656E63+  "nsferenc"
6619  654F7574467800     "eOutFx\0"
                         const [35]: "operatorDeathTransferenceOutFx"
6620  04                 const type 4
6621  0D                 string size (13)
6622  454D5054595F5359+  "EMPTY_SY"
662A  4D424F4C00         "MBOL\0"
                         const [36]: "EMPTY_SYMBOL"
662F  04                 const type 4
6630  22                 string size (34)
6631  41544D4D5F414E49+  "ATMM_ANI"
6639  4D4154494F4E5F48+  "MATION_H"
6641  4F52495A5F504859+  "ORIZ_PHY"
6649  534943535F564552+  "SICS_VER"
6651  5400               "T\0"
                         const [37]: "ATMM_ANIMATION_HORIZ_PHYSICS_VERT"
6653  01                 const type 3
6654  8B25396F           const [38]: (1866016139)
6658  04                 const type 4
6659  1D                 string size (29)
665A  7472616E73666572+  "transfer"
6662  656E63654F757450+  "enceOutP"
666A  726F6A6563746F72+  "rojector"
6672  5479706500         "Type\0"
                         const [39]: "transferenceOutProjectorType"
6677  01                 const type 3
6678  E2BE63CE           const [40]: (-832323870)
667C  01                 const type 3
667D  EA911120           const [41]: (538022378)
6681  03                 const type 3
6682  0000C03F           const [42]: (0)
6686  01                 const type 3
6687  54218F8A           const [43]: (-1970331308)
668B  04                 const type 4
668C  17                 string size (23)
668D  7472616E73666572+  "transfer"
6695  656E636552657475+  "enceRetu"
669D  726E416E696D00     "rnAnim\0"
                         const [44]: "transferenceReturnAnim"
66A4  04                 const type 4
66A5  14                 string size (20)
66A6  41544D4D5F504859+  "ATMM_PHY"
66AE  534943535F445249+  "SICS_DRI"
66B6  56454E00           "VEN\0"
                         const [45]: "ATMM_PHYSICS_DRIVEN"
66BA  04                 const type 4
66BB  1A                 string size (26)
66BC  6F70657261746F72+  "operator"
66C4  5472616E73666572+  "Transfer"
66CC  656E63654F757446+  "enceOutF"
66D4  7800               "x\0"
                         const [46]: "operatorTransferenceOutFx"
66D6  04                 const type 4
66D7  0B                 string size (11)
66D8  6747616D6552756C+  "gGameRul"
66E0  657300             "es\0"
                         const [47]: "gGameRules"
66E3  01                 const type 3
66E4  B14EF7FF           const [48]: (-569679)
66E8  01                 const type 3
66E9  B17F1C32           const [49]: (840728497)
66ED  01                 const type 3
66EE  D878E506           const [50]: (115701976)
66F2  01                 const type 3
66F3  CE1038C5           const [51]: (-986181426)
66F7  01                 const type 3
66F8  C64CD3BD           const [52]: (-1110225722)
66FC  04                 const type 4
66FD  13                 string size (19)
66FE  726966744A756D70+  "riftJump"
6706  436F6D706C657465+  "Complete"
670E  467800             "Fx\0"
                         const [53]: "riftJumpCompleteFx"
6711  01                 const type 3
6712  0125A76D           const [54]: (1839670529)
6716  01                 const type 3
6717  49783AF2           const [55]: (-231049143)
671B  04                 const type 4
671C  10                 string size (16)
671D  726966744A756D70+  "riftJump"
6725  5374617274467800   "StartFx\0"
                         const [56]: "riftJumpStartFx"
672D  01                 const type 3
672E  FFEBD2ED           const [57]: (-304944129)
6732  04                 const type 4
6733  12                 string size (18)
6734  7472616E73666572+  "transfer"
673C  656E6365556D6272+  "enceUmbr"
6744  6100               "a\0"
                         const [58]: "transferenceUmbra"
6746  00                 const type 0
                         const [59]: nil
6747  01                 const type 3
6748  B60FEFDB           const [60]: (-605089866)
674C  01                 const type 3
674D  9DE709AA           const [61]: (-1442191459)
6751  01                 const type 3
6752  025A115A           const [62]: (1511086594)
6756  01                 const type 3
6757  EF29C276           const [63]: (1992436207)
675B  01                 const type 3
675C  D3FB792F           const [64]: (796523475)
6760  01                 const type 3
6761  C9B13889           const [65]: (-1992773175)
6765  01                 const type 3
6766  D35EA1A1           const [66]: (-1583259949)
676A  01                 const type 3
676B  8A0D11A5           const [67]: (-1525609078)
676F  01                 const type 3
6770  957CEEEB           const [68]: (-336692075)
6774  01                 const type 3
6775  E2640C8D           const [69]: (-1928567582)
6779  03                 const type 3
677A  0000803F           const [70]: (0)
677E  03                 const type 3
677F  0000A040           const [71]: (0)
6783  01                 const type 3
6784  27003F0B           const [72]: (188678183)
6788  04                 const type 4
6789  24                 string size (36)
678A  7761726672616D65+  "warframe"
6792  5472616E73666572+  "Transfer"
679A  656E636544616D61+  "enceDama"
67A2  6765526564756374+  "geReduct"
67AA  696F6E00           "ion\0"
                         const [73]: "warframeTransferenceDamageReduction"
67AE  01                 const type 3
67AF  63A9094D           const [74]: (1292478819)
67B3  04                 const type 4
67B4  26                 string size (38)
67B5  674C6F7475735370+  "gLotusSp"
67BD  616365466C696768+  "aceFligh"
67C5  744D6F74696F6E43+  "tMotionC"
67CD  6F6E74726F6C6C65+  "ontrolle"
67D5  725479706500       "rType\0"
                         const [75]: "gLotusSpaceFlightMotionControllerType"
67DB  01                 const type 3
67DC  C74ADB09           const [76]: (165366471)
67E0  04                 const type 4
67E1  17                 string size (23)
67E2  706F776572537569+  "powerSui"
67EA  74436F6C6C617073+  "tCollaps"
67F2  6564416E696D00     "edAnim\0"
                         const [77]: "powerSuitCollapsedAnim"
67F9  04                 const type 4
67FA  0B                 string size (11)
67FB  5052545F46524545+  "PRT_FREE"
6803  5A4500             "ZE\0"
                         const [78]: "PRT_FREEZE"
6806  01                 const type 3
6807  6B5810D6           const [79]: (-703571861)
680B  04                 const type 4
680C  11                 string size (17)
680D  7472616E73666572+  "transfer"
6815  656E6365416E696D+  "enceAnim"
681D  00                 "\0"
                         const [80]: "transferenceAnim"
681E  04                 const type 4
681F  19                 string size (25)
6820  6F70657261746F72+  "operator"
6828  5472616E73666572+  "Transfer"
6830  656E6365496E4678+  "enceInFx"
6838  00                 "\0"
                         const [81]: "operatorTransferenceInFx"
6839  04                 const type 4
683A  15                 string size (21)
683B  7761726672616D65+  "warframe"
6843  546F4F7065726174+  "ToOperat"
684B  6F72467800         "orFx\0"
                         const [82]: "warframeToOperatorFx"
6850  01                 const type 3
6851  BE6D9761           const [83]: (1637313982)
6855  01                 const type 3
6856  7FDE0B03           const [84]: (51109503)
685A  01                 const type 3
685B  95B00062           const [85]: (1644212373)
685F  04                 const type 4
6860  0B                 string size (11)
6861  4C6F7475735F4761+  "Lotus_Ga"
6869  6D6500             "me\0"
                         const [86]: "Lotus_Game"
686C  04                 const type 4
686D  0B                 string size (11)
686E  4C4F545F4E4F524D+  "LOT_NORM"
6876  414C00             "AL\0"
                         const [87]: "LOT_NORMAL"
6879  04                 const type 4
687A  0A                 string size (10)
687B  535549545F534C4F+  "SUIT_SLO"
6883  5400               "T\0"
                         const [88]: "SUIT_SLOT"
6885  01                 const type 3
6886  8AB786EB           const [89]: (-343492726)
688A  04                 const type 4
688B  0B                 string size (11)
688C  6D556D6272614461+  "mUmbraDa"
6894  746500             "te\0"
                         const [90]: "mUmbraDate"
6897  01                 const type 3
6898  0F865E31           const [91]: (828278287)
689C  04                 const type 4
689D  1B                 string size (27)
689E  44697361626C6554+  "DisableT"
68A6  72616E7366657265+  "ransfere"
68AE  6E6365546F467261+  "nceToFra"
68B6  6D6500             "me\0"
                         const [92]: "DisableTransferenceToFrame"
68B9  04                 const type 4
68BA  0C                 string size (12)
68BB  6563686F65734167+  "echoesAg"
68C3  656E7400           "ent\0"
                         const [93]: "echoesAgent"
68C7  01                 const type 3
68C8  BB3AA4CA           const [94]: (-895206725)
68CC  04                 const type 4
68CD  0B                 string size (11)
68CE  756D627261416765+  "umbraAge"
68D6  6E7400             "nt\0"
                         const [95]: "umbraAgent"
68D9  01                 const type 3
68DA  90F9CED1           const [96]: (-774964848)
68DE  01                 const type 3
68DF  F125011A           const [97]: (436282865)
68E3  01                 const type 3
68E4  92F1BA0B           const [98]: (196800914)
68E8  01                 const type 3
68E9  8A5E4503           const [99]: (54877834)
68ED  01                 const type 3
68EE  1A4B27EC           const [100]: (-332969190)
68F2  04                 const type 4
68F3  06                 string size (6)
68F4  416C70686100       "Alpha\0"
                         const [101]: "Alpha"
68FA  01                 const type 3
68FB  2A7E8D4A           const [102]: (1250786858)
68FF  01                 const type 3
6900  E9178A19           const [103]: (428480489)
6904  01                 const type 3
6905  0344B180           const [104]: (-2135866365)
6909  01                 const type 3
690A  DF7436B0           const [105]: (-1338608417)
690E  01                 const type 3
690F  53C18DBF           const [106]: (-1081228973)
6913  01                 const type 3
6914  14E44E1D           const [107]: (491709460)
6918  01                 const type 3
6919  98FD2FED           const [108]: (-315621992)
691D  01                 const type 3
691E  69046494           const [109]: (-1805384599)
6922  04                 const type 4
6923  16                 string size (22)
6924  674C6F7475734175+  "gLotusAu"
692C  7261557067726164+  "raUpgrad"
6934  655479706500       "eType\0"
                         const [110]: "gLotusAuraUpgradeType"
693A  01                 const type 3
693B  097DC06F           const [111]: (1874885897)
693F  01                 const type 3
6940  1FD0B58D           const [112]: (-1917464545)
6944  01                 const type 3
6945  1D68DDC8           const [113]: (-925013987)
6949  01                 const type 3
694A  73092D23           const [114]: (590154099)
694E  01                 const type 3
694F  EF8D137C           const [115]: (2081656303)
6953  01                 const type 3
6954  59AC7869           const [116]: (1769516121)
6958  01                 const type 3
6959  652CB3E2           const [117]: (-491574171)
695D  01                 const type 3
695E  077F3458           const [118]: (1479835399)
6962  01                 const type 3
6963  87A360CA           const [119]: (-899636345)
6967  01                 const type 3
6968  35DD0D29           const [120]: (688774453)
696C  01                 const type 3
696D  28B8922B           const [121]: (731035688)
6971  04                 const type 4
6972  0A                 string size (10)
6973  4D41494E5F48414E+  "MAIN_HAN"
697B  4400               "D\0"
                         const [122]: "MAIN_HAND"
697D  04                 const type 4
697E  29                 string size (41)
697F  496E76656E746F72+  "Inventor"
6987  79436F6E74726F6C+  "yControl"
698F  6C6572426173655F+  "lerBase_"
6997  45535F494E535441+  "ES_INSTA"
699F  4E545F4551554950+  "NT_EQUIP"
69A7  00                 "\0"
                         const [123]: "InventoryControllerBase_ES_INSTANT_EQUIP"
69A8  01                 const type 3
69A9  6C9E947C           const [124]: (2090114668)
69AD  01                 const type 3
69AE  FED25B38           const [125]: (945541886)
69B2  01                 const type 3
69B3  855DDF93           const [126]: (-1814078075)
69B7  01                 const type 3
69B8  5720287C           const [127]: (2083004503)
69BC  01                 const type 3
69BD  B79670F2           const [128]: (-227502409)
69C1  03                 const type 3
69C2  00004040           const [129]: (0)
69C6  01                 const type 3
69C7  A0B8FD01           const [130]: (33405088)
69CB  01                 const type 3
69CC  1BA30910           const [131]: (269067035)
69D0  01                 const type 3
69D1  3DBB2E6B           const [132]: (1798224701)
69D5  01                 const type 3
69D6  00971C22           const [133]: (572299008)
69DA  01                 const type 3
69DB  CA69C60B           const [134]: (197552586)
69DF  04                 const type 4
69E0  16                 string size (22)
69E1  6973436F6E74726F+  "isContro"
69E9  6C6C696E674F7065+  "llingOpe"
69F1  7261746F7200       "rator\0"
                         const [135]: "isControllingOperator"
69F7  01                 const type 3
69F8  8D7D2BF7           const [136]: (-148144755)
69FC  01                 const type 3
69FD  93DDD9AB           const [137]: (-1411785325)
6A01  01                 const type 3
6A02  1F4D9162           const [138]: (1653689631)
6A06  01                 const type 3
6A07  4714A163           const [139]: (1671500871)
6A0B  01                 const type 3
6A0C  4B320C16           const [140]: (369898059)
6A10  04                 const type 4
6A11  0D                 string size (13)
6A12  496E5175696C6C73+  "InQuills"
6A1A  526F6F6D00         "Room\0"
                         const [141]: "InQuillsRoom"
6A1F  01                 const type 3
6A20  000BF9F0           const [142]: (-252114176)
6A24  01                 const type 3
6A25  CFC50E93           const [143]: (-1827748401)
6A29  04                 const type 4
6A2A  0D                 string size (13)
6A2B  4361766557617970+  "CaveWayp"
6A33  6F696E7400         "oint\0"
                         const [144]: "CaveWaypoint"
6A38  01                 const type 3
6A39  099ABE4C           const [145]: (1287559689)
6A3D  01                 const type 3
6A3E  6BB9290B           const [146]: (187283819)
6A42  03                 const type 3
6A43  CDCC4C3E           const [147]: (-51)
6A47  01                 const type 3
6A48  49F4D739           const [148]: (970454089)
6A4C  01                 const type 3
6A4D  5B825020           const [149]: (542147163)
6A51  01                 const type 3
6A52  A604EBE2           const [150]: (-487914330)
6A56  01                 const type 3
6A57  274092FB           const [151]: (-74301401)
6A5B  01                 const type 3
6A5C  6E5436D5           const [152]: (-717859730)
6A60  01                 const type 3
6A61  6E3ADCBB           const [153]: (-1143195026)
6A65  01                 const type 3
6A66  BBD06CA5           const [154]: (-1519595333)
6A6A  01                 const type 3
6A6B  E4C68FF1           const [155]: (-242235676)
6A6F  01                 const type 3
6A70  0567E793           const [156]: (-1813551355)
6A74  01                 const type 3
6A75  4BDF3324           const [157]: (607379275)
6A79  01                 const type 3
6A7A  92462224           const [158]: (606226066)
6A7E  01                 const type 3
6A7F  FC120088           const [159]: (-2013261060)
6A83  01                 const type 3
6A84  CF360B82           const [160]: (-2113194289)
6A88  01                 const type 3
6A89  E29483BC           const [161]: (-1132227358)
6A8D  01                 const type 3
6A8E  A25264B2           const [162]: (-1302048094)
6A92  04                 const type 4
6A93  14                 string size (20)
6A94  54656D706F726172+  "Temporar"
6A9C  794E7063436F6E74+  "yNpcCont"
6AA4  726F6C00           "rol\0"
                         const [163]: "TemporaryNpcControl"
6AA8  01                 const type 3
6AA9  B2E8E872           const [164]: (1927866546)
6AAD  04                 const type 4
6AAE  14                 string size (20)
6AAF  674C6F7475734E70+  "gLotusNp"
6AB7  6341766174617254+  "cAvatarT"
6ABF  79706500           "ype\0"
                         const [165]: "gLotusNpcAvatarType"
6AC3  01                 const type 3
6AC4  743A4D12           const [166]: (307051124)
6AC8  01                 const type 3
6AC9  34FBAC66           const [167]: (1722612532)
6ACD  01                 const type 3
6ACE  B4E7ECB7           const [168]: (-1209210956)
6AD2  01                 const type 3
6AD3  0791B063           const [169]: (1672515847)
6AD7  04                 const type 4
6AD8  18                 string size (24)
6AD9  546F67676C654F70+  "ToggleOp"
6AE1  657261746F724361+  "eratorCa"
6AE9  6C6C6261636B7300   "llbacks\0"
                         const [170]: "ToggleOperatorCallbacks"
                         * functions:
6AF1  00                 sizep (0)
                         * lines:
6AF3  06                 sizelineinfo (884)
                         [pc] (line)
6AF4  73                 [001] (115)
6AF5  03                 [002] (115)
6AF6  00                 [003] (115)
6AF7  00                 [004] (115)
6AF8  73                 [005] (115)
6AF9  03                 [006] (116)
6AFA  00                 [007] (119)
6AFB  00                 [008] (119)
6AFC  73                 [009] (120)
6AFD  03                 [010] (120)
6AFE  00                 [011] (120)
6AFF  00                 [012] (120)
6B00  73                 [013] (120)
6B01  03                 [014] (121)
6B02  00                 [015] (124)
6B03  00                 [016] (124)
6B04  73                 [017] (124)
6B05  03                 [018] (125)
6B06  00                 [019] (125)
6B07  00                 [020] (125)
6B08  74                 [021] (127)
6B09  03                 [022] (127)
6B0A  00                 [023] (-128)
6B0B  00                 [024] (-128)
6B0C  77                 [025] (-128)
6B0D  03                 [026] (-128)
6B0E  00                 [027] (-127)
6B0F  00                 [028] (-124)
6B10  77                 [029] (-124)
6B11  03                 [030] (-124)
6B12  00                 [031] (-124)
6B13  00                 [032] (-124)
6B14  78                 [033] (-122)
6B15  03                 [034] (-122)
6B16  00                 [035] (-121)
6B17  00                 [036] (-121)
6B18  78                 [037] (-121)
6B19  03                 [038] (-121)
6B1A  00                 [039] (-121)
6B1B  00                 [040] (-121)
6B1C  78                 [041] (-121)
6B1D  03                 [042] (-121)
6B1E  00                 [043] (-121)
6B1F  00                 [044] (-121)
6B20  78                 [045] (-120)
6B21  03                 [046] (-120)
6B22  00                 [047] (-120)
6B23  00                 [048] (-120)
6B24  78                 [049] (-115)
6B25  03                 [050] (-115)
6B26  00                 [051] (-113)
6B27  00                 [052] (-113)
6B28  79                 [053] (-112)
6B29  03                 [054] (-112)
6B2A  00                 [055] (-112)
6B2B  00                 [056] (-112)
6B2C  7C                 [057] (-112)
6B2D  03                 [058] (-112)
6B2E  00                 [059] (-112)
6B2F  00                 [060] (-112)
6B30  7C                 [061] (-112)
6B31  03                 [062] (-112)
6B32  00                 [063] (-112)
6B33  00                 [064] (-112)
6B34  7C                 [065] (-111)
6B35  03                 [066] (-111)
6B36  00                 [067] (-111)
6B37  00                 [068] (-110)
6B38  7D                 [069] (-110)
6B39  03                 [070] (-110)
6B3A  00                 [071] (-108)
6B3B  00                 [072] (-108)
6B3C  7D                 [073] (-108)
6B3D  03                 [074] (-108)
6B3E  00                 [075] (-107)
6B3F  00                 [076] (-107)
6B40  7D                 [077] (-107)
6B41  03                 [078] (-107)
6B42  00                 [079] (-107)
6B43  00                 [080] (-107)
6B44  7F                 [081] (-107)
6B45  03                 [082] (-104)
6B46  00                 [083] (-104)
6B47  00                 [084] (-104)
6B48  7F                 [085] (-104)
6B49  03                 [086] (-104)
6B4A  00                 [087] (-104)
6B4B  00                 [088] (-104)
6B4C  80                 [089] (-104)
6B4D  03                 [090] (-104)
6B4E  00                 [091] (-102)
6B4F  00                 [092] (-102)
6B50  80                 [093] (-101)
6B51  03                 [094] (-100)
6B52  00                 [095] (-100)
6B53  00                 [096] (-100)
6B54  80                 [097] (-100)
6B55  03                 [098] (-99)
6B56  00                 [099] (-97)
6B57  00                 [100] (-97)
6B58  80                 [101] (-97)
6B59  03                 [102] (-97)
6B5A  00                 [103] (-96)
6B5B  00                 [104] (-96)
6B5C  81                 [105] (-96)
6B5D  03                 [106] (-96)
6B5E  00                 [107] (-94)
6B5F  00                 [108] (-94)
6B60  84                 [109] (-94)
6B61  03                 [110] (-94)
6B62  00                 [111] (-94)
6B63  00                 [112] (-94)
6B64  84                 [113] (-94)
6B65  03                 [114] (-94)
6B66  00                 [115] (-94)
6B67  00                 [116] (-93)
6B68  84                 [117] (-93)
6B69  03                 [118] (-93)
6B6A  00                 [119] (-93)
6B6B  00                 [120] (-93)
6B6C  84                 [121] (-93)
6B6D  03                 [122] (-92)
6B6E  00                 [123] (-92)
6B6F  00                 [124] (-91)
6B70  84                 [125] (-91)
6B71  03                 [126] (-91)
6B72  00                 [127] (-90)
6B73  00                 [128] (-90)
6B74  86                 [129] (-90)
6B75  03                 [130] (-90)
6B76  00                 [131] (-90)
6B77  00                 [132] (-90)
6B78  86                 [133] (-90)
6B79  03                 [134] (-88)
6B7A  00                 [135] (-88)
6B7B  00                 [136] (-88)
6B7C  87                 [137] (-88)
6B7D  03                 [138] (-88)
6B7E  00                 [139] (-88)
6B7F  00                 [140] (-88)
6B80  87                 [141] (-88)
6B81  03                 [142] (-88)
6B82  00                 [143] (-87)
6B83  00                 [144] (-87)
6B84  87                 [145] (-87)
6B85  03                 [146] (-87)
6B86  00                 [147] (-86)
6B87  00                 [148] (-86)
6B88  87                 [149] (-86)
6B89  03                 [150] (-86)
6B8A  00                 [151] (-84)
6B8B  00                 [152] (-84)
6B8C  87                 [153] (-84)
6B8D  03                 [154] (-81)
6B8E  00                 [155] (-81)
6B8F  00                 [156] (-81)
6B90  87                 [157] (-81)
6B91  03                 [158] (-81)
6B92  00                 [159] (-81)
6B93  00                 [160] (-81)
6B94  87                 [161] (-81)
6B95  03                 [162] (-81)
6B96  00                 [163] (-81)
6B97  00                 [164] (-80)
6B98  87                 [165] (-77)
6B99  03                 [166] (-77)
6B9A  00                 [167] (-77)
6B9B  00                 [168] (-77)
6B9C  87                 [169] (-77)
6B9D  03                 [170] (-76)
6B9E  00                 [171] (-76)
6B9F  00                 [172] (-76)
6BA0  87                 [173] (-76)
6BA1  03                 [174] (-73)
6BA2  00                 [175] (-73)
6BA3  00                 [176] (-73)
6BA4  88                 [177] (-71)
6BA5  03                 [178] (-71)
6BA6  00                 [179] (-70)
6BA7  00                 [180] (-70)
6BA8  88                 [181] (-70)
6BA9  03                 [182] (-69)
6BAA  00                 [183] (-69)
6BAB  00                 [184] (-69)
6BAC  88                 [185] (-69)
6BAD  03                 [186] (-68)
6BAE  00                 [187] (-68)
6BAF  00                 [188] (-68)
6BB0  88                 [189] (-68)
6BB1  03                 [190] (-68)
6BB2  00                 [191] (-68)
6BB3  00                 [192] (-68)
6BB4  8D                 [193] (-68)
6BB5  03                 [194] (-68)
6BB6  00                 [195] (-67)
6BB7  00                 [196] (-67)
6BB8  8D                 [197] (-67)
6BB9  03                 [198] (-67)
6BBA  00                 [199] (-67)
6BBB  00                 [200] (-67)
6BBC  8F                 [201] (-67)
6BBD  03                 [202] (-67)
6BBE  00                 [203] (-67)
6BBF  00                 [204] (-67)
6BC0  8F                 [205] (-67)
6BC1  03                 [206] (-67)
6BC2  00                 [207] (-67)
6BC3  00                 [208] (-64)
6BC4  90                 [209] (-64)
6BC5  03                 [210] (-64)
6BC6  00                 [211] (-64)
6BC7  00                 [212] (-63)
6BC8  90                 [213] (-63)
6BC9  03                 [214] (-62)
6BCA  00                 [215] (-62)
6BCB  00                 [216] (-62)
6BCC  90                 [217] (-62)
6BCD  03                 [218] (-62)
6BCE  00                 [219] (-61)
6BCF  00                 [220] (-61)
6BD0  90                 [221] (-61)
6BD1  03                 [222] (-59)
6BD2  00                 [223] (-59)
6BD3  00                 [224] (-59)
6BD4  90                 [225] (-58)
6BD5  03                 [226] (-58)
6BD6  00                 [227] (-58)
6BD7  00                 [228] (-58)
6BD8  90                 [229] (-58)
6BD9  03                 [230] (-58)
6BDA  00                 [231] (-57)
6BDB  00                 [232] (-57)
6BDC  90                 [233] (-54)
6BDD  03                 [234] (-54)
6BDE  00                 [235] (-54)
6BDF  00                 [236] (-54)
6BE0  90                 [237] (-54)
6BE1  03                 [238] (-53)
6BE2  00                 [239] (-53)
6BE3  00                 [240] (-53)
6BE4  90                 [241] (-53)
6BE5  03                 [242] (-52)
6BE6  00                 [243] (-52)
6BE7  00                 [244] (-52)
6BE8  90                 [245] (-52)
6BE9  03                 [246] (-51)
6BEA  00                 [247] (-51)
6BEB  00                 [248] (-51)
6BEC  90                 [249] (-51)
6BED  03                 [250] (-51)
6BEE  00                 [251] (-51)
6BEF  00                 [252] (-51)
6BF0  90                 [253] (-51)
6BF1  03                 [254] (-51)
6BF2  00                 [255] (-48)
6BF3  00                 [256] (-48)
6BF4  91                 [257] (-46)
6BF5  03                 [258] (-46)
6BF6  00                 [259] (-46)
6BF7  00                 [260] (-46)
6BF8  91                 [261] (-44)
6BF9  03                 [262] (-41)
6BFA  00                 [263] (-38)
6BFB  00                 [264] (-38)
6BFC  91                 [265] (-38)
6BFD  03                 [266] (-38)
6BFE  00                 [267] (-38)
6BFF  00                 [268] (-37)
6C00  92                 [269] (-36)
6C01  03                 [270] (-36)
6C02  00                 [271] (-35)
6C03  00                 [272] (-35)
6C04  92                 [273] (-35)
6C05  03                 [274] (-35)
6C06  00                 [275] (-34)
6C07  00                 [276] (-34)
6C08  92                 [277] (-34)
6C09  03                 [278] (-34)
6C0A  00                 [279] (-34)
6C0B  00                 [280] (-34)
6C0C  94                 [281] (-34)
6C0D  03                 [282] (-33)
6C0E  00                 [283] (-32)
6C0F  00                 [284] (-35)
6C10  94                 [285] (-28)
6C11  03                 [286] (-28)
6C12  00                 [287] (-27)
6C13  00                 [288] (-27)
6C14  94                 [289] (-27)
6C15  03                 [290] (-27)
6C16  00                 [291] (-27)
6C17  00                 [292] (-27)
6C18  94                 [293] (-27)
6C19  03                 [294] (-27)
6C1A  00                 [295] (-27)
6C1B  00                 [296] (-27)
6C1C  95                 [297] (-27)
6C1D  03                 [298] (-27)
6C1E  00                 [299] (-27)
6C1F  00                 [300] (-25)
6C20  95                 [301] (-25)
6C21  03                 [302] (-25)
6C22  00                 [303] (-24)
6C23  00                 [304] (-24)
6C24  95                 [305] (-24)
6C25  03                 [306] (-24)
6C26  00                 [307] (-24)
6C27  00                 [308] (-24)
6C28  95                 [309] (-24)
6C29  03                 [310] (-24)
6C2A  00                 [311] (-24)
6C2B  00                 [312] (-24)
6C2C  95                 [313] (-24)
6C2D  03                 [314] (-24)
6C2E  00                 [315] (-21)
6C2F  00                 [316] (-21)
6C30  95                 [317] (-20)
6C31  03                 [318] (-20)
6C32  00                 [319] (-20)
6C33  00                 [320] (-20)
6C34  95                 [321] (-20)
6C35  03                 [322] (-20)
6C36  00                 [323] (-20)
6C37  00                 [324] (-20)
6C38  98                 [325] (-20)
6C39  03                 [326] (-20)
6C3A  00                 [327] (-20)
6C3B  00                 [328] (-20)
6C3C  98                 [329] (-20)
6C3D  03                 [330] (-20)
6C3E  00                 [331] (-19)
6C3F  00                 [332] (-19)
6C40  98                 [333] (-19)
6C41  03                 [334] (-19)
6C42  00                 [335] (-19)
6C43  00                 [336] (-19)
6C44  98                 [337] (-19)
6C45  03                 [338] (-19)
6C46  00                 [339] (-15)
6C47  00                 [340] (-15)
6C48  98                 [341] (-15)
6C49  03                 [342] (-14)
6C4A  00                 [343] (-14)
6C4B  00                 [344] (-14)
6C4C  98                 [345] (-14)
6C4D  03                 [346] (-14)
6C4E  00                 [347] (-14)
6C4F  00                 [348] (-14)
6C50  98                 [349] (-14)
6C51  03                 [350] (-14)
6C52  00                 [351] (-13)
6C53  00                 [352] (-13)
6C54  98                 [353] (-13)
6C55  03                 [354] (-11)
6C56  00                 [355] (-11)
6C57  00                 [356] (-11)
6C58  98                 [357] (-11)
6C59  03                 [358] (-10)
6C5A  00                 [359] (-10)
6C5B  00                 [360] (-10)
6C5C  9A                 [361] (-10)
6C5D  03                 [362] (-9)
6C5E  00                 [363] (-9)
6C5F  00                 [364] (-9)
6C60  9A                 [365] (-9)
6C61  03                 [366] (-8)
6C62  00                 [367] (-8)
6C63  00                 [368] (-8)
6C64  9B                 [369] (-8)
6C65  03                 [370] (-7)
6C66  00                 [371] (-7)
6C67  00                 [372] (-7)
6C68  9C                 [373] (-7)
6C69  03                 [374] (-7)
6C6A  00                 [375] (-7)
6C6B  00                 [376] (-7)
6C6C  9C                 [377] (-7)
6C6D  03                 [378] (-3)
6C6E  00                 [379] (-3)
6C6F  00                 [380] (-3)
6C70  9C                 [381] (-3)
6C71  03                 [382] (-3)
6C72  00                 [383] (-3)
6C73  00                 [384] (-1)
6C74  9C                 [385] (-1)
6C75  03                 [386] (-1)
6C76  00                 [387] (-1)
6C77  00                 [388] (-1)
6C78  9D                 [389] (-1)
6C79  03                 [390] (-1)
6C7A  00                 [391] (-1)
6C7B  00                 [392] (-1)
6C7C  9F                 [393] (-1)
6C7D  03                 [394] (0)
6C7E  00                 [395] (4)
6C7F  00                 [396] (4)
6C80  9F                 [397] (5)
6C81  03                 [398] (5)
6C82  00                 [399] (5)
6C83  00                 [400] (5)
6C84  9F                 [401] (5)
6C85  03                 [402] (5)
6C86  00                 [403] (6)
6C87  00                 [404] (6)
6C88  9F                 [405] (6)
6C89  03                 [406] (6)
6C8A  00                 [407] (6)
6C8B  00                 [408] (6)
6C8C  A0                 [409] (6)
6C8D  03                 [410] (6)
6C8E  00                 [411] (6)
6C8F  00                 [412] (6)
6C90  A0                 [413] (6)
6C91  03                 [414] (6)
6C92  00                 [415] (6)
6C93  00                 [416] (6)
6C94  A0                 [417] (6)
6C95  03                 [418] (6)
6C96  00                 [419] (6)
6C97  00                 [420] (6)
6C98  A0                 [421] (6)
6C99  03                 [422] (6)
6C9A  00                 [423] (6)
6C9B  00                 [424] (6)
6C9C  A2                 [425] (6)
6C9D  03                 [426] (9)
6C9E  00                 [427] (10)
6C9F  00                 [428] (10)
6CA0  A2                 [429] (10)
6CA1  03                 [430] (10)
6CA2  00                 [431] (11)
6CA3  00                 [432] (11)
6CA4  A2                 [433] (11)
6CA5  03                 [434] (11)
6CA6  00                 [435] (13)
6CA7  00                 [436] (13)
6CA8  A2                 [437] (13)
6CA9  03                 [438] (13)
6CAA  00                 [439] (13)
6CAB  00                 [440] (13)
6CAC  A2                 [441] (13)
6CAD  03                 [442] (13)
6CAE  00                 [443] (13)
6CAF  00                 [444] (13)
6CB0  A2                 [445] (13)
6CB1  03                 [446] (13)
6CB2  00                 [447] (13)
6CB3  00                 [448] (13)
6CB4  A2                 [449] (13)
6CB5  03                 [450] (13)
6CB6  00                 [451] (14)
6CB7  00                 [452] (14)
6CB8  A2                 [453] (14)
6CB9  03                 [454] (14)
6CBA  00                 [455] (14)
6CBB  00                 [456] (15)
6CBC  A2                 [457] (15)
6CBD  03                 [458] (15)
6CBE  00                 [459] (17)
6CBF  00                 [460] (17)
6CC0  A3                 [461] (18)
6CC1  03                 [462] (18)
6CC2  00                 [463] (18)
6CC3  00                 [464] (18)
6CC4  A3                 [465] (19)
6CC5  03                 [466] (19)
6CC6  00                 [467] (19)
6CC7  00                 [468] (20)
6CC8  A3                 [469] (20)
6CC9  03                 [470] (20)
6CCA  00                 [471] (23)
6CCB  00                 [472] (23)
6CCC  A3                 [473] (23)
6CCD  03                 [474] (23)
6CCE  00                 [475] (23)
6CCF  00                 [476] (24)
6CD0  A3                 [477] (24)
6CD1  03                 [478] (24)
6CD2  00                 [479] (24)
6CD3  00                 [480] (24)
6CD4  A3                 [481] (25)
6CD5  03                 [482] (25)
6CD6  00                 [483] (28)
6CD7  00                 [484] (28)
6CD8  A4                 [485] (29)
6CD9  03                 [486] (29)
6CDA  00                 [487] (29)
6CDB  00                 [488] (29)
6CDC  A4                 [489] (29)
6CDD  03                 [490] (29)
6CDE  00                 [491] (29)
6CDF  00                 [492] (29)
6CE0  A5                 [493] (29)
6CE1  03                 [494] (29)
6CE2  00                 [495] (29)
6CE3  00                 [496] (29)
6CE4  A5                 [497] (29)
6CE5  03                 [498] (29)
6CE6  00                 [499] (31)
6CE7  00                 [500] (31)
6CE8  A5                 [501] (32)
6CE9  03                 [502] (32)
6CEA  00                 [503] (32)
6CEB  00                 [504] (32)
6CEC  A6                 [505] (32)
6CED  03                 [506] (32)
6CEE  00                 [507] (32)
6CEF  00                 [508] (32)
6CF0  A6                 [509] (32)
6CF1  03                 [510] (32)
6CF2  00                 [511] (32)
6CF3  00                 [512] (33)
6CF4  A6                 [513] (33)
6CF5  03                 [514] (33)
6CF6  00                 [515] (33)
6CF7  00                 [516] (33)
6CF8  A6                 [517] (36)
6CF9  03                 [518] (36)
6CFA  00                 [519] (36)
6CFB  00                 [520] (36)
6CFC  A6                 [521] (36)
6CFD  03                 [522] (36)
6CFE  00                 [523] (36)
6CFF  00                 [524] (36)
6D00  A6                 [525] (36)
6D01  03                 [526] (36)
6D02  00                 [527] (36)
6D03  00                 [528] (36)
6D04  A6                 [529] (38)
6D05  03                 [530] (38)
6D06  00                 [531] (38)
6D07  00                 [532] (38)
6D08  A8                 [533] (38)
6D09  03                 [534] (38)
6D0A  00                 [535] (39)
6D0B  00                 [536] (39)
6D0C  A8                 [537] (39)
6D0D  03                 [538] (39)
6D0E  00                 [539] (40)
6D0F  00                 [540] (40)
6D10  A8                 [541] (41)
6D11  03                 [542] (41)
6D12  00                 [543] (42)
6D13  00                 [544] (42)
6D14  A8                 [545] (42)
6D15  03                 [546] (42)
6D16  00                 [547] (42)
6D17  00                 [548] (42)
6D18  A8                 [549] (42)
6D19  03                 [550] (42)
6D1A  00                 [551] (43)
6D1B  00                 [552] (43)
6D1C  A8                 [553] (43)
6D1D  03                 [554] (43)
6D1E  00                 [555] (43)
6D1F  00                 [556] (45)
6D20  A8                 [557] (45)
6D21  03                 [558] (45)
6D22  00                 [559] (45)
6D23  00                 [560] (46)
6D24  A8                 [561] (46)
6D25  03                 [562] (46)
6D26  00                 [563] (46)
6D27  00                 [564] (47)
6D28  A8                 [565] (47)
6D29  03                 [566] (47)
6D2A  00                 [567] (47)
6D2B  00                 [568] (47)
6D2C  A9                 [569] (46)
6D2D  03                 [570] (51)
6D2E  00                 [571] (51)
6D2F  00                 [572] (51)
6D30  A9                 [573] (51)
6D31  03                 [574] (54)
6D32  00                 [575] (54)
6D33  00                 [576] (54)
6D34  A9                 [577] (54)
6D35  03                 [578] (55)
6D36  00                 [579] (55)
6D37  00                 [580] (55)
6D38  A9                 [581] (58)
6D39  03                 [582] (58)
6D3A  00                 [583] (58)
6D3B  00                 [584] (58)
6D3C  AA                 [585] (58)
6D3D  03                 [586] (62)
6D3E  00                 [587] (62)
6D3F  00                 [588] (62)
6D40  AA                 [589] (62)
6D41  03                 [590] (63)
6D42  00                 [591] (63)
6D43  00                 [592] (63)
6D44  AA                 [593] (63)
6D45  03                 [594] (63)
6D46  00                 [595] (63)
6D47  00                 [596] (63)
6D48  AA                 [597] (66)
6D49  03                 [598] (66)
6D4A  00                 [599] (66)
6D4B  00                 [600] (66)
6D4C  AC                 [601] (67)
6D4D  03                 [602] (67)
6D4E  00                 [603] (67)
6D4F  00                 [604] (67)
6D50  AC                 [605] (67)
6D51  03                 [606] (70)
6D52  00                 [607] (70)
6D53  00                 [608] (70)
6D54  AC                 [609] (70)
6D55  03                 [610] (71)
6D56  00                 [611] (71)
6D57  00                 [612] (72)
6D58  AF                 [613] (72)
6D59  03                 [614] (74)
6D5A  00                 [615] (74)
6D5B  00                 [616] (75)
6D5C  AF                 [617] (75)
6D5D  03                 [618] (78)
6D5E  00                 [619] (78)
6D5F  00                 [620] (78)
6D60  AF                 [621] (79)
6D61  03                 [622] (79)
6D62  00                 [623] (79)
6D63  00                 [624] (79)
6D64  AF                 [625] (79)
6D65  03                 [626] (79)
6D66  00                 [627] (80)
6D67  00                 [628] (80)
6D68  AF                 [629] (80)
6D69  03                 [630] (80)
6D6A  00                 [631] (80)
6D6B  00                 [632] (82)
6D6C  AF                 [633] (82)
6D6D  03                 [634] (84)
6D6E  00                 [635] (84)
6D6F  00                 [636] (84)
6D70  AF                 [637] (84)
6D71  03                 [638] (84)
6D72  00                 [639] (84)
6D73  00                 [640] (84)
6D74  AF                 [641] (84)
6D75  03                 [642] (84)
6D76  00                 [643] (85)
6D77  00                 [644] (85)
6D78  AF                 [645] (85)
6D79  03                 [646] (85)
6D7A  00                 [647] (88)
6D7B  00                 [648] (88)
6D7C  AF                 [649] (91)
6D7D  03                 [650] (91)
6D7E  00                 [651] (91)
6D7F  00                 [652] (91)
6D80  B0                 [653] (91)
6D81  03                 [654] (91)
6D82  00                 [655] (92)
6D83  00                 [656] (92)
6D84  B3                 [657] (93)
6D85  03                 [658] (93)
6D86  00                 [659] (93)
6D87  00                 [660] (93)
6D88  B3                 [661] (94)
6D89  03                 [662] (94)
6D8A  00                 [663] (94)
6D8B  00                 [664] (94)
6D8C  B3                 [665] (95)
6D8D  03                 [666] (95)
6D8E  00                 [667] (95)
6D8F  00                 [668] (95)
6D90  B3                 [669] (96)
6D91  03                 [670] (96)
6D92  00                 [671] (96)
6D93  00                 [672] (96)
6D94  B3                 [673] (96)
6D95  03                 [674] (97)
6D96  00                 [675] (97)
6D97  00                 [676] (97)
6D98  B4                 [677] (97)
6D99  03                 [678] (97)
6D9A  00                 [679] (97)
6D9B  00                 [680] (97)
6D9C  B4                 [681] (97)
6D9D  03                 [682] (97)
6D9E  00                 [683] (97)
6D9F  00                 [684] (97)
6DA0  B4                 [685] (97)
6DA1  03                 [686] (98)
6DA2  00                 [687] (98)
6DA3  00                 [688] (99)
6DA4  B4                 [689] (99)
6DA5  03                 [690] (99)
6DA6  00                 [691] (99)
6DA7  00                 [692] (99)
6DA8  B7                 [693] (99)
6DA9  03                 [694] (99)
6DAA  00                 [695] (99)
6DAB  00                 [696] (99)
6DAC  B7                 [697] (99)
6DAD  03                 [698] (99)
6DAE  00                 [699] (99)
6DAF  00                 [700] (99)
6DB0  B7                 [701] (99)
6DB1  03                 [702] (99)
6DB2  00                 [703] (99)
6DB3  00                 [704] (99)
6DB4  B9                 [705] (99)
6DB5  03                 [706] (99)
6DB6  00                 [707] (100)
6DB7  00                 [708] (102)
6DB8  B9                 [709] (102)
6DB9  03                 [710] (102)
6DBA  00                 [711] (102)
6DBB  00                 [712] (102)
6DBC  BA                 [713] (103)
6DBD  03                 [714] (103)
6DBE  00                 [715] (103)
6DBF  00                 [716] (107)
6DC0  BA                 [717] (107)
6DC1  03                 [718] (107)
6DC2  00                 [719] (107)
6DC3  00                 [720] (107)
6DC4  BA                 [721] (108)
6DC5  03                 [722] (108)
6DC6  00                 [723] (108)
6DC7  00                 [724] (110)
6DC8  BB                 [725] (110)
6DC9  03                 [726] (112)
6DCA  00                 [727] (112)
6DCB  00                 [728] (112)
6DCC  BB                 [729] (112)
6DCD  03                 [730] (112)
6DCE  00                 [731] (113)
6DCF  00                 [732] (113)
6DD0  BB                 [733] (113)
6DD1  03                 [734] (113)
6DD2  00                 [735] (113)
6DD3  00                 [736] (114)
6DD4  BB                 [737] (114)
6DD5  03                 [738] (118)
6DD6  00                 [739] (118)
6DD7  00                 [740] (118)
6DD8  BC                 [741] (118)
6DD9  03                 [742] (118)
6DDA  00                 [743] (118)
6DDB  00                 [744] (119)
6DDC  BC                 [745] (119)
6DDD  03                 [746] (119)
6DDE  00                 [747] (120)
6DDF  00                 [748] (120)
6DE0  BC                 [749] (120)
6DE1  03                 [750] (121)
6DE2  00                 [751] (121)
6DE3  00                 [752] (121)
6DE4  BC                 [753] (121)
6DE5  03                 [754] (121)
6DE6  00                 [755] (124)
6DE7  00                 [756] (124)
6DE8  BC                 [757] (124)
6DE9  03                 [758] (124)
6DEA  00                 [759] (124)
6DEB  00                 [760] (124)
6DEC  BC                 [761] (124)
6DED  03                 [762] (124)
6DEE  00                 [763] (124)
6DEF  00                 [764] (124)
6DF0  BC                 [765] (124)
6DF1  03                 [766] (124)
6DF2  00                 [767] (124)
6DF3  00                 [768] (124)
6DF4  BC                 [769] (124)
6DF5  03                 [770] (124)
6DF6  00                 [771] (124)
6DF7  00                 [772] (124)
6DF8  BC                 [773] (124)
6DF9  03                 [774] (124)
6DFA  00                 [775] (124)
6DFB  00                 [776] (125)
6DFC  BD                 [777] (125)
6DFD  03                 [778] (125)
6DFE  00                 [779] (125)
6DFF  00                 [780] (127)
6E00  BD                 [781] (127)
6E01  03                 [782] (-128)
6E02  00                 [783] (-128)
6E03  00                 [784] (-128)
6E04  BD                 [785] (-128)
6E05  03                 [786] (-128)
6E06  00                 [787] (-127)
6E07  00                 [788] (-127)
6E08  BD                 [789] (-126)
6E09  03                 [790] (-126)
6E0A  00                 [791] (-125)
6E0B  00                 [792] (-125)
6E0C  BD                 [793] (-125)
6E0D  03                 [794] (-125)
6E0E  00                 [795] (-123)
6E0F  00                 [796] (-123)
6E10  BD                 [797] (-123)
6E11  03                 [798] (-123)
6E12  00                 [799] (-123)
6E13  00                 [800] (-122)
6E14  BD                 [801] (-122)
6E15  03                 [802] (-122)
6E16  00                 [803] (-121)
6E17  00                 [804] (-121)
6E18  BD                 [805] (-121)
6E19  03                 [806] (-120)
6E1A  00                 [807] (-120)
6E1B  00                 [808] (-120)
6E1C  BD                 [809] (-119)
6E1D  03                 [810] (-119)
6E1E  00                 [811] (-118)
6E1F  00                 [812] (-118)
6E20  BD                 [813] (-118)
6E21  03                 [814] (-117)
6E22  00                 [815] (-117)
6E23  00                 [816] (-117)
6E24  BD                 [817] (-114)
6E25  03                 [818] (-114)
6E26  00                 [819] (-113)
6E27  00                 [820] (-113)
6E28  BD                 [821] (-113)
6E29  03                 [822] (-113)
6E2A  00                 [823] (-113)
6E2B  00                 [824] (-113)
6E2C  BD                 [825] (-111)
6E2D  03                 [826] (-110)
6E2E  00                 [827] (-107)
6E2F  00                 [828] (-107)
6E30  C0                 [829] (-107)
6E31  03                 [830] (-104)
6E32  00                 [831] (-104)
6E33  00                 [832] (-104)
6E34  C0                 [833] (-104)
6E35  03                 [834] (-104)
6E36  00                 [835] (-104)
6E37  00                 [836] (-104)
6E38  C0                 [837] (-104)
6E39  03                 [838] (-104)
6E3A  00                 [839] (-104)
6E3B  00                 [840] (-104)
6E3C  C0                 [841] (-104)
6E3D  03                 [842] (-104)
6E3E  00                 [843] (-104)
6E3F  00                 [844] (-104)
6E40  C1                 [845] (-103)
6E41  03                 [846] (-103)
6E42  00                 [847] (-103)
6E43  00                 [848] (-102)
6E44  C1                 [849] (-101)
6E45  03                 [850] (-101)
6E46  00                 [851] (-101)
6E47  00                 [852] (-101)
6E48  C2                 [853] (-101)
6E49  03                 [854] (-100)
6E4A  00                 [855] (-100)
6E4B  00                 [856] (-100)
6E4C  C2                 [857] (-98)
6E4D  03                 [858] (-98)
6E4E  00                 [859] (-98)
6E4F  00                 [860] (-98)
6E50  C2                 [861] (-97)
6E51  03                 [862] (-97)
6E52  00                 [863] (-97)
6E53  00                 [864] (-97)
6E54  C2                 [865] (-97)
6E55  03                 [866] (-96)
6E56  00                 [867] (-96)
6E57  00                 [868] (-96)
6E58  C2                 [869] (-92)
6E59  03                 [870] (-92)
6E5A  00                 [871] (-92)
6E5B  00                 [872] (-92)
6E5C  C3                 [873] (-92)
6E5D  03                 [874] (-91)
6E5E  00                 [875] (-91)
6E5F  00                 [876] (-91)
6E60  C3                 [877] (-91)
6E61  03                 [878] (-91)
6E62  00                 [879] (-90)
6E63  00                 [880] (-90)
6E64  C3                 [881] (-90)
6E65  03                 [882] (-92)
6E66  00                 [883] (-89)
6E67  00                 [884] (-87)
                         * locals:
78C4  00                 sizelocvars (0)
                         * upvalues:
78C5  00                 sizeupvalues (0)
                         ** end of function **

                         
78C6                     ** function [20] definition (level 2)
                         ** start of function **
78C6  00                 string size (0)
                         source name: (none)
78C8  09                 line defined (1195)
78C9  D7                 last line defined (1495)
78CA  0B                 nups (14)
78CB  0E                 numparams (4)
78CC  04                 is_vararg (0)
78CD  00                 maxstacksize (28)
                         * code:
78D0  06                 sizecode (788)
78D1  1D010000           [001] getglobal  4   0        ; gRegion
78D5  24414002           [002] self       4   4   257  ; -1520831144
78D9  22810001           [003] call       4   2   2  
78DD  18010000           [004] test       4       0    ; to [6] if true
78E1  1A800180           [005] jmp        7            ; to [13]
78E5  2481C000           [006] self       4   1   258  ; -1519595333
78E9  22810001           [007] call       4   2   2  
78ED  18010000           [008] test       4       0    ; to [10] if true
78F1  1A800080           [009] jmp        3            ; to [13]
78F5  24C14000           [010] self       4   0   259  ; -1969966559
78F9  22410001           [011] call       4   2   1  
78FD  1E008000           [012] return     0   1      
7901  1D010100           [013] getglobal  4   4        ; _T
7905  0E414102           [014] gettable   4   4   261  ; "FakeTransferenceActivated"
fail op	35
7909  23804102           [015] close      0  
790D  1A800080           [016] jmp        3            ; to [20]
7911  1D010100           [017] getglobal  4   4        ; _T
7915  0CC1C182           [018] settable   4   261 263  ; "FakeTransferenceActivated" 1
7919  1E008000           [019] return     0   1      
791D  1D010200           [020] getglobal  4   8        ; 1074689893
7921  52010000           [021] move       5   0      
7925  22810001           [022] call       4   2   2  
7929  18010000           [023] test       4       0    ; to [25] if true
792D  1AC00080           [024] jmp        4            ; to [29]
7931  1D410200           [025] getglobal  4   9        ; -1817107093
7935  59810200           [026] loadk      5   10       ; "Aborting transference, instigator powersuit is null"
7939  22410001           [027] call       4   2   1  
793D  1E008000           [028] return     0   1      
7941  1D010200           [029] getglobal  4   8        ; 1074689893
7945  5D010100           [030] getglobal  5   4        ; _T
7949  4EC1C202           [031] gettable   5   5   267  ; "CustomTransferenceActivation"
794D  22810001           [032] call       4   2   2  
7951  18410000           [033] test       4       1    ; to [35] if false
7955  1A400280           [034] jmp        10           ; to [45]
7959  1D010100           [035] getglobal  4   4        ; _T
795D  0E014302           [036] gettable   4   4   268  ; -1330458937
7961  52010000           [037] move       5   0      
7965  92018000           [038] move       6   1      
7969  D2010001           [039] move       7   2      
796D  12028001           [040] move       8   3      
7971  22818002           [041] call       4   5   2  
7975  18010000           [042] test       4       0    ; to [44] if true
7979  1A000080           [043] jmp        1            ; to [45]
797D  1E008000           [044] return     0   1      
7981  6441C300           [045] self       5   1   269  ; -1143195026
7985  D7018000           [046] loadbool   7   1   0    ; true
7989  62418001           [047] call       5   3   1  
798D  5D010200           [048] getglobal  5   8        ; 1074689893
7991  92010001           [049] move       6   2      
7995  62810001           [050] call       5   2   2  
7999  58410000           [051] test       5       1    ; to [53] if false
799D  1A800080           [052] jmp        3            ; to [56]
79A1  64414301           [053] self       5   2   269  ; -1143195026
79A5  D7018000           [054] loadbool   7   1   0    ; true
79A9  62418001           [055] call       5   3   1  
79AD  64814300           [056] self       5   0   270  ; -1130691958
79B1  62810001           [057] call       5   2   2  
79B5  A4C1C300           [058] self       6   1   271  ; 1370462905
79B9  A2810001           [059] call       6   2   2  
79BD  98410000           [060] test       6       1    ; to [62] if false
79C1  1AC00580           [061] jmp        24           ; to [86]
79C5  58010000           [062] test       5       0    ; to [64] if true
79C9  1A800280           [063] jmp        11           ; to [75]
79CD  9D010200           [064] getglobal  6   8        ; 1074689893
79D1  D2010001           [065] move       7   2      
79D5  A2810001           [066] call       6   2   2  
79D9  98410000           [067] test       6       1    ; to [69] if false
79DD  1A400180           [068] jmp        6            ; to [75]
79E1  A4014401           [069] self       6   2   272  ; -214694299
79E5  1D420400           [070] getglobal  8   17       ; Engine
79E9  0E824404           [071] gettable   8   8   274  ; "PM_AIRBORNE"
79ED  A2818001           [072] call       6   3   2  
79F1  98010000           [073] test       6       0    ; to [75] if true
79F5  1AC00180           [074] jmp        8            ; to [83]
79F9  58410000           [075] test       5       1    ; to [77] if false
79FD  1A000280           [076] jmp        9            ; to [86]
7A01  A401C400           [077] self       6   1   272  ; -214694299
7A05  1D420400           [078] getglobal  8   17       ; Engine
7A09  0E824404           [079] gettable   8   8   274  ; "PM_AIRBORNE"
7A0D  A2818001           [080] call       6   3   2  
7A11  98410000           [081] test       6       1    ; to [83] if false
7A15  1A800080           [082] jmp        3            ; to [86]
7A19  A4C1C400           [083] self       6   1   275  ; 1129487547
7A1D  17020000           [084] loadbool   8   0   0    ; false
7A21  A2418001           [085] call       6   3   1  
7A25  A401C500           [086] self       6   1   276  ; -564624675
7A29  A2810001           [087] call       6   2   2  
7A2D  DD010200           [088] getglobal  7   8        ; 1074689893
7A31  12020003           [089] move       8   6      
7A35  E2810001           [090] call       7   2   2  
7A39  D8410000           [091] test       7       1    ; to [93] if false
7A3D  1A800080           [092] jmp        3            ; to [96]
7A41  E4414503           [093] self       7   6   277  ; -2032683784
7A45  46028004           [094] loadnil    9   9      
7A49  E2418001           [095] call       7   3   1  
7A4D  DD010000           [096] getglobal  7   0        ; gRegion
7A51  E441C003           [097] self       7   7   257  ; -1520831144
7A55  E2810001           [098] call       7   2   2  
7A59  D8010000           [099] test       7       0    ; to [101] if true
7A5D  1A800B80           [100] jmp        47           ; to [148]
7A61  DD010200           [101] getglobal  7   8        ; 1074689893
7A65  12020001           [102] move       8   2      
7A69  E2810001           [103] call       7   2   2  
7A6D  D8010000           [104] test       7       0    ; to [106] if true
7A71  1A400A80           [105] jmp        42           ; to [148]
7A75  58410000           [106] test       5       1    ; to [108] if false
7A79  1AC00980           [107] jmp        40           ; to [148]
7A7D  D3010000           [108] getupval   7   0      
7A81  CE81C503           [109] gettable   7   7   278  ; -2016270516
7A85  E2818000           [110] call       7   1   2  
7A89  D8410000           [111] test       7       1    ; to [113] if false
7A8D  1A000480           [112] jmp        17           ; to [130]
7A91  DDC10500           [113] getglobal  7   23       ; gGameRules
7A95  E401C603           [114] self       7   7   280  ; -1957065004
7A99  5D420600           [115] getglobal  9   25       ; gLotusPhotoBoothGameRulesType
7A9D  E2818001           [116] call       7   3   2  
7AA1  D8410000           [117] test       7       1    ; to [119] if false
7AA5  1A800280           [118] jmp        11           ; to [130]
7AA9  DDC10500           [119] getglobal  7   23       ; gGameRules
7AAD  E401C603           [120] self       7   7   280  ; -1957065004
7AB1  5D820600           [121] getglobal  9   26       ; gLotusHubGameRulesType
7AB5  E2818001           [122] call       7   3   2  
7AB9  D8410000           [123] test       7       1    ; to [125] if false
7ABD  1A000180           [124] jmp        5            ; to [130]
7AC1  DDC10500           [125] getglobal  7   23       ; gGameRules
7AC5  E4C1C603           [126] self       7   7   283  ; 2081656303
7AC9  E2810001           [127] call       7   2   2  
7ACD  D8010000           [128] test       7       0    ; to [130] if true
7AD1  1A400480           [129] jmp        18           ; to [148]
7AD5  E401C700           [130] self       7   1   284  ; 1839670529
7AD9  E2810001           [131] call       7   2   2  
7ADD  2442C700           [132] self       8   1   285  ; -365711519
7AE1  22820001           [133] call       8   2   2  
7AE5  04824704           [134] mul        8   8   286  ; 0
7AE9  C3018203           [135] add        7   7   8  
7AED  13028000           [136] getupval   8   1      
7AF1  52020003           [137] move       9   6      
7AF5  92028000           [138] move       10  1      
7AF9  D2028003           [139] move       11  7      
7AFD  22820002           [140] call       8   4   2  
7B01  92000004           [141] move       2   8      
7B05  1D020200           [142] getglobal  8   8        ; 1074689893
7B09  52020001           [143] move       9   2      
7B0D  22820001           [144] call       8   2   2  
7B11  18020000           [145] test       8       0    ; to [147] if true
7B15  1A000080           [146] jmp        1            ; to [148]
7B19  1E008000           [147] return     0   1      
7B1D  13020000           [148] getupval   8   0      
7B21  0EC24704           [149] gettable   8   8   287  ; -2065906648
7B25  22828000           [150] call       8   1   2  
7B29  53020000           [151] getupval   9   0      
7B2D  4E02C804           [152] gettable   9   9   288  ; "UI_MODE_IN_SPACE_SHIP"
fail op	35
7B31  63400204           [153] close      1  
7B35  1A800680           [154] jmp        27           ; to [182]
7B39  2442C800           [155] self       8   1   289  ; -1201586349
7B3D  22820001           [156] call       8   2   2  
7B41  18020000           [157] test       8       0    ; to [159] if true
7B45  1AC00280           [158] jmp        12           ; to [171]
7B49  58010000           [159] test       5       0    ; to [161] if true
7B4D  1A800180           [160] jmp        7            ; to [168]
7B51  13020001           [161] getupval   8   2      
7B55  52028000           [162] move       9   1      
7B59  22420001           [163] call       8   2   1  
7B5D  13028001           [164] getupval   8   3      
7B61  0E824804           [165] gettable   8   8   290  ; -1231462147
7B65  22428000           [166] call       8   1   1  
7B69  1A800080           [167] jmp        3            ; to [171]
7B6D  13028001           [168] getupval   8   3      
7B71  0EC24804           [169] gettable   8   8   291  ; 460364462
7B75  22428000           [170] call       8   1   1  
7B79  2402C900           [171] self       8   1   292  ; -1813737495
7B7D  22820001           [172] call       8   2   2  
7B81  5D020200           [173] getglobal  9   8        ; 1074689893
7B85  92020004           [174] move       10  8      
7B89  62820001           [175] call       9   2   2  
7B8D  58420000           [176] test       9       1    ; to [178] if false
7B91  1A400080           [177] jmp        2            ; to [180]
7B95  64424904           [178] self       9   8   293  ; 2104108032
7B99  62420001           [179] call       9   2   1  
7B9D  6482C900           [180] self       9   1   294  ; -343505193
7BA1  62420001           [181] call       9   2   1  
7BA5  58010000           [182] test       5       0    ; to [184] if true
7BA9  1A800080           [183] jmp        3            ; to [187]
7BAD  64C2C900           [184] self       9   1   295  ; 719211773
7BB1  D7020000           [185] loadbool   11  0   0    ; false
7BB5  62428001           [186] call       9   3   1  
7BB9  6402CA00           [187] self       9   1   296  ; 1408791382
7BBD  62820001           [188] call       9   2   2  
7BC1  6442CA04           [189] self       9   9   297  ; -1317461587
7BC5  62420001           [190] call       9   2   1  
7BC9  6402CA00           [191] self       9   1   296  ; 1408791382
7BCD  62820001           [192] call       9   2   2  
7BD1  6482CA04           [193] self       9   9   298  ; 1172770637
7BD5  62420001           [194] call       9   2   1  
7BD9  64C2CA00           [195] self       9   1   299  ; -452063099
7BDD  DD420400           [196] getglobal  11  17       ; Engine
7BE1  CE02CB05           [197] gettable   11  11  300  ; "PM_AIM"
7BE5  17030000           [198] loadbool   12  0   0    ; false
7BE9  62420002           [199] call       9   4   1  
7BED  6402C600           [200] self       9   1   280  ; -1957065004
7BF1  DD420B00           [201] getglobal  11  45       ; gTennoAvatarType
7BF5  62828001           [202] call       9   3   2  
7BF9  58020000           [203] test       9       0    ; to [205] if true
7BFD  1A000280           [204] jmp        9            ; to [214]
7C01  58410000           [205] test       5       1    ; to [207] if false
7C05  1A800180           [206] jmp        7            ; to [214]
7C09  6482CB00           [207] self       9   1   302  ; 1056252961
7C0D  D7020000           [208] loadbool   11  0   0    ; false
7C11  62428001           [209] call       9   3   1  
7C15  53020002           [210] getupval   9   4      
7C19  92028000           [211] move       10  1      
7C1D  62420001           [212] call       9   2   1  
7C21  1A400480           [213] jmp        18           ; to [232]
7C25  5D020200           [214] getglobal  9   8        ; 1074689893
7C29  92020001           [215] move       10  2      
7C2D  62820001           [216] call       9   2   2  
7C31  58420000           [217] test       9       1    ; to [219] if false
7C35  1A000380           [218] jmp        13           ; to [232]
7C39  64024601           [219] self       9   2   280  ; -1957065004
7C3D  DD420B00           [220] getglobal  11  45       ; gTennoAvatarType
7C41  62828001           [221] call       9   3   2  
7C45  58020000           [222] test       9       0    ; to [224] if true
7C49  1AC00180           [223] jmp        8            ; to [232]
7C4D  58010000           [224] test       5       0    ; to [226] if true
7C51  1A400180           [225] jmp        6            ; to [232]
7C55  64824B01           [226] self       9   2   302  ; 1056252961
7C59  D7028000           [227] loadbool   11  1   0    ; true
7C5D  62428001           [228] call       9   3   1  
7C61  53020002           [229] getupval   9   4      
7C65  92020001           [230] move       10  2      
7C69  62420001           [231] call       9   2   1  
7C6D  5D020000           [232] getglobal  9   0        ; gRegion
7C71  6442C004           [233] self       9   9   257  ; -1520831144
7C75  62820001           [234] call       9   2   2  
7C79  58020000           [235] test       9       0    ; to [237] if true
7C7D  1A800880           [236] jmp        35           ; to [272]
7C81  53020000           [237] getupval   9   0      
7C85  4EC2C704           [238] gettable   9   9   287  ; -2065906648
7C89  62828000           [239] call       9   1   2  
7C8D  93020000           [240] getupval   10  0      
7C91  8E024805           [241] gettable   10  10  288  ; "UI_MODE_IN_SPACE_SHIP"
fail op	35
7C95  63808204           [242] close      1  
7C99  1A400280           [243] jmp        10           ; to [254]
7C9D  5D020200           [244] getglobal  9   8        ; 1074689893
7CA1  9D020100           [245] getglobal  10  4        ; _T
7CA5  8EC24B05           [246] gettable   10  10  303  ; "IsOperatorOnShipTutorial"
7CA9  62820001           [247] call       9   2   2  
7CAD  58420000           [248] test       9       1    ; to [250] if false
7CB1  1A800380           [249] jmp        15           ; to [265]
7CB5  5D020100           [250] getglobal  9   4        ; _T
7CB9  4EC2CB04           [251] gettable   9   9   303  ; "IsOperatorOnShipTutorial"
7CBD  58020000           [252] test       9       0    ; to [254] if true
7CC1  1A800280           [253] jmp        11           ; to [265]
7CC5  64824300           [254] self       9   0   270  ; -1130691958
7CC9  62820001           [255] call       9   2   2  
7CCD  58420000           [256] test       9       1    ; to [258] if false
7CD1  1AC00080           [257] jmp        4            ; to [262]
7CD5  53028002           [258] getupval   9   5      
7CD9  92028000           [259] move       10  1      
7CDD  62420001           [260] call       9   2   1  
7CE1  1AC01780           [261] jmp        96           ; to [358]
7CE5  53020003           [262] getupval   9   6      
7CE9  62428000           [263] call       9   1   1  
7CED  1A001780           [264] jmp        93           ; to [358]
7CF1  53028003           [265] getupval   9   7      
7CF5  92020000           [266] move       10  0      
7CF9  D2028000           [267] move       11  1      
7CFD  12030001           [268] move       12  2      
7D01  52038001           [269] move       13  3      
7D05  62428002           [270] call       9   5   1  
7D09  1A401580           [271] jmp        86           ; to [358]
7D0D  5D020200           [272] getglobal  9   8        ; 1074689893
7D11  92028000           [273] move       10  1      
7D15  62820001           [274] call       9   2   2  
7D19  58420000           [275] test       9       1    ; to [277] if false
7D1D  1A400D80           [276] jmp        54           ; to [331]
7D21  58010000           [277] test       5       0    ; to [279] if true
7D25  1AC00C80           [278] jmp        52           ; to [331]
7D29  6402CC00           [279] self       9   1   304  ; -1132227358
7D2D  62420001           [280] call       9   2   1  
7D31  6442CC00           [281] self       9   1   305  ; -1917464545
7D35  62820001           [282] call       9   2   2  
7D39  6482CC04           [283] self       9   9   306  ; 402026009
7D3D  62420001           [284] call       9   2   1  
7D41  64C2CC00           [285] self       9   1   307  ; 606226066
7D45  D7020000           [286] loadbool   11  0   0    ; false
7D49  62428001           [287] call       9   3   1  
7D4D  6402CD00           [288] self       9   1   308  ; 1265388858
7D51  DD420D00           [289] getglobal  11  53       ; powerMenuInputFilter
7D55  62428001           [290] call       9   3   1  
7D59  6482CD00           [291] self       9   1   310  ; 1129512439
7D5D  DDC20D00           [292] getglobal  11  55       ; blockingInputFilter
7D61  62428001           [293] call       9   3   1  
7D65  D8000000           [294] test       3       0    ; to [296] if true
7D69  1A400580           [295] jmp        22           ; to [318]
7D6D  6402CE00           [296] self       9   1   312  ; -1421644046
7D71  DD420E00           [297] getglobal  11  57       ; operatorDeathTransferenceOutFx
7D75  1D830E00           [298] getglobal  12  58       ; EMPTY_SYMBOL
7D79  62420002           [299] call       9   4   1  
7D7D  53020004           [300] getupval   9   8      
7D81  4EC2CE04           [301] gettable   9   9   315  ; 1866016139
7D85  92028000           [302] move       10  1      
7D89  DD020F00           [303] getglobal  11  60       ; transferenceOutProjectorType
7D8D  1D030F00           [304] getglobal  12  60       ; transferenceOutProjectorType
7D91  62420002           [305] call       9   4   1  
7D95  6442CF00           [306] self       9   1   317  ; -832323870
7D99  62420001           [307] call       9   2   1  
7D9D  5D820F00           [308] getglobal  9   62       ; 538022378
7DA1  99C20F00           [309] loadk      10  63       ; 0
7DA5  62420001           [310] call       9   2   1  
7DA9  53020004           [311] getupval   9   8      
7DAD  4E02D004           [312] gettable   9   9   320  ; -1970331308
7DB1  92028000           [313] move       10  1      
7DB5  DD020F00           [314] getglobal  11  60       ; transferenceOutProjectorType
7DB9  1D030F00           [315] getglobal  12  60       ; transferenceOutProjectorType
7DBD  62420002           [316] call       9   4   1  
7DC1  1AC00080           [317] jmp        4            ; to [322]
7DC5  6402CE00           [318] self       9   1   312  ; -1421644046
7DC9  DD421000           [319] getglobal  11  65       ; operatorTransferenceOutFx
7DCD  1D830E00           [320] getglobal  12  58       ; EMPTY_SYMBOL
7DD1  62420002           [321] call       9   4   1  
7DD5  5D020200           [322] getglobal  9   8        ; 1074689893
7DD9  92020001           [323] move       10  2      
7DDD  62820001           [324] call       9   2   2  
7DE1  58420000           [325] test       9       1    ; to [327] if false
7DE5  1A800780           [326] jmp        31           ; to [358]
7DE9  64024D01           [327] self       9   2   308  ; 1265388858
7DED  DD420D00           [328] getglobal  11  53       ; powerMenuInputFilter
7DF1  62428001           [329] call       9   3   1  
7DF5  1A800680           [330] jmp        27           ; to [358]
7DF9  5D020200           [331] getglobal  9   8        ; 1074689893
7DFD  92020001           [332] move       10  2      
7E01  62820001           [333] call       9   2   2  
7E05  58420000           [334] test       9       1    ; to [336] if false
7E09  1A400580           [335] jmp        22           ; to [358]
7E0D  58410000           [336] test       5       1    ; to [338] if false
7E11  1AC00480           [337] jmp        20           ; to [358]
7E15  64C24C01           [338] self       9   2   307  ; 606226066
7E19  D7028000           [339] loadbool   11  1   0    ; true
7E1D  62428001           [340] call       9   3   1  
7E21  6402CD00           [341] self       9   1   308  ; 1265388858
7E25  DD420D00           [342] getglobal  11  53       ; powerMenuInputFilter
7E29  62428001           [343] call       9   3   1  
7E2D  64024D01           [344] self       9   2   308  ; 1265388858
7E31  DDC20D00           [345] getglobal  11  55       ; blockingInputFilter
7E35  62428001           [346] call       9   3   1  
7E39  64024E01           [347] self       9   2   312  ; -1421644046
7E3D  DD821000           [348] getglobal  11  66       ; operatorTransferenceInFx
7E41  1D830E00           [349] getglobal  12  58       ; EMPTY_SYMBOL
7E45  62420002           [350] call       9   4   1  
7E49  6402CE00           [351] self       9   1   312  ; -1421644046
7E4D  DDC21000           [352] getglobal  11  67       ; warframeToOperatorFx
7E51  1D830E00           [353] getglobal  12  58       ; EMPTY_SYMBOL
7E55  62420002           [354] call       9   4   1  
7E59  64025101           [355] self       9   2   324  ; -703571861
7E5D  D9421100           [356] loadk      11  69       ; 0
7E61  62428001           [357] call       9   3   1  
7E65  5D020200           [358] getglobal  9   8        ; 1074689893
7E69  92020001           [359] move       10  2      
7E6D  62820001           [360] call       9   2   2  
7E71  58420000           [361] test       9       1    ; to [363] if false
7E75  1A800280           [362] jmp        11           ; to [374]
7E79  64424C01           [363] self       9   2   305  ; -1917464545
7E7D  62820001           [364] call       9   2   2  
7E81  6482D104           [365] self       9   9   326  ; 1769516121
7E85  62820001           [366] call       9   2   2  
7E89  9D020200           [367] getglobal  10  8        ; 1074689893
7E8D  D2028004           [368] move       11  9      
7E91  A2820001           [369] call       10  2   2  
7E95  98420000           [370] test       10      1    ; to [372] if false
7E99  1A400080           [371] jmp        2            ; to [374]
7E9D  A4C2D104           [372] self       10  9   327  ; 1279159121
7EA1  A2420001           [373] call       10  2   1  
7EA5  9D020200           [374] getglobal  10  8        ; 1074689893
7EA9  DD020100           [375] getglobal  11  4        ; _T
7EAD  CE02D205           [376] gettable   11  11  328  ; "isOperatorTransferring"
7EB1  A2820001           [377] call       10  2   2  
7EB5  98420000           [378] test       10      1    ; to [380] if false
7EB9  1A400180           [379] jmp        6            ; to [386]
7EBD  9D020100           [380] getglobal  10  4        ; _T
7EC1  8E025205           [381] gettable   10  10  328  ; "isOperatorTransferring"
7EC5  98020000           [382] test       10      0    ; to [384] if true
7EC9  1A400080           [383] jmp        2            ; to [386]
7ECD  9D020100           [384] getglobal  10  4        ; _T
7ED1  8C4252A4           [385] settable   10  328 329  ; "isOperatorTransferring" nil
7ED5  93020000           [386] getupval   10  0      
7ED9  8E825205           [387] gettable   10  10  330  ; -1007113210
7EDD  D2028000           [388] move       11  1      
7EE1  19C31200           [389] loadk      12  75       ; 0
7EE5  A2428001           [390] call       10  3   1  
7EE9  93020000           [391] getupval   10  0      
7EED  8E825205           [392] gettable   10  10  330  ; -1007113210
7EF1  D2020001           [393] move       11  2      
7EF5  19431100           [394] loadk      12  69       ; 0
7EF9  A2428001           [395] call       10  3   1  
7EFD  9D020000           [396] getglobal  10  0        ; gRegion
7F01  A4424005           [397] self       10  10  257  ; -1520831144
7F05  A2820001           [398] call       10  2   2  
7F09  98420000           [399] test       10      1    ; to [401] if false
7F0D  1A804C80           [400] jmp        307          ; to [708]
7F11  A402C600           [401] self       10  1   280  ; -1957065004
7F15  1D430B00           [402] getglobal  12  45       ; gTennoAvatarType
7F19  A2828001           [403] call       10  3   2  
7F1D  98020000           [404] test       10      0    ; to [406] if true
7F21  1A800980           [405] jmp        39           ; to [445]
7F25  9D021300           [406] getglobal  10  76       ; warframeTransferenceDamageReduction
7F29  E4824300           [407] self       11  0   270  ; -1130691958
7F2D  E2820001           [408] call       11  2   2  
7F31  D8020000           [409] test       11      0    ; to [411] if true
7F35  1A400080           [410] jmp        2            ; to [413]
7F39  99421100           [411] loadk      10  69       ; 0
7F3D  1AC00480           [412] jmp        20           ; to [433]
7F41  D7020000           [413] loadbool   11  0   0    ; false
7F45  24435300           [414] self       12  0   333  ; -1928567582
7F49  22830001           [415] call       12  2   2  
7F4D  59C31200           [416] loadk      13  75       ; 0
7F51  8A030006           [417] len        14  12     
7F55  D9C31200           [418] loadk      15  75       ; 0
7F59  50030280           [419] forprep    13  9        ; to [429]
fail op	21
7F5D  15805308           [420] concat     0   16  334
7F61  1A800180           [421] jmp        7            ; to [429]
7F65  4E040406           [422] gettable   17  12  16 
7F69  64C4D308           [423] self       17  17  335  ; 188678183
7F6D  62840001           [424] call       17  2   2  
7F71  58040000           [425] test       17      0    ; to [427] if true
7F75  1A400080           [426] jmp        2            ; to [429]
7F79  D7028000           [427] loadbool   11  1   0    ; true
7F7D  1A000080           [428] jmp        1            ; to [430]
7F81  5443FD7F           [429] forloop    13  -10      ; to [420] if loop
7F85  D8420000           [430] test       11      1    ; to [432] if false
7F89  1A000080           [431] jmp        1            ; to [433]
7F8D  99421100           [432] loadk      10  69       ; 0
7F91  6404D400           [433] self       17  1   336  ; -1544157541
7F95  62840001           [434] call       17  2   2  
7F99  6444D408           [435] self       17  17  337  ; 808964080
7F9D  D3048004           [436] getupval   19  9      
7FA1  1D450400           [437] getglobal  20  17       ; Engine
7FA5  0E85540A           [438] gettable   20  20  338  ; "DT_ANY"
7FA9  5D450400           [439] getglobal  21  17       ; Engine
7FAD  4EC5D40A           [440] gettable   21  21  339  ; "ANY_PART"
7FB1  9D450400           [441] getglobal  22  17       ; Engine
7FB5  8E05550B           [442] gettable   22  22  340  ; "DHT_NONE"
7FB9  D2050005           [443] move       23  10     
7FBD  62448003           [444] call       17  7   1  
7FC1  5D040200           [445] getglobal  17  8        ; 1074689893
7FC5  92040001           [446] move       18  2      
7FC9  62840001           [447] call       17  2   2  
7FCD  58440000           [448] test       17      1    ; to [450] if false
7FD1  1A000180           [449] jmp        5            ; to [455]
7FD5  64045401           [450] self       17  2   336  ; -1544157541
7FD9  62840001           [451] call       17  2   2  
7FDD  6444D508           [452] self       17  17  341  ; 197552586
7FE1  D3048004           [453] getupval   19  9      
7FE5  62448001           [454] call       17  3   1  
7FE9  6484D500           [455] self       17  1   342  ; -717859730
7FED  62840001           [456] call       17  2   2  
7FF1  86040009           [457] loadnil    18  18     
7FF5  58040000           [458] test       17      0    ; to [460] if true
7FF9  1A800080           [459] jmp        3            ; to [463]
7FFD  E4C4D500           [460] self       19  1   343  ; -523646496
8001  E2840001           [461] call       19  2   2  
8005  92048009           [462] move       18  19     
8009  DD040200           [463] getglobal  19  8        ; 1074689893
800D  12058000           [464] move       20  1      
8011  E2840001           [465] call       19  2   2  
8015  D8440000           [466] test       19      1    ; to [468] if false
8019  1A400280           [467] jmp        10           ; to [478]
801D  DD040200           [468] getglobal  19  8        ; 1074689893
8021  2405C500           [469] self       20  1   276  ; -564624675
8025  22050001           [470] call       20  2   0  
8029  E2840000           [471] call       19  0   2  
802D  D8440000           [472] test       19      1    ; to [474] if false
8031  1AC00080           [473] jmp        4            ; to [478]
8035  DD840F00           [474] getglobal  19  62       ; 538022378
8039  19451100           [475] loadk      20  69       ; 0
803D  E2440001           [476] call       19  2   1  
8041  1A00FC7F           [477] jmp        -15          ; to [463]
8045  DD040200           [478] getglobal  19  8        ; 1074689893
8049  12058000           [479] move       20  1      
804D  E2840001           [480] call       19  2   2  
8051  D8040000           [481] test       19      0    ; to [483] if true
8055  1A000080           [482] jmp        1            ; to [484]
8059  1E008000           [483] return     0   1      
805D  DD040200           [484] getglobal  19  8        ; 1074689893
8061  12050001           [485] move       20  2      
8065  E2840001           [486] call       19  2   2  
8069  D8440000           [487] test       19      1    ; to [489] if false
806D  1AC00180           [488] jmp        8            ; to [497]
8071  58040000           [489] test       17      0    ; to [491] if true
8075  1A400180           [490] jmp        6            ; to [497]
8079  58410000           [491] test       5       1    ; to [493] if false
807D  1AC00080           [492] jmp        4            ; to [497]
8081  E4045601           [493] self       19  2   344  ; 115701976
8085  E2440001           [494] call       19  2   1  
8089  E4444F01           [495] self       19  2   317  ; -832323870
808D  E2440001           [496] call       19  2   1  
8091  58010000           [497] test       5       0    ; to [499] if true
8095  1A000380           [498] jmp        13           ; to [512]
8099  E444D600           [499] self       19  1   345  ; 2056776437
809D  5D851600           [500] getglobal  21  90       ; powerSuitCollapsedAnim
80A1  97050000           [501] loadbool   22  0   0    ; false
80A5  DD450400           [502] getglobal  23  17       ; Engine
80A9  CEC5D60B           [503] gettable   23  23  347  ; "ATMM_PHYSICS_DRIVEN"
80AD  1D460400           [504] getglobal  24  17       ; Engine
80B1  0E06570C           [505] gettable   24  24  348  ; "PRT_FREEZE"
80B5  57068000           [506] loadbool   25  1   0    ; true
80B9  E2448003           [507] call       19  7   1  
80BD  E444D700           [508] self       19  1   349  ; -2113194289
80C1  57058000           [509] loadbool   21  1   0    ; true
80C5  E2448001           [510] call       19  3   1  
80C9  1A400280           [511] jmp        10           ; to [522]
80CD  DD040200           [512] getglobal  19  8        ; 1074689893
80D1  12050001           [513] move       20  2      
80D5  E2840001           [514] call       19  2   2  
80D9  D8440000           [515] test       19      1    ; to [517] if false
80DD  1A000180           [516] jmp        5            ; to [522]
80E1  58410000           [517] test       5       1    ; to [519] if false
80E5  1A800080           [518] jmp        3            ; to [522]
80E9  E4445701           [519] self       19  2   349  ; -2113194289
80ED  57050000           [520] loadbool   21  0   0    ; false
80F1  E2448001           [521] call       19  3   1  
80F5  DD040200           [522] getglobal  19  8        ; 1074689893
80F9  12050001           [523] move       20  2      
80FD  E2840001           [524] call       19  2   2  
8101  D8040000           [525] test       19      0    ; to [527] if true
8105  1AC00E80           [526] jmp        60           ; to [587]
8109  58040000           [527] test       17      0    ; to [529] if true
810D  1A400E80           [528] jmp        58           ; to [587]
8111  DD040000           [529] getglobal  19  0        ; gRegion
8115  E484D709           [530] self       19  19  350  ; 925677844
8119  E2840001           [531] call       19  2   2  
811D  1D050200           [532] getglobal  20  8        ; 1074689893
8121  52058009           [533] move       21  19     
8125  22850001           [534] call       20  2   2  
8129  18050000           [535] test       20      0    ; to [537] if true
812D  1AC00180           [536] jmp        8            ; to [545]
8131  1D050000           [537] getglobal  20  0        ; gRegion
8135  2485570A           [538] self       20  20  350  ; 925677844
8139  22850001           [539] call       20  2   2  
813D  D204000A           [540] move       19  20     
8141  1D850F00           [541] getglobal  20  62       ; 538022378
8145  59451100           [542] loadk      21  69       ; 0
8149  22450001           [543] call       20  2   1  
814D  1A80FC7F           [544] jmp        -13          ; to [532]
8151  24C5D709           [545] self       20  19  351  ; -1888201767
8155  22850001           [546] call       20  2   2  
8159  9200000A           [547] move       2   20     
815D  1D050200           [548] getglobal  20  8        ; 1074689893
8161  52050001           [549] move       21  2      
8165  22850001           [550] call       20  2   2  
8169  18050000           [551] test       20      0    ; to [553] if true
816D  1A000380           [552] jmp        13           ; to [566]
8171  1D050200           [553] getglobal  20  8        ; 1074689893
8175  52058009           [554] move       21  19     
8179  22850001           [555] call       20  2   2  
817D  18050000           [556] test       20      0    ; to [558] if true
8181  1A000080           [557] jmp        1            ; to [559]
8185  1E008000           [558] return     0   1      
8189  24C5D709           [559] self       20  19  351  ; -1888201767
818D  22850001           [560] call       20  2   2  
8191  9200000A           [561] move       2   20     
8195  1D850F00           [562] getglobal  20  62       ; 538022378
8199  59451100           [563] loadk      21  69       ; 0
819D  22450001           [564] call       20  2   1  
81A1  1A40FB7F           [565] jmp        -18          ; to [548]
81A5  1D050200           [566] getglobal  20  8        ; 1074689893
81A9  52050001           [567] move       21  2      
81AD  22850001           [568] call       20  2   2  
81B1  18450000           [569] test       20      1    ; to [571] if false
81B5  1AC00180           [570] jmp        8            ; to [579]
81B9  24454801           [571] self       20  2   289  ; -1201586349
81BD  22850001           [572] call       20  2   2  
81C1  18450000           [573] test       20      1    ; to [575] if false
81C5  1AC00080           [574] jmp        4            ; to [579]
81C9  1D850F00           [575] getglobal  20  62       ; 538022378
81CD  59451100           [576] loadk      21  69       ; 0
81D1  22450001           [577] call       20  2   1  
81D5  1A80FC7F           [578] jmp        -13          ; to [566]
81D9  1D050200           [579] getglobal  20  8        ; 1074689893
81DD  52050001           [580] move       21  2      
81E1  22850001           [581] call       20  2   2  
81E5  18450000           [582] test       20      1    ; to [584] if false
81E9  1AC00980           [583] jmp        40           ; to [624]
81ED  24055801           [584] self       20  2   352  ; -252114176
81F1  22450001           [585] call       20  2   1  
81F5  1A000980           [586] jmp        37           ; to [624]
81F9  1D050200           [587] getglobal  20  8        ; 1074689893
81FD  52050001           [588] move       21  2      
8201  22850001           [589] call       20  2   2  
8205  18450000           [590] test       20      1    ; to [592] if false
8209  1AC00780           [591] jmp        32           ; to [624]
820D  58410000           [592] test       5       1    ; to [594] if false
8211  1A400780           [593] jmp        30           ; to [624]
8215  1D050200           [594] getglobal  20  8        ; 1074689893
8219  52050001           [595] move       21  2      
821D  22850001           [596] call       20  2   2  
8221  18450000           [597] test       20      1    ; to [599] if false
8225  1A400280           [598] jmp        10           ; to [609]
8229  1D050200           [599] getglobal  20  8        ; 1074689893
822D  64054501           [600] self       21  2   276  ; -564624675
8231  62050001           [601] call       21  2   0  
8235  22850000           [602] call       20  0   2  
8239  18050000           [603] test       20      0    ; to [605] if true
823D  1AC00080           [604] jmp        4            ; to [609]
8241  1D850F00           [605] getglobal  20  62       ; 538022378
8245  59451100           [606] loadk      21  69       ; 0
8249  22450001           [607] call       20  2   1  
824D  1A00FC7F           [608] jmp        -15          ; to [594]
8251  1D050200           [609] getglobal  20  8        ; 1074689893
8255  52050001           [610] move       21  2      
8259  22850001           [611] call       20  2   2  
825D  18450000           [612] test       20      1    ; to [614] if false
8261  1A400280           [613] jmp        10           ; to [624]
8265  24455801           [614] self       20  2   353  ; 1637313982
8269  22850001           [615] call       20  2   2  
826D  18050000           [616] test       20      0    ; to [618] if true
8271  1A400180           [617] jmp        6            ; to [624]
8275  24454F01           [618] self       20  2   317  ; -832323870
8279  22450001           [619] call       20  2   1  
827D  1D850F00           [620] getglobal  20  62       ; 538022378
8281  59451100           [621] loadk      21  69       ; 0
8285  22450001           [622] call       20  2   1  
8289  1A00FC7F           [623] jmp        -15          ; to [609]
828D  1D050200           [624] getglobal  20  8        ; 1074689893
8291  52058000           [625] move       21  1      
8295  22850001           [626] call       20  2   2  
8299  18050000           [627] test       20      0    ; to [629] if true
829D  1A000080           [628] jmp        1            ; to [630]
82A1  1E008000           [629] return     0   1      
82A5  1D050200           [630] getglobal  20  8        ; 1074689893
82A9  52050001           [631] move       21  2      
82AD  22850001           [632] call       20  2   2  
82B1  18450000           [633] test       20      1    ; to [635] if false
82B5  1A001280           [634] jmp        73           ; to [708]
82B9  58040000           [635] test       17      0    ; to [637] if true
82BD  1A801180           [636] jmp        71           ; to [708]
82C1  13050005           [637] getupval   20  10     
82C5  5D851800           [638] getglobal  21  98       ; 562846818
82C9  92050009           [639] move       22  18     
82CD  62850001           [640] call       21  2   2  
82D1  1C45050A           [641] div        20  20  21 
fail op	21
82D5  150085A5           [642] concat     0   331 20 
82D9  1A400180           [643] jmp        6            ; to [650]
82DD  5DC51800           [644] getglobal  21  99       ; math
82E1  4E05D90A           [645] gettable   21  21  356  ; 1710846250
82E5  93058005           [646] getupval   22  11     
82E9  D205000A           [647] move       23  20     
82ED  62858001           [648] call       21  3   2  
82F1  84440509           [649] mul        18  18  21 
82F5  5D050200           [650] getglobal  21  8        ; 1074689893
82F9  92050001           [651] move       22  2      
82FD  62850001           [652] call       21  2   2  
8301  58450000           [653] test       21      1    ; to [655] if false
8305  1AC00180           [654] jmp        8            ; to [663]
8309  64454801           [655] self       21  2   289  ; -1201586349
830D  62850001           [656] call       21  2   2  
8311  58450000           [657] test       21      1    ; to [659] if false
8315  1AC00080           [658] jmp        4            ; to [663]
8319  5D850F00           [659] getglobal  21  62       ; 538022378
831D  99451100           [660] loadk      22  69       ; 0
8321  62450001           [661] call       21  2   1  
8325  1A80FC7F           [662] jmp        -13          ; to [650]
8329  5D050200           [663] getglobal  21  8        ; 1074689893
832D  92050001           [664] move       22  2      
8331  62850001           [665] call       21  2   2  
8335  58050000           [666] test       21      0    ; to [668] if true
8339  1A000080           [667] jmp        1            ; to [669]
833D  1E008000           [668] return     0   1      
8341  64455901           [669] self       21  2   357  ; 1798224701
8345  D2050009           [670] move       23  18     
8349  62458001           [671] call       21  3   1  
834D  6445D900           [672] self       21  1   357  ; 1798224701
8351  DD851900           [673] getglobal  23  102      ; 572299008
8355  E2058000           [674] call       23  1   0  
8359  62450000           [675] call       21  0   1  
835D  D8000000           [676] test       3       0    ; to [678] if true
8361  1A800280           [677] jmp        11           ; to [689]
8365  5D850F00           [678] getglobal  21  62       ; 538022378
8369  99451100           [679] loadk      22  69       ; 0
836D  62450001           [680] call       21  2   1  
8371  5D050000           [681] getglobal  21  0        ; gRegion
8375  6485D70A           [682] self       21  21  350  ; 925677844
8379  62850001           [683] call       21  2   2  
837D  93050006           [684] getupval   22  12     
8381  D205800A           [685] move       23  21     
8385  12068000           [686] move       24  1      
8389  52060001           [687] move       25  2      
838D  A2450002           [688] call       22  4   1  
8391  9D050200           [689] getglobal  22  8        ; 1074689893
8395  D2050001           [690] move       23  2      
8399  A2850001           [691] call       22  2   2  
839D  98450000           [692] test       22      1    ; to [694] if false
83A1  1A400380           [693] jmp        14           ; to [708]
83A5  A4C55901           [694] self       22  2   359  ; 1998801764
83A9  2406DA00           [695] self       24  1   360  ; 2129303884
83AD  22060001           [696] call       24  2   0  
83B1  A2450000           [697] call       22  0   1  
83B5  A4455A01           [698] self       22  2   361  ; 1525877273
83B9  A2850001           [699] call       22  2   2  
83BD  DD050200           [700] getglobal  23  8        ; 1074689893
83C1  1206000B           [701] move       24  22     
83C5  E2850001           [702] call       23  2   2  
83C9  D8450000           [703] test       23      1    ; to [705] if false
83CD  1A800080           [704] jmp        3            ; to [708]
83D1  E4855A0B           [705] self       23  22  362  ; 1262778870
83D5  E2850001           [706] call       23  2   2  
83D9  CC45D1B5           [707] settable   23  363 325  ; "fade" 0
83DD  1D060200           [708] getglobal  24  8        ; 1074689893
83E1  52060001           [709] move       25  2      
83E5  22860001           [710] call       24  2   2  
83E9  18460000           [711] test       24      1    ; to [713] if false
83ED  1A000380           [712] jmp        13           ; to [726]
83F1  24865501           [713] self       24  2   342  ; -717859730
83F5  22860001           [714] call       24  2   2  
83F9  18060000           [715] test       24      0    ; to [717] if true
83FD  1A000280           [716] jmp        9            ; to [726]
8401  24064A01           [717] self       24  2   296  ; 1408791382
8405  22860001           [718] call       24  2   2  
8409  24065B0C           [719] self       24  24  364  ; 1958326506
840D  22460001           [720] call       24  2   1  
8411  58410000           [721] test       5       1    ; to [723] if false
8415  1A800080           [722] jmp        3            ; to [726]
8419  24C64901           [723] self       24  2   295  ; 719211773
841D  97060000           [724] loadbool   26  0   0    ; false
8421  22468001           [725] call       24  3   1  
8425  1D060200           [726] getglobal  24  8        ; 1074689893
8429  52068000           [727] move       25  1      
842D  22860001           [728] call       24  2   2  
8431  18060000           [729] test       24      0    ; to [731] if true
8435  1A000080           [730] jmp        1            ; to [732]
8439  1E008000           [731] return     0   1      
843D  1D060000           [732] getglobal  24  0        ; gRegion
8441  2446400C           [733] self       24  24  257  ; -1520831144
8445  22860001           [734] call       24  2   2  
8449  18060000           [735] test       24      0    ; to [737] if true
844D  1A800480           [736] jmp        19           ; to [756]
8451  58010000           [737] test       5       0    ; to [739] if true
8455  1A000280           [738] jmp        9            ; to [748]
8459  1D060200           [739] getglobal  24  8        ; 1074689893
845D  52068000           [740] move       25  1      
8461  22860001           [741] call       24  2   2  
8465  18460000           [742] test       24      1    ; to [744] if false
8469  1AC00280           [743] jmp        12           ; to [756]
846D  2446DB00           [744] self       24  1   365  ; 840728497
8471  97068000           [745] loadbool   26  1   0    ; true
8475  22468001           [746] call       24  3   1  
8479  1AC00180           [747] jmp        8            ; to [756]
847D  1D060200           [748] getglobal  24  8        ; 1074689893
8481  52060001           [749] move       25  2      
8485  22860001           [750] call       24  2   2  
8489  18460000           [751] test       24      1    ; to [753] if false
848D  1A800080           [752] jmp        3            ; to [756]
8491  24465B01           [753] self       24  2   365  ; 840728497
8495  97060000           [754] loadbool   26  0   0    ; false
8499  22468001           [755] call       24  3   1  
849D  2486D500           [756] self       24  1   342  ; -717859730
84A1  22860001           [757] call       24  2   2  
84A5  18060000           [758] test       24      0    ; to [760] if true
84A9  1A400280           [759] jmp        10           ; to [770]
84AD  58010000           [760] test       5       0    ; to [762] if true
84B1  1AC00180           [761] jmp        8            ; to [770]
84B5  2406C700           [762] self       24  1   284  ; 1839670529
84B9  22860001           [763] call       24  2   2  
84BD  4E865B0C           [764] gettable   25  24  366  ; "y"
84C1  43C6CF0C           [765] add        25  25  319  ; 0
84C5  0C4606B7           [766] settable   24  366 25   ; "y"
84C9  64C6DB00           [767] self       25  1   367  ; 970454089
84CD  D206000C           [768] move       27  24     
84D1  62468001           [769] call       25  3   1  
84D5  5D060200           [770] getglobal  25  8        ; 1074689893
84D9  92060003           [771] move       26  6      
84DD  62860001           [772] call       25  2   2  
84E1  58460000           [773] test       25      1    ; to [775] if false
84E5  1A000380           [774] jmp        13           ; to [788]
84E9  64065C03           [775] self       25  6   368  ; -2135866365
84ED  62860001           [776] call       25  2   2  
84F1  9D060200           [777] getglobal  26  8        ; 1074689893
84F5  D206800C           [778] move       27  25     
84F9  A2860001           [779] call       26  2   2  
84FD  98460000           [780] test       26      1    ; to [782] if false
8501  1A400180           [781] jmp        6            ; to [788]
fail op	35
8505  6340800C           [782] close      1  
8509  1AC00080           [783] jmp        4            ; to [788]
850D  93068006           [784] getupval   26  13     
8511  8E465C0D           [785] gettable   26  26  369  ; -1588889823
8515  D206800C           [786] move       27  25     
8519  A2460001           [787] call       26  2   1  
851D  1E008000           [788] return     0   1      
                         * constants:
8521  72                 sizek (114)
8522  04                 const type 4
8523  08                 string size (8)
8524  67526567696F6E00   "gRegion\0"
                         const [0]: "gRegion"
852C  01                 const type 3
852D  58F559A5           const [1]: (-1520831144)
8531  01                 const type 3
8532  BBD06CA5           const [2]: (-1519595333)
8536  01                 const type 3
8537  21B2948A           const [3]: (-1969966559)
853B  04                 const type 4
853C  03                 string size (3)
853D  5F5400             "_T\0"
                         const [4]: "_T"
8540  04                 const type 4
8541  1A                 string size (26)
8542  46616B655472616E+  "FakeTran"
854A  73666572656E6365+  "sference"
8552  4163746976617465+  "Activate"
855A  6400               "d\0"
                         const [5]: "FakeTransferenceActivated"
855C  01                 const type 3
855D  00000000           const [6]: (0)
8561  01                 const type 3
8562  01000000           const [7]: (1)
8566  01                 const type 3
8567  65770E40           const [8]: (1074689893)
856B  01                 const type 3
856C  6B25B193           const [9]: (-1817107093)
8570  04                 const type 4
8571  34                 string size (52)
8572  41626F7274696E67+  "Aborting"
857A  207472616E736665+  " transfe"
8582  72656E63652C2069+  "rence, i"
858A  6E7374696761746F+  "nstigato"
8592  7220706F77657273+  "r powers"
859A  756974206973206E+  "uit is n"
85A2  756C6C00           "ull\0"
                         const [10]: "Aborting transference, instigator powersuit is null"
85A6  04                 const type 4
85A7  1D                 string size (29)
85A8  437573746F6D5472+  "CustomTr"
85B0  616E73666572656E+  "ansferen"
85B8  6365416374697661+  "ceActiva"
85C0  74696F6E00         "tion\0"
                         const [11]: "CustomTransferenceActivation"
85C5  01                 const type 3
85C6  C7CEB2B0           const [12]: (-1330458937)
85CA  01                 const type 3
85CB  6E3ADCBB           const [13]: (-1143195026)
85CF  01                 const type 3
85D0  8A029BBC           const [14]: (-1130691958)
85D4  01                 const type 3
85D5  B99AAF51           const [15]: (1370462905)
85D9  01                 const type 3
85DA  650634F3           const [16]: (-214694299)
85DE  04                 const type 4
85DF  07                 string size (7)
85E0  456E67696E6500     "Engine\0"
                         const [17]: "Engine"
85E7  04                 const type 4
85E8  0C                 string size (12)
85E9  504D5F414952424F+  "PM_AIRBO"
85F1  524E4500           "RNE\0"
                         const [18]: "PM_AIRBORNE"
85F5  01                 const type 3
85F6  BB9C5243           const [19]: (1129487547)
85FA  01                 const type 3
85FB  DD8258DE           const [20]: (-564624675)
85FF  01                 const type 3
8600  F8B4D786           const [21]: (-2032683784)
8604  01                 const type 3
8605  4C27D287           const [22]: (-2016270516)
8609  04                 const type 4
860A  0B                 string size (11)
860B  6747616D6552756C+  "gGameRul"
8613  657300             "es\0"
                         const [23]: "gGameRules"
8616  01                 const type 3
8617  D48E598B           const [24]: (-1957065004)
861B  04                 const type 4
861C  1E                 string size (30)
861D  674C6F7475735068+  "gLotusPh"
8625  6F746F426F6F7468+  "otoBooth"
862D  47616D6552756C65+  "GameRule"
8635  735479706500       "sType\0"
                         const [25]: "gLotusPhotoBoothGameRulesType"
863B  04                 const type 4
863C  17                 string size (23)
863D  674C6F7475734875+  "gLotusHu"
8645  6247616D6552756C+  "bGameRul"
864D  65735479706500     "esType\0"
                         const [26]: "gLotusHubGameRulesType"
8654  01                 const type 3
8655  EF8D137C           const [27]: (2081656303)
8659  01                 const type 3
865A  0125A76D           const [28]: (1839670529)
865E  01                 const type 3
865F  61AF33EA           const [29]: (-365711519)
8663  03                 const type 3
8664  00000040           const [30]: (0)
8668  01                 const type 3
8669  28C4DC84           const [31]: (-2065906648)
866D  04                 const type 4
866E  16                 string size (22)
866F  55495F4D4F44455F+  "UI_MODE_"
8677  494E5F5350414345+  "IN_SPACE"
867F  5F5348495000       "_SHIP\0"
                         const [32]: "UI_MODE_IN_SPACE_SHIP"
8685  01                 const type 3
8686  533F61B8           const [33]: (-1201586349)
868A  01                 const type 3
868B  FD6099B6           const [34]: (-1231462147)
868F  01                 const type 3
8690  AE9A701B           const [35]: (460364462)
8694  01                 const type 3
8695  E98FE493           const [36]: (-1813737495)
8699  01                 const type 3
869A  00246A7D           const [37]: (2104108032)
869E  01                 const type 3
869F  D78686EB           const [38]: (-343505193)
86A3  01                 const type 3
86A4  FD4CDE2A           const [39]: (719211773)
86A8  01                 const type 3
86A9  5673F853           const [40]: (1408791382)
86AD  01                 const type 3
86AE  AD2179B1           const [41]: (-1317461587)
86B2  01                 const type 3
86B3  4D0FE745           const [42]: (1172770637)
86B7  01                 const type 3
86B8  85100EE5           const [43]: (-452063099)
86BC  04                 const type 4
86BD  07                 string size (7)
86BE  504D5F41494D00     "PM_AIM\0"
                         const [44]: "PM_AIM"
86C5  04                 const type 4
86C6  11                 string size (17)
86C7  6754656E6E6F4176+  "gTennoAv"
86CF  6174617254797065+  "atarType"
86D7  00                 "\0"
                         const [45]: "gTennoAvatarType"
86D8  01                 const type 3
86D9  2124F53E           const [46]: (1056252961)
86DD  04                 const type 4
86DE  19                 string size (25)
86DF  49734F7065726174+  "IsOperat"
86E7  6F724F6E53686970+  "orOnShip"
86EF  5475746F7269616C+  "Tutorial"
86F7  00                 "\0"
                         const [47]: "IsOperatorOnShipTutorial"
86F8  01                 const type 3
86F9  E29483BC           const [48]: (-1132227358)
86FD  01                 const type 3
86FE  1FD0B58D           const [49]: (-1917464545)
8702  01                 const type 3
8703  196EF617           const [50]: (402026009)
8707  01                 const type 3
8708  92462224           const [51]: (606226066)
870C  01                 const type 3
870D  3A4D6C4B           const [52]: (1265388858)
8711  04                 const type 4
8712  15                 string size (21)
8713  706F7765724D656E+  "powerMen"
871B  75496E7075744669+  "uInputFi"
8723  6C74657200         "lter\0"
                         const [53]: "powerMenuInputFilter"
8728  01                 const type 3
8729  F7FD5243           const [54]: (1129512439)
872D  04                 const type 4
872E  14                 string size (20)
872F  626C6F636B696E67+  "blocking"
8737  496E70757446696C+  "InputFil"
873F  74657200           "ter\0"
                         const [55]: "blockingInputFilter"
8743  01                 const type 3
8744  F26E43AB           const [56]: (-1421644046)
8748  04                 const type 4
8749  1F                 string size (31)
874A  6F70657261746F72+  "operator"
8752  4465617468547261+  "DeathTra"
875A  6E73666572656E63+  "nsferenc"
8762  654F7574467800     "eOutFx\0"
                         const [57]: "operatorDeathTransferenceOutFx"
8769  04                 const type 4
876A  0D                 string size (13)
876B  454D5054595F5359+  "EMPTY_SY"
8773  4D424F4C00         "MBOL\0"
                         const [58]: "EMPTY_SYMBOL"
8778  01                 const type 3
8779  8B25396F           const [59]: (1866016139)
877D  04                 const type 4
877E  1D                 string size (29)
877F  7472616E73666572+  "transfer"
8787  656E63654F757450+  "enceOutP"
878F  726F6A6563746F72+  "rojector"
8797  5479706500         "Type\0"
                         const [60]: "transferenceOutProjectorType"
879C  01                 const type 3
879D  E2BE63CE           const [61]: (-832323870)
87A1  01                 const type 3
87A2  EA911120           const [62]: (538022378)
87A6  03                 const type 3
87A7  0000C03F           const [63]: (0)
87AB  01                 const type 3
87AC  54218F8A           const [64]: (-1970331308)
87B0  04                 const type 4
87B1  1A                 string size (26)
87B2  6F70657261746F72+  "operator"
87BA  5472616E73666572+  "Transfer"
87C2  656E63654F757446+  "enceOutF"
87CA  7800               "x\0"
                         const [65]: "operatorTransferenceOutFx"
87CC  04                 const type 4
87CD  19                 string size (25)
87CE  6F70657261746F72+  "operator"
87D6  5472616E73666572+  "Transfer"
87DE  656E6365496E4678+  "enceInFx"
87E6  00                 "\0"
                         const [66]: "operatorTransferenceInFx"
87E7  04                 const type 4
87E8  15                 string size (21)
87E9  7761726672616D65+  "warframe"
87F1  546F4F7065726174+  "ToOperat"
87F9  6F72467800         "orFx\0"
                         const [67]: "warframeToOperatorFx"
87FE  01                 const type 3
87FF  6B5810D6           const [68]: (-703571861)
8803  03                 const type 3
8804  00000000           const [69]: (0)
8808  01                 const type 3
8809  59AC7869           const [70]: (1769516121)
880D  01                 const type 3
880E  516B3E4C           const [71]: (1279159121)
8812  04                 const type 4
8813  17                 string size (23)
8814  69734F7065726174+  "isOperat"
881C  6F725472616E7366+  "orTransf"
8824  657272696E6700     "erring\0"
                         const [72]: "isOperatorTransferring"
882B  00                 const type 0
                         const [73]: nil
882C  01                 const type 3
882D  06ACF8C3           const [74]: (-1007113210)
8831  03                 const type 3
8832  0000803F           const [75]: (0)
8836  04                 const type 4
8837  24                 string size (36)
8838  7761726672616D65+  "warframe"
8840  5472616E73666572+  "Transfer"
8848  656E636544616D61+  "enceDama"
8850  6765526564756374+  "geReduct"
8858  696F6E00           "ion\0"
                         const [76]: "warframeTransferenceDamageReduction"
885C  01                 const type 3
885D  E2640C8D           const [77]: (-1928567582)
8861  03                 const type 3
8862  0000A040           const [78]: (0)
8866  01                 const type 3
8867  27003F0B           const [79]: (188678183)
886B  01                 const type 3
886C  9B06F6A3           const [80]: (-1544157541)
8870  01                 const type 3
8871  F0CF3730           const [81]: (808964080)
8875  04                 const type 4
8876  07                 string size (7)
8877  44545F414E5900     "DT_ANY\0"
                         const [82]: "DT_ANY"
887E  04                 const type 4
887F  09                 string size (9)
8880  414E595F50415254+  "ANY_PART"
8888  00                 "\0"
                         const [83]: "ANY_PART"
8889  04                 const type 4
888A  09                 string size (9)
888B  4448545F4E4F4E45+  "DHT_NONE"
8893  00                 "\0"
                         const [84]: "DHT_NONE"
8894  01                 const type 3
8895  CA69C60B           const [85]: (197552586)
8899  01                 const type 3
889A  6E5436D5           const [86]: (-717859730)
889E  01                 const type 3
889F  E0C9C9E0           const [87]: (-523646496)
88A3  01                 const type 3
88A4  D878E506           const [88]: (115701976)
88A8  01                 const type 3
88A9  F5EA977A           const [89]: (2056776437)
88AD  04                 const type 4
88AE  17                 string size (23)
88AF  706F776572537569+  "powerSui"
88B7  74436F6C6C617073+  "tCollaps"
88BF  6564416E696D00     "edAnim\0"
                         const [90]: "powerSuitCollapsedAnim"
88C6  04                 const type 4
88C7  14                 string size (20)
88C8  41544D4D5F504859+  "ATMM_PHY"
88D0  534943535F445249+  "SICS_DRI"
88D8  56454E00           "VEN\0"
                         const [91]: "ATMM_PHYSICS_DRIVEN"
88DC  04                 const type 4
88DD  0B                 string size (11)
88DE  5052545F46524545+  "PRT_FREE"
88E6  5A4500             "ZE\0"
                         const [92]: "PRT_FREEZE"
88E9  01                 const type 3
88EA  CF360B82           const [93]: (-2113194289)
88EE  01                 const type 3
88EF  14B92C37           const [94]: (925677844)
88F3  01                 const type 3
88F4  D953748F           const [95]: (-1888201767)
88F8  01                 const type 3
88F9  000BF9F0           const [96]: (-252114176)
88FD  01                 const type 3
88FE  BE6D9761           const [97]: (1637313982)
8902  01                 const type 3
8903  625C8C21           const [98]: (562846818)
8907  04                 const type 4
8908  05                 string size (5)
8909  6D61746800         "math\0"
                         const [99]: "math"
890E  01                 const type 3
890F  2A71F965           const [100]: (1710846250)
8913  01                 const type 3
8914  3DBB2E6B           const [101]: (1798224701)
8918  01                 const type 3
8919  00971C22           const [102]: (572299008)
891D  01                 const type 3
891E  644B2377           const [103]: (1998801764)
8922  01                 const type 3
8923  4C99EA7E           const [104]: (2129303884)
8927  01                 const type 3
8928  190AF35A           const [105]: (1525877273)
892C  01                 const type 3
892D  F679444B           const [106]: (1262778870)
8931  04                 const type 4
8932  05                 string size (5)
8933  6661646500         "fade\0"
                         const [107]: "fade"
8938  01                 const type 3
8939  EAB0B974           const [108]: (1958326506)
893D  01                 const type 3
893E  B17F1C32           const [109]: (840728497)
8942  04                 const type 4
8943  02                 string size (2)
8944  7900               "y\0"
                         const [110]: "y"
8946  01                 const type 3
8947  49F4D739           const [111]: (970454089)
894B  01                 const type 3
894C  0344B180           const [112]: (-2135866365)
8950  01                 const type 3
8951  21774BA1           const [113]: (-1588889823)
                         * functions:
8955  00                 sizep (0)
                         * lines:
8957  06                 sizelineinfo (788)
                         [pc] (line)
8958  AC                 [001] (-84)
8959  04                 [002] (-84)
895A  00                 [003] (-84)
895B  00                 [004] (-84)
895C  AC                 [005] (-84)
895D  04                 [006] (-84)
895E  00                 [007] (-84)
895F  00                 [008] (-84)
8960  AC                 [009] (-84)
8961  04                 [010] (-83)
8962  00                 [011] (-83)
8963  00                 [012] (-82)
8964  AC                 [013] (-79)
8965  04                 [014] (-79)
8966  00                 [015] (-79)
8967  00                 [016] (-79)
8968  AC                 [017] (-78)
8969  04                 [018] (-78)
896A  00                 [019] (-77)
896B  00                 [020] (-74)
896C  AC                 [021] (-74)
896D  04                 [022] (-74)
896E  00                 [023] (-74)
896F  00                 [024] (-74)
8970  AC                 [025] (-73)
8971  04                 [026] (-73)
8972  00                 [027] (-73)
8973  00                 [028] (-72)
8974  AC                 [029] (-69)
8975  04                 [030] (-69)
8976  00                 [031] (-69)
8977  00                 [032] (-69)
8978  AC                 [033] (-69)
8979  04                 [034] (-69)
897A  00                 [035] (-68)
897B  00                 [036] (-68)
897C  AD                 [037] (-68)
897D  04                 [038] (-68)
897E  00                 [039] (-68)
897F  00                 [040] (-68)
8980  AD                 [041] (-68)
8981  04                 [042] (-67)
8982  00                 [043] (-67)
8983  00                 [044] (-66)
8984  AE                 [045] (-62)
8985  04                 [046] (-62)
8986  00                 [047] (-62)
8987  00                 [048] (-61)
8988  B1                 [049] (-61)
8989  04                 [050] (-61)
898A  00                 [051] (-61)
898B  00                 [052] (-61)
898C  B1                 [053] (-60)
898D  04                 [054] (-60)
898E  00                 [055] (-60)
898F  00                 [056] (-57)
8990  B1                 [057] (-57)
8991  04                 [058] (-55)
8992  00                 [059] (-55)
8993  00                 [060] (-55)
8994  B1                 [061] (-55)
8995  04                 [062] (-53)
8996  00                 [063] (-53)
8997  00                 [064] (-53)
8998  B2                 [065] (-53)
8999  04                 [066] (-53)
899A  00                 [067] (-53)
899B  00                 [068] (-53)
899C  B2                 [069] (-53)
899D  04                 [070] (-53)
899E  00                 [071] (-53)
899F  00                 [072] (-53)
89A0  B3                 [073] (-53)
89A1  04                 [074] (-53)
89A2  00                 [075] (-52)
89A3  00                 [076] (-52)
89A4  B6                 [077] (-52)
89A5  04                 [078] (-52)
89A6  00                 [079] (-52)
89A7  00                 [080] (-52)
89A8  B6                 [081] (-52)
89A9  04                 [082] (-52)
89AA  00                 [083] (-50)
89AB  00                 [084] (-50)
89AC  B6                 [085] (-50)
89AD  04                 [086] (-46)
89AE  00                 [087] (-46)
89AF  00                 [088] (-45)
89B0  B6                 [089] (-45)
89B1  04                 [090] (-45)
89B2  00                 [091] (-45)
89B3  00                 [092] (-45)
89B4  B6                 [093] (-43)
89B5  04                 [094] (-43)
89B6  00                 [095] (-43)
89B7  00                 [096] (-40)
89B8  B7                 [097] (-40)
89B9  04                 [098] (-40)
89BA  00                 [099] (-40)
89BB  00                 [100] (-40)
89BC  B7                 [101] (-39)
89BD  04                 [102] (-39)
89BE  00                 [103] (-39)
89BF  00                 [104] (-39)
89C0  B7                 [105] (-39)
89C1  04                 [106] (-39)
89C2  00                 [107] (-39)
89C3  00                 [108] (-39)
89C4  B8                 [109] (-39)
89C5  04                 [110] (-39)
89C6  00                 [111] (-39)
89C7  00                 [112] (-39)
89C8  BB                 [113] (-39)
89C9  04                 [114] (-39)
89CA  00                 [115] (-39)
89CB  00                 [116] (-39)
89CC  BB                 [117] (-39)
89CD  04                 [118] (-39)
89CE  00                 [119] (-39)
89CF  00                 [120] (-39)
89D0  BB                 [121] (-39)
89D1  04                 [122] (-39)
89D2  00                 [123] (-39)
89D3  00                 [124] (-39)
89D4  BB                 [125] (-39)
89D5  04                 [126] (-39)
89D6  00                 [127] (-39)
89D7  00                 [128] (-39)
89D8  BB                 [129] (-39)
89D9  04                 [130] (-38)
89DA  00                 [131] (-38)
89DB  00                 [132] (-38)
89DC  BB                 [133] (-38)
89DD  04                 [134] (-38)
89DE  00                 [135] (-38)
89DF  00                 [136] (-37)
89E0  BC                 [137] (-37)
89E1  04                 [138] (-37)
89E2  00                 [139] (-37)
89E3  00                 [140] (-37)
89E4  BC                 [141] (-37)
89E5  04                 [142] (-36)
89E6  00                 [143] (-36)
89E7  00                 [144] (-36)
89E8  BC                 [145] (-36)
89E9  04                 [146] (-36)
89EA  00                 [147] (-35)
89EB  00                 [148] (-30)
89EC  BC                 [149] (-30)
89ED  04                 [150] (-30)
89EE  00                 [151] (-30)
89EF  00                 [152] (-30)
89F0  BC                 [153] (-30)
89F1  04                 [154] (-30)
89F2  00                 [155] (-29)
89F3  00                 [156] (-29)
89F4  BC                 [157] (-29)
89F5  04                 [158] (-29)
89F6  00                 [159] (-28)
89F7  00                 [160] (-28)
89F8  BC                 [161] (-27)
89F9  04                 [162] (-27)
89FA  00                 [163] (-27)
89FB  00                 [164] (-26)
89FC  BD                 [165] (-26)
89FD  04                 [166] (-26)
89FE  00                 [167] (-26)
89FF  00                 [168] (-24)
8A00  BD                 [169] (-24)
8A01  04                 [170] (-24)
8A02  00                 [171] (-20)
8A03  00                 [172] (-20)
8A04  BE                 [173] (-19)
8A05  04                 [174] (-19)
8A06  00                 [175] (-19)
8A07  00                 [176] (-19)
8A08  C2                 [177] (-19)
8A09  04                 [178] (-18)
8A0A  00                 [179] (-18)
8A0B  00                 [180] (-15)
8A0C  C2                 [181] (-15)
8A0D  04                 [182] (-12)
8A0E  00                 [183] (-12)
8A0F  00                 [184] (-11)
8A10  C2                 [185] (-11)
8A11  04                 [186] (-11)
8A12  00                 [187] (-6)
8A13  00                 [188] (-6)
8A14  C3                 [189] (-6)
8A15  04                 [190] (-6)
8A16  00                 [191] (-5)
8A17  00                 [192] (-5)
8A18  C3                 [193] (-5)
8A19  04                 [194] (-5)
8A1A  00                 [195] (-4)
8A1B  00                 [196] (-4)
8A1C  C3                 [197] (-4)
8A1D  04                 [198] (-4)
8A1E  00                 [199] (-4)
8A1F  00                 [200] (-3)
8A20  C3                 [201] (-3)
8A21  04                 [202] (-3)
8A22  00                 [203] (-3)
8A23  00                 [204] (-3)
8A24  C3                 [205] (-3)
8A25  04                 [206] (-3)
8A26  00                 [207] (-2)
8A27  00                 [208] (-2)
8A28  C4                 [209] (-2)
8A29  04                 [210] (-1)
8A2A  00                 [211] (-1)
8A2B  00                 [212] (-1)
8A2C  C4                 [213] (-1)
8A2D  04                 [214] (0)
8A2E  00                 [215] (0)
8A2F  00                 [216] (0)
8A30  C4                 [217] (0)
8A31  04                 [218] (0)
8A32  00                 [219] (0)
8A33  00                 [220] (0)
8A34  C7                 [221] (0)
8A35  04                 [222] (0)
8A36  00                 [223] (0)
8A37  00                 [224] (0)
8A38  C7                 [225] (0)
8A39  04                 [226] (1)
8A3A  00                 [227] (1)
8A3B  00                 [228] (1)
8A3C  C9                 [229] (2)
8A3D  04                 [230] (2)
8A3E  00                 [231] (2)
8A3F  00                 [232] (6)
8A40  C9                 [233] (6)
8A41  04                 [234] (6)
8A42  00                 [235] (6)
8A43  00                 [236] (6)
8A44  C9                 [237] (7)
8A45  04                 [238] (7)
8A46  00                 [239] (7)
8A47  00                 [240] (7)
8A48  C9                 [241] (7)
8A49  04                 [242] (7)
8A4A  00                 [243] (7)
8A4B  00                 [244] (7)
8A4C  CB                 [245] (7)
8A4D  04                 [246] (7)
8A4E  00                 [247] (7)
8A4F  00                 [248] (7)
8A50  CB                 [249] (7)
8A51  04                 [250] (7)
8A52  00                 [251] (7)
8A53  00                 [252] (7)
8A54  CB                 [253] (7)
8A55  04                 [254] (8)
8A56  00                 [255] (8)
8A57  00                 [256] (8)
8A58  CB                 [257] (8)
8A59  04                 [258] (9)
8A5A  00                 [259] (9)
8A5B  00                 [260] (9)
8A5C  CB                 [261] (9)
8A5D  04                 [262] (11)
8A5E  00                 [263] (11)
8A5F  00                 [264] (12)
8A60  CB                 [265] (14)
8A61  04                 [266] (14)
8A62  00                 [267] (14)
8A63  00                 [268] (14)
8A64  CB                 [269] (14)
8A65  04                 [270] (14)
8A66  00                 [271] (15)
8A67  00                 [272] (16)
8A68  CB                 [273] (16)
8A69  04                 [274] (16)
8A6A  00                 [275] (16)
8A6B  00                 [276] (16)
8A6C  CB                 [277] (16)
8A6D  04                 [278] (16)
8A6E  00                 [279] (17)
8A6F  00                 [280] (17)
8A70  CB                 [281] (18)
8A71  04                 [282] (18)
8A72  00                 [283] (18)
8A73  00                 [284] (18)
8A74  CB                 [285] (19)
8A75  04                 [286] (19)
8A76  00                 [287] (19)
8A77  00                 [288] (20)
8A78  CB                 [289] (20)
8A79  04                 [290] (20)
8A7A  00                 [291] (21)
8A7B  00                 [292] (21)
8A7C  CB                 [293] (21)
8A7D  04                 [294] (22)
8A7E  00                 [295] (22)
8A7F  00                 [296] (23)
8A80  CC                 [297] (23)
8A81  04                 [298] (23)
8A82  00                 [299] (23)
8A83  00                 [300] (24)
8A84  CC                 [301] (24)
8A85  04                 [302] (24)
8A86  00                 [303] (24)
8A87  00                 [304] (24)
8A88  CC                 [305] (24)
8A89  04                 [306] (25)
8A8A  00                 [307] (25)
8A8B  00                 [308] (26)
8A8C  CC                 [309] (26)
8A8D  04                 [310] (26)
8A8E  00                 [311] (27)
8A8F  00                 [312] (27)
8A90  CC                 [313] (27)
8A91  04                 [314] (27)
8A92  00                 [315] (27)
8A93  00                 [316] (27)
8A94  CC                 [317] (27)
8A95  04                 [318] (29)
8A96  00                 [319] (29)
8A97  00                 [320] (29)
8A98  CC                 [321] (29)
8A99  04                 [322] (32)
8A9A  00                 [323] (32)
8A9B  00                 [324] (32)
8A9C  CC                 [325] (32)
8A9D  04                 [326] (32)
8A9E  00                 [327] (33)
8A9F  00                 [328] (33)
8AA0  CE                 [329] (33)
8AA1  04                 [330] (34)
8AA2  00                 [331] (36)
8AA3  00                 [332] (36)
8AA4  CE                 [333] (36)
8AA5  04                 [334] (36)
8AA6  00                 [335] (36)
8AA7  00                 [336] (36)
8AA8  CE                 [337] (36)
8AA9  04                 [338] (37)
8AAA  00                 [339] (37)
8AAB  00                 [340] (37)
8AAC  D2                 [341] (38)
8AAD  04                 [342] (38)
8AAE  00                 [343] (38)
8AAF  00                 [344] (39)
8AB0  D2                 [345] (39)
8AB1  04                 [346] (39)
8AB2  00                 [347] (40)
8AB3  00                 [348] (40)
8AB4  D3                 [349] (40)
8AB5  04                 [350] (40)
8AB6  00                 [351] (41)
8AB7  00                 [352] (41)
8AB8  D3                 [353] (41)
8AB9  04                 [354] (41)
8ABA  00                 [355] (42)
8ABB  00                 [356] (42)
8ABC  D3                 [357] (42)
8ABD  04                 [358] (45)
8ABE  00                 [359] (45)
8ABF  00                 [360] (45)
8AC0  D3                 [361] (45)
8AC1  04                 [362] (45)
8AC2  00                 [363] (46)
8AC3  00                 [364] (46)
8AC4  D3                 [365] (46)
8AC5  04                 [366] (46)
8AC6  00                 [367] (47)
8AC7  00                 [368] (47)
8AC8  D5                 [369] (47)
8AC9  04                 [370] (47)
8ACA  00                 [371] (47)
8ACB  00                 [372] (48)
8ACC  D5                 [373] (48)
8ACD  04                 [374] (52)
8ACE  00                 [375] (52)
8ACF  00                 [376] (52)
8AD0  D5                 [377] (52)
8AD1  04                 [378] (52)
8AD2  00                 [379] (52)
8AD3  00                 [380] (52)
8AD4  D8                 [381] (52)
8AD5  04                 [382] (52)
8AD6  00                 [383] (52)
8AD7  00                 [384] (53)
8AD8  D8                 [385] (53)
8AD9  04                 [386] (56)
8ADA  00                 [387] (56)
8ADB  00                 [388] (56)
8ADC  D8                 [389] (56)
8ADD  04                 [390] (56)
8ADE  00                 [391] (57)
8ADF  00                 [392] (57)
8AE0  D8                 [393] (57)
8AE1  04                 [394] (57)
8AE2  00                 [395] (57)
8AE3  00                 [396] (59)
8AE4  D8                 [397] (59)
8AE5  04                 [398] (59)
8AE6  00                 [399] (59)
8AE7  00                 [400] (59)
8AE8  D9                 [401] (60)
8AE9  04                 [402] (60)
8AEA  00                 [403] (60)
8AEB  00                 [404] (60)
8AEC  D9                 [405] (60)
8AED  04                 [406] (61)
8AEE  00                 [407] (62)
8AEF  00                 [408] (62)
8AF0  D9                 [409] (62)
8AF1  04                 [410] (62)
8AF2  00                 [411] (63)
8AF3  00                 [412] (63)
8AF4  D9                 [413] (65)
8AF5  04                 [414] (66)
8AF6  00                 [415] (66)
8AF7  00                 [416] (67)
8AF8  D9                 [417] (67)
8AF9  04                 [418] (67)
8AFA  00                 [419] (67)
8AFB  00                 [420] (68)
8AFC  D9                 [421] (68)
8AFD  04                 [422] (68)
8AFE  00                 [423] (68)
8AFF  00                 [424] (68)
8B00  D9                 [425] (68)
8B01  04                 [426] (68)
8B02  00                 [427] (69)
8B03  00                 [428] (70)
8B04  D9                 [429] (67)
8B05  04                 [430] (74)
8B06  00                 [431] (74)
8B07  00                 [432] (75)
8B08  D9                 [433] (78)
8B09  04                 [434] (78)
8B0A  00                 [435] (78)
8B0B  00                 [436] (78)
8B0C  D9                 [437] (78)
8B0D  04                 [438] (78)
8B0E  00                 [439] (78)
8B0F  00                 [440] (78)
8B10  D9                 [441] (78)
8B11  04                 [442] (78)
8B12  00                 [443] (78)
8B13  00                 [444] (78)
8B14  D9                 [445] (80)
8B15  04                 [446] (80)
8B16  00                 [447] (80)
8B17  00                 [448] (80)
8B18  D9                 [449] (80)
8B19  04                 [450] (81)
8B1A  00                 [451] (81)
8B1B  00                 [452] (81)
8B1C  D9                 [453] (81)
8B1D  04                 [454] (81)
8B1E  00                 [455] (84)
8B1F  00                 [456] (84)
8B20  D9                 [457] (85)
8B21  04                 [458] (86)
8B22  00                 [459] (86)
8B23  00                 [460] (87)
8B24  D9                 [461] (87)
8B25  04                 [462] (87)
8B26  00                 [463] (90)
8B27  00                 [464] (90)
8B28  D9                 [465] (90)
8B29  04                 [466] (90)
8B2A  00                 [467] (90)
8B2B  00                 [468] (90)
8B2C  D9                 [469] (90)
8B2D  04                 [470] (90)
8B2E  00                 [471] (90)
8B2F  00                 [472] (90)
8B30  D9                 [473] (90)
8B31  04                 [474] (92)
8B32  00                 [475] (92)
8B33  00                 [476] (92)
8B34  D9                 [477] (92)
8B35  04                 [478] (95)
8B36  00                 [479] (95)
8B37  00                 [480] (95)
8B38  D9                 [481] (95)
8B39  04                 [482] (95)
8B3A  00                 [483] (96)
8B3B  00                 [484] (99)
8B3C  D9                 [485] (99)
8B3D  04                 [486] (99)
8B3E  00                 [487] (99)
8B3F  00                 [488] (99)
8B40  D9                 [489] (99)
8B41  04                 [490] (99)
8B42  00                 [491] (99)
8B43  00                 [492] (99)
8B44  D9                 [493] (101)
8B45  04                 [494] (101)
8B46  00                 [495] (102)
8B47  00                 [496] (102)
8B48  D9                 [497] (105)
8B49  04                 [498] (105)
8B4A  00                 [499] (106)
8B4B  00                 [500] (106)
8B4C  D9                 [501] (106)
8B4D  04                 [502] (106)
8B4E  00                 [503] (106)
8B4F  00                 [504] (106)
8B50  D9                 [505] (106)
8B51  04                 [506] (106)
8B52  00                 [507] (106)
8B53  00                 [508] (107)
8B54  D9                 [509] (107)
8B55  04                 [510] (107)
8B56  00                 [511] (107)
8B57  00                 [512] (108)
8B58  D9                 [513] (108)
8B59  04                 [514] (108)
8B5A  00                 [515] (108)
8B5B  00                 [516] (108)
8B5C  DA                 [517] (108)
8B5D  04                 [518] (108)
8B5E  00                 [519] (109)
8B5F  00                 [520] (109)
8B60  DA                 [521] (109)
8B61  04                 [522] (112)
8B62  00                 [523] (112)
8B63  00                 [524] (112)
8B64  DA                 [525] (112)
8B65  04                 [526] (112)
8B66  00                 [527] (112)
8B67  00                 [528] (112)
8B68  DA                 [529] (113)
8B69  04                 [530] (113)
8B6A  00                 [531] (113)
8B6B  00                 [532] (114)
8B6C  DA                 [533] (114)
8B6D  04                 [534] (114)
8B6E  00                 [535] (114)
8B6F  00                 [536] (114)
8B70  DA                 [537] (115)
8B71  04                 [538] (115)
8B72  00                 [539] (115)
8B73  00                 [540] (115)
8B74  DB                 [541] (116)
8B75  04                 [542] (116)
8B76  00                 [543] (116)
8B77  00                 [544] (116)
8B78  DB                 [545] (118)
8B79  04                 [546] (118)
8B7A  00                 [547] (118)
8B7B  00                 [548] (119)
8B7C  DB                 [549] (119)
8B7D  04                 [550] (119)
8B7E  00                 [551] (119)
8B7F  00                 [552] (119)
8B80  DB                 [553] (120)
8B81  04                 [554] (120)
8B82  00                 [555] (120)
8B83  00                 [556] (120)
8B84  DB                 [557] (120)
8B85  04                 [558] (121)
8B86  00                 [559] (123)
8B87  00                 [560] (123)
8B88  DB                 [561] (123)
8B89  04                 [562] (124)
8B8A  00                 [563] (124)
8B8B  00                 [564] (124)
8B8C  DC                 [565] (124)
8B8D  04                 [566] (126)
8B8E  00                 [567] (126)
8B8F  00                 [568] (126)
8B90  DC                 [569] (126)
8B91  04                 [570] (126)
8B92  00                 [571] (126)
8B93  00                 [572] (126)
8B94  DC                 [573] (126)
8B95  04                 [574] (126)
8B96  00                 [575] (127)
8B97  00                 [576] (127)
8B98  DC                 [577] (127)
8B99  04                 [578] (127)
8B9A  00                 [579] (-127)
8B9B  00                 [580] (-127)
8B9C  DC                 [581] (-127)
8B9D  04                 [582] (-127)
8B9E  00                 [583] (-127)
8B9F  00                 [584] (-126)
8BA0  DD                 [585] (-126)
8BA1  04                 [586] (-125)
8BA2  00                 [587] (-124)
8BA3  00                 [588] (-124)
8BA4  E2                 [589] (-124)
8BA5  04                 [590] (-124)
8BA6  00                 [591] (-124)
8BA7  00                 [592] (-124)
8BA8  E2                 [593] (-124)
8BA9  04                 [594] (-123)
8BAA  00                 [595] (-123)
8BAB  00                 [596] (-123)
8BAC  E2                 [597] (-123)
8BAD  04                 [598] (-123)
8BAE  00                 [599] (-123)
8BAF  00                 [600] (-123)
8BB0  E2                 [601] (-123)
8BB1  04                 [602] (-123)
8BB2  00                 [603] (-123)
8BB3  00                 [604] (-123)
8BB4  E2                 [605] (-122)
8BB5  04                 [606] (-122)
8BB6  00                 [607] (-122)
8BB7  00                 [608] (-122)
8BB8  E2                 [609] (-120)
8BB9  04                 [610] (-120)
8BBA  00                 [611] (-120)
8BBB  00                 [612] (-120)
8BBC  E2                 [613] (-120)
8BBD  04                 [614] (-120)
8BBE  00                 [615] (-120)
8BBF  00                 [616] (-120)
8BC0  E3                 [617] (-120)
8BC1  04                 [618] (-119)
8BC2  00                 [619] (-119)
8BC3  00                 [620] (-118)
8BC4  E3                 [621] (-118)
8BC5  04                 [622] (-118)
8BC6  00                 [623] (-118)
8BC7  00                 [624] (-114)
8BC8  E3                 [625] (-114)
8BC9  04                 [626] (-114)
8BCA  00                 [627] (-114)
8BCB  00                 [628] (-114)
8BCC  E3                 [629] (-113)
8BCD  04                 [630] (-110)
8BCE  00                 [631] (-110)
8BCF  00                 [632] (-110)
8BD0  E4                 [633] (-110)
8BD1  04                 [634] (-110)
8BD2  00                 [635] (-110)
8BD3  00                 [636] (-110)
8BD4  E4                 [637] (-109)
8BD5  04                 [638] (-109)
8BD6  00                 [639] (-109)
8BD7  00                 [640] (-109)
8BD8  E5                 [641] (-109)
8BD9  04                 [642] (-108)
8BDA  00                 [643] (-108)
8BDB  00                 [644] (-107)
8BDC  E5                 [645] (-107)
8BDD  04                 [646] (-107)
8BDE  00                 [647] (-107)
8BDF  00                 [648] (-107)
8BE0  E5                 [649] (-107)
8BE1  04                 [650] (-104)
8BE2  00                 [651] (-104)
8BE3  00                 [652] (-104)
8BE4  E6                 [653] (-104)
8BE5  04                 [654] (-104)
8BE6  00                 [655] (-104)
8BE7  00                 [656] (-104)
8BE8  E6                 [657] (-104)
8BE9  04                 [658] (-104)
8BEA  00                 [659] (-103)
8BEB  00                 [660] (-103)
8BEC  E6                 [661] (-103)
8BED  04                 [662] (-103)
8BEE  00                 [663] (-100)
8BEF  00                 [664] (-100)
8BF0  E6                 [665] (-100)
8BF1  04                 [666] (-100)
8BF2  00                 [667] (-100)
8BF3  00                 [668] (-99)
8BF4  E8                 [669] (-96)
8BF5  04                 [670] (-96)
8BF6  00                 [671] (-96)
8BF7  00                 [672] (-95)
8BF8  E8                 [673] (-95)
8BF9  04                 [674] (-95)
8BFA  00                 [675] (-95)
8BFB  00                 [676] (-93)
8BFC  E8                 [677] (-93)
8BFD  04                 [678] (-92)
8BFE  00                 [679] (-92)
8BFF  00                 [680] (-92)
8C00  EC                 [681] (-91)
8C01  04                 [682] (-91)
8C02  00                 [683] (-91)
8C03  00                 [684] (-90)
8C04  EC                 [685] (-90)
8C05  04                 [686] (-90)
8C06  00                 [687] (-90)
8C07  00                 [688] (-90)
8C08  ED                 [689] (-87)
8C09  04                 [690] (-87)
8C0A  00                 [691] (-87)
8C0B  00                 [692] (-87)
8C0C  ED                 [693] (-87)
8C0D  04                 [694] (-86)
8C0E  00                 [695] (-86)
8C0F  00                 [696] (-86)
8C10  ED                 [697] (-86)
8C11  04                 [698] (-85)
8C12  00                 [699] (-85)
8C13  00                 [700] (-84)
8C14  ED                 [701] (-84)
8C15  04                 [702] (-84)
8C16  00                 [703] (-84)
8C17  00                 [704] (-84)
8C18  ED                 [705] (-83)
8C19  04                 [706] (-83)
8C1A  00                 [707] (-82)
8C1B  00                 [708] (-76)
8C1C  EE                 [709] (-76)
8C1D  04                 [710] (-76)
8C1E  00                 [711] (-76)
8C1F  00                 [712] (-76)
8C20  EE                 [713] (-76)
8C21  04                 [714] (-76)
8C22  00                 [715] (-76)
8C23  00                 [716] (-76)
8C24  F1                 [717] (-75)
8C25  04                 [718] (-75)
8C26  00                 [719] (-75)
8C27  00                 [720] (-75)
8C28  F1                 [721] (-74)
8C29  04                 [722] (-74)
8C2A  00                 [723] (-73)
8C2B  00                 [724] (-73)
8C2C  F4                 [725] (-73)
8C2D  04                 [726] (-69)
8C2E  00                 [727] (-69)
8C2F  00                 [728] (-69)
8C30  F4                 [729] (-69)
8C31  04                 [730] (-69)
8C32  00                 [731] (-68)
8C33  00                 [732] (-65)
8C34  F5                 [733] (-65)
8C35  04                 [734] (-65)
8C36  00                 [735] (-65)
8C37  00                 [736] (-65)
8C38  F5                 [737] (-64)
8C39  04                 [738] (-64)
8C3A  00                 [739] (-63)
8C3B  00                 [740] (-63)
8C3C  F5                 [741] (-63)
8C3D  04                 [742] (-63)
8C3E  00                 [743] (-63)
8C3F  00                 [744] (-62)
8C40  FA                 [745] (-62)
8C41  04                 [746] (-62)
8C42  00                 [747] (-61)
8C43  00                 [748] (-59)
8C44  FA                 [749] (-59)
8C45  04                 [750] (-59)
8C46  00                 [751] (-59)
8C47  00                 [752] (-59)
8C48  FA                 [753] (-58)
8C49  04                 [754] (-58)
8C4A  00                 [755] (-58)
8C4B  00                 [756] (-53)
8C4C  FA                 [757] (-53)
8C4D  04                 [758] (-53)
8C4E  00                 [759] (-53)
8C4F  00                 [760] (-53)
8C50  FB                 [761] (-53)
8C51  04                 [762] (-52)
8C52  00                 [763] (-52)
8C53  00                 [764] (-51)
8C54  FB                 [765] (-51)
8C55  04                 [766] (-51)
8C56  00                 [767] (-50)
8C57  00                 [768] (-50)
8C58  FB                 [769] (-50)
8C59  04                 [770] (-47)
8C5A  00                 [771] (-47)
8C5B  00                 [772] (-47)
8C5C  FB                 [773] (-47)
8C5D  04                 [774] (-47)
8C5E  00                 [775] (-46)
8C5F  00                 [776] (-46)
8C60  FC                 [777] (-45)
8C61  04                 [778] (-45)
8C62  00                 [779] (-45)
8C63  00                 [780] (-45)
8C64  FC                 [781] (-45)
8C65  04                 [782] (-45)
8C66  00                 [783] (-45)
8C67  00                 [784] (-44)
8C68  FC                 [785] (-44)
8C69  04                 [786] (-44)
8C6A  00                 [787] (-44)
8C6B  00                 [788] (-41)
                         * locals:
95A8  00                 sizelocvars (0)
                         * upvalues:
95A9  00                 sizeupvalues (0)
                         ** end of function **

                         
95AA                     ** function [21] definition (level 2)
                         ** start of function **
95AA  00                 string size (0)
                         source name: (none)
95AC  0B                 line defined (1497)
95AD  DD                 last line defined (1501)
95AE  0B                 nups (1)
95AF  01                 numparams (5)
95B0  05                 is_vararg (0)
95B1  00                 maxstacksize (10)
                         * code:
95B3  0F                 sizecode (15)
95B4  5D010000           [01] getglobal  5   0        ; gGameRules
95B8  6441C002           [02] self       5   5   257  ; 1861369943
95BC  D7018000           [03] loadbool   7   1   0    ; true
95C0  62418001           [04] call       5   3   1  
95C4  53010000           [05] getupval   5   0      
95C8  92010000           [06] move       6   0      
95CC  D2018000           [07] move       7   1      
95D0  12020001           [08] move       8   2      
95D4  46028004           [09] loadnil    9   9      
95D8  62418002           [10] call       5   5   1  
95DC  5D010000           [11] getglobal  5   0        ; gGameRules
95E0  6441C002           [12] self       5   5   257  ; 1861369943
95E4  D7010000           [13] loadbool   7   0   0    ; false
95E8  62418001           [14] call       5   3   1  
95EC  1E008000           [15] return     0   1      
                         * constants:
95F0  02                 sizek (2)
95F1  04                 const type 4
95F2  0B                 string size (11)
95F3  6747616D6552756C+  "gGameRul"
95FB  657300             "es\0"
                         const [0]: "gGameRules"
95FE  01                 const type 3
95FF  5740F26E           const [1]: (1861369943)
                         * functions:
9603  00                 sizep (0)
                         * lines:
9604  0F                 sizelineinfo (15)
                         [pc] (line)
9605  DA                 [01] (-38)
9606  05                 [02] (-38)
9607  00                 [03] (-38)
9608  00                 [04] (-38)
9609  DA                 [05] (-37)
960A  05                 [06] (-37)
960B  00                 [07] (-37)
960C  00                 [08] (-37)
960D  DA                 [09] (-37)
960E  05                 [10] (-37)
960F  00                 [11] (-36)
9610  00                 [12] (-36)
9611  DA                 [13] (-36)
9612  05                 [14] (-36)
9613  00                 [15] (-35)
                         * locals:
9641  00                 sizelocvars (0)
                         * upvalues:
9642  00                 sizeupvalues (0)
                         ** end of function **

                         
9643                     ** function [22] definition (level 2)
                         ** start of function **
9643  00                 string size (0)
                         source name: (none)
9645  0B                 line defined (1503)
9646  8B                 last line defined (1547)
9647  0C                 nups (1)
9648  01                 numparams (4)
9649  04                 is_vararg (0)
964A  00                 maxstacksize (13)
                         * code:
964D  01                 sizecode (138)
964E  1D010000           [001] getglobal  4   0        ; 1074689893
9652  52018000           [002] move       5   1      
9656  22810001           [003] call       4   2   2  
965A  18410000           [004] test       4       1    ; to [6] if false
965E  1AC02080           [005] jmp        132          ; to [138]
9662  2441C000           [006] self       4   1   257  ; 1265388858
9666  9D810000           [007] getglobal  6   2        ; blockingInputFilter
966A  22418001           [008] call       4   3   1  
966E  24C1C000           [009] self       4   1   259  ; -1143195026
9672  97010000           [010] loadbool   6   0   0    ; false
9676  22418001           [011] call       4   3   1  
967A  2401C100           [012] self       4   1   260  ; -1764426596
967E  22810001           [013] call       4   2   2  
9682  5D010000           [014] getglobal  5   0        ; 1074689893
9686  92010002           [015] move       6   4      
968A  62810001           [016] call       5   2   2  
968E  58410000           [017] test       5       1    ; to [19] if false
9692  1AC00480           [018] jmp        20           ; to [39]
9696  46018002           [019] loadnil    5   5      
969A  A4414100           [020] self       6   0   261  ; -1130691958
969E  A2810001           [021] call       6   2   2  
96A2  98010000           [022] test       6       0    ; to [24] if true
96A6  1AC00080           [023] jmp        4            ; to [28]
96AA  A4814102           [024] self       6   4   262  ; -1813551355
96AE  A2810001           [025] call       6   2   2  
96B2  52010003           [026] move       5   6      
96B6  1A800080           [027] jmp        3            ; to [31]
96BA  A4C14102           [028] self       6   4   263  ; -1888201767
96BE  A2810001           [029] call       6   2   2  
96C2  52010003           [030] move       5   6      
96C6  9D010000           [031] getglobal  6   0        ; 1074689893
96CA  D2018002           [032] move       7   5      
96CE  A2810001           [033] call       6   2   2  
96D2  98410000           [034] test       6       1    ; to [36] if false
96D6  1A800080           [035] jmp        3            ; to [39]
96DA  A4C1C002           [036] self       6   5   259  ; -1143195026
96DE  17020000           [037] loadbool   8   0   0    ; false
96E2  A2418001           [038] call       6   3   1  
96E6  9D010000           [039] getglobal  6   0        ; 1074689893
96EA  E401C200           [040] self       7   1   264  ; -564624675
96EE  E2010001           [041] call       7   2   0  
96F2  A2810000           [042] call       6   0   2  
96F6  98410000           [043] test       6       1    ; to [45] if false
96FA  1AC00C80           [044] jmp        52           ; to [97]
96FE  A441C200           [045] self       6   1   265  ; 840728497
9702  17020000           [046] loadbool   8   0   0    ; false
9706  A2418001           [047] call       6   3   1  
970A  A481C200           [048] self       6   1   266  ; -1544157541
970E  A2810001           [049] call       6   2   2  
9712  A4C14203           [050] self       6   6   267  ; 197552586
9716  13020000           [051] getupval   8   0      
971A  A2418001           [052] call       6   3   1  
971E  A401C300           [053] self       6   1   268  ; 2056776437
9722  06020004           [054] loadnil    8   8      
9726  57020000           [055] loadbool   9   0   0    ; false
972A  9D420300           [056] getglobal  10  13       ; Engine
972E  8E824305           [057] gettable   10  10  270  ; "ATMM_PHYSICS_DRIVEN"
9732  DD420300           [058] getglobal  11  13       ; Engine
9736  CEC2C305           [059] gettable   11  11  271  ; "PRT_FREEZE"
973A  17030000           [060] loadbool   12  0   0    ; false
973E  A2418003           [061] call       6   7   1  
9742  A401C400           [062] self       6   1   272  ; 155743781
9746  19420400           [063] loadk      8   17       ; 0
974A  A2418001           [064] call       6   3   1  
974E  A481C400           [065] self       6   1   274  ; -1957065004
9752  1DC20400           [066] getglobal  8   19       ; gLotusOperatorAvatarType
9756  A2818001           [067] call       6   3   2  
975A  98010000           [068] test       6       0    ; to [70] if true
975E  1A800680           [069] jmp        27           ; to [97]
9762  9D010500           [070] getglobal  6   20       ; _T
9766  8C81C58A           [071] settable   6   277 278  ; "transferenceInterrupted" 1
976A  A4C1C500           [072] self       6   1   279  ; -1421644046
976E  1D020600           [073] getglobal  8   24       ; operatorTransferenceInFx
9772  5D420600           [074] getglobal  9   25       ; EMPTY_SYMBOL
9776  A2410002           [075] call       6   4   1  
977A  A481C600           [076] self       6   1   282  ; -832323870
977E  A2410001           [077] call       6   2   1  
9782  9D010000           [078] getglobal  6   0        ; 1074689893
9786  D2010001           [079] move       7   2      
978A  A2810001           [080] call       6   2   2  
978E  98410000           [081] test       6       1    ; to [83] if false
9792  1A400380           [082] jmp        14           ; to [97]
9796  A4814401           [083] self       6   2   274  ; -1957065004
979A  1DC20600           [084] getglobal  8   27       ; gTennoAvatarType
979E  A2818001           [085] call       6   3   2  
97A2  98010000           [086] test       6       0    ; to [88] if true
97A6  1A000280           [087] jmp        9            ; to [97]
97AA  A4014301           [088] self       6   2   268  ; 2056776437
97AE  1D020700           [089] getglobal  8   28       ; powerSuitCollapsedAnim
97B2  57020000           [090] loadbool   9   0   0    ; false
97B6  9D420300           [091] getglobal  10  13       ; Engine
97BA  8E824305           [092] gettable   10  10  270  ; "ATMM_PHYSICS_DRIVEN"
97BE  DD420300           [093] getglobal  11  13       ; Engine
97C2  CEC2C305           [094] gettable   11  11  271  ; "PRT_FREEZE"
97C6  17030000           [095] loadbool   12  0   0    ; false
97CA  A2418003           [096] call       6   7   1  
97CE  9D010000           [097] getglobal  6   0        ; 1074689893
97D2  D2010002           [098] move       7   4      
97D6  A2810001           [099] call       6   2   2  
97DA  98410000           [100] test       6       1    ; to [102] if false
97DE  1AC00880           [101] jmp        36           ; to [138]
97E2  9D410700           [102] getglobal  6   29       ; gRegion
97E6  A4814703           [103] self       6   6   286  ; -1520831144
97EA  A2810001           [104] call       6   2   2  
97EE  98410000           [105] test       6       1    ; to [107] if false
97F2  1AC00080           [106] jmp        4            ; to [111]
97F6  A4C1C700           [107] self       6   1   287  ; -717859730
97FA  A2810001           [108] call       6   2   2  
97FE  98010000           [109] test       6       0    ; to [111] if true
9802  1A800680           [110] jmp        27           ; to [138]
9806  A481C400           [111] self       6   1   274  ; -1957065004
980A  1DC20400           [112] getglobal  8   19       ; gLotusOperatorAvatarType
980E  A2818001           [113] call       6   3   2  
9812  E481C400           [114] self       7   1   274  ; -1957065004
9816  5DC20600           [115] getglobal  9   27       ; gTennoAvatarType
981A  E2818001           [116] call       7   3   2  
981E  D8010000           [117] test       7       0    ; to [119] if true
9822  1A400280           [118] jmp        10           ; to [129]
9826  98410000           [119] test       6       1    ; to [121] if false
982A  1AC00180           [120] jmp        8            ; to [129]
982E  DD010800           [121] getglobal  7   32       ; gChallengeMgr
9832  E441C803           [122] self       7   7   289  ; 137898418
9836  52020002           [123] move       9   4      
983A  9D820800           [124] getglobal  10  34       ; -332969190
983E  D9C20800           [125] loadk      11  35       ; "TRANSFERENCE_OUT"
9842  A2020001           [126] call       10  2   0  
9846  E2410000           [127] call       7   0   1  
984A  1A000280           [128] jmp        9            ; to [138]
984E  98010000           [129] test       6       0    ; to [131] if true
9852  1A800180           [130] jmp        7            ; to [138]
9856  DD010800           [131] getglobal  7   32       ; gChallengeMgr
985A  E441C803           [132] self       7   7   289  ; 137898418
985E  52020002           [133] move       9   4      
9862  9D820800           [134] getglobal  10  34       ; -332969190
9866  D9020900           [135] loadk      11  36       ; "TRANSFERENCE_IN"
986A  A2020001           [136] call       10  2   0  
986E  E2410000           [137] call       7   0   1  
9872  1E008000           [138] return     0   1      
                         * constants:
9876  25                 sizek (37)
9877  01                 const type 3
9878  65770E40           const [0]: (1074689893)
987C  01                 const type 3
987D  3A4D6C4B           const [1]: (1265388858)
9881  04                 const type 4
9882  14                 string size (20)
9883  626C6F636B696E67+  "blocking"
988B  496E70757446696C+  "InputFil"
9893  74657200           "ter\0"
                         const [2]: "blockingInputFilter"
9897  01                 const type 3
9898  6E3ADCBB           const [3]: (-1143195026)
989C  01                 const type 3
989D  9CFCD496           const [4]: (-1764426596)
98A1  01                 const type 3
98A2  8A029BBC           const [5]: (-1130691958)
98A6  01                 const type 3
98A7  0567E793           const [6]: (-1813551355)
98AB  01                 const type 3
98AC  D953748F           const [7]: (-1888201767)
98B0  01                 const type 3
98B1  DD8258DE           const [8]: (-564624675)
98B5  01                 const type 3
98B6  B17F1C32           const [9]: (840728497)
98BA  01                 const type 3
98BB  9B06F6A3           const [10]: (-1544157541)
98BF  01                 const type 3
98C0  CA69C60B           const [11]: (197552586)
98C4  01                 const type 3
98C5  F5EA977A           const [12]: (2056776437)
98C9  04                 const type 4
98CA  07                 string size (7)
98CB  456E67696E6500     "Engine\0"
                         const [13]: "Engine"
98D2  04                 const type 4
98D3  14                 string size (20)
98D4  41544D4D5F504859+  "ATMM_PHY"
98DC  534943535F445249+  "SICS_DRI"
98E4  56454E00           "VEN\0"
                         const [14]: "ATMM_PHYSICS_DRIVEN"
98E8  04                 const type 4
98E9  0B                 string size (11)
98EA  5052545F46524545+  "PRT_FREE"
98F2  5A4500             "ZE\0"
                         const [15]: "PRT_FREEZE"
98F5  01                 const type 3
98F6  25764809           const [16]: (155743781)
98FA  03                 const type 3
98FB  00000000           const [17]: (0)
98FF  01                 const type 3
9900  D48E598B           const [18]: (-1957065004)
9904  04                 const type 4
9905  19                 string size (25)
9906  674C6F7475734F70+  "gLotusOp"
990E  657261746F724176+  "eratorAv"
9916  6174617254797065+  "atarType"
991E  00                 "\0"
                         const [19]: "gLotusOperatorAvatarType"
991F  04                 const type 4
9920  03                 string size (3)
9921  5F5400             "_T\0"
                         const [20]: "_T"
9924  04                 const type 4
9925  18                 string size (24)
9926  7472616E73666572+  "transfer"
992E  656E6365496E7465+  "enceInte"
9936  7272757074656400   "rrupted\0"
                         const [21]: "transferenceInterrupted"
993E  01                 const type 3
993F  01000000           const [22]: (1)
9943  01                 const type 3
9944  F26E43AB           const [23]: (-1421644046)
9948  04                 const type 4
9949  19                 string size (25)
994A  6F70657261746F72+  "operator"
9952  5472616E73666572+  "Transfer"
995A  656E6365496E4678+  "enceInFx"
9962  00                 "\0"
                         const [24]: "operatorTransferenceInFx"
9963  04                 const type 4
9964  0D                 string size (13)
9965  454D5054595F5359+  "EMPTY_SY"
996D  4D424F4C00         "MBOL\0"
                         const [25]: "EMPTY_SYMBOL"
9972  01                 const type 3
9973  E2BE63CE           const [26]: (-832323870)
9977  04                 const type 4
9978  11                 string size (17)
9979  6754656E6E6F4176+  "gTennoAv"
9981  6174617254797065+  "atarType"
9989  00                 "\0"
                         const [27]: "gTennoAvatarType"
998A  04                 const type 4
998B  17                 string size (23)
998C  706F776572537569+  "powerSui"
9994  74436F6C6C617073+  "tCollaps"
999C  6564416E696D00     "edAnim\0"
                         const [28]: "powerSuitCollapsedAnim"
99A3  04                 const type 4
99A4  08                 string size (8)
99A5  67526567696F6E00   "gRegion\0"
                         const [29]: "gRegion"
99AD  01                 const type 3
99AE  58F559A5           const [30]: (-1520831144)
99B2  01                 const type 3
99B3  6E5436D5           const [31]: (-717859730)
99B7  04                 const type 4
99B8  0E                 string size (14)
99B9  674368616C6C656E+  "gChallen"
99C1  67654D677200       "geMgr\0"
                         const [32]: "gChallengeMgr"
99C7  01                 const type 3
99C8  B2293808           const [33]: (137898418)
99CC  01                 const type 3
99CD  1A4B27EC           const [34]: (-332969190)
99D1  04                 const type 4
99D2  11                 string size (17)
99D3  5452414E53464552+  "TRANSFER"
99DB  454E43455F4F5554+  "ENCE_OUT"
99E3  00                 "\0"
                         const [35]: "TRANSFERENCE_OUT"
99E4  04                 const type 4
99E5  10                 string size (16)
99E6  5452414E53464552+  "TRANSFER"
99EE  454E43455F494E00   "ENCE_IN\0"
                         const [36]: "TRANSFERENCE_IN"
                         * functions:
99F6  00                 sizep (0)
                         * lines:
99F8  01                 sizelineinfo (138)
                         [pc] (line)
99F9  E0                 [001] (-32)
99FA  05                 [002] (-32)
99FB  00                 [003] (-32)
99FC  00                 [004] (-32)
99FD  E0                 [005] (-32)
99FE  05                 [006] (-31)
99FF  00                 [007] (-31)
9A00  00                 [008] (-31)
9A01  E0                 [009] (-30)
9A02  05                 [010] (-30)
9A03  00                 [011] (-30)
9A04  00                 [012] (-29)
9A05  E0                 [013] (-29)
9A06  05                 [014] (-28)
9A07  00                 [015] (-28)
9A08  00                 [016] (-28)
9A09  E0                 [017] (-28)
9A0A  05                 [018] (-28)
9A0B  00                 [019] (-27)
9A0C  00                 [020] (-26)
9A0D  E1                 [021] (-26)
9A0E  05                 [022] (-26)
9A0F  00                 [023] (-26)
9A10  00                 [024] (-25)
9A11  E1                 [025] (-25)
9A12  05                 [026] (-25)
9A13  00                 [027] (-25)
9A14  00                 [028] (-23)
9A15  E1                 [029] (-23)
9A16  05                 [030] (-23)
9A17  00                 [031] (-21)
9A18  00                 [032] (-21)
9A19  E2                 [033] (-21)
9A1A  05                 [034] (-21)
9A1B  00                 [035] (-21)
9A1C  00                 [036] (-20)
9A1D  E2                 [037] (-20)
9A1E  05                 [038] (-20)
9A1F  00                 [039] (-16)
9A20  00                 [040] (-16)
9A21  E2                 [041] (-16)
9A22  05                 [042] (-16)
9A23  00                 [043] (-16)
9A24  00                 [044] (-16)
9A25  E3                 [045] (-14)
9A26  05                 [046] (-14)
9A27  00                 [047] (-14)
9A28  00                 [048] (-13)
9A29  E3                 [049] (-13)
9A2A  05                 [050] (-13)
9A2B  00                 [051] (-13)
9A2C  00                 [052] (-13)
9A2D  E4                 [053] (-12)
9A2E  05                 [054] (-12)
9A2F  00                 [055] (-12)
9A30  00                 [056] (-12)
9A31  E4                 [057] (-12)
9A32  05                 [058] (-12)
9A33  00                 [059] (-12)
9A34  00                 [060] (-12)
9A35  E4                 [061] (-12)
9A36  05                 [062] (-11)
9A37  00                 [063] (-11)
9A38  00                 [064] (-11)
9A39  E4                 [065] (-8)
9A3A  05                 [066] (-8)
9A3B  00                 [067] (-8)
9A3C  00                 [068] (-8)
9A3D  E4                 [069] (-8)
9A3E  05                 [070] (-7)
9A3F  00                 [071] (-7)
9A40  00                 [072] (-6)
9A41  E5                 [073] (-6)
9A42  05                 [074] (-6)
9A43  00                 [075] (-6)
9A44  00                 [076] (-5)
9A45  E6                 [077] (-5)
9A46  05                 [078] (-4)
9A47  00                 [079] (-4)
9A48  00                 [080] (-4)
9A49  E6                 [081] (-4)
9A4A  05                 [082] (-4)
9A4B  00                 [083] (-4)
9A4C  00                 [084] (-4)
9A4D  E6                 [085] (-4)
9A4E  05                 [086] (-4)
9A4F  00                 [087] (-4)
9A50  00                 [088] (-3)
9A51  E6                 [089] (-3)
9A52  05                 [090] (-3)
9A53  00                 [091] (-3)
9A54  00                 [092] (-3)
9A55  E7                 [093] (-3)
9A56  05                 [094] (-3)
9A57  00                 [095] (-3)
9A58  00                 [096] (-3)
9A59  E7                 [097] (2)
9A5A  05                 [098] (2)
9A5B  00                 [099] (2)
9A5C  00                 [100] (2)
9A5D  E7                 [101] (2)
9A5E  05                 [102] (2)
9A5F  00                 [103] (2)
9A60  00                 [104] (2)
9A61  E7                 [105] (2)
9A62  05                 [106] (2)
9A63  00                 [107] (2)
9A64  00                 [108] (2)
9A65  E9                 [109] (2)
9A66  05                 [110] (2)
9A67  00                 [111] (3)
9A68  00                 [112] (3)
9A69  E9                 [113] (3)
9A6A  05                 [114] (4)
9A6B  00                 [115] (4)
9A6C  00                 [116] (4)
9A6D  E9                 [117] (4)
9A6E  05                 [118] (4)
9A6F  00                 [119] (4)
9A70  00                 [120] (4)
9A71  EB                 [121] (5)
9A72  05                 [122] (5)
9A73  00                 [123] (5)
9A74  00                 [124] (5)
9A75  EB                 [125] (5)
9A76  05                 [126] (5)
9A77  00                 [127] (5)
9A78  00                 [128] (5)
9A79  EB                 [129] (6)
9A7A  05                 [130] (6)
9A7B  00                 [131] (7)
9A7C  00                 [132] (7)
9A7D  EB                 [133] (7)
9A7E  05                 [134] (7)
9A7F  00                 [135] (7)
9A80  00                 [136] (7)
9A81  EB                 [137] (7)
9A82  05                 [138] (11)
                         * locals:
9C21  00                 sizelocvars (0)
                         * upvalues:
9C22  00                 sizeupvalues (0)
                         ** end of function **

                         
9C23                     ** function [23] definition (level 2)
                         ** start of function **
9C23  00                 string size (0)
                         source name: (none)
9C25  0C                 line defined (1549)
9C26  CA                 last line defined (1610)
9C27  0C                 nups (3)
9C28  03                 numparams (1)
9C29  01                 is_vararg (0)
9C2A  00                 maxstacksize (12)
                         * code:
9C2D  01                 sizecode (161)
9C2E  5D000000           [001] getglobal  1   0        ; Lotus_Game
9C32  4E40C000           [002] gettable   1   1   257  ; -84065502
9C36  62808000           [003] call       1   1   2  
9C3A  4C000081           [004] settable   1   258 0    ; "instigator"
9C3E  8B008000           [005] newtable   2   1   0    ; array=1, hash=0
9C42  D2000000           [006] move       3   0      
9C46  9B408000           [007] setlist    2   1   1    ; index 1 to 1
9C4A  4C808081           [008] settable   1   259 2    ; "affected"
9C4E  9D000000           [009] getglobal  2   0        ; Lotus_Game
9C52  8E404101           [010] gettable   2   2   261  ; "BT_TIMER"
9C56  4C800082           [011] settable   1   260 2    ; "buffType"
9C5A  9D800100           [012] getglobal  2   6        ; 1074689893
9C5E  DDC00100           [013] getglobal  3   7        ; mOwner
9C62  A2800001           [014] call       2   2   2  
9C66  98400000           [015] test       2       1    ; to [17] if false
9C6A  1A000180           [016] jmp        5            ; to [22]
9C6E  9DC00100           [017] getglobal  2   7        ; mOwner
9C72  A4404201           [018] self       2   2   265  ; -491574171
9C76  A2800001           [019] call       2   2   2  
9C7A  4C800084           [020] settable   1   264 2    ; "abilityType"
9C7E  1A400080           [021] jmp        2            ; to [24]
9C82  9D000200           [022] getglobal  2   8        ; abilityType
9C86  4C800084           [023] settable   1   264 2    ; "abilityType"
9C8A  93000000           [024] getupval   2   0      
9C8E  4C800085           [025] settable   1   266 2    ; "buffData"
9C92  A4C04200           [026] self       2   0   267  ; 1481577430
9C96  12018000           [027] move       4   1      
9C9A  57018000           [028] loadbool   5   1   0    ; true
9C9E  97018000           [029] loadbool   6   1   0    ; true
9CA2  A2408002           [030] call       2   5   1  
9CA6  A4004300           [031] self       2   0   268  ; -1917464545
9CAA  A2800001           [032] call       2   2   2  
9CAE  A4404301           [033] self       2   2   269  ; 1769516121
9CB2  A2800001           [034] call       2   2   2  
9CB6  E4804300           [035] self       3   0   270  ; -564624675
9CBA  E2800001           [036] call       3   2   2  
9CBE  24C1C301           [037] self       4   3   271  ; -1888201767
9CC2  22810001           [038] call       4   2   2  
9CC6  5D810100           [039] getglobal  5   6        ; 1074689893
9CCA  92010002           [040] move       6   4      
9CCE  62810001           [041] call       5   2   2  
9CD2  58010000           [042] test       5       0    ; to [44] if true
9CD6  1A800080           [043] jmp        3            ; to [47]
9CDA  6401C401           [044] self       5   3   272  ; -1813551355
9CDE  62810001           [045] call       5   2   2  
9CE2  12018002           [046] move       4   5      
9CE6  46018002           [047] loadnil    5   5      
9CEA  9D810100           [048] getglobal  6   6        ; 1074689893
9CEE  D2010002           [049] move       7   4      
9CF2  A2810001           [050] call       6   2   2  
9CF6  98410000           [051] test       6       1    ; to [53] if false
9CFA  1A800080           [052] jmp        3            ; to [56]
9CFE  A4414402           [053] self       6   4   273  ; 1839670529
9D02  A2810001           [054] call       6   2   2  
9D06  52010003           [055] move       5   6      
9D0A  93010000           [056] getupval   6   0      
fail op	21
9D0E  15800189           [057] concat     0   274 6  
9D12  1AC00680           [058] jmp        28           ; to [87]
9D16  9D810100           [059] getglobal  6   6        ; 1074689893
9D1A  D2010000           [060] move       7   0      
9D1E  A2810001           [061] call       6   2   2  
9D22  98410000           [062] test       6       1    ; to [64] if false
9D26  1A800580           [063] jmp        23           ; to [87]
9D2A  A4C14400           [064] self       6   0   275  ; 1511086594
9D2E  A2810001           [065] call       6   2   2  
9D32  98410000           [066] test       6       1    ; to [68] if false
9D36  1A800480           [067] jmp        19           ; to [87]
9D3A  9D810100           [068] getglobal  6   6        ; 1074689893
9D3E  E4814300           [069] self       7   0   270  ; -564624675
9D42  E2010001           [070] call       7   2   0  
9D46  A2810000           [071] call       6   0   2  
9D4A  98410000           [072] test       6       1    ; to [74] if false
9D4E  1A000380           [073] jmp        13           ; to [87]
9D52  A401C501           [074] self       6   3   276  ; -2135866365
9D56  A2810001           [075] call       6   2   2  
fail op	35
9D5A  63000103           [076] close      1  
9D5E  1A000280           [077] jmp        9            ; to [87]
9D62  9D410500           [078] getglobal  6   21       ; 538022378
9D66  D9810400           [079] loadk      7   18       ; 0
9D6A  A2410001           [080] call       6   2   1  
9D6E  93010000           [081] getupval   6   0      
9D72  DD810500           [082] getglobal  7   22       ; 1289681407
9D76  E2818000           [083] call       7   1   2  
9D7A  8DC10103           [084] sub        6   6   7  
fail op	8
9D7E  88010000           [085] setupval   6   0      
9D82  1A00F87F           [086] jmp        -31          ; to [56]
9D86  93010000           [087] getupval   6   0      
fail op	21
9D8A  15800189           [088] concat     0   274 6  
9D8E  1A800280           [089] jmp        11           ; to [101]
9D92  4C000081           [090] settable   1   258 0    ; "instigator"
9D96  8B010001           [091] newtable   6   2   0    ; array=2, hash=0
9D9A  D2010000           [092] move       7   0      
9D9E  12020002           [093] move       8   4      
9DA2  9B410001           [094] setlist    6   2   1    ; index 1 to 2
9DA6  4C808181           [095] settable   1   259 6    ; "affected"
9DAA  A4C14200           [096] self       6   0   267  ; 1481577430
9DAE  12028000           [097] move       8   1      
9DB2  57020000           [098] loadbool   9   0   0    ; false
9DB6  97028000           [099] loadbool   10  1   0    ; true
9DBA  A2418002           [100] call       6   5   1  
9DBE  9D810100           [101] getglobal  6   6        ; 1074689893
9DC2  D2018001           [102] move       7   3      
9DC6  A2810001           [103] call       6   2   2  
9DCA  98410000           [104] test       6       1    ; to [106] if false
9DCE  1A800D80           [105] jmp        55           ; to [161]
9DD2  9D810100           [106] getglobal  6   6        ; 1074689893
9DD6  D2010002           [107] move       7   4      
9DDA  A2810001           [108] call       6   2   2  
9DDE  98010000           [109] test       6       0    ; to [111] if true
9DE2  1A000B80           [110] jmp        45           ; to [156]
9DE6  A401C401           [111] self       6   3   272  ; -1813551355
9DEA  A2810001           [112] call       6   2   2  
9DEE  C6018003           [113] loadnil    7   7      
9DF2  1D820100           [114] getglobal  8   6        ; 1074689893
9DF6  52020000           [115] move       9   0      
9DFA  22820001           [116] call       8   2   2  
9DFE  18420000           [117] test       8       1    ; to [119] if false
9E02  1A400180           [118] jmp        6            ; to [125]
9E06  24424400           [119] self       8   0   273  ; 1839670529
9E0A  22820001           [120] call       8   2   2  
9E0E  64C24500           [121] self       9   0   279  ; -365711519
9E12  62820001           [122] call       9   2   2  
9E16  C3410204           [123] add        7   8   9  
9E1A  1A400380           [124] jmp        14           ; to [139]
9E1E  1D820100           [125] getglobal  8   6        ; 1074689893
9E22  52020003           [126] move       9   6      
9E26  22820001           [127] call       8   2   2  
9E2A  18420000           [128] test       8       1    ; to [130] if false
9E2E  1A000280           [129] jmp        9            ; to [139]
9E32  24C2C301           [130] self       8   3   271  ; -1888201767
9E36  22820001           [131] call       8   2   2  
fail op	35
9E3A  63000203           [132] close      1  
9E3E  1A000180           [133] jmp        5            ; to [139]
9E42  24424403           [134] self       8   6   273  ; 1839670529
9E46  22820001           [135] call       8   2   2  
9E4A  64C24503           [136] self       9   6   279  ; -365711519
9E4E  62820001           [137] call       9   2   2  
9E52  C3410204           [138] add        7   8   9  
9E56  1D820100           [139] getglobal  8   6        ; 1074689893
9E5A  52028003           [140] move       9   7      
9E5E  22820001           [141] call       8   2   2  
9E62  18020000           [142] test       8       0    ; to [144] if true
9E66  1A400180           [143] jmp        6            ; to [150]
9E6A  1D820100           [144] getglobal  8   6        ; 1074689893
9E6E  52028002           [145] move       9   5      
9E72  22820001           [146] call       8   2   2  
9E76  18420000           [147] test       8       1    ; to [149] if false
9E7A  1A000080           [148] jmp        1            ; to [150]
9E7E  D2018002           [149] move       7   5      
9E82  13028000           [150] getupval   8   1      
9E86  52028001           [151] move       9   3      
9E8A  92020003           [152] move       10  6      
9E8E  D2028003           [153] move       11  7      
9E92  22820002           [154] call       8   4   2  
9E96  12010004           [155] move       4   8      
9E9A  13020001           [156] getupval   8   2      
9E9E  52020001           [157] move       9   2      
9EA2  92020000           [158] move       10  0      
9EA6  D2020002           [159] move       11  4      
9EAA  22420002           [160] call       8   4   1  
9EAE  1E008000           [161] return     0   1      
                         * constants:
9EB2  18                 sizek (24)
9EB3  04                 const type 4
9EB4  0B                 string size (11)
9EB5  4C6F7475735F4761+  "Lotus_Ga"
9EBD  6D6500             "me\0"
                         const [0]: "Lotus_Game"
9EC0  01                 const type 3
9EC1  2243FDFA           const [1]: (-84065502)
9EC5  04                 const type 4
9EC6  0B                 string size (11)
9EC7  696E737469676174+  "instigat"
9ECF  6F7200             "or\0"
                         const [2]: "instigator"
9ED2  04                 const type 4
9ED3  09                 string size (9)
9ED4  6166666563746564+  "affected"
9EDC  00                 "\0"
                         const [3]: "affected"
9EDD  04                 const type 4
9EDE  09                 string size (9)
9EDF  6275666654797065+  "buffType"
9EE7  00                 "\0"
                         const [4]: "buffType"
9EE8  04                 const type 4
9EE9  09                 string size (9)
9EEA  42545F54494D4552+  "BT_TIMER"
9EF2  00                 "\0"
                         const [5]: "BT_TIMER"
9EF3  01                 const type 3
9EF4  65770E40           const [6]: (1074689893)
9EF8  04                 const type 4
9EF9  07                 string size (7)
9EFA  6D4F776E657200     "mOwner\0"
                         const [7]: "mOwner"
9F01  04                 const type 4
9F02  0C                 string size (12)
9F03  6162696C69747954+  "abilityT"
9F0B  79706500           "ype\0"
                         const [8]: "abilityType"
9F0F  01                 const type 3
9F10  652CB3E2           const [9]: (-491574171)
9F14  04                 const type 4
9F15  09                 string size (9)
9F16  6275666644617461+  "buffData"
9F1E  00                 "\0"
                         const [10]: "buffData"
9F1F  01                 const type 3
9F20  D6134F58           const [11]: (1481577430)
9F24  01                 const type 3
9F25  1FD0B58D           const [12]: (-1917464545)
9F29  01                 const type 3
9F2A  59AC7869           const [13]: (1769516121)
9F2E  01                 const type 3
9F2F  DD8258DE           const [14]: (-564624675)
9F33  01                 const type 3
9F34  D953748F           const [15]: (-1888201767)
9F38  01                 const type 3
9F39  0567E793           const [16]: (-1813551355)
9F3D  01                 const type 3
9F3E  0125A76D           const [17]: (1839670529)
9F42  03                 const type 3
9F43  00000000           const [18]: (0)
9F47  01                 const type 3
9F48  025A115A           const [19]: (1511086594)
9F4C  01                 const type 3
9F4D  0344B180           const [20]: (-2135866365)
9F51  01                 const type 3
9F52  EA911120           const [21]: (538022378)
9F56  01                 const type 3
9F57  FFF9DE4C           const [22]: (1289681407)
9F5B  01                 const type 3
9F5C  61AF33EA           const [23]: (-365711519)
                         * functions:
9F60  00                 sizep (0)
                         * lines:
9F62  01                 sizelineinfo (161)
                         [pc] (line)
9F63  0E                 [001] (14)
9F64  06                 [002] (14)
9F65  00                 [003] (14)
9F66  00                 [004] (15)
9F67  0E                 [005] (16)
9F68  06                 [006] (16)
9F69  00                 [007] (16)
9F6A  00                 [008] (16)
9F6B  0E                 [009] (17)
9F6C  06                 [010] (17)
9F6D  00                 [011] (17)
9F6E  00                 [012] (18)
9F6F  0F                 [013] (18)
9F70  06                 [014] (18)
9F71  00                 [015] (18)
9F72  00                 [016] (18)
9F73  10                 [017] (19)
9F74  06                 [018] (19)
9F75  00                 [019] (19)
9F76  00                 [020] (19)
9F77  10                 [021] (19)
9F78  06                 [022] (21)
9F79  00                 [023] (21)
9F7A  00                 [024] (23)
9F7B  10                 [025] (23)
9F7C  06                 [026] (24)
9F7D  00                 [027] (24)
9F7E  00                 [028] (24)
9F7F  10                 [029] (24)
9F80  06                 [030] (24)
9F81  00                 [031] (26)
9F82  00                 [032] (26)
9F83  11                 [033] (26)
9F84  06                 [034] (26)
9F85  00                 [035] (28)
9F86  00                 [036] (28)
9F87  11                 [037] (29)
9F88  06                 [038] (29)
9F89  00                 [039] (30)
9F8A  00                 [040] (30)
9F8B  11                 [041] (30)
9F8C  06                 [042] (30)
9F8D  00                 [043] (30)
9F8E  00                 [044] (31)
9F8F  12                 [045] (31)
9F90  06                 [046] (31)
9F91  00                 [047] (34)
9F92  00                 [048] (35)
9F93  12                 [049] (35)
9F94  06                 [050] (35)
9F95  00                 [051] (35)
9F96  00                 [052] (35)
9F97  12                 [053] (36)
9F98  06                 [054] (36)
9F99  00                 [055] (36)
9F9A  00                 [056] (40)
9F9B  12                 [057] (40)
9F9C  06                 [058] (40)
9F9D  00                 [059] (41)
9F9E  00                 [060] (41)
9F9F  12                 [061] (41)
9FA0  06                 [062] (41)
9FA1  00                 [063] (41)
9FA2  00                 [064] (42)
9FA3  13                 [065] (42)
9FA4  06                 [066] (42)
9FA5  00                 [067] (42)
9FA6  00                 [068] (43)
9FA7  13                 [069] (43)
9FA8  06                 [070] (43)
9FA9  00                 [071] (43)
9FAA  00                 [072] (43)
9FAB  13                 [073] (43)
9FAC  06                 [074] (44)
9FAD  00                 [075] (44)
9FAE  00                 [076] (44)
9FAF  13                 [077] (44)
9FB0  06                 [078] (46)
9FB1  00                 [079] (46)
9FB2  00                 [080] (46)
9FB3  13                 [081] (47)
9FB4  06                 [082] (47)
9FB5  00                 [083] (47)
9FB6  00                 [084] (47)
9FB7  15                 [085] (47)
9FB8  06                 [086] (47)
9FB9  00                 [087] (50)
9FBA  00                 [088] (50)
9FBB  15                 [089] (50)
9FBC  06                 [090] (51)
9FBD  00                 [091] (52)
9FBE  00                 [092] (52)
9FBF  17                 [093] (52)
9FC0  06                 [094] (52)
9FC1  00                 [095] (52)
9FC2  00                 [096] (53)
9FC3  17                 [097] (53)
9FC4  06                 [098] (53)
9FC5  00                 [099] (53)
9FC6  00                 [100] (53)
9FC7  18                 [101] (56)
9FC8  06                 [102] (56)
9FC9  00                 [103] (56)
9FCA  00                 [104] (56)
9FCB  18                 [105] (56)
9FCC  06                 [106] (57)
9FCD  00                 [107] (57)
9FCE  00                 [108] (57)
9FCF  18                 [109] (57)
9FD0  06                 [110] (57)
9FD1  00                 [111] (58)
9FD2  00                 [112] (58)
9FD3  18                 [113] (59)
9FD4  06                 [114] (60)
9FD5  00                 [115] (60)
9FD6  00                 [116] (60)
9FD7  18                 [117] (60)
9FD8  06                 [118] (60)
9FD9  00                 [119] (61)
9FDA  00                 [120] (61)
9FDB  1A                 [121] (61)
9FDC  06                 [122] (61)
9FDD  00                 [123] (61)
9FDE  00                 [124] (61)
9FDF  1A                 [125] (62)
9FE0  06                 [126] (62)
9FE1  00                 [127] (62)
9FE2  00                 [128] (62)
9FE3  1A                 [129] (62)
9FE4  06                 [130] (62)
9FE5  00                 [131] (62)
9FE6  00                 [132] (62)
9FE7  1A                 [133] (62)
9FE8  06                 [134] (63)
9FE9  00                 [135] (63)
9FEA  00                 [136] (63)
9FEB  1C                 [137] (63)
9FEC  06                 [138] (63)
9FED  00                 [139] (65)
9FEE  00                 [140] (65)
9FEF  1C                 [141] (65)
9FF0  06                 [142] (65)
9FF1  00                 [143] (65)
9FF2  00                 [144] (65)
9FF3  1D                 [145] (65)
9FF4  06                 [146] (65)
9FF5  00                 [147] (65)
9FF6  00                 [148] (65)
9FF7  1D                 [149] (66)
9FF8  06                 [150] (69)
9FF9  00                 [151] (69)
9FFA  00                 [152] (69)
9FFB  1E                 [153] (69)
9FFC  06                 [154] (69)
9FFD  00                 [155] (69)
9FFE  00                 [156] (72)
9FFF  1E                 [157] (72)
A000  06                 [158] (72)
A001  00                 [159] (72)
A002  00                 [160] (72)
A003  1E                 [161] (74)
                         * locals:
A1E7  00                 sizelocvars (0)
                         * upvalues:
A1E8  00                 sizeupvalues (0)
                         ** end of function **

                         
A1E9                     ** function [24] definition (level 2)
                         ** start of function **
A1E9  00                 string size (0)
                         source name: (none)
A1EB  0C                 line defined (1612)
A1EC  BD                 last line defined (1725)
A1ED  0D                 nups (6)
A1EE  06                 numparams (1)
A1EF  01                 is_vararg (0)
A1F0  00                 maxstacksize (21)
                         * code:
A1F3  02                 sizecode (268)
A1F4  5D000000           [001] getglobal  1   0        ; _T
A1F8  4E40C000           [002] gettable   1   1   257  ; -222192209
A1FC  62408000           [003] call       1   1   1  
A200  5D000000           [004] getglobal  1   0        ; _T
A204  4E80C000           [005] gettable   1   1   258  ; -1365438321
A208  62408000           [006] call       1   1   1  
A20C  5DC00000           [007] getglobal  1   3        ; gGameRules
A210  6400C100           [008] self       1   1   260  ; -2029400442
A214  62800001           [009] call       1   2   2  
A218  9D400100           [010] getglobal  2   5        ; 1074689893
A21C  D2008000           [011] move       3   1      
A220  A2800001           [012] call       2   2   2  
A224  98400000           [013] test       2       1    ; to [15] if false
A228  1AC00180           [014] jmp        8            ; to [23]
A22C  A480C100           [015] self       2   1   262  ; 1167009705
A230  19C10100           [016] loadk      4   7        ; "HideAbilityDots"
A234  59010200           [017] loadk      5   8        ; ""
A238  A2400002           [018] call       2   4   1  
A23C  A480C100           [019] self       2   1   262  ; 1167009705
A240  19410200           [020] loadk      4   9        ; "HideAffinity"
A244  59010200           [021] loadk      5   8        ; ""
A248  A2400002           [022] call       2   4   1  
A24C  9D800200           [023] getglobal  2   10       ; mOwner
A250  A4C04201           [024] self       2   2   267  ; 188678183
A254  A2800001           [025] call       2   2   2  
A258  98400000           [026] test       2       1    ; to [28] if false
A25C  1A000080           [027] jmp        1            ; to [29]
A260  1E008000           [028] return     0   1      
A264  A4004300           [029] self       2   0   268  ; -564624675
A268  A2800001           [030] call       2   2   2  
A26C  DD400100           [031] getglobal  3   5        ; 1074689893
A270  12010001           [032] move       4   2      
A274  E2800001           [033] call       3   2   2  
A278  D8000000           [034] test       3       0    ; to [36] if true
A27C  1A000080           [035] jmp        1            ; to [37]
A280  1E008000           [036] return     0   1      
A284  E4404301           [037] self       3   2   269  ; -1888201767
A288  E2800001           [038] call       3   2   2  
A28C  1D410100           [039] getglobal  4   5        ; 1074689893
A290  52018001           [040] move       5   3      
A294  22810001           [041] call       4   2   2  
A298  18010000           [042] test       4       0    ; to [44] if true
A29C  1A800080           [043] jmp        3            ; to [47]
A2A0  24814301           [044] self       4   2   270  ; -1813551355
A2A4  22810001           [045] call       4   2   2  
A2A8  D2000002           [046] move       3   4      
A2AC  1D410100           [047] getglobal  4   5        ; 1074689893
A2B0  52018001           [048] move       5   3      
A2B4  22810001           [049] call       4   2   2  
A2B8  18010000           [050] test       4       0    ; to [52] if true
A2BC  1A000080           [051] jmp        1            ; to [53]
A2C0  1E008000           [052] return     0   1      
A2C4  24C1C301           [053] self       4   3   271  ; -1917464545
A2C8  22810001           [054] call       4   2   2  
A2CC  24014402           [055] self       4   4   272  ; 1769516121
A2D0  22810001           [056] call       4   2   2  
A2D4  24414402           [057] self       4   4   273  ; 1722612532
A2D8  22810001           [058] call       4   2   2  
A2DC  6481C401           [059] self       5   3   274  ; 1839670529
A2E0  62810001           [060] call       5   2   2  
A2E4  92010000           [061] move       6   0      
A2E8  DD410100           [062] getglobal  7   5        ; 1074689893
A2EC  12020003           [063] move       8   6      
A2F0  E2810001           [064] call       7   2   2  
A2F4  D8010000           [065] test       7       0    ; to [67] if true
A2F8  1A000080           [066] jmp        1            ; to [68]
A2FC  1E008000           [067] return     0   1      
A300  E4C14403           [068] self       7   6   275  ; 1445902558
A304  53020000           [069] getupval   9   0      
A308  9D020500           [070] getglobal  10  20       ; -332969190
A30C  D9420500           [071] loadk      11  21       ; "TENNO"
A310  A2020001           [072] call       10  2   0  
A314  E2410000           [073] call       7   0   1  
A318  DD810500           [074] getglobal  7   22       ; gRegion
A31C  E4C1C503           [075] self       7   7   279  ; -774964848
A320  E2810001           [076] call       7   2   2  
A324  E401C603           [077] self       7   7   280  ; -1856812242
A328  52020003           [078] move       9   6      
A32C  E2418001           [079] call       7   3   1  
A330  E4414603           [080] self       7   6   281  ; 1992436207
A334  64824603           [081] self       9   6   282  ; 945541886
A338  62020001           [082] call       9   2   0  
A33C  E2410000           [083] call       7   0   1  
A340  DDC10600           [084] getglobal  7   27       ; RequireValidPosture
A344  D8010000           [085] test       7       0    ; to [87] if true
A348  1AC00080           [086] jmp        4            ; to [91]
A34C  E4014703           [087] self       7   6   284  ; -452063099
A350  5D420700           [088] getglobal  9   29       ; ValidNpcPosture
A354  97020000           [089] loadbool   10  0   0    ; false
A358  E2410002           [090] call       7   4   1  
A35C  DD810500           [091] getglobal  7   22       ; gRegion
A360  E481C703           [092] self       7   7   286  ; -1456226250
A364  E2810001           [093] call       7   2   2  
A368  CEC1C703           [094] gettable   7   7   287  ; "postProcess"
A36C  24024800           [095] self       8   0   288  ; -1201586349
A370  22820001           [096] call       8   2   2  
A374  18020000           [097] test       8       0    ; to [99] if true
A378  1A800080           [098] jmp        3            ; to [102]
A37C  0E42C803           [099] gettable   8   7   289  ; "viewShake"
A380  53028000           [100] getupval   9   1      
A384  0C420291           [101] settable   8   290 9    ; "mShakeSpeed"
A388  24C24303           [102] self       8   6   271  ; -1917464545
A38C  22820001           [103] call       8   2   2  
A390  24024404           [104] self       8   8   272  ; 1769516121
A394  22820001           [105] call       8   2   2  
A398  5D420100           [106] getglobal  9   5        ; 1074689893
A39C  92020004           [107] move       10  8      
A3A0  62820001           [108] call       9   2   2  
A3A4  58020000           [109] test       9       0    ; to [111] if true
A3A8  1A000080           [110] jmp        1            ; to [112]
A3AC  1E008000           [111] return     0   1      
A3B0  64C24804           [112] self       9   8   291  ; 942108171
A3B4  D2020002           [113] move       11  4      
A3B8  62428001           [114] call       9   3   1  
A3BC  64024904           [115] self       9   8   292  ; -1209210956
A3C0  D2020002           [116] move       11  4      
A3C4  62428001           [117] call       9   3   1  
A3C8  64424404           [118] self       9   8   273  ; 1722612532
A3CC  62820001           [119] call       9   2   2  
A3D0  A4824403           [120] self       10  6   274  ; 1839670529
A3D4  A2820001           [121] call       10  2   2  
A3D8  E4424903           [122] self       11  6   293  ; -231049143
A3DC  E2820001           [123] call       11  2   2  
A3E0  1D830900           [124] getglobal  12  38       ; 538022378
A3E4  59C30900           [125] loadk      13  39       ; 0
A3E8  22430001           [126] call       12  2   1  
A3EC  1D430100           [127] getglobal  12  5        ; 1074689893
A3F0  52030004           [128] move       13  8      
A3F4  22830001           [129] call       12  2   2  
A3F8  18430000           [130] test       12      1    ; to [132] if false
A3FC  1A800E80           [131] jmp        59           ; to [191]
fail op	21
A400  15408293           [132] concat     0   295 9  
A404  1A000E80           [133] jmp        57           ; to [191]
A408  1D430100           [134] getglobal  12  5        ; 1074689893
A40C  52030003           [135] move       13  6      
A410  22830001           [136] call       12  2   2  
A414  18430000           [137] test       12      1    ; to [139] if false
A418  1AC00C80           [138] jmp        52           ; to [191]
A41C  24034A03           [139] self       12  6   296  ; 1511086594
A420  22830001           [140] call       12  2   2  
A424  18430000           [141] test       12      1    ; to [143] if false
A428  1AC00B80           [142] jmp        48           ; to [191]
A42C  24034300           [143] self       12  0   268  ; -564624675
A430  22830001           [144] call       12  2   2  
fail op	35
A434  23000301           [145] close      0  
A438  1AC00A80           [146] jmp        44           ; to [191]
A43C  24434404           [147] self       12  8   273  ; 1722612532
A440  22830001           [148] call       12  2   2  
A444  52020006           [149] move       9   12     
A448  1D430A00           [150] getglobal  12  41       ; 1289681407
A44C  22838000           [151] call       12  1   2  
A450  5D830A00           [152] getglobal  13  42       ; npcTransferenceEnergyPerSecond
A454  04430306           [153] mul        12  12  13 
A458  4D028304           [154] sub        9   9   12 
A45C  24034904           [155] self       12  8   292  ; -1209210956
A460  92038004           [156] move       14  9      
A464  22438001           [157] call       12  3   1  
A468  24834403           [158] self       12  6   274  ; 1839670529
A46C  22830001           [159] call       12  2   2  
A470  92020006           [160] move       10  12     
A474  24434903           [161] self       12  6   293  ; -231049143
A478  22830001           [162] call       12  2   2  
A47C  D2020006           [163] move       11  12     
A480  24034800           [164] self       12  0   288  ; -1201586349
A484  22830001           [165] call       12  2   2  
A488  18030000           [166] test       12      0    ; to [168] if true
A48C  1A400180           [167] jmp        6            ; to [174]
A490  0E43C803           [168] gettable   12  7   289  ; "viewShake"
A494  53030001           [169] getupval   13  2      
A498  A4034B03           [170] self       14  6   300  ; -1769580043
A49C  A2830001           [171] call       14  2   2  
A4A0  44838306           [172] mul        13  13  14 
A4A4  0C438395           [173] settable   12  299 13   ; "mShakeAmbient"
A4A8  1D430100           [174] getglobal  12  5        ; 1074689893
A4AC  5D030000           [175] getglobal  13  0        ; _T
A4B0  4E43CB06           [176] gettable   13  13  301  ; "isEndingNpcControl"
A4B4  22830001           [177] call       12  2   2  
A4B8  18430000           [178] test       12      1    ; to [180] if false
A4BC  1A800180           [179] jmp        7            ; to [187]
A4C0  1D030000           [180] getglobal  12  0        ; _T
A4C4  0E434B06           [181] gettable   12  12  301  ; "isEndingNpcControl"
A4C8  18030000           [182] test       12      0    ; to [184] if true
A4CC  1A800080           [183] jmp        3            ; to [187]
A4D0  1D030000           [184] getglobal  12  0        ; _T
A4D4  0C83CB96           [185] settable   12  301 302  ; "isEndingNpcControl" 0
A4D8  1AC00080           [186] jmp        4            ; to [191]
A4DC  1D830900           [187] getglobal  12  38       ; 538022378
A4E0  59C30900           [188] loadk      13  39       ; 0
A4E4  22430001           [189] call       12  2   1  
A4E8  1AC0EF7F           [190] jmp        -64          ; to [127]
A4EC  1D430100           [191] getglobal  12  5        ; 1074689893
A4F0  52030001           [192] move       13  2      
A4F4  22830001           [193] call       12  2   2  
A4F8  18430000           [194] test       12      1    ; to [196] if false
A4FC  1AC01180           [195] jmp        72           ; to [268]
A500  24034800           [196] self       12  0   288  ; -1201586349
A504  22830001           [197] call       12  2   2  
A508  18030000           [198] test       12      0    ; to [200] if true
A50C  1AC00180           [199] jmp        8            ; to [208]
A510  1D830500           [200] getglobal  12  22       ; gRegion
A514  24834706           [201] self       12  12  286  ; -1456226250
A518  22830001           [202] call       12  2   2  
A51C  0EC34706           [203] gettable   12  12  287  ; "postProcess"
A520  4E434806           [204] gettable   13  12  289  ; "viewShake"
A524  4CC3C995           [205] settable   13  299 295  ; "mShakeAmbient" 0
A528  4E434806           [206] gettable   13  12  289  ; "viewShake"
A52C  4CC34B91           [207] settable   13  290 303  ; "mShakeSpeed" 0
A530  5D430100           [208] getglobal  13  5        ; 1074689893
A534  92038001           [209] move       14  3      
A538  62830001           [210] call       13  2   2  
A53C  58030000           [211] test       13      0    ; to [213] if true
A540  1A000A80           [212] jmp        41           ; to [254]
A544  64834301           [213] self       13  2   270  ; -1813551355
A548  62830001           [214] call       13  2   2  
A54C  92038002           [215] move       14  5      
A550  DD430100           [216] getglobal  15  5        ; 1074689893
A554  12040003           [217] move       16  6      
A558  E2830001           [218] call       15  2   2  
A55C  D8430000           [219] test       15      1    ; to [221] if false
A560  1A400180           [220] jmp        6            ; to [227]
A564  E4834403           [221] self       15  6   274  ; 1839670529
A568  E2830001           [222] call       15  2   2  
A56C  24044C03           [223] self       16  6   304  ; -365711519
A570  22840001           [224] call       16  2   2  
A574  83038407           [225] add        14  15  16 
A578  1AC00280           [226] jmp        12           ; to [239]
A57C  DD430100           [227] getglobal  15  5        ; 1074689893
A580  12048006           [228] move       16  13     
A584  E2830001           [229] call       15  2   2  
A588  D8430000           [230] test       15      1    ; to [232] if false
A58C  1A800180           [231] jmp        7            ; to [239]
fail op	35
A590  63C08006           [232] close      1  
A594  1A000180           [233] jmp        5            ; to [239]
A598  E483C406           [234] self       15  13  274  ; 1839670529
A59C  E2830001           [235] call       15  2   2  
A5A0  2404CC06           [236] self       16  13  304  ; -365711519
A5A4  22840001           [237] call       16  2   2  
A5A8  83038407           [238] add        14  15  16 
A5AC  D3038001           [239] getupval   15  3      
A5B0  12040001           [240] move       16  2      
A5B4  52048006           [241] move       17  13     
A5B8  92040007           [242] move       18  14     
A5BC  E2830002           [243] call       15  4   2  
A5C0  D2008007           [244] move       3   15     
A5C4  DD430100           [245] getglobal  15  5        ; 1074689893
A5C8  12048006           [246] move       16  13     
A5CC  E2830001           [247] call       15  2   2  
A5D0  D8030000           [248] test       15      0    ; to [250] if true
A5D4  1AC00080           [249] jmp        4            ; to [254]
A5D8  D3030002           [250] getupval   15  4      
A5DC  CE43CC07           [251] gettable   15  15  305  ; -623804443
A5E0  12048001           [252] move       16  3      
A5E4  E2430001           [253] call       15  2   1  
A5E8  E483CC01           [254] self       15  3   306  ; 970454089
A5EC  5DC40C00           [255] getglobal  17  51       ; 572299008
A5F0  99C40900           [256] loadk      18  39       ; 0
A5F4  D9040D00           [257] loadk      19  52       ; -51
A5F8  19C50900           [258] loadk      20  39       ; 0
A5FC  62840002           [259] call       17  4   2  
A600  43440405           [260] add        17  10  17 
A604  92048005           [261] move       18  11     
A608  E2430002           [262] call       15  4   1  
A60C  D3038002           [263] getupval   15  5      
A610  12040004           [264] move       16  8      
A614  52040003           [265] move       17  6      
A618  92048001           [266] move       18  3      
A61C  E2430002           [267] call       15  4   1  
A620  1E008000           [268] return     0   1      
                         * constants:
A624  35                 sizek (53)
A625  04                 const type 4
A626  03                 string size (3)
A627  5F5400             "_T\0"
                         const [0]: "_T"
A62A  01                 const type 3
A62B  AF9DC1F2           const [1]: (-222192209)
A62F  01                 const type 3
A630  8F109DAE           const [2]: (-1365438321)
A634  04                 const type 4
A635  0B                 string size (11)
A636  6747616D6552756C+  "gGameRul"
A63E  657300             "es\0"
                         const [3]: "gGameRules"
A641  01                 const type 3
A642  86CE0987           const [4]: (-2029400442)
A646  01                 const type 3
A647  65770E40           const [5]: (1074689893)
A64B  01                 const type 3
A64C  A9278F45           const [6]: (1167009705)
A650  04                 const type 4
A651  10                 string size (16)
A652  486964654162696C+  "HideAbil"
A65A  697479446F747300   "ityDots\0"
                         const [7]: "HideAbilityDots"
A662  04                 const type 4
A663  01                 string size (0)
                         const [8]: ""
A665  04                 const type 4
A666  0D                 string size (13)
A667  4869646541666669+  "HideAffi"
A66F  6E69747900         "nity\0"
                         const [9]: "HideAffinity"
A674  04                 const type 4
A675  07                 string size (7)
A676  6D4F776E657200     "mOwner\0"
                         const [10]: "mOwner"
A67D  01                 const type 3
A67E  27003F0B           const [11]: (188678183)
A682  01                 const type 3
A683  DD8258DE           const [12]: (-564624675)
A687  01                 const type 3
A688  D953748F           const [13]: (-1888201767)
A68C  01                 const type 3
A68D  0567E793           const [14]: (-1813551355)
A691  01                 const type 3
A692  1FD0B58D           const [15]: (-1917464545)
A696  01                 const type 3
A697  59AC7869           const [16]: (1769516121)
A69B  01                 const type 3
A69C  34FBAC66           const [17]: (1722612532)
A6A0  01                 const type 3
A6A1  0125A76D           const [18]: (1839670529)
A6A5  01                 const type 3
A6A6  DEB82E56           const [19]: (1445902558)
A6AA  01                 const type 3
A6AB  1A4B27EC           const [20]: (-332969190)
A6AF  04                 const type 4
A6B0  06                 string size (6)
A6B1  54454E4E4F00       "TENNO\0"
                         const [21]: "TENNO"
A6B7  04                 const type 4
A6B8  08                 string size (8)
A6B9  67526567696F6E00   "gRegion\0"
                         const [22]: "gRegion"
A6C1  01                 const type 3
A6C2  90F9CED1           const [23]: (-774964848)
A6C6  01                 const type 3
A6C7  2E4B5391           const [24]: (-1856812242)
A6CB  01                 const type 3
A6CC  EF29C276           const [25]: (1992436207)
A6D0  01                 const type 3
A6D1  FED25B38           const [26]: (945541886)
A6D5  04                 const type 4
A6D6  14                 string size (20)
A6D7  5265717569726556+  "RequireV"
A6DF  616C6964506F7374+  "alidPost"
A6E7  75726500           "ure\0"
                         const [27]: "RequireValidPosture"
A6EB  01                 const type 3
A6EC  85100EE5           const [28]: (-452063099)
A6F0  04                 const type 4
A6F1  10                 string size (16)
A6F2  56616C69644E7063+  "ValidNpc"
A6FA  506F737475726500   "Posture\0"
                         const [29]: "ValidNpcPosture"
A702  01                 const type 3
A703  36C033A9           const [30]: (-1456226250)
A707  04                 const type 4
A708  0C                 string size (12)
A709  706F737450726F63+  "postProc"
A711  65737300           "ess\0"
                         const [31]: "postProcess"
A715  01                 const type 3
A716  533F61B8           const [32]: (-1201586349)
A71A  04                 const type 4
A71B  0A                 string size (10)
A71C  766965775368616B+  "viewShak"
A724  6500               "e\0"
                         const [33]: "viewShake"
A726  04                 const type 4
A727  0C                 string size (12)
A728  6D5368616B655370+  "mShakeSp"
A730  65656400           "eed\0"
                         const [34]: "mShakeSpeed"
A734  01                 const type 3
A735  0B6E2738           const [35]: (942108171)
A739  01                 const type 3
A73A  B4E7ECB7           const [36]: (-1209210956)
A73E  01                 const type 3
A73F  49783AF2           const [37]: (-231049143)
A743  01                 const type 3
A744  EA911120           const [38]: (538022378)
A748  03                 const type 3
A749  00000000           const [39]: (0)
A74D  01                 const type 3
A74E  025A115A           const [40]: (1511086594)
A752  01                 const type 3
A753  FFF9DE4C           const [41]: (1289681407)
A757  04                 const type 4
A758  1F                 string size (31)
A759  6E70635472616E73+  "npcTrans"
A761  666572656E636545+  "ferenceE"
A769  6E65726779506572+  "nergyPer"
A771  5365636F6E6400     "Second\0"
                         const [42]: "npcTransferenceEnergyPerSecond"
A778  04                 const type 4
A779  0E                 string size (14)
A77A  6D5368616B65416D+  "mShakeAm"
A782  6269656E7400       "bient\0"
                         const [43]: "mShakeAmbient"
A788  01                 const type 3
A789  F5598696           const [44]: (-1769580043)
A78D  04                 const type 4
A78E  13                 string size (19)
A78F  6973456E64696E67+  "isEnding"
A797  4E7063436F6E7472+  "NpcContr"
A79F  6F6C00             "ol\0"
                         const [45]: "isEndingNpcControl"
A7A2  01                 const type 3
A7A3  00000000           const [46]: (0)
A7A7  03                 const type 3
A7A8  0000803F           const [47]: (0)
A7AC  01                 const type 3
A7AD  61AF33EA           const [48]: (-365711519)
A7B1  01                 const type 3
A7B2  E57FD1DA           const [49]: (-623804443)
A7B6  01                 const type 3
A7B7  49F4D739           const [50]: (970454089)
A7BB  01                 const type 3
A7BC  00971C22           const [51]: (572299008)
A7C0  03                 const type 3
A7C1  CDCCCC3D           const [52]: (-51)
                         * functions:
A7C5  00                 sizep (0)
                         * lines:
A7C7  02                 sizelineinfo (268)
                         [pc] (line)
A7C8  4E                 [001] (78)
A7C9  06                 [002] (78)
A7CA  00                 [003] (78)
A7CB  00                 [004] (79)
A7CC  4E                 [005] (79)
A7CD  06                 [006] (79)
A7CE  00                 [007] (81)
A7CF  00                 [008] (81)
A7D0  4E                 [009] (81)
A7D1  06                 [010] (82)
A7D2  00                 [011] (82)
A7D3  00                 [012] (82)
A7D4  4F                 [013] (82)
A7D5  06                 [014] (82)
A7D6  00                 [015] (83)
A7D7  00                 [016] (83)
A7D8  4F                 [017] (83)
A7D9  06                 [018] (83)
A7DA  00                 [019] (84)
A7DB  00                 [020] (84)
A7DC  4F                 [021] (84)
A7DD  06                 [022] (84)
A7DE  00                 [023] (88)
A7DF  00                 [024] (88)
A7E0  51                 [025] (88)
A7E1  06                 [026] (88)
A7E2  00                 [027] (88)
A7E3  00                 [028] (89)
A7E4  51                 [029] (92)
A7E5  06                 [030] (92)
A7E6  00                 [031] (93)
A7E7  00                 [032] (93)
A7E8  51                 [033] (93)
A7E9  06                 [034] (93)
A7EA  00                 [035] (93)
A7EB  00                 [036] (94)
A7EC  52                 [037] (97)
A7ED  06                 [038] (97)
A7EE  00                 [039] (98)
A7EF  00                 [040] (98)
A7F0  52                 [041] (98)
A7F1  06                 [042] (98)
A7F2  00                 [043] (98)
A7F3  00                 [044] (99)
A7F4  52                 [045] (99)
A7F5  06                 [046] (99)
A7F6  00                 [047] (101)
A7F7  00                 [048] (101)
A7F8  52                 [049] (101)
A7F9  06                 [050] (101)
A7FA  00                 [051] (101)
A7FB  00                 [052] (102)
A7FC  52                 [053] (105)
A7FD  06                 [054] (105)
A7FE  00                 [055] (105)
A7FF  00                 [056] (105)
A800  53                 [057] (105)
A801  06                 [058] (105)
A802  00                 [059] (106)
A803  00                 [060] (106)
A804  53                 [061] (107)
A805  06                 [062] (109)
A806  00                 [063] (109)
A807  00                 [064] (109)
A808  53                 [065] (109)
A809  06                 [066] (109)
A80A  00                 [067] (110)
A80B  00                 [068] (113)
A80C  53                 [069] (113)
A80D  06                 [070] (113)
A80E  00                 [071] (113)
A80F  00                 [072] (113)
A810  54                 [073] (113)
A811  06                 [074] (114)
A812  00                 [075] (114)
A813  00                 [076] (114)
A814  54                 [077] (114)
A815  06                 [078] (114)
A816  00                 [079] (114)
A817  00                 [080] (116)
A818  54                 [081] (116)
A819  06                 [082] (116)
A81A  00                 [083] (116)
A81B  00                 [084] (118)
A81C  54                 [085] (118)
A81D  06                 [086] (118)
A81E  00                 [087] (119)
A81F  00                 [088] (119)
A820  58                 [089] (119)
A821  06                 [090] (119)
A822  00                 [091] (122)
A823  00                 [092] (122)
A824  58                 [093] (122)
A825  06                 [094] (122)
A826  00                 [095] (123)
A827  00                 [096] (123)
A828  58                 [097] (123)
A829  06                 [098] (123)
A82A  00                 [099] (124)
A82B  00                 [100] (124)
A82C  58                 [101] (124)
A82D  06                 [102] (127)
A82E  00                 [103] (127)
A82F  00                 [104] (127)
A830  58                 [105] (127)
A831  06                 [106] (-128)
A832  00                 [107] (-128)
A833  00                 [108] (-128)
A834  59                 [109] (-128)
A835  06                 [110] (-128)
A836  00                 [111] (-127)
A837  00                 [112] (-125)
A838  5C                 [113] (-125)
A839  06                 [114] (-125)
A83A  00                 [115] (-124)
A83B  00                 [116] (-124)
A83C  5C                 [117] (-124)
A83D  06                 [118] (-123)
A83E  00                 [119] (-123)
A83F  00                 [120] (-121)
A840  5D                 [121] (-121)
A841  06                 [122] (-120)
A842  00                 [123] (-120)
A843  00                 [124] (-118)
A844  5D                 [125] (-118)
A845  06                 [126] (-118)
A846  00                 [127] (-116)
A847  00                 [128] (-116)
A848  5D                 [129] (-116)
A849  06                 [130] (-116)
A84A  00                 [131] (-116)
A84B  00                 [132] (-115)
A84C  5D                 [133] (-115)
A84D  06                 [134] (-114)
A84E  00                 [135] (-114)
A84F  00                 [136] (-114)
A850  5D                 [137] (-114)
A851  06                 [138] (-114)
A852  00                 [139] (-113)
A853  00                 [140] (-113)
A854  5E                 [141] (-113)
A855  06                 [142] (-113)
A856  00                 [143] (-112)
A857  00                 [144] (-112)
A858  61                 [145] (-112)
A859  06                 [146] (-112)
A85A  00                 [147] (-110)
A85B  00                 [148] (-110)
A85C  61                 [149] (-110)
A85D  06                 [150] (-109)
A85E  00                 [151] (-109)
A85F  00                 [152] (-109)
A860  62                 [153] (-109)
A861  06                 [154] (-109)
A862  00                 [155] (-108)
A863  00                 [156] (-108)
A864  62                 [157] (-108)
A865  06                 [158] (-106)
A866  00                 [159] (-106)
A867  00                 [160] (-106)
A868  62                 [161] (-105)
A869  06                 [162] (-105)
A86A  00                 [163] (-105)
A86B  00                 [164] (-103)
A86C  62                 [165] (-103)
A86D  06                 [166] (-103)
A86E  00                 [167] (-103)
A86F  00                 [168] (-102)
A870  62                 [169] (-102)
A871  06                 [170] (-102)
A872  00                 [171] (-102)
A873  00                 [172] (-102)
A874  63                 [173] (-102)
A875  06                 [174] (-99)
A876  00                 [175] (-99)
A877  00                 [176] (-99)
A878  63                 [177] (-99)
A879  06                 [178] (-99)
A87A  00                 [179] (-99)
A87B  00                 [180] (-99)
A87C  63                 [181] (-99)
A87D  06                 [182] (-99)
A87E  00                 [183] (-99)
A87F  00                 [184] (-98)
A880  65                 [185] (-98)
A881  06                 [186] (-97)
A882  00                 [187] (-95)
A883  00                 [188] (-95)
A884  65                 [189] (-95)
A885  06                 [190] (-95)
A886  00                 [191] (-92)
A887  00                 [192] (-92)
A888  65                 [193] (-92)
A889  06                 [194] (-92)
A88A  00                 [195] (-92)
A88B  00                 [196] (-91)
A88C  65                 [197] (-91)
A88D  06                 [198] (-91)
A88E  00                 [199] (-91)
A88F  00                 [200] (-90)
A890  65                 [201] (-90)
A891  06                 [202] (-90)
A892  00                 [203] (-90)
A893  00                 [204] (-89)
A894  66                 [205] (-89)
A895  06                 [206] (-88)
A896  00                 [207] (-88)
A897  00                 [208] (-86)
A898  69                 [209] (-86)
A899  06                 [210] (-86)
A89A  00                 [211] (-86)
A89B  00                 [212] (-86)
A89C  69                 [213] (-85)
A89D  06                 [214] (-85)
A89E  00                 [215] (-84)
A89F  00                 [216] (-83)
A8A0  69                 [217] (-83)
A8A1  06                 [218] (-83)
A8A2  00                 [219] (-83)
A8A3  00                 [220] (-83)
A8A4  69                 [221] (-82)
A8A5  06                 [222] (-82)
A8A6  00                 [223] (-82)
A8A7  00                 [224] (-82)
A8A8  69                 [225] (-82)
A8A9  06                 [226] (-82)
A8AA  00                 [227] (-81)
A8AB  00                 [228] (-81)
A8AC  69                 [229] (-81)
A8AD  06                 [230] (-81)
A8AE  00                 [231] (-81)
A8AF  00                 [232] (-81)
A8B0  6A                 [233] (-81)
A8B1  06                 [234] (-80)
A8B2  00                 [235] (-80)
A8B3  00                 [236] (-80)
A8B4  6A                 [237] (-80)
A8B5  06                 [238] (-80)
A8B6  00                 [239] (-77)
A8B7  00                 [240] (-77)
A8B8  6B                 [241] (-77)
A8B9  06                 [242] (-77)
A8BA  00                 [243] (-77)
A8BB  00                 [244] (-77)
A8BC  6D                 [245] (-76)
A8BD  06                 [246] (-76)
A8BE  00                 [247] (-76)
A8BF  00                 [248] (-76)
A8C0  6D                 [249] (-76)
A8C1  06                 [250] (-75)
A8C2  00                 [251] (-75)
A8C3  00                 [252] (-75)
A8C4  6D                 [253] (-75)
A8C5  06                 [254] (-71)
A8C6  00                 [255] (-71)
A8C7  00                 [256] (-71)
A8C8  6D                 [257] (-71)
A8C9  06                 [258] (-71)
A8CA  00                 [259] (-71)
A8CB  00                 [260] (-71)
A8CC  6D                 [261] (-71)
A8CD  06                 [262] (-71)
A8CE  00                 [263] (-69)
A8CF  00                 [264] (-69)
A8D0  6E                 [265] (-69)
A8D1  06                 [266] (-69)
A8D2  00                 [267] (-69)
A8D3  00                 [268] (-67)
                         * locals:
ABF8  00                 sizelocvars (0)
                         * upvalues:
ABF9  00                 sizeupvalues (0)
                         ** end of function **

                         
ABFA                     ** function [25] definition (level 2)
                         ** start of function **
ABFA  00                 string size (0)
                         source name: (none)
ABFC  0D                 line defined (1727)
ABFD  C1                 last line defined (1729)
ABFE  0D                 nups (1)
ABFF  01                 numparams (5)
AC00  05                 is_vararg (0)
AC01  00                 maxstacksize (10)
                         * code:
AC03  07                 sizecode (7)
AC04  53010000           [1] getupval   5   0      
AC08  92010000           [2] move       6   0      
AC0C  D2018000           [3] move       7   1      
AC10  12020001           [4] move       8   2      
AC14  52028001           [5] move       9   3      
AC18  62418002           [6] call       5   5   1  
AC1C  1E008000           [7] return     0   1      
                         * constants:
AC20  00                 sizek (0)
                         * functions:
AC21  00                 sizep (0)
                         * lines:
AC22  07                 sizelineinfo (7)
                         [pc] (line)
AC23  C0                 [1] (-64)
AC24  06                 [2] (-64)
AC25  00                 [3] (-64)
AC26  00                 [4] (-64)
AC27  C0                 [5] (-64)
AC28  06                 [6] (-64)
AC29  00                 [7] (-63)
                         * locals:
AC3F  00                 sizelocvars (0)
                         * upvalues:
AC40  00                 sizeupvalues (0)
                         ** end of function **

                         
AC41                     ** function [26] definition (level 2)
                         ** start of function **
AC41  00                 string size (0)
                         source name: (none)
AC43  0D                 line defined (1731)
AC44  DC                 last line defined (1756)
AC45  0D                 nups (1)
AC46  01                 numparams (2)
AC47  02                 is_vararg (0)
AC48  00                 maxstacksize (9)
                         * code:
AC4A  37                 sizecode (55)
AC4B  9D000000           [01] getglobal  2   0        ; _T
AC4F  8C80C080           [02] settable   2   257 258  ; "InQuillsRoom" 1
AC53  9DC00000           [03] getglobal  2   3        ; 1074689893
AC57  DD000000           [04] getglobal  3   0        ; _T
AC5B  CE00C101           [05] gettable   3   3   260  ; "transferenceUmbra"
AC5F  A2800001           [06] call       2   2   2  
AC63  98000000           [07] test       2       0    ; to [9] if true
AC67  1A000080           [08] jmp        1            ; to [10]
AC6B  1E008000           [09] return     0   1      
AC6F  A4404100           [10] self       2   0   261  ; -1764426596
AC73  A2800001           [11] call       2   2   2  
AC77  DDC00000           [12] getglobal  3   3        ; 1074689893
AC7B  12010001           [13] move       4   2      
AC7F  E2800001           [14] call       3   2   2  
AC83  D8000000           [15] test       3       0    ; to [17] if true
AC87  1A000080           [16] jmp        1            ; to [18]
AC8B  1E008000           [17] return     0   1      
AC8F  E4804101           [18] self       3   2   262  ; -1813551355
AC93  E2800001           [19] call       3   2   2  
AC97  1DC10000           [20] getglobal  4   3        ; 1074689893
AC9B  52018001           [21] move       5   3      
AC9F  22810001           [22] call       4   2   2  
ACA3  18010000           [23] test       4       0    ; to [25] if true
ACA7  1A000080           [24] jmp        1            ; to [26]
ACAB  1E008000           [25] return     0   1      
ACAF  24C1C101           [26] self       4   3   263  ; -605089866
ACB3  22810001           [27] call       4   2   2  
ACB7  5DC10000           [28] getglobal  5   3        ; 1074689893
ACBB  9D010000           [29] getglobal  6   0        ; _T
ACBF  8E014103           [30] gettable   6   6   260  ; "transferenceUmbra"
ACC3  8E010103           [31] gettable   6   6   4  
ACC7  62810001           [32] call       5   2   2  
ACCB  58010000           [33] test       5       0    ; to [35] if true
ACCF  1A000080           [34] jmp        1            ; to [36]
ACD3  1E008000           [35] return     0   1      
ACD7  5D010000           [36] getglobal  5   0        ; _T
ACDB  4E01C102           [37] gettable   5   5   260  ; "transferenceUmbra"
ACDF  4E018102           [38] gettable   5   5   4  
ACE3  6401C202           [39] self       5   5   264  ; -1411785325
ACE7  62810001           [40] call       5   2   2  
ACEB  6441C202           [41] self       5   5   265  ; -1167676648
ACEF  62410001           [42] call       5   2   1  
ACF3  5D810200           [43] getglobal  5   10       ; 538022378
ACF7  99C10200           [44] loadk      6   11       ; 0
ACFB  62410001           [45] call       5   2   1  
ACFF  5D010000           [46] getglobal  5   0        ; _T
AD03  4E01C102           [47] gettable   5   5   260  ; "transferenceUmbra"
AD07  4E018102           [48] gettable   5   5   4  
AD0B  6401C202           [49] self       5   5   264  ; -1411785325
AD0F  62810001           [50] call       5   2   2  
AD13  6401C302           [51] self       5   5   268  ; 1038470555
AD17  D7018000           [52] loadbool   7   1   0    ; true
AD1B  13020000           [53] getupval   8   0      
AD1F  62410002           [54] call       5   4   1  
AD23  1E008000           [55] return     0   1      
                         * constants:
AD27  0D                 sizek (13)
AD28  04                 const type 4
AD29  03                 string size (3)
AD2A  5F5400             "_T\0"
                         const [0]: "_T"
AD2D  04                 const type 4
AD2E  0D                 string size (13)
AD2F  496E5175696C6C73+  "InQuills"
AD37  526F6F6D00         "Room\0"
                         const [1]: "InQuillsRoom"
AD3C  01                 const type 3
AD3D  01000000           const [2]: (1)
AD41  01                 const type 3
AD42  65770E40           const [3]: (1074689893)
AD46  04                 const type 4
AD47  12                 string size (18)
AD48  7472616E73666572+  "transfer"
AD50  656E6365556D6272+  "enceUmbr"
AD58  6100               "a\0"
                         const [4]: "transferenceUmbra"
AD5A  01                 const type 3
AD5B  9CFCD496           const [5]: (-1764426596)
AD5F  01                 const type 3
AD60  0567E793           const [6]: (-1813551355)
AD64  01                 const type 3
AD65  B60FEFDB           const [7]: (-605089866)
AD69  01                 const type 3
AD6A  93DDD9AB           const [8]: (-1411785325)
AD6E  01                 const type 3
AD6F  18AB66BA           const [9]: (-1167676648)
AD73  01                 const type 3
AD74  EA911120           const [10]: (538022378)
AD78  03                 const type 3
AD79  00000000           const [11]: (0)
AD7D  01                 const type 3
AD7E  9BCDE53D           const [12]: (1038470555)
                         * functions:
AD82  00                 sizep (0)
                         * lines:
AD83  37                 sizelineinfo (55)
                         [pc] (line)
AD84  C4                 [01] (-60)
AD85  06                 [02] (-60)
AD86  00                 [03] (-58)
AD87  00                 [04] (-58)
AD88  C4                 [05] (-58)
AD89  06                 [06] (-58)
AD8A  00                 [07] (-58)
AD8B  00                 [08] (-58)
AD8C  C6                 [09] (-57)
AD8D  06                 [10] (-54)
AD8E  00                 [11] (-54)
AD8F  00                 [12] (-53)
AD90  C6                 [13] (-53)
AD91  06                 [14] (-53)
AD92  00                 [15] (-53)
AD93  00                 [16] (-53)
AD94  C6                 [17] (-52)
AD95  06                 [18] (-49)
AD96  00                 [19] (-49)
AD97  00                 [20] (-48)
AD98  C6                 [21] (-48)
AD99  06                 [22] (-48)
AD9A  00                 [23] (-48)
AD9B  00                 [24] (-48)
AD9C  C6                 [25] (-47)
AD9D  06                 [26] (-44)
AD9E  00                 [27] (-44)
AD9F  00                 [28] (-43)
ADA0  C6                 [29] (-43)
ADA1  06                 [30] (-43)
ADA2  00                 [31] (-43)
ADA3  00                 [32] (-43)
ADA4  C7                 [33] (-43)
ADA5  06                 [34] (-43)
ADA6  00                 [35] (-42)
ADA7  00                 [36] (-39)
ADA8  CA                 [37] (-39)
ADA9  06                 [38] (-39)
ADAA  00                 [39] (-39)
ADAB  00                 [40] (-39)
ADAC  CA                 [41] (-39)
ADAD  06                 [42] (-39)
ADAE  00                 [43] (-38)
ADAF  00                 [44] (-38)
ADB0  CB                 [45] (-38)
ADB1  06                 [46] (-37)
ADB2  00                 [47] (-37)
ADB3  00                 [48] (-37)
ADB4  CB                 [49] (-37)
ADB5  06                 [50] (-37)
ADB6  00                 [51] (-37)
ADB7  00                 [52] (-37)
ADB8  CB                 [53] (-37)
ADB9  06                 [54] (-37)
ADBA  00                 [55] (-36)
                         * locals:
AE60  00                 sizelocvars (0)
                         * upvalues:
AE61  00                 sizeupvalues (0)
                         ** end of function **

                         
AE62                     ** function [27] definition (level 2)
                         ** start of function **
AE62  00                 string size (0)
                         source name: (none)
AE64  0D                 line defined (1758)
AE65  F5                 last line defined (1781)
AE66  0D                 nups (1)
AE67  01                 numparams (2)
AE68  02                 is_vararg (0)
AE69  00                 maxstacksize (9)
                         * code:
AE6B  2D                 sizecode (45)
AE6C  9D000000           [01] getglobal  2   0        ; _T
AE70  8C80C080           [02] settable   2   257 258  ; "InQuillsRoom" nil
AE74  9DC00000           [03] getglobal  2   3        ; 1074689893
AE78  DD000000           [04] getglobal  3   0        ; _T
AE7C  CE00C101           [05] gettable   3   3   260  ; "transferenceUmbra"
AE80  A2800001           [06] call       2   2   2  
AE84  98000000           [07] test       2       0    ; to [9] if true
AE88  1A000080           [08] jmp        1            ; to [10]
AE8C  1E008000           [09] return     0   1      
AE90  A440C100           [10] self       2   1   261  ; -1764426596
AE94  A2800001           [11] call       2   2   2  
AE98  DDC00000           [12] getglobal  3   3        ; 1074689893
AE9C  12010001           [13] move       4   2      
AEA0  E2800001           [14] call       3   2   2  
AEA4  D8000000           [15] test       3       0    ; to [17] if true
AEA8  1A000080           [16] jmp        1            ; to [18]
AEAC  1E008000           [17] return     0   1      
AEB0  E4804101           [18] self       3   2   262  ; -1813551355
AEB4  E2800001           [19] call       3   2   2  
AEB8  1DC10000           [20] getglobal  4   3        ; 1074689893
AEBC  52018001           [21] move       5   3      
AEC0  22810001           [22] call       4   2   2  
AEC4  18010000           [23] test       4       0    ; to [25] if true
AEC8  1A000080           [24] jmp        1            ; to [26]
AECC  1E008000           [25] return     0   1      
AED0  24C1C101           [26] self       4   3   263  ; -605089866
AED4  22810001           [27] call       4   2   2  
AED8  5DC10000           [28] getglobal  5   3        ; 1074689893
AEDC  9D010000           [29] getglobal  6   0        ; _T
AEE0  8E014103           [30] gettable   6   6   260  ; "transferenceUmbra"
AEE4  8E010103           [31] gettable   6   6   4  
AEE8  62810001           [32] call       5   2   2  
AEEC  58010000           [33] test       5       0    ; to [35] if true
AEF0  1A000080           [34] jmp        1            ; to [36]
AEF4  1E008000           [35] return     0   1      
AEF8  5D010000           [36] getglobal  5   0        ; _T
AEFC  4E01C102           [37] gettable   5   5   260  ; "transferenceUmbra"
AF00  4E018102           [38] gettable   5   5   4  
AF04  6401C202           [39] self       5   5   264  ; -1411785325
AF08  62810001           [40] call       5   2   2  
AF0C  6441C202           [41] self       5   5   265  ; 1038470555
AF10  D7010000           [42] loadbool   7   0   0    ; false
AF14  13020000           [43] getupval   8   0      
AF18  62410002           [44] call       5   4   1  
AF1C  1E008000           [45] return     0   1      
                         * constants:
AF20  0A                 sizek (10)
AF21  04                 const type 4
AF22  03                 string size (3)
AF23  5F5400             "_T\0"
                         const [0]: "_T"
AF26  04                 const type 4
AF27  0D                 string size (13)
AF28  496E5175696C6C73+  "InQuills"
AF30  526F6F6D00         "Room\0"
                         const [1]: "InQuillsRoom"
AF35  00                 const type 0
                         const [2]: nil
AF36  01                 const type 3
AF37  65770E40           const [3]: (1074689893)
AF3B  04                 const type 4
AF3C  12                 string size (18)
AF3D  7472616E73666572+  "transfer"
AF45  656E6365556D6272+  "enceUmbr"
AF4D  6100               "a\0"
                         const [4]: "transferenceUmbra"
AF4F  01                 const type 3
AF50  9CFCD496           const [5]: (-1764426596)
AF54  01                 const type 3
AF55  0567E793           const [6]: (-1813551355)
AF59  01                 const type 3
AF5A  B60FEFDB           const [7]: (-605089866)
AF5E  01                 const type 3
AF5F  93DDD9AB           const [8]: (-1411785325)
AF63  01                 const type 3
AF64  9BCDE53D           const [9]: (1038470555)
                         * functions:
AF68  00                 sizep (0)
                         * lines:
AF69  2D                 sizelineinfo (45)
                         [pc] (line)
AF6A  DF                 [01] (-33)
AF6B  06                 [02] (-33)
AF6C  00                 [03] (-31)
AF6D  00                 [04] (-31)
AF6E  DF                 [05] (-31)
AF6F  06                 [06] (-31)
AF70  00                 [07] (-31)
AF71  00                 [08] (-31)
AF72  E1                 [09] (-30)
AF73  06                 [10] (-27)
AF74  00                 [11] (-27)
AF75  00                 [12] (-26)
AF76  E1                 [13] (-26)
AF77  06                 [14] (-26)
AF78  00                 [15] (-26)
AF79  00                 [16] (-26)
AF7A  E1                 [17] (-25)
AF7B  06                 [18] (-22)
AF7C  00                 [19] (-22)
AF7D  00                 [20] (-21)
AF7E  E1                 [21] (-21)
AF7F  06                 [22] (-21)
AF80  00                 [23] (-21)
AF81  00                 [24] (-21)
AF82  E1                 [25] (-20)
AF83  06                 [26] (-17)
AF84  00                 [27] (-17)
AF85  00                 [28] (-16)
AF86  E1                 [29] (-16)
AF87  06                 [30] (-16)
AF88  00                 [31] (-16)
AF89  00                 [32] (-16)
AF8A  E2                 [33] (-16)
AF8B  06                 [34] (-16)
AF8C  00                 [35] (-15)
AF8D  00                 [36] (-12)
AF8E  E5                 [37] (-12)
AF8F  06                 [38] (-12)
AF90  00                 [39] (-12)
AF91  00                 [40] (-12)
AF92  E5                 [41] (-12)
AF93  06                 [42] (-12)
AF94  00                 [43] (-12)
AF95  00                 [44] (-12)
AF96  E6                 [45] (-11)
                         * locals:
B01E  00                 sizelocvars (0)
                         * upvalues:
B01F  00                 sizeupvalues (0)
                         ** end of function **

                         
B020                     ** function [28] definition (level 2)
                         ** start of function **
B020  00                 string size (0)
                         source name: (none)
B022  0D                 line defined (1783)
B023  B9                 last line defined (1849)
B024  0E                 nups (0)
B025  00                 numparams (1)
B026  01                 is_vararg (0)
B027  00                 maxstacksize (17)
                         * code:
B02A  01                 sizecode (181)
B02B  A4004000           [001] self       2   0   256  ; -1073689042
B02F  A2800001           [002] call       2   2   2  
B033  52000001           [003] move       1   2      
B037  9D400000           [004] getglobal  2   1        ; 1074689893
B03B  D2008000           [005] move       3   1      
B03F  A2800001           [006] call       2   2   2  
B043  98400000           [007] test       2       1    ; to [9] if false
B047  1A000080           [008] jmp        1            ; to [10]
B04B  1AC00080           [009] jmp        4            ; to [14]
B04F  9D800000           [010] getglobal  2   2        ; 538022378
B053  D9C00000           [011] loadk      3   3        ; 0
B057  A2400001           [012] call       2   2   1  
B05B  1A80FC7F           [013] jmp        -13          ; to [1]
B05F  9D000100           [014] getglobal  2   4        ; _T
B063  8E404101           [015] gettable   2   2   261  ; "transferenceUmbra"
fail op	35
B067  23804101           [016] close      0  
B06B  1A800080           [017] jmp        3            ; to [21]
B06F  9D000100           [018] getglobal  2   4        ; _T
B073  CB000000           [019] newtable   3   0   0    ; array=0, hash=0
B077  8CC08082           [020] settable   2   261 3    ; "transferenceUmbra"
B07B  9D000100           [021] getglobal  2   4        ; _T
B07F  8E404101           [022] gettable   2   2   261  ; "transferenceUmbra"
B083  E4C0C100           [023] self       3   1   263  ; -605089866
B087  E2800001           [024] call       3   2   2  
B08B  8C008001           [025] settable   2   3   0  
B08F  A400C200           [026] self       2   1   264  ; 1576942857
B093  17010000           [027] loadbool   4   0   0    ; false
B097  A2408001           [028] call       2   3   1  
B09B  A440C200           [029] self       2   1   265  ; 115701976
B09F  A2400001           [030] call       2   2   1  
B0A3  A480C200           [031] self       2   1   266  ; 606226066
B0A7  17010000           [032] loadbool   4   0   0    ; false
B0AB  A2408001           [033] call       2   3   1  
B0AF  A4C0C200           [034] self       2   1   267  ; -2013261060
B0B3  17010000           [035] loadbool   4   0   0    ; false
B0B7  A2408001           [036] call       2   3   1  
B0BB  A400C300           [037] self       2   1   268  ; -2113194289
B0BF  17018000           [038] loadbool   4   1   0    ; true
B0C3  A2408001           [039] call       2   3   1  
B0C7  A440C300           [040] self       2   1   269  ; -1544157541
B0CB  A2800001           [041] call       2   2   2  
B0CF  A4804301           [042] self       2   2   270  ; 808964080
B0D3  1DC10300           [043] getglobal  4   15       ; -332969190
B0D7  59010400           [044] loadk      5   16       ; "UmbraTransference"
B0DB  22810001           [045] call       4   2   2  
B0DF  5D410400           [046] getglobal  5   17       ; Engine
B0E3  4E81C402           [047] gettable   5   5   274  ; "DT_ANY"
B0E7  9D410400           [048] getglobal  6   17       ; Engine
B0EB  8EC14403           [049] gettable   6   6   275  ; "ANY_PART"
B0EF  DD410400           [050] getglobal  7   17       ; Engine
B0F3  CE01C503           [051] gettable   7   7   276  ; "DHT_NONE"
B0F7  19C20000           [052] loadk      8   3        ; 0
B0FB  A2408003           [053] call       2   7   1  
B0FF  9D800000           [054] getglobal  2   2        ; 538022378
B103  D9C00000           [055] loadk      3   3        ; 0
B107  A2400001           [056] call       2   2   1  
B10B  9D400500           [057] getglobal  2   21       ; gRegion
B10F  A4804501           [058] self       2   2   278  ; -1520831144
B113  A2800001           [059] call       2   2   2  
B117  98000000           [060] test       2       0    ; to [62] if true
B11B  1AC00480           [061] jmp        20           ; to [82]
B11F  E4C04500           [062] self       3   0   279  ; -47550432
B123  E2800001           [063] call       3   2   2  
B127  D8400000           [064] test       3       1    ; to [66] if false
B12B  1AC00380           [065] jmp        16           ; to [82]
B12F  E400C600           [066] self       3   1   280  ; -1764426596
B133  E2800001           [067] call       3   2   2  
B137  2441C601           [068] self       4   3   281  ; -1888201767
B13B  22810001           [069] call       4   2   2  
B13F  5D410500           [070] getglobal  5   21       ; gRegion
B143  6481C602           [071] self       5   5   282  ; -774964848
B147  62810001           [072] call       5   2   2  
B14B  64C1C602           [073] self       5   5   283  ; 537471347
B14F  62810001           [074] call       5   2   2  
B153  A401C702           [075] self       6   5   284  ; 1085792015
B157  24424702           [076] self       8   4   285  ; 196800914
B15B  22020001           [077] call       8   2   0  
B15F  A2810000           [078] call       6   0   2  
B163  E4814700           [079] self       7   0   286  ; 970454089
B167  52020003           [080] move       9   6      
B16B  E2418001           [081] call       7   3   1  
B16F  E4C1C700           [082] self       7   1   287  ; -717859730
B173  E2810001           [083] call       7   2   2  
B177  D8010000           [084] test       7       0    ; to [86] if true
B17B  1AC00280           [085] jmp        12           ; to [98]
B17F  E401C800           [086] self       7   1   288  ; -1917464545
B183  E2810001           [087] call       7   2   2  
B187  E441C803           [088] self       7   7   289  ; 1769516121
B18B  E2810001           [089] call       7   2   2  
B18F  1D420000           [090] getglobal  8   1        ; 1074689893
B193  52028003           [091] move       9   7      
B197  22820001           [092] call       8   2   2  
B19B  18420000           [093] test       8       1    ; to [95] if false
B19F  1A800080           [094] jmp        3            ; to [98]
B1A3  2482C803           [095] self       8   7   290  ; -828610723
B1A7  97028000           [096] loadbool   10  1   0    ; true
B1AB  22428001           [097] call       8   3   1  
B1AF  24024800           [098] self       8   0   288  ; -1917464545
B1B3  22820001           [099] call       8   2   2  
B1B7  64424804           [100] self       9   8   289  ; 1769516121
B1BB  62820001           [101] call       9   2   2  
B1BF  9D420000           [102] getglobal  10  1        ; 1074689893
B1C3  D2028004           [103] move       11  9      
B1C7  A2820001           [104] call       10  2   2  
B1CB  98020000           [105] test       10      0    ; to [107] if true
B1CF  1A800180           [106] jmp        7            ; to [114]
B1D3  9D820000           [107] getglobal  10  2        ; 538022378
B1D7  D9C20000           [108] loadk      11  3        ; 0
B1DB  A2420001           [109] call       10  2   1  
B1DF  A4424804           [110] self       10  8   289  ; 1769516121
B1E3  A2820001           [111] call       10  2   2  
B1E7  52020005           [112] move       9   10     
B1EB  1AC0FC7F           [113] jmp        -12          ; to [102]
B1EF  A4C2C804           [114] self       10  9   291  ; -343492726
B1F3  A2820001           [115] call       10  2   2  
B1F7  98420000           [116] test       10      1    ; to [118] if false
B1FB  1AC00080           [117] jmp        4            ; to [122]
B1FF  A4024900           [118] self       10  0   292  ; 1262724647
B203  2443C904           [119] self       12  9   293  ; 1634497718
B207  22030001           [120] call       12  2   0  
B20B  A2420000           [121] call       10  0   1  
B20F  9D420000           [122] getglobal  10  1        ; 1074689893
B213  D2028000           [123] move       11  1      
B217  A2820001           [124] call       10  2   2  
B21B  98420000           [125] test       10      1    ; to [127] if false
B21F  1A800A80           [126] jmp        43           ; to [170]
B223  A482C900           [127] self       10  1   294  ; 1511086594
B227  A2820001           [128] call       10  2   2  
B22B  98420000           [129] test       10      1    ; to [131] if false
B22F  1A800980           [130] jmp        39           ; to [170]
B233  A4824900           [131] self       10  0   294  ; 1511086594
B237  A2820001           [132] call       10  2   2  
B23B  98420000           [133] test       10      1    ; to [135] if false
B23F  1A800880           [134] jmp        35           ; to [170]
B243  98000000           [135] test       2       0    ; to [137] if true
B247  1AC00380           [136] jmp        16           ; to [153]
B24B  A4C2C900           [137] self       10  1   295  ; 263007870
B24F  A2820001           [138] call       10  2   2  
B253  98420000           [139] test       10      1    ; to [141] if false
B257  1AC00280           [140] jmp        12           ; to [153]
B25B  A482C700           [141] self       10  1   286  ; 970454089
B25F  24434700           [142] self       12  0   285  ; 196800914
B263  22830001           [143] call       12  2   2  
B267  5D030A00           [144] getglobal  13  40       ; 572299008
B26B  99C30000           [145] loadk      14  3        ; 0
B26F  D9430A00           [146] loadk      15  41       ; -51
B273  19C40000           [147] loadk      16  3        ; 0
B277  62830002           [148] call       13  4   2  
B27B  03430306           [149] add        12  12  13 
B27F  64834A00           [150] self       13  0   298  ; 54877834
B283  62030001           [151] call       13  2   0  
B287  A2420000           [152] call       10  0   1  
B28B  9D020100           [153] getglobal  10  4        ; _T
B28F  8EC24A05           [154] gettable   10  10  299  ; "isStreamingLevel"
B293  98420000           [155] test       10      1    ; to [157] if false
B297  1A000380           [156] jmp        13           ; to [170]
B29B  9D020100           [157] getglobal  10  4        ; _T
B29F  8E024B05           [158] gettable   10  10  300  ; "EOMOpen"
B2A3  98020000           [159] test       10      0    ; to [161] if true
B2A7  1A000180           [160] jmp        5            ; to [166]
B2AB  9D020100           [161] getglobal  10  4        ; _T
B2AF  8E424B05           [162] gettable   10  10  301  ; "MissionEnded"
B2B3  98020000           [163] test       10      0    ; to [165] if true
B2B7  1A000080           [164] jmp        1            ; to [166]
B2BB  1AC00080           [165] jmp        4            ; to [170]
B2BF  9D820000           [166] getglobal  10  2        ; 538022378
B2C3  D9C20000           [167] loadk      11  3        ; 0
B2C7  A2420001           [168] call       10  2   1  
B2CB  1AC0F37F           [169] jmp        -48          ; to [122]
B2CF  9D420500           [170] getglobal  10  21       ; gRegion
B2D3  A4824505           [171] self       10  10  278  ; -1520831144
B2D7  A2820001           [172] call       10  2   2  
B2DB  98020000           [173] test       10      0    ; to [175] if true
B2DF  1A400180           [174] jmp        6            ; to [181]
B2E3  A4824900           [175] self       10  0   294  ; 1511086594
B2E7  A2820001           [176] call       10  2   2  
B2EB  98420000           [177] test       10      1    ; to [179] if false
B2EF  1A400080           [178] jmp        2            ; to [181]
B2F3  A4824B00           [179] self       10  0   302  ; -1525609078
B2F7  A2420001           [180] call       10  2   1  
B2FB  1E008000           [181] return     0   1      
                         * constants:
B2FF  2F                 sizek (47)
B300  01                 const type 3
B301  2ECE00C0           const [0]: (-1073689042)
B305  01                 const type 3
B306  65770E40           const [1]: (1074689893)
B30A  01                 const type 3
B30B  EA911120           const [2]: (538022378)
B30F  03                 const type 3
B310  00000000           const [3]: (0)
B314  04                 const type 4
B315  03                 string size (3)
B316  5F5400             "_T\0"
                         const [4]: "_T"
B319  04                 const type 4
B31A  12                 string size (18)
B31B  7472616E73666572+  "transfer"
B323  656E6365556D6272+  "enceUmbr"
B32B  6100               "a\0"
                         const [5]: "transferenceUmbra"
B32D  00                 const type 0
                         const [6]: nil
B32E  01                 const type 3
B32F  B60FEFDB           const [7]: (-605089866)
B333  01                 const type 3
B334  093DFE5D           const [8]: (1576942857)
B338  01                 const type 3
B339  D878E506           const [9]: (115701976)
B33D  01                 const type 3
B33E  92462224           const [10]: (606226066)
B342  01                 const type 3
B343  FC120088           const [11]: (-2013261060)
B347  01                 const type 3
B348  CF360B82           const [12]: (-2113194289)
B34C  01                 const type 3
B34D  9B06F6A3           const [13]: (-1544157541)
B351  01                 const type 3
B352  F0CF3730           const [14]: (808964080)
B356  01                 const type 3
B357  1A4B27EC           const [15]: (-332969190)
B35B  04                 const type 4
B35C  12                 string size (18)
B35D  556D627261547261+  "UmbraTra"
B365  6E73666572656E63+  "nsferenc"
B36D  6500               "e\0"
                         const [16]: "UmbraTransference"
B36F  04                 const type 4
B370  07                 string size (7)
B371  456E67696E6500     "Engine\0"
                         const [17]: "Engine"
B378  04                 const type 4
B379  07                 string size (7)
B37A  44545F414E5900     "DT_ANY\0"
                         const [18]: "DT_ANY"
B381  04                 const type 4
B382  09                 string size (9)
B383  414E595F50415254+  "ANY_PART"
B38B  00                 "\0"
                         const [19]: "ANY_PART"
B38C  04                 const type 4
B38D  09                 string size (9)
B38E  4448545F4E4F4E45+  "DHT_NONE"
B396  00                 "\0"
                         const [20]: "DHT_NONE"
B397  04                 const type 4
B398  08                 string size (8)
B399  67526567696F6E00   "gRegion\0"
                         const [21]: "gRegion"
B3A1  01                 const type 3
B3A2  58F559A5           const [22]: (-1520831144)
B3A6  01                 const type 3
B3A7  20702AFD           const [23]: (-47550432)
B3AB  01                 const type 3
B3AC  9CFCD496           const [24]: (-1764426596)
B3B0  01                 const type 3
B3B1  D953748F           const [25]: (-1888201767)
B3B5  01                 const type 3
B3B6  90F9CED1           const [26]: (-774964848)
B3BA  01                 const type 3
B3BB  73290920           const [27]: (537471347)
B3BF  01                 const type 3
B3C0  0FDFB740           const [28]: (1085792015)
B3C4  01                 const type 3
B3C5  92F1BA0B           const [29]: (196800914)
B3C9  01                 const type 3
B3CA  49F4D739           const [30]: (970454089)
B3CE  01                 const type 3
B3CF  6E5436D5           const [31]: (-717859730)
B3D3  01                 const type 3
B3D4  1FD0B58D           const [32]: (-1917464545)
B3D8  01                 const type 3
B3D9  59AC7869           const [33]: (1769516121)
B3DD  01                 const type 3
B3DE  5D679CCE           const [34]: (-828610723)
B3E2  01                 const type 3
B3E3  8AB786EB           const [35]: (-343492726)
B3E7  01                 const type 3
B3E8  27A6434B           const [36]: (1262724647)
B3EC  01                 const type 3
B3ED  B6746C61           const [37]: (1634497718)
B3F1  01                 const type 3
B3F2  025A115A           const [38]: (1511086594)
B3F6  01                 const type 3
B3F7  7E2EAD0F           const [39]: (263007870)
B3FB  01                 const type 3
B3FC  00971C22           const [40]: (572299008)
B400  03                 const type 3
B401  CDCCCC3D           const [41]: (-51)
B405  01                 const type 3
B406  8A5E4503           const [42]: (54877834)
B40A  04                 const type 4
B40B  11                 string size (17)
B40C  697353747265616D+  "isStream"
B414  696E674C6576656C+  "ingLevel"
B41C  00                 "\0"
                         const [43]: "isStreamingLevel"
B41D  04                 const type 4
B41E  08                 string size (8)
B41F  454F4D4F70656E00   "EOMOpen\0"
                         const [44]: "EOMOpen"
B427  04                 const type 4
B428  0D                 string size (13)
B429  4D697373696F6E45+  "MissionE"
B431  6E64656400         "nded\0"
                         const [45]: "MissionEnded"
B436  01                 const type 3
B437  8A0D11A5           const [46]: (-1525609078)
                         * functions:
B43B  00                 sizep (0)
                         * lines:
B43D  01                 sizelineinfo (181)
                         [pc] (line)
B43E  FA                 [001] (-6)
B43F  06                 [002] (-6)
B440  00                 [003] (-6)
B441  00                 [004] (-5)
B442  FA                 [005] (-5)
B443  06                 [006] (-5)
B444  00                 [007] (-5)
B445  00                 [008] (-5)
B446  FA                 [009] (-4)
B447  06                 [010] (-1)
B448  00                 [011] (-1)
B449  00                 [012] (-1)
B44A  FB                 [013] (-1)
B44B  06                 [014] (2)
B44C  00                 [015] (2)
B44D  00                 [016] (2)
B44E  FB                 [017] (2)
B44F  06                 [018] (3)
B450  00                 [019] (3)
B451  00                 [020] (3)
B452  FB                 [021] (6)
B453  06                 [022] (6)
B454  00                 [023] (6)
B455  00                 [024] (6)
B456  FB                 [025] (6)
B457  06                 [026] (8)
B458  00                 [027] (8)
B459  00                 [028] (8)
B45A  FB                 [029] (9)
B45B  06                 [030] (9)
B45C  00                 [031] (10)
B45D  00                 [032] (10)
B45E  FC                 [033] (10)
B45F  06                 [034] (11)
B460  00                 [035] (11)
B461  00                 [036] (11)
B462  FF                 [037] (12)
B463  06                 [038] (12)
B464  00                 [039] (12)
B465  00                 [040] (13)
B466  FF                 [041] (13)
B467  06                 [042] (13)
B468  00                 [043] (13)
B469  00                 [044] (13)
B46A  FF                 [045] (13)
B46B  06                 [046] (13)
B46C  00                 [047] (13)
B46D  00                 [048] (13)
B46E  FF                 [049] (13)
B46F  06                 [050] (13)
B470  00                 [051] (13)
B471  00                 [052] (13)
B472  02                 [053] (13)
B473  07                 [054] (15)
B474  00                 [055] (15)
B475  00                 [056] (15)
B476  02                 [057] (17)
B477  07                 [058] (17)
B478  00                 [059] (17)
B479  00                 [060] (18)
B47A  02                 [061] (18)
B47B  07                 [062] (18)
B47C  00                 [063] (18)
B47D  00                 [064] (18)
B47E  02                 [065] (18)
B47F  07                 [066] (19)
B480  00                 [067] (19)
B481  00                 [068] (20)
B482  03                 [069] (20)
B483  07                 [070] (21)
B484  00                 [071] (21)
B485  00                 [072] (21)
B486  03                 [073] (21)
B487  07                 [074] (21)
B488  00                 [075] (22)
B489  00                 [076] (22)
B48A  03                 [077] (22)
B48B  07                 [078] (22)
B48C  00                 [079] (23)
B48D  00                 [080] (23)
B48E  06                 [081] (23)
B48F  07                 [082] (26)
B490  00                 [083] (26)
B491  00                 [084] (26)
B492  06                 [085] (26)
B493  07                 [086] (27)
B494  00                 [087] (27)
B495  00                 [088] (27)
B496  06                 [089] (27)
B497  07                 [090] (28)
B498  00                 [091] (28)
B499  00                 [092] (28)
B49A  06                 [093] (28)
B49B  07                 [094] (28)
B49C  00                 [095] (29)
B49D  00                 [096] (29)
B49E  06                 [097] (29)
B49F  07                 [098] (33)
B4A0  00                 [099] (33)
B4A1  00                 [100] (34)
B4A2  08                 [101] (34)
B4A3  07                 [102] (35)
B4A4  00                 [103] (35)
B4A5  00                 [104] (35)
B4A6  08                 [105] (35)
B4A7  07                 [106] (35)
B4A8  00                 [107] (36)
B4A9  00                 [108] (36)
B4AA  08                 [109] (36)
B4AB  07                 [110] (37)
B4AC  00                 [111] (37)
B4AD  00                 [112] (37)
B4AE  09                 [113] (37)
B4AF  07                 [114] (39)
B4B0  00                 [115] (39)
B4B1  00                 [116] (39)
B4B2  09                 [117] (39)
B4B3  07                 [118] (40)
B4B4  00                 [119] (40)
B4B5  00                 [120] (40)
B4B6  0A                 [121] (40)
B4B7  07                 [122] (43)
B4B8  00                 [123] (43)
B4B9  00                 [124] (43)
B4BA  0A                 [125] (43)
B4BB  07                 [126] (43)
B4BC  00                 [127] (43)
B4BD  00                 [128] (43)
B4BE  0A                 [129] (43)
B4BF  07                 [130] (43)
B4C0  00                 [131] (43)
B4C1  00                 [132] (43)
B4C2  0B                 [133] (43)
B4C3  07                 [134] (43)
B4C4  00                 [135] (44)
B4C5  00                 [136] (44)
B4C6  0B                 [137] (44)
B4C7  07                 [138] (44)
B4C8  00                 [139] (44)
B4C9  00                 [140] (44)
B4CA  0B                 [141] (45)
B4CB  07                 [142] (45)
B4CC  00                 [143] (45)
B4CD  00                 [144] (45)
B4CE  0C                 [145] (45)
B4CF  07                 [146] (45)
B4D0  00                 [147] (45)
B4D1  00                 [148] (45)
B4D2  0C                 [149] (45)
B4D3  07                 [150] (45)
B4D4  00                 [151] (45)
B4D5  00                 [152] (45)
B4D6  0C                 [153] (48)
B4D7  07                 [154] (48)
B4D8  00                 [155] (48)
B4D9  00                 [156] (48)
B4DA  0D                 [157] (48)
B4DB  07                 [158] (48)
B4DC  00                 [159] (48)
B4DD  00                 [160] (48)
B4DE  0D                 [161] (48)
B4DF  07                 [162] (48)
B4E0  00                 [163] (48)
B4E1  00                 [164] (48)
B4E2  0D                 [165] (49)
B4E3  07                 [166] (51)
B4E4  00                 [167] (51)
B4E5  00                 [168] (51)
B4E6  0D                 [169] (51)
B4E7  07                 [170] (54)
B4E8  00                 [171] (54)
B4E9  00                 [172] (54)
B4EA  0D                 [173] (54)
B4EB  07                 [174] (54)
B4EC  00                 [175] (54)
B4ED  00                 [176] (54)
B4EE  0D                 [177] (54)
B4EF  07                 [178] (54)
B4F0  00                 [179] (55)
B4F1  00                 [180] (55)
B4F2  0D                 [181] (57)
                         * locals:
B712  00                 sizelocvars (0)
                         * upvalues:
B713  00                 sizeupvalues (0)
                         ** end of function **

                         
B714                     ** function [29] definition (level 2)
                         ** start of function **
B714  00                 string size (0)
                         source name: (none)
B716  0E                 line defined (1851)
B717  E6                 last line defined (1894)
B718  0E                 nups (0)
B719  00                 numparams (1)
B71A  01                 is_vararg (0)
B71B  00                 maxstacksize (7)
                         * code:
B71D  79                 sizecode (121)
B71E  64004000           [001] self       1   0   256  ; 2109594123
B722  D7000000           [002] loadbool   3   0   0    ; false
B726  17018000           [003] loadbool   4   1   0    ; true
B72A  62400002           [004] call       1   4   1  
B72E  64404000           [005] self       1   0   257  ; -1957065004
B732  DD800000           [006] getglobal  3   2        ; gRagdollType
B736  62808001           [007] call       1   3   2  
B73A  58000000           [008] test       1       0    ; to [10] if true
B73E  1A800080           [009] jmp        3            ; to [13]
B742  64C04000           [010] self       1   0   259  ; 332067969
B746  62800001           [011] call       1   2   2  
B74A  12008000           [012] move       0   1      
B74E  64004100           [013] self       1   0   260  ; -1073689042
B752  62800001           [014] call       1   2   2  
B756  9D400100           [015] getglobal  2   5        ; 1074689893
B75A  D2008000           [016] move       3   1      
B75E  A2800001           [017] call       2   2   2  
B762  98400000           [018] test       2       1    ; to [20] if false
B766  1A001980           [019] jmp        101          ; to [121]
B76A  9D800100           [020] getglobal  2   6        ; _T
B76E  8EC04101           [021] gettable   2   2   263  ; "transferenceUmbra"
fail op	35
B772  63004201           [022] close      1  
B776  1A000380           [023] jmp        13           ; to [37]
B77A  9D800100           [024] getglobal  2   6        ; _T
B77E  8EC04101           [025] gettable   2   2   263  ; "transferenceUmbra"
B782  E440C200           [026] self       3   1   265  ; -605089866
B786  E2800001           [027] call       3   2   2  
B78A  8C00C201           [028] settable   2   3   264  ; nil
B78E  9D800200           [029] getglobal  2   10       ; -1442191459
B792  DD800100           [030] getglobal  3   6        ; _T
B796  CEC0C101           [031] gettable   3   3   263  ; "transferenceUmbra"
B79A  A2800001           [032] call       2   2   2  
fail op	35
B79E  23004201           [033] close      0  
B7A2  1A400080           [034] jmp        2            ; to [37]
B7A6  9D800100           [035] getglobal  2   6        ; _T
B7AA  8C00C283           [036] settable   2   263 264  ; "transferenceUmbra" nil
B7AE  A4C0C200           [037] self       2   1   267  ; -1917464545
B7B2  A2800001           [038] call       2   2   2  
B7B6  A4004301           [039] self       2   2   268  ; 1769516121
B7BA  A2800001           [040] call       2   2   2  
B7BE  DD400100           [041] getglobal  3   5        ; 1074689893
B7C2  12010001           [042] move       4   2      
B7C6  E2800001           [043] call       3   2   2  
B7CA  D8400000           [044] test       3       1    ; to [46] if false
B7CE  1A400280           [045] jmp        10           ; to [56]
B7D2  E4404001           [046] self       3   2   257  ; -1957065004
B7D6  5D410300           [047] getglobal  5   13       ; 738251817
B7DA  99810300           [048] loadk      6   14       ; "/Lotus/Powersuits/Wisp/WispBaseSuit"
B7DE  62010001           [049] call       5   2   0  
B7E2  E2800000           [050] call       3   0   2  
B7E6  D8000000           [051] test       3       0    ; to [53] if true
B7EA  1A800080           [052] jmp        3            ; to [56]
B7EE  E4C0C300           [053] self       3   1   271  ; 1576942857
B7F2  57018000           [054] loadbool   5   1   0    ; true
B7F6  E2408001           [055] call       3   3   1  
B7FA  E400C400           [056] self       3   1   272  ; -832323870
B7FE  E2400001           [057] call       3   2   1  
B802  E440C400           [058] self       3   1   273  ; 606226066
B806  57018000           [059] loadbool   5   1   0    ; true
B80A  E2408001           [060] call       3   3   1  
B80E  E480C400           [061] self       3   1   274  ; -2013261060
B812  57018000           [062] loadbool   5   1   0    ; true
B816  E2408001           [063] call       3   3   1  
B81A  E4C0C400           [064] self       3   1   275  ; -2113194289
B81E  57010000           [065] loadbool   5   0   0    ; false
B822  E2408001           [066] call       3   3   1  
B826  E400C500           [067] self       3   1   276  ; -1544157541
B82A  E2800001           [068] call       3   2   2  
B82E  E440C501           [069] self       3   3   277  ; 197552586
B832  5D810500           [070] getglobal  5   22       ; -332969190
B836  99C10500           [071] loadk      6   23       ; "UmbraTransference"
B83A  62010001           [072] call       5   2   0  
B83E  E2400000           [073] call       3   0   1  
B842  E400C600           [074] self       3   1   280  ; -717859730
B846  E2800001           [075] call       3   2   2  
B84A  D8000000           [076] test       3       0    ; to [78] if true
B84E  1AC00180           [077] jmp        8            ; to [86]
B852  DD400100           [078] getglobal  3   5        ; 1074689893
B856  12010001           [079] move       4   2      
B85A  E2800001           [080] call       3   2   2  
B85E  D8400000           [081] test       3       1    ; to [83] if false
B862  1A800080           [082] jmp        3            ; to [86]
B866  E4404601           [083] self       3   2   281  ; -828610723
B86A  57010000           [084] loadbool   5   0   0    ; false
B86E  E2408001           [085] call       3   3   1  
B872  DD800600           [086] getglobal  3   26       ; gRegion
B876  E4C0C601           [087] self       3   3   283  ; -1520831144
B87A  E2800001           [088] call       3   2   2  
B87E  D8000000           [089] test       3       0    ; to [91] if true
B882  1A400780           [090] jmp        30           ; to [121]
B886  DD800100           [091] getglobal  3   6        ; _T
B88A  CE00C701           [092] gettable   3   3   284  ; "isStreamingLevel"
B88E  D8400000           [093] test       3       1    ; to [95] if false
B892  1AC00180           [094] jmp        8            ; to [103]
B896  DD800100           [095] getglobal  3   6        ; _T
B89A  CE40C701           [096] gettable   3   3   285  ; "EOMOpen"
B89E  D8000000           [097] test       3       0    ; to [99] if true
B8A2  1A400580           [098] jmp        22           ; to [121]
B8A6  DD800100           [099] getglobal  3   6        ; _T
B8AA  CE80C701           [100] gettable   3   3   286  ; "MissionEnded"
B8AE  D8000000           [101] test       3       0    ; to [103] if true
B8B2  1A400480           [102] jmp        18           ; to [121]
B8B6  E4C0C700           [103] self       3   1   287  ; -1764426596
B8BA  E2800001           [104] call       3   2   2  
B8BE  1D410100           [105] getglobal  4   5        ; 1074689893
B8C2  52018001           [106] move       5   3      
B8C6  22810001           [107] call       4   2   2  
B8CA  18410000           [108] test       4       1    ; to [110] if false
B8CE  1A800280           [109] jmp        11           ; to [121]
B8D2  2401C801           [110] self       4   3   288  ; -2135866365
B8D6  22810001           [111] call       4   2   2  
B8DA  5D410100           [112] getglobal  5   5        ; 1074689893
B8DE  92010002           [113] move       6   4      
B8E2  62810001           [114] call       5   2   2  
B8E6  58410000           [115] test       5       1    ; to [117] if false
B8EA  1AC00080           [116] jmp        4            ; to [121]
fail op	35
B8EE  63400002           [117] close      1  
B8F2  1A400080           [118] jmp        2            ; to [121]
B8F6  64414802           [119] self       5   4   289  ; -521198746
B8FA  62410001           [120] call       5   2   1  
B8FE  1E008000           [121] return     0   1      
                         * constants:
B902  22                 sizek (34)
B903  01                 const type 3
B904  0BDABD7D           const [0]: (2109594123)
B908  01                 const type 3
B909  D48E598B           const [1]: (-1957065004)
B90D  04                 const type 4
B90E  0D                 string size (13)
B90F  67526167646F6C6C+  "gRagdoll"
B917  5479706500         "Type\0"
                         const [2]: "gRagdollType"
B91C  01                 const type 3
B91D  81F4CA13           const [3]: (332067969)
B921  01                 const type 3
B922  2ECE00C0           const [4]: (-1073689042)
B926  01                 const type 3
B927  65770E40           const [5]: (1074689893)
B92B  04                 const type 4
B92C  03                 string size (3)
B92D  5F5400             "_T\0"
                         const [6]: "_T"
B930  04                 const type 4
B931  12                 string size (18)
B932  7472616E73666572+  "transfer"
B93A  656E6365556D6272+  "enceUmbr"
B942  6100               "a\0"
                         const [7]: "transferenceUmbra"
B944  00                 const type 0
                         const [8]: nil
B945  01                 const type 3
B946  B60FEFDB           const [9]: (-605089866)
B94A  01                 const type 3
B94B  9DE709AA           const [10]: (-1442191459)
B94F  01                 const type 3
B950  1FD0B58D           const [11]: (-1917464545)
B954  01                 const type 3
B955  59AC7869           const [12]: (1769516121)
B959  01                 const type 3
B95A  29D4002C           const [13]: (738251817)
B95E  04                 const type 4
B95F  24                 string size (36)
B960  2F4C6F7475732F50+  "/Lotus/P"
B968  6F77657273756974+  "owersuit"
B970  732F576973702F57+  "s/Wisp/W"
B978  6973704261736553+  "ispBaseS"
B980  75697400           "uit\0"
                         const [14]: "/Lotus/Powersuits/Wisp/WispBaseSuit"
B984  01                 const type 3
B985  093DFE5D           const [15]: (1576942857)
B989  01                 const type 3
B98A  E2BE63CE           const [16]: (-832323870)
B98E  01                 const type 3
B98F  92462224           const [17]: (606226066)
B993  01                 const type 3
B994  FC120088           const [18]: (-2013261060)
B998  01                 const type 3
B999  CF360B82           const [19]: (-2113194289)
B99D  01                 const type 3
B99E  9B06F6A3           const [20]: (-1544157541)
B9A2  01                 const type 3
B9A3  CA69C60B           const [21]: (197552586)
B9A7  01                 const type 3
B9A8  1A4B27EC           const [22]: (-332969190)
B9AC  04                 const type 4
B9AD  12                 string size (18)
B9AE  556D627261547261+  "UmbraTra"
B9B6  6E73666572656E63+  "nsferenc"
B9BE  6500               "e\0"
                         const [23]: "UmbraTransference"
B9C0  01                 const type 3
B9C1  6E5436D5           const [24]: (-717859730)
B9C5  01                 const type 3
B9C6  5D679CCE           const [25]: (-828610723)
B9CA  04                 const type 4
B9CB  08                 string size (8)
B9CC  67526567696F6E00   "gRegion\0"
                         const [26]: "gRegion"
B9D4  01                 const type 3
B9D5  58F559A5           const [27]: (-1520831144)
B9D9  04                 const type 4
B9DA  11                 string size (17)
B9DB  697353747265616D+  "isStream"
B9E3  696E674C6576656C+  "ingLevel"
B9EB  00                 "\0"
                         const [28]: "isStreamingLevel"
B9EC  04                 const type 4
B9ED  08                 string size (8)
B9EE  454F4D4F70656E00   "EOMOpen\0"
                         const [29]: "EOMOpen"
B9F6  04                 const type 4
B9F7  0D                 string size (13)
B9F8  4D697373696F6E45+  "MissionE"
BA00  6E64656400         "nded\0"
                         const [30]: "MissionEnded"
BA05  01                 const type 3
BA06  9CFCD496           const [31]: (-1764426596)
BA0A  01                 const type 3
BA0B  0344B180           const [32]: (-2135866365)
BA0F  01                 const type 3
BA10  6623EFE0           const [33]: (-521198746)
                         * functions:
BA14  00                 sizep (0)
                         * lines:
BA15  79                 sizelineinfo (121)
                         [pc] (line)
BA16  3C                 [001] (60)
BA17  07                 [002] (60)
BA18  00                 [003] (60)
BA19  00                 [004] (60)
BA1A  3C                 [005] (62)
BA1B  07                 [006] (62)
BA1C  00                 [007] (62)
BA1D  00                 [008] (62)
BA1E  3C                 [009] (62)
BA1F  07                 [010] (63)
BA20  00                 [011] (63)
BA21  00                 [012] (63)
BA22  3C                 [013] (66)
BA23  07                 [014] (66)
BA24  00                 [015] (67)
BA25  00                 [016] (67)
BA26  3E                 [017] (67)
BA27  07                 [018] (67)
BA28  00                 [019] (67)
BA29  00                 [020] (68)
BA2A  3E                 [021] (68)
BA2B  07                 [022] (68)
BA2C  00                 [023] (68)
BA2D  00                 [024] (69)
BA2E  3E                 [025] (69)
BA2F  07                 [026] (69)
BA30  00                 [027] (69)
BA31  00                 [028] (69)
BA32  3E                 [029] (71)
BA33  07                 [030] (71)
BA34  00                 [031] (71)
BA35  00                 [032] (71)
BA36  3E                 [033] (71)
BA37  07                 [034] (71)
BA38  00                 [035] (72)
BA39  00                 [036] (72)
BA3A  3F                 [037] (76)
BA3B  07                 [038] (76)
BA3C  00                 [039] (76)
BA3D  00                 [040] (76)
BA3E  3F                 [041] (77)
BA3F  07                 [042] (77)
BA40  00                 [043] (77)
BA41  00                 [044] (77)
BA42  3F                 [045] (77)
BA43  07                 [046] (77)
BA44  00                 [047] (77)
BA45  00                 [048] (77)
BA46  42                 [049] (77)
BA47  07                 [050] (77)
BA48  00                 [051] (77)
BA49  00                 [052] (77)
BA4A  42                 [053] (78)
BA4B  07                 [054] (78)
BA4C  00                 [055] (78)
BA4D  00                 [056] (80)
BA4E  43                 [057] (80)
BA4F  07                 [058] (81)
BA50  00                 [059] (81)
BA51  00                 [060] (81)
BA52  43                 [061] (82)
BA53  07                 [062] (82)
BA54  00                 [063] (82)
BA55  00                 [064] (83)
BA56  43                 [065] (83)
BA57  07                 [066] (83)
BA58  00                 [067] (84)
BA59  00                 [068] (84)
BA5A  43                 [069] (84)
BA5B  07                 [070] (84)
BA5C  00                 [071] (84)
BA5D  00                 [072] (84)
BA5E  43                 [073] (84)
BA5F  07                 [074] (86)
BA60  00                 [075] (86)
BA61  00                 [076] (86)
BA62  44                 [077] (86)
BA63  07                 [078] (87)
BA64  00                 [079] (87)
BA65  00                 [080] (87)
BA66  44                 [081] (87)
BA67  07                 [082] (87)
BA68  00                 [083] (88)
BA69  00                 [084] (88)
BA6A  44                 [085] (88)
BA6B  07                 [086] (92)
BA6C  00                 [087] (92)
BA6D  00                 [088] (92)
BA6E  44                 [089] (92)
BA6F  07                 [090] (92)
BA70  00                 [091] (92)
BA71  00                 [092] (92)
BA72  45                 [093] (92)
BA73  07                 [094] (92)
BA74  00                 [095] (92)
BA75  00                 [096] (92)
BA76  45                 [097] (92)
BA77  07                 [098] (92)
BA78  00                 [099] (92)
BA79  00                 [100] (92)
BA7A  45                 [101] (92)
BA7B  07                 [102] (92)
BA7C  00                 [103] (93)
BA7D  00                 [104] (93)
BA7E  45                 [105] (94)
BA7F  07                 [106] (94)
BA80  00                 [107] (94)
BA81  00                 [108] (94)
BA82  45                 [109] (94)
BA83  07                 [110] (95)
BA84  00                 [111] (95)
BA85  00                 [112] (96)
BA86  47                 [113] (96)
BA87  07                 [114] (96)
BA88  00                 [115] (96)
BA89  00                 [116] (96)
BA8A  47                 [117] (96)
BA8B  07                 [118] (96)
BA8C  00                 [119] (97)
BA8D  00                 [120] (97)
BA8E  47                 [121] (102)
                         * locals:
BBFA  00                 sizelocvars (0)
                         * upvalues:
BBFB  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
BBFD  01                 sizelineinfo (172)
                         [pc] (line)
BBFE  3F                 [001] (63)
BBFF  00                 [002] (65)
BC00  00                 [003] (66)
BC01  00                 [004] (68)
BC02  41                 [005] (70)
BC03  00                 [006] (70)
BC04  00                 [007] (70)
BC05  00                 [008] (71)
BC06  42                 [009] (71)
BC07  00                 [010] (71)
BC08  00                 [011] (72)
BC09  00                 [012] (72)
BC0A  44                 [013] (72)
BC0B  00                 [014] (73)
BC0C  00                 [015] (73)
BC0D  00                 [016] (73)
BC0E  46                 [017] (74)
BC0F  00                 [018] (74)
BC10  00                 [019] (74)
BC11  00                 [020] (76)
BC12  46                 [021] (76)
BC13  00                 [022] (76)
BC14  00                 [023] (77)
BC15  00                 [024] (77)
BC16  46                 [025] (77)
BC17  00                 [026] (78)
BC18  00                 [027] (78)
BC19  00                 [028] (78)
BC1A  47                 [029] (79)
BC1B  00                 [030] (79)
BC1C  00                 [031] (79)
BC1D  00                 [032] (80)
BC1E  47                 [033] (80)
BC1F  00                 [034] (80)
BC20  00                 [035] (81)
BC21  00                 [036] (81)
BC22  47                 [037] (81)
BC23  00                 [038] (83)
BC24  00                 [039] (84)
BC25  00                 [040] (86)
BC26  48                 [041] (87)
BC27  00                 [042] (87)
BC28  00                 [043] (87)
BC29  00                 [044] (87)
BC2A  48                 [045] (88)
BC2B  00                 [046] (88)
BC2C  00                 [047] (88)
BC2D  00                 [048] (88)
BC2E  48                 [049] (88)
BC2F  00                 [050] (88)
BC30  00                 [051] (88)
BC31  00                 [052] (106)
BC32  49                 [053] (106)
BC33  00                 [054] (106)
BC34  00                 [055] (91)
BC35  00                 [056] (123)
BC36  49                 [057] (-112)
BC37  00                 [058] (-99)
BC38  00                 [059] (-99)
BC39  00                 [060] (-85)
BC3A  49                 [061] (-76)
BC3B  00                 [062] (-76)
BC3C  00                 [063] (-83)
BC3D  00                 [064] (-10)
BC3E  4A                 [065] (-10)
BC3F  00                 [066] (-10)
BC40  00                 [067] (-10)
BC41  00                 [068] (108)
BC42  4A                 [069] (108)
BC43  00                 [070] (119)
BC44  00                 [071] (119)
BC45  00                 [072] (-2)
BC46  4A                 [073] (-2)
BC47  00                 [074] (-2)
BC48  00                 [075] (-2)
BC49  00                 [076] (24)
BC4A  4C                 [077] (24)
BC4B  00                 [078] (85)
BC4C  00                 [079] (85)
BC4D  00                 [080] (85)
BC4E  4C                 [081] (85)
BC4F  00                 [082] (85)
BC50  00                 [083] (85)
BC51  00                 [084] (26)
BC52  4C                 [085] (108)
BC53  00                 [086] (113)
BC54  00                 [087] (113)
BC55  00                 [088] (110)
BC56  4D                 [089] (125)
BC57  00                 [090] (-24)
BC58  00                 [091] (-24)
BC59  00                 [092] (-24)
BC5A  4D                 [093] (-24)
BC5B  00                 [094] (-24)
BC5C  00                 [095] (-24)
BC5D  00                 [096] (127)
BC5E  4D                 [097] (41)
BC5F  00                 [098] (50)
BC60  00                 [099] (50)
BC61  00                 [100] (50)
BC62  4E                 [101] (112)
BC63  00                 [102] (112)
BC64  00                 [103] (112)
BC65  00                 [104] (-87)
BC66  4E                 [105] (-87)
BC67  00                 [106] (-87)
BC68  00                 [107] (-87)
BC69  00                 [108] (-87)
BC6A  4E                 [109] (-87)
BC6B  00                 [110] (-87)
BC6C  00                 [111] (-87)
BC6D  00                 [112] (-87)
BC6E  4F                 [113] (-87)
BC6F  00                 [114] (-87)
BC70  00                 [115] (-87)
BC71  00                 [116] (-41)
BC72  4F                 [117] (-41)
BC73  00                 [118] (-41)
BC74  00                 [119] (-41)
BC75  00                 [120] (-41)
BC76  4F                 [121] (-41)
BC77  00                 [122] (-41)
BC78  00                 [123] (-41)
BC79  00                 [124] (-41)
BC7A  50                 [125] (-41)
BC7B  00                 [126] (-41)
BC7C  00                 [127] (-41)
BC7D  00                 [128] (-41)
BC7E  50                 [129] (-41)
BC7F  00                 [130] (-41)
BC80  00                 [131] (-35)
BC81  00                 [132] (-35)
BC82  50                 [133] (-35)
BC83  00                 [134] (-39)
BC84  00                 [135] (11)
BC85  00                 [136] (11)
BC86  51                 [137] (11)
BC87  00                 [138] (-33)
BC88  00                 [139] (74)
BC89  00                 [140] (74)
BC8A  51                 [141] (74)
BC8B  00                 [142] (74)
BC8C  00                 [143] (74)
BC8D  00                 [144] (13)
BC8E  51                 [145] (-67)
BC8F  00                 [146] (-67)
BC90  00                 [147] (-67)
BC91  00                 [148] (-67)
BC92  53                 [149] (-67)
BC93  00                 [150] (-67)
BC94  00                 [151] (-67)
BC95  00                 [152] (-67)
BC96  54                 [153] (76)
BC97  00                 [154] (-63)
BC98  00                 [155] (-63)
BC99  00                 [156] (-63)
BC9A  56                 [157] (-65)
BC9B  00                 [158] (-36)
BC9C  00                 [159] (-36)
BC9D  00                 [160] (-36)
BC9E  57                 [161] (-61)
BC9F  00                 [162] (-11)
BCA0  00                 [163] (-11)
BCA1  00                 [164] (-11)
BCA2  57                 [165] (-34)
BCA3  00                 [166] (57)
BCA4  00                 [167] (57)
BCA5  00                 [168] (-9)
BCA6  57                 [169] (102)
BCA7  00                 [170] (102)
BCA8  00                 [171] (59)
BCA9  00                 [172] (102)
                         * locals:
BEAE  00                 sizelocvars (0)
                         * upvalues:
BEAF  00                 sizeupvalues (0)
                         ** end of function **

BEB0                     ** end of chunk **
