1	C:\wlua_dump\path\Lotus\ScriptsRiftStatusFromCreator.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\ScriptsRiftStatusFromCreator.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  02                 size of number (bytes)
0008  04                 integral (1=integral)
44
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
TriggerUseCreator
gTriggerType
gBaseAvatarType
Engine
RS_IN_RIFT
RS_OUT_RIFT
gProjectileType
gItemType
gAvatarType
gDamageTriggerType
gGameRules
DAMAGE
maxLife
destroyTrigger
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  02                 maxstacksize (2)
                         * code:
0008  04                 sizecode (4)
0009  25000000           [1] closure    0   0      
000D  20000000           [2] setglobal  0   0        ; TriggerUseCreator
0011  20400000           [3] setglobal  0   1        ; 310905384
0015  1E008000           [4] return     0   1      
                         * constants:
0019  02                 sizek (2)
001A  04                 const type 4
001B  12                 string size (18)
001C  5472696767657255+  "TriggerU"
0024  736543726561746F+  "seCreato"
002C  7200               "r\0"
                         const [0]: "TriggerUseCreator"
002E  01                 const type 3
002F  280A8812           const [1]: (310905384)
                         * functions:
0033  01                 sizep (1)
                         
0034                     ** function [0] definition (level 2)
                         ** start of function **
0034  00                 string size (0)
                         source name: (none)
0035  04                 line defined (4)
0036  55                 last line defined (85)
0037  00                 nups (0)
0038  01                 numparams (1)
0039  00                 is_vararg (0)
003A  08                 maxstacksize (8)
                         * code:
003C  01                 sizecode (196)
003D  5D000000           [001] getglobal  1   0        ; 1074689893
0041  92000000           [002] move       2   0      
0045  62800001           [003] call       1   2   2  
0049  58400000           [004] test       1       1    ; to [6] if false
004D  1A000180           [005] jmp        5            ; to [11]
0051  64404000           [006] self       1   0   257  ; -1957065004
0055  DD800000           [007] getglobal  3   2        ; gTriggerType
0059  62808001           [008] call       1   3   2  
005D  58400000           [009] test       1       1    ; to [11] if false
0061  1A000080           [010] jmp        1            ; to [12]
0065  1E008000           [011] return     0   1      
0069  52000000           [012] move       1   0      
006D  86000001           [013] loadnil    2   2      
0071  DD000000           [014] getglobal  3   0        ; 1074689893
0075  24C1C000           [015] self       4   1   259  ; 129677183
0079  22010001           [016] call       4   2   0  
007D  E2800000           [017] call       3   0   2  
0081  D8000000           [018] test       3       0    ; to [20] if true
0085  1A800080           [019] jmp        3            ; to [23]
0089  E400C100           [020] self       3   1   260  ; -704974830
008D  E2800001           [021] call       3   2   2  
0091  52008001           [022] move       1   3      
0095  DD000000           [023] getglobal  3   0        ; 1074689893
0099  12018000           [024] move       4   1      
009D  E2800001           [025] call       3   2   2  
00A1  D8000000           [026] test       3       0    ; to [28] if true
00A5  1A000080           [027] jmp        1            ; to [29]
00A9  1E008000           [028] return     0   1      
00AD  E440C000           [029] self       3   1   257  ; -1957065004
00B1  5D410100           [030] getglobal  5   5        ; gBaseAvatarType
00B5  E2808001           [031] call       3   3   2  
00B9  D8000000           [032] test       3       0    ; to [34] if true
00BD  1A800380           [033] jmp        15           ; to [49]
00C1  E480C100           [034] self       3   1   262  ; 757002394
00C5  E2800001           [035] call       3   2   2  
00C9  D8000000           [036] test       3       0    ; to [38] if true
00CD  1A000180           [037] jmp        5            ; to [43]
00D1  E4C04100           [038] self       3   0   263  ; 687996862
00D5  5D010200           [039] getglobal  5   8        ; Engine
00D9  4E41C202           [040] gettable   5   5   265  ; "RS_IN_RIFT"
00DD  E2408001           [041] call       3   3   1  
00E1  1AC00080           [042] jmp        4            ; to [47]
00E5  E4C04100           [043] self       3   0   263  ; 687996862
00E9  5D010200           [044] getglobal  5   8        ; Engine
00ED  4E81C202           [045] gettable   5   5   266  ; "RS_OUT_RIFT"
00F1  E2408001           [046] call       3   3   1  
00F5  92008000           [047] move       2   1      
00F9  1A001A80           [048] jmp        105          ; to [154]
00FD  E440C000           [049] self       3   1   257  ; -1957065004
0101  5DC10200           [050] getglobal  5   11       ; gProjectileType
0105  E2808001           [051] call       3   3   2  
0109  D8000000           [052] test       3       0    ; to [54] if true
010D  1A400480           [053] jmp        18           ; to [72]
0111  E400C300           [054] self       3   1   268  ; -1226990273
0115  57018000           [055] loadbool   5   1   0    ; true
0119  E2808001           [056] call       3   3   2  
011D  D8000000           [057] test       3       0    ; to [59] if true
0121  1A000180           [058] jmp        5            ; to [64]
0125  E4C04100           [059] self       3   0   263  ; 687996862
0129  5D010200           [060] getglobal  5   8        ; Engine
012D  4E41C202           [061] gettable   5   5   265  ; "RS_IN_RIFT"
0131  E2408001           [062] call       3   3   1  
0135  1AC00080           [063] jmp        4            ; to [68]
0139  E4C04100           [064] self       3   0   263  ; 687996862
013D  5D010200           [065] getglobal  5   8        ; Engine
0141  4E81C202           [066] gettable   5   5   266  ; "RS_OUT_RIFT"
0145  E2408001           [067] call       3   3   1  
0149  E440C300           [068] self       3   1   269  ; 2082429591
014D  E2800001           [069] call       3   2   2  
0151  92008001           [070] move       2   3      
0155  1A401480           [071] jmp        82           ; to [154]
0159  DD000000           [072] getglobal  3   0        ; 1074689893
015D  12018000           [073] move       4   1      
0161  E2800001           [074] call       3   2   2  
0165  D8400000           [075] test       3       1    ; to [77] if false
0169  1A001380           [076] jmp        77           ; to [154]
016D  E440C000           [077] self       3   1   257  ; -1957065004
0171  5D810300           [078] getglobal  5   14       ; gItemType
0175  E2808001           [079] call       3   3   2  
0179  D8000000           [080] test       3       0    ; to [82] if true
017D  1AC00080           [081] jmp        4            ; to [86]
0181  E4C0C300           [082] self       3   1   271  ; -1316189862
0185  E2800001           [083] call       3   2   2  
0189  52008001           [084] move       1   3      
018D  1A000480           [085] jmp        17           ; to [103]
0191  DD000000           [086] getglobal  3   0        ; 1074689893
0195  2401C400           [087] self       4   1   272  ; 890858098
0199  22010001           [088] call       4   2   0  
019D  E2800000           [089] call       3   0   2  
01A1  D8400000           [090] test       3       1    ; to [92] if false
01A5  1AC00180           [091] jmp        8            ; to [100]
01A9  E400C400           [092] self       3   1   272  ; 890858098
01AD  E2800001           [093] call       3   2   2  
fail op	35
01B1  63408001           [094] close      1  
01B5  1AC00080           [095] jmp        4            ; to [100]
01B9  E400C400           [096] self       3   1   272  ; 890858098
01BD  E2800001           [097] call       3   2   2  
01C1  52008001           [098] move       1   3      
01C5  1A800080           [099] jmp        3            ; to [103]
01C9  E4C0C000           [100] self       3   1   259  ; 129677183
01CD  E2800001           [101] call       3   2   2  
01D1  52008001           [102] move       1   3      
01D5  DD000000           [103] getglobal  3   0        ; 1074689893
01D9  12018000           [104] move       4   1      
01DD  E2800001           [105] call       3   2   2  
01E1  D8000000           [106] test       3       0    ; to [108] if true
01E5  1A000080           [107] jmp        1            ; to [109]
01E9  1A000B80           [108] jmp        45           ; to [154]
01ED  E440C000           [109] self       3   1   257  ; -1957065004
01F1  5DC10200           [110] getglobal  5   11       ; gProjectileType
01F5  E2808001           [111] call       3   3   2  
01F9  D8000000           [112] test       3       0    ; to [114] if true
01FD  1A800480           [113] jmp        19           ; to [133]
0201  E400C300           [114] self       3   1   268  ; -1226990273
0205  57018000           [115] loadbool   5   1   0    ; true
0209  E2808001           [116] call       3   3   2  
020D  D8000000           [117] test       3       0    ; to [119] if true
0211  1A000180           [118] jmp        5            ; to [124]
0215  E4C04100           [119] self       3   0   263  ; 687996862
0219  5D010200           [120] getglobal  5   8        ; Engine
021D  4E41C202           [121] gettable   5   5   265  ; "RS_IN_RIFT"
0221  E2408001           [122] call       3   3   1  
0225  1AC00080           [123] jmp        4            ; to [128]
0229  E4C04100           [124] self       3   0   263  ; 687996862
022D  5D010200           [125] getglobal  5   8        ; Engine
0231  4E81C202           [126] gettable   5   5   266  ; "RS_OUT_RIFT"
0235  E2408001           [127] call       3   3   1  
0239  E440C300           [128] self       3   1   269  ; 2082429591
023D  E2800001           [129] call       3   2   2  
0241  92008001           [130] move       2   3      
0245  1A400580           [131] jmp        22           ; to [154]
0249  1A80F07F           [132] jmp        -61          ; to [72]
024D  E440C000           [133] self       3   1   257  ; -1957065004
0251  5D410400           [134] getglobal  5   17       ; gAvatarType
0255  E2808001           [135] call       3   3   2  
0259  D8000000           [136] test       3       0    ; to [138] if true
025D  1A40EF7F           [137] jmp        -66          ; to [72]
0261  E480C100           [138] self       3   1   262  ; 757002394
0265  E2800001           [139] call       3   2   2  
0269  D8000000           [140] test       3       0    ; to [142] if true
026D  1A000180           [141] jmp        5            ; to [147]
0271  E4C04100           [142] self       3   0   263  ; 687996862
0275  5D010200           [143] getglobal  5   8        ; Engine
0279  4E41C202           [144] gettable   5   5   265  ; "RS_IN_RIFT"
027D  E2408001           [145] call       3   3   1  
0281  1AC00080           [146] jmp        4            ; to [151]
0285  E4C04100           [147] self       3   0   263  ; 687996862
0289  5D010200           [148] getglobal  5   8        ; Engine
028D  4E81C202           [149] gettable   5   5   266  ; "RS_OUT_RIFT"
0291  E2408001           [150] call       3   3   1  
0295  92008000           [151] move       2   1      
0299  1A000080           [152] jmp        1            ; to [154]
029D  1A40EB7F           [153] jmp        -82          ; to [72]
02A1  DD000000           [154] getglobal  3   0        ; 1074689893
02A5  12010001           [155] move       4   2      
02A9  E2800001           [156] call       3   2   2  
02AD  D8400000           [157] test       3       1    ; to [159] if false
02B1  1AC00480           [158] jmp        20           ; to [179]
02B5  E4404001           [159] self       3   2   257  ; -1957065004
02B9  5D410100           [160] getglobal  5   5        ; gBaseAvatarType
02BD  E2808001           [161] call       3   3   2  
02C1  D8000000           [162] test       3       0    ; to [164] if true
02C5  1A800380           [163] jmp        15           ; to [179]
02C9  E4404000           [164] self       3   0   257  ; -1957065004
02CD  5D810400           [165] getglobal  5   18       ; gDamageTriggerType
02D1  E2808001           [166] call       3   3   2  
02D5  D8000000           [167] test       3       0    ; to [169] if true
02D9  1A400280           [168] jmp        10           ; to [179]
02DD  DDC00400           [169] getglobal  3   19       ; gGameRules
02E1  E400C501           [170] self       3   3   276  ; 515602179
02E5  59410500           [171] loadk      5   21       ; 0
02E9  9D010200           [172] getglobal  6   8        ; Engine
02ED  8E814503           [173] gettable   6   6   278  ; "DAMAGE"
02F1  D2010001           [174] move       7   2      
02F5  E2808002           [175] call       3   5   2  
02F9  24C14500           [176] self       4   0   279  ; 358296647
02FD  92018001           [177] move       6   3      
0301  22418001           [178] call       4   3   1  
0305  1D010600           [179] getglobal  4   24       ; maxLife
fail op	21
0309  1500818C           [180] concat     0   281 4  
030D  1A000280           [181] jmp        9            ; to [191]
0311  1D810600           [182] getglobal  4   26       ; 538022378
0315  59410600           [183] loadk      5   25       ; 0
0319  22410001           [184] call       4   2   1  
031D  1D010600           [185] getglobal  4   24       ; maxLife
0321  5DC10600           [186] getglobal  5   27       ; 1289681407
0325  62818000           [187] call       5   1   2  
0329  0D410102           [188] sub        4   4   5  
032D  20010600           [189] setglobal  4   24       ; maxLife
0331  1AC0FC7F           [190] jmp        -12          ; to [179]
0335  1D010700           [191] getglobal  4   28       ; destroyTrigger
0339  18010000           [192] test       4       0    ; to [194] if true
033D  1A400080           [193] jmp        2            ; to [196]
0341  24414700           [194] self       4   0   285  ; -725453761
0345  22410001           [195] call       4   2   1  
0349  1E008000           [196] return     0   1      
                         * constants:
034D  1E                 sizek (30)
034E  01                 const type 3
034F  65770E40           const [0]: (1074689893)
0353  01                 const type 3
0354  D48E598B           const [1]: (-1957065004)
0358  04                 const type 4
0359  0D                 string size (13)
035A  6754726967676572+  "gTrigger"
0362  5479706500         "Type\0"
                         const [2]: "gTriggerType"
0367  01                 const type 3
0368  7FB7BA07           const [3]: (129677183)
036C  01                 const type 3
036D  12F0FAD5           const [4]: (-704974830)
0371  04                 const type 4
0372  10                 string size (16)
0373  6742617365417661+  "gBaseAva"
037B  7461725479706500   "tarType\0"
                         const [5]: "gBaseAvatarType"
0383  01                 const type 3
0384  9AF01E2D           const [6]: (757002394)
0388  01                 const type 3
0389  BEFF0129           const [7]: (687996862)
038D  04                 const type 4
038E  07                 string size (7)
038F  456E67696E6500     "Engine\0"
                         const [8]: "Engine"
0396  04                 const type 4
0397  0B                 string size (11)
0398  52535F494E5F5249+  "RS_IN_RI"
03A0  465400             "FT\0"
                         const [9]: "RS_IN_RIFT"
03A3  04                 const type 4
03A4  0C                 string size (12)
03A5  52535F4F55545F52+  "RS_OUT_R"
03AD  49465400           "IFT\0"
                         const [10]: "RS_OUT_RIFT"
03B1  04                 const type 4
03B2  10                 string size (16)
03B3  6750726F6A656374+  "gProject"
03BB  696C655479706500   "ileType\0"
                         const [11]: "gProjectileType"
03C3  01                 const type 3
03C4  3F9DDDB6           const [12]: (-1226990273)
03C8  01                 const type 3
03C9  975A1F7C           const [13]: (2082429591)
03CD  04                 const type 4
03CE  0A                 string size (10)
03CF  674974656D547970+  "gItemTyp"
03D7  6500               "e\0"
                         const [14]: "gItemType"
03D9  01                 const type 3
03DA  5A898CB1           const [15]: (-1316189862)
03DE  01                 const type 3
03DF  726A1935           const [16]: (890858098)
03E3  04                 const type 4
03E4  0C                 string size (12)
03E5  6741766174617254+  "gAvatarT"
03ED  79706500           "ype\0"
                         const [17]: "gAvatarType"
03F1  04                 const type 4
03F2  13                 string size (19)
03F3  6744616D61676554+  "gDamageT"
03FB  7269676765725479+  "riggerTy"
0403  706500             "pe\0"
                         const [18]: "gDamageTriggerType"
0406  04                 const type 4
0407  0B                 string size (11)
0408  6747616D6552756C+  "gGameRul"
0410  657300             "es\0"
                         const [19]: "gGameRules"
0413  01                 const type 3
0414  0377BB1E           const [20]: (515602179)
0418  03                 const type 3
0419  0000803F           const [21]: (0)
041D  04                 const type 4
041E  07                 string size (7)
041F  44414D41474500     "DAMAGE\0"
                         const [22]: "DAMAGE"
0426  01                 const type 3
0427  472C5B15           const [23]: (358296647)
042B  04                 const type 4
042C  08                 string size (8)
042D  6D61784C69666500   "maxLife\0"
                         const [24]: "maxLife"
0435  03                 const type 3
0436  00000000           const [25]: (0)
043A  01                 const type 3
043B  EA911120           const [26]: (538022378)
043F  01                 const type 3
0440  FFF9DE4C           const [27]: (1289681407)
0444  04                 const type 4
0445  0F                 string size (15)
0446  64657374726F7954+  "destroyT"
044E  72696767657200     "rigger\0"
                         const [28]: "destroyTrigger"
0455  01                 const type 3
0456  3F74C2D4           const [29]: (-725453761)
                         * functions:
045A  00                 sizep (0)
                         * lines:
045C  01                 sizelineinfo (196)
                         [pc] (line)
045D  05                 [001] (5)
045E  00                 [002] (5)
045F  00                 [003] (5)
0460  00                 [004] (5)
0461  05                 [005] (5)
0462  00                 [006] (5)
0463  00                 [007] (5)
0464  00                 [008] (5)
0465  05                 [009] (5)
0466  00                 [010] (5)
0467  00                 [011] (6)
0468  00                 [012] (9)
0469  05                 [013] (10)
046A  00                 [014] (12)
046B  00                 [015] (12)
046C  00                 [016] (12)
046D  05                 [017] (12)
046E  00                 [018] (12)
046F  00                 [019] (12)
0470  00                 [020] (14)
0471  05                 [021] (14)
0472  00                 [022] (14)
0473  00                 [023] (17)
0474  00                 [024] (17)
0475  05                 [025] (17)
0476  00                 [026] (17)
0477  00                 [027] (17)
0478  00                 [028] (18)
0479  05                 [029] (21)
047A  00                 [030] (21)
047B  00                 [031] (21)
047C  00                 [032] (21)
047D  05                 [033] (21)
047E  00                 [034] (22)
047F  00                 [035] (22)
0480  00                 [036] (22)
0481  05                 [037] (22)
0482  00                 [038] (23)
0483  00                 [039] (23)
0484  00                 [040] (23)
0485  06                 [041] (23)
0486  00                 [042] (23)
0487  00                 [043] (25)
0488  00                 [044] (25)
0489  09                 [045] (25)
048A  00                 [046] (25)
048B  00                 [047] (27)
048C  00                 [048] (27)
048D  0A                 [049] (28)
048E  00                 [050] (28)
048F  00                 [051] (28)
0490  00                 [052] (28)
0491  0C                 [053] (28)
0492  00                 [054] (29)
0493  00                 [055] (29)
0494  00                 [056] (29)
0495  0C                 [057] (29)
0496  00                 [058] (29)
0497  00                 [059] (30)
0498  00                 [060] (30)
0499  0C                 [061] (30)
049A  00                 [062] (30)
049B  00                 [063] (30)
049C  00                 [064] (32)
049D  0C                 [065] (32)
049E  00                 [066] (32)
049F  00                 [067] (32)
04A0  00                 [068] (34)
04A1  0C                 [069] (34)
04A2  00                 [070] (34)
04A3  00                 [071] (34)
04A4  00                 [072] (36)
04A5  0C                 [073] (36)
04A6  00                 [074] (36)
04A7  00                 [075] (36)
04A8  00                 [076] (36)
04A9  0E                 [077] (37)
04AA  00                 [078] (37)
04AB  00                 [079] (37)
04AC  00                 [080] (37)
04AD  0E                 [081] (37)
04AE  00                 [082] (38)
04AF  00                 [083] (38)
04B0  00                 [084] (38)
04B1  0E                 [085] (38)
04B2  00                 [086] (39)
04B3  00                 [087] (39)
04B4  00                 [088] (39)
04B5  11                 [089] (39)
04B6  00                 [090] (39)
04B7  00                 [091] (39)
04B8  00                 [092] (39)
04B9  11                 [093] (39)
04BA  00                 [094] (39)
04BB  00                 [095] (39)
04BC  00                 [096] (40)
04BD  11                 [097] (40)
04BE  00                 [098] (40)
04BF  00                 [099] (40)
04C0  00                 [100] (42)
04C1  11                 [101] (42)
04C2  00                 [102] (42)
04C3  00                 [103] (45)
04C4  00                 [104] (45)
04C5  11                 [105] (45)
04C6  00                 [106] (45)
04C7  00                 [107] (45)
04C8  00                 [108] (46)
04C9  12                 [109] (49)
04CA  00                 [110] (49)
04CB  00                 [111] (49)
04CC  00                 [112] (49)
04CD  15                 [113] (49)
04CE  00                 [114] (50)
04CF  00                 [115] (50)
04D0  00                 [116] (50)
04D1  15                 [117] (50)
04D2  00                 [118] (50)
04D3  00                 [119] (51)
04D4  00                 [120] (51)
04D5  15                 [121] (51)
04D6  00                 [122] (51)
04D7  00                 [123] (51)
04D8  00                 [124] (53)
04D9  15                 [125] (53)
04DA  00                 [126] (53)
04DB  00                 [127] (53)
04DC  00                 [128] (55)
04DD  15                 [129] (55)
04DE  00                 [130] (55)
04DF  00                 [131] (56)
04E0  00                 [132] (56)
04E1  16                 [133] (57)
04E2  00                 [134] (57)
04E3  00                 [135] (57)
04E4  00                 [136] (57)
04E5  16                 [137] (57)
04E6  00                 [138] (58)
04E7  00                 [139] (58)
04E8  00                 [140] (58)
04E9  16                 [141] (58)
04EA  00                 [142] (59)
04EB  00                 [143] (59)
04EC  00                 [144] (59)
04ED  16                 [145] (59)
04EE  00                 [146] (59)
04EF  00                 [147] (61)
04F0  00                 [148] (61)
04F1  17                 [149] (61)
04F2  00                 [150] (61)
04F3  00                 [151] (63)
04F4  00                 [152] (64)
04F5  17                 [153] (65)
04F6  00                 [154] (69)
04F7  00                 [155] (69)
04F8  00                 [156] (69)
04F9  17                 [157] (69)
04FA  00                 [158] (69)
04FB  00                 [159] (69)
04FC  00                 [160] (69)
04FD  17                 [161] (69)
04FE  00                 [162] (69)
04FF  00                 [163] (69)
0500  00                 [164] (70)
0501  17                 [165] (70)
0502  00                 [166] (70)
0503  00                 [167] (70)
0504  00                 [168] (70)
0505  19                 [169] (71)
0506  00                 [170] (71)
0507  00                 [171] (71)
0508  00                 [172] (71)
0509  19                 [173] (71)
050A  00                 [174] (71)
050B  00                 [175] (71)
050C  00                 [176] (72)
050D  19                 [177] (72)
050E  00                 [178] (72)
050F  00                 [179] (76)
0510  00                 [180] (76)
0511  19                 [181] (76)
0512  00                 [182] (77)
0513  00                 [183] (77)
0514  00                 [184] (77)
0515  1B                 [185] (78)
0516  00                 [186] (78)
0517  00                 [187] (78)
0518  00                 [188] (78)
0519  1B                 [189] (78)
051A  00                 [190] (78)
051B  00                 [191] (81)
051C  00                 [192] (81)
051D  1C                 [193] (81)
051E  00                 [194] (82)
051F  00                 [195] (82)
0520  00                 [196] (85)
                         * locals:
076D  00                 sizelocvars (0)
                         * upvalues:
076E  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
076F  04                 sizelineinfo (4)
                         [pc] (line)
0770  55                 [1] (85)
0771  00                 [2] (85)
0772  00                 [3] (4)
0773  00                 [4] (85)
                         * locals:
0780  00                 sizelocvars (0)
                         * upvalues:
0781  00                 sizeupvalues (0)
                         ** end of function **

0782                     ** end of chunk **
