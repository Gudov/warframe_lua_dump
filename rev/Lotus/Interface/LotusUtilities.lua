code size: 1817
code size: 13
code size: 31
code size: 21
code size: 95
code size: 62
code size: 271
code size: 14
code size: 13
code size: 10
code size: 27
code size: 5
code size: 19
code size: 7
code size: 78
code size: 66
code size: 5
code size: 64
code size: 5
code size: 17
code size: 10
code size: 29
code size: 4
code size: 15
code size: 4
code size: 25
code size: 129
code size: 11
code size: 9
code size: 30
code size: 557
code size: 27
code size: 1
code size: 19
code size: 24
code size: 49
code size: 94
code size: 35
code size: 42
code size: 48
code size: 32
code size: 8
code size: 47
code size: 25
code size: 15
code size: 69
code size: 16
code size: 23
code size: 18
code size: 24
code size: 38
code size: 6
code size: 8
code size: 7
code size: 12
code size: 91
code size: 88
code size: 23
code size: 42
code size: 4
code size: 3
code size: 19
code size: 76
code size: 30
code size: 204
code size: 5
code size: 34
code size: 35
code size: 41
code size: 10
code size: 17
code size: 4
code size: 17
code size: 4
code size: 17
code size: 4
code size: 17
code size: 40
code size: 27
code size: 69
code size: 4
code size: 28
code size: 4
code size: 31
code size: 4
code size: 4
code size: 4
code size: 12
code size: 5
code size: 24
code size: 384
code size: 3
code size: 7
code size: 3
code size: 7
code size: 9
code size: 5
code size: 12
code size: 5
code size: 12
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 17
code size: 17
code size: 5
code size: 33
code size: 17
code size: 17
code size: 17
code size: 5
code size: 17
code size: 5
code size: 17
code size: 5
code size: 25
code size: 5
code size: 19
code size: 17
code size: 5
code size: 17
code size: 17
code size: 17
code size: 5
code size: 9
code size: 11
code size: 185
code size: 5
code size: 98
code size: 35
code size: 20
code size: 5
code size: 44
code size: 41
code size: 59
code size: 19
code size: 49
code size: 46
code size: 36
code size: 4
code size: 12
code size: 26
code size: 55
code size: 4
code size: 53
code size: 5
code size: 99
code size: 4
code size: 12
code size: 4
code size: 104
code size: 5
code size: 8
code size: 5
code size: 2
code size: 6
code size: 6
code size: 62
code size: 8
code size: 7
code size: 20
code size: 7
code size: 3
code size: 290
code size: 10
code size: 5
code size: 8
code size: 100
code size: 5
code size: 156
code size: 5
code size: 61
code size: 126
code size: 110
code size: 149
code size: 20
code size: 47
code size: 5
code size: 79
code size: 159
code size: 5
code size: 26
code size: 38
code size: 31
code size: 4
code size: 24
code size: 38
code size: 32
code size: 42
code size: 53
code size: 128
code size: 14
code size: 32
code size: 33
code size: 5
code size: 8
code size: 5
code size: 8
code size: 5
code size: 8
code size: 5
code size: 75
code size: 5
code size: 32
code size: 26
code size: 25
code size: 5
code size: 28
code size: 5
code size: 33
code size: 5
code size: 304
code size: 8
code size: 56
code size: 5
code size: 815
code size: 19
code size: 158
code size: 39
code size: 105
code size: 106
code size: 7
code size: 33
code size: 5
code size: 195
code size: 8
code size: 134
code size: 55
code size: 104
code size: 60
code size: 99
code size: 14
code size: 13
code size: 55
code size: 3
code size: 15
code size: 29
code size: 43
code size: 125
code size: 8
code size: 47
code size: 52
code size: 55
code size: 108
code size: 53
code size: 3
code size: 4
code size: 194
code size: 12
code size: 62
code size: 48
code size: 20
code size: 5
code size: 233
code size: 3
code size: 4
code size: 29
code size: 127
code size: 68
code size: 20
code size: 38
code size: 31
code size: 8
code size: 28
code size: 7
code size: 6
code size: 30
code size: 94
code size: 5
code size: 107
code size: 7
code size: 58
code size: 23
code size: 5
code size: 31
code size: 274
code size: 49
code size: 91
code size: 28
code size: 26
code size: 40
code size: 89
code size: 4
code size: 76
code size: 234
code size: 27
code size: 97
code size: 108
code size: 71
code size: 63
code size: 25
code size: 65
code size: 8
code size: 9
code size: 4
code size: 9
code size: 4
code size: 9
code size: 4
code size: 9
code size: 157
code size: 54
code size: 4
code size: 41
code size: 4
code size: 13
code size: 5
code size: 26
code size: 67
code size: 55
code size: 19
code size: 92
code size: 221
code size: 159
code size: 9
code size: 14
code size: 101
code size: 106
code size: 87
code size: 123
code size: 72
code size: 30
code size: 12
code size: 15
code size: 15
code size: 62
code size: 46
code size: 11
code size: 67
code size: 37
code size: 308
code size: 23
code size: 10
code size: 9
code size: 197
code size: 67
code size: 24
code size: 24
code size: 24
code size: 24
code size: 42
code size: 40
code size: 8
code size: 35
code size: 20
code size: 13
code size: 8
code size: 11
code size: 44
code size: 49
code size: 351
code size: 53
code size: 48
code size: 82
code size: 32
code size: 30
code size: 19
code size: 108
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis C:\wlua_dump\path\Lotus\Interface\LotusUtilities.lua 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  128

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x38E3A30F
  2 [-]: VARARG    R1 R2        ; R1 := R2 := ...
  3 [-]: GETGLOBAL R2 K1        ; R2 := package
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["seeall"]
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: NEWTABLE  R0 21 0      ; R0 := {}
  7 [-]: LOADK     R1 K3        ; R1 := "DT_IMPACT"
  8 [-]: LOADK     R2 K4        ; R2 := "DT_PUNCTURE"
  9 [-]: LOADK     R3 K5        ; R3 := "DT_SLASH"
 10 [-]: LOADK     R4 K6        ; R4 := "DT_FIRE"
 11 [-]: LOADK     R5 K7        ; R5 := "DT_FREEZE"
 12 [-]: LOADK     R6 K8        ; R6 := "DT_ELECTRICITY"
 13 [-]: LOADK     R7 K9        ; R7 := "DT_POISON"
 14 [-]: LOADK     R8 K10       ; R8 := "DT_EXPLOSION"
 15 [-]: LOADK     R9 K11       ; R9 := "DT_RADIATION"
 16 [-]: LOADK     R10 K12      ; R10 := "DT_GAS"
 17 [-]: LOADK     R11 K13      ; R11 := "DT_MAGNETIC"
 18 [-]: LOADK     R12 K14      ; R12 := "DT_VIRAL"
 19 [-]: LOADK     R13 K15      ; R13 := "DT_CORROSIVE"
 20 [-]: LOADK     R14 K16      ; R14 := "DT_RADIANT"
 21 [-]: LOADK     R15 K17      ; R15 := "DT_SENTIENT"
 22 [-]: LOADK     R16 K18      ; R16 := "DT_CINEMATIC"
 23 [-]: LOADK     R17 K19      ; R17 := "DT_SHIELD_DRAIN"
 24 [-]: LOADK     R18 K20      ; R18 := "DT_HEALTH_DRAIN"
 25 [-]: LOADK     R19 K21      ; R19 := "DT_ENERGY_DRAIN"
 26 [-]: LOADK     R20 K22      ; R20 := "DT_FINISHER"
 27 [-]: LOADK     R21 K23      ; R21 := "DT_SUICIDE"
 28 [-]: LOADK     R22 K24      ; R22 := "DT_PHYSICAL"
 29 [-]: LOADK     R23 K25      ; R23 := "DT_INVALID"
 30 [-]: LOADK     R24 K26      ; R24 := "DT_BASE_ELEMENTAL"
 31 [-]: LOADK     R25 K27      ; R25 := "DT_COMPOUND_ELEMENTAL"
 32 [-]: LOADK     R26 K28      ; R26 := "DT_ANY"
 33 [-]: SETLIST   R0 26 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 26
 34 [-]: GETGLOBAL R1 K29       ; R1 := 0x12F3CEFA
 35 [-]: LEN       R2 R0        ; R2 := # R0
 36 [-]: GETGLOBAL R3 K30       ; R3 := Engine
 37 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["DT_ANY"]
 38 [-]: ADD       R3 R3 K31    ; R3 := R3 + 1
 39 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R2 R0        ; R2 := R0
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETGLOBAL R1 K32       ; R1 := 0x2C00D429
 45 [-]: LOADK     R2 K33       ; R2 := "/Lotus/Types/StoreItems/SuitCustomizations/ColourPickerDefaultsItemA"
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: GETGLOBAL R2 K32       ; R2 := 0x2C00D429
 48 [-]: LOADK     R3 K34       ; R3 := "/Lotus/Upgrades/Mods/Fusers/UncommonModFuser"
 49 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 50 [-]: GETGLOBAL R3 K32       ; R3 := 0x2C00D429
 51 [-]: LOADK     R4 K35       ; R4 := "/Lotus/Upgrades/Mods/Fusers/RareModFuser"
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: GETGLOBAL R4 K32       ; R4 := 0x2C00D429
 54 [-]: LOADK     R5 K36       ; R5 := "/Lotus/Types/Game/OrokinGoldenMawAvatar"
 55 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 56 [-]: GETGLOBAL R5 K32       ; R5 := 0x2C00D429
 57 [-]: LOADK     R6 K37       ; R6 := "/Lotus/Types/Items/MiscItems/PhotoboothTile"
 58 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 59 [-]: GETGLOBAL R6 K32       ; R6 := 0x2C00D429
 60 [-]: LOADK     R7 K38       ; R7 := "/Lotus/Types/Items/ShipFeatureItems/ShipFeatureItem"
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: LOADK     R7 K31       ; R7 := 1
 63 [-]: SETGLOBAL R7 K39       ; UI_MODE_IN_SPACE_SHIP := R7
 64 [-]: LOADK     R7 K41       ; R7 := 2
 65 [-]: SETGLOBAL R7 K40       ; UI_MODE_IN_SPACE_HUB := R7
 66 [-]: LOADK     R7 K43       ; R7 := 3
 67 [-]: SETGLOBAL R7 K42       ; UI_MODE_IN_DOJO := R7
 68 [-]: LOADK     R7 K45       ; R7 := 4
 69 [-]: SETGLOBAL R7 K44       ; UI_MODE_IN_GAME := R7
 70 [-]: LOADK     R7 K47       ; R7 := 101
 71 [-]: SETGLOBAL R7 K46       ; REGION_ID_SIMULACRUM := R7
 72 [-]: LOADK     R7 K49       ; R7 := 100
 73 [-]: SETGLOBAL R7 K48       ; REGION_ID_PHOTOBOOTH := R7
 74 [-]: LOADK     R7 K51       ; R7 := 99
 75 [-]: SETGLOBAL R7 K50       ; REGION_ID_PVP := R7
 76 [-]: LOADK     R7 K53       ; R7 := 98
 77 [-]: SETGLOBAL R7 K52       ; REGION_ID_CLAN_DOJO := R7
 78 [-]: LOADK     R7 K55       ; R7 := 97
 79 [-]: SETGLOBAL R7 K54       ; REGION_ID_DOJO_DUEL := R7
 80 [-]: LOADK     R7 K31       ; R7 := 1
 81 [-]: SETGLOBAL R7 K56       ; SLIDER := R7
 82 [-]: LOADK     R7 K41       ; R7 := 2
 83 [-]: SETGLOBAL R7 K57       ; CHECKBOX := R7
 84 [-]: LOADK     R7 K43       ; R7 := 3
 85 [-]: SETGLOBAL R7 K58       ; TOGGLE := R7
 86 [-]: LOADK     R7 K45       ; R7 := 4
 87 [-]: SETGLOBAL R7 K59       ; BUTTON := R7
 88 [-]: LOADK     R7 K61       ; R7 := 5
 89 [-]: SETGLOBAL R7 K60       ; TITLE := R7
 90 [-]: LOADK     R7 K63       ; R7 := 6
 91 [-]: SETGLOBAL R7 K62       ; INPUTBOX := R7
 92 [-]: LOADK     R7 K65       ; R7 := 7
 93 [-]: SETGLOBAL R7 K64       ; SPACER := R7
 94 [-]: LOADK     R7 K67       ; R7 := 8
 95 [-]: SETGLOBAL R7 K66       ; INPUTCOUNT := R7
 96 [-]: LOADK     R7 K69       ; R7 := 9
 97 [-]: SETGLOBAL R7 K68       ; ICONBUTTON := R7
 98 [-]: LOADK     R7 K71       ; R7 := 10
 99 [-]: SETGLOBAL R7 K70       ; CHOICE := R7
100 [-]: LOADK     R7 K73       ; R7 := 11
101 [-]: SETGLOBAL R7 K72       ; COLOR := R7
102 [-]: NEWTABLE  R7 3 0       ; R7 := {}
103 [-]: NEWTABLE  R8 0 2       ; R8 := {}
104 [-]: GETGLOBAL R9 K76       ; R9 := 0xEC274B1A
105 [-]: LOADK     R10 K77      ; R10 := "OperatorChamberRoom"
106 [-]: CALL      R9 2 2       ; R9 := R9(R10)
107 [-]: SETTABLE  R8 K75 R9    ; R8["Name"] := R9
108 [-]: SETTABLE  R8 K78 K79   ; R8["LocTag"] := "/Lotus/Language/Menu/ShipOperatorChamberRoom"
109 [-]: NEWTABLE  R9 0 2       ; R9 := {}
110 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
111 [-]: LOADK     R11 K80      ; R11 := "AlchemyRoom"
112 [-]: CALL      R10 2 2      ; R10 := R10(R11)
113 [-]: SETTABLE  R9 K75 R10   ; R9["Name"] := R10
114 [-]: SETTABLE  R9 K78 K81   ; R9["LocTag"] := "/Lotus/Language/Menu/ShipAlchemyRoom"
115 [-]: NEWTABLE  R10 0 2      ; R10 := {}
116 [-]: GETGLOBAL R11 K76      ; R11 := 0xEC274B1A
117 [-]: LOADK     R12 K82      ; R12 := "PersonalQuartersRoom"
118 [-]: CALL      R11 2 2      ; R11 := R11(R12)
119 [-]: SETTABLE  R10 K75 R11  ; R10["Name"] := R11
120 [-]: SETTABLE  R10 K78 K83  ; R10["LocTag"] := "/Lotus/Language/Menu/ShipPersonalQuartersRoom"
121 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
122 [-]: SETGLOBAL R7 K74       ; SHIP_ROOMS := R7
123 [-]: NEWTABLE  R7 0 2       ; R7 := {}
124 [-]: GETGLOBAL R8 K76       ; R8 := 0xEC274B1A
125 [-]: LOADK     R9 K85       ; R9 := "BridgeRoom"
126 [-]: CALL      R8 2 2       ; R8 := R8(R9)
127 [-]: SETTABLE  R7 K75 R8    ; R7["Name"] := R8
128 [-]: SETTABLE  R7 K78 K86   ; R7["LocTag"] := "/Lotus/Language/Menu/ShipBridgeRoom"
129 [-]: SETGLOBAL R7 K84       ; BRIDGE_ROOM := R7
130 [-]: LOADK     R7 K31       ; R7 := 1
131 [-]: SETGLOBAL R7 K87       ; SOUND_SET_EIDOLON := R7
132 [-]: LOADK     R7 K41       ; R7 := 2
133 [-]: SETGLOBAL R7 K88       ; SOUND_SET_FORTUNA := R7
134 [-]: LOADK     R7 K43       ; R7 := 3
135 [-]: SETGLOBAL R7 K89       ; SOUND_SET_ORB_VALLIS := R7
136 [-]: LOADK     R7 K49       ; R7 := 100
137 [-]: LOADK     R8 K90       ; R8 := 1000
138 [-]: LOADK     R9 K91       ; R9 := 100000
139 [-]: LOADK     R10 K93      ; R10 := "_"
140 [-]: SETGLOBAL R10 K92      ; TAG_SEPERATOR := R10
141 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
142 [-]: LOADK     R11 K95      ; R11 := "Alert"
143 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
144 [-]: SETGLOBAL R10 K94      ; ALERT_TAG := R10
145 [-]: MUL       R10 K31 R9   ; R10 := 1 * R9
146 [-]: SETGLOBAL R10 K96      ; ALERT_FLAG := R10
147 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
148 [-]: LOADK     R11 K98      ; R11 := "Nightmare"
149 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
150 [-]: SETGLOBAL R10 K97      ; NIGHTMARE_TAG := R10
151 [-]: MUL       R10 K41 R9   ; R10 := 2 * R9
152 [-]: SETGLOBAL R10 K99      ; NIGHTMARE_FLAG := R10
153 [-]: LOADK     R10 K101     ; R10 := 28800
154 [-]: SETGLOBAL R10 K100     ; NIGHTMARE_MISSION_INTERVAL := R10
155 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
156 [-]: LOADK     R11 K103     ; R11 := "Event"
157 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
158 [-]: SETGLOBAL R10 K102     ; EVENT_TAG := R10
159 [-]: MUL       R10 K43 R9   ; R10 := 3 * R9
160 [-]: SETGLOBAL R10 K104     ; EVENT_FLAG := R10
161 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
162 [-]: LOADK     R11 K106     ; R11 := "PVP"
163 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
164 [-]: SETGLOBAL R10 K105     ; PVP_TAG := R10
165 [-]: MUL       R10 K45 R9   ; R10 := 4 * R9
166 [-]: SETGLOBAL R10 K107     ; PVP_FLAG := R10
167 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
168 [-]: LOADK     R11 K109     ; R11 := "InvasionAttacker"
169 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
170 [-]: SETGLOBAL R10 K108     ; INVASION_ATTACKER_TAG := R10
171 [-]: MUL       R10 K61 R9   ; R10 := 5 * R9
172 [-]: SETGLOBAL R10 K110     ; INVASION_ATTACKER_FLAG := R10
173 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
174 [-]: LOADK     R11 K112     ; R11 := "InvasionDefender"
175 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
176 [-]: SETGLOBAL R10 K111     ; INVASION_DEFENDER_TAG := R10
177 [-]: MUL       R10 K63 R9   ; R10 := 6 * R9
178 [-]: SETGLOBAL R10 K113     ; INVASION_DEFENDER_FLAG := R10
179 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
180 [-]: LOADK     R11 K115     ; R11 := "HUB"
181 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
182 [-]: SETGLOBAL R10 K114     ; HUB_TAG := R10
183 [-]: MUL       R10 K65 R9   ; R10 := 7 * R9
184 [-]: SETGLOBAL R10 K116     ; HUB_FLAG := R10
185 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
186 [-]: LOADK     R11 K118     ; R11 := "BadlandAttacker"
187 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
188 [-]: SETGLOBAL R10 K117     ; BADLAND_ATTACKER_TAG := R10
189 [-]: MUL       R10 K67 R9   ; R10 := 8 * R9
190 [-]: SETGLOBAL R10 K119     ; BADLAND_ATTACKER_FLAG := R10
191 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
192 [-]: LOADK     R11 K121     ; R11 := "BadlandDefender"
193 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
194 [-]: SETGLOBAL R10 K120     ; BADLAND_DEFENDER_TAG := R10
195 [-]: MUL       R10 K69 R9   ; R10 := 9 * R9
196 [-]: SETGLOBAL R10 K122     ; BADLAND_DEFENDER_FLAG := R10
197 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
198 [-]: LOADK     R11 K124     ; R11 := "BadlandMission"
199 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
200 [-]: SETGLOBAL R10 K123     ; BADLAND_MISSION_TAG := R10
201 [-]: MUL       R10 K71 R9   ; R10 := 10 * R9
202 [-]: SETGLOBAL R10 K125     ; BADLAND_MISSION_FLAG := R10
203 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
204 [-]: LOADK     R11 K127     ; R11 := "Syndicate"
205 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
206 [-]: SETGLOBAL R10 K126     ; SYNDICATE_MISSION_TAG := R10
207 [-]: MUL       R10 K73 R9   ; R10 := 11 * R9
208 [-]: SETGLOBAL R10 K128     ; SYNDICATE_MISSION_FLAG := R10
209 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
210 [-]: LOADK     R11 K130     ; R11 := "Key"
211 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
212 [-]: SETGLOBAL R10 K129     ; KEY_TAG := R10
213 [-]: MUL       R10 K132 R9  ; R10 := 12 * R9
214 [-]: SETGLOBAL R10 K131     ; KEY_FLAG := R10
215 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
216 [-]: LOADK     R11 K134     ; R11 := "Sortie"
217 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
218 [-]: SETGLOBAL R10 K133     ; SORTIE_MISSION_TAG := R10
219 [-]: MUL       R10 K136 R9  ; R10 := 13 * R9
220 [-]: SETGLOBAL R10 K135     ; SORTIE_MISSION_FLAG := R10
221 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
222 [-]: LOADK     R11 K138     ; R11 := "ActiveMission"
223 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
224 [-]: SETGLOBAL R10 K137     ; ACTIVE_MISSION_TAG := R10
225 [-]: MUL       R10 K140 R9  ; R10 := 14 * R9
226 [-]: SETGLOBAL R10 K139     ; ACTIVE_MISSION_FLAG := R10
227 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
228 [-]: LOADK     R11 K142     ; R11 := "GhostTower"
229 [-]: CALL      R10 2 2      ; R10 := R10(R11)
230 [-]: SETGLOBAL R10 K141     ; KUVA_TOWER_GOAL_TAG := R10
231 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
232 [-]: LOADK     R11 K142     ; R11 := "GhostTower"
233 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
234 [-]: SETGLOBAL R10 K143     ; KUVA_TOWER_MISSION_TAG := R10
235 [-]: MUL       R10 K145 R9  ; R10 := 15 * R9
236 [-]: SETGLOBAL R10 K144     ; KUVA_TOWER_MISSION_FLAG := R10
237 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
238 [-]: LOADK     R11 K147     ; R11 := "JUNCTION"
239 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
240 [-]: SETGLOBAL R10 K146     ; JUNCTION_TAG := R10
241 [-]: MUL       R10 K149 R9  ; R10 := 16 * R9
242 [-]: SETGLOBAL R10 K148     ; JUNCTION_FLAG := R10
243 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
244 [-]: LOADK     R11 K151     ; R11 := "Nemesis"
245 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
246 [-]: SETGLOBAL R10 K150     ; NEMESIS_MISSION_TAG := R10
247 [-]: MUL       R10 K153 R9  ; R10 := 17 * R9
248 [-]: SETGLOBAL R10 K152     ; NEMESIS_MISSION_FLAG := R10
249 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
250 [-]: LOADK     R11 K155     ; R11 := "EliteAlert"
251 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
252 [-]: SETGLOBAL R10 K154     ; ELITE_ALERT_TAG := R10
253 [-]: MUL       R10 K157 R9  ; R10 := 18 * R9
254 [-]: SETGLOBAL R10 K156     ; ELITE_ALERT_FLAG := R10
255 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
256 [-]: LOADK     R11 K155     ; R11 := "EliteAlert"
257 [-]: CALL      R10 2 2      ; R10 := R10(R11)
258 [-]: SETGLOBAL R10 K158     ; ELITE_ALERT_PERIODIC_MISSION_TAG := R10
259 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
260 [-]: LOADK     R11 K160     ; R11 := "EliteAlertB"
261 [-]: CALL      R10 2 2      ; R10 := R10(R11)
262 [-]: SETGLOBAL R10 K159     ; ELITE_ALERT_PERIODIC_MISSION_TAG_ALT := R10
263 [-]: LOADK     R10 K162     ; R10 := 3600
264 [-]: SETGLOBAL R10 K161     ; ELITE_ALERT_MISSION_INTERVAL := R10
265 [-]: GETGLOBAL R10 K92      ; R10 := TAG_SEPERATOR
266 [-]: LOADK     R11 K164     ; R11 := "Scenario"
267 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
268 [-]: SETGLOBAL R10 K163     ; SCENARIO_BEACON_TAG := R10
269 [-]: MUL       R10 K166 R9  ; R10 := 19 * R9
270 [-]: SETGLOBAL R10 K165     ; SCENARIO_BEACON_FLAG := R10
271 [-]: LOADK     R10 K162     ; R10 := 3600
272 [-]: SETGLOBAL R10 K167     ; KUVA_TOWER_MISSION_INTERVAL := R10
273 [-]: LOADK     R10 K169     ; R10 := "OptionalGoal"
274 [-]: SETGLOBAL R10 K168     ; OPTIONAL_GOAL_PREFIX := R10
275 [-]: LOADK     R10 K171     ; R10 := "AnyNode"
276 [-]: SETGLOBAL R10 K170     ; ANY_NODE_PREFIX := R10
277 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
278 [-]: LOADK     R11 K173     ; R11 := "CetusHub4"
279 [-]: CALL      R10 2 2      ; R10 := R10(R11)
280 [-]: SETGLOBAL R10 K172     ; CETUS_NODE_TAG := R10
281 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
282 [-]: LOADK     R11 K175     ; R11 := "SolNode228"
283 [-]: CALL      R10 2 2      ; R10 := R10(R11)
284 [-]: SETGLOBAL R10 K174     ; PLAINS_NODE_TAG := R10
285 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
286 [-]: LOADK     R11 K177     ; R11 := "SolarisUnitedHub1"
287 [-]: CALL      R10 2 2      ; R10 := R10(R11)
288 [-]: SETGLOBAL R10 K176     ; FORTUNA_NODE_TAG := R10
289 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
290 [-]: LOADK     R11 K179     ; R11 := "SolNode129"
291 [-]: CALL      R10 2 2      ; R10 := R10(R11)
292 [-]: SETGLOBAL R10 K178     ; ORB_VALLIS_NODE_TAG := R10
293 [-]: LOADK     R10 K181     ; R10 := 0
294 [-]: SETGLOBAL R10 K180     ; PLAINS_ELO_IN_LISET := R10
295 [-]: LOADK     R10 K31      ; R10 := 1
296 [-]: SETGLOBAL R10 K182     ; PLAINS_ELO_INSIDE_SAFE_ZONE := R10
297 [-]: LOADK     R10 K41      ; R10 := 2
298 [-]: SETGLOBAL R10 K183     ; PLAINS_ELO_OUTSIDE_SAFE_ZONE := R10
299 [-]: LOADK     R10 K43      ; R10 := 3
300 [-]: SETGLOBAL R10 K184     ; PLAINS_ELO_BOUNTY_ACTIVE := R10
301 [-]: GETGLOBAL R10 K76      ; R10 := 0xEC274B1A
302 [-]: LOADK     R11 K185     ; R11 := "Darvo"
303 [-]: CALL      R10 2 2      ; R10 := R10(R11)
304 [-]: NEWTABLE  R11 6 0      ; R11 := {}
305 [-]: LOADK     R12 K187     ; R12 := "/Lotus/Language/Game/Faction_GrineerUC"
306 [-]: LOADK     R13 K188     ; R13 := "/Lotus/Language/Game/Faction_CorpusUC"
307 [-]: LOADK     R14 K189     ; R14 := "/Lotus/Language/Game/Faction_InfestationUC"
308 [-]: LOADK     R15 K190     ; R15 := "/Lotus/Language/Game/Faction_OrokinUC"
309 [-]: LOADK     R16 K191     ; R16 := ""
310 [-]: LOADK     R17 K192     ; R17 := "/Lotus/Language/Enemies/RopalolystName"
311 [-]: SETLIST   R11 6 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 6
312 [-]: SETGLOBAL R11 K186     ; FactionNames := R11
313 [-]: LOADK     R11 K194     ; R11 := "???"
314 [-]: SETGLOBAL R11 K193     ; HIDDEN_PLAYER_NAME := R11
315 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
316 [-]: LOADK     R12 K196     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/AlertsFeatureItem"
317 [-]: CALL      R11 2 2      ; R11 := R11(R12)
318 [-]: SETGLOBAL R11 K195     ; SF_ALERTS := R11
319 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
320 [-]: LOADK     R12 K198     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/ArsenalFeatureItem"
321 [-]: CALL      R11 2 2      ; R11 := R11(R12)
322 [-]: SETGLOBAL R11 K197     ; SF_ARSENAL := R11
323 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
324 [-]: LOADK     R12 K200     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
325 [-]: CALL      R11 2 2      ; R11 := R11(R12)
326 [-]: SETGLOBAL R11 K199     ; SF_CLAN := R11
327 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
328 [-]: LOADK     R12 K202     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/FoundryFeatureItem"
329 [-]: CALL      R11 2 2      ; R11 := R11(R12)
330 [-]: SETGLOBAL R11 K201     ; SF_FOUNDRY := R11
331 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
332 [-]: LOADK     R12 K204     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/FoundryVesselUpgradeFeatureItem"
333 [-]: CALL      R11 2 2      ; R11 := R11(R12)
334 [-]: SETGLOBAL R11 K203     ; SF_FOUNDRY_VESSEL_UPGRADE := R11
335 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
336 [-]: LOADK     R12 K206     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryFeatureItem"
337 [-]: CALL      R11 2 2      ; R11 := R11(R12)
338 [-]: SETGLOBAL R11 K205     ; SF_GENETIC_FOUNDRY := R11
339 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
340 [-]: LOADK     R12 K208     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryUpgradeFeatureItem"
341 [-]: CALL      R11 2 2      ; R11 := R11(R12)
342 [-]: SETGLOBAL R11 K207     ; SF_GENETIC_FOUNDRY_UPGRADE := R11
343 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
344 [-]: LOADK     R12 K200     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
345 [-]: CALL      R11 2 2      ; R11 := R11(R12)
346 [-]: SETGLOBAL R11 K209     ; SF_MARKET_TIER_ONE := R11
347 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
348 [-]: LOADK     R12 K200     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
349 [-]: CALL      R11 2 2      ; R11 := R11(R12)
350 [-]: SETGLOBAL R11 K210     ; SF_MARKET_TIER_TWO := R11
351 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
352 [-]: LOADK     R12 K212     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
353 [-]: CALL      R11 2 2      ; R11 := R11(R12)
354 [-]: SETGLOBAL R11 K211     ; SF_MODS := R11
355 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
356 [-]: LOADK     R12 K212     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
357 [-]: CALL      R11 2 2      ; R11 := R11(R12)
358 [-]: SETGLOBAL R11 K213     ; SF_MODS_FUSION := R11
359 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
360 [-]: LOADK     R12 K212     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
361 [-]: CALL      R11 2 2      ; R11 := R11(R12)
362 [-]: SETGLOBAL R11 K214     ; SF_MODS_TRANSMUTE := R11
363 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
364 [-]: LOADK     R12 K200     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
365 [-]: CALL      R11 2 2      ; R11 := R11(R12)
366 [-]: SETGLOBAL R11 K215     ; SF_CONCLAVE := R11
367 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
368 [-]: LOADK     R12 K200     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
369 [-]: CALL      R11 2 2      ; R11 := R11(R12)
370 [-]: SETGLOBAL R11 K216     ; SF_SOCIAL_MENU := R11
371 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
372 [-]: LOADK     R12 K218     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/MercuryNavigationFeatureItem"
373 [-]: CALL      R11 2 2      ; R11 := R11(R12)
374 [-]: SETGLOBAL R11 K217     ; SF_SOLAR_CHART := R11
375 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
376 [-]: LOADK     R12 K220     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/VoidProjectionFeatureItem"
377 [-]: CALL      R11 2 2      ; R11 := R11(R12)
378 [-]: SETGLOBAL R11 K219     ; SF_VOID_PROJECTION := R11
379 [-]: GETGLOBAL R11 K32      ; R11 := 0x2C00D429
380 [-]: LOADK     R12 K222     ; R12 := "/Lotus/Types/Items/ShipFeatureItems/PersonalQuartersFeatureItem"
381 [-]: CALL      R11 2 2      ; R11 := R11(R12)
382 [-]: SETGLOBAL R11 K221     ; SF_PERSONAL_QUARTERS := R11
383 [-]: LOADK     R11 K224     ; R11 := 20
384 [-]: SETGLOBAL R11 K223     ; MAX_PVE_EXTRA_LOADOUTS := R11
385 [-]: LOADK     R11 K224     ; R11 := 20
386 [-]: SETGLOBAL R11 K225     ; MAX_PVP_LOADOUTS := R11
387 [-]: NEWTABLE  R11 0 5      ; R11 := {}
388 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
389 [-]: LOADK     R13 K228     ; R13 := "/Lotus/Types/Game/Projections/T1VoidProjection"
390 [-]: CALL      R12 2 2      ; R12 := R12(R13)
391 [-]: SETTABLE  R11 K227 R12 ; R11["VoidT1"] := R12
392 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
393 [-]: LOADK     R13 K230     ; R13 := "/Lotus/Types/Game/Projections/T2VoidProjection"
394 [-]: CALL      R12 2 2      ; R12 := R12(R13)
395 [-]: SETTABLE  R11 K229 R12 ; R11["VoidT2"] := R12
396 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
397 [-]: LOADK     R13 K232     ; R13 := "/Lotus/Types/Game/Projections/T3VoidProjection"
398 [-]: CALL      R12 2 2      ; R12 := R12(R13)
399 [-]: SETTABLE  R11 K231 R12 ; R11["VoidT3"] := R12
400 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
401 [-]: LOADK     R13 K234     ; R13 := "/Lotus/Types/Game/Projections/T4VoidProjection"
402 [-]: CALL      R12 2 2      ; R12 := R12(R13)
403 [-]: SETTABLE  R11 K233 R12 ; R11["VoidT4"] := R12
404 [-]: GETGLOBAL R12 K32      ; R12 := 0x2C00D429
405 [-]: LOADK     R13 K236     ; R13 := "/Lotus/Types/Game/Projections/T5VoidProjectionImmortal"
406 [-]: CALL      R12 2 2      ; R12 := R12(R13)
407 [-]: SETTABLE  R11 K235 R12 ; R11["VoidT5"] := R12
408 [-]: SETGLOBAL R11 K226     ; VOID_PROJECTION_ITEMS := R11
409 [-]: LOADK     R11 K31      ; R11 := 1
410 [-]: SETGLOBAL R11 K237     ; HT_PROGRESS_BAR := R11
411 [-]: LOADK     R11 K41      ; R11 := 2
412 [-]: SETGLOBAL R11 K238     ; HT_TIMER := R11
413 [-]: LOADK     R11 K43      ; R11 := 3
414 [-]: SETGLOBAL R11 K239     ; HT_HEALTH_TRACKER := R11
415 [-]: LOADK     R11 K45      ; R11 := 4
416 [-]: SETGLOBAL R11 K240     ; HT_ICON_BAR := R11
417 [-]: LOADK     R11 K61      ; R11 := 5
418 [-]: SETGLOBAL R11 K241     ; HT_OPPONENT_BAR := R11
419 [-]: LOADK     R11 K63      ; R11 := 6
420 [-]: SETGLOBAL R11 K242     ; HT_LABEL := R11
421 [-]: NEWTABLE  R11 8 0      ; R11 := {}
422 [-]: GETGLOBAL R12 K244     ; R12 := gDecorationType
423 [-]: GETGLOBAL R13 K245     ; R13 := gDynamicCoverType
424 [-]: GETGLOBAL R14 K246     ; R14 := gEmplacementType
425 [-]: GETGLOBAL R15 K247     ; R15 := gDevourerType
426 [-]: MOVE      R16 R4       ; R16 := R4
427 [-]: GETGLOBAL R17 K248     ; R17 := gBaseAvatarType
428 [-]: GETGLOBAL R18 K249     ; R18 := gHitProxyType
429 [-]: GETGLOBAL R19 K250     ; R19 := gPickUpType
430 [-]: SETLIST   R11 8 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 8
431 [-]: SETGLOBAL R11 K243     ; SCAN_ENTITY_TYPES := R11
432 [-]: NEWTABLE  R11 3 0      ; R11 := {}
433 [-]: GETGLOBAL R12 K76      ; R12 := 0xEC274B1A
434 [-]: LOADK     R13 K251     ; R13 := "GAME_L1_ARM2"
435 [-]: CALL      R12 2 2      ; R12 := R12(R13)
436 [-]: GETGLOBAL R13 K76      ; R13 := 0xEC274B1A
437 [-]: LOADK     R14 K252     ; R14 := "GAME_C1_HEAD1"
438 [-]: CALL      R13 2 2      ; R13 := R13(R14)
439 [-]: GETGLOBAL R14 K76      ; R14 := 0xEC274B1A
440 [-]: LOADK     R15 K253     ; R15 := "GAME_R1_LEG1"
441 [-]: CALL      R14 2 2      ; R14 := R14(R15)
442 [-]: GETGLOBAL R15 K76      ; R15 := 0xEC274B1A
443 [-]: LOADK     R16 K254     ; R16 := "GAME_L1_LEG2"
444 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
445 [-]: SETLIST   R11 0 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 0
446 [-]: GETGLOBAL R12 K255     ; R12 := 0x329BDC44
447 [-]: LOADK     R13 K256     ; R13 := "EE.Interface.Utilities"
448 [-]: CALL      R12 2 2      ; R12 := R12(R13)
449 [-]: GETGLOBAL R13 K255     ; R13 := 0x329BDC44
450 [-]: LOADK     R14 K257     ; R14 := "Lotus.Interface.UIStyleUtilities"
451 [-]: CALL      R13 2 2      ; R13 := R13(R14)
452 [-]: NEWTABLE  R14 4 0      ; R14 := {}
453 [-]: LOADK     R15 K258     ; R15 := "#FFFFFF"
454 [-]: LOADK     R16 K259     ; R16 := "#24D628"
455 [-]: LOADK     R17 K260     ; R17 := "#238DFF"
456 [-]: LOADK     R18 K261     ; R18 := "#C724D6"
457 [-]: SETLIST   R14 4 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 4
458 [-]: NEWTABLE  R15 4 0      ; R15 := {}
459 [-]: LOADK     R16 K262     ; R16 := 16777215
460 [-]: LOADK     R17 K263     ; R17 := 2414120
461 [-]: LOADK     R18 K264     ; R18 := 2330111
462 [-]: LOADK     R19 K265     ; R19 := 13051094
463 [-]: SETLIST   R15 4 1      ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 4
464 [-]: LOADK     R16 K181     ; R16 := 0
465 [-]: LOADK     R17 K181     ; R17 := 0
466 [-]: LOADK     R18 K266     ; R18 := 3289650
467 [-]: MOVE      R19 R0       ; R19 := R0
468 [-]: GETGLOBAL R20 K32      ; R20 := 0x2C00D429
469 [-]: LOADK     R21 K267     ; R21 := "/Lotus/Types/Game/LotusPvpGameRules"
470 [-]: CALL      R20 2 2      ; R20 := R20(R21)
471 [-]: GETGLOBAL R21 K76      ; R21 := 0xEC274B1A
472 [-]: LOADK     R22 K268     ; R22 := "ScanPoint"
473 [-]: CALL      R21 2 2      ; R21 := R21(R22)
474 [-]: GETGLOBAL R22 K76      ; R22 := 0xEC274B1A
475 [-]: LOADK     R23 K269     ; R23 := "KuvaSurvival"
476 [-]: CALL      R22 2 2      ; R22 := R22(R23)
477 [-]: LOADNIL   R23 R28      ; R23 := R24 := R25 := R26 := R27 := R28 := nil
478 [-]: NEWTABLE  R29 0 6      ; R29 := {}
479 [-]: LOADK     R30 K270     ; R30 := "HOURS_PER_SECOND_EIDOLON"
480 [-]: LOADK     R31 K271     ; R31 := 0.0026670000515878
481 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
482 [-]: LOADK     R30 K272     ; R30 := "HOURS_PER_SECOND_VENUS"
483 [-]: LOADK     R31 K273     ; R31 := 0.014999999664724
484 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
485 [-]: LOADK     R30 K274     ; R30 := "TIME_OF_DAY_LABEL_NIGHT"
486 [-]: LOADK     R31 K275     ; R31 := "/Lotus/Language/Game/TimeOfDay_Night"
487 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
488 [-]: LOADK     R30 K276     ; R30 := "TIME_OF_DAY_LABEL_DAY"
489 [-]: LOADK     R31 K277     ; R31 := "/Lotus/Language/Game/TimeOfDay_Day"
490 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
491 [-]: LOADK     R30 K278     ; R30 := "TIME_OF_DAY_LABEL_WARM"
492 [-]: LOADK     R31 K279     ; R31 := "/Lotus/Language/Game/TimeOfDay_Warm"
493 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
494 [-]: LOADK     R30 K280     ; R30 := "TIME_OF_DAY_LABEL_COLD"
495 [-]: LOADK     R31 K281     ; R31 := "/Lotus/Language/Game/TimeOfDay_Cold"
496 [-]: SETTABLE  R29 R30 R31  ; R29[R30] := R31
497 [-]: CLOSURE   R30 0        ; R30 := closure(Function #1)
498 [-]: SETGLOBAL R30 K282     ; GetWarframeFromOperator := R30
499 [-]: SETGLOBAL R30 K283     ; 0x4C021CA9 := R30
500 [-]: CLOSURE   R30 1        ; R30 := closure(Function #2)
501 [-]: MOVE      R0 R12       ; R0 := R12
502 [-]: CLOSURE   R31 2        ; R31 := closure(Function #3)
503 [-]: SETGLOBAL R31 K284     ; ShouldBlockForTutorial := R31
504 [-]: SETGLOBAL R31 K285     ; 0xE2200111 := R31
505 [-]: CLOSURE   R31 3        ; R31 := closure(Function #4)
506 [-]: SETGLOBAL R31 K286     ; GetPhotoshopDefaultSwatches := R31
507 [-]: SETGLOBAL R31 K287     ; 0xC74F331A := R31
508 [-]: CLOSURE   R31 4        ; R31 := closure(Function #5)
509 [-]: SETGLOBAL R31 K288     ; GetKubrowTypesTable := R31
510 [-]: SETGLOBAL R31 K289     ; 0x15C6A9FF := R31
511 [-]: CLOSURE   R31 5        ; R31 := closure(Function #6)
512 [-]: MOVE      R0 R12       ; R0 := R12
513 [-]: CLOSURE   R32 6        ; R32 := closure(Function #7)
514 [-]: CLOSURE   R33 7        ; R33 := closure(Function #8)
515 [-]: CLOSURE   R34 8        ; R34 := closure(Function #9)
516 [-]: CLOSURE   R35 9        ; R35 := closure(Function #10)
517 [-]: CLOSURE   R36 10       ; R36 := closure(Function #11)
518 [-]: MOVE      R0 R35       ; R0 := R35
519 [-]: SETGLOBAL R36 K290     ; GetSecondElements := R36
520 [-]: SETGLOBAL R36 K291     ; 0x3AF4EBA5 := R36
521 [-]: CLOSURE   R36 11       ; R36 := closure(Function #12)
522 [-]: MOVE      R0 R35       ; R0 := R35
523 [-]: MOVE      R0 R31       ; R0 := R31
524 [-]: CLOSURE   R37 12       ; R37 := closure(Function #13)
525 [-]: MOVE      R0 R36       ; R0 := R36
526 [-]: SETGLOBAL R37 K292     ; SecondsToFormattedTime := R37
527 [-]: SETGLOBAL R37 K293     ; 0xC65D09DD := R37
528 [-]: CLOSURE   R37 13       ; R37 := closure(Function #14)
529 [-]: MOVE      R0 R35       ; R0 := R35
530 [-]: SETGLOBAL R37 K294     ; GetTwitterStyleTime := R37
531 [-]: SETGLOBAL R37 K295     ; 0xE5892312 := R37
532 [-]: CLOSURE   R37 14       ; R37 := closure(Function #15)
533 [-]: MOVE      R0 R35       ; R0 := R35
534 [-]: CLOSURE   R38 15       ; R38 := closure(Function #16)
535 [-]: MOVE      R0 R37       ; R0 := R37
536 [-]: SETGLOBAL R38 K296     ; GetStoreTime := R38
537 [-]: SETGLOBAL R38 K297     ; 0x9E1A1D26 := R38
538 [-]: CLOSURE   R38 16       ; R38 := closure(Function #17)
539 [-]: MOVE      R0 R35       ; R0 := R35
540 [-]: CLOSURE   R39 17       ; R39 := closure(Function #18)
541 [-]: MOVE      R0 R38       ; R0 := R38
542 [-]: SETGLOBAL R39 K298     ; GetFullTime := R39
543 [-]: SETGLOBAL R39 K299     ; 0xE233A311 := R39
544 [-]: CLOSURE   R39 18       ; R39 := closure(Function #19)
545 [-]: MOVE      R0 R12       ; R0 := R12
546 [-]: CLOSURE   R40 19       ; R40 := closure(Function #20)
547 [-]: SETGLOBAL R40 K300     ; GetPlayerAvatar := R40
548 [-]: SETGLOBAL R40 K301     ; 0x6C682A30 := R40
549 [-]: CLOSURE   R40 20       ; R40 := closure(Function #21)
550 [-]: CLOSURE   R41 21       ; R41 := closure(Function #22)
551 [-]: MOVE      R0 R40       ; R0 := R40
552 [-]: SETGLOBAL R41 K302     ; GetMainMenuSuitAvatar := R41
553 [-]: SETGLOBAL R41 K303     ; 0xC8003594 := R41
554 [-]: CLOSURE   R41 22       ; R41 := closure(Function #23)
555 [-]: MOVE      R0 R40       ; R0 := R40
556 [-]: CLOSURE   R42 23       ; R42 := closure(Function #24)
557 [-]: MOVE      R0 R41       ; R0 := R41
558 [-]: SETGLOBAL R42 K304     ; GetMainMenuSentinelAvatar := R42
559 [-]: SETGLOBAL R42 K305     ; 0xC58B8390 := R42
560 [-]: CLOSURE   R42 24       ; R42 := closure(Function #25)
561 [-]: MOVE      R0 R17       ; R0 := R17
562 [-]: MOVE      R0 R18       ; R0 := R18
563 [-]: MOVE      R0 R12       ; R0 := R12
564 [-]: CLOSURE   R43 25       ; R43 := closure(Function #26)
565 [-]: MOVE      R0 R42       ; R0 := R42
566 [-]: MOVE      R0 R14       ; R0 := R14
567 [-]: CLOSURE   R44 26       ; R44 := closure(Function #27)
568 [-]: MOVE      R0 R43       ; R0 := R43
569 [-]: SETGLOBAL R44 K306     ; GetItemToolTipText := R44
570 [-]: SETGLOBAL R44 K307     ; 0x58755417 := R44
571 [-]: CLOSURE   R44 27       ; R44 := closure(Function #28)
572 [-]: MOVE      R0 R15       ; R0 := R15
573 [-]: SETGLOBAL R44 K308     ; GetItemRarityColor := R44
574 [-]: SETGLOBAL R44 K309     ; 0x5C54B62F := R44
575 [-]: CLOSURE   R44 28       ; R44 := closure(Function #29)
576 [-]: SETGLOBAL R44 K310     ; OpenColorPicker := R44
577 [-]: SETGLOBAL R44 K311     ; 0x4F1E0655 := R44
578 [-]: CLOSURE   R44 29       ; R44 := closure(Function #30)
579 [-]: MOVE      R0 R40       ; R0 := R40
580 [-]: MOVE      R0 R16       ; R0 := R16
581 [-]: MOVE      R0 R12       ; R0 := R12
582 [-]: SETGLOBAL R44 K312     ; UpdateSuit := R44
583 [-]: SETGLOBAL R44 K313     ; 0x535B496D := R44
584 [-]: CLOSURE   R44 30       ; R44 := closure(Function #31)
585 [-]: SETGLOBAL R44 K314     ; UpdateMiniGameHeadTracking := R44
586 [-]: SETGLOBAL R44 K315     ; 0xED7C58B6 := R44
587 [-]: CLOSURE   R44 31       ; R44 := closure(Function #32)
588 [-]: SETGLOBAL R44 K316     ; OnAvatarImageSet := R44
589 [-]: SETGLOBAL R44 K317     ; 0x31EC8DC9 := R44
590 [-]: CLOSURE   R44 32       ; R44 := closure(Function #33)
591 [-]: SETGLOBAL R44 K318     ; InitializeProfileIconList := R44
592 [-]: SETGLOBAL R44 K319     ; 0x9929BD85 := R44
593 [-]: CLOSURE   R44 33       ; R44 := closure(Function #34)
594 [-]: SETGLOBAL R44 K320     ; UnregisterProfileIcon := R44
595 [-]: SETGLOBAL R44 K321     ; 0xA3CEE3CA := R44
596 [-]: CLOSURE   R44 34       ; R44 := closure(Function #35)
597 [-]: SETGLOBAL R44 K322     ; RegisterProfileIcon := R44
598 [-]: SETGLOBAL R44 K323     ; 0xE45C64A9 := R44
599 [-]: CLOSURE   R44 35       ; R44 := closure(Function #36)
600 [-]: SETGLOBAL R44 K324     ; SetPlayerName := R44
601 [-]: SETGLOBAL R44 K325     ; 0x9DA6A364 := R44
602 [-]: CLOSURE   R44 36       ; R44 := closure(Function #37)
603 [-]: CLOSURE   R45 37       ; R45 := closure(Function #38)
604 [-]: MOVE      R0 R44       ; R0 := R44
605 [-]: SETGLOBAL R45 K326     ; ReportPlayer := R45
606 [-]: SETGLOBAL R45 K327     ; 0xAC11F58D := R45
607 [-]: CLOSURE   R45 38       ; R45 := closure(Function #39)
608 [-]: CLOSURE   R46 39       ; R46 := closure(Function #40)
609 [-]: MOVE      R0 R30       ; R0 := R30
610 [-]: MOVE      R0 R12       ; R0 := R12
611 [-]: MOVE      R0 R44       ; R0 := R44
612 [-]: MOVE      R0 R45       ; R0 := R45
613 [-]: SETGLOBAL R46 K328     ; ShowReportMenu := R46
614 [-]: SETGLOBAL R46 K329     ; 0x87F83DE1 := R46
615 [-]: CLOSURE   R46 40       ; R46 := closure(Function #41)
616 [-]: MOVE      R0 R12       ; R0 := R12
617 [-]: SETGLOBAL R46 K330     ; ToRad := R46
618 [-]: SETGLOBAL R46 K331     ; 0x10FB851 := R46
619 [-]: CLOSURE   R46 41       ; R46 := closure(Function #42)
620 [-]: MOVE      R0 R12       ; R0 := R12
621 [-]: SETGLOBAL R46 K332     ; TransformPixelToViewportCoordinates := R46
622 [-]: SETGLOBAL R46 K333     ; 0x4F6BF2C8 := R46
623 [-]: CLOSURE   R46 42       ; R46 := closure(Function #43)
624 [-]: MOVE      R0 R12       ; R0 := R12
625 [-]: SETGLOBAL R46 K334     ; GetRootBasedPosition := R46
626 [-]: SETGLOBAL R46 K335     ; 0x69B983D := R46
627 [-]: CLOSURE   R46 43       ; R46 := closure(Function #44)
628 [-]: MOVE      R0 R12       ; R0 := R12
629 [-]: SETGLOBAL R46 K336     ; CreateScreenParticles := R46
630 [-]: SETGLOBAL R46 K337     ; 0xBB2F7661 := R46
631 [-]: CLOSURE   R46 44       ; R46 := closure(Function #45)
632 [-]: SETGLOBAL R46 K338     ; SetupAbilityUIBySuitType := R46
633 [-]: SETGLOBAL R46 K339     ; 0x1812B162 := R46
634 [-]: CLOSURE   R46 45       ; R46 := closure(Function #46)
635 [-]: SETGLOBAL R46 K340     ; SetupAbilityUIBySuitInstance := R46
636 [-]: SETGLOBAL R46 K341     ; 0xC37CC1B1 := R46
637 [-]: CLOSURE   R46 46       ; R46 := closure(Function #47)
638 [-]: MOVE      R0 R12       ; R0 := R12
639 [-]: SETGLOBAL R46 K342     ; InitializeContextMenu := R46
640 [-]: SETGLOBAL R46 K343     ; 0x41CFD523 := R46
641 [-]: CLOSURE   R46 47       ; R46 := closure(Function #48)
642 [-]: SETGLOBAL R46 K344     ; GetPointsRemainingForItem := R46
643 [-]: SETGLOBAL R46 K345     ; 0xAFFFF94F := R46
644 [-]: CLOSURE   R46 48       ; R46 := closure(Function #49)
645 [-]: MOVE      R0 R46       ; R0 := R46
646 [-]: MOVE      R0 R6        ; R0 := R6
647 [-]: MOVE      R0 R5        ; R0 := R5
648 [-]: CLOSURE   R47 49       ; R47 := closure(Function #50)
649 [-]: MOVE      R0 R46       ; R0 := R46
650 [-]: SETGLOBAL R47 K346     ; CanPurchaseIfAlreadyOwned := R47
651 [-]: SETGLOBAL R47 K347     ; 0xF205C975 := R47
652 [-]: CLOSURE   R47 50       ; R47 := closure(Function #51)
653 [-]: SETGLOBAL R47 K348     ; HaveEnoughSlots := R47
654 [-]: SETGLOBAL R47 K349     ; 0xF2D7B92 := R47
655 [-]: CLOSURE   R47 51       ; R47 := closure(Function #52)
656 [-]: SETGLOBAL R47 K350     ; IsXPLocked := R47
657 [-]: SETGLOBAL R47 K351     ; 0x29844C14 := R47
658 [-]: CLOSURE   R47 52       ; R47 := closure(Function #53)
659 [-]: SETGLOBAL R47 K352     ; IsPVPLocked := R47
660 [-]: SETGLOBAL R47 K353     ; 0x8E59BE68 := R47
661 [-]: CLOSURE   R47 53       ; R47 := closure(Function #54)
662 [-]: MOVE      R0 R12       ; R0 := R12
663 [-]: SETGLOBAL R47 K354     ; CreateParticles := R47
664 [-]: SETGLOBAL R47 K355     ; 0xD1BD9D6 := R47
665 [-]: CLOSURE   R47 54       ; R47 := closure(Function #55)
666 [-]: CLOSURE   R48 55       ; R48 := closure(Function #56)
667 [-]: MOVE      R0 R47       ; R0 := R47
668 [-]: SETGLOBAL R48 K356     ; IsDevServer := R48
669 [-]: SETGLOBAL R48 K357     ; 0x699874A1 := R48
670 [-]: CLOSURE   R48 56       ; R48 := closure(Function #57)
671 [-]: CLOSURE   R49 57       ; R49 := closure(Function #58)
672 [-]: MOVE      R0 R48       ; R0 := R48
673 [-]: SETGLOBAL R49 K358     ; IsTestServer := R49
674 [-]: SETGLOBAL R49 K359     ; 0x2F65C181 := R49
675 [-]: CLOSURE   R49 58       ; R49 := closure(Function #59)
676 [-]: CLOSURE   R50 59       ; R50 := closure(Function #60)
677 [-]: MOVE      R0 R49       ; R0 := R49
678 [-]: SETGLOBAL R50 K360     ; IsLocalServer := R50
679 [-]: SETGLOBAL R50 K361     ; 0x81B52309 := R50
680 [-]: CLOSURE   R50 60       ; R50 := closure(Function #61)
681 [-]: MOVE      R0 R47       ; R0 := R47
682 [-]: MOVE      R0 R48       ; R0 := R48
683 [-]: MOVE      R0 R49       ; R0 := R49
684 [-]: SETGLOBAL R50 K362     ; IsRetailServer := R50
685 [-]: SETGLOBAL R50 K363     ; 0x1EE43D04 := R50
686 [-]: CLOSURE   R50 61       ; R50 := closure(Function #62)
687 [-]: CLOSURE   R51 62       ; R51 := closure(Function #63)
688 [-]: MOVE      R0 R50       ; R0 := R50
689 [-]: CLOSURE   R52 63       ; R52 := closure(Function #64)
690 [-]: MOVE      R0 R51       ; R0 := R51
691 [-]: CLOSURE   R53 64       ; R53 := closure(Function #65)
692 [-]: MOVE      R0 R50       ; R0 := R50
693 [-]: SETGLOBAL R53 K364     ; IsInGamePlay := R53
694 [-]: SETGLOBAL R53 K365     ; 0xF24EF75 := R53
695 [-]: CLOSURE   R53 65       ; R53 := closure(Function #66)
696 [-]: CLOSURE   R54 66       ; R54 := closure(Function #67)
697 [-]: MOVE      R0 R53       ; R0 := R53
698 [-]: SETGLOBAL R54 K366     ; IsInMissionOrDojo := R54
699 [-]: SETGLOBAL R54 K367     ; 0x917774C := R54
700 [-]: CLOSURE   R54 67       ; R54 := closure(Function #68)
701 [-]: CLOSURE   R55 68       ; R55 := closure(Function #69)
702 [-]: MOVE      R0 R54       ; R0 := R54
703 [-]: SETGLOBAL R55 K368     ; IsInMission := R55
704 [-]: SETGLOBAL R55 K369     ; 0x87D2274C := R55
705 [-]: CLOSURE   R55 69       ; R55 := closure(Function #70)
706 [-]: MOVE      R0 R51       ; R0 := R51
707 [-]: SETGLOBAL R55 K370     ; GetStarChart := R55
708 [-]: SETGLOBAL R55 K371     ; 0xBB3AACF2 := R55
709 [-]: CLOSURE   R55 70       ; R55 := closure(Function #71)
710 [-]: MOVE      R0 R52       ; R0 := R52
711 [-]: SETGLOBAL R55 K372     ; GetStarChartNodes := R55
712 [-]: SETGLOBAL R55 K373     ; 0x7DE1BCCB := R55
713 [-]: CLOSURE   R55 71       ; R55 := closure(Function #72)
714 [-]: CLOSURE   R56 72       ; R56 := closure(Function #73)
715 [-]: MOVE      R0 R55       ; R0 := R55
716 [-]: SETGLOBAL R56 K374     ; RegionIsAKey := R56
717 [-]: SETGLOBAL R56 K375     ; 0x25E52949 := R56
718 [-]: CLOSURE   R56 73       ; R56 := closure(Function #74)
719 [-]: SETGLOBAL R56 K376     ; ResourceDronesEnabledForRegion := R56
720 [-]: SETGLOBAL R56 K377     ; 0xBE7EEB28 := R56
721 [-]: CLOSURE   R56 74       ; R56 := closure(Function #75)
722 [-]: MOVE      R0 R51       ; R0 := R51
723 [-]: MOVE      R0 R55       ; R0 := R55
724 [-]: MOVE      R0 R12       ; R0 := R12
725 [-]: MOVE      R0 R8        ; R0 := R8
726 [-]: SETGLOBAL R56 K378     ; BuildGameModeIdForNode := R56
727 [-]: SETGLOBAL R56 K379     ; 0xE4E5932F := R56
728 [-]: CLOSURE   R56 75       ; R56 := closure(Function #76)
729 [-]: SETGLOBAL R56 K380     ; BuildGameModeIdForSimulacrum := R56
730 [-]: SETGLOBAL R56 K381     ; 0x32551E6B := R56
731 [-]: CLOSURE   R56 76       ; R56 := closure(Function #77)
732 [-]: SETGLOBAL R56 K382     ; IsSimulacrumGameModeId := R56
733 [-]: SETGLOBAL R56 K383     ; 0x7CBB0A6D := R56
734 [-]: CLOSURE   R56 77       ; R56 := closure(Function #78)
735 [-]: SETGLOBAL R56 K384     ; BuildGameModeIdForPhotobooth := R56
736 [-]: SETGLOBAL R56 K385     ; 0xC3CDD2F4 := R56
737 [-]: CLOSURE   R56 78       ; R56 := closure(Function #79)
738 [-]: SETGLOBAL R56 K386     ; IsPhotoboothGameModeId := R56
739 [-]: SETGLOBAL R56 K387     ; 0xA6F22122 := R56
740 [-]: CLOSURE   R56 79       ; R56 := closure(Function #80)
741 [-]: MOVE      R0 R8        ; R0 := R8
742 [-]: SETGLOBAL R56 K388     ; BuildGameModeIdForPVP := R56
743 [-]: SETGLOBAL R56 K389     ; 0xE814F70B := R56
744 [-]: CLOSURE   R56 80       ; R56 := closure(Function #81)
745 [-]: MOVE      R0 R8        ; R0 := R8
746 [-]: SETGLOBAL R56 K390     ; BuildGameModeIdForClanDojo := R56
747 [-]: SETGLOBAL R56 K391     ; 0x3CA84701 := R56
748 [-]: CLOSURE   R56 81       ; R56 := closure(Function #82)
749 [-]: MOVE      R0 R8        ; R0 := R8
750 [-]: SETGLOBAL R56 K392     ; IsClanDojoGameModeId := R56
751 [-]: SETGLOBAL R56 K393     ; 0x791AAA70 := R56
752 [-]: CLOSURE   R56 82       ; R56 := closure(Function #83)
753 [-]: MOVE      R0 R8        ; R0 := R8
754 [-]: SETGLOBAL R56 K394     ; BuildGameModeIdForDojoDuel := R56
755 [-]: SETGLOBAL R56 K395     ; 0x67C55C27 := R56
756 [-]: CLOSURE   R56 83       ; R56 := closure(Function #84)
757 [-]: MOVE      R0 R8        ; R0 := R8
758 [-]: SETGLOBAL R56 K396     ; IsDojoDuelGameModeId := R56
759 [-]: SETGLOBAL R56 K397     ; 0xB1D7A672 := R56
760 [-]: CLOSURE   R56 84       ; R56 := closure(Function #85)
761 [-]: MOVE      R0 R9        ; R0 := R9
762 [-]: CLOSURE   R57 85       ; R57 := closure(Function #86)
763 [-]: MOVE      R0 R56       ; R0 := R56
764 [-]: SETGLOBAL R57 K398     ; IsAlertGameModeId := R57
765 [-]: SETGLOBAL R57 K399     ; 0xB237827A := R57
766 [-]: CLOSURE   R57 86       ; R57 := closure(Function #87)
767 [-]: MOVE      R0 R9        ; R0 := R9
768 [-]: CLOSURE   R58 87       ; R58 := closure(Function #88)
769 [-]: MOVE      R0 R57       ; R0 := R57
770 [-]: SETGLOBAL R58 K400     ; IsNightmareGameModeId := R58
771 [-]: SETGLOBAL R58 K401     ; 0x373A6D66 := R58
772 [-]: CLOSURE   R58 88       ; R58 := closure(Function #89)
773 [-]: MOVE      R0 R9        ; R0 := R9
774 [-]: CLOSURE   R59 89       ; R59 := closure(Function #90)
775 [-]: MOVE      R0 R58       ; R0 := R58
776 [-]: SETGLOBAL R59 K402     ; IsEventGameModeId := R59
777 [-]: SETGLOBAL R59 K403     ; 0x9B7FE040 := R59
778 [-]: CLOSURE   R59 90       ; R59 := closure(Function #91)
779 [-]: MOVE      R0 R9        ; R0 := R9
780 [-]: CLOSURE   R60 91       ; R60 := closure(Function #92)
781 [-]: MOVE      R0 R9        ; R0 := R9
782 [-]: CLOSURE   R61 92       ; R61 := closure(Function #93)
783 [-]: MOVE      R0 R9        ; R0 := R9
784 [-]: CLOSURE   R62 93       ; R62 := closure(Function #94)
785 [-]: MOVE      R0 R61       ; R0 := R61
786 [-]: SETGLOBAL R62 K404     ; IsPvpGameModeId := R62
787 [-]: SETGLOBAL R62 K405     ; 0xECB8288E := R62
788 [-]: CLOSURE   R62 94       ; R62 := closure(Function #95)
789 [-]: MOVE      R0 R9        ; R0 := R9
790 [-]: CLOSURE   R63 95       ; R63 := closure(Function #96)
791 [-]: MOVE      R0 R9        ; R0 := R9
792 [-]: CLOSURE   R64 96       ; R64 := closure(Function #97)
793 [-]: MOVE      R0 R9        ; R0 := R9
794 [-]: CLOSURE   R65 97       ; R65 := closure(Function #98)
795 [-]: MOVE      R0 R9        ; R0 := R9
796 [-]: CLOSURE   R66 98       ; R66 := closure(Function #99)
797 [-]: MOVE      R0 R62       ; R0 := R62
798 [-]: SETGLOBAL R66 K406     ; IsBadlandGameModeId := R66
799 [-]: SETGLOBAL R66 K407     ; 0x34923227 := R66
800 [-]: CLOSURE   R66 99       ; R66 := closure(Function #100)
801 [-]: MOVE      R0 R9        ; R0 := R9
802 [-]: CLOSURE   R67 100      ; R67 := closure(Function #101)
803 [-]: MOVE      R0 R66       ; R0 := R66
804 [-]: SETGLOBAL R67 K408     ; IsSyndicateGameModeId := R67
805 [-]: SETGLOBAL R67 K409     ; 0x682737B9 := R67
806 [-]: CLOSURE   R67 101      ; R67 := closure(Function #102)
807 [-]: MOVE      R0 R9        ; R0 := R9
808 [-]: CLOSURE   R68 102      ; R68 := closure(Function #103)
809 [-]: MOVE      R0 R67       ; R0 := R67
810 [-]: SETGLOBAL R68 K410     ; IsSortieGameModeId := R68
811 [-]: SETGLOBAL R68 K411     ; 0x8C4BFA87 := R68
812 [-]: CLOSURE   R68 103      ; R68 := closure(Function #104)
813 [-]: MOVE      R0 R9        ; R0 := R9
814 [-]: CLOSURE   R69 104      ; R69 := closure(Function #105)
815 [-]: MOVE      R0 R68       ; R0 := R68
816 [-]: SETGLOBAL R69 K412     ; IsSectorWarsGameModeId := R69
817 [-]: SETGLOBAL R69 K413     ; 0x2176E21F := R69
818 [-]: CLOSURE   R69 105      ; R69 := closure(Function #106)
819 [-]: MOVE      R0 R9        ; R0 := R9
820 [-]: SETGLOBAL R69 K414     ; GetSectorWarsTeamFromGameModeId := R69
821 [-]: SETGLOBAL R69 K415     ; 0xE04492C4 := R69
822 [-]: CLOSURE   R69 106      ; R69 := closure(Function #107)
823 [-]: MOVE      R0 R9        ; R0 := R9
824 [-]: CLOSURE   R70 107      ; R70 := closure(Function #108)
825 [-]: MOVE      R0 R69       ; R0 := R69
826 [-]: SETGLOBAL R70 K416     ; IsHubGameModeId := R70
827 [-]: SETGLOBAL R70 K417     ; 0x4E0951F2 := R70
828 [-]: CLOSURE   R70 108      ; R70 := closure(Function #109)
829 [-]: MOVE      R0 R9        ; R0 := R9
830 [-]: CLOSURE   R71 109      ; R71 := closure(Function #110)
831 [-]: MOVE      R0 R9        ; R0 := R9
832 [-]: CLOSURE   R72 110      ; R72 := closure(Function #111)
833 [-]: MOVE      R0 R9        ; R0 := R9
834 [-]: CLOSURE   R73 111      ; R73 := closure(Function #112)
835 [-]: MOVE      R0 R72       ; R0 := R72
836 [-]: SETGLOBAL R73 K418     ; IsJunctionGameModeId := R73
837 [-]: SETGLOBAL R73 K419     ; 0x2F49B682 := R73
838 [-]: CLOSURE   R73 112      ; R73 := closure(Function #113)
839 [-]: MOVE      R0 R8        ; R0 := R8
840 [-]: MOVE      R0 R7        ; R0 := R7
841 [-]: SETGLOBAL R73 K420     ; GetRegionFromGameModeId := R73
842 [-]: SETGLOBAL R73 K421     ; 0x3D9B0320 := R73
843 [-]: CLOSURE   R73 113      ; R73 := closure(Function #114)
844 [-]: SETGLOBAL R73 K422     ; GetNodeFromGameModeId := R73
845 [-]: SETGLOBAL R73 K423     ; 0xACF150E4 := R73
846 [-]: CLOSURE   R73 114      ; R73 := closure(Function #115)
847 [-]: MOVE      R0 R8        ; R0 := R8
848 [-]: MOVE      R0 R7        ; R0 := R7
849 [-]: MOVE      R0 R61       ; R0 := R61
850 [-]: MOVE      R0 R58       ; R0 := R58
851 [-]: MOVE      R0 R62       ; R0 := R62
852 [-]: MOVE      R0 R66       ; R0 := R66
853 [-]: MOVE      R0 R67       ; R0 := R67
854 [-]: MOVE      R0 R69       ; R0 := R69
855 [-]: CLOSURE   R74 115      ; R74 := closure(Function #116)
856 [-]: MOVE      R0 R73       ; R0 := R73
857 [-]: SETGLOBAL R74 K424     ; GetNodeNameFromGameModeId := R74
858 [-]: SETGLOBAL R74 K425     ; 0xDF08A502 := R74
859 [-]: CLOSURE   R74 116      ; R74 := closure(Function #117)
860 [-]: MOVE      R0 R56       ; R0 := R56
861 [-]: MOVE      R0 R58       ; R0 := R58
862 [-]: MOVE      R0 R59       ; R0 := R59
863 [-]: MOVE      R0 R60       ; R0 := R60
864 [-]: MOVE      R0 R66       ; R0 := R66
865 [-]: MOVE      R0 R67       ; R0 := R67
866 [-]: MOVE      R0 R69       ; R0 := R69
867 [-]: MOVE      R0 R63       ; R0 := R63
868 [-]: MOVE      R0 R64       ; R0 := R64
869 [-]: MOVE      R0 R65       ; R0 := R65
870 [-]: MOVE      R0 R70       ; R0 := R70
871 [-]: MOVE      R0 R71       ; R0 := R71
872 [-]: SETGLOBAL R74 K426     ; GetNodeModifierTagFromGameModeId := R74
873 [-]: SETGLOBAL R74 K427     ; 0x6D23E6 := R74
874 [-]: CLOSURE   R74 117      ; R74 := closure(Function #118)
875 [-]: MOVE      R0 R51       ; R0 := R51
876 [-]: MOVE      R0 R73       ; R0 := R73
877 [-]: MOVE      R0 R20       ; R0 := R20
878 [-]: CLOSURE   R75 118      ; R75 := closure(Function #119)
879 [-]: MOVE      R0 R74       ; R0 := R74
880 [-]: CLOSURE   R76 119      ; R76 := closure(Function #120)
881 [-]: MOVE      R0 R75       ; R0 := R75
882 [-]: SETGLOBAL R76 K428     ; CanMergeSquad := R76
883 [-]: SETGLOBAL R76 K429     ; 0xA3185C53 := R76
884 [-]: CLOSURE   R76 120      ; R76 := closure(Function #121)
885 [-]: MOVE      R0 R66       ; R0 := R66
886 [-]: MOVE      R0 R67       ; R0 := R67
887 [-]: MOVE      R0 R8        ; R0 := R8
888 [-]: MOVE      R0 R7        ; R0 := R7
889 [-]: MOVE      R0 R12       ; R0 := R12
890 [-]: MOVE      R0 R73       ; R0 := R73
891 [-]: SETGLOBAL R76 K430     ; GetDisplayedNodeNameFromGameModeId := R76
892 [-]: SETGLOBAL R76 K431     ; 0x31A24130 := R76
893 [-]: CLOSURE   R76 121      ; R76 := closure(Function #122)
894 [-]: SETGLOBAL R76 K432     ; GetAlertExpiryforNode := R76
895 [-]: SETGLOBAL R76 K433     ; 0x39B759B := R76
896 [-]: CLOSURE   R76 122      ; R76 := closure(Function #123)
897 [-]: MOVE      R0 R51       ; R0 := R51
898 [-]: SETGLOBAL R76 K434     ; IsRegionUnlocked := R76
899 [-]: SETGLOBAL R76 K435     ; 0x4D691FA9 := R76
900 [-]: CLOSURE   R76 123      ; R76 := closure(Function #124)
901 [-]: MOVE      R0 R12       ; R0 := R12
902 [-]: SETGLOBAL R76 K436     ; IsChatTextActive := R76
903 [-]: SETGLOBAL R76 K437     ; 0xD076C1F0 := R76
904 [-]: CLOSURE   R76 124      ; R76 := closure(Function #125)
905 [-]: MOVE      R0 R56       ; R0 := R56
906 [-]: SETGLOBAL R76 K438     ; IsSessionExpired := R76
907 [-]: SETGLOBAL R76 K439     ; 0x8F119F2D := R76
908 [-]: CLOSURE   R76 125      ; R76 := closure(Function #126)
909 [-]: SETGLOBAL R76 K440     ; CheckShowTutorial := R76
910 [-]: SETGLOBAL R76 K441     ; 0xE11DD5C8 := R76
911 [-]: CLOSURE   R76 126      ; R76 := closure(Function #127)
912 [-]: CLOSURE   R77 127      ; R77 := closure(Function #128)
913 [-]: MOVE      R0 R76       ; R0 := R76
914 [-]: SETGLOBAL R77 K442     ; CreateHudlessTransmission := R77
915 [-]: SETGLOBAL R77 K443     ; 0x36414212 := R77
916 [-]: CLOSURE   R77 128      ; R77 := closure(Function #129)
917 [-]: SETGLOBAL R77 K444     ; IsTransmissionPlaying := R77
918 [-]: SETGLOBAL R77 K445     ; 0x69E8B767 := R77
919 [-]: CLOSURE   R77 129      ; R77 := closure(Function #130)
920 [-]: SETGLOBAL R77 K446     ; GetActualPlayerRank := R77
921 [-]: SETGLOBAL R77 K447     ; 0x56DB34FD := R77
922 [-]: CLOSURE   R77 130      ; R77 := closure(Function #131)
923 [-]: CLOSURE   R78 131      ; R78 := closure(Function #132)
924 [-]: MOVE      R0 R77       ; R0 := R77
925 [-]: SETGLOBAL R78 K448     ; HasCompletedVorsPrize := R78
926 [-]: SETGLOBAL R78 K449     ; 0x38F05760 := R78
927 [-]: CLOSURE   R78 132      ; R78 := closure(Function #133)
928 [-]: MOVE      R0 R77       ; R0 := R77
929 [-]: CLOSURE   R79 133      ; R79 := closure(Function #134)
930 [-]: MOVE      R0 R78       ; R0 := R78
931 [-]: SETGLOBAL R79 K450     ; HasCompletedQuest := R79
932 [-]: SETGLOBAL R79 K451     ; 0x2AAC7A8C := R79
933 [-]: CLOSURE   R79 134      ; R79 := closure(Function #135)
934 [-]: MOVE      R0 R51       ; R0 := R51
935 [-]: CLOSURE   R80 135      ; R80 := closure(Function #136)
936 [-]: MOVE      R0 R79       ; R0 := R79
937 [-]: SETGLOBAL R80 K452     ; GetStarChartProgress := R80
938 [-]: SETGLOBAL R80 K453     ; 0xB38BE6D7 := R80
939 [-]: CLOSURE   R80 136      ; R80 := closure(Function #137)
940 [-]: MOVE      R0 R79       ; R0 := R79
941 [-]: CLOSURE   R81 137      ; R81 := closure(Function #138)
942 [-]: MOVE      R0 R80       ; R0 := R80
943 [-]: SETGLOBAL R81 K454     ; HasCompletedStarChart := R81
944 [-]: SETGLOBAL R81 K455     ; 0xA8C840EC := R81
945 [-]: CLOSURE   R81 138      ; R81 := closure(Function #139)
946 [-]: CLOSURE   R82 139      ; R82 := closure(Function #140)
947 [-]: MOVE      R0 R81       ; R0 := R81
948 [-]: SETGLOBAL R82 K456     ; GetSaleInfo := R82
949 [-]: SETGLOBAL R82 K457     ; 0xF6769A9 := R82
950 [-]: NEWTABLE  R82 0 0      ; R82 := {}
951 [-]: GETGLOBAL R83 K30      ; R83 := Engine
952 [-]: LOADK     R84 K458     ; R84 := "Item_Suits"
953 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
954 [-]: MOVE      R84 R1       ; R84 := R1
955 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
956 [-]: GETGLOBAL R83 K30      ; R83 := Engine
957 [-]: LOADK     R84 K459     ; R84 := "Item_LongGuns"
958 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
959 [-]: MOVE      R84 R1       ; R84 := R1
960 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
961 [-]: GETGLOBAL R83 K30      ; R83 := Engine
962 [-]: LOADK     R84 K460     ; R84 := "Item_Pistols"
963 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
964 [-]: MOVE      R84 R1       ; R84 := R1
965 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
966 [-]: GETGLOBAL R83 K30      ; R83 := Engine
967 [-]: LOADK     R84 K461     ; R84 := "Item_Melee"
968 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
969 [-]: MOVE      R84 R1       ; R84 := R1
970 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
971 [-]: GETGLOBAL R83 K30      ; R83 := Engine
972 [-]: LOADK     R84 K462     ; R84 := "Item_Sentinels"
973 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
974 [-]: MOVE      R84 R1       ; R84 := R1
975 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
976 [-]: GETGLOBAL R83 K30      ; R83 := Engine
977 [-]: LOADK     R84 K463     ; R84 := "Item_SentinelWeapons"
978 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
979 [-]: MOVE      R84 R1       ; R84 := R1
980 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
981 [-]: GETGLOBAL R83 K30      ; R83 := Engine
982 [-]: LOADK     R84 K464     ; R84 := "Item_WeaponSkins"
983 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
984 [-]: MOVE      R84 R1       ; R84 := R1
985 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
986 [-]: GETGLOBAL R83 K30      ; R83 := Engine
987 [-]: LOADK     R84 K465     ; R84 := "Item_FlavourItems"
988 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
989 [-]: MOVE      R84 R1       ; R84 := R1
990 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
991 [-]: GETGLOBAL R83 K30      ; R83 := Engine
992 [-]: LOADK     R84 K466     ; R84 := "Item_SpaceSuits"
993 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
994 [-]: MOVE      R84 R1       ; R84 := R1
995 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
996 [-]: GETGLOBAL R83 K30      ; R83 := Engine
997 [-]: LOADK     R84 K467     ; R84 := "Item_SpaceGuns"
998 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
999 [-]: MOVE      R84 R1       ; R84 := R1
1000 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1001 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1002 [-]: LOADK     R84 K468     ; R84 := "Item_SpaceMelee"
1003 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1004 [-]: MOVE      R84 R1       ; R84 := R1
1005 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1006 [-]: GETGLOBAL R83 K30      ; R83 := Engine
1007 [-]: LOADK     R84 K469     ; R84 := "Item_Recipes"
1008 [-]: GETTABLE  R83 R83 R84  ; R83 := R83[R84]
1009 [-]: MOVE      R84 R1       ; R84 := R1
1010 [-]: SETTABLE  R82 R83 R84  ; R82[R83] := R84
1011 [-]: CLOSURE   R83 140      ; R83 := closure(Function #141)
1012 [-]: MOVE      R0 R82       ; R0 := R82
1013 [-]: CLOSURE   R84 141      ; R84 := closure(Function #142)
1014 [-]: MOVE      R0 R83       ; R0 := R83
1015 [-]: SETGLOBAL R84 K470     ; IsProratedPackageCategory := R84
1016 [-]: SETGLOBAL R84 K471     ; 0x74DF12BA := R84
1017 [-]: CLOSURE   R84 142      ; R84 := closure(Function #143)
1018 [-]: CLOSURE   R85 143      ; R85 := closure(Function #144)
1019 [-]: CLOSURE   R86 144      ; R86 := closure(Function #145)
1020 [-]: CLOSURE   R87 145      ; R87 := closure(Function #146)
1021 [-]: MOVE      R0 R84       ; R0 := R84
1022 [-]: MOVE      R0 R86       ; R0 := R86
1023 [-]: MOVE      R0 R85       ; R0 := R85
1024 [-]: CLOSURE   R88 146      ; R88 := closure(Function #147)
1025 [-]: MOVE      R0 R87       ; R0 := R87
1026 [-]: SETGLOBAL R88 K472     ; BinarySearch := R88
1027 [-]: SETGLOBAL R88 K473     ; 0x8DDCFB59 := R88
1028 [-]: CLOSURE   R88 147      ; R88 := closure(Function #148)
1029 [-]: CLOSURE   R89 148      ; R89 := closure(Function #149)
1030 [-]: MOVE      R0 R83       ; R0 := R83
1031 [-]: MOVE      R0 R87       ; R0 := R87
1032 [-]: MOVE      R0 R88       ; R0 := R88
1033 [-]: CLOSURE   R90 149      ; R90 := closure(Function #150)
1034 [-]: MOVE      R0 R89       ; R0 := R89
1035 [-]: SETGLOBAL R90 K474     ; ShouldGiveFromPackage := R90
1036 [-]: SETGLOBAL R90 K475     ; 0xC6B90DAD := R90
1037 [-]: CLOSURE   R90 150      ; R90 := closure(Function #151)
1038 [-]: MOVE      R0 R19       ; R0 := R19
1039 [-]: SETGLOBAL R90 K476     ; ProratedBundlesEnabled := R90
1040 [-]: SETGLOBAL R90 K477     ; 0x32D02883 := R90
1041 [-]: CLOSURE   R90 151      ; R90 := closure(Function #152)
1042 [-]: MOVE      R0 R6        ; R0 := R6
1043 [-]: MOVE      R0 R27       ; R0 := R27
1044 [-]: MOVE      R0 R28       ; R0 := R28
1045 [-]: MOVE      R0 R81       ; R0 := R81
1046 [-]: MOVE      R0 R19       ; R0 := R19
1047 [-]: MOVE      R0 R89       ; R0 := R89
1048 [-]: MOVE      R0 R90       ; R0 := R90
1049 [-]: CLOSURE   R91 152      ; R91 := closure(Function #153)
1050 [-]: MOVE      R0 R90       ; R0 := R90
1051 [-]: SETGLOBAL R91 K478     ; GetStoreItemPrice := R91
1052 [-]: SETGLOBAL R91 K479     ; 0xC5BE56F := R91
1053 [-]: NEWTABLE  R91 8 0      ; R91 := {}
1054 [-]: LOADK     R92 K480     ; R92 := "/Lotus/Language/Menu/AP_UNIVERSAL"
1055 [-]: LOADK     R93 K481     ; R93 := "/Lotus/Language/Menu/AP_ATTACK"
1056 [-]: LOADK     R94 K482     ; R94 := "/Lotus/Language/Menu/AP_DEFENSE"
1057 [-]: LOADK     R95 K483     ; R95 := "/Lotus/Language/Menu/AP_TACTIC"
1058 [-]: LOADK     R96 K484     ; R96 := "/Lotus/Language/Menu/AP_POWER"
1059 [-]: LOADK     R97 K485     ; R97 := "/Lotus/Language/Menu/AP_PRECEPT"
1060 [-]: LOADK     R98 K486     ; R98 := "/Lotus/Language/Menu/AP_FUSION"
1061 [-]: LOADK     R99 K487     ; R99 := "/Lotus/Language/Menu/AP_WARD"
1062 [-]: SETLIST   R91 8 1      ; R91[(1-1)*FPF+i] := R(91+i), 1 <= i <= 8
1063 [-]: CLOSURE   R92 153      ; R92 := closure(Function #154)
1064 [-]: MOVE      R0 R91       ; R0 := R91
1065 [-]: SETGLOBAL R92 K488     ; GetPolarityName := R92
1066 [-]: SETGLOBAL R92 K489     ; 0xCB51F14 := R92
1067 [-]: CLOSURE   R92 154      ; R92 := closure(Function #155)
1068 [-]: SETGLOBAL R92 K490     ; GetPVPEloRatingForRank := R92
1069 [-]: SETGLOBAL R92 K491     ; 0x16FF1D4B := R92
1070 [-]: CLOSURE   R92 155      ; R92 := closure(Function #156)
1071 [-]: MOVE      R0 R40       ; R0 := R40
1072 [-]: CLOSURE   R93 156      ; R93 := closure(Function #157)
1073 [-]: MOVE      R0 R92       ; R0 := R92
1074 [-]: SETGLOBAL R93 K492     ; GetPlayerEloRating := R93
1075 [-]: SETGLOBAL R93 K493     ; 0xDE3B6CC2 := R93
1076 [-]: CLOSURE   R93 157      ; R93 := closure(Function #158)
1077 [-]: MOVE      R0 R21       ; R0 := R21
1078 [-]: MOVE      R0 R4        ; R0 := R4
1079 [-]: MOVE      R0 R93       ; R0 := R93
1080 [-]: CLOSURE   R94 158      ; R94 := closure(Function #159)
1081 [-]: MOVE      R0 R93       ; R0 := R93
1082 [-]: SETGLOBAL R94 K494     ; FilterStatusEntity := R94
1083 [-]: SETGLOBAL R94 K495     ; 0xABC89504 := R94
1084 [-]: CLOSURE   R94 159      ; R94 := closure(Function #160)
1085 [-]: MOVE      R0 R12       ; R0 := R12
1086 [-]: CLOSURE   R95 160      ; R95 := closure(Function #161)
1087 [-]: MOVE      R0 R94       ; R0 := R94
1088 [-]: SETGLOBAL R95 K496     ; GetAllPurchasedItems := R95
1089 [-]: SETGLOBAL R95 K497     ; 0x807BEC79 := R95
1090 [-]: CLOSURE   R95 161      ; R95 := closure(Function #162)
1091 [-]: MOVE      R0 R12       ; R0 := R12
1092 [-]: MOVE      R0 R2        ; R0 := R2
1093 [-]: MOVE      R0 R3        ; R0 := R3
1094 [-]: CLOSURE   R96 162      ; R96 := closure(Function #163)
1095 [-]: MOVE      R0 R12       ; R0 := R12
1096 [-]: MOVE      R0 R95       ; R0 := R95
1097 [-]: SETGLOBAL R96 K498     ; GetRewardDesc := R96
1098 [-]: SETGLOBAL R96 K499     ; 0xF030C338 := R96
1099 [-]: CLOSURE   R96 163      ; R96 := closure(Function #164)
1100 [-]: CLOSURE   R97 164      ; R97 := closure(Function #165)
1101 [-]: MOVE      R0 R96       ; R0 := R96
1102 [-]: SETGLOBAL R97 K500     ; GetRecipeIconTexture := R97
1103 [-]: SETGLOBAL R97 K501     ; 0xBCAEB02 := R97
1104 [-]: CLOSURE   R97 165      ; R97 := closure(Function #166)
1105 [-]: MOVE      R0 R96       ; R0 := R96
1106 [-]: SETGLOBAL R97 K502     ; GetRewardIcon := R97
1107 [-]: SETGLOBAL R97 K503     ; 0x7B442AEF := R97
1108 [-]: CLOSURE   R97 166      ; R97 := closure(Function #167)
1109 [-]: MOVE      R0 R96       ; R0 := R96
1110 [-]: SETGLOBAL R97 K504     ; GetRewardIcons := R97
1111 [-]: SETGLOBAL R97 K505     ; 0xD24950E2 := R97
1112 [-]: CLOSURE   R97 167      ; R97 := closure(Function #168)
1113 [-]: MOVE      R0 R0        ; R0 := R0
1114 [-]: SETGLOBAL R97 K506     ; GetDamageTypeTag := R97
1115 [-]: SETGLOBAL R97 K507     ; 0xF02938BA := R97
1116 [-]: CLOSURE   R97 168      ; R97 := closure(Function #169)
1117 [-]: SETGLOBAL R97 K508     ; GetRecoveryMissionInfo := R97
1118 [-]: SETGLOBAL R97 K509     ; 0x61B8E52A := R97
1119 [-]: CLOSURE   R97 169      ; R97 := closure(Function #170)
1120 [-]: SETGLOBAL R97 K510     ; FormatGoalPercentage := R97
1121 [-]: SETGLOBAL R97 K511     ; 0x90BB414A := R97
1122 [-]: CLOSURE   R97 170      ; R97 := closure(Function #171)
1123 [-]: MOVE      R0 R12       ; R0 := R12
1124 [-]: CLOSURE   R98 171      ; R98 := closure(Function #172)
1125 [-]: MOVE      R0 R97       ; R0 := R97
1126 [-]: SETGLOBAL R98 K512     ; AvatarLight := R98
1127 [-]: SETGLOBAL R98 K513     ; 0x3FA0ED79 := R98
1128 [-]: CLOSURE   R98 172      ; R98 := closure(Function #173)
1129 [-]: MOVE      R0 R40       ; R0 := R40
1130 [-]: MOVE      R0 R97       ; R0 := R97
1131 [-]: SETGLOBAL R98 K514     ; MakeMainMenuAvatarKneel := R98
1132 [-]: SETGLOBAL R98 K515     ; 0x41EE5D76 := R98
1133 [-]: CLOSURE   R98 173      ; R98 := closure(Function #174)
1134 [-]: MOVE      R0 R92       ; R0 := R92
1135 [-]: SETGLOBAL R98 K516     ; OnSaveLoadOutCompleteCommon := R98
1136 [-]: SETGLOBAL R98 K517     ; 0x7E7C6700 := R98
1137 [-]: CLOSURE   R98 174      ; R98 := closure(Function #175)
1138 [-]: SETGLOBAL R98 K518     ; MakeLevelItemString := R98
1139 [-]: SETGLOBAL R98 K519     ; 0xCA0021ED := R98
1140 [-]: CLOSURE   R98 175      ; R98 := closure(Function #176)
1141 [-]: SETGLOBAL R98 K520     ; IsHarvestedOrBranded := R98
1142 [-]: SETGLOBAL R98 K521     ; 0x1D5A1B3A := R98
1143 [-]: LOADNIL   R98 R98      ; R98 := nil
1144 [-]: CLOSURE   R99 176      ; R99 := closure(Function #177)
1145 [-]: MOVE      R0 R98       ; R0 := R98
1146 [-]: SETGLOBAL R99 K522     ; GetUIMode := R99
1147 [-]: SETGLOBAL R99 K523     ; 0x84DCC428 := R99
1148 [-]: CLOSURE   R99 177      ; R99 := closure(Function #178)
1149 [-]: CLOSURE   R100 178     ; R100 := closure(Function #179)
1150 [-]: MOVE      R0 R99       ; R0 := R99
1151 [-]: SETGLOBAL R100 K524    ; ShowInputDialog := R100
1152 [-]: SETGLOBAL R100 K525    ; 0x3F74D42B := R100
1153 [-]: CLOSURE   R100 179     ; R100 := closure(Function #180)
1154 [-]: SETGLOBAL R100 K526    ; GetMaxAllianceMemberCount := R100
1155 [-]: SETGLOBAL R100 K527    ; 0x6248034 := R100
1156 [-]: CLOSURE   R100 180     ; R100 := closure(Function #181)
1157 [-]: CLOSURE   R101 181     ; R101 := closure(Function #182)
1158 [-]: MOVE      R0 R100      ; R0 := R100
1159 [-]: SETGLOBAL R101 K528    ; GetNodeAlertMissionInfo := R101
1160 [-]: SETGLOBAL R101 K529    ; 0xCC771CB3 := R101
1161 [-]: CLOSURE   R101 182     ; R101 := closure(Function #183)
1162 [-]: CLOSURE   R102 183     ; R102 := closure(Function #184)
1163 [-]: MOVE      R0 R101      ; R0 := R101
1164 [-]: SETGLOBAL R102 K530    ; GetInvasionInfo := R102
1165 [-]: SETGLOBAL R102 K531    ; 0x18FE37C1 := R102
1166 [-]: CLOSURE   R102 184     ; R102 := closure(Function #185)
1167 [-]: CLOSURE   R103 185     ; R103 := closure(Function #186)
1168 [-]: MOVE      R0 R102      ; R0 := R102
1169 [-]: SETGLOBAL R103 K532    ; GetGoalInfo := R103
1170 [-]: SETGLOBAL R103 K533    ; 0x6025593A := R103
1171 [-]: CLOSURE   R103 186     ; R103 := closure(Function #187)
1172 [-]: CLOSURE   R104 187     ; R104 := closure(Function #188)
1173 [-]: MOVE      R0 R103      ; R0 := R103
1174 [-]: SETGLOBAL R104 K534    ; GetBadlandInfo := R104
1175 [-]: SETGLOBAL R104 K535    ; 0x211DAB92 := R104
1176 [-]: CLOSURE   R104 188     ; R104 := closure(Function #189)
1177 [-]: MOVE      R0 R103      ; R0 := R103
1178 [-]: CLOSURE   R105 189     ; R105 := closure(Function #190)
1179 [-]: MOVE      R0 R104      ; R0 := R104
1180 [-]: SETGLOBAL R105 K536    ; IsBadlandConflict := R105
1181 [-]: SETGLOBAL R105 K537    ; 0x5F62D399 := R105
1182 [-]: CLOSURE   R105 190     ; R105 := closure(Function #191)
1183 [-]: CLOSURE   R106 191     ; R106 := closure(Function #192)
1184 [-]: CLOSURE   R107 192     ; R107 := closure(Function #193)
1185 [-]: CLOSURE   R108 193     ; R108 := closure(Function #194)
1186 [-]: MOVE      R0 R107      ; R0 := R107
1187 [-]: SETGLOBAL R108 K538    ; GetEventTexture := R108
1188 [-]: SETGLOBAL R108 K539    ; 0xC192E91A := R108
1189 [-]: CLOSURE   R108 194     ; R108 := closure(Function #195)
1190 [-]: MOVE      R0 R22       ; R0 := R22
1191 [-]: CLOSURE   R109 195     ; R109 := closure(Function #196)
1192 [-]: MOVE      R0 R108      ; R0 := R108
1193 [-]: SETGLOBAL R109 K540    ; GetMissionTypeName := R109
1194 [-]: SETGLOBAL R109 K541    ; 0x87B2D555 := R109
1195 [-]: CLOSURE   R109 196     ; R109 := closure(Function #197)
1196 [-]: CLOSURE   R110 197     ; R110 := closure(Function #198)
1197 [-]: MOVE      R0 R109      ; R0 := R109
1198 [-]: SETGLOBAL R110 K542    ; GetLocalizedFactionName := R110
1199 [-]: SETGLOBAL R110 K543    ; 0x6DE11B4D := R110
1200 [-]: CLOSURE   R110 198     ; R110 := closure(Function #199)
1201 [-]: MOVE      R0 R107      ; R0 := R107
1202 [-]: CLOSURE   R111 199     ; R111 := closure(Function #200)
1203 [-]: MOVE      R0 R110      ; R0 := R110
1204 [-]: SETGLOBAL R111 K544    ; GetLocationTexture := R111
1205 [-]: SETGLOBAL R111 K545    ; 0x4DC7A4B9 := R111
1206 [-]: CLOSURE   R111 200     ; R111 := closure(Function #201)
1207 [-]: MOVE      R0 R109      ; R0 := R109
1208 [-]: CLOSURE   R112 201     ; R112 := closure(Function #202)
1209 [-]: MOVE      R0 R111      ; R0 := R111
1210 [-]: SETGLOBAL R112 K546    ; TryGetCrossfireDesc := R112
1211 [-]: SETGLOBAL R112 K547    ; 0x3BF74548 := R112
1212 [-]: CLOSURE   R112 202     ; R112 := closure(Function #203)
1213 [-]: MOVE      R0 R30       ; R0 := R30
1214 [-]: MOVE      R0 R100      ; R0 := R100
1215 [-]: MOVE      R0 R102      ; R0 := R102
1216 [-]: MOVE      R0 R10       ; R0 := R10
1217 [-]: MOVE      R0 R108      ; R0 := R108
1218 [-]: MOVE      R0 R101      ; R0 := R101
1219 [-]: MOVE      R0 R12       ; R0 := R12
1220 [-]: MOVE      R0 R110      ; R0 := R110
1221 [-]: MOVE      R0 R104      ; R0 := R104
1222 [-]: MOVE      R0 R111      ; R0 := R111
1223 [-]: SETGLOBAL R112 K548    ; GetMissionInfo := R112
1224 [-]: SETGLOBAL R112 K549    ; 0x4A4041CA := R112
1225 [-]: CLOSURE   R112 203     ; R112 := closure(Function #204)
1226 [-]: SETGLOBAL R112 K550    ; ShowCombos := R112
1227 [-]: SETGLOBAL R112 K551    ; 0xB830D275 := R112
1228 [-]: CLOSURE   R112 204     ; R112 := closure(Function #205)
1229 [-]: SETGLOBAL R112 K552    ; GetMeleeStanceUpgradeInfo := R112
1230 [-]: SETGLOBAL R112 K553    ; 0x2CD7A8E8 := R112
1231 [-]: CLOSURE   R112 205     ; R112 := closure(Function #206)
1232 [-]: SETGLOBAL R112 K554    ; RemoveModsFromWeapon := R112
1233 [-]: SETGLOBAL R112 K555    ; 0x197C6456 := R112
1234 [-]: CLOSURE   R112 206     ; R112 := closure(Function #207)
1235 [-]: SETGLOBAL R112 K556    ; GetGameModeTexture := R112
1236 [-]: SETGLOBAL R112 K557    ; 0x19CF2844 := R112
1237 [-]: CLOSURE   R112 207     ; R112 := closure(Function #208)
1238 [-]: CLOSURE   R113 208     ; R113 := closure(Function #209)
1239 [-]: MOVE      R0 R112      ; R0 := R112
1240 [-]: SETGLOBAL R113 K558    ; GetQuestInfo := R113
1241 [-]: SETGLOBAL R113 K559    ; 0x68C19111 := R113
1242 [-]: CLOSURE   R26 209      ; R26 := closure(Function #210)
1243 [-]: MOVE      R0 R112      ; R0 := R112
1244 [-]: CLOSURE   R113 210     ; R113 := closure(Function #211)
1245 [-]: MOVE      R0 R26       ; R0 := R26
1246 [-]: SETGLOBAL R113 K560    ; GetActiveQuest := R113
1247 [-]: SETGLOBAL R113 K561    ; 0x52C8784B := R113
1248 [-]: CLOSURE   R113 211     ; R113 := closure(Function #212)
1249 [-]: MOVE      R0 R12       ; R0 := R12
1250 [-]: MOVE      R0 R43       ; R0 := R43
1251 [-]: SETGLOBAL R113 K562    ; GetAllKeys := R113
1252 [-]: SETGLOBAL R113 K563    ; 0x7B440FBB := R113
1253 [-]: CLOSURE   R113 212     ; R113 := closure(Function #213)
1254 [-]: MOVE      R0 R12       ; R0 := R12
1255 [-]: MOVE      R0 R76       ; R0 := R76
1256 [-]: SETGLOBAL R113 K564    ; UpdateUIConsoleTriggers := R113
1257 [-]: SETGLOBAL R113 K565    ; 0xB0E29C2B := R113
1258 [-]: CLOSURE   R113 213     ; R113 := closure(Function #214)
1259 [-]: SETGLOBAL R113 K566    ; DoesStringContainAllDigits := R113
1260 [-]: SETGLOBAL R113 K567    ; 0x7F92A1F1 := R113
1261 [-]: CLOSURE   R113 214     ; R113 := closure(Function #215)
1262 [-]: SETGLOBAL R113 K568    ; UpdateHeadTracking := R113
1263 [-]: SETGLOBAL R113 K569    ; 0x7D9577DB := R113
1264 [-]: CLOSURE   R113 215     ; R113 := closure(Function #216)
1265 [-]: MOVE      R0 R51       ; R0 := R51
1266 [-]: SETGLOBAL R113 K570    ; GetUnlockedNavFeatures := R113
1267 [-]: SETGLOBAL R113 K571    ; 0x8217C048 := R113
1268 [-]: CLOSURE   R113 216     ; R113 := closure(Function #217)
1269 [-]: MOVE      R0 R12       ; R0 := R12
1270 [-]: SETGLOBAL R113 K572    ; SetUpInWorldPanel := R113
1271 [-]: SETGLOBAL R113 K573    ; 0xFED4DB22 := R113
1272 [-]: CLOSURE   R113 217     ; R113 := closure(Function #218)
1273 [-]: SETGLOBAL R113 K574    ; LinearToSRGB := R113
1274 [-]: SETGLOBAL R113 K575    ; 0x16076AC5 := R113
1275 [-]: CLOSURE   R113 218     ; R113 := closure(Function #219)
1276 [-]: SETGLOBAL R113 K576    ; SRGBToLinear := R113
1277 [-]: SETGLOBAL R113 K577    ; 0x767F3616 := R113
1278 [-]: LOADNIL   R113 R113    ; R113 := nil
1279 [-]: CLOSURE   R114 219     ; R114 := closure(Function #220)
1280 [-]: MOVE      R0 R30       ; R0 := R30
1281 [-]: MOVE      R0 R113      ; R0 := R113
1282 [-]: CLOSURE   R115 220     ; R115 := closure(Function #221)
1283 [-]: MOVE      R0 R114      ; R0 := R114
1284 [-]: SETGLOBAL R115 K578    ; LocalizePolarities := R115
1285 [-]: SETGLOBAL R115 K579    ; 0xA141F573 := R115
1286 [-]: CLOSURE   R115 221     ; R115 := closure(Function #222)
1287 [-]: MOVE      R0 R113      ; R0 := R113
1288 [-]: MOVE      R0 R114      ; R0 := R114
1289 [-]: SETGLOBAL R115 K580    ; GetTagForPolarity := R115
1290 [-]: SETGLOBAL R115 K581    ; 0x4E0FA551 := R115
1291 [-]: CLOSURE   R115 222     ; R115 := closure(Function #223)
1292 [-]: SETGLOBAL R115 K582    ; ShowQuestCompleted := R115
1293 [-]: SETGLOBAL R115 K583    ; 0x5473C024 := R115
1294 [-]: CLOSURE   R115 223     ; R115 := closure(Function #224)
1295 [-]: MOVE      R0 R12       ; R0 := R12
1296 [-]: SETGLOBAL R115 K584    ; ApplyGenericBackerMaterial := R115
1297 [-]: SETGLOBAL R115 K585    ; 0xA539AE46 := R115
1298 [-]: CLOSURE   R115 224     ; R115 := closure(Function #225)
1299 [-]: MOVE      R0 R12       ; R0 := R12
1300 [-]: CLOSURE   R116 225     ; R116 := closure(Function #226)
1301 [-]: MOVE      R0 R115      ; R0 := R115
1302 [-]: SETGLOBAL R116 K586    ; GetReputationInfoForSyndicate := R116
1303 [-]: SETGLOBAL R116 K587    ; 0x171EF3D3 := R116
1304 [-]: CLOSURE   R116 226     ; R116 := closure(Function #227)
1305 [-]: MOVE      R0 R115      ; R0 := R115
1306 [-]: CLOSURE   R117 227     ; R117 := closure(Function #228)
1307 [-]: MOVE      R0 R12       ; R0 := R12
1308 [-]: SETGLOBAL R117 K588    ; DrawItem := R117
1309 [-]: SETGLOBAL R117 K589    ; 0x323C4EEF := R117
1310 [-]: CLOSURE   R117 228     ; R117 := closure(Function #229)
1311 [-]: SETGLOBAL R117 K590    ; GetDailyDeal := R117
1312 [-]: SETGLOBAL R117 K591    ; 0x88466559 := R117
1313 [-]: CLOSURE   R117 229     ; R117 := closure(Function #230)
1314 [-]: SETGLOBAL R117 K592    ; GetLocalizedItemName := R117
1315 [-]: SETGLOBAL R117 K593    ; 0xE0E8215D := R117
1316 [-]: CLOSURE   R117 230     ; R117 := closure(Function #231)
1317 [-]: SETGLOBAL R117 K594    ; OpenTrainingMission := R117
1318 [-]: SETGLOBAL R117 K595    ; 0xE5BC9072 := R117
1319 [-]: CLOSURE   R117 231     ; R117 := closure(Function #232)
1320 [-]: CLOSURE   R118 232     ; R118 := closure(Function #233)
1321 [-]: MOVE      R0 R117      ; R0 := R117
1322 [-]: SETGLOBAL R118 K596    ; GetTrainingRetryPlatinumCost := R118
1323 [-]: SETGLOBAL R118 K597    ; 0x6652B1E1 := R118
1324 [-]: CLOSURE   R118 233     ; R118 := closure(Function #234)
1325 [-]: MOVE      R0 R36       ; R0 := R36
1326 [-]: MOVE      R0 R117      ; R0 := R117
1327 [-]: SETGLOBAL R118 K598    ; CanRankUp := R118
1328 [-]: SETGLOBAL R118 K599    ; 0x419A9335 := R118
1329 [-]: CLOSURE   R118 234     ; R118 := closure(Function #235)
1330 [-]: CLOSURE   R119 235     ; R119 := closure(Function #236)
1331 [-]: MOVE      R0 R12       ; R0 := R12
1332 [-]: MOVE      R0 R118      ; R0 := R118
1333 [-]: SETGLOBAL R119 K600    ; OnChallengePassed := R119
1334 [-]: SETGLOBAL R119 K601    ; 0xA083E74B := R119
1335 [-]: CLOSURE   R119 236     ; R119 := closure(Function #237)
1336 [-]: SETGLOBAL R119 K602    ; GetFriendlyPlayers := R119
1337 [-]: SETGLOBAL R119 K603    ; 0xFFE2E560 := R119
1338 [-]: CLOSURE   R119 237     ; R119 := closure(Function #238)
1339 [-]: CLOSURE   R120 238     ; R120 := closure(Function #239)
1340 [-]: MOVE      R0 R119      ; R0 := R119
1341 [-]: SETGLOBAL R120 K604    ; GetLoadoutPresetName := R120
1342 [-]: SETGLOBAL R120 K605    ; 0xF9C9C5E0 := R120
1343 [-]: CLOSURE   R120 239     ; R120 := closure(Function #240)
1344 [-]: MOVE      R0 R26       ; R0 := R26
1345 [-]: MOVE      R0 R50       ; R0 := R50
1346 [-]: MOVE      R0 R51       ; R0 := R51
1347 [-]: SETGLOBAL R120 K606    ; UpdateQuests := R120
1348 [-]: SETGLOBAL R120 K607    ; 0xAC374B10 := R120
1349 [-]: CLOSURE   R120 240     ; R120 := closure(Function #241)
1350 [-]: MOVE      R0 R11       ; R0 := R11
1351 [-]: SETGLOBAL R120 K608    ; GetScanPointBones := R120
1352 [-]: SETGLOBAL R120 K609    ; 0x22AFC053 := R120
1353 [-]: CLOSURE   R120 241     ; R120 := closure(Function #242)
1354 [-]: MOVE      R0 R11       ; R0 := R11
1355 [-]: SETGLOBAL R120 K610    ; MaxScanPointBones := R120
1356 [-]: SETGLOBAL R120 K611    ; 0x103D4551 := R120
1357 [-]: CLOSURE   R120 242     ; R120 := closure(Function #243)
1358 [-]: SETGLOBAL R120 K612    ; RayCastForScanPoints := R120
1359 [-]: SETGLOBAL R120 K613    ; 0x48D69274 := R120
1360 [-]: CLOSURE   R120 243     ; R120 := closure(Function #244)
1361 [-]: SETGLOBAL R120 K614    ; HasPvpCompatibleGear := R120
1362 [-]: SETGLOBAL R120 K615    ; 0xFD8F5603 := R120
1363 [-]: CLOSURE   R120 244     ; R120 := closure(Function #245)
1364 [-]: MOVE      R0 R12       ; R0 := R12
1365 [-]: SETGLOBAL R120 K616    ; AdjustBluerSize := R120
1366 [-]: SETGLOBAL R120 K617    ; 0xBB4CFBEF := R120
1367 [-]: CLOSURE   R120 245     ; R120 := closure(Function #246)
1368 [-]: SETGLOBAL R120 K618    ; GetInputCameraRotation := R120
1369 [-]: SETGLOBAL R120 K619    ; 0xA28A41D := R120
1370 [-]: CLOSURE   R120 246     ; R120 := closure(Function #247)
1371 [-]: MOVE      R0 R30       ; R0 := R30
1372 [-]: SETGLOBAL R120 K620    ; ViewConsoleProfile := R120
1373 [-]: SETGLOBAL R120 K621    ; 0xB0D93769 := R120
1374 [-]: CLOSURE   R120 247     ; R120 := closure(Function #248)
1375 [-]: SETGLOBAL R120 K622    ; GetCurrentPurchaseSource := R120
1376 [-]: SETGLOBAL R120 K623    ; 0xC30DEA7B := R120
1377 [-]: CLOSURE   R28 248      ; R28 := closure(Function #249)
1378 [-]: CLOSURE   R120 249     ; R120 := closure(Function #250)
1379 [-]: MOVE      R0 R28       ; R0 := R28
1380 [-]: SETGLOBAL R120 K624    ; GetPriceWithCoupon := R120
1381 [-]: SETGLOBAL R120 K625    ; 0x4077344E := R120
1382 [-]: CLOSURE   R120 250     ; R120 := closure(Function #251)
1383 [-]: SETGLOBAL R120 K626    ; GetCouponName := R120
1384 [-]: SETGLOBAL R120 K627    ; 0x5E05D17A := R120
1385 [-]: CLOSURE   R27 251      ; R27 := closure(Function #252)
1386 [-]: CLOSURE   R120 252     ; R120 := closure(Function #253)
1387 [-]: MOVE      R0 R27       ; R0 := R27
1388 [-]: SETGLOBAL R120 K628    ; PopulateCouponInfo := R120
1389 [-]: SETGLOBAL R120 K629    ; 0x38523E08 := R120
1390 [-]: CLOSURE   R120 253     ; R120 := closure(Function #254)
1391 [-]: MOVE      R0 R1        ; R0 := R1
1392 [-]: CLOSURE   R121 254     ; R121 := closure(Function #255)
1393 [-]: MOVE      R0 R120      ; R0 := R120
1394 [-]: SETGLOBAL R121 K630    ; GetAvailableColourPickers := R121
1395 [-]: SETGLOBAL R121 K631    ; 0x2F28E7A1 := R121
1396 [-]: CLOSURE   R121 255     ; R121 := closure(Function #256)
1397 [-]: MOVE      R0 R120      ; R0 := R120
1398 [-]: SETGLOBAL R121 K632    ; GetRandomColorPalette := R121
1399 [-]: SETGLOBAL R121 K633    ; 0x6925D1CA := R121
1400 [-]: CLOSURE   R121 256     ; R121 := closure(Function #257)
1401 [-]: MOVE      R0 R115      ; R0 := R115
1402 [-]: CLOSURE   R122 257     ; R122 := closure(Function #258)
1403 [-]: MOVE      R0 R121      ; R0 := R121
1404 [-]: SETGLOBAL R122 K634    ; GetPvPLoadoutCapacity := R122
1405 [-]: SETGLOBAL R122 K635    ; 0x54387620 := R122
1406 [-]: CLOSURE   R122 258     ; R122 := closure(Function #259)
1407 [-]: MOVE      R0 R87       ; R0 := R87
1408 [-]: MOVE      R0 R88       ; R0 := R88
1409 [-]: SETGLOBAL R122 K636    ; GetRecipesOwned := R122
1410 [-]: SETGLOBAL R122 K637    ; 0x60DD7E3F := R122
1411 [-]: CLOSURE   R122 259     ; R122 := closure(Function #260)
1412 [-]: MOVE      R0 R83       ; R0 := R83
1413 [-]: MOVE      R0 R89       ; R0 := R89
1414 [-]: MOVE      R0 R19       ; R0 := R19
1415 [-]: MOVE      R0 R90       ; R0 := R90
1416 [-]: MOVE      R0 R87       ; R0 := R87
1417 [-]: MOVE      R0 R88       ; R0 := R88
1418 [-]: MOVE      R0 R6        ; R0 := R6
1419 [-]: MOVE      R0 R121      ; R0 := R121
1420 [-]: SETGLOBAL R122 K638    ; GetNumOwned := R122
1421 [-]: SETGLOBAL R122 K639    ; 0xEEECC310 := R122
1422 [-]: CLOSURE   R122 260     ; R122 := closure(Function #261)
1423 [-]: SETGLOBAL R122 K640    ; GetImageDimansionsFromName := R122
1424 [-]: SETGLOBAL R122 K641    ; 0xA4DBD566 := R122
1425 [-]: CLOSURE   R122 261     ; R122 := closure(Function #262)
1426 [-]: SETGLOBAL R122 K642    ; VerifyInventorySlots := R122
1427 [-]: SETGLOBAL R122 K643    ; 0x32D8500E := R122
1428 [-]: CLOSURE   R122 262     ; R122 := closure(Function #263)
1429 [-]: MOVE      R0 R12       ; R0 := R12
1430 [-]: SETGLOBAL R122 K644    ; ShowInvalidBinError := R122
1431 [-]: SETGLOBAL R122 K645    ; 0x9EAA2F2A := R122
1432 [-]: CLOSURE   R122 263     ; R122 := closure(Function #264)
1433 [-]: SETGLOBAL R122 K646    ; GetProductTimeLeft := R122
1434 [-]: SETGLOBAL R122 K647    ; 0xC698B2E2 := R122
1435 [-]: CLOSURE   R122 264     ; R122 := closure(Function #265)
1436 [-]: SETGLOBAL R122 K648    ; IsProductExpired := R122
1437 [-]: SETGLOBAL R122 K649    ; 0x6FF3E228 := R122
1438 [-]: NEWTABLE  R122 0 10    ; R122 := {}
1439 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1440 [-]: LOADK     R124 K651    ; R124 := "AP_UNIVERSAL"
1441 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1442 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1443 [-]: SETTABLE  R124 K75 K191; R124["Name"] := ""
1444 [-]: LOADK     R125 K652    ; R125 := "Icon"
1445 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1446 [-]: LOADK     R125 K653    ; R125 := "Ability"
1447 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1448 [-]: LOADK     R125 K654    ; R125 := "Lens"
1449 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1450 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1451 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1452 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1453 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1454 [-]: LOADK     R124 K656    ; R124 := "AP_ATTACK"
1455 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1456 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1457 [-]: LOADK     R125 K657    ; R125 := "TennoWay_Madurai"
1458 [-]: SETTABLE  R124 K75 R125; R124["Name"] := R125
1459 [-]: LOADK     R125 K652    ; R125 := "Icon"
1460 [-]: LOADK     R126 K658    ; R126 := "FocusLensMadurai.png"
1461 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1462 [-]: LOADK     R125 K653    ; R125 := "Ability"
1463 [-]: LOADK     R126 K659    ; R126 := "/Lotus/Upgrades/Focus/Attack/AttackFocusAbility"
1464 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1465 [-]: LOADK     R125 K654    ; R125 := "Lens"
1466 [-]: LOADK     R126 K660    ; R126 := "MADURAI"
1467 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1468 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1469 [-]: LOADK     R126 K661    ; R126 := "/Lotus/Language/Game/TennoWay_Madurai"
1470 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1471 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1472 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1473 [-]: LOADK     R124 K662    ; R124 := "AP_DEFENSE"
1474 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1475 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1476 [-]: LOADK     R125 K663    ; R125 := "TennoWay_Vazarin"
1477 [-]: SETTABLE  R124 K75 R125; R124["Name"] := R125
1478 [-]: LOADK     R125 K652    ; R125 := "Icon"
1479 [-]: LOADK     R126 K664    ; R126 := "FocusLensVazarin.png"
1480 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1481 [-]: LOADK     R125 K653    ; R125 := "Ability"
1482 [-]: LOADK     R126 K665    ; R126 := "/Lotus/Upgrades/Focus/Defense/DefenseFocusAbility"
1483 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1484 [-]: LOADK     R125 K654    ; R125 := "Lens"
1485 [-]: LOADK     R126 K666    ; R126 := "VAZARIN"
1486 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1487 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1488 [-]: LOADK     R126 K667    ; R126 := "/Lotus/Language/Game/TennoWay_Vazarin"
1489 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1490 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1491 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1492 [-]: LOADK     R124 K668    ; R124 := "AP_TACTIC"
1493 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1494 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1495 [-]: LOADK     R125 K669    ; R125 := "TennoWay_Naramon"
1496 [-]: SETTABLE  R124 K75 R125; R124["Name"] := R125
1497 [-]: LOADK     R125 K652    ; R125 := "Icon"
1498 [-]: LOADK     R126 K670    ; R126 := "FocusLensNaramon.png"
1499 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1500 [-]: LOADK     R125 K653    ; R125 := "Ability"
1501 [-]: LOADK     R126 K671    ; R126 := "/Lotus/Upgrades/Focus/Tactic/TacticFocusAbility"
1502 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1503 [-]: LOADK     R125 K654    ; R125 := "Lens"
1504 [-]: LOADK     R126 K672    ; R126 := "NARAMON"
1505 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1506 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1507 [-]: LOADK     R126 K673    ; R126 := "/Lotus/Language/Game/TennoWay_Naramon"
1508 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1509 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1510 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1511 [-]: LOADK     R124 K674    ; R124 := "AP_POWER"
1512 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1513 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1514 [-]: LOADK     R125 K675    ; R125 := "TennoWay_Zenurik"
1515 [-]: SETTABLE  R124 K75 R125; R124["Name"] := R125
1516 [-]: LOADK     R125 K652    ; R125 := "Icon"
1517 [-]: LOADK     R126 K676    ; R126 := "FocusLensZenurik.png"
1518 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1519 [-]: LOADK     R125 K653    ; R125 := "Ability"
1520 [-]: LOADK     R126 K677    ; R126 := "/Lotus/Upgrades/Focus/Power/PowerFocusAbility"
1521 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1522 [-]: LOADK     R125 K654    ; R125 := "Lens"
1523 [-]: LOADK     R126 K678    ; R126 := "ZENURIK"
1524 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1525 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1526 [-]: LOADK     R126 K679    ; R126 := "/Lotus/Language/Game/TennoWay_Zenurik"
1527 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1528 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1529 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1530 [-]: LOADK     R124 K680    ; R124 := "AP_PRECEPT"
1531 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1532 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1533 [-]: SETTABLE  R124 K75 K191; R124["Name"] := ""
1534 [-]: LOADK     R125 K652    ; R125 := "Icon"
1535 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1536 [-]: LOADK     R125 K653    ; R125 := "Ability"
1537 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1538 [-]: LOADK     R125 K654    ; R125 := "Lens"
1539 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1540 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1541 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1542 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1543 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1544 [-]: LOADK     R124 K681    ; R124 := "AP_FUSION"
1545 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1546 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1547 [-]: SETTABLE  R124 K75 K191; R124["Name"] := ""
1548 [-]: LOADK     R125 K652    ; R125 := "Icon"
1549 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1550 [-]: LOADK     R125 K653    ; R125 := "Ability"
1551 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1552 [-]: LOADK     R125 K654    ; R125 := "Lens"
1553 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1554 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1555 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1556 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1557 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1558 [-]: LOADK     R124 K682    ; R124 := "AP_WARD"
1559 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1560 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1561 [-]: LOADK     R125 K683    ; R125 := "TennoWay_Unairu"
1562 [-]: SETTABLE  R124 K75 R125; R124["Name"] := R125
1563 [-]: LOADK     R125 K652    ; R125 := "Icon"
1564 [-]: LOADK     R126 K684    ; R126 := "FocusLensUnairu.png"
1565 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1566 [-]: LOADK     R125 K653    ; R125 := "Ability"
1567 [-]: LOADK     R126 K685    ; R126 := "/Lotus/Upgrades/Focus/Ward/WardFocusAbility"
1568 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1569 [-]: LOADK     R125 K654    ; R125 := "Lens"
1570 [-]: LOADK     R126 K686    ; R126 := "UNAIRU"
1571 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1572 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1573 [-]: LOADK     R126 K687    ; R126 := "/Lotus/Language/Game/TennoWay_Unairu"
1574 [-]: SETTABLE  R124 R125 R126; R124[R125] := R126
1575 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1576 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1577 [-]: LOADK     R124 K688    ; R124 := "AP_UMBRA"
1578 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1579 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1580 [-]: SETTABLE  R124 K75 K191; R124["Name"] := ""
1581 [-]: LOADK     R125 K652    ; R125 := "Icon"
1582 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1583 [-]: LOADK     R125 K653    ; R125 := "Ability"
1584 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1585 [-]: LOADK     R125 K654    ; R125 := "Lens"
1586 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1587 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1588 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1589 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1590 [-]: GETGLOBAL R123 K650    ; R123 := Lotus_Game
1591 [-]: LOADK     R124 K689    ; R124 := "AP_ANY"
1592 [-]: GETTABLE  R123 R123 R124; R123 := R123[R124]
1593 [-]: NEWTABLE  R124 0 5     ; R124 := {}
1594 [-]: SETTABLE  R124 K75 K191; R124["Name"] := ""
1595 [-]: LOADK     R125 K652    ; R125 := "Icon"
1596 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1597 [-]: LOADK     R125 K653    ; R125 := "Ability"
1598 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1599 [-]: LOADK     R125 K654    ; R125 := "Lens"
1600 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1601 [-]: LOADK     R125 K655    ; R125 := "Polarity"
1602 [-]: SETTABLE  R124 R125 K191; R124[R125] := ""
1603 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
1604 [-]: CLOSURE   R123 265     ; R123 := closure(Function #266)
1605 [-]: MOVE      R0 R12       ; R0 := R12
1606 [-]: MOVE      R0 R122      ; R0 := R122
1607 [-]: SETGLOBAL R123 K690    ; GetPolarityInfoForLens := R123
1608 [-]: SETGLOBAL R123 K691    ; 0xC919C32B := R123
1609 [-]: CLOSURE   R123 266     ; R123 := closure(Function #267)
1610 [-]: MOVE      R0 R122      ; R0 := R122
1611 [-]: SETGLOBAL R123 K692    ; GetWayInfo := R123
1612 [-]: SETGLOBAL R123 K693    ; 0xC389B1EE := R123
1613 [-]: CLOSURE   R123 267     ; R123 := closure(Function #268)
1614 [-]: SETGLOBAL R123 K694    ; ClearOperatorLookAt := R123
1615 [-]: SETGLOBAL R123 K695    ; 0x16DE506A := R123
1616 [-]: CLOSURE   R123 268     ; R123 := closure(Function #269)
1617 [-]: SETGLOBAL R123 K696    ; UpdateOperatorLookAt := R123
1618 [-]: SETGLOBAL R123 K697    ; 0xADEB49A2 := R123
1619 [-]: CLOSURE   R123 269     ; R123 := closure(Function #270)
1620 [-]: SETGLOBAL R123 K698    ; IsDeluxeSkin := R123
1621 [-]: SETGLOBAL R123 K699    ; 0x9D00A93D := R123
1622 [-]: CLOSURE   R123 270     ; R123 := closure(Function #271)
1623 [-]: MOVE      R0 R12       ; R0 := R12
1624 [-]: SETGLOBAL R123 K700    ; SetupThreeColorText := R123
1625 [-]: SETGLOBAL R123 K701    ; 0xD106B633 := R123
1626 [-]: CLOSURE   R123 271     ; R123 := closure(Function #272)
1627 [-]: SETGLOBAL R123 K702    ; SetEnergyToTeamColor := R123
1628 [-]: SETGLOBAL R123 K703    ; 0xD6CCEE85 := R123
1629 [-]: CLOSURE   R123 272     ; R123 := closure(Function #273)
1630 [-]: SETGLOBAL R123 K704    ; InterruptTransmission := R123
1631 [-]: SETGLOBAL R123 K705    ; 0xD66C1755 := R123
1632 [-]: CLOSURE   R123 273     ; R123 := closure(Function #274)
1633 [-]: SETGLOBAL R123 K706    ; CheckSteamPurchaseAvailability := R123
1634 [-]: SETGLOBAL R123 K707    ; 0x9611A506 := R123
1635 [-]: CLOSURE   R123 274     ; R123 := closure(Function #275)
1636 [-]: SETGLOBAL R123 K708    ; CheckDiscordPurchaseAvailability := R123
1637 [-]: SETGLOBAL R123 K709    ; 0xCD7C310D := R123
1638 [-]: CLOSURE   R123 275     ; R123 := closure(Function #276)
1639 [-]: MOVE      R0 R12       ; R0 := R12
1640 [-]: SETGLOBAL R123 K710    ; GetTreasureName := R123
1641 [-]: SETGLOBAL R123 K711    ; 0x5D44A5BB := R123
1642 [-]: CLOSURE   R123 276     ; R123 := closure(Function #277)
1643 [-]: SETGLOBAL R123 K712    ; GetSecondCount := R123
1644 [-]: SETGLOBAL R123 K713    ; 0x4C78FB5D := R123
1645 [-]: CLOSURE   R123 277     ; R123 := closure(Function #278)
1646 [-]: CLOSURE   R124 278     ; R124 := closure(Function #279)
1647 [-]: MOVE      R0 R123      ; R0 := R123
1648 [-]: SETGLOBAL R124 K714    ; GetMinuteCount := R124
1649 [-]: SETGLOBAL R124 K715    ; 0x70CE4131 := R124
1650 [-]: CLOSURE   R124 279     ; R124 := closure(Function #280)
1651 [-]: CLOSURE   R125 280     ; R125 := closure(Function #281)
1652 [-]: MOVE      R0 R124      ; R0 := R124
1653 [-]: SETGLOBAL R125 K716    ; GetHourCount := R125
1654 [-]: SETGLOBAL R125 K717    ; 0xD79ED180 := R125
1655 [-]: CLOSURE   R125 281     ; R125 := closure(Function #282)
1656 [-]: CLOSURE   R126 282     ; R126 := closure(Function #283)
1657 [-]: MOVE      R0 R125      ; R0 := R125
1658 [-]: SETGLOBAL R126 K718    ; GetDayCount := R126
1659 [-]: SETGLOBAL R126 K719    ; 0x3CDA77B3 := R126
1660 [-]: CLOSURE   R126 283     ; R126 := closure(Function #284)
1661 [-]: SETGLOBAL R126 K720    ; GetWeekCount := R126
1662 [-]: SETGLOBAL R126 K721    ; 0xB831F903 := R126
1663 [-]: CLOSURE   R126 284     ; R126 := closure(Function #285)
1664 [-]: MOVE      R0 R125      ; R0 := R125
1665 [-]: SETGLOBAL R126 K722    ; RollForNightmareMutators := R126
1666 [-]: SETGLOBAL R126 K723    ; 0xECD82119 := R126
1667 [-]: CLOSURE   R23 285      ; R23 := closure(Function #286)
1668 [-]: CLOSURE   R126 286     ; R126 := closure(Function #287)
1669 [-]: MOVE      R0 R23       ; R0 := R23
1670 [-]: SETGLOBAL R126 K724    ; GetOmegaCards := R126
1671 [-]: SETGLOBAL R126 K725    ; 0x6E9EB0BA := R126
1672 [-]: CLOSURE   R24 287      ; R24 := closure(Function #288)
1673 [-]: MOVE      R0 R23       ; R0 := R23
1674 [-]: MOVE      R0 R25       ; R0 := R25
1675 [-]: CLOSURE   R126 288     ; R126 := closure(Function #289)
1676 [-]: MOVE      R0 R24       ; R0 := R24
1677 [-]: SETGLOBAL R126 K726    ; IsOverOmegaLimit := R126
1678 [-]: SETGLOBAL R126 K727    ; 0x10731BBC := R126
1679 [-]: CLOSURE   R25 289      ; R25 := closure(Function #290)
1680 [-]: CLOSURE   R126 290     ; R126 := closure(Function #291)
1681 [-]: MOVE      R0 R25       ; R0 := R25
1682 [-]: SETGLOBAL R126 K728    ; GetMaxOmegaCapacity := R126
1683 [-]: SETGLOBAL R126 K729    ; 0x7FBD8638 := R126
1684 [-]: CLOSURE   R126 291     ; R126 := closure(Function #292)
1685 [-]: SETGLOBAL R126 K730    ; IsCurrentSuitFullyInfested := R126
1686 [-]: SETGLOBAL R126 K731    ; 0x844C0E68 := R126
1687 [-]: CLOSURE   R126 292     ; R126 := closure(Function #293)
1688 [-]: SETGLOBAL R126 K732    ; ShowTradeUI := R126
1689 [-]: SETGLOBAL R126 K733    ; 0x2AA3C899 := R126
1690 [-]: CLOSURE   R126 293     ; R126 := closure(Function #294)
1691 [-]: SETGLOBAL R126 K734    ; UpdateScannerInfo := R126
1692 [-]: SETGLOBAL R126 K735    ; 0x6C965031 := R126
1693 [-]: CLOSURE   R126 294     ; R126 := closure(Function #295)
1694 [-]: SETGLOBAL R126 K736    ; SetFlashlightDimness := R126
1695 [-]: SETGLOBAL R126 K737    ; 0xC3F8AC06 := R126
1696 [-]: CLOSURE   R126 295     ; R126 := closure(Function #296)
1697 [-]: SETGLOBAL R126 K738    ; GetRewardTextForMastery := R126
1698 [-]: SETGLOBAL R126 K739    ; 0x33E3EE5C := R126
1699 [-]: CLOSURE   R126 296     ; R126 := closure(Function #297)
1700 [-]: MOVE      R0 R42       ; R0 := R42
1701 [-]: MOVE      R0 R12       ; R0 := R12
1702 [-]: CLOSURE   R127 297     ; R127 := closure(Function #298)
1703 [-]: MOVE      R0 R126      ; R0 := R126
1704 [-]: SETGLOBAL R127 K740    ; GetPresetInfo := R127
1705 [-]: SETGLOBAL R127 K741    ; 0xC03359B1 := R127
1706 [-]: CLOSURE   R127 298     ; R127 := closure(Function #299)
1707 [-]: SETGLOBAL R127 K742    ; GetClanEmblemPath := R127
1708 [-]: SETGLOBAL R127 K743    ; 0x71ACF9C := R127
1709 [-]: CLOSURE   R127 299     ; R127 := closure(Function #300)
1710 [-]: SETGLOBAL R127 K744    ; GetPersonalGoalProgress := R127
1711 [-]: SETGLOBAL R127 K745    ; 0x94A9020 := R127
1712 [-]: CLOSURE   R127 300     ; R127 := closure(Function #301)
1713 [-]: MOVE      R0 R51       ; R0 := R51
1714 [-]: SETGLOBAL R127 K746    ; HasRelayReconstructionEnemy := R127
1715 [-]: SETGLOBAL R127 K747    ; 0x4D87EDFA := R127
1716 [-]: CLOSURE   R127 301     ; R127 := closure(Function #302)
1717 [-]: SETGLOBAL R127 K748    ; ApplyWeaponRestriction := R127
1718 [-]: SETGLOBAL R127 K749    ; 0x77633D95 := R127
1719 [-]: CLOSURE   R127 302     ; R127 := closure(Function #303)
1720 [-]: SETGLOBAL R127 K750    ; ApplyModlessLoadout := R127
1721 [-]: SETGLOBAL R127 K751    ; 0xD1A36B88 := R127
1722 [-]: CLOSURE   R127 303     ; R127 := closure(Function #304)
1723 [-]: SETGLOBAL R127 K752    ; IsNoModsMode := R127
1724 [-]: SETGLOBAL R127 K753    ; 0xA88E08E0 := R127
1725 [-]: CLOSURE   R127 304     ; R127 := closure(Function #305)
1726 [-]: SETGLOBAL R127 K754    ; IsFirstTimeInNode := R127
1727 [-]: SETGLOBAL R127 K755    ; 0x83723959 := R127
1728 [-]: CLOSURE   R127 305     ; R127 := closure(Function #306)
1729 [-]: SETGLOBAL R127 K756    ; SetEquippingGearItem := R127
1730 [-]: SETGLOBAL R127 K757    ; 0xEFA456DB := R127
1731 [-]: CLOSURE   R127 306     ; R127 := closure(Function #307)
1732 [-]: SETGLOBAL R127 K758    ; IsEquippingGearItem := R127
1733 [-]: SETGLOBAL R127 K759    ; 0x228ADE := R127
1734 [-]: CLOSURE   R127 307     ; R127 := closure(Function #308)
1735 [-]: SETGLOBAL R127 K760    ; GetShipDecoRoom := R127
1736 [-]: SETGLOBAL R127 K761    ; 0xCEC72B1B := R127
1737 [-]: CLOSURE   R127 308     ; R127 := closure(Function #309)
1738 [-]: SETGLOBAL R127 K762    ; ShowLoadoutSelectionMenu := R127
1739 [-]: SETGLOBAL R127 K763    ; 0xB4473481 := R127
1740 [-]: CLOSURE   R127 309     ; R127 := closure(Function #310)
1741 [-]: MOVE      R0 R29       ; R0 := R29
1742 [-]: SETGLOBAL R127 K764    ; GetTimeOfDayLabel := R127
1743 [-]: SETGLOBAL R127 K765    ; 0x447FCC2F := R127
1744 [-]: CLOSURE   R127 310     ; R127 := closure(Function #311)
1745 [-]: MOVE      R0 R29       ; R0 := R29
1746 [-]: SETGLOBAL R127 K766    ; CalculateTimeOfDay := R127
1747 [-]: SETGLOBAL R127 K767    ; 0x555EFA5 := R127
1748 [-]: CLOSURE   R127 311     ; R127 := closure(Function #312)
1749 [-]: MOVE      R0 R12       ; R0 := R12
1750 [-]: SETGLOBAL R127 K768    ; GetSquadMemberLoadoutInfo := R127
1751 [-]: SETGLOBAL R127 K769    ; 0x49473D0D := R127
1752 [-]: CLOSURE   R127 312     ; R127 := closure(Function #313)
1753 [-]: MOVE      R0 R116      ; R0 := R116
1754 [-]: SETGLOBAL R127 K770    ; CreateVendorConversationFunctions := R127
1755 [-]: SETGLOBAL R127 K771    ; 0x3E68ADB := R127
1756 [-]: CLOSURE   R127 313     ; R127 := closure(Function #314)
1757 [-]: MOVE      R0 R12       ; R0 := R12
1758 [-]: SETGLOBAL R127 K772    ; RegisterHideHud := R127
1759 [-]: SETGLOBAL R127 K773    ; 0xB4BBB185 := R127
1760 [-]: CLOSURE   R127 314     ; R127 := closure(Function #315)
1761 [-]: MOVE      R0 R12       ; R0 := R12
1762 [-]: SETGLOBAL R127 K774    ; RegisterHideNotifications := R127
1763 [-]: SETGLOBAL R127 K775    ; 0xC780BE92 := R127
1764 [-]: CLOSURE   R127 315     ; R127 := closure(Function #316)
1765 [-]: MOVE      R0 R12       ; R0 := R12
1766 [-]: SETGLOBAL R127 K776    ; RegisterHideStarChart := R127
1767 [-]: SETGLOBAL R127 K777    ; 0x9AFB3CDC := R127
1768 [-]: CLOSURE   R127 316     ; R127 := closure(Function #317)
1769 [-]: MOVE      R0 R12       ; R0 := R12
1770 [-]: SETGLOBAL R127 K778    ; RegisterHideSquadOverlay := R127
1771 [-]: SETGLOBAL R127 K779    ; 0xC4B4002C := R127
1772 [-]: CLOSURE   R127 317     ; R127 := closure(Function #318)
1773 [-]: SETGLOBAL R127 K780    ; GetEntityUnderCursor := R127
1774 [-]: SETGLOBAL R127 K781    ; 0x898EC37D := R127
1775 [-]: CLOSURE   R127 318     ; R127 := closure(Function #319)
1776 [-]: SETGLOBAL R127 K782    ; HasDojoArchitectPermission := R127
1777 [-]: SETGLOBAL R127 K783    ; 0x8E1620BC := R127
1778 [-]: CLOSURE   R127 319     ; R127 := closure(Function #320)
1779 [-]: SETGLOBAL R127 K784    ; IsWarlordRank := R127
1780 [-]: SETGLOBAL R127 K785    ; 0x7F6E10CD := R127
1781 [-]: CLOSURE   R127 320     ; R127 := closure(Function #321)
1782 [-]: MOVE      R0 R99       ; R0 := R99
1783 [-]: MOVE      R0 R30       ; R0 := R30
1784 [-]: MOVE      R0 R12       ; R0 := R12
1785 [-]: SETGLOBAL R127 K786    ; ShowConditionalWordConfirm := R127
1786 [-]: SETGLOBAL R127 K787    ; 0x24966011 := R127
1787 [-]: CLOSURE   R127 321     ; R127 := closure(Function #322)
1788 [-]: SETGLOBAL R127 K788    ; GetActiveSoundSet := R127
1789 [-]: SETGLOBAL R127 K789    ; 0xAA806419 := R127
1790 [-]: CLOSURE   R127 322     ; R127 := closure(Function #323)
1791 [-]: SETGLOBAL R127 K790    ; InitializeTitleBookends := R127
1792 [-]: SETGLOBAL R127 K791    ; 0xFBAA11B5 := R127
1793 [-]: CLOSURE   R127 323     ; R127 := closure(Function #324)
1794 [-]: MOVE      R0 R12       ; R0 := R12
1795 [-]: MOVE      R0 R123      ; R0 := R123
1796 [-]: SETGLOBAL R127 K792    ; GetEliteAlertCustomUpgrades := R127
1797 [-]: SETGLOBAL R127 K793    ; 0xBD29F827 := R127
1798 [-]: CLOSURE   R127 324     ; R127 := closure(Function #325)
1799 [-]: SETGLOBAL R127 K794    ; AppendItemRank := R127
1800 [-]: SETGLOBAL R127 K795    ; 0xBE88CED0 := R127
1801 [-]: CLOSURE   R127 325     ; R127 := closure(Function #326)
1802 [-]: MOVE      R0 R12       ; R0 := R12
1803 [-]: MOVE      R0 R13       ; R0 := R13
1804 [-]: SETGLOBAL R127 K796    ; ApplyParticleThemeColors := R127
1805 [-]: SETGLOBAL R127 K797    ; 0xAD77D9E5 := R127
1806 [-]: CLOSURE   R127 326     ; R127 := closure(Function #327)
1807 [-]: SETGLOBAL R127 K798    ; UpdateMailbox := R127
1808 [-]: SETGLOBAL R127 K799    ; 0xCF95CFF8 := R127
1809 [-]: CLOSURE   R127 327     ; R127 := closure(Function #328)
1810 [-]: MOVE      R0 R77       ; R0 := R77
1811 [-]: SETGLOBAL R127 K800    ; IsSeasonActive := R127
1812 [-]: SETGLOBAL R127 K801    ; 0x5B8EB241 := R127
1813 [-]: CLOSURE   R127 328     ; R127 := closure(Function #329)
1814 [-]: MOVE      R0 R51       ; R0 := R51
1815 [-]: SETGLOBAL R127 K802    ; BuildNemesisMission := R127
1816 [-]: SETGLOBAL R127 K803    ; 0x88CA299E := R127
1817 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 270
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x96D4FC9C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0x93E76705"]
  9 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 10 [-]: RETURN    R2 0         ; return R2,...
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 278
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: LOADK     R5 K2        ; R5 := 2
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x6B695579
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["mMovie"]
 14 [-]: TEST      R4 0         ; if not R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETTABLE  R4 R3 K4     ; R4 := R3["mMovie"]
 22 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: ADD       R2 R2 K6     ; R2 := R2 + 1
 25 [-]: GETGLOBAL R4 K3        ; R4 := 0x6B695579
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: MOVE      R3 R4        ; R3 := R4
 29 [-]: JMP       13           ; PC := 13
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 288
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 13 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 296
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: NEWTABLE  R0 36 0      ; R0 := {}
  2 [-]: LOADK     R1 K0        ; R1 := 4591633
  3 [-]: LOADK     R2 K1        ; R2 := 6756120
  4 [-]: LOADK     R3 K2        ; R3 := 9773092
  5 [-]: LOADK     R4 K3        ; R4 := 12265515
  6 [-]: LOADK     R5 K4        ; R5 := 13708851
  7 [-]: LOADK     R6 K5        ; R6 := 4003870
  8 [-]: LOADK     R7 K6        ; R7 := 5775914
  9 [-]: LOADK     R8 K7        ; R8 := 8663871
 10 [-]: LOADK     R9 K8        ; R9 := 11421784
 11 [-]: LOADK     R10 K9       ; R10 := 13260653
 12 [-]: LOADK     R11 K10      ; R11 := 2100501
 13 [-]: LOADK     R12 K11      ; R12 := 3873573
 14 [-]: LOADK     R13 K12      ; R13 := 7419972
 15 [-]: LOADK     R14 K13      ; R14 := 11428207
 16 [-]: LOADK     R15 K14      ; R15 := 13928599
 17 [-]: LOADK     R16 K15      ; R16 := 2492950
 18 [-]: LOADK     R17 K16      ; R17 := 4067364
 19 [-]: LOADK     R18 K17      ; R18 := 7216189
 20 [-]: LOADK     R19 K18      ; R19 := 10299227
 21 [-]: LOADK     R20 K19      ; R20 := 12464506
 22 [-]: LOADK     R21 K20      ; R21 := 987681
 23 [-]: LOADK     R22 K21      ; R22 := 1448500
 24 [-]: LOADK     R23 K22      ; R23 := 2502747
 25 [-]: LOADK     R24 K23      ; R24 := 3950990
 26 [-]: LOADK     R25 K24      ; R25 := 5334711
 27 [-]: LOADK     R26 K25      ; R26 := 530470
 28 [-]: LOADK     R27 K26      ; R27 := 797252
 29 [-]: LOADK     R28 K27      ; R28 := 1460087
 30 [-]: LOADK     R29 K28      ; R29 := 1994408
 31 [-]: LOADK     R30 K29      ; R30 := 2396358
 32 [-]: LOADK     R31 K30      ; R31 := 930629
 33 [-]: LOADK     R32 K31      ; R32 := 1526113
 34 [-]: LOADK     R33 K32      ; R33 := 2716301
 35 [-]: LOADK     R34 K33      ; R34 := 4169655
 36 [-]: LOADK     R35 K34      ; R35 := 5619666
 37 [-]: LOADK     R36 K35      ; R36 := 1650218
 38 [-]: LOADK     R37 K36      ; R37 := 2442557
 39 [-]: LOADK     R38 K37      ; R38 := 3828063
 40 [-]: LOADK     R39 K38      ; R39 := 5543563
 41 [-]: LOADK     R40 K39      ; R40 := 7388337
 42 [-]: LOADK     R41 K40      ; R41 := 1125400
 43 [-]: LOADK     R42 K41      ; R42 := 1721894
 44 [-]: LOADK     R43 K42      ; R43 := 2914624
 45 [-]: LOADK     R44 K43      ; R44 := 4303198
 46 [-]: LOADK     R45 K44      ; R45 := 5491068
 47 [-]: LOADK     R46 K45      ; R46 := 3816203
 48 [-]: LOADK     R47 K46      ; R47 := 6317074
 49 [-]: LOADK     R48 K47      ; R48 := 9409055
 50 [-]: LOADK     R49 K48      ; R49 := 12106284
 51 [-]: LOADK     R50 K49      ; R50 := 13750327
 52 [-]: SETLIST   R0 50 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 50
 53 [-]: LOADK     R1 K50       ; R1 := 5916201
 54 [-]: LOADK     R2 K51       ; R2 := 8347962
 55 [-]: LOADK     R3 K52       ; R3 := 11111504
 56 [-]: LOADK     R4 K53       ; R4 := 13546858
 57 [-]: LOADK     R5 K54       ; R5 := 15126918
 58 [-]: LOADK     R6 K55       ; R6 := 8143131
 59 [-]: LOADK     R7 K56       ; R7 := 9589797
 60 [-]: LOADK     R8 K57       ; R8 := 11366711
 61 [-]: LOADK     R9 K58       ; R9 := 13014608
 62 [-]: LOADK     R10 K59      ; R10 := 14530158
 63 [-]: LOADK     R11 K60      ; R11 := 10107422
 64 [-]: LOADK     R12 K61      ; R12 := 11751209
 65 [-]: LOADK     R13 K62      ; R13 := 13529661
 66 [-]: LOADK     R14 K63      ; R14 := 14786650
 67 [-]: LOADK     R15 K64      ; R15 := 15254401
 68 [-]: LOADK     R16 K65      ; R16 := 3282697
 69 [-]: LOADK     R17 K66      ; R17 := 6301969
 70 [-]: LOADK     R18 K67      ; R18 := 10767646
 71 [-]: LOADK     R19 K68      ; R19 := 13726758
 72 [-]: LOADK     R20 K69      ; R20 := 14127655
 73 [-]: LOADK     R21 K70      ; R21 := 2694428
 74 [-]: LOADK     R22 K71      ; R22 := 4994866
 75 [-]: LOADK     R23 K72      ; R23 := 9398364
 76 [-]: LOADK     R24 K73      ; R24 := 13213582
 77 [-]: LOADK     R25 K74      ; R25 := 14991277
 78 [-]: LOADK     R26 K75      ; R26 := 2631460
 79 [-]: LOADK     R27 K76      ; R27 := 6117971
 80 [-]: LOADK     R28 K77      ; R28 := 12499631
 81 [-]: LOADK     R29 K78      ; R29 := 16118763
 82 [-]: LOADK     R30 K79      ; R30 := 16777215
 83 [-]: LOADK     R31 K80      ; R31 := 2106148
 84 [-]: LOADK     R32 K81      ; R32 := 4673359
 85 [-]: LOADK     R33 K82      ; R33 := 9872548
 86 [-]: LOADK     R34 K83      ; R34 := 14082529
 87 [-]: LOADK     R35 K84      ; R35 := 15989754
 88 [-]: LOADK     R36 K85      ; R36 := 1908258
 89 [-]: LOADK     R37 K86      ; R37 := 4145995
 90 [-]: LOADK     R38 K87      ; R38 := 9080479
 91 [-]: LOADK     R39 K88      ; R39 := 13225437
 92 [-]: LOADK     R40 K89      ; R40 := 15199223
 93 [-]: SETLIST   R0 40 2      ; R0[(2-1)*FPF+i] := R(0+i), 1 <= i <= 40
 94 [-]: RETURN    R0 2         ; return R0
 95 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 321
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: NEWTABLE  R0 8 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 2       ; R1 := {}
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x2C00D429
  4 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Types/Game/KubrowPet/AdventurerKubrowPetPowerSuit"
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: SETTABLE  R1 K0 R2     ; R1["Type"] := R2
  7 [-]: SETTABLE  R1 K3 K4     ; R1["Name"] := "/Lotus/Language/Items/AdventurerKubrowName"
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: GETGLOBAL R3 K1        ; R3 := 0x2C00D429
 10 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Types/Game/KubrowPet/FurtiveKubrowPetPowerSuit"
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: SETTABLE  R2 K0 R3     ; R2["Type"] := R3
 13 [-]: SETTABLE  R2 K3 K6     ; R2["Name"] := "/Lotus/Language/Items/FurtiveKubrowName"
 14 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 15 [-]: GETGLOBAL R4 K1        ; R4 := 0x2C00D429
 16 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Types/Game/KubrowPet/GuardKubrowPetPowerSuit"
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SETTABLE  R3 K0 R4     ; R3["Type"] := R4
 19 [-]: SETTABLE  R3 K3 K8     ; R3["Name"] := "/Lotus/Language/Items/GuardKubrowName"
 20 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 21 [-]: GETGLOBAL R5 K1        ; R5 := 0x2C00D429
 22 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Types/Game/KubrowPet/HunterKubrowPetPowerSuit"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SETTABLE  R4 K0 R5     ; R4["Type"] := R5
 25 [-]: SETTABLE  R4 K3 K10    ; R4["Name"] := "/Lotus/Language/Items/HunterKubrowName"
 26 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 27 [-]: GETGLOBAL R6 K1        ; R6 := 0x2C00D429
 28 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Types/Game/KubrowPet/RetrieverKubrowPetPowerSuit"
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: SETTABLE  R5 K0 R6     ; R5["Type"] := R6
 31 [-]: SETTABLE  R5 K3 K12    ; R5["Name"] := "/Lotus/Language/Items/RetrieverKubrowName"
 32 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 33 [-]: GETGLOBAL R7 K1        ; R7 := 0x2C00D429
 34 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Types/Game/KubrowPet/ChargerKubrowPetPowerSuit"
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: SETTABLE  R6 K0 R7     ; R6["Type"] := R7
 37 [-]: SETTABLE  R6 K3 K14    ; R6["Name"] := "/Lotus/Language/Items/InfestedKubrowName"
 38 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 39 [-]: GETGLOBAL R8 K1        ; R8 := 0x2C00D429
 40 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Types/Game/CatbrowPet/MirrorCatbrowPetPowerSuit"
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: SETTABLE  R7 K0 R8     ; R7["Type"] := R8
 43 [-]: SETTABLE  R7 K3 K16    ; R7["Name"] := "/Lotus/Language/Items/MirrorCatbrowName"
 44 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 45 [-]: GETGLOBAL R9 K1        ; R9 := 0x2C00D429
 46 [-]: LOADK     R10 K17      ; R10 := "/Lotus/Types/Game/CatbrowPet/CheshireCatbrowPetPowerSuit"
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R8 K0 R9     ; R8["Type"] := R9
 49 [-]: SETTABLE  R8 K3 K18    ; R8["Name"] := "/Lotus/Language/Items/CheshireCatbrowName"
 50 [-]: SETLIST   R0 8 1       ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 8
 51 [-]: LOADK     R1 K19       ; R1 := 1
 52 [-]: LEN       R2 R0        ; R2 := # R0
 53 [-]: LOADK     R3 K19       ; R3 := 1
 54 [-]: FORPREP   R1 60        ; R1 -= R3; PC := 60
 55 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 56 [-]: GETGLOBAL R6 K21       ; R6 := _G
 57 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["UITexture_CompanionIcons"]
 58 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 59 [-]: SETTABLE  R5 K20 R6    ; R5["Icon"] := R6
 60 [-]: FORLOOP   R1 55        ; R1 += R3; if R1 <= R2 then begin PC := 55; R4 := R1 end
 61 [-]: RETURN    R0 2         ; return R0
 62 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 343
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0xE6DC43B0
  2 [-]: LOADK     R8 K1        ; R8 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R9 R0        ; R9 := R0
  4 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  5 [-]: GETGLOBAL R8 K0        ; R8 := 0xE6DC43B0
  6 [-]: LOADK     R9 K2        ; R9 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R10 R0       ; R10 := R0
  8 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
  9 [-]: GETGLOBAL R9 K0        ; R9 := 0xE6DC43B0
 10 [-]: LOADK     R10 K3       ; R10 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R11 R0       ; R11 := R0
 12 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 13 [-]: GETGLOBAL R10 K0       ; R10 := 0xE6DC43B0
 14 [-]: LOADK     R11 K4       ; R11 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R12 R0       ; R12 := R0
 16 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 17 [-]: TEST      R5 0         ; if not R5 then PC := 233
 18 [-]: JMP       233          ; PC := 233
 19 [-]: EQ        1 R5 K5      ; if R5 == "Compact" then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: EQ        1 R5 K6      ; if R5 == "CompactTwoMax" then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 164
 24 [-]: JMP       164          ; PC := 164
 25 [-]: LT        0 K8 R1      ; if 0 >= R1 then PC := 76
 26 [-]: JMP       76           ; PC := 76
 27 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 43
 28 [-]: JMP       43           ; PC := 43
 29 [-]: MOVE      R11 R6       ; R11 := R6
 30 [-]: GETGLOBAL R12 K9       ; R12 := string
 31 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 32 [-]: LOADK     R13 K11      ; R13 := "%d"
 33 [-]: MOVE      R14 R7       ; R14 := R7
 34 [-]: LOADK     R15 K12      ; R15 := " %d"
 35 [-]: MOVE      R16 R8       ; R16 := R8
 36 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 37 [-]: MOVE      R14 R1       ; R14 := R1
 38 [-]: MOVE      R15 R2       ; R15 := R2
 39 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 40 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 41 [-]: RETURN    R11 2        ; return R11
 42 [-]: JMP       271          ; PC := 271
 43 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: MOVE      R11 R6       ; R11 := R6
 46 [-]: GETGLOBAL R12 K9       ; R12 := string
 47 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 48 [-]: LOADK     R13 K11      ; R13 := "%d"
 49 [-]: MOVE      R14 R7       ; R14 := R7
 50 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 51 [-]: MOVE      R14 R1       ; R14 := R1
 52 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 53 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 54 [-]: RETURN    R11 2        ; return R11
 55 [-]: JMP       271          ; PC := 271
 56 [-]: MOVE      R11 R6       ; R11 := R6
 57 [-]: GETGLOBAL R12 K9       ; R12 := string
 58 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 59 [-]: LOADK     R13 K11      ; R13 := "%d"
 60 [-]: MOVE      R14 R7       ; R14 := R7
 61 [-]: LOADK     R15 K12      ; R15 := " %d"
 62 [-]: MOVE      R16 R8       ; R16 := R8
 63 [-]: LOADK     R17 K12      ; R17 := " %d"
 64 [-]: MOVE      R18 R9       ; R18 := R9
 65 [-]: LOADK     R19 K12      ; R19 := " %d"
 66 [-]: MOVE      R20 R10      ; R20 := R10
 67 [-]: CONCAT    R13 R13 R20  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
 68 [-]: MOVE      R14 R1       ; R14 := R1
 69 [-]: MOVE      R15 R2       ; R15 := R2
 70 [-]: MOVE      R16 R3       ; R16 := R3
 71 [-]: MOVE      R17 R4       ; R17 := R4
 72 [-]: CALL      R12 6 2      ; R12 := R12(R13,R14,R15,R16,R17)
 73 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 74 [-]: RETURN    R11 2        ; return R11
 75 [-]: JMP       271          ; PC := 271
 76 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 124
 77 [-]: JMP       124          ; PC := 124
 78 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: MOVE      R11 R6       ; R11 := R6
 81 [-]: GETGLOBAL R12 K9       ; R12 := string
 82 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 83 [-]: LOADK     R13 K11      ; R13 := "%d"
 84 [-]: MOVE      R14 R8       ; R14 := R8
 85 [-]: LOADK     R15 K12      ; R15 := " %d"
 86 [-]: MOVE      R16 R9       ; R16 := R9
 87 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 88 [-]: MOVE      R14 R2       ; R14 := R2
 89 [-]: MOVE      R15 R3       ; R15 := R3
 90 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 91 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 92 [-]: RETURN    R11 2        ; return R11
 93 [-]: JMP       271          ; PC := 271
 94 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 107
 95 [-]: JMP       107          ; PC := 107
 96 [-]: MOVE      R11 R6       ; R11 := R6
 97 [-]: GETGLOBAL R12 K9       ; R12 := string
 98 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
 99 [-]: LOADK     R13 K11      ; R13 := "%d"
100 [-]: MOVE      R14 R8       ; R14 := R8
101 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
102 [-]: MOVE      R14 R2       ; R14 := R2
103 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
104 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
105 [-]: RETURN    R11 2        ; return R11
106 [-]: JMP       271          ; PC := 271
107 [-]: MOVE      R11 R6       ; R11 := R6
108 [-]: GETGLOBAL R12 K9       ; R12 := string
109 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
110 [-]: LOADK     R13 K11      ; R13 := "%d"
111 [-]: MOVE      R14 R8       ; R14 := R8
112 [-]: LOADK     R15 K12      ; R15 := " %d"
113 [-]: MOVE      R16 R9       ; R16 := R9
114 [-]: LOADK     R17 K12      ; R17 := " %d"
115 [-]: MOVE      R18 R10      ; R18 := R10
116 [-]: CONCAT    R13 R13 R18  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
117 [-]: MOVE      R14 R2       ; R14 := R2
118 [-]: MOVE      R15 R3       ; R15 := R3
119 [-]: MOVE      R16 R4       ; R16 := R4
120 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
121 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
122 [-]: RETURN    R11 2        ; return R11
123 [-]: JMP       271          ; PC := 271
124 [-]: LT        0 K8 R3      ; if 0 >= R3 then PC := 153
125 [-]: JMP       153          ; PC := 153
126 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: MOVE      R11 R6       ; R11 := R6
129 [-]: GETGLOBAL R12 K9       ; R12 := string
130 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
131 [-]: LOADK     R13 K11      ; R13 := "%d"
132 [-]: MOVE      R14 R9       ; R14 := R9
133 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
134 [-]: MOVE      R14 R3       ; R14 := R3
135 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
136 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
137 [-]: RETURN    R11 2        ; return R11
138 [-]: JMP       271          ; PC := 271
139 [-]: MOVE      R11 R6       ; R11 := R6
140 [-]: GETGLOBAL R12 K9       ; R12 := string
141 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
142 [-]: LOADK     R13 K11      ; R13 := "%d"
143 [-]: MOVE      R14 R9       ; R14 := R9
144 [-]: LOADK     R15 K12      ; R15 := " %d"
145 [-]: MOVE      R16 R10      ; R16 := R10
146 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
147 [-]: MOVE      R14 R3       ; R14 := R3
148 [-]: MOVE      R15 R4       ; R15 := R4
149 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
150 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
151 [-]: RETURN    R11 2        ; return R11
152 [-]: JMP       271          ; PC := 271
153 [-]: MOVE      R11 R6       ; R11 := R6
154 [-]: GETGLOBAL R12 K9       ; R12 := string
155 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0x4B1F4F58"]
156 [-]: LOADK     R13 K11      ; R13 := "%d"
157 [-]: MOVE      R14 R10      ; R14 := R10
158 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
159 [-]: MOVE      R14 R4       ; R14 := R4
160 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
161 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
162 [-]: RETURN    R11 2        ; return R11
163 [-]: JMP       271          ; PC := 271
164 [-]: EQ        0 R5 K13     ; if R5 ~= "HoursOrMinutes" then PC := 193
165 [-]: JMP       193          ; PC := 193
166 [-]: EQ        0 R1 K8      ; if R1 ~= 0 then PC := 193
167 [-]: JMP       193          ; PC := 193
168 [-]: EQ        0 R2 K8      ; if R2 ~= 0 then PC := 193
169 [-]: JMP       193          ; PC := 193
170 [-]: GETUPVAL  R11 U0       ; R11 := U0
171 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["0xF81722A2"]
172 [-]: LT        1 K15 R3     ; if 1 < R3 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: MOVE      R12 R0       ; R12 := R0
175 [-]: MOVE      R12 R1       ; R12 := R1
176 [-]: LOADK     R13 K16      ; R13 := "/Lotus/Language/Menu/TimeFormat_Minutes"
177 [-]: LOADK     R14 K17      ; R14 := "/Lotus/Language/Menu/TimeFormat_Minute"
178 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
179 [-]: MOVE      R12 R6       ; R12 := R6
180 [-]: GETGLOBAL R13 K0       ; R13 := 0xE6DC43B0
181 [-]: MOVE      R14 R11      ; R14 := R11
182 [-]: NEWTABLE  R15 0 1      ; R15 := {}
183 [-]: GETGLOBAL R16 K9       ; R16 := string
184 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["0x4B1F4F58"]
185 [-]: LOADK     R17 K11      ; R17 := "%d"
186 [-]: MOVE      R18 R3       ; R18 := R3
187 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
188 [-]: SETTABLE  R15 K18 R16  ; R15["TIME"] := R16
189 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
190 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
191 [-]: RETURN    R12 2        ; return R12
192 [-]: JMP       271          ; PC := 271
193 [-]: EQ        0 R5 K19     ; if R5 ~= "CompactHours" then PC := 207
194 [-]: JMP       207          ; PC := 207
195 [-]: MOVE      R12 R6       ; R12 := R6
196 [-]: GETGLOBAL R13 K9       ; R13 := string
197 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["0x4B1F4F58"]
198 [-]: LOADK     R14 K20      ; R14 := "%d "
199 [-]: MOVE      R15 R8       ; R15 := R8
200 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
201 [-]: MUL       R15 R1 K21   ; R15 := R1 * 24
202 [-]: ADD       R15 R15 R2   ; R15 := R15 + R2
203 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
204 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
205 [-]: RETURN    R12 2        ; return R12
206 [-]: JMP       271          ; PC := 271
207 [-]: GETUPVAL  R12 U0       ; R12 := U0
208 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["0xF81722A2"]
209 [-]: LT        1 K15 R2     ; if 1 < R2 then PC := 214
210 [-]: JMP       214          ; PC := 214
211 [-]: LT        1 K8 R1      ; if 0 < R1 then PC := 214
212 [-]: JMP       214          ; PC := 214
213 [-]: MOVE      R13 R0       ; R13 := R0
214 [-]: MOVE      R13 R1       ; R13 := R1
215 [-]: LOADK     R14 K22      ; R14 := "/Lotus/Language/Menu/TimeFormat_Hours"
216 [-]: LOADK     R15 K23      ; R15 := "/Lotus/Language/Menu/TimeFormat_Hour"
217 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
218 [-]: MOVE      R13 R6       ; R13 := R6
219 [-]: GETGLOBAL R14 K0       ; R14 := 0xE6DC43B0
220 [-]: MOVE      R15 R12      ; R15 := R12
221 [-]: NEWTABLE  R16 0 1      ; R16 := {}
222 [-]: GETGLOBAL R17 K9       ; R17 := string
223 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["0x4B1F4F58"]
224 [-]: LOADK     R18 K11      ; R18 := "%d"
225 [-]: MUL       R19 R1 K21   ; R19 := R1 * 24
226 [-]: ADD       R19 R19 R2   ; R19 := R19 + R2
227 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
228 [-]: SETTABLE  R16 K18 R17  ; R16["TIME"] := R17
229 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
230 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
231 [-]: RETURN    R13 2        ; return R13
232 [-]: JMP       271          ; PC := 271
233 [-]: LT        0 K8 R1      ; if 0 >= R1 then PC := 255
234 [-]: JMP       255          ; PC := 255
235 [-]: MOVE      R13 R6       ; R13 := R6
236 [-]: GETGLOBAL R14 K9       ; R14 := string
237 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x4B1F4F58"]
238 [-]: LOADK     R15 K11      ; R15 := "%d"
239 [-]: MOVE      R16 R7       ; R16 := R7
240 [-]: LOADK     R17 K12      ; R17 := " %d"
241 [-]: MOVE      R18 R8       ; R18 := R8
242 [-]: LOADK     R19 K12      ; R19 := " %d"
243 [-]: MOVE      R20 R9       ; R20 := R9
244 [-]: LOADK     R21 K12      ; R21 := " %d"
245 [-]: MOVE      R22 R10      ; R22 := R10
246 [-]: CONCAT    R15 R15 R22  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
247 [-]: MOVE      R16 R1       ; R16 := R1
248 [-]: MOVE      R17 R2       ; R17 := R2
249 [-]: MOVE      R18 R3       ; R18 := R3
250 [-]: MOVE      R19 R4       ; R19 := R4
251 [-]: CALL      R14 6 2      ; R14 := R14(R15,R16,R17,R18,R19)
252 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
253 [-]: RETURN    R13 2        ; return R13
254 [-]: JMP       271          ; PC := 271
255 [-]: MOVE      R13 R6       ; R13 := R6
256 [-]: GETGLOBAL R14 K9       ; R14 := string
257 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x4B1F4F58"]
258 [-]: LOADK     R15 K11      ; R15 := "%d"
259 [-]: MOVE      R16 R8       ; R16 := R8
260 [-]: LOADK     R17 K12      ; R17 := " %d"
261 [-]: MOVE      R18 R9       ; R18 := R9
262 [-]: LOADK     R19 K12      ; R19 := " %d"
263 [-]: MOVE      R20 R10      ; R20 := R10
264 [-]: CONCAT    R15 R15 R20  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
265 [-]: MOVE      R16 R2       ; R16 := R2
266 [-]: MOVE      R17 R3       ; R17 := R3
267 [-]: MOVE      R18 R4       ; R18 := R4
268 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
269 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
270 [-]: RETURN    R13 2        ; return R13
271 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 392
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: EQ        1 R1 R1      ; if R1 == R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 404
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: ADD       R3 R0 R1     ; R3 := R0 + R1
  2 [-]: MUL       R3 R3 K0     ; R3 := R3 * 0.5
  3 [-]: MUL       R3 R3 R2     ; R3 := R3 * R2
  4 [-]: GETGLOBAL R4 K1        ; R4 := math
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xF93F7CC8"]
  6 [-]: SUB       R5 R0 R1     ; R5 := R0 - R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: RETURN    R4 2         ; return R4
 13 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 409
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R3 K0        ; R3 := math
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xF93F7CC8"]
  3 [-]: SUB       R4 R0 R1     ; R4 := R0 - R1
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 413
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R1 K0        ; R1 := 60
  2 [-]: LOADK     R2 K1        ; R2 := 3600
  3 [-]: LOADK     R3 K2        ; R3 := 86400
  4 [-]: GETGLOBAL R4 K3        ; R4 := math
  5 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF7005A7B"]
  6 [-]: DIV       R5 R0 R3     ; R5 := R0 / R3
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: MUL       R5 R4 R3     ; R5 := R4 * R3
  9 [-]: SUB       R0 R0 R5     ; R0 := R0 - R5
 10 [-]: GETGLOBAL R5 K3        ; R5 := math
 11 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0xF7005A7B"]
 12 [-]: DIV       R6 R0 R2     ; R6 := R0 / R2
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: MUL       R6 R5 R2     ; R6 := R5 * R2
 15 [-]: SUB       R0 R0 R6     ; R0 := R0 - R6
 16 [-]: GETGLOBAL R6 K3        ; R6 := math
 17 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["0xF7005A7B"]
 18 [-]: DIV       R7 R0 R1     ; R7 := R0 / R1
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: MUL       R7 R6 R1     ; R7 := R6 * R1
 21 [-]: SUB       R7 R0 R7     ; R7 := R0 - R7
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: MOVE      R9 R5        ; R9 := R5
 24 [-]: MOVE      R10 R6       ; R10 := R6
 25 [-]: MOVE      R11 R7       ; R11 := R7
 26 [-]: RETURN    R8 5         ; return R8,R9,R10,R11
 27 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 428
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 432
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: LT        0 R1 K1      ; if R1 >= 0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: UNM       R1 R1        ; R1 := - R1
  5 [-]: LOADK     R3 K2        ; R3 := "-"
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 5       ; R4,R5,R6,R7 := R4(R5)
  9 [-]: GETUPVAL  R8 U1        ; R8 := U1
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R4       ; R10 := R4
 12 [-]: MOVE      R11 R5       ; R11 := R5
 13 [-]: MOVE      R12 R6       ; R12 := R6
 14 [-]: MOVE      R13 R7       ; R13 := R7
 15 [-]: MOVE      R14 R2       ; R14 := R2
 16 [-]: MOVE      R15 R3       ; R15 := R3
 17 [-]: TAILCALL  R8 8 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14,R15)
 18 [-]: RETURN    R8 0         ; return R8,...
 19 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 443
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 447
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
  2 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R5 R0        ; R5 := R0
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
  6 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  9 [-]: GETGLOBAL R5 K0        ; R5 := 0xE6DC43B0
 10 [-]: LOADK     R6 K3        ; R6 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R7 R0        ; R7 := R0
 12 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 13 [-]: GETGLOBAL R6 K0        ; R6 := 0xE6DC43B0
 14 [-]: LOADK     R7 K4        ; R7 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R8 R0        ; R8 := R0
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: GETUPVAL  R7 U0        ; R7 := U0
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R7 2 5       ; R7,R8,R9,R10 := R7(R8)
 20 [-]: LOADK     R11 K5       ; R11 := ""
 21 [-]: GETGLOBAL R12 K6       ; R12 := math
 22 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 23 [-]: MOVE      R13 R7       ; R13 := R7
 24 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 25 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 38
 26 [-]: JMP       38           ; PC := 38
 27 [-]: MOVE      R12 R7       ; R12 := R7
 28 [-]: MOVE      R13 R3       ; R13 := R3
 29 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 30 [-]: EQ        1 R1 K9      ; if R1 == "0x0" then PC := 77
 31 [-]: JMP       77           ; PC := 77
 32 [-]: MOVE      R12 R11      ; R12 := R11
 33 [-]: LOADK     R13 K10      ; R13 := " "
 34 [-]: MOVE      R14 R8       ; R14 := R8
 35 [-]: MOVE      R15 R4       ; R15 := R4
 36 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 37 [-]: JMP       77           ; PC := 77
 38 [-]: GETGLOBAL R12 K6       ; R12 := math
 39 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 40 [-]: MOVE      R13 R8       ; R13 := R8
 41 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 42 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 61
 43 [-]: JMP       61           ; PC := 61
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: MOVE      R13 R4       ; R13 := R4
 46 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 47 [-]: TEST      R2 0         ; if not R2 then PC := 77
 48 [-]: JMP       77           ; PC := 77
 49 [-]: GETGLOBAL R12 K6       ; R12 := math
 50 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 51 [-]: MOVE      R13 R9       ; R13 := R9
 52 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 53 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 77
 54 [-]: JMP       77           ; PC := 77
 55 [-]: MOVE      R12 R11      ; R12 := R11
 56 [-]: LOADK     R13 K10      ; R13 := " "
 57 [-]: ADD       R14 R9 K11   ; R14 := R9 + 1
 58 [-]: MOVE      R15 R5       ; R15 := R5
 59 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 60 [-]: JMP       77           ; PC := 77
 61 [-]: GETGLOBAL R12 K6       ; R12 := math
 62 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["0xF93F7CC8"]
 63 [-]: MOVE      R13 R9       ; R13 := R9
 64 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 65 [-]: LT        0 K8 R12     ; if 0 >= R12 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: ADD       R12 R9 K11   ; R12 := R9 + 1
 68 [-]: MOVE      R13 R5       ; R13 := R5
 69 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETGLOBAL R12 K6       ; R12 := math
 72 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["0xBCF846DF"]
 73 [-]: MOVE      R13 R0       ; R13 := R0
 74 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 75 [-]: MOVE      R13 R6       ; R13 := R6
 76 [-]: CONCAT    R11 R12 R13  ; R11 := R12 .. R13
 77 [-]: RETURN    R11 2        ; return R11
 78 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 472
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xE6DC43B0
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xE6DC43B0
  6 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
 10 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
 14 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: MOVE      R6 R0        ; R6 := R0
 19 [-]: CALL      R5 2 5       ; R5,R6,R7,R8 := R5(R6)
 20 [-]: LOADK     R9 K5        ; R9 := ""
 21 [-]: GETGLOBAL R10 K6       ; R10 := math
 22 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 23 [-]: MOVE      R11 R5       ; R11 := R5
 24 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 25 [-]: LT        0 K8 R10     ; if 0 >= R10 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: MOVE      R10 R5       ; R10 := R5
 28 [-]: MOVE      R11 R1       ; R11 := R1
 29 [-]: CONCAT    R9 R10 R11   ; R9 := R10 .. R11
 30 [-]: JMP       65           ; PC := 65
 31 [-]: GETGLOBAL R10 K6       ; R10 := math
 32 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 33 [-]: MOVE      R11 R6       ; R11 := R6
 34 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 35 [-]: LT        0 K8 R10     ; if 0 >= R10 then PC := 50
 36 [-]: JMP       50           ; PC := 50
 37 [-]: MOVE      R10 R6       ; R10 := R6
 38 [-]: MOVE      R11 R2       ; R11 := R2
 39 [-]: LOADK     R12 K9       ; R12 := " "
 40 [-]: MOVE      R13 R7       ; R13 := R7
 41 [-]: MOVE      R14 R3       ; R14 := R3
 42 [-]: LOADK     R15 K9       ; R15 := " "
 43 [-]: GETGLOBAL R16 K6       ; R16 := math
 44 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["0xF7005A7B"]
 45 [-]: ADD       R17 R8 K11   ; R17 := R8 + 0.5
 46 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 47 [-]: MOVE      R17 R4       ; R17 := R4
 48 [-]: CONCAT    R9 R10 R17   ; R9 := R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17
 49 [-]: JMP       65           ; PC := 65
 50 [-]: GETGLOBAL R10 K6       ; R10 := math
 51 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF93F7CC8"]
 52 [-]: MOVE      R11 R7       ; R11 := R7
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: LE        0 K8 R10     ; if 0 > R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: MOVE      R10 R7       ; R10 := R7
 57 [-]: MOVE      R11 R3       ; R11 := R3
 58 [-]: LOADK     R12 K9       ; R12 := " "
 59 [-]: GETGLOBAL R13 K6       ; R13 := math
 60 [-]: GETTABLE  R13 R13 K10  ; R13 := R13["0xF7005A7B"]
 61 [-]: ADD       R14 R8 K11   ; R14 := R8 + 0.5
 62 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 63 [-]: MOVE      R14 R4       ; R14 := R4
 64 [-]: CONCAT    R9 R10 R14   ; R9 := R10 .. R11 .. R12 .. R13 .. R14
 65 [-]: RETURN    R9 2         ; return R9
 66 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 489
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 493
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xE6DC43B0
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0xE6DC43B0
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K0        ; R4 := 0xE6DC43B0
 10 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 13 [-]: GETGLOBAL R5 K0        ; R5 := 0xE6DC43B0
 14 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: MOVE      R7 R0        ; R7 := R0
 16 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: MOVE      R7 R0        ; R7 := R0
 19 [-]: CALL      R6 2 5       ; R6,R7,R8,R9 := R6(R7)
 20 [-]: LOADK     R10 K5       ; R10 := ""
 21 [-]: GETGLOBAL R11 K6       ; R11 := math
 22 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 23 [-]: MOVE      R12 R6       ; R12 := R6
 24 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 25 [-]: LT        0 K8 R11     ; if 0 >= R11 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: MOVE      R11 R6       ; R11 := R6
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: LOADK     R13 K9       ; R13 := " "
 30 [-]: CONCAT    R10 R11 R13  ; R10 := R11 .. R12 .. R13
 31 [-]: GETGLOBAL R11 K6       ; R11 := math
 32 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 33 [-]: MOVE      R12 R7       ; R12 := R7
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: LT        0 K8 R11     ; if 0 >= R11 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: MOVE      R11 R10      ; R11 := R10
 38 [-]: MOVE      R12 R7       ; R12 := R7
 39 [-]: MOVE      R13 R3       ; R13 := R3
 40 [-]: LOADK     R14 K9       ; R14 := " "
 41 [-]: CONCAT    R10 R11 R14  ; R10 := R11 .. R12 .. R13 .. R14
 42 [-]: GETGLOBAL R11 K6       ; R11 := math
 43 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF93F7CC8"]
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: LE        0 K8 R11     ; if 0 > R11 then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: MOVE      R11 R10      ; R11 := R10
 49 [-]: MOVE      R12 R8       ; R12 := R8
 50 [-]: MOVE      R13 R4       ; R13 := R4
 51 [-]: LOADK     R14 K9       ; R14 := " "
 52 [-]: CONCAT    R10 R11 R14  ; R10 := R11 .. R12 .. R13 .. R14
 53 [-]: MOVE      R11 R10      ; R11 := R10
 54 [-]: GETGLOBAL R12 K6       ; R12 := math
 55 [-]: GETTABLE  R12 R12 K10  ; R12 := R12["0xF7005A7B"]
 56 [-]: ADD       R13 R9 K11   ; R13 := R9 + 0.5
 57 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 58 [-]: MOVE      R13 R5       ; R13 := R5
 59 [-]: CONCAT    R10 R11 R13  ; R10 := R11 .. R12 .. R13
 60 [-]: LT        0 R6 K8      ; if R6 >= 0 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: LOADK     R10 K12      ; R10 := "-1"
 63 [-]: RETURN    R10 2        ; return R10
 64 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 516
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 520
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LE        0 R0 K0      ; if R0 > 0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K1        ; R1 := 100
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x6374FD98
  6 [-]: DIV       R2 K3 R0     ; R2 := 1 / R0
  7 [-]: MUL       R2 R2 K1     ; R2 := R2 * 100
  8 [-]: LOADK     R3 K0        ; R3 := 0
  9 [-]: LOADK     R4 K1        ; R4 := 100
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x7E197415"]
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: LOADK     R4 K5        ; R4 := 2
 15 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 16 [-]: RETURN    R2 0         ; return R2,...
 17 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 530
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0xC6911558"]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x80B14403"]
  8 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 537
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADNIL   R1 R1        ; R1 := nil
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x93E76705"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 0         ; if not R2 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x80B14403"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: MOVE      R1 R2        ; R1 := R2
 28 [-]: RETURN    R1 2         ; return R1
 29 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 554
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 558
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8DB5D01F"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x30DABA98"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 568
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 572
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ToolTipUpdateColors"]
  5 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 16
  6 [-]: JMP       16           ; PC := 16
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x4124CC2F"]
  9 [-]: CALL      R2 1 1       ; R2()
 10 [-]: GETGLOBAL R2 K0        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 12 [-]: GETTABLE  R0 R2 K5     ; R0 := R2["Title"]
 13 [-]: GETGLOBAL R2 K0        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 15 [-]: GETTABLE  R1 R2 K6     ; R1 := R2["Content"]
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0x93C88E0"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x93C88E0"]
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 24 [-]: RETURN    R2 0         ; return R2,...
 25 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 587
; #Upvalues:       2
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: LOADK     R7 K0        ; R7 := ""
  2 [-]: MOVE      R8 R1        ; R8 := R1
  3 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
  4 [-]: MOVE      R10 R4       ; R10 := R4
  5 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  6 [-]: TEST      R9 1         ; if R9 then PC := 20
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
  9 [-]: GETTABLE  R10 R4 K2    ; R10 := R4["endLineTag"]
 10 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 11 [-]: TEST      R9 1         ; if R9 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: GETTABLE  R7 R4 K2     ; R7 := R4["endLineTag"]
 14 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 15 [-]: GETTABLE  R10 R4 K3    ; R10 := R4["includeParagraphTag"]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: TEST      R9 1         ; if R9 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETTABLE  R8 R4 K3     ; R8 := R4["includeParagraphTag"]
 20 [-]: GETUPVAL  R9 U0        ; R9 := U0
 21 [-]: CALL      R9 1 3       ; R9,R10 := R9()
 22 [-]: EQ        0 R5 K4      ; if R5 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R5 R9        ; R5 := R9
 25 [-]: EQ        0 R6 K4      ; if R6 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R6 R10       ; R6 := R10
 28 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETUPVAL  R11 U1       ; R11 := U1
 31 [-]: GETTABLE  R12 R2 K5    ; R12 := R2["rarity"]
 32 [-]: ADD       R12 R12 K6   ; R12 := R12 + 1
 33 [-]: GETTABLE  R5 R11 R12   ; R5 := R11[R12]
 34 [-]: LOADK     R11 K7       ; R11 := "<br>"
 35 [-]: LOADK     R12 K0       ; R12 := ""
 36 [-]: TEST      R8 0         ; if not R8 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: MOVE      R13 R12      ; R13 := R12
 39 [-]: LOADK     R14 K8       ; R14 := "<p>"
 40 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 41 [-]: MOVE      R13 R12      ; R13 := R12
 42 [-]: LOADK     R14 K9       ; R14 := "<font color=\""
 43 [-]: MOVE      R15 R5       ; R15 := R5
 44 [-]: LOADK     R16 K10      ; R16 := "\">"
 45 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 46 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 52
 47 [-]: JMP       52           ; PC := 52
 48 [-]: MOVE      R13 R12      ; R13 := R12
 49 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["localizedTitle"]
 50 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 53 [-]: MOVE      R14 R1       ; R14 := R1
 54 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 55 [-]: TEST      R13 1        ; if R13 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: MOVE      R13 R12      ; R13 := R12
 58 [-]: GETGLOBAL R14 K12      ; R14 := 0xE6DC43B0
 59 [-]: GETGLOBAL R15 K13      ; R15 := 0x9FAED6BC
 60 [-]: SELF      R16 R1 K14   ; R17 := R1; R16 := R1["0x616C74B6"]
 61 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
 62 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 63 [-]: MOVE      R16 R0       ; R16 := R0
 64 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 65 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 66 [-]: MOVE      R13 R12      ; R13 := R12
 67 [-]: MOVE      R14 R11      ; R14 := R11
 68 [-]: LOADK     R15 K15      ; R15 := "</font>"
 69 [-]: CONCAT    R12 R13 R15  ; R12 := R13 .. R14 .. R15
 70 [-]: MOVE      R13 R12      ; R13 := R12
 71 [-]: LOADK     R14 K9       ; R14 := "<font color=\""
 72 [-]: MOVE      R15 R6       ; R15 := R6
 73 [-]: LOADK     R16 K10      ; R16 := "\">"
 74 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 75 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 106
 76 [-]: JMP       106          ; PC := 106
 77 [-]: MOVE      R13 R12      ; R13 := R12
 78 [-]: GETTABLE  R14 R2 K16   ; R14 := R2["localizedDescription"]
 79 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 80 [-]: GETTABLE  R13 R2 K17   ; R13 := R2["affixes"]
 81 [-]: EQ        1 R13 K4     ; if R13 == nil then PC := 120
 82 [-]: JMP       120          ; PC := 120
 83 [-]: LOADK     R13 K6       ; R13 := 1
 84 [-]: GETTABLE  R14 R2 K17   ; R14 := R2["affixes"]
 85 [-]: LEN       R14 R14      ; R14 := # R14
 86 [-]: LOADK     R15 K6       ; R15 := 1
 87 [-]: FORPREP   R13 104      ; R13 -= R15; PC := 104
 88 [-]: MOVE      R17 R12      ; R17 := R12
 89 [-]: MOVE      R18 R11      ; R18 := R11
 90 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 91 [-]: MOVE      R17 R12      ; R17 := R12
 92 [-]: LOADK     R18 K18      ; R18 := "<font color=\"#FFFFFF\">"
 93 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 94 [-]: MOVE      R17 R12      ; R17 := R12
 95 [-]: GETTABLE  R18 R2 K17   ; R18 := R2["affixes"]
 96 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 97 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
 98 [-]: MOVE      R17 R12      ; R17 := R12
 99 [-]: LOADK     R18 K15      ; R18 := "</font>"
100 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
101 [-]: MOVE      R17 R12      ; R17 := R12
102 [-]: MOVE      R18 R7       ; R18 := R7
103 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
104 [-]: FORLOOP   R13 88       ; R13 += R15; if R13 <= R14 then begin PC := 88; R16 := R13 end
105 [-]: JMP       120          ; PC := 120
106 [-]: GETGLOBAL R17 K1       ; R17 := 0x400E7765
107 [-]: MOVE      R18 R1       ; R18 := R1
108 [-]: CALL      R17 2 2      ; R17 := R17(R18)
109 [-]: TEST      R17 1        ; if R17 then PC := 120
110 [-]: JMP       120          ; PC := 120
111 [-]: MOVE      R17 R12      ; R17 := R12
112 [-]: GETGLOBAL R18 K12      ; R18 := 0xE6DC43B0
113 [-]: GETGLOBAL R19 K13      ; R19 := 0x9FAED6BC
114 [-]: SELF      R20 R1 K19   ; R21 := R1; R20 := R1["0x42300EB5"]
115 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
116 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
117 [-]: MOVE      R20 R0       ; R20 := R0
118 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
119 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
120 [-]: MOVE      R17 R12      ; R17 := R12
121 [-]: LOADK     R18 K15      ; R18 := "</font>"
122 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
123 [-]: TEST      R8 0         ; if not R8 then PC := 128
124 [-]: JMP       128          ; PC := 128
125 [-]: MOVE      R17 R12      ; R17 := R12
126 [-]: LOADK     R18 K20      ; R18 := "</p>"
127 [-]: CONCAT    R12 R17 R18  ; R12 := R17 .. R18
128 [-]: RETURN    R12 2        ; return R12
129 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 647
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: MOVE      R8 R0        ; R8 := R0
  3 [-]: MOVE      R9 R1        ; R9 := R1
  4 [-]: MOVE      R10 R2       ; R10 := R2
  5 [-]: MOVE      R11 R3       ; R11 := R3
  6 [-]: MOVE      R12 R4       ; R12 := R4
  7 [-]: MOVE      R13 R5       ; R13 := R5
  8 [-]: MOVE      R14 R6       ; R14 := R6
  9 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 10 [-]: RETURN    R7 0         ; return R7,...
 11 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 651
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADK     R1 K0        ; R1 := 16777215
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["rarity"]
  6 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1
  7 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 661
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R5 K0        ; R5 := _T
  2 [-]: TEST      R1 0         ; if not R1 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R6 K2        ; R6 := string
  5 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["0x4B1F4F58"]
  6 [-]: LOADK     R7 K4        ; R7 := "0x%08X"
  7 [-]: MOVE      R8 R1        ; R8 := R1
  8 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  9 [-]: TEST      R6 1         ; if R6 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADNIL   R6 R6        ; R6 := nil
 12 [-]: SETTABLE  R5 K1 R6     ; R5["ColorPickerCurrentColor"] := R6
 13 [-]: GETGLOBAL R5 K0        ; R5 := _T
 14 [-]: SETTABLE  R5 K5 R2     ; R5["ColorPickerCallback"] := R2
 15 [-]: GETGLOBAL R5 K0        ; R5 := _T
 16 [-]: SETTABLE  R5 K6 R3     ; R5["ColorPickerOnCloseCallback"] := R3
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: SETTABLE  R5 K7 R4     ; R5["ColorPickerSpecificColorsInfo"] := R4
 19 [-]: GETGLOBAL R5 K0        ; R5 := _T
 20 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["InSimulacrum"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETGLOBAL R5 K0        ; R5 := _T
 24 [-]: SETTABLE  R5 K9 K10    ; R5["ColorPickerUseCustomBg"] := "0x1"
 25 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0x5FF274BB"]
 26 [-]: GETGLOBAL R7 K12       ; R7 := _G
 27 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["UIMovie_ColorPicker"]
 28 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 29 [-]: RETURN    R5 2         ; return R5
 30 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 673
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: CALL      R5 1 2       ; R5 := R5()
  8 [-]: MOVE      R1 R5        ; R1 := R5
  9 [-]: GETGLOBAL R5 K1        ; R5 := _T
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mSpecialSuitMode"]
 11 [-]: TEST      R5 0         ; if not R5 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R4 R5 K3     ; R4 := R5["SpecialSuitAvatar"]
 15 [-]: JMP       39           ; PC := 39
 16 [-]: GETGLOBAL R5 K1        ; R5 := _T
 17 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mSentinelMode"]
 18 [-]: TEST      R5 0         ; if not R5 then PC := 38
 19 [-]: JMP       38           ; PC := 38
 20 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: TEST      R5 1         ; if R5 then PC := 39
 24 [-]: JMP       39           ; PC := 39
 25 [-]: SELF      R5 R1 K5     ; R6 := R1; R5 := R1["0x8B598ED4"]
 26 [-]: GETGLOBAL R7 K6        ; R7 := gLotusSentinelAvatarType
 27 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 28 [-]: TEST      R5 0         ; if not R5 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: JMP       39           ; PC := 39
 32 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1["0x8DB5D01F"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x30DABA98"]
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: MOVE      R4 R5        ; R4 := R5
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: TEST      R5 0         ; if not R5 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R5 K1        ; R5 := _T
 46 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 47 [-]: EQ        0 R5 K10     ; if R5 ~= nil then PC := 66
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R5 K1        ; R5 := _T
 50 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 51 [-]: SETTABLE  R5 K9 R6     ; R5["suitTable"] := R6
 52 [-]: GETGLOBAL R5 K1        ; R5 := _T
 53 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 54 [-]: SETTABLE  R5 K11 K12   ; R5["desiredRot"] := -90
 55 [-]: GETGLOBAL R5 K1        ; R5 := _T
 56 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 57 [-]: GETGLOBAL R6 K1        ; R6 := _T
 58 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["suitTable"]
 59 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["desiredRot"]
 60 [-]: SETTABLE  R5 K13 R6    ; R5["lerpRot"] := R6
 61 [-]: GETGLOBAL R5 K1        ; R5 := _T
 62 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["suitTable"]
 63 [-]: GETGLOBAL R6 K15       ; R6 := 0x1E4F6281
 64 [-]: CALL      R6 1 2       ; R6 := R6()
 65 [-]: SETTABLE  R5 K14 R6    ; R5["lerpHead"] := R6
 66 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 67 [-]: MOVE      R6 R0        ; R6 := R0
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: TEST      R5 1         ; if R5 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 72 [-]: MOVE      R6 R4        ; R6 := R4
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: TEST      R5 0         ; if not R5 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: RETURN    R0 1         ; return 
 77 [-]: SELF      R5 R0 K16    ; R6 := R0; R5 := R0["0x8C1ACCEF"]
 78 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 79 [-]: TEST      R5 1         ; if R5 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: RETURN    R0 1         ; return 
 82 [-]: GETGLOBAL R5 K17       ; R5 := 0xF595ADDE
 83 [-]: SELF      R6 R0 K18    ; R7 := R0; R6 := R0["0x6B7B470B"]
 84 [-]: LOADK     R8 K19       ; R8 := "_root"
 85 [-]: LOADK     R9 K20       ; R9 := "_xmouse"
 86 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 87 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 88 [-]: GETGLOBAL R6 K17       ; R6 := 0xF595ADDE
 89 [-]: SELF      R7 R0 K18    ; R8 := R0; R7 := R0["0x6B7B470B"]
 90 [-]: LOADK     R9 K19       ; R9 := "_root"
 91 [-]: LOADK     R10 K21      ; R10 := "_ymouse"
 92 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 93 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 94 [-]: GETGLOBAL R7 K22       ; R7 := Engine
 95 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["0x9490FE70"]
 96 [-]: CALL      R7 1 2       ; R7 := R7()
 97 [-]: EQ        0 R5 K24     ; if R5 ~= -1000 then PC := 117
 98 [-]: JMP       117          ; PC := 117
 99 [-]: EQ        0 R6 K24     ; if R6 ~= -1000 then PC := 117
100 [-]: JMP       117          ; PC := 117
101 [-]: GETGLOBAL R8 K1        ; R8 := _T
102 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
103 [-]: GETTABLE  R5 R8 K25    ; R5 := R8["lastMX"]
104 [-]: GETGLOBAL R8 K1        ; R8 := _T
105 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
106 [-]: GETTABLE  R6 R8 K26    ; R6 := R8["lastMY"]
107 [-]: EQ        1 R5 K10     ; if R5 == nil then PC := 111
108 [-]: JMP       111          ; PC := 111
109 [-]: EQ        0 R6 K10     ; if R6 ~= nil then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: LOADK     R5 K27       ; R5 := 0
112 [-]: LOADK     R6 K27       ; R6 := 0
113 [-]: GETGLOBAL R8 K1        ; R8 := _T
114 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
115 [-]: SETTABLE  R8 K28 K29   ; R8["mouseOffScreen"] := "0x1"
116 [-]: JMP       133          ; PC := 133
117 [-]: GETGLOBAL R8 K1        ; R8 := _T
118 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
119 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["mouseOffScreen"]
120 [-]: TEST      R8 0         ; if not R8 then PC := 133
121 [-]: JMP       133          ; PC := 133
122 [-]: TEST      R7 1         ; if R7 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETGLOBAL R8 K1        ; R8 := _T
125 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
126 [-]: SETTABLE  R8 K25 R5    ; R8["lastMX"] := R5
127 [-]: GETGLOBAL R8 K1        ; R8 := _T
128 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
129 [-]: SETTABLE  R8 K26 R6    ; R8["lastMY"] := R6
130 [-]: GETGLOBAL R8 K1        ; R8 := _T
131 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["suitTable"]
132 [-]: SETTABLE  R8 K28 K30   ; R8["mouseOffScreen"] := "0x0"
133 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0["0x6B7B470B"]
134 [-]: LOADK     R10 K19      ; R10 := "_root"
135 [-]: LOADK     R11 K31      ; R11 := "suitRotationX"
136 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
137 [-]: TEST      R7 1         ; if R7 then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: TEST      R3 0         ; if not R3 then PC := 164
140 [-]: JMP       164          ; PC := 164
141 [-]: TEST      R2 0         ; if not R2 then PC := 164
142 [-]: JMP       164          ; PC := 164
143 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
144 [-]: MOVE      R10 R8       ; R10 := R8
145 [-]: CALL      R9 2 2       ; R9 := R9(R10)
146 [-]: TEST      R9 1         ; if R9 then PC := 164
147 [-]: JMP       164          ; PC := 164
148 [-]: GETGLOBAL R9 K17       ; R9 := 0xF595ADDE
149 [-]: MOVE      R10 R8       ; R10 := R8
150 [-]: CALL      R9 2 2       ; R9 := R9(R10)
151 [-]: EQ        1 R9 K10     ; if R9 == nil then PC := 164
152 [-]: JMP       164          ; PC := 164
153 [-]: GETUPVAL  R9 U1        ; R9 := U1
154 [-]: GETGLOBAL R10 K17      ; R10 := 0xF595ADDE
155 [-]: MOVE      R11 R8       ; R11 := R8
156 [-]: CALL      R10 2 2      ; R10 := R10(R11)
157 [-]: MUL       R10 R10 K32  ; R10 := R10 * 1000
158 [-]: GETGLOBAL R11 K33      ; R11 := 0x4CDEF9FF
159 [-]: CALL      R11 1 2      ; R11 := R11()
160 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
161 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
162 [-]: MOVE      R9 R1        ; R9 := R1
163 [-]: GETUPVAL  R5 U1        ; R5 := U1
164 [-]: GETGLOBAL R9 K1        ; R9 := _T
165 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
166 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["wasUsingController"]
167 [-]: EQ        1 R9 R7      ; if R9 == R7 then PC := 178
168 [-]: JMP       178          ; PC := 178
169 [-]: GETGLOBAL R9 K1        ; R9 := _T
170 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
171 [-]: SETTABLE  R9 K34 R7    ; R9["wasUsingController"] := R7
172 [-]: GETGLOBAL R9 K1        ; R9 := _T
173 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
174 [-]: SETTABLE  R9 K25 R5    ; R9["lastMX"] := R5
175 [-]: GETGLOBAL R9 K1        ; R9 := _T
176 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["suitTable"]
177 [-]: SETTABLE  R9 K26 R6    ; R9["lastMY"] := R6
178 [-]: GETUPVAL  R9 U2        ; R9 := U2
179 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["0xF81722A2"]
180 [-]: MOVE      R10 R3       ; R10 := R3
181 [-]: LOADK     R11 K36      ; R11 := ""
182 [-]: SELF      R12 R0 K37   ; R13 := R0; R12 := R0["0xE297FA96"]
183 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
184 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
185 [-]: EQ        0 R9 K36     ; if R9 ~= "" then PC := 206
186 [-]: JMP       206          ; PC := 206
187 [-]: TEST      R2 0         ; if not R2 then PC := 206
188 [-]: JMP       206          ; PC := 206
189 [-]: GETGLOBAL R10 K1       ; R10 := _T
190 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
191 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["lastMX"]
192 [-]: EQ        1 R10 K10    ; if R10 == nil then PC := 206
193 [-]: JMP       206          ; PC := 206
194 [-]: GETGLOBAL R10 K1       ; R10 := _T
195 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
196 [-]: GETGLOBAL R11 K1       ; R11 := _T
197 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
198 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["desiredRot"]
199 [-]: GETGLOBAL R12 K1       ; R12 := _T
200 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
201 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["lastMX"]
202 [-]: SUB       R12 R12 R5   ; R12 := R12 - R5
203 [-]: MUL       R12 R12 K38  ; R12 := R12 * 0.5
204 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
205 [-]: SETTABLE  R10 K11 R11  ; R10["desiredRot"] := R11
206 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
207 [-]: GETGLOBAL R11 K1       ; R11 := _T
208 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
209 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["lerpRot"]
210 [-]: CALL      R10 2 2      ; R10 := R10(R11)
211 [-]: TEST      R10 0        ; if not R10 then PC := 216
212 [-]: JMP       216          ; PC := 216
213 [-]: GETGLOBAL R10 K1       ; R10 := _T
214 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
215 [-]: SETTABLE  R10 K13 K27  ; R10["lerpRot"] := 0
216 [-]: GETGLOBAL R10 K1       ; R10 := _T
217 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["suitTable"]
218 [-]: GETGLOBAL R11 K39      ; R11 := 0x93034B55
219 [-]: GETGLOBAL R12 K1       ; R12 := _T
220 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
221 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
222 [-]: GETGLOBAL R13 K1       ; R13 := _T
223 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
224 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["desiredRot"]
225 [-]: GETGLOBAL R14 K33      ; R14 := 0x4CDEF9FF
226 [-]: CALL      R14 1 2      ; R14 := R14()
227 [-]: MUL       R14 R14 K40  ; R14 := R14 * 4
228 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
229 [-]: SETTABLE  R10 K13 R11  ; R10["lerpRot"] := R11
230 [-]: LOADK     R10 K27      ; R10 := 0
231 [-]: GETGLOBAL R11 K1       ; R11 := _T
232 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["suitTable"]
233 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["lerpRot"]
234 [-]: GETGLOBAL R12 K1       ; R12 := _T
235 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
236 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["desiredRot"]
237 [-]: LE        0 R11 R12    ; if R11 > R12 then PC := 248
238 [-]: JMP       248          ; PC := 248
239 [-]: GETGLOBAL R11 K41      ; R11 := math
240 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
241 [-]: GETGLOBAL R12 K1       ; R12 := _T
242 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
243 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
244 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
245 [-]: CALL      R11 2 2      ; R11 := R11(R12)
246 [-]: SUB       R10 K43 R11  ; R10 := 360 - R11
247 [-]: JMP       256          ; PC := 256
248 [-]: GETGLOBAL R11 K41      ; R11 := math
249 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
250 [-]: GETGLOBAL R12 K1       ; R12 := _T
251 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
252 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
253 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
254 [-]: CALL      R11 2 2      ; R11 := R11(R12)
255 [-]: MOVE      R10 R11      ; R10 := R11
256 [-]: GETGLOBAL R11 K41      ; R11 := math
257 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["0xF93F7CC8"]
258 [-]: GETGLOBAL R12 K1       ; R12 := _T
259 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
260 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["desiredRot"]
261 [-]: GETGLOBAL R13 K1       ; R13 := _T
262 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
263 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["lerpRot"]
264 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
265 [-]: CALL      R11 2 2      ; R11 := R11(R12)
266 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 282
267 [-]: JMP       282          ; PC := 282
268 [-]: GETGLOBAL R12 K1       ; R12 := _T
269 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
270 [-]: GETGLOBAL R13 K1       ; R13 := _T
271 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
272 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["lerpRot"]
273 [-]: MOD       R13 R13 K43  ; R13 := R13 % 360
274 [-]: SETTABLE  R12 K13 R13  ; R12["lerpRot"] := R13
275 [-]: GETGLOBAL R12 K1       ; R12 := _T
276 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
277 [-]: GETGLOBAL R13 K1       ; R13 := _T
278 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["suitTable"]
279 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["desiredRot"]
280 [-]: MOD       R13 R13 K43  ; R13 := R13 % 360
281 [-]: SETTABLE  R12 K11 R13  ; R12["desiredRot"] := R13
282 [-]: GETGLOBAL R12 K1       ; R12 := _T
283 [-]: GETTABLE  R12 R12 K9   ; R12 := R12["suitTable"]
284 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["lerpRot"]
285 [-]: GETGLOBAL R13 K1       ; R13 := _T
286 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["mSentinelMode"]
287 [-]: TEST      R13 0        ; if not R13 then PC := 297
288 [-]: JMP       297          ; PC := 297
289 [-]: GETGLOBAL R13 K1       ; R13 := _T
290 [-]: GETTABLE  R13 R13 K44  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
291 [-]: EQ        1 R13 K10    ; if R13 == nil then PC := 297
292 [-]: JMP       297          ; PC := 297
293 [-]: GETGLOBAL R13 K1       ; R13 := _T
294 [-]: GETTABLE  R13 R13 K44  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
295 [-]: ADD       R13 R12 R13  ; R13 := R12 + R13
296 [-]: MOD       R12 R13 K43  ; R12 := R13 % 360
297 [-]: MOD       R12 R12 K43  ; R12 := R12 % 360
298 [-]: LE        0 R12 K45    ; if R12 > -180 then PC := 302
299 [-]: JMP       302          ; PC := 302
300 [-]: ADD       R12 R12 K43  ; R12 := R12 + 360
301 [-]: JMP       305          ; PC := 305
302 [-]: LE        0 K46 R12    ; if 180 > R12 then PC := 305
303 [-]: JMP       305          ; PC := 305
304 [-]: SUB       R12 R12 K43  ; R12 := R12 - 360
305 [-]: SELF      R13 R4 K47   ; R14 := R4; R13 := R4["0xAB2C2F12"]
306 [-]: GETGLOBAL R15 K15      ; R15 := 0x1E4F6281
307 [-]: MOVE      R16 R12      ; R16 := R12
308 [-]: LOADK     R17 K27      ; R17 := 0
309 [-]: LOADK     R18 K27      ; R18 := 0
310 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
311 [-]: CALL      R13 0 1      ; R13(R14,...)
312 [-]: SELF      R13 R4 K48   ; R14 := R4; R13 := R4["0x6DA72501"]
313 [-]: CALL      R13 2 2      ; R13 := R13(R14)
314 [-]: SELF      R14 R4 K49   ; R15 := R4; R14 := R4["0xDBEF0FB6"]
315 [-]: CALL      R14 2 2      ; R14 := R14(R15)
316 [-]: GETGLOBAL R15 K1       ; R15 := _T
317 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["suitTable"]
318 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["positions"]
319 [-]: TEST      R15 0        ; if not R15 then PC := 325
320 [-]: JMP       325          ; PC := 325
321 [-]: GETGLOBAL R15 K1       ; R15 := _T
322 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["suitTable"]
323 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["positions"]
324 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
325 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
326 [-]: MOVE      R17 R15      ; R17 := R15
327 [-]: CALL      R16 2 2      ; R16 := R16(R17)
328 [-]: TEST      R16 1        ; if R16 then PC := 332
329 [-]: JMP       332          ; PC := 332
330 [-]: MOVE      R13 R15      ; R13 := R15
331 [-]: JMP       352          ; PC := 352
332 [-]: GETGLOBAL R16 K1       ; R16 := _T
333 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["suitTable"]
334 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["desiredPos"]
335 [-]: EQ        1 R16 K10    ; if R16 == nil then PC := 352
336 [-]: JMP       352          ; PC := 352
337 [-]: SELF      R16 R4 K5    ; R17 := R4; R16 := R4["0x8B598ED4"]
338 [-]: GETGLOBAL R18 K52      ; R18 := gPetAvatarType
339 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
340 [-]: TEST      R16 1        ; if R16 then PC := 352
341 [-]: JMP       352          ; PC := 352
342 [-]: GETGLOBAL R16 K53      ; R16 := 0xE0C881B4
343 [-]: MOVE      R17 R13      ; R17 := R13
344 [-]: GETGLOBAL R18 K1       ; R18 := _T
345 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
346 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["desiredPos"]
347 [-]: GETGLOBAL R19 K33      ; R19 := 0x4CDEF9FF
348 [-]: CALL      R19 1 2      ; R19 := R19()
349 [-]: MUL       R19 R19 K40  ; R19 := R19 * 4
350 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
351 [-]: MOVE      R13 R16      ; R13 := R16
352 [-]: GETGLOBAL R16 K1       ; R16 := _T
353 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["suitTable"]
354 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["queuedTeleport"]
355 [-]: EQ        0 R16 K10    ; if R16 ~= nil then PC := 446
356 [-]: JMP       446          ; PC := 446
357 [-]: LOADK     R16 K27      ; R16 := 0
358 [-]: LOADK     R17 K27      ; R17 := 0
359 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
360 [-]: GETGLOBAL R19 K1       ; R19 := _T
361 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
362 [-]: GETTABLE  R19 R19 K55  ; R19 := R19["lerpRotZ"]
363 [-]: CALL      R18 2 2      ; R18 := R18(R19)
364 [-]: TEST      R18 1        ; if R18 then PC := 369
365 [-]: JMP       369          ; PC := 369
366 [-]: GETGLOBAL R18 K1       ; R18 := _T
367 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
368 [-]: GETTABLE  R17 R18 K55  ; R17 := R18["lerpRotZ"]
369 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
370 [-]: GETGLOBAL R19 K1       ; R19 := _T
371 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
372 [-]: GETTABLE  R19 R19 K56  ; R19 := R19["lerpRotY"]
373 [-]: CALL      R18 2 2      ; R18 := R18(R19)
374 [-]: TEST      R18 1        ; if R18 then PC := 379
375 [-]: JMP       379          ; PC := 379
376 [-]: GETGLOBAL R18 K1       ; R18 := _T
377 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["suitTable"]
378 [-]: GETTABLE  R16 R18 K56  ; R16 := R18["lerpRotY"]
379 [-]: SELF      R18 R4 K57   ; R19 := R4; R18 := R4["0x39D7F449"]
380 [-]: MOVE      R20 R13      ; R20 := R13
381 [-]: GETGLOBAL R21 K15      ; R21 := 0x1E4F6281
382 [-]: MOVE      R22 R12      ; R22 := R12
383 [-]: MOVE      R23 R16      ; R23 := R16
384 [-]: MOVE      R24 R17      ; R24 := R17
385 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
386 [-]: CALL      R18 0 1      ; R18(R19,...)
387 [-]: LOADNIL   R18 R18      ; R18 := nil
388 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
389 [-]: GETGLOBAL R20 K58      ; R20 := gRegion
390 [-]: CALL      R19 2 2      ; R19 := R19(R20)
391 [-]: TEST      R19 1        ; if R19 then PC := 397
392 [-]: JMP       397          ; PC := 397
393 [-]: GETGLOBAL R19 K58      ; R19 := gRegion
394 [-]: SELF      R19 R19 K59  ; R20 := R19; R19 := R19["0x3E2F6BF"]
395 [-]: CALL      R19 2 2      ; R19 := R19(R20)
396 [-]: MOVE      R18 R19      ; R18 := R19
397 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
398 [-]: MOVE      R20 R18      ; R20 := R18
399 [-]: CALL      R19 2 2      ; R19 := R19(R20)
400 [-]: TEST      R19 1        ; if R19 then PC := 463
401 [-]: JMP       463          ; PC := 463
402 [-]: SELF      R19 R18 K5   ; R20 := R18; R19 := R18["0x8B598ED4"]
403 [-]: GETGLOBAL R21 K60      ; R21 := gLotusOperatorAvatarType
404 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
405 [-]: TEST      R19 1        ; if R19 then PC := 463
406 [-]: JMP       463          ; PC := 463
407 [-]: GETGLOBAL R19 K1       ; R19 := _T
408 [-]: GETTABLE  R19 R19 K61  ; R19 := R19["MenuSuitAvatar"]
409 [-]: EQ        1 R4 R19     ; if R4 == R19 then PC := 415
410 [-]: JMP       415          ; PC := 415
411 [-]: GETGLOBAL R19 K1       ; R19 := _T
412 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["KDriveAvatar"]
413 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 463
414 [-]: JMP       463          ; PC := 463
415 [-]: EQ        1 R18 R4     ; if R18 == R4 then PC := 463
416 [-]: JMP       463          ; PC := 463
417 [-]: SELF      R19 R18 K57  ; R20 := R18; R19 := R18["0x39D7F449"]
418 [-]: MOVE      R21 R13      ; R21 := R13
419 [-]: GETGLOBAL R22 K15      ; R22 := 0x1E4F6281
420 [-]: MOVE      R23 R12      ; R23 := R12
421 [-]: LOADK     R24 K27      ; R24 := 0
422 [-]: LOADK     R25 K27      ; R25 := 0
423 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
424 [-]: CALL      R19 0 1      ; R19(R20,...)
425 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
426 [-]: GETGLOBAL R20 K1       ; R20 := _T
427 [-]: GETTABLE  R20 R20 K61  ; R20 := R20["MenuSuitAvatar"]
428 [-]: CALL      R19 2 2      ; R19 := R19(R20)
429 [-]: TEST      R19 1        ; if R19 then PC := 463
430 [-]: JMP       463          ; PC := 463
431 [-]: GETGLOBAL R19 K1       ; R19 := _T
432 [-]: GETTABLE  R19 R19 K62  ; R19 := R19["KDriveAvatar"]
433 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 463
434 [-]: JMP       463          ; PC := 463
435 [-]: GETGLOBAL R19 K1       ; R19 := _T
436 [-]: GETTABLE  R19 R19 K61  ; R19 := R19["MenuSuitAvatar"]
437 [-]: SELF      R19 R19 K57  ; R20 := R19; R19 := R19["0x39D7F449"]
438 [-]: MOVE      R21 R13      ; R21 := R13
439 [-]: GETGLOBAL R22 K15      ; R22 := 0x1E4F6281
440 [-]: MOVE      R23 R12      ; R23 := R12
441 [-]: LOADK     R24 K27      ; R24 := 0
442 [-]: LOADK     R25 K27      ; R25 := 0
443 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
444 [-]: CALL      R19 0 1      ; R19(R20,...)
445 [-]: JMP       463          ; PC := 463
446 [-]: GETGLOBAL R19 K1       ; R19 := _T
447 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
448 [-]: GETGLOBAL R20 K1       ; R20 := _T
449 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["suitTable"]
450 [-]: GETTABLE  R20 R20 K54  ; R20 := R20["queuedTeleport"]
451 [-]: GETGLOBAL R21 K63      ; R21 := 0x6306558E
452 [-]: CALL      R21 1 2      ; R21 := R21()
453 [-]: SUB       R20 R20 R21  ; R20 := R20 - R21
454 [-]: SETTABLE  R19 K54 R20  ; R19["queuedTeleport"] := R20
455 [-]: GETGLOBAL R19 K1       ; R19 := _T
456 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
457 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["queuedTeleport"]
458 [-]: LE        0 R19 K27    ; if R19 > 0 then PC := 463
459 [-]: JMP       463          ; PC := 463
460 [-]: GETGLOBAL R19 K1       ; R19 := _T
461 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["suitTable"]
462 [-]: SETTABLE  R19 K54 K10  ; R19["queuedTeleport"] := nil
463 [-]: GETGLOBAL R19 K64      ; R19 := 0x221C9700
464 [-]: MOVE      R20 R5       ; R20 := R5
465 [-]: MOVE      R21 R6       ; R21 := R6
466 [-]: LOADK     R22 K65      ; R22 := -200
467 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
468 [-]: SELF      R20 R4 K66   ; R21 := R4; R20 := R4["0xA7003AD9"]
469 [-]: CALL      R20 2 2      ; R20 := R20(R21)
470 [-]: SELF      R21 R0 K67   ; R22 := R0; R21 := R0["0xAF296C52"]
471 [-]: MOVE      R23 R20      ; R23 := R20
472 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
473 [-]: SETTABLE  R21 K68 K27  ; R21["z"] := 0
474 [-]: GETGLOBAL R22 K69      ; R22 := 0xEDD2EBFF
475 [-]: MOVE      R23 R21      ; R23 := R21
476 [-]: MOVE      R24 R19      ; R24 := R19
477 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
478 [-]: GETGLOBAL R23 K70      ; R23 := 0xA0DB3B89
479 [-]: MOVE      R24 R22      ; R24 := R22
480 [-]: CALL      R23 2 2      ; R23 := R23(R24)
481 [-]: GETTABLE  R24 R23 K68  ; R24 := R23["z"]
482 [-]: LT        0 K27 R24    ; if 0 >= R24 then PC := 487
483 [-]: JMP       487          ; PC := 487
484 [-]: GETTABLE  R24 R23 K68  ; R24 := R23["z"]
485 [-]: UNM       R24 R24      ; R24 := - R24
486 [-]: SETTABLE  R23 K68 R24  ; R23["z"] := R24
487 [-]: GETGLOBAL R24 K71      ; R24 := 0x4CBE9A09
488 [-]: MOVE      R25 R23      ; R25 := R23
489 [-]: GETGLOBAL R26 K15      ; R26 := 0x1E4F6281
490 [-]: SUB       R27 K72 R12  ; R27 := 90 - R12
491 [-]: LOADK     R28 K27      ; R28 := 0
492 [-]: LOADK     R29 K27      ; R29 := 0
493 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
494 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
495 [-]: MOVE      R23 R24      ; R23 := R24
496 [-]: GETGLOBAL R24 K69      ; R24 := 0xEDD2EBFF
497 [-]: GETGLOBAL R25 K73      ; R25 := ZERO_VECTOR
498 [-]: MOVE      R26 R23      ; R26 := R23
499 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
500 [-]: MOVE      R22 R24      ; R22 := R24
501 [-]: SETTABLE  R22 K74 K27  ; R22["bank"] := 0
502 [-]: GETTABLE  R24 R22 K75  ; R24 := R22["pitch"]
503 [-]: UNM       R24 R24      ; R24 := - R24
504 [-]: SETTABLE  R22 K75 R24  ; R22["pitch"] := R24
505 [-]: GETGLOBAL R24 K77      ; R24 := 0x6374FD98
506 [-]: GETTABLE  R25 R22 K76  ; R25 := R22["heading"]
507 [-]: LOADK     R26 K78      ; R26 := -70
508 [-]: LOADK     R27 K79      ; R27 := 70
509 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
510 [-]: SETTABLE  R22 K76 R24  ; R22["heading"] := R24
511 [-]: GETGLOBAL R24 K77      ; R24 := 0x6374FD98
512 [-]: GETTABLE  R25 R22 K75  ; R25 := R22["pitch"]
513 [-]: LOADK     R26 K80      ; R26 := -30
514 [-]: LOADK     R27 K81      ; R27 := 20
515 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
516 [-]: SETTABLE  R22 K75 R24  ; R22["pitch"] := R24
517 [-]: GETGLOBAL R24 K1       ; R24 := _T
518 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
519 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["lerpHead"]
520 [-]: GETGLOBAL R25 K39      ; R25 := 0x93034B55
521 [-]: GETGLOBAL R26 K1       ; R26 := _T
522 [-]: GETTABLE  R26 R26 K9   ; R26 := R26["suitTable"]
523 [-]: GETTABLE  R26 R26 K14  ; R26 := R26["lerpHead"]
524 [-]: GETTABLE  R26 R26 K76  ; R26 := R26["heading"]
525 [-]: GETTABLE  R27 R22 K76  ; R27 := R22["heading"]
526 [-]: GETGLOBAL R28 K33      ; R28 := 0x4CDEF9FF
527 [-]: CALL      R28 1 2      ; R28 := R28()
528 [-]: MUL       R28 R28 K82  ; R28 := R28 * 8
529 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
530 [-]: SETTABLE  R24 K76 R25  ; R24["heading"] := R25
531 [-]: GETGLOBAL R24 K1       ; R24 := _T
532 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
533 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["lerpHead"]
534 [-]: GETGLOBAL R25 K39      ; R25 := 0x93034B55
535 [-]: GETGLOBAL R26 K1       ; R26 := _T
536 [-]: GETTABLE  R26 R26 K9   ; R26 := R26["suitTable"]
537 [-]: GETTABLE  R26 R26 K14  ; R26 := R26["lerpHead"]
538 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["pitch"]
539 [-]: GETTABLE  R27 R22 K75  ; R27 := R22["pitch"]
540 [-]: GETGLOBAL R28 K33      ; R28 := 0x4CDEF9FF
541 [-]: CALL      R28 1 2      ; R28 := R28()
542 [-]: MUL       R28 R28 K82  ; R28 := R28 * 8
543 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
544 [-]: SETTABLE  R24 K75 R25  ; R24["pitch"] := R25
545 [-]: GETGLOBAL R24 K1       ; R24 := _T
546 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
547 [-]: SETTABLE  R24 K25 R5   ; R24["lastMX"] := R5
548 [-]: GETGLOBAL R24 K1       ; R24 := _T
549 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
550 [-]: SETTABLE  R24 K26 R6   ; R24["lastMY"] := R6
551 [-]: TEST      R7 0         ; if not R7 then PC := 557
552 [-]: JMP       557          ; PC := 557
553 [-]: GETGLOBAL R24 K1       ; R24 := _T
554 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["suitTable"]
555 [-]: GETUPVAL  R25 U1       ; R25 := U1
556 [-]: SETTABLE  R24 K25 R25  ; R24["lastMX"] := R25
557 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 867
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3E2F6BF"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x93034B55
  5 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["heading"]
  6 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["heading"]
  7 [-]: GETGLOBAL R6 K4        ; R6 := 0x4CDEF9FF
  8 [-]: CALL      R6 1 2       ; R6 := R6()
  9 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8
 10 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 11 [-]: SETTABLE  R1 K2 R3     ; R1["heading"] := R3
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x93034B55
 13 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["pitch"]
 14 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["pitch"]
 15 [-]: GETGLOBAL R6 K4        ; R6 := 0x4CDEF9FF
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: SETTABLE  R1 K6 R3     ; R1["pitch"] := R3
 20 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x42C8B968"]
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0xEC274B1A
 22 [-]: LOADK     R6 K9        ; R6 := "GAME_C1_HEAD1"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: MOVE      R6 R1        ; R6 := R1
 25 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 876
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 879
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: SETTABLE  R0 K2 R1     ; R0["profileIconList"] := R1
 10 [-]: GETGLOBAL R0 K1        ; R0 := _T
 11 [-]: CLOSURE   R1 0         ; R1 := closure(Function #33.1)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["GetLocalLoadout"] := R1
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: CLOSURE   R1 1         ; R1 := closure(Function #33.2)
 15 [-]: SETTABLE  R0 K4 R1     ; R0["SetProfileIcon"] := R1
 16 [-]: GETGLOBAL R0 K1        ; R0 := _T
 17 [-]: CLOSURE   R1 2         ; R1 := closure(Function #33.3)
 18 [-]: SETTABLE  R0 K5 R1     ; R0["UpdateProfileIconList"] := R1
 19 [-]: RETURN    R0 1         ; return 


; Function #33.1:
;
; Name:            
; Defined at line: 883
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R2 R2        ; R2 := nil
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x30BDE7F"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #33.2:
;
; Name:            
; Defined at line: 896
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3B14805C"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R3 K3        ; R3 := gPlayerProfileMgr
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x21EF7B1A"]
 12 [-]: LOADK     R5 K5        ; R5 := 0
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 15 [-]: MOVE      R5 R3        ; R5 := R3
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: TEST      R4 1         ; if R4 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0x654F1092"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: SELF      R5 R4 K7     ; R6 := R4; R5 := R4["0x99830BB2"]
 22 [-]: MOVE      R7 R1        ; R7 := R1
 23 [-]: LOADK     R8 K8        ; R8 := "OnAvatarImageSet"
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2["0x99830BB2"]
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: CALL      R5 3 1       ; R5(R6,R7)
 28 [-]: GETGLOBAL R5 K9        ; R5 := gMatchingService
 29 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0xD5E03646"]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 32 [-]: MOVE      R7 R5        ; R7 := R5
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5["0x4DEA50F4"]
 37 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 38 [-]: TEST      R6 0         ; if not R6 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R6 K12       ; R6 := 0x93B1256B
 41 [-]: LOADK     R7 K13       ; R7 := "SetProfileIcon - SendLobbyLoadout"
 42 [-]: CALL      R6 2 1       ; R6(R7)
 43 [-]: GETGLOBAL R6 K14       ; R6 := gGameRules
 44 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x931066AE"]
 45 [-]: CALL      R6 2 1       ; R6(R7)
 46 [-]: GETGLOBAL R6 K0        ; R6 := _T
 47 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6["0xB84C5A80"]
 48 [-]: CALL      R6 2 1       ; R6(R7)
 49 [-]: RETURN    R0 1         ; return 


; Function #33.3:
;
; Name:            
; Defined at line: 920
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := _T
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x3B14805C"]
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: GETGLOBAL R2 K1        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 K4        ; R3 := 1
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: LOADK     R5 K4        ; R5 := 1
 18 [-]: FORPREP   R3 91        ; R3 -= R5; PC := 91
 19 [-]: GETGLOBAL R7 K1        ; R7 := _T
 20 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 21 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 22 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
 23 [-]: GETTABLE  R9 R7 K5     ; R9 := R7["Movie"]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: TEST      R8 1         ; if R8 then PC := 91
 26 [-]: JMP       91           ; PC := 91
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 29 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["HumanPlayer"]
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 1         ; if R9 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["HumanPlayer"]
 34 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9["0x8F6EA7B6"]
 35 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 36 [-]: TEST      R9 1         ; if R9 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["HumanPlayer"]
 39 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0x30BDE7F"]
 40 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 41 [-]: MOVE      R8 R9        ; R8 := R9
 42 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 43 [-]: MOVE      R10 R8       ; R10 := R8
 44 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 45 [-]: TEST      R9 1         ; if R9 then PC := 91
 46 [-]: JMP       91           ; PC := 91
 47 [-]: SELF      R9 R8 K9     ; R10 := R8; R9 := R8["0xC07C8194"]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 50 [-]: MOVE      R11 R9       ; R11 := R9
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: TEST      R10 1        ; if R10 then PC := 71
 53 [-]: JMP       71           ; PC := 71
 54 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 55 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["mItemType"]
 56 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 57 [-]: TEST      R10 1        ; if R10 then PC := 71
 58 [-]: JMP       71           ; PC := 71
 59 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 60 [-]: GETTABLE  R11 R9 K10   ; R11 := R9["mItemType"]
 61 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 62 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 63 [-]: MOVE      R12 R10      ; R12 := R10
 64 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 65 [-]: TEST      R11 1        ; if R11 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: SELF      R11 R10 K12  ; R12 := R10; R11 := R10["0xF1A9732E"]
 68 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 69 [-]: MOVE      R9 R11       ; R9 := R11
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETGLOBAL R11 K13      ; R11 := _G
 72 [-]: GETTABLE  R9 R11 K14   ; R9 := R11["UITexture_ProfilePlaceHolder"]
 73 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 74 [-]: MOVE      R12 R9       ; R12 := R9
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: TEST      R11 1        ; if R11 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 79 [-]: GETTABLE  R12 R7 K5    ; R12 := R7["Movie"]
 80 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 81 [-]: TEST      R11 1        ; if R11 then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETTABLE  R11 R7 K5    ; R11 := R7["Movie"]
 84 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x26581636"]
 85 [-]: GETTABLE  R13 R7 K16   ; R13 := R7["Clip"]
 86 [-]: MOVE      R14 R9       ; R14 := R9
 87 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 88 [-]: LEN       R11 R1       ; R11 := # R1
 89 [-]: ADD       R11 R11 K4   ; R11 := R11 + 1
 90 [-]: SETTABLE  R1 R11 R7    ; R1[R11] := R7
 91 [-]: FORLOOP   R3 19        ; R3 += R5; if R3 <= R4 then begin PC := 19; R6 := R3 end
 92 [-]: GETGLOBAL R11 K1       ; R11 := _T
 93 [-]: SETTABLE  R11 K2 R1    ; R11["profileIconList"] := R1
 94 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 959
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["profileIconList"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 10 [-]: LEN       R2 R2        ; R2 := # R2
 11 [-]: LOADK     R3 K3        ; R3 := 1
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: LOADK     R5 K3        ; R5 := 1
 14 [-]: FORPREP   R3 34        ; R3 -= R5; PC := 34
 15 [-]: GETGLOBAL R7 K1        ; R7 := _T
 16 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 17 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 18 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["Movie"]
 19 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R7 K1        ; R7 := _T
 22 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 23 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 24 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["Clip"]
 25 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R7 K6        ; R7 := table
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xCDB1FD5E"]
 29 [-]: GETGLOBAL R8 K1        ; R8 := _T
 30 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["profileIconList"]
 31 [-]: MOVE      R9 R6        ; R9 := R6
 32 [-]: CALL      R7 3 1       ; R7(R8,R9)
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 35 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 972
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETGLOBAL R4 K1        ; R4 := _T
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["profileIconList"]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  9 [-]: SETTABLE  R3 K3 R0     ; R3["Movie"] := R0
 10 [-]: SETTABLE  R3 K4 R1     ; R3["Clip"] := R1
 11 [-]: SETTABLE  R3 K5 R2     ; R3["HumanPlayer"] := R2
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["profileIconList"]
 15 [-]: LEN       R5 R5        ; R5 := # R5
 16 [-]: LOADK     R6 K6        ; R6 := 1
 17 [-]: MOVE      R7 R5        ; R7 := R5
 18 [-]: LOADK     R8 K6        ; R8 := 1
 19 [-]: FORPREP   R6 32        ; R6 -= R8; PC := 32
 20 [-]: GETGLOBAL R10 K1       ; R10 := _T
 21 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 22 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 23 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Clip"]
 24 [-]: GETTABLE  R11 R3 K4    ; R11 := R3["Clip"]
 25 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: GETGLOBAL R10 K1       ; R10 := _T
 29 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 30 [-]: SETTABLE  R10 R9 R3    ; R10[R9] := R3
 31 [-]: JMP       33           ; PC := 33
 32 [-]: FORLOOP   R6 20        ; R6 += R8; if R6 <= R7 then begin PC := 20; R9 := R6 end
 33 [-]: TEST      R4 1         ; if R4 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R10 K1       ; R10 := _T
 36 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 37 [-]: ADD       R11 R5 K6    ; R11 := R5 + 1
 38 [-]: SETTABLE  R10 R11 R3   ; R10[R11] := R3
 39 [-]: GETGLOBAL R10 K1       ; R10 := _T
 40 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xB84C5A80"]
 41 [-]: CALL      R10 2 1      ; R10(R11)
 42 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 995
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xD6A79FE9"]
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: LOADK     R6 K2        ; R6 := "text"
 10 [-]: MOVE      R7 R2        ; R7 := R2
 11 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 13 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x6B7B470B"]
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: LOADK     R7 K5        ; R7 := "_width"
 16 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 17 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 18 [-]: GETGLOBAL R4 K3        ; R4 := 0xF595ADDE
 19 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0x6B7B470B"]
 20 [-]: MOVE      R7 R1        ; R7 := R1
 21 [-]: LOADK     R8 K6        ; R8 := "textWidth"
 22 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 23 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 24 [-]: LOADK     R5 K7        ; R5 := 100
 25 [-]: LT        0 R3 R4      ; if R3 >= R4 then PC := 27
 26 [-]: JMP       27           ; PC := 27
 27 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 28 [-]: MOVE      R8 R1        ; R8 := R1
 29 [-]: LOADK     R9 K9        ; R9 := "fontScaling"
 30 [-]: MOVE      R10 R1       ; R10 := R1
 31 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 32 [-]: DIV       R6 R3 R4     ; R6 := R3 / R4
 33 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0["0x1C19D966"]
 34 [-]: MOVE      R9 R1        ; R9 := R1
 35 [-]: LOADK     R10 K10      ; R10 := "_xscale"
 36 [-]: MOVE      R11 R5       ; R11 := R5
 37 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 38 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0["0x1C19D966"]
 39 [-]: MOVE      R9 R1        ; R9 := R1
 40 [-]: LOADK     R10 K11      ; R10 := "_yscale"
 41 [-]: MOVE      R11 R5       ; R11 := R5
 42 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 43 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0["0xD6A79FE9"]
 44 [-]: MOVE      R9 R1        ; R9 := R1
 45 [-]: LOADK     R10 K2       ; R10 := "text"
 46 [-]: MOVE      R11 R2       ; R11 := R2
 47 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 48 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1018
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  2 [-]: GETGLOBAL R6 K1        ; R6 := gGameData
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R5 1 0       ; R5 := {}
  8 [-]: MOVE      R6 R0        ; R6 := R0
  9 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 10 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 11 [-]: GETGLOBAL R7 K2        ; R7 := gRegion
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: TEST      R6 1         ; if R6 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R6 K3        ; R6 := table
 16 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["0xE6450C9D"]
 17 [-]: MOVE      R7 R5        ; R7 := R5
 18 [-]: GETGLOBAL R8 K2        ; R8 := gRegion
 19 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x372CB914"]
 20 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 21 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8["0x144A28F9"]
 22 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 23 [-]: CALL      R6 0 1       ; R6(R7,...)
 24 [-]: GETGLOBAL R6 K1        ; R6 := gGameData
 25 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0xAC11F58D"]
 26 [-]: MOVE      R8 R5        ; R8 := R5
 27 [-]: MOVE      R9 R1        ; R9 := R1
 28 [-]: MOVE      R10 R2       ; R10 := R2
 29 [-]: MOVE      R11 R3       ; R11 := R3
 30 [-]: MOVE      R12 R4       ; R12 := R4
 31 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
 32 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1031
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: LOADK     R5 K0        ; R5 := ""
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: MOVE      R9 R3        ; R9 := R3
  7 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
  8 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1035
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETGLOBAL R3 K1        ; R3 := _G
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["UIMovie_GenericSettings"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x5FF274BB"]
 14 [-]: GETGLOBAL R4 K1        ; R4 := _G
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_GenericSettings"]
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 24 [-]: LOADK     R5 K5        ; R5 := "SetTitle"
 25 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/ReportPlayer_DetailsTitle"
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 28 [-]: LOADK     R5 K7        ; R5 := "SetConfirmButtonActive"
 29 [-]: LOADK     R6 K8        ; R6 := "true"
 30 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 31 [-]: GETGLOBAL R3 K9        ; R3 := _T
 32 [-]: CLOSURE   R4 0         ; R4 := closure(Function #39.1)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: SETTABLE  R3 K10 R4    ; R3["ReportReason_Done"] := R4
 36 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 37 [-]: LOADK     R5 K11       ; R5 := "SetCallBack"
 38 [-]: LOADK     R6 K10       ; R6 := "ReportReason_Done"
 39 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 40 [-]: GETGLOBAL R3 K9        ; R3 := _T
 41 [-]: CLOSURE   R4 1         ; R4 := closure(Function #39.2)
 42 [-]: SETTABLE  R3 K12 R4    ; R3["ReportReason_GetSettings"] := R4
 43 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x458F27A9"]
 44 [-]: LOADK     R5 K13       ; R5 := "SetElementsFunction"
 45 [-]: LOADK     R6 K12       ; R6 := "ReportReason_GetSettings"
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: RETURN    R0 1         ; return 


; Function #39.1:
;
; Name:            
; Defined at line: 1048
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["ReportReason_Done"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["ReportReason_GetSettings"] := nil
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x458F27A9"]
 21 [-]: LOADK     R4 K6        ; R4 := "ConfirmReportPlayer"
 22 [-]: GETTABLE  R5 R0 K7     ; R5 := R0[1]
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mContent"]
 24 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #39.2:
;
; Name:            
; Defined at line: 1065
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 6       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mLabel"] := "/Lotus/Language/CrashHandler/STRING_DETAILS"
  7 [-]: GETGLOBAL R4 K5        ; R4 := INPUTBOX
  8 [-]: SETTABLE  R3 K4 R4     ; R3["mType"] := R4
  9 [-]: SETTABLE  R3 K6 K7     ; R3["mMaxChars"] := 200
 10 [-]: SETTABLE  R3 K8 K9     ; R3["mWidth"] := 500
 11 [-]: SETTABLE  R3 K10 K11   ; R3["mHeight"] := 210
 12 [-]: SETTABLE  R3 K12 K13   ; R3["mMultiLine"] := "0x1"
 13 [-]: CALL      R1 3 1       ; R1(R2,R3)
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1083
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  7 [-]: GETGLOBAL R5 K1        ; R5 := _G
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["UIMovie_GenericMenu"]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 0         ; if not R4 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R4 R4        ; R4 := nil
 13 [-]: RETURN    R4 2         ; return R4
 14 [-]: LOADK     R4 K3        ; R4 := ""
 15 [-]: LOADK     R5 K3        ; R5 := ""
 16 [-]: GETUPVAL  R6 U0        ; R6 := U0
 17 [-]: MOVE      R7 R0        ; R7 := R0
 18 [-]: LOADK     R8 K4        ; R8 := 1
 19 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 20 [-]: CLOSURE   R7 0         ; R7 := closure(Function #40.1)
 21 [-]: MOVE      R0 R5        ; R0 := R5
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: SETTABLE  R6 K5 R7     ; R6["ConfirmReportPlayer"] := R7
 24 [-]: CLOSURE   R7 1         ; R7 := closure(Function #40.2)
 25 [-]: GETUPVAL  R0 U2        ; R0 := U2
 26 [-]: MOVE      R0 R1        ; R0 := R1
 27 [-]: MOVE      R0 R2        ; R0 := R2
 28 [-]: MOVE      R0 R4        ; R0 := R4
 29 [-]: MOVE      R0 R5        ; R0 := R5
 30 [-]: MOVE      R0 R3        ; R0 := R3
 31 [-]: SETTABLE  R6 K6 R7     ; R6["OnConfirmReportPlayer"] := R7
 32 [-]: CLOSURE   R7 2         ; R7 := closure(Function #40.3)
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: MOVE      R0 R6        ; R0 := R6
 35 [-]: SETTABLE  R6 K7 R7     ; R6["OnPlayerReported"] := R7
 36 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0["0x5FF274BB"]
 37 [-]: GETGLOBAL R9 K1        ; R9 := _G
 38 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["UIMovie_GenericMenu"]
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7["0x458F27A9"]
 41 [-]: LOADK     R10 K10      ; R10 := "SetTitle"
 42 [-]: SELF      R11 R0 K11   ; R12 := R0; R11 := R0["0x5DB0BD4"]
 43 [-]: LOADK     R13 K12      ; R13 := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
 44 [-]: MOVE      R14 R0       ; R14 := R0
 45 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 46 [-]: LOADK     R12 K13      ; R12 := " "
 47 [-]: MOVE      R13 R1       ; R13 := R1
 48 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
 49 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 50 [-]: GETGLOBAL R8 K14       ; R8 := _T
 51 [-]: CLOSURE   R9 3         ; R9 := closure(Function #40.4)
 52 [-]: MOVE      R0 R4        ; R0 := R4
 53 [-]: GETUPVAL  R0 U3        ; R0 := U3
 54 [-]: MOVE      R0 R0        ; R0 := R0
 55 [-]: MOVE      R0 R3        ; R0 := R3
 56 [-]: SETTABLE  R8 K15 R9    ; R8["ReportSelectionDone"] := R9
 57 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7["0x458F27A9"]
 58 [-]: LOADK     R10 K16      ; R10 := "SetCallBack"
 59 [-]: LOADK     R11 K15      ; R11 := "ReportSelectionDone"
 60 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 61 [-]: GETGLOBAL R8 K14       ; R8 := _T
 62 [-]: CLOSURE   R9 4         ; R9 := closure(Function #40.5)
 63 [-]: SETTABLE  R8 K17 R9    ; R8["GetReportOptions"] := R9
 64 [-]: SELF      R8 R7 K9     ; R9 := R7; R8 := R7["0x458F27A9"]
 65 [-]: LOADK     R10 K18      ; R10 := "SetElementsFunction"
 66 [-]: LOADK     R11 K17      ; R11 := "GetReportOptions"
 67 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 68 [-]: RETURN    R7 2         ; return R7
 69 [-]: RETURN    R0 1         ; return 


; Function #40.1:
;
; Name:            
; Defined at line: 1092
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U1        ; R1 := U1
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: LOADK     R3 K2        ; R3 := ""
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x1C988750"]
 13 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Language/Menu/ReportPlayer_ConfirmText"
 14 [-]: LOADK     R3 K5        ; R3 := "OnConfirmReportPlayer"
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: RETURN    R0 1         ; return 


; Function #40.2:
;
; Name:            
; Defined at line: 1099
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETUPVAL  R3 U2        ; R3 := U2
 11 [-]: GETUPVAL  R4 U3        ; R4 := U3
 12 [-]: GETUPVAL  R5 U4        ; R5 := U4
 13 [-]: LOADK     R6 K3        ; R6 := "OnPlayerReported"
 14 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 15 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 16 [-]: GETUPVAL  R2 U5        ; R2 := U5
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETUPVAL  R1 U5        ; R1 := U5
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: RETURN    R0 1         ; return 


; Function #40.3:
;
; Name:            
; Defined at line: 1110
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xB11F032"]
  5 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/Menu/ReportPlayerSuccess"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x38ECFE60"]
 10 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/ReportPlayerFailed"
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: SETTABLE  R2 K4 K5     ; R2["ConfirmReportPlayer"] := nil
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SETTABLE  R2 K6 K5     ; R2["OnConfirmReportPlayer"] := nil
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: SETTABLE  R2 K7 K5     ; R2["OnPlayerReported"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #40.4:
;
; Name:            
; Defined at line: 1126
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ReportSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetReportOptions"] := nil
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  6 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  9 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mReason"]
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETUPVAL  R3 U3        ; R3 := U3
 14 [-]: CALL      R1 3 1       ; R1(R2,R3)
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U3        ; R2 := U3
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U3        ; R1 := U3
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #40.5:
;
; Name:            
; Defined at line: 1141
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 2       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Spam"
  7 [-]: SETTABLE  R3 K4 K5     ; R3["mReason"] := "Spam"
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: GETGLOBAL R1 K0        ; R1 := table
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 13 [-]: SETTABLE  R3 K2 K6     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveLanguage"
 14 [-]: SETTABLE  R3 K4 K7     ; R3["mReason"] := "OffensiveLangauge"
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := table
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 20 [-]: SETTABLE  R3 K2 K8     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveName"
 21 [-]: SETTABLE  R3 K4 K9     ; R3["mReason"] := "OffensiveName"
 22 [-]: CALL      R1 3 1       ; R1(R2,R3)
 23 [-]: GETGLOBAL R1 K0        ; R1 := table
 24 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 27 [-]: SETTABLE  R3 K2 K10    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Harassment"
 28 [-]: SETTABLE  R3 K4 K11    ; R3["mReason"] := "Harassment"
 29 [-]: CALL      R1 3 1       ; R1(R2,R3)
 30 [-]: GETGLOBAL R1 K0        ; R1 := table
 31 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 32 [-]: MOVE      R2 R0        ; R2 := R0
 33 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 34 [-]: SETTABLE  R3 K2 K12    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_RealLifeThreat"
 35 [-]: SETTABLE  R3 K4 K13    ; R3["mReason"] := "RealLifeThreat"
 36 [-]: CALL      R1 3 1       ; R1(R2,R3)
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1157
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x10FB851"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1161
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x4F6BF2C8"]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: RETURN    R3 2         ; return R3
  8 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1165
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x69B983D"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1169
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["0xBB2F7661"]
  3 [-]: MOVE      R8 R0        ; R8 := R0
  4 [-]: MOVE      R9 R1        ; R9 := R1
  5 [-]: MOVE      R10 R2       ; R10 := R2
  6 [-]: MOVE      R11 R3       ; R11 := R3
  7 [-]: MOVE      R12 R4       ; R12 := R4
  8 [-]: MOVE      R13 R5       ; R13 := R5
  9 [-]: MOVE      R14 R6       ; R14 := R6
 10 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 11 [-]: RETURN    R7 0         ; return R7,...
 12 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1174
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 K0        ; R5 := 1
  3 [-]: LOADK     R6 K1        ; R6 := 4
  4 [-]: LOADK     R7 K0        ; R7 := 1
  5 [-]: FORPREP   R5 89        ; R5 -= R7; PC := 89
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K3    ; R11 := R2; R10 := R2["0x96FB4CEE"]
 13 [-]: SUB       R12 R8 K0    ; R12 := R8 - 1
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 64
 20 [-]: JMP       64           ; PC := 64
 21 [-]: GETGLOBAL R10 K4       ; R10 := 0x7C282057
 22 [-]: MOVE      R11 R9       ; R11 := R9
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SETTABLE  R4 R8 R10    ; R4[R8] := R10
 25 [-]: SELF      R11 R10 K5   ; R12 := R10; R11 := R10["0x616C74B6"]
 26 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 27 [-]: SELF      R12 R0 K6    ; R13 := R0; R12 := R0["0x17028E8F"]
 28 [-]: MOVE      R14 R1       ; R14 := R1
 29 [-]: LOADK     R15 K7       ; R15 := ".Ability"
 30 [-]: MOVE      R16 R8       ; R16 := R8
 31 [-]: LOADK     R17 K8       ; R17 := ".Name.text"
 32 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 33 [-]: SELF      R15 R11 K9   ; R16 := R11; R15 := R11["0x5EC7A3D2"]
 34 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 35 [-]: CALL      R12 0 1      ; R12(R13,...)
 36 [-]: SELF      R12 R10 K10  ; R13 := R10; R12 := R10["0xF1A9732E"]
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: GETGLOBAL R13 K2       ; R13 := 0x400E7765
 39 [-]: MOVE      R14 R12      ; R14 := R12
 40 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 41 [-]: TEST      R13 1        ; if R13 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: SELF      R13 R0 K11   ; R14 := R0; R13 := R0["0x26581636"]
 44 [-]: MOVE      R15 R1       ; R15 := R1
 45 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 46 [-]: MOVE      R17 R8       ; R17 := R8
 47 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 48 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 49 [-]: MOVE      R16 R12      ; R16 := R12
 50 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 51 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0x1C19D966"]
 52 [-]: MOVE      R15 R1       ; R15 := R1
 53 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 54 [-]: MOVE      R17 R8       ; R17 := R8
 55 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 56 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 57 [-]: LOADK     R16 K14      ; R16 := "_visible"
 58 [-]: GETGLOBAL R17 K2       ; R17 := 0x400E7765
 59 [-]: MOVE      R18 R12      ; R18 := R12
 60 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 61 [-]: MOVE      R17 R17      ; R17 := R17
 62 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 63 [-]: JMP       89           ; PC := 89
 64 [-]: SELF      R13 R0 K6    ; R14 := R0; R13 := R0["0x17028E8F"]
 65 [-]: MOVE      R15 R1       ; R15 := R1
 66 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 67 [-]: MOVE      R17 R8       ; R17 := R8
 68 [-]: LOADK     R18 K8       ; R18 := ".Name.text"
 69 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 70 [-]: LOADK     R16 K15      ; R16 := ""
 71 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 72 [-]: SELF      R13 R0 K11   ; R14 := R0; R13 := R0["0x26581636"]
 73 [-]: MOVE      R15 R1       ; R15 := R1
 74 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 75 [-]: MOVE      R17 R8       ; R17 := R8
 76 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 77 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 78 [-]: LOADNIL   R16 R16      ; R16 := nil
 79 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 80 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0x1C19D966"]
 81 [-]: MOVE      R15 R1       ; R15 := R1
 82 [-]: LOADK     R16 K7       ; R16 := ".Ability"
 83 [-]: MOVE      R17 R8       ; R17 := R8
 84 [-]: LOADK     R18 K12      ; R18 := ".Icon"
 85 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 86 [-]: LOADK     R16 K14      ; R16 := "_visible"
 87 [-]: MOVE      R17 R0       ; R17 := R0
 88 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 89 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 90 [-]: RETURN    R4 2         ; return R4
 91 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1204
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 K0        ; R5 := 1
  3 [-]: LOADK     R6 K1        ; R6 := 4
  4 [-]: LOADK     R7 K0        ; R7 := 1
  5 [-]: FORPREP   R5 86        ; R5 -= R7; PC := 86
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K3    ; R11 := R2; R10 := R2["0xEA55C538"]
 13 [-]: SUB       R12 R8 K0    ; R12 := R8 - 1
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 61
 20 [-]: JMP       61           ; PC := 61
 21 [-]: SETTABLE  R4 R8 R9     ; R4[R8] := R9
 22 [-]: SELF      R10 R9 K4    ; R11 := R9; R10 := R9["0x616C74B6"]
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SELF      R11 R0 K5    ; R12 := R0; R11 := R0["0x17028E8F"]
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: LOADK     R14 K6       ; R14 := ".Ability"
 27 [-]: MOVE      R15 R8       ; R15 := R8
 28 [-]: LOADK     R16 K7       ; R16 := ".Name.text"
 29 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 30 [-]: SELF      R14 R10 K8   ; R15 := R10; R14 := R10["0x5EC7A3D2"]
 31 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 32 [-]: CALL      R11 0 1      ; R11(R12,...)
 33 [-]: SELF      R11 R9 K9    ; R12 := R9; R11 := R9["0xF1A9732E"]
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 36 [-]: MOVE      R13 R11      ; R13 := R11
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: TEST      R12 1        ; if R12 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R12 R0 K10   ; R13 := R0; R12 := R0["0x26581636"]
 41 [-]: MOVE      R14 R1       ; R14 := R1
 42 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 43 [-]: MOVE      R16 R8       ; R16 := R8
 44 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 45 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 46 [-]: MOVE      R15 R11      ; R15 := R11
 47 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 48 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x1C19D966"]
 49 [-]: MOVE      R14 R1       ; R14 := R1
 50 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 51 [-]: MOVE      R16 R8       ; R16 := R8
 52 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 53 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 54 [-]: LOADK     R15 K13      ; R15 := "_visible"
 55 [-]: GETGLOBAL R16 K2       ; R16 := 0x400E7765
 56 [-]: MOVE      R17 R11      ; R17 := R11
 57 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 58 [-]: MOVE      R16 R16      ; R16 := R16
 59 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 60 [-]: JMP       86           ; PC := 86
 61 [-]: SELF      R12 R0 K5    ; R13 := R0; R12 := R0["0x17028E8F"]
 62 [-]: MOVE      R14 R1       ; R14 := R1
 63 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 64 [-]: MOVE      R16 R8       ; R16 := R8
 65 [-]: LOADK     R17 K7       ; R17 := ".Name.text"
 66 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 67 [-]: LOADK     R15 K14      ; R15 := "/Lotus/Language/Menu/Empty_Precept"
 68 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 69 [-]: SELF      R12 R0 K10   ; R13 := R0; R12 := R0["0x26581636"]
 70 [-]: MOVE      R14 R1       ; R14 := R1
 71 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 72 [-]: MOVE      R16 R8       ; R16 := R8
 73 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 74 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 75 [-]: LOADNIL   R15 R15      ; R15 := nil
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x1C19D966"]
 78 [-]: MOVE      R14 R1       ; R14 := R1
 79 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 80 [-]: MOVE      R16 R8       ; R16 := R8
 81 [-]: LOADK     R17 K11      ; R17 := ".Icon"
 82 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 83 [-]: LOADK     R15 K13      ; R15 := "_visible"
 84 [-]: MOVE      R16 R0       ; R16 := R0
 85 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 86 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 87 [-]: RETURN    R4 2         ; return R4
 88 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1233
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 9       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["mIndex"] := 0
  3 [-]: SETTABLE  R1 K2 K3     ; R1["mMovie"] := nil
  4 [-]: SETTABLE  R1 K4 K5     ; R1["mIsShowing"] := "0x0"
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: SETTABLE  R1 K6 R2     ; R1["mListItems"] := R2
  7 [-]: CLOSURE   R2 0         ; R2 := closure(Function #47.1)
  8 [-]: SETTABLE  R1 K7 R2     ; R1["Add"] := R2
  9 [-]: CLOSURE   R2 1         ; R2 := closure(Function #47.2)
 10 [-]: SETTABLE  R1 K8 R2     ; R1["Clear"] := R2
 11 [-]: CLOSURE   R2 2         ; R2 := closure(Function #47.3)
 12 [-]: SETTABLE  R1 K9 R2     ; R1["IsShowing"] := R2
 13 [-]: CLOSURE   R2 3         ; R2 := closure(Function #47.4)
 14 [-]: SETTABLE  R1 K10 R2    ; R1["Hide"] := R2
 15 [-]: CLOSURE   R2 4         ; R2 := closure(Function #47.5)
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: SETTABLE  R1 K11 R2    ; R1["Show"] := R2
 18 [-]: GETGLOBAL R2 K12       ; R2 := _T
 19 [-]: SETTABLE  R2 K13 R1    ; R2["ContextMenu"] := R1
 20 [-]: GETGLOBAL R2 K12       ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["ContextMenu"]
 22 [-]: SETTABLE  R2 K2 R0     ; R2["mMovie"] := R0
 23 [-]: RETURN    R0 1         ; return 


; Function #47.1:
;
; Name:            
; Defined at line: 1241
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIndex"]
  2 [-]: ADD       R3 R3 K1     ; R3 := R3 + 1
  3 [-]: SETTABLE  R0 K0 R3     ; R0["mIndex"] := R3
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
  5 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
  6 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
  7 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
  8 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  9 [-]: LOADK     R6 K5        ; R6 := "enabled"
 10 [-]: MOVE      R7 R1        ; R7 := R1
 11 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 12 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
 14 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 15 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 16 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 17 [-]: LOADK     R6 K6        ; R6 := "_visible"
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 21 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x1C19D966"]
 22 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 23 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 24 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 25 [-]: LOADK     R6 K7        ; R6 := "Id"
 26 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mIndex"]
 27 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 28 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 29 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x17028E8F"]
 30 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 31 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 32 [-]: LOADK     R7 K9        ; R7 := ".Label.text"
 33 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mListItems"]
 37 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIndex"]
 38 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 39 [-]: SETTABLE  R5 K11 R1    ; R5["Label"] := R1
 40 [-]: SETTABLE  R5 K12 R2    ; R5["PressedCallback"] := R2
 41 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
 42 [-]: RETURN    R0 1         ; return 


; Function #47.2:
;
; Name:            
; Defined at line: 1250
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIndex"] := 0
  2 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x7CC73200"]
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #47.3:
;
; Name:            
; Defined at line: 1255
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsShowing"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #47.4:
;
; Name:            
; Defined at line: 1259
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x4D8B7CE8"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SETTABLE  R0 K1 K2     ; R0["mIsShowing"] := "0x0"
  7 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
  9 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 10 [-]: LOADK     R4 K6        ; R4 := "enabled"
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1C19D966"]
 15 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 16 [-]: LOADK     R4 K7        ; R4 := "_visible"
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #47.5:
;
; Name:            
; Defined at line: 1268
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIsShowing"] := "0x1"
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mIndex"]
  3 [-]: LT        0 K3 R1      ; if 0 >= R1 then PC := 43
  4 [-]: JMP       43           ; PC := 43
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
  6 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
  7 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
  8 [-]: LOADK     R4 K7        ; R4 := "enabled"
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
 14 [-]: LOADK     R4 K8        ; R4 := "_visible"
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 17 [-]: GETGLOBAL R1 K9        ; R1 := 0xF595ADDE
 18 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mMovie"]
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x6B7B470B"]
 20 [-]: LOADK     R4 K11       ; R4 := "_xmouse"
 21 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: ADD       R1 R1 K12    ; R1 := R1 + 60
 24 [-]: GETGLOBAL R2 K9        ; R2 := 0xF595ADDE
 25 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 26 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6B7B470B"]
 27 [-]: LOADK     R5 K13       ; R5 := "_ymouse"
 28 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 29 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x1C19D966"]
 32 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 33 [-]: LOADK     R6 K14       ; R6 := "_x"
 34 [-]: MOVE      R7 R1        ; R7 := R1
 35 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 36 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 37 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x1C19D966"]
 38 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 39 [-]: LOADK     R6 K15       ; R6 := "_y"
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: JMP       45           ; PC := 45
 43 [-]: SELF      R3 R0 K16    ; R4 := R0; R3 := R0["0x79EA5337"]
 44 [-]: CALL      R3 2 1       ; R3(R4)
 45 [-]: LOADK     R3 K17       ; R3 := 1
 46 [-]: LOADK     R4 K18       ; R4 := 8
 47 [-]: LOADK     R5 K17       ; R5 := 1
 48 [-]: FORPREP   R3 75        ; R3 -= R5; PC := 75
 49 [-]: GETUPVAL  R7 U0        ; R7 := U0
 50 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["0xF81722A2"]
 51 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mIndex"]
 52 [-]: LE        1 R6 R8      ; if R6 <= R8 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R8 R0        ; R8 := R0
 55 [-]: MOVE      R8 R1        ; R8 := R1
 56 [-]: MOVE      R9 R1        ; R9 := R1
 57 [-]: MOVE      R10 R0       ; R10 := R0
 58 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 59 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 60 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x1C19D966"]
 61 [-]: LOADK     R10 K20      ; R10 := "ContextMenu.Btn"
 62 [-]: MOVE      R11 R6       ; R11 := R6
 63 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 64 [-]: LOADK     R11 K7       ; R11 := "enabled"
 65 [-]: MOVE      R12 R7       ; R12 := R7
 66 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 67 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 68 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8["0x1C19D966"]
 69 [-]: LOADK     R10 K20      ; R10 := "ContextMenu.Btn"
 70 [-]: MOVE      R11 R6       ; R11 := R6
 71 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 72 [-]: LOADK     R11 K8       ; R11 := "_visible"
 73 [-]: MOVE      R12 R7       ; R12 := R7
 74 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 75 [-]: FORLOOP   R3 49        ; R3 += R5; if R3 <= R4 then begin PC := 49; R6 := R3 end
 76 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1294
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K1        ; R1 := 0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mItemType"]
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADK     R2 K1        ; R2 := 0
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mUpgradeVer"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x827B763F"]
 19 [-]: CALL      R3 1 2       ; R3 := R3()
 20 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R2 K1        ; R2 := 0
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: GETGLOBAL R2 K6        ; R2 := gGameConfig
 25 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x9E8E66BA"]
 26 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mXP"]
 27 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mItemType"]
 28 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1314
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  3 [-]: LOADK     R3 K2        ; R3 := 0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 0         ; if not R2 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x3077BE70"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: SELF      R4 R0 K6     ; R5 := R0; R4 := R0["0x8292A1EF"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: GETGLOBAL R5 K7        ; R5 := Engine
 19 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["Item_Packages"]
 20 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: GETGLOBAL R6 K7        ; R6 := Engine
 25 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Item_FlavourItems"]
 26 [-]: EQ        1 R4 R6      ; if R4 == R6 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: MOVE      R6 R0        ; R6 := R0
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: GETGLOBAL R7 K7        ; R7 := Engine
 31 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["Item_WeaponSkins"]
 32 [-]: EQ        1 R4 R7      ; if R4 == R7 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R7 R0        ; R7 := R0
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: GETGLOBAL R8 K7        ; R8 := Engine
 37 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["Item_Ships"]
 38 [-]: EQ        1 R4 R8      ; if R4 == R8 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R8 R0        ; R8 := R0
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: MOVE      R9 R0        ; R9 := R0
 43 [-]: GETGLOBAL R10 K7       ; R10 := Engine
 44 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["Item_Recipes"]
 45 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: SELF      R10 R0 K13   ; R11 := R0; R10 := R0["0x49F6C90A"]
 48 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 49 [-]: MOVE      R10 R10      ; R10 := R10
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R10 R0       ; R10 := R0
 52 [-]: MOVE      R10 R1       ; R10 := R1
 53 [-]: TEST      R10 1        ; if R10 then PC := 78
 54 [-]: JMP       78           ; PC := 78
 55 [-]: SELF      R11 R0 K14   ; R12 := R0; R11 := R0["0x8B598ED4"]
 56 [-]: GETGLOBAL R13 K15      ; R13 := gRecipeStoreItemType
 57 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 58 [-]: TEST      R11 0        ; if not R11 then PC := 78
 59 [-]: JMP       78           ; PC := 78
 60 [-]: SELF      R11 R0 K16   ; R12 := R0; R11 := R0["0xCF3F0AF8"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: GETGLOBAL R12 K3       ; R12 := 0x400E7765
 63 [-]: MOVE      R13 R11      ; R13 := R11
 64 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 65 [-]: TEST      R12 1        ; if R12 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETUPVAL  R12 U0       ; R12 := U0
 68 [-]: MOVE      R13 R11      ; R13 := R11
 69 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 70 [-]: TEST      R12 1        ; if R12 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: SELF      R12 R0 K17   ; R13 := R0; R12 := R0["0xA1B9383F"]
 73 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 74 [-]: TEST      R12 1        ; if R12 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: MOVE      R12 R0       ; R12 := R0
 77 [-]: RETURN    R12 2        ; return R12
 78 [-]: GETGLOBAL R12 K7       ; R12 := Engine
 79 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["Item_Recipes"]
 80 [-]: EQ        0 R4 R12     ; if R4 ~= R12 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: SELF      R12 R0 K18   ; R13 := R0; R12 := R0["0x99575BC7"]
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12["0x8B598ED4"]
 85 [-]: GETGLOBAL R14 K19      ; R14 := gKeyChainItemType
 86 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 87 [-]: JMP       90           ; PC := 90
 88 [-]: MOVE      R12 R0       ; R12 := R0
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: GETGLOBAL R13 K7       ; R13 := Engine
 91 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["Item_Recipes"]
 92 [-]: EQ        0 R4 R13     ; if R4 ~= R13 then PC := 100
 93 [-]: JMP       100          ; PC := 100
 94 [-]: SELF      R13 R0 K18   ; R14 := R0; R13 := R0["0x99575BC7"]
 95 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 96 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13["0x8B598ED4"]
 97 [-]: GETGLOBAL R15 K20      ; R15 := gShipItemType
 98 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 99 [-]: JMP       102          ; PC := 102
100 [-]: MOVE      R13 R0       ; R13 := R0
101 [-]: MOVE      R13 R1       ; R13 := R1
102 [-]: NEWTABLE  R14 11 0     ; R14 := {}
103 [-]: GETGLOBAL R15 K21      ; R15 := 0x2C00D429
104 [-]: LOADK     R16 K22      ; R16 := "/Lotus/Types/Items/MiscItems/LibraryScannerUpgrade"
105 [-]: CALL      R15 2 2      ; R15 := R15(R16)
106 [-]: GETGLOBAL R16 K21      ; R16 := 0x2C00D429
107 [-]: LOADK     R17 K23      ; R17 := "/Lotus/Types/Items/MiscItems/SolarisMiningToolUpgrade"
108 [-]: CALL      R16 2 2      ; R16 := R16(R17)
109 [-]: GETGLOBAL R17 K21      ; R17 := 0x2C00D429
110 [-]: LOADK     R18 K24      ; R18 := "/Lotus/Types/Restoratives/Consumable/GlyphConsumableNoCharges"
111 [-]: CALL      R17 2 2      ; R17 := R17(R18)
112 [-]: GETGLOBAL R18 K21      ; R18 := 0x2C00D429
113 [-]: LOADK     R19 K25      ; R19 := "/Lotus/Types/Items/MiscItems/DangerRoomKey"
114 [-]: CALL      R18 2 2      ; R18 := R18(R19)
115 [-]: GETUPVAL  R19 U1       ; R19 := U1
116 [-]: GETGLOBAL R20 K19      ; R20 := gKeyChainItemType
117 [-]: GETGLOBAL R21 K21      ; R21 := 0x2C00D429
118 [-]: LOADK     R22 K26      ; R22 := "/Lotus/Types/Items/ShipDecos/HarrowQuestKeyOrnament"
119 [-]: CALL      R21 2 2      ; R21 := R21(R22)
120 [-]: GETGLOBAL R22 K21      ; R22 := 0x2C00D429
121 [-]: LOADK     R23 K27      ; R23 := "/Lotus/Types/Restoratives/Consumable/MiningLaser"
122 [-]: CALL      R22 2 2      ; R22 := R22(R23)
123 [-]: GETGLOBAL R23 K21      ; R23 := 0x2C00D429
124 [-]: LOADK     R24 K28      ; R24 := "/Lotus/Types/Restoratives/Consumable/BaseSpearFishingSpear"
125 [-]: CALL      R23 2 2      ; R23 := R23(R24)
126 [-]: GETGLOBAL R24 K21      ; R24 := 0x2C00D429
127 [-]: LOADK     R25 K29      ; R25 := "/Lotus/Types/Restoratives/Conservation/AnimalLureGearItem"
128 [-]: CALL      R24 2 2      ; R24 := R24(R25)
129 [-]: GETGLOBAL R25 K21      ; R25 := 0x2C00D429
130 [-]: LOADK     R26 K30      ; R26 := "/Lotus/Types/Restoratives/Conservation/TranqRifleGearItem"
131 [-]: CALL      R25 2 2      ; R25 := R25(R26)
132 [-]: GETGLOBAL R26 K21      ; R26 := 0x2C00D429
133 [-]: LOADK     R27 K31      ; R27 := "/Lotus/Types/BoosterPacks/RivenModPack"
134 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
135 [-]: SETLIST   R14 0 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 0
136 [-]: MOVE      R15 R0       ; R15 := R0
137 [-]: GETGLOBAL R16 K3       ; R16 := 0x400E7765
138 [-]: MOVE      R17 R3       ; R17 := R3
139 [-]: CALL      R16 2 2      ; R16 := R16(R17)
140 [-]: TEST      R16 1        ; if R16 then PC := 158
141 [-]: JMP       158          ; PC := 158
142 [-]: LOADK     R16 K32      ; R16 := 1
143 [-]: LEN       R17 R14      ; R17 := # R14
144 [-]: LOADK     R18 K32      ; R18 := 1
145 [-]: FORPREP   R16 153      ; R16 -= R18; PC := 153
146 [-]: SELF      R20 R3 K14   ; R21 := R3; R20 := R3["0x8B598ED4"]
147 [-]: GETTABLE  R22 R14 R19  ; R22 := R14[R19]
148 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
149 [-]: TEST      R20 0        ; if not R20 then PC := 153
150 [-]: JMP       153          ; PC := 153
151 [-]: MOVE      R15 R1       ; R15 := R1
152 [-]: JMP       154          ; PC := 154
153 [-]: FORLOOP   R16 146      ; R16 += R18; if R16 <= R17 then begin PC := 146; R19 := R16 end
154 [-]: SELF      R20 R3 K14   ; R21 := R3; R20 := R3["0x8B598ED4"]
155 [-]: GETUPVAL  R22 U2       ; R22 := U2
156 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
157 [-]: MOVE      R9 R20       ; R9 := R20
158 [-]: TEST      R5 0         ; if not R5 then PC := 174
159 [-]: JMP       174          ; PC := 174
160 [-]: SELF      R20 R0 K33   ; R21 := R0; R20 := R0["0x6139ADFF"]
161 [-]: CALL      R20 2 2      ; R20 := R20(R21)
162 [-]: GETGLOBAL R21 K7       ; R21 := Engine
163 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["Item_DC_NITRO"]
164 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 174
165 [-]: JMP       174          ; PC := 174
166 [-]: SELF      R20 R2 K35   ; R21 := R2; R20 := R2["0x9C8CCF19"]
167 [-]: SELF      R22 R0 K36   ; R23 := R0; R22 := R0["0x1170584F"]
168 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
169 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
170 [-]: TEST      R20 1        ; if R20 then PC := 174
171 [-]: JMP       174          ; PC := 174
172 [-]: MOVE      R20 R1       ; R20 := R1
173 [-]: RETURN    R20 2        ; return R20
174 [-]: TEST      R5 1         ; if R5 then PC := 200
175 [-]: JMP       200          ; PC := 200
176 [-]: TEST      R6 1         ; if R6 then PC := 200
177 [-]: JMP       200          ; PC := 200
178 [-]: TEST      R7 1         ; if R7 then PC := 200
179 [-]: JMP       200          ; PC := 200
180 [-]: TEST      R10 1        ; if R10 then PC := 200
181 [-]: JMP       200          ; PC := 200
182 [-]: TEST      R12 0        ; if not R12 then PC := 188
183 [-]: JMP       188          ; PC := 188
184 [-]: SELF      R20 R0 K17   ; R21 := R0; R20 := R0["0xA1B9383F"]
185 [-]: CALL      R20 2 2      ; R20 := R20(R21)
186 [-]: TEST      R20 0        ; if not R20 then PC := 200
187 [-]: JMP       200          ; PC := 200
188 [-]: TEST      R9 0         ; if not R9 then PC := 194
189 [-]: JMP       194          ; PC := 194
190 [-]: SELF      R20 R0 K17   ; R21 := R0; R20 := R0["0xA1B9383F"]
191 [-]: CALL      R20 2 2      ; R20 := R20(R21)
192 [-]: TEST      R20 0        ; if not R20 then PC := 200
193 [-]: JMP       200          ; PC := 200
194 [-]: TEST      R13 1        ; if R13 then PC := 200
195 [-]: JMP       200          ; PC := 200
196 [-]: TEST      R8 1         ; if R8 then PC := 200
197 [-]: JMP       200          ; PC := 200
198 [-]: TEST      R15 0        ; if not R15 then PC := 202
199 [-]: JMP       202          ; PC := 202
200 [-]: MOVE      R20 R0       ; R20 := R0
201 [-]: RETURN    R20 2        ; return R20
202 [-]: MOVE      R20 R1       ; R20 := R1
203 [-]: RETURN    R20 2        ; return R20
204 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1390
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1395
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  3 [-]: LOADK     R4 K2        ; R4 := 0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x654F1092"]
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADK     R1 K5        ; R1 := 1
 10 [-]: GETGLOBAL R4 K6        ; R4 := gGameConfig
 11 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0xD463EC86"]
 12 [-]: MOVE      R6 R0        ; R6 := R0
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K8        ; R5 := Lotus_Game
 15 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["MiscBin"]
 16 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 32
 17 [-]: JMP       32           ; PC := 32
 18 [-]: GETGLOBAL R5 K8        ; R5 := Lotus_Game
 19 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["InvalidBin"]
 20 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 32
 21 [-]: JMP       32           ; PC := 32
 22 [-]: SELF      R5 R3 K11    ; R6 := R3; R5 := R3["0x6F2E05FD"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5["0x81609708"]
 25 [-]: MOVE      R7 R4        ; R7 := R4
 26 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 27 [-]: LE        1 R1 R5      ; if R1 <= R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: RETURN    R5 2         ; return R5
 32 [-]: MOVE      R5 R1        ; R5 := R1
 33 [-]: RETURN    R5 2         ; return R5
 34 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1411
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0xB03F791E"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := gPlayerProfileMgr
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 12 [-]: LOADK     R4 K4        ; R4 := 0
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0x93B1256B
 20 [-]: LOADK     R4 K6        ; R4 := "IsXPLocked: playerProfile was nil"
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: MOVE      R3 R0        ; R3 := R0
 23 [-]: RETURN    R3 2         ; return R3
 24 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x654F1092"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3["0x3155222A"]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: LT        1 R4 R1      ; if R4 < R1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R5 R0        ; R5 := R0
 31 [-]: MOVE      R5 R1        ; R5 := R1
 32 [-]: MOVE      R6 R5        ; R6 := R5
 33 [-]: MOVE      R7 R1        ; R7 := R1
 34 [-]: RETURN    R6 3         ; return R6,R7
 35 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1430
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x8B5FE505"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := gPlayerProfileMgr
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 12 [-]: LOADK     R4 K4        ; R4 := 0
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x654F1092"]
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0x30BDE7F"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0xD2E7CB95"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        0 K4 R1      ; if 0 >= R1 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LT        1 R4 R1      ; if R4 < R1 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: MOVE      R5 R1        ; R5 := R1
 26 [-]: TEST      R5 0         ; if not R5 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: SELF      R6 R3 K8     ; R7 := R3; R6 := R3["0xC3C8CCC"]
 29 [-]: SELF      R8 R0 K9     ; R9 := R0; R8 := R0["0x99575BC7"]
 30 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 31 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 32 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 33 [-]: GETTABLE  R8 R6 K10    ; R8 := R6["mSuit"]
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: TEST      R7 1         ; if R7 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: MOVE      R5 R0        ; R5 := R0
 38 [-]: MOVE      R7 R5        ; R7 := R5
 39 [-]: MOVE      R8 R1        ; R8 := R1
 40 [-]: RETURN    R7 3         ; return R7,R8
 41 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1452
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["0xD1BD9D6"]
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: MOVE      R9 R3        ; R9 := R3
  7 [-]: MOVE      R10 R4       ; R10 := R4
  8 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  9 [-]: RETURN    R5 0         ; return R5,...
 10 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1456
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.dev."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1460
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1464
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.test."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1468
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1472
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := string
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xBDD0D625"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameConfig
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x902F7420"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := string
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE44F664"]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "/localhost/"
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1476
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1480
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 1         ; if R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: TEST      R0 0         ; if not R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: MOVE      R0 R1        ; R0 := R1
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1489
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 38
  5 [-]: JMP       38           ; PC := 38
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 36
 11 [-]: JMP       36           ; PC := 36
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 36
 17 [-]: JMP       36           ; PC := 36
 18 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 1         ; if R0 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 25 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 26 [-]: GETGLOBAL R2 K6        ; R2 := gLotusHubGameRulesType
 27 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 28 [-]: TEST      R0 1         ; if R0 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 31 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 32 [-]: GETGLOBAL R2 K7        ; R2 := gLotusDuelGameRulesType
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: TEST      R0 0         ; if not R0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: RETURN    R0 2         ; return R0
 40 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 1504
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 10 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 11 [-]: GETGLOBAL R2 K3        ; R2 := gLotusHubGameRulesType
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: TEST      R0 0         ; if not R0 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 20 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xD03B997F"]
 21 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 22 [-]: RETURN    R0 0         ; return R0,...
 23 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 24 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xBB3AACF2"]
 25 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 26 [-]: RETURN    R0 0         ; return R0,...
 27 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 1513
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SELF      R2 R1 K0     ; R3 := R1; R2 := R1["0x5B0E7439"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADK     R3 K1        ; R3 := 1
  7 [-]: LEN       R4 R2        ; R4 := # R2
  8 [-]: LOADK     R5 K1        ; R5 := 1
  9 [-]: FORPREP   R3 67        ; R3 -= R5; PC := 67
 10 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 11 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["name"]
 12 [-]: LOADK     R9 K1        ; R9 := 1
 13 [-]: GETTABLE  R10 R7 K3    ; R10 := R7["tiers"]
 14 [-]: LEN       R10 R10      ; R10 := # R10
 15 [-]: LOADK     R11 K1       ; R11 := 1
 16 [-]: FORPREP   R9 66        ; R9 -= R11; PC := 66
 17 [-]: GETTABLE  R13 R7 K3    ; R13 := R7["tiers"]
 18 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 19 [-]: LOADK     R14 K1       ; R14 := 1
 20 [-]: GETTABLE  R15 R13 K4   ; R15 := R13["sectors"]
 21 [-]: LEN       R15 R15      ; R15 := # R15
 22 [-]: LOADK     R16 K1       ; R16 := 1
 23 [-]: FORPREP   R14 65       ; R14 -= R16; PC := 65
 24 [-]: GETGLOBAL R18 K5       ; R18 := 0x1BF588C6
 25 [-]: LOADK     R19 K6       ; R19 := 0
 26 [-]: CALL      R18 2 1      ; R18(R19)
 27 [-]: GETTABLE  R18 R13 K4   ; R18 := R13["sectors"]
 28 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 29 [-]: GETTABLE  R19 R18 K7   ; R19 := R18["nodeType"]
 30 [-]: GETGLOBAL R20 K8       ; R20 := Lotus_Game
 31 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["NT_MISSION"]
 32 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 44
 33 [-]: JMP       44           ; PC := 44
 34 [-]: GETTABLE  R19 R18 K7   ; R19 := R18["nodeType"]
 35 [-]: GETGLOBAL R20 K8       ; R20 := Lotus_Game
 36 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["NT_CLAN"]
 37 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETTABLE  R19 R18 K7   ; R19 := R18["nodeType"]
 40 [-]: GETGLOBAL R20 K8       ; R20 := Lotus_Game
 41 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["NT_BONUS_MISSION"]
 42 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 65
 43 [-]: JMP       65           ; PC := 65
 44 [-]: GETTABLE  R19 R18 K12  ; R19 := R18["mission"]
 45 [-]: GETTABLE  R20 R19 K13  ; R20 := R19["missionReward"]
 46 [-]: GETTABLE  R21 R20 K14  ; R21 := R20["randomizedItems"]
 47 [-]: GETTABLE  R22 R19 K15  ; R22 := R19["enemyCacheOverride"]
 48 [-]: NEWTABLE  R23 0 5      ; R23 := {}
 49 [-]: GETTABLE  R24 R18 K2   ; R24 := R18["name"]
 50 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0x5EC7A3D2"]
 51 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 52 [-]: SETTABLE  R23 K2 R24   ; R23["name"] := R24
 53 [-]: GETTABLE  R24 R18 K17  ; R24 := R18["locTag"]
 54 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0x5EC7A3D2"]
 55 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 56 [-]: SETTABLE  R23 K17 R24  ; R23["locTag"] := R24
 57 [-]: SETTABLE  R23 K18 R8   ; R23["regionLocTag"] := R8
 58 [-]: SETTABLE  R23 K14 R21  ; R23["randomizedItems"] := R21
 59 [-]: SETTABLE  R23 K15 R22  ; R23["enemyCacheOverride"] := R22
 60 [-]: GETGLOBAL R24 K19      ; R24 := table
 61 [-]: GETTABLE  R24 R24 K20  ; R24 := R24["0xE6450C9D"]
 62 [-]: MOVE      R25 R0       ; R25 := R0
 63 [-]: MOVE      R26 R23      ; R26 := R23
 64 [-]: CALL      R24 3 1      ; R24(R25,R26)
 65 [-]: FORLOOP   R14 24       ; R14 += R16; if R14 <= R15 then begin PC := 24; R17 := R14 end
 66 [-]: FORLOOP   R9 17        ; R9 += R11; if R9 <= R10 then begin PC := 17; R12 := R9 end
 67 [-]: FORLOOP   R3 10        ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
 68 [-]: RETURN    R0 2         ; return R0
 69 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 1551
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 1555
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: MOVE      R0 R1        ; R0 := R1
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 1563
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 1567
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPhotoBoothGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 17 [-]: GETGLOBAL R2 K4        ; R2 := gLotusGameRulesType
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: TEST      R0 1         ; if R0 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
 23 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 24 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 25 [-]: TEST      R0 0         ; if not R0 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: MOVE      R0 R0        ; R0 := R0
 30 [-]: RETURN    R0 2         ; return R0
 31 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 1579
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 1583
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 1587
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 1591
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["REGION_ID_DOJO"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["REGION_ID_DERELICT"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 1595
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 1599
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["REGION_ID_VOID"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
  4 [-]: JMP       21           ; PC := 21
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["REGION_ID_DERELICT"]
  7 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["REGION_ID_DOJO"]
 11 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["REGION_ID_DARK_SECTOR"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R1 K0        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["REGION_ID_DEEP_SPACE"]
 19 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R1 R0        ; R1 := R0
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 1603
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R3 1 2       ; R3 := R3()
  5 [-]: MOVE      R1 R3        ; R1 := R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 376
 10 [-]: JMP       376          ; PC := 376
 11 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 376
 12 [-]: JMP       376          ; PC := 376
 13 [-]: EQ        1 R0 K2      ; if R0 == "" then PC := 376
 14 [-]: JMP       376          ; PC := 376
 15 [-]: LOADK     R3 K3        ; R3 := 0
 16 [-]: LOADK     R4 K3        ; R4 := 0
 17 [-]: GETGLOBAL R5 K4        ; R5 := string
 18 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xDE44F664"]
 19 [-]: MOVE      R6 R0        ; R6 := R0
 20 [-]: GETGLOBAL R7 K6        ; R7 := KEY_TAG
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: EQ        1 R5 K1      ; if R5 == nil then PC := 60
 23 [-]: JMP       60           ; PC := 60
 24 [-]: GETGLOBAL R3 K7        ; R3 := KEY_FLAG
 25 [-]: GETGLOBAL R6 K8        ; R6 := _T
 26 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["gSelectedRegionId"]
 27 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R6 K8        ; R6 := _T
 30 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["gSelectedRegionId"]
 31 [-]: LT        0 K3 R6      ; if 0 >= R6 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: GETGLOBAL R6 K8        ; R6 := _T
 34 [-]: GETTABLE  R4 R6 K9     ; R4 := R6["gSelectedRegionId"]
 35 [-]: GETUPVAL  R6 U1        ; R6 := U1
 36 [-]: MOVE      R7 R4        ; R7 := R4
 37 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 38 [-]: TEST      R6 1         ; if R6 then PC := 60
 39 [-]: JMP       60           ; PC := 60
 40 [-]: GETGLOBAL R6 K10       ; R6 := 0x7C282057
 41 [-]: GETGLOBAL R7 K4        ; R7 := string
 42 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x7B782033"]
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: LOADK     R9 K12       ; R9 := 1
 45 [-]: SUB       R10 R5 K12   ; R10 := R5 - 1
 46 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 47 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 48 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
 49 [-]: MOVE      R8 R6        ; R8 := R6
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: TEST      R7 1         ; if R7 then PC := 60
 52 [-]: JMP       60           ; PC := 60
 53 [-]: GETGLOBAL R7 K13       ; R7 := 0x9FAED6BC
 54 [-]: SELF      R8 R6 K14    ; R9 := R6; R8 := R6["0x625DA4BB"]
 55 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 56 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 57 [-]: EQ        1 R7 K2      ; if R7 == "" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R0 R7        ; R0 := R7
 60 [-]: GETGLOBAL R8 K4        ; R8 := string
 61 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["0xDE44F664"]
 62 [-]: MOVE      R9 R0        ; R9 := R0
 63 [-]: GETGLOBAL R10 K15      ; R10 := ALERT_TAG
 64 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 65 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R9 K4        ; R9 := string
 68 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0x7B782033"]
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: LOADK     R11 K12      ; R11 := 1
 71 [-]: SUB       R12 R8 K12   ; R12 := R8 - 1
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: MOVE      R0 R9        ; R0 := R9
 74 [-]: GETGLOBAL R3 K16       ; R3 := ALERT_FLAG
 75 [-]: GETGLOBAL R9 K4        ; R9 := string
 76 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["0xDE44F664"]
 77 [-]: MOVE      R10 R0       ; R10 := R0
 78 [-]: GETGLOBAL R11 K17      ; R11 := NIGHTMARE_TAG
 79 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 80 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 90
 81 [-]: JMP       90           ; PC := 90
 82 [-]: GETGLOBAL R10 K4       ; R10 := string
 83 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0x7B782033"]
 84 [-]: MOVE      R11 R0       ; R11 := R0
 85 [-]: LOADK     R12 K12      ; R12 := 1
 86 [-]: SUB       R13 R9 K12   ; R13 := R9 - 1
 87 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 88 [-]: MOVE      R0 R10       ; R0 := R10
 89 [-]: GETGLOBAL R3 K18       ; R3 := NIGHTMARE_FLAG
 90 [-]: GETGLOBAL R10 K4       ; R10 := string
 91 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["0xDE44F664"]
 92 [-]: MOVE      R11 R0       ; R11 := R0
 93 [-]: GETGLOBAL R12 K19      ; R12 := EVENT_TAG
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETGLOBAL R11 K4       ; R11 := string
 98 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["0x7B782033"]
 99 [-]: MOVE      R12 R0       ; R12 := R0
100 [-]: LOADK     R13 K12      ; R13 := 1
101 [-]: SUB       R14 R10 K12  ; R14 := R10 - 1
102 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
103 [-]: MOVE      R0 R11       ; R0 := R11
104 [-]: GETGLOBAL R3 K20       ; R3 := EVENT_FLAG
105 [-]: GETGLOBAL R11 K4       ; R11 := string
106 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0xDE44F664"]
107 [-]: MOVE      R12 R0       ; R12 := R0
108 [-]: GETGLOBAL R13 K21      ; R13 := PVP_TAG
109 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
110 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 120
111 [-]: JMP       120          ; PC := 120
112 [-]: GETGLOBAL R12 K4       ; R12 := string
113 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0x7B782033"]
114 [-]: MOVE      R13 R0       ; R13 := R0
115 [-]: LOADK     R14 K12      ; R14 := 1
116 [-]: SUB       R15 R11 K12  ; R15 := R11 - 1
117 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
118 [-]: MOVE      R0 R12       ; R0 := R12
119 [-]: GETGLOBAL R3 K22       ; R3 := PVP_FLAG
120 [-]: GETGLOBAL R12 K4       ; R12 := string
121 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["0xDE44F664"]
122 [-]: MOVE      R13 R0       ; R13 := R0
123 [-]: GETGLOBAL R14 K23      ; R14 := INVASION_ATTACKER_TAG
124 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
125 [-]: EQ        1 R12 K1     ; if R12 == nil then PC := 135
126 [-]: JMP       135          ; PC := 135
127 [-]: GETGLOBAL R13 K4       ; R13 := string
128 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x7B782033"]
129 [-]: MOVE      R14 R0       ; R14 := R0
130 [-]: LOADK     R15 K12      ; R15 := 1
131 [-]: SUB       R16 R12 K12  ; R16 := R12 - 1
132 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
133 [-]: MOVE      R0 R13       ; R0 := R13
134 [-]: GETGLOBAL R3 K24       ; R3 := INVASION_ATTACKER_FLAG
135 [-]: GETGLOBAL R13 K4       ; R13 := string
136 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["0xDE44F664"]
137 [-]: MOVE      R14 R0       ; R14 := R0
138 [-]: GETGLOBAL R15 K25      ; R15 := INVASION_DEFENDER_TAG
139 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
140 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 150
141 [-]: JMP       150          ; PC := 150
142 [-]: GETGLOBAL R14 K4       ; R14 := string
143 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x7B782033"]
144 [-]: MOVE      R15 R0       ; R15 := R0
145 [-]: LOADK     R16 K12      ; R16 := 1
146 [-]: SUB       R17 R13 K12  ; R17 := R13 - 1
147 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
148 [-]: MOVE      R0 R14       ; R0 := R14
149 [-]: GETGLOBAL R3 K26       ; R3 := INVASION_DEFENDER_FLAG
150 [-]: GETGLOBAL R14 K4       ; R14 := string
151 [-]: GETTABLE  R14 R14 K5   ; R14 := R14["0xDE44F664"]
152 [-]: MOVE      R15 R0       ; R15 := R0
153 [-]: GETGLOBAL R16 K27      ; R16 := BADLAND_MISSION_TAG
154 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
155 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 165
156 [-]: JMP       165          ; PC := 165
157 [-]: GETGLOBAL R15 K4       ; R15 := string
158 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["0x7B782033"]
159 [-]: MOVE      R16 R0       ; R16 := R0
160 [-]: LOADK     R17 K12      ; R17 := 1
161 [-]: SUB       R18 R14 K12  ; R18 := R14 - 1
162 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
163 [-]: MOVE      R0 R15       ; R0 := R15
164 [-]: GETGLOBAL R3 K28       ; R3 := BADLAND_MISSION_FLAG
165 [-]: GETGLOBAL R15 K4       ; R15 := string
166 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["0xDE44F664"]
167 [-]: MOVE      R16 R0       ; R16 := R0
168 [-]: GETGLOBAL R17 K29      ; R17 := BADLAND_ATTACKER_TAG
169 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
170 [-]: EQ        1 R15 K1     ; if R15 == nil then PC := 180
171 [-]: JMP       180          ; PC := 180
172 [-]: GETGLOBAL R16 K4       ; R16 := string
173 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["0x7B782033"]
174 [-]: MOVE      R17 R0       ; R17 := R0
175 [-]: LOADK     R18 K12      ; R18 := 1
176 [-]: SUB       R19 R15 K12  ; R19 := R15 - 1
177 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
178 [-]: MOVE      R0 R16       ; R0 := R16
179 [-]: GETGLOBAL R3 K30       ; R3 := BADLAND_ATTACKER_FLAG
180 [-]: GETGLOBAL R16 K4       ; R16 := string
181 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["0xDE44F664"]
182 [-]: MOVE      R17 R0       ; R17 := R0
183 [-]: GETGLOBAL R18 K31      ; R18 := BADLAND_DEFENDER_TAG
184 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
185 [-]: EQ        1 R16 K1     ; if R16 == nil then PC := 195
186 [-]: JMP       195          ; PC := 195
187 [-]: GETGLOBAL R17 K4       ; R17 := string
188 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0x7B782033"]
189 [-]: MOVE      R18 R0       ; R18 := R0
190 [-]: LOADK     R19 K12      ; R19 := 1
191 [-]: SUB       R20 R16 K12  ; R20 := R16 - 1
192 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
193 [-]: MOVE      R0 R17       ; R0 := R17
194 [-]: GETGLOBAL R3 K32       ; R3 := BADLAND_DEFENDER_FLAG
195 [-]: GETGLOBAL R17 K4       ; R17 := string
196 [-]: GETTABLE  R17 R17 K5   ; R17 := R17["0xDE44F664"]
197 [-]: MOVE      R18 R0       ; R18 := R0
198 [-]: GETGLOBAL R19 K33      ; R19 := SYNDICATE_MISSION_TAG
199 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
200 [-]: EQ        1 R17 K1     ; if R17 == nil then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: GETGLOBAL R18 K4       ; R18 := string
203 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["0x7B782033"]
204 [-]: MOVE      R19 R0       ; R19 := R0
205 [-]: LOADK     R20 K12      ; R20 := 1
206 [-]: SUB       R21 R17 K12  ; R21 := R17 - 1
207 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
208 [-]: MOVE      R0 R18       ; R0 := R18
209 [-]: GETGLOBAL R3 K34       ; R3 := SYNDICATE_MISSION_FLAG
210 [-]: GETGLOBAL R18 K4       ; R18 := string
211 [-]: GETTABLE  R18 R18 K5   ; R18 := R18["0xDE44F664"]
212 [-]: MOVE      R19 R0       ; R19 := R0
213 [-]: GETGLOBAL R20 K35      ; R20 := SORTIE_MISSION_TAG
214 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
215 [-]: EQ        1 R18 K1     ; if R18 == nil then PC := 225
216 [-]: JMP       225          ; PC := 225
217 [-]: GETGLOBAL R19 K4       ; R19 := string
218 [-]: GETTABLE  R19 R19 K11  ; R19 := R19["0x7B782033"]
219 [-]: MOVE      R20 R0       ; R20 := R0
220 [-]: LOADK     R21 K12      ; R21 := 1
221 [-]: SUB       R22 R18 K12  ; R22 := R18 - 1
222 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
223 [-]: MOVE      R0 R19       ; R0 := R19
224 [-]: GETGLOBAL R3 K36       ; R3 := SORTIE_MISSION_FLAG
225 [-]: GETGLOBAL R19 K4       ; R19 := string
226 [-]: GETTABLE  R19 R19 K5   ; R19 := R19["0xDE44F664"]
227 [-]: MOVE      R20 R0       ; R20 := R0
228 [-]: GETGLOBAL R21 K37      ; R21 := HUB_TAG
229 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
230 [-]: EQ        1 R19 K1     ; if R19 == nil then PC := 240
231 [-]: JMP       240          ; PC := 240
232 [-]: GETGLOBAL R20 K4       ; R20 := string
233 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["0x7B782033"]
234 [-]: MOVE      R21 R0       ; R21 := R0
235 [-]: LOADK     R22 K12      ; R22 := 1
236 [-]: SUB       R23 R19 K12  ; R23 := R19 - 1
237 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
238 [-]: MOVE      R0 R20       ; R0 := R20
239 [-]: GETGLOBAL R3 K38       ; R3 := HUB_FLAG
240 [-]: GETGLOBAL R20 K4       ; R20 := string
241 [-]: GETTABLE  R20 R20 K5   ; R20 := R20["0xDE44F664"]
242 [-]: MOVE      R21 R0       ; R21 := R0
243 [-]: GETGLOBAL R22 K39      ; R22 := ACTIVE_MISSION_TAG
244 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
245 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 255
246 [-]: JMP       255          ; PC := 255
247 [-]: GETGLOBAL R21 K4       ; R21 := string
248 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["0x7B782033"]
249 [-]: MOVE      R22 R0       ; R22 := R0
250 [-]: LOADK     R23 K12      ; R23 := 1
251 [-]: SUB       R24 R20 K12  ; R24 := R20 - 1
252 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
253 [-]: MOVE      R0 R21       ; R0 := R21
254 [-]: GETGLOBAL R3 K40       ; R3 := ACTIVE_MISSION_FLAG
255 [-]: GETGLOBAL R21 K4       ; R21 := string
256 [-]: GETTABLE  R21 R21 K5   ; R21 := R21["0xDE44F664"]
257 [-]: MOVE      R22 R0       ; R22 := R0
258 [-]: GETGLOBAL R23 K41      ; R23 := KUVA_TOWER_MISSION_TAG
259 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
260 [-]: EQ        1 R21 K1     ; if R21 == nil then PC := 270
261 [-]: JMP       270          ; PC := 270
262 [-]: GETGLOBAL R22 K4       ; R22 := string
263 [-]: GETTABLE  R22 R22 K11  ; R22 := R22["0x7B782033"]
264 [-]: MOVE      R23 R0       ; R23 := R0
265 [-]: LOADK     R24 K12      ; R24 := 1
266 [-]: SUB       R25 R21 K12  ; R25 := R21 - 1
267 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
268 [-]: MOVE      R0 R22       ; R0 := R22
269 [-]: GETGLOBAL R3 K42       ; R3 := KUVA_TOWER_MISSION_FLAG
270 [-]: GETGLOBAL R22 K4       ; R22 := string
271 [-]: GETTABLE  R22 R22 K5   ; R22 := R22["0xDE44F664"]
272 [-]: MOVE      R23 R0       ; R23 := R0
273 [-]: GETGLOBAL R24 K43      ; R24 := NEMESIS_MISSION_TAG
274 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
275 [-]: EQ        1 R22 K1     ; if R22 == nil then PC := 285
276 [-]: JMP       285          ; PC := 285
277 [-]: GETGLOBAL R23 K4       ; R23 := string
278 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["0x7B782033"]
279 [-]: MOVE      R24 R0       ; R24 := R0
280 [-]: LOADK     R25 K12      ; R25 := 1
281 [-]: SUB       R26 R22 K12  ; R26 := R22 - 1
282 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
283 [-]: MOVE      R0 R23       ; R0 := R23
284 [-]: GETGLOBAL R3 K44       ; R3 := NEMESIS_MISSION_FLAG
285 [-]: GETGLOBAL R23 K4       ; R23 := string
286 [-]: GETTABLE  R23 R23 K5   ; R23 := R23["0xDE44F664"]
287 [-]: MOVE      R24 R0       ; R24 := R0
288 [-]: GETGLOBAL R25 K45      ; R25 := ELITE_ALERT_TAG
289 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
290 [-]: EQ        1 R23 K1     ; if R23 == nil then PC := 300
291 [-]: JMP       300          ; PC := 300
292 [-]: GETGLOBAL R24 K4       ; R24 := string
293 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["0x7B782033"]
294 [-]: MOVE      R25 R0       ; R25 := R0
295 [-]: LOADK     R26 K12      ; R26 := 1
296 [-]: SUB       R27 R23 K12  ; R27 := R23 - 1
297 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
298 [-]: MOVE      R0 R24       ; R0 := R24
299 [-]: GETGLOBAL R3 K46       ; R3 := ELITE_ALERT_FLAG
300 [-]: GETGLOBAL R24 K4       ; R24 := string
301 [-]: GETTABLE  R24 R24 K5   ; R24 := R24["0xDE44F664"]
302 [-]: GETGLOBAL R25 K4       ; R25 := string
303 [-]: GETTABLE  R25 R25 K47  ; R25 := R25["0xBDD0D625"]
304 [-]: MOVE      R26 R0       ; R26 := R0
305 [-]: CALL      R25 2 2      ; R25 := R25(R26)
306 [-]: LOADK     R26 K48      ; R26 := "junction"
307 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
308 [-]: EQ        1 R24 K1     ; if R24 == nil then PC := 318
309 [-]: JMP       318          ; PC := 318
310 [-]: GETGLOBAL R25 K4       ; R25 := string
311 [-]: GETTABLE  R25 R25 K11  ; R25 := R25["0x7B782033"]
312 [-]: MOVE      R26 R0       ; R26 := R0
313 [-]: LOADK     R27 K12      ; R27 := 1
314 [-]: SUB       R28 R24 K12  ; R28 := R24 - 1
315 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
316 [-]: MOVE      R0 R25       ; R0 := R25
317 [-]: GETGLOBAL R3 K49       ; R3 := JUNCTION_FLAG
318 [-]: GETGLOBAL R25 K0       ; R25 := 0x400E7765
319 [-]: MOVE      R26 R2       ; R26 := R2
320 [-]: CALL      R25 2 2      ; R25 := R25(R26)
321 [-]: TEST      R25 0        ; if not R25 then PC := 329
322 [-]: JMP       329          ; PC := 329
323 [-]: SELF      R25 R1 K50   ; R26 := R1; R25 := R1["0xDF213CE1"]
324 [-]: GETGLOBAL R27 K51      ; R27 := 0xEC274B1A
325 [-]: MOVE      R28 R0       ; R28 := R0
326 [-]: CALL      R27 2 0      ; R27,... := R27(R28)
327 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
328 [-]: MOVE      R2 R25       ; R2 := R25
329 [-]: GETGLOBAL R25 K0       ; R25 := 0x400E7765
330 [-]: MOVE      R26 R2       ; R26 := R2
331 [-]: CALL      R25 2 2      ; R25 := R25(R26)
332 [-]: TEST      R25 1        ; if R25 then PC := 376
333 [-]: JMP       376          ; PC := 376
334 [-]: GETUPVAL  R25 U2       ; R25 := U2
335 [-]: GETTABLE  R25 R25 K52  ; R25 := R25["0xF81722A2"]
336 [-]: LT        1 K3 R4      ; if 0 < R4 then PC := 339
337 [-]: JMP       339          ; PC := 339
338 [-]: MOVE      R26 R0       ; R26 := R0
339 [-]: MOVE      R26 R1       ; R26 := R1
340 [-]: MOVE      R27 R4       ; R27 := R4
341 [-]: GETTABLE  R28 R2 K53   ; R28 := R2["region"]
342 [-]: ADD       R28 R28 K12  ; R28 := R28 + 1
343 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
344 [-]: GETUPVAL  R26 U3       ; R26 := U3
345 [-]: MUL       R25 R25 R26  ; R25 := R25 * R26
346 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 376
347 [-]: JMP       376          ; PC := 376
348 [-]: LOADK     R26 K3       ; R26 := 0
349 [-]: LOADK     R27 K12      ; R27 := 1
350 [-]: GETGLOBAL R28 K4       ; R28 := string
351 [-]: GETTABLE  R28 R28 K54  ; R28 := R28["0xC6772A8A"]
352 [-]: MOVE      R29 R0       ; R29 := R0
353 [-]: CALL      R28 2 2      ; R28 := R28(R29)
354 [-]: LOADK     R29 K12      ; R29 := 1
355 [-]: LOADK     R30 K55      ; R30 := -1
356 [-]: FORPREP   R28 372      ; R28 -= R30; PC := 372
357 [-]: GETGLOBAL R32 K56      ; R32 := 0xF595ADDE
358 [-]: GETGLOBAL R33 K4       ; R33 := string
359 [-]: GETTABLE  R33 R33 K11  ; R33 := R33["0x7B782033"]
360 [-]: MOVE      R34 R0       ; R34 := R0
361 [-]: MOVE      R35 R31      ; R35 := R31
362 [-]: MOVE      R36 R31      ; R36 := R31
363 [-]: CALL      R33 4 0      ; R33,... := R33(R34,R35,R36)
364 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
365 [-]: EQ        1 R32 K1     ; if R32 == nil then PC := 373
366 [-]: JMP       373          ; PC := 373
367 [-]: MUL       R33 R32 R27  ; R33 := R32 * R27
368 [-]: ADD       R26 R26 R33  ; R26 := R26 + R33
369 [-]: MUL       R27 R27 K57  ; R27 := R27 * 10
370 [-]: JMP       372          ; PC := 372
371 [-]: JMP       373          ; PC := 373
372 [-]: FORLOOP   R28 357      ; R28 += R30; if R28 <= R29 then begin PC := 357; R31 := R28 end
373 [-]: ADD       R33 R25 R26  ; R33 := R25 + R26
374 [-]: ADD       R33 R33 R3   ; R33 := R33 + R3
375 [-]: RETURN    R33 2        ; return R33
376 [-]: GETGLOBAL R33 K8       ; R33 := _T
377 [-]: GETTABLE  R33 R33 K9   ; R33 := R33["gSelectedRegionId"]
378 [-]: LE        0 R33 K3     ; if R33 > 0 then PC := 381
379 [-]: JMP       381          ; PC := 381
380 [-]: LOADK     R33 K12      ; R33 := 1
381 [-]: GETUPVAL  R34 U3       ; R34 := U3
382 [-]: MUL       R34 R33 R34  ; R34 := R33 * R34
383 [-]: RETURN    R34 2        ; return R34
384 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 1775
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_SIMULACRUM
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 1779
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_SIMULACRUM
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R1 R0        ; R1 := R0
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 1783
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_PHOTOBOOTH
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 1787
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_PHOTOBOOTH
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R1 R0        ; R1 := R0
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 1791
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := REGION_ID_PVP
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
  7 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 1796
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_CLAN_DOJO
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 1800
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_CLAN_DOJO
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 1804
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_DOJO_DUEL
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 1808
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_DOJO_DUEL
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R1 R0        ; R1 := R0
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 1812
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ALERT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 1816
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 1820
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := NIGHTMARE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 1824
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 1828
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := EVENT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 1832
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 1836
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 1840
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_DEFENDER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 1844
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := PVP_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: MOVE      R1 R1        ; R1 := R1
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 1848
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 1852
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 31
 13 [-]: JMP       31           ; PC := 31
 14 [-]: GETGLOBAL R2 K0        ; R2 := math
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
 16 [-]: GETGLOBAL R3 K3        ; R3 := BADLAND_ATTACKER_FLAG
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R2 K0        ; R2 := math
 23 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
 24 [-]: GETGLOBAL R3 K4        ; R3 := BADLAND_DEFENDER_FLAG
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: MOVE      R2 R1        ; R2 := R1
 32 [-]: RETURN    R2 2         ; return R2
 33 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 1862
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 1867
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_DEFENDER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 1872
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 1877
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 1881
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SYNDICATE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 1886
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 1890
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SORTIE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 1895
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 1899
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R2 K0        ; R2 := math
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
 16 [-]: GETGLOBAL R3 K3        ; R3 := BADLAND_DEFENDER_FLAG
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: MOVE      R2 R1        ; R2 := R1
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 1908
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 1912
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := BADLAND_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R2 K2        ; R2 := BADLAND_ATTACKER_FLAG
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R2 K3        ; R2 := BADLAND_DEFENDER_FLAG
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 1921
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HUB_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 1926
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 1930
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ACTIVE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 1935
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := KUVA_TOWER_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 1940
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xF7005A7B"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := JUNCTION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 1945
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 1949
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 1953
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x7B782033"]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: LOADK     R4 K4        ; R4 := -3
  8 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  9 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 10 [-]: RETURN    R1 0         ; return R1,...
 11 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 1957
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R1 K0        ; R1 := math
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
  9 [-]: GETGLOBAL R3 K3        ; R3 := string
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 11 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: LOADK     R5 K6        ; R5 := -3
 15 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: LOADK     R3 K7        ; R3 := "PvpNode"
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 25 [-]: RETURN    R3 2         ; return R3
 26 [-]: JMP       185          ; PC := 185
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 0         ; if not R3 then PC := 73
 31 [-]: JMP       73           ; PC := 73
 32 [-]: GETGLOBAL R3 K8        ; R3 := _G
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CachedGoalInfo"]
 34 [-]: TEST      R3 0         ; if not R3 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETGLOBAL R3 K8        ; R3 := _G
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["CachedGoalInfo"]
 38 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 39 [-]: MOVE      R5 R2        ; R5 := R2
 40 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 41 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 42 [-]: TEST      R3 1         ; if R3 then PC := 68
 43 [-]: JMP       68           ; PC := 68
 44 [-]: GETGLOBAL R3 K8        ; R3 := _G
 45 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MergedGoalNodes"]
 46 [-]: TEST      R3 0         ; if not R3 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETGLOBAL R3 K8        ; R3 := _G
 49 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MergedGoalNodes"]
 50 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: TEST      R3 1         ; if R3 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R3 K12       ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["LockedGoalList"]
 58 [-]: TEST      R3 0         ; if not R3 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: GETGLOBAL R3 K12       ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["LockedGoalList"]
 62 [-]: LOADK     R4 K10       ; R4 := "EventNode"
 63 [-]: MOVE      R5 R2        ; R5 := R2
 64 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 65 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 66 [-]: TEST      R3 0         ; if not R3 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: LOADK     R3 K10       ; R3 := "EventNode"
 69 [-]: MOVE      R4 R2        ; R4 := R2
 70 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 71 [-]: RETURN    R3 2         ; return R3
 72 [-]: JMP       185          ; PC := 185
 73 [-]: GETUPVAL  R3 U4        ; R3 := U4
 74 [-]: MOVE      R4 R0        ; R4 := R0
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 0         ; if not R3 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: LOADK     R3 K14       ; R3 := "ClanNode"
 79 [-]: MOVE      R4 R2        ; R4 := R2
 80 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 81 [-]: RETURN    R3 2         ; return R3
 82 [-]: JMP       185          ; PC := 185
 83 [-]: GETUPVAL  R3 U5        ; R3 := U5
 84 [-]: MOVE      R4 R0        ; R4 := R0
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: TEST      R3 0         ; if not R3 then PC := 93
 87 [-]: JMP       93           ; PC := 93
 88 [-]: LOADK     R3 K15       ; R3 := "SyndicateNode"
 89 [-]: MOVE      R4 R2        ; R4 := R2
 90 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 91 [-]: RETURN    R3 2         ; return R3
 92 [-]: JMP       185          ; PC := 185
 93 [-]: GETUPVAL  R3 U6        ; R3 := U6
 94 [-]: MOVE      R4 R0        ; R4 := R0
 95 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 96 [-]: TEST      R3 0         ; if not R3 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: LOADK     R3 K16       ; R3 := "SortieNode"
 99 [-]: MOVE      R4 R2        ; R4 := R2
100 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
101 [-]: RETURN    R3 2         ; return R3
102 [-]: JMP       185          ; PC := 185
103 [-]: GETUPVAL  R3 U7        ; R3 := U7
104 [-]: MOVE      R4 R0        ; R4 := R0
105 [-]: CALL      R3 2 2       ; R3 := R3(R4)
106 [-]: TEST      R3 0         ; if not R3 then PC := 169
107 [-]: JMP       169          ; PC := 169
108 [-]: NEWTABLE  R3 14 0      ; R3 := {}
109 [-]: LOADK     R4 K17       ; R4 := "MercuryHUB"
110 [-]: LOADK     R5 K18       ; R5 := "VenusHUB"
111 [-]: LOADK     R6 K19       ; R6 := "EarthHUB"
112 [-]: LOADK     R7 K20       ; R7 := "TradeHUB1"
113 [-]: LOADK     R8 K21       ; R8 := "JupiterHUB"
114 [-]: LOADK     R9 K22       ; R9 := "SaturnHUB"
115 [-]: LOADK     R10 K23      ; R10 := "UranusHUB"
116 [-]: LOADK     R11 K24      ; R11 := "NeptuneHUB"
117 [-]: LOADK     R12 K25      ; R12 := "PlutoHUB"
118 [-]: LOADK     R13 K26      ; R13 := "CeresHUB"
119 [-]: LOADK     R14 K27      ; R14 := "ErisHUB"
120 [-]: LOADK     R15 K28      ; R15 := "SednaHUB"
121 [-]: LOADK     R16 K29      ; R16 := "EuropaHUB"
122 [-]: LOADK     R17 K30      ; R17 := "PhobosHUB"
123 [-]: SETLIST   R3 14 1      ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 14
124 [-]: GETGLOBAL R4 K31       ; R4 := 0x6374FD98
125 [-]: MOVE      R5 R1        ; R5 := R1
126 [-]: LOADK     R6 K32       ; R6 := 1
127 [-]: LEN       R7 R3        ; R7 := # R3
128 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
129 [-]: MOVE      R1 R4        ; R1 := R4
130 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 138
131 [-]: JMP       138          ; PC := 138
132 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
133 [-]: EQ        0 R4 K35     ; if R4 ~= 2 then PC := 138
134 [-]: JMP       138          ; PC := 138
135 [-]: LOADK     R4 K36       ; R4 := "TennoConHUB2"
136 [-]: RETURN    R4 2         ; return R4
137 [-]: JMP       185          ; PC := 185
138 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 146
139 [-]: JMP       146          ; PC := 146
140 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
141 [-]: EQ        0 R4 K33     ; if R4 ~= 3 then PC := 146
142 [-]: JMP       146          ; PC := 146
143 [-]: LOADK     R4 K37       ; R4 := "IronwakeHUB3"
144 [-]: RETURN    R4 2         ; return R4
145 [-]: JMP       185          ; PC := 185
146 [-]: EQ        0 R1 K33     ; if R1 ~= 3 then PC := 156
147 [-]: JMP       156          ; PC := 156
148 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
149 [-]: EQ        0 R4 K38     ; if R4 ~= 4 then PC := 156
150 [-]: JMP       156          ; PC := 156
151 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
152 [-]: GETGLOBAL R5 K39       ; R5 := CETUS_NODE_TAG
153 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
154 [-]: RETURN    R4 0         ; return R4,...
155 [-]: JMP       185          ; PC := 185
156 [-]: EQ        0 R1 K35     ; if R1 ~= 2 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: MOD       R4 R0 K34    ; R4 := R0 % 10
159 [-]: EQ        0 R4 K32     ; if R4 ~= 1 then PC := 166
160 [-]: JMP       166          ; PC := 166
161 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
162 [-]: GETGLOBAL R5 K40       ; R5 := FORTUNA_NODE_TAG
163 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
164 [-]: RETURN    R4 0         ; return R4,...
165 [-]: JMP       185          ; PC := 185
166 [-]: GETTABLE  R4 R3 R1     ; R4 := R3[R1]
167 [-]: RETURN    R4 2         ; return R4
168 [-]: JMP       185          ; PC := 185
169 [-]: EQ        0 R1 K41     ; if R1 ~= 16 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: LOADK     R4 K42       ; R4 := "SettlementNode"
172 [-]: MOVE      R5 R2        ; R5 := R2
173 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
174 [-]: RETURN    R4 2         ; return R4
175 [-]: JMP       185          ; PC := 185
176 [-]: LT        0 K43 R2     ; if 0 >= R2 then PC := 183
177 [-]: JMP       183          ; PC := 183
178 [-]: LOADK     R4 K44       ; R4 := "SolNode"
179 [-]: MOVE      R5 R2        ; R5 := R2
180 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
181 [-]: RETURN    R4 2         ; return R4
182 [-]: JMP       185          ; PC := 185
183 [-]: LOADNIL   R4 R4        ; R4 := nil
184 [-]: RETURN    R4 2         ; return R4
185 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 1997
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 2001
; #Upvalues:       12
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K0        ; R1 := ALERT_TAG
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: JMP       96           ; PC := 96
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K1        ; R1 := EVENT_TAG
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       96           ; PC := 96
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETGLOBAL R1 K2        ; R1 := INVASION_ATTACKER_TAG
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       96           ; PC := 96
 25 [-]: GETUPVAL  R1 U3        ; R1 := U3
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETGLOBAL R1 K3        ; R1 := INVASION_DEFENDER_TAG
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: JMP       96           ; PC := 96
 33 [-]: GETUPVAL  R1 U4        ; R1 := U4
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: TEST      R1 0         ; if not R1 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETGLOBAL R1 K4        ; R1 := SYNDICATE_MISSION_TAG
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: JMP       96           ; PC := 96
 41 [-]: GETUPVAL  R1 U5        ; R1 := U5
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 0         ; if not R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R1 K5        ; R1 := SORTIE_MISSION_TAG
 47 [-]: RETURN    R1 2         ; return R1
 48 [-]: JMP       96           ; PC := 96
 49 [-]: GETUPVAL  R1 U6        ; R1 := U6
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 0         ; if not R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETGLOBAL R1 K6        ; R1 := HUB_TAG
 55 [-]: RETURN    R1 2         ; return R1
 56 [-]: JMP       96           ; PC := 96
 57 [-]: GETUPVAL  R1 U7        ; R1 := U7
 58 [-]: MOVE      R2 R0        ; R2 := R0
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: TEST      R1 0         ; if not R1 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETGLOBAL R1 K7        ; R1 := BADLAND_ATTACKER_TAG
 63 [-]: RETURN    R1 2         ; return R1
 64 [-]: JMP       96           ; PC := 96
 65 [-]: GETUPVAL  R1 U8        ; R1 := U8
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 68 [-]: TEST      R1 0         ; if not R1 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETGLOBAL R1 K8        ; R1 := BADLAND_DEFENDER_TAG
 71 [-]: RETURN    R1 2         ; return R1
 72 [-]: JMP       96           ; PC := 96
 73 [-]: GETUPVAL  R1 U9        ; R1 := U9
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: TEST      R1 0         ; if not R1 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R1 K9        ; R1 := BADLAND_MISSION_TAG
 79 [-]: RETURN    R1 2         ; return R1
 80 [-]: JMP       96           ; PC := 96
 81 [-]: GETUPVAL  R1 U10       ; R1 := U10
 82 [-]: MOVE      R2 R0        ; R2 := R0
 83 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 84 [-]: TEST      R1 0         ; if not R1 then PC := 89
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETGLOBAL R1 K10       ; R1 := ACTIVE_MISSION_TAG
 87 [-]: RETURN    R1 2         ; return R1
 88 [-]: JMP       96           ; PC := 96
 89 [-]: GETUPVAL  R1 U11       ; R1 := U11
 90 [-]: MOVE      R2 R0        ; R2 := R0
 91 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 92 [-]: TEST      R1 0         ; if not R1 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: GETGLOBAL R1 K11       ; R1 := KUVA_TOWER_MISSION_TAG
 95 [-]: RETURN    R1 2         ; return R1
 96 [-]: LOADK     R1 K12       ; R1 := ""
 97 [-]: RETURN    R1 2         ; return R1
 98 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 2031
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADNIL   R3 R3        ; R3 := nil
  7 [-]: TEST      R2 0         ; if not R2 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1["0x4B93F65B"]
 10 [-]: GETGLOBAL R6 K1        ; R6 := 0xEC274B1A
 11 [-]: MOVE      R7 R2        ; R7 := R2
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K3     ; R5 := R3["gameRules"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["gameRules"]
 26 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x8B598ED4"]
 27 [-]: GETUPVAL  R6 U2        ; R6 := U2
 28 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: GETGLOBAL R5 K5        ; R5 := _T
 33 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["CachedPvpNodes"]
 34 [-]: SETTABLE  R5 R0 R4     ; R5[R0] := R4
 35 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 2043
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: SETTABLE  R1 K1 R2     ; R1["CachedPvpNodes"] := R2
  8 [-]: GETGLOBAL R1 K0        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 10 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 11 [-]: TEST      R1 1         ; if R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K0        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 18 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 2056
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 2060
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 40
 10 [-]: JMP       40           ; PC := 40
 11 [-]: GETGLOBAL R1 K0        ; R1 := math
 12 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF7005A7B"]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0xF595ADDE
 19 [-]: GETGLOBAL R3 K3        ; R3 := string
 20 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x7B782033"]
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x9FAED6BC
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADK     R5 K6        ; R5 := -3
 25 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 26 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xF81722A2"]
 29 [-]: EQ        1 R1 K8      ; if R1 == 16 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: LOADK     R5 K9        ; R5 := "SettlementNode"
 34 [-]: LOADK     R6 K10       ; R6 := "SolNode"
 35 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 36 [-]: MOVE      R4 R2        ; R4 := R2
 37 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 38 [-]: RETURN    R3 2         ; return R3
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETUPVAL  R3 U5        ; R3 := U5
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 2070
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  3 [-]: LOADK     R3 K2        ; R3 := 0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1["0x654F1092"]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0x2D0B8A86"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K5        ; R4 := string
 10 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xDE44F664"]
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: GETGLOBAL R6 K7        ; R6 := ALERT_TAG
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: EQ        1 R4 K8      ; if R4 == nil then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R5 K5        ; R5 := string
 17 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0x7B782033"]
 18 [-]: MOVE      R6 R0        ; R6 := R0
 19 [-]: LOADK     R7 K10       ; R7 := 1
 20 [-]: SUB       R8 R4 K10    ; R8 := R4 - 1
 21 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 22 [-]: MOVE      R0 R5        ; R0 := R5
 23 [-]: GETTABLE  R5 R3 K11    ; R5 := R3["mAlerts"]
 24 [-]: LOADK     R6 K10       ; R6 := 1
 25 [-]: LEN       R7 R5        ; R7 := # R5
 26 [-]: LOADK     R8 K10       ; R8 := 1
 27 [-]: FORPREP   R6 38        ; R6 -= R8; PC := 38
 28 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 29 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["mMissionInfo"]
 30 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["location"]
 31 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0x5EC7A3D2"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: EQ        0 R10 R0     ; if R10 ~= R0 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 36 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["mExpiry"]
 37 [-]: RETURN    R10 2        ; return R10
 38 [-]: FORLOOP   R6 28        ; R6 += R8; if R6 <= R7 then begin PC := 28; R9 := R6 end
 39 [-]: LOADNIL   R10 R10      ; R10 := nil
 40 [-]: RETURN    R10 2        ; return R10
 41 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 2090
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R3 R0        ; R3 := R0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: RETURN    R3 2         ; return R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := _T
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
  8 [-]: TEST      R3 0         ; if not R3 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R3 K0        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 12 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R3 K0        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 17 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 18 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["goal"]
 19 [-]: EQ        0 R3 K3      ; if R3 ~= "0x1" then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: CALL      R3 1 2       ; R3 := R3()
 30 [-]: MOVE      R0 R3        ; R0 := R3
 31 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 0         ; if not R3 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R3 R0        ; R3 := R0
 37 [-]: RETURN    R3 2         ; return R3
 38 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x5B0E7439"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 41 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 42 [-]: MOVE      R5 R3        ; R5 := R3
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 56
 45 [-]: JMP       56           ; PC := 56
 46 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0x80A80EEB"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 49 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["RadialRegion_RCS_LOCKED"]
 50 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x79FEB0D"]
 53 [-]: MOVE      R6 R2        ; R6 := R2
 54 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 55 [-]: JMP       58           ; PC := 58
 56 [-]: MOVE      R4 R0        ; R4 := R0
 57 [-]: MOVE      R4 R1        ; R4 := R1
 58 [-]: RETURN    R4 2         ; return R4
 59 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 2112
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x616DD092"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xBCEEAD81"]
  5 [-]: CALL      R2 1 0       ; R2,... := R2()
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x458F27A9"]
 13 [-]: LOADK     R3 K5        ; R3 := "IsMaximized"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
 16 [-]: RETURN    R1 0         ; return R1,...
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 2122
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0xEB3F45BE"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["gameModeId"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 47
 14 [-]: JMP       47           ; PC := 47
 15 [-]: LOADK     R2 K3        ; R2 := ""
 16 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1["0x3F0F411C"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: LEN       R4 R3        ; R4 := # R3
 24 [-]: LE        0 R4 K5      ; if R4 > 0 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: RETURN    R4 2         ; return R4
 28 [-]: GETTABLE  R2 R3 K6     ; R2 := R3[1]
 29 [-]: GETGLOBAL R4 K7        ; R4 := string
 30 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xC6772A8A"]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: LT        0 K5 R4      ; if 0 >= R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0x41AF6EE8
 36 [-]: CALL      R4 1 2       ; R4 := R4()
 37 [-]: SETTABLE  R4 K10 R2    ; R4["sec"] := R2
 38 [-]: GETGLOBAL R5 K11       ; R5 := Engine
 39 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["0xD09D7910"]
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: LE        1 R5 K5      ; if R5 <= 0 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R6 R0        ; R6 := R0
 45 [-]: MOVE      R6 R1        ; R6 := R1
 46 [-]: RETURN    R6 2         ; return R6
 47 [-]: MOVE      R6 R0        ; R6 := R0
 48 [-]: RETURN    R6 2         ; return R6
 49 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 2150
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  3 [-]: LOADK     R3 K2        ; R3 := 0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 0         ; if not R2 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x38DEBF71"]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K6        ; R4 := 0xEC274B1A
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: LOADK     R5 K7        ; R5 := 1
 27 [-]: LEN       R6 R3        ; R6 := # R3
 28 [-]: LOADK     R7 K7        ; R7 := 1
 29 [-]: FORPREP   R5 36        ; R5 -= R7; PC := 36
 30 [-]: GETTABLE  R9 R3 R8     ; R9 := R3[R8]
 31 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["node"]
 32 [-]: EQ        0 R9 R4      ; if R9 ~= R4 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: MOVE      R9 R0        ; R9 := R0
 35 [-]: RETURN    R9 2         ; return R9
 36 [-]: FORLOOP   R5 30        ; R5 += R7; if R5 <= R6 then begin PC := 30; R8 := R5 end
 37 [-]: SELF      R9 R2 K9     ; R10 := R2; R9 := R2["0xDFE95148"]
 38 [-]: MOVE      R11 R4       ; R11 := R4
 39 [-]: CALL      R9 3 1       ; R9(R10,R11)
 40 [-]: GETGLOBAL R9 K0        ; R9 := gPlayerProfileMgr
 41 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9["0xDB37C67"]
 42 [-]: LOADK     R11 K2       ; R11 := 0
 43 [-]: CALL      R9 3 1       ; R9(R10,R11)
 44 [-]: MOVE      R9 R1        ; R9 := R1
 45 [-]: RETURN    R9 2         ; return R9
 46 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 2174
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["QueuedTransmissions"]
  9 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETGLOBAL R1 K1        ; R1 := _T
 12 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 13 [-]: SETTABLE  R1 K2 R2     ; R1["QueuedTransmissions"] := R2
 14 [-]: GETGLOBAL R1 K4        ; R1 := table
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xE6450C9D"]
 16 [-]: GETGLOBAL R2 K1        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["QueuedTransmissions"]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x616DD092"]
 22 [-]: GETGLOBAL R3 K8        ; R3 := _G
 23 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["UIMovie_TransmissionMovie"]
 24 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 25 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 0         ; if not R2 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 31 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x24FF386"]
 32 [-]: GETGLOBAL R4 K8        ; R4 := _G
 33 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R1 R2        ; R1 := R2
 36 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 2191
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 2195
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xCC01AE7A"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 2202
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K0        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 25
 10 [-]: JMP       25           ; PC := 25
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0xB8F6F4F3"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K6        ; R4 := gGameConfig
 21 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x92A7D29D"]
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 24 [-]: MOVE      R0 R4        ; R0 := R4
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 2217
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HasCompletedVorsPrize"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0x2C00D429
  8 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x2C00D429
 11 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 14 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 53
 17 [-]: JMP       53           ; PC := 53
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 19 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 21 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 22 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 23 [-]: TEST      R2 1         ; if R2 then PC := 53
 24 [-]: JMP       53           ; PC := 53
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0xECFDD17
 26 [-]: GETGLOBAL R3 K6        ; R3 := gGameData
 27 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x70666039"]
 30 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 31 [-]: CALL      R2 0 4       ; R2,R3,R4 := R2(R3,...)
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 34 [-]: MOVE      R8 R6        ; R8 := R6
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: TEST      R7 1         ; if R7 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: GETTABLE  R7 R6 K10    ; R7 := R6["mItemType"]
 39 [-]: EQ        1 R7 R1      ; if R7 == R1 then PC := 47
 40 [-]: JMP       47           ; PC := 47
 41 [-]: GETTABLE  R7 R6 K10    ; R7 := R6["mItemType"]
 42 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETTABLE  R7 R6 K11    ; R7 := R6["mCompleted"]
 45 [-]: TEST      R7 0         ; if not R7 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: GETGLOBAL R7 K0        ; R7 := _T
 48 [-]: SETTABLE  R7 K1 K12    ; R7["HasCompletedVorsPrize"] := "0x1"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: RETURN    R7 2         ; return R7
 51 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 33; R4 := R5 end
 52 [-]: JMP       33           ; PC := 33
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: RETURN    R7 2         ; return R7
 55 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 2238
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 2242
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x2C00D429
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R2 1 2       ; R2 := R2()
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETGLOBAL R2 K2        ; R2 := gPlayerProfileMgr
 10 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 11 [-]: LOADK     R4 K4        ; R4 := 0
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 51
 17 [-]: JMP       51           ; PC := 51
 18 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x654F1092"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 51
 24 [-]: JMP       51           ; PC := 51
 25 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3["0x6F2E05FD"]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: TEST      R5 1         ; if R5 then PC := 51
 31 [-]: JMP       51           ; PC := 51
 32 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4["0x70666039"]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: LOADK     R6 K9        ; R6 := 1
 35 [-]: LEN       R7 R5        ; R7 := # R5
 36 [-]: LOADK     R8 K9        ; R8 := 1
 37 [-]: FORPREP   R6 50        ; R6 -= R8; PC := 50
 38 [-]: GETGLOBAL R10 K5       ; R10 := 0x400E7765
 39 [-]: GETTABLE  R11 R5 R9    ; R11 := R5[R9]
 40 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 41 [-]: TEST      R10 1        ; if R10 then PC := 50
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 44 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mItemType"]
 45 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 48 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCompleted"]
 49 [-]: RETURN    R10 2        ; return R10
 50 [-]: FORLOOP   R6 38        ; R6 += R8; if R6 <= R7 then begin PC := 38; R9 := R6 end
 51 [-]: MOVE      R10 R0       ; R10 := R0
 52 [-]: RETURN    R10 2        ; return R10
 53 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 2268
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 2272
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x654F1092"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xC92135A6"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: GETGLOBAL R3 K5        ; R3 := 0xECFDD17
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mTag"]
 16 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0x315E860F"]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: TEST      R8 0         ; if not R8 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETGLOBAL R8 K8        ; R8 := 0x9FAED6BC
 21 [-]: GETTABLE  R9 R7 K6     ; R9 := R7["mTag"]
 22 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 23 [-]: SETTABLE  R1 R8 K9     ; R1[R8] := "0x1"
 24 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
 25 [-]: JMP       15           ; PC := 15
 26 [-]: GETUPVAL  R8 U0        ; R8 := U0
 27 [-]: CALL      R8 1 2       ; R8 := R8()
 28 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0x7E6E6726"]
 29 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 30 [-]: LOADK     R10 K2       ; R10 := 0
 31 [-]: LOADK     R11 K2       ; R11 := 0
 32 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 33 [-]: GETGLOBAL R13 K5       ; R13 := 0xECFDD17
 34 [-]: MOVE      R14 R9       ; R14 := R9
 35 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 36 [-]: JMP       93           ; PC := 93
 37 [-]: GETTABLE  R18 R17 K11  ; R18 := R17["mission"]
 38 [-]: GETTABLE  R19 R17 K12  ; R19 := R17["name"]
 39 [-]: SELF      R19 R19 K7   ; R20 := R19; R19 := R19["0x315E860F"]
 40 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 41 [-]: TEST      R19 0        ; if not R19 then PC := 93
 42 [-]: JMP       93           ; PC := 93
 43 [-]: GETTABLE  R19 R17 K13  ; R19 := R17["nodeType"]
 44 [-]: GETGLOBAL R20 K14      ; R20 := Lotus_Game
 45 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["NT_MISSION"]
 46 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: GETTABLE  R19 R17 K13  ; R19 := R17["nodeType"]
 49 [-]: GETGLOBAL R20 K14      ; R20 := Lotus_Game
 50 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["NT_CLAN"]
 51 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 93
 52 [-]: JMP       93           ; PC := 93
 53 [-]: GETGLOBAL R19 K17      ; R19 := 0x400E7765
 54 [-]: GETTABLE  R20 R18 K18  ; R20 := R18["levelOverride"]
 55 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 56 [-]: TEST      R19 1        ; if R19 then PC := 93
 57 [-]: JMP       93           ; PC := 93
 58 [-]: GETTABLE  R19 R18 K19  ; R19 := R18["missionType"]
 59 [-]: GETGLOBAL R20 K14      ; R20 := Lotus_Game
 60 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["MT_ANY"]
 61 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 93
 62 [-]: JMP       93           ; PC := 93
 63 [-]: GETTABLE  R19 R18 K19  ; R19 := R18["missionType"]
 64 [-]: GETGLOBAL R20 K14      ; R20 := Lotus_Game
 65 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["MT_ENDLESS_EXTERMINATION"]
 66 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 93
 67 [-]: JMP       93           ; PC := 93
 68 [-]: GETTABLE  R19 R18 K19  ; R19 := R18["missionType"]
 69 [-]: GETGLOBAL R20 K14      ; R20 := Lotus_Game
 70 [-]: GETTABLE  R20 R20 K22  ; R20 := R20["MT_RAILJACK"]
 71 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 93
 72 [-]: JMP       93           ; PC := 93
 73 [-]: ADD       R10 R10 K23  ; R10 := R10 + 1
 74 [-]: GETGLOBAL R19 K8       ; R19 := 0x9FAED6BC
 75 [-]: GETTABLE  R20 R17 K12  ; R20 := R17["name"]
 76 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 77 [-]: GETTABLE  R19 R1 R19   ; R19 := R1[R19]
 78 [-]: EQ        0 R19 K24    ; if R19 ~= nil then PC := 82
 79 [-]: JMP       82           ; PC := 82
 80 [-]: TEST      R2 0         ; if not R2 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: ADD       R11 R11 K23  ; R11 := R11 + 1
 83 [-]: JMP       93           ; PC := 93
 84 [-]: GETGLOBAL R19 K25      ; R19 := table
 85 [-]: GETTABLE  R19 R19 K26  ; R19 := R19["0xE6450C9D"]
 86 [-]: MOVE      R20 R12      ; R20 := R12
 87 [-]: NEWTABLE  R21 0 2      ; R21 := {}
 88 [-]: GETTABLE  R22 R17 K12  ; R22 := R17["name"]
 89 [-]: SETTABLE  R21 K12 R22  ; R21["name"] := R22
 90 [-]: GETTABLE  R22 R17 K27  ; R22 := R17["locTag"]
 91 [-]: SETTABLE  R21 K27 R22  ; R21["locTag"] := R22
 92 [-]: CALL      R19 3 1      ; R19(R20,R21)
 93 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 37; R15 := R16 end
 94 [-]: JMP       37           ; PC := 37
 95 [-]: MOVE      R19 R11      ; R19 := R11
 96 [-]: MOVE      R20 R10      ; R20 := R10
 97 [-]: MOVE      R21 R12      ; R21 := R12
 98 [-]: RETURN    R19 4        ; return R19,R20,R21
 99 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 2313
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 2317
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 4       ; R0,R1,R2 := R0()
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: MOVE      R4 R3        ; R4 := R3
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: RETURN    R4 3         ; return R4,R5
 12 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 2323
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 2327
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R2 K2        ; R2 := gPlayerProfileMgr
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  9 [-]: LOADK     R4 K4        ; R4 := 0
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x654F1092"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: MOVE      R1 R3        ; R1 := R3
 19 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 20 [-]: MOVE      R4 R1        ; R4 := R1
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 0         ; if not R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADNIL   R3 R3        ; R3 := nil
 25 [-]: RETURN    R3 2         ; return R3
 26 [-]: GETGLOBAL R3 K6        ; R3 := _T
 27 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["CachedFlashSales"]
 28 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 53
 29 [-]: JMP       53           ; PC := 53
 30 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1["0x2D0B8A86"]
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: GETTABLE  R4 R3 K10    ; R4 := R3["mFlashSales"]
 33 [-]: GETGLOBAL R5 K6        ; R5 := _T
 34 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 35 [-]: SETTABLE  R5 K7 R6     ; R5["CachedFlashSales"] := R6
 36 [-]: GETGLOBAL R5 K11       ; R5 := 0x63B09107
 37 [-]: MOVE      R6 R4        ; R6 := R4
 38 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R10 K1       ; R10 := 0x400E7765
 41 [-]: GETTABLE  R11 R9 K12   ; R11 := R9["mTypeName"]
 42 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 43 [-]: TEST      R10 1        ; if R10 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R10 K6       ; R10 := _T
 46 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["CachedFlashSales"]
 47 [-]: GETTABLE  R11 R9 K12   ; R11 := R9["mTypeName"]
 48 [-]: SELF      R11 R11 K13  ; R12 := R11; R11 := R11["0x1B252E3C"]
 49 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 50 [-]: SETTABLE  R10 R11 R9   ; R10[R11] := R9
 51 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 40; R7 := R8 end
 52 [-]: JMP       40           ; PC := 40
 53 [-]: GETGLOBAL R10 K6       ; R10 := _T
 54 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["CachedFlashSales"]
 55 [-]: EQ        0 R10 K8     ; if R10 ~= nil then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADNIL   R10 R10      ; R10 := nil
 58 [-]: RETURN    R10 2        ; return R10
 59 [-]: LOADNIL   R10 R10      ; R10 := nil
 60 [-]: SELF      R11 R0 K14   ; R12 := R0; R11 := R0["0xC5349ED"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: TEST      R11 0        ; if not R11 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R10 R0       ; R10 := R0
 65 [-]: JMP       76           ; PC := 76
 66 [-]: SELF      R11 R0 K15   ; R12 := R0; R11 := R0["0x3077BE70"]
 67 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 68 [-]: MOVE      R10 R11      ; R10 := R11
 69 [-]: GETGLOBAL R11 K1       ; R11 := 0x400E7765
 70 [-]: MOVE      R12 R10      ; R12 := R10
 71 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 72 [-]: TEST      R11 0        ; if not R11 then PC := 76
 73 [-]: JMP       76           ; PC := 76
 74 [-]: LOADNIL   R11 R11      ; R11 := nil
 75 [-]: RETURN    R11 2        ; return R11
 76 [-]: GETGLOBAL R11 K6       ; R11 := _T
 77 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["CachedFlashSales"]
 78 [-]: SELF      R12 R10 K13  ; R13 := R10; R12 := R10["0x1B252E3C"]
 79 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 80 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 81 [-]: GETGLOBAL R12 K1       ; R12 := 0x400E7765
 82 [-]: MOVE      R13 R11      ; R13 := R11
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: TEST      R12 1        ; if R12 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: GETGLOBAL R12 K16      ; R12 := Engine
 87 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["0xD09D7910"]
 88 [-]: GETTABLE  R13 R11 K18  ; R13 := R11["mStartDate"]
 89 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 90 [-]: LT        0 R12 K4     ; if R12 >= 0 then PC := 102
 91 [-]: JMP       102          ; PC := 102
 92 [-]: GETGLOBAL R12 K16      ; R12 := Engine
 93 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["0xD09D7910"]
 94 [-]: GETTABLE  R13 R11 K19  ; R13 := R11["mEndDate"]
 95 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 96 [-]: LT        0 K4 R12     ; if 0 >= R12 then PC := 102
 97 [-]: JMP       102          ; PC := 102
 98 [-]: GETTABLE  R12 R11 K20  ; R12 := R11["mShowInMarket"]
 99 [-]: TEST      R12 0        ; if not R12 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: RETURN    R11 2        ; return R11
102 [-]: LOADNIL   R12 R12      ; R12 := nil
103 [-]: RETURN    R12 2        ; return R12
104 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 2376
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 2394
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 2398
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 2403
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 2404
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 2405
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 2407
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: TESTSET   R4 R2 1      ; if R2 then PC := 4 else R4 := R2
  2 [-]: JMP       4            ; PC := 4
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: TEST      R5 1         ; if R5 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETUPVAL  R5 U2        ; R5 := U2
 10 [-]: LOADK     R6 K0        ; R6 := 1
 11 [-]: LEN       R7 R0        ; R7 := # R0
 12 [-]: LOADK     R8 K1        ; R8 := 0
 13 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 62
 14 [-]: JMP       62           ; PC := 62
 15 [-]: GETGLOBAL R9 K2        ; R9 := math
 16 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["0xF7005A7B"]
 17 [-]: ADD       R10 R6 R7    ; R10 := R6 + R7
 18 [-]: DIV       R10 R10 K4   ; R10 := R10 / 2
 19 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 20 [-]: MOVE      R8 R9        ; R8 := R9
 21 [-]: MOVE      R9 R4        ; R9 := R4
 22 [-]: GETTABLE  R10 R0 R8    ; R10 := R0[R8]
 23 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 24 [-]: EQ        0 R1 R9      ; if R1 ~= R9 then PC := 52
 25 [-]: JMP       52           ; PC := 52
 26 [-]: NEWTABLE  R10 2 0      ; R10 := {}
 27 [-]: MOVE      R11 R8       ; R11 := R8
 28 [-]: MOVE      R12 R8       ; R12 := R8
 29 [-]: SETLIST   R10 2 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
 30 [-]: SUB       R11 R8 K0    ; R11 := R8 - 1
 31 [-]: MOVE      R12 R4       ; R12 := R4
 32 [-]: GETTABLE  R13 R0 R11   ; R13 := R0[R11]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: EQ        0 R1 R12     ; if R1 ~= R12 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: MOVE      R12 R11      ; R12 := R11
 37 [-]: SUB       R11 R11 K0   ; R11 := R11 - 1
 38 [-]: SETTABLE  R10 K0 R12   ; R10[1] := R12
 39 [-]: JMP       31           ; PC := 31
 40 [-]: ADD       R11 R8 K0    ; R11 := R8 + 1
 41 [-]: MOVE      R12 R4       ; R12 := R4
 42 [-]: GETTABLE  R13 R0 R11   ; R13 := R0[R11]
 43 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 44 [-]: EQ        0 R1 R12     ; if R1 ~= R12 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: MOVE      R12 R11      ; R12 := R11
 47 [-]: ADD       R11 R11 K0   ; R11 := R11 + 1
 48 [-]: SETTABLE  R10 K4 R12   ; R10[2] := R12
 49 [-]: JMP       41           ; PC := 41
 50 [-]: RETURN    R10 2        ; return R10
 51 [-]: JMP       13           ; PC := 13
 52 [-]: MOVE      R12 R5       ; R12 := R5
 53 [-]: MOVE      R13 R1       ; R13 := R1
 54 [-]: MOVE      R14 R9       ; R14 := R9
 55 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 56 [-]: TEST      R12 0        ; if not R12 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R7 R8 K0     ; R7 := R8 - 1
 59 [-]: JMP       13           ; PC := 13
 60 [-]: ADD       R6 R8 K0     ; R6 := R8 + 1
 61 [-]: JMP       13           ; PC := 13
 62 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 2439
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 2443
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["type"]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 2450
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R2 1         ; if R2 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0["0x8292A1EF"]
  5 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  6 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 18
  8 [-]: JMP       18           ; PC := 18
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x966E7851"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: MOVE      R6 R3        ; R6 := R3
 14 [-]: GETUPVAL  R7 U2        ; R7 := U2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R5 R4        ; R5 := R4
 17 [-]: RETURN    R5 2         ; return R5
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: RETURN    R5 2         ; return R5
 20 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 2460
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 2464
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 2468
; #Upvalues:       7
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  4 [-]: TEST      R6 0         ; if not R6 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADK     R6 K1        ; R6 := 0
  7 [-]: LOADK     R7 K1        ; R7 := 0
  8 [-]: RETURN    R6 3         ; return R6,R7
  9 [-]: LOADNIL   R6 R9        ; R6 := R7 := R8 := R9 := nil
 10 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 11 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 35
 12 [-]: JMP       35           ; PC := 35
 13 [-]: LOADK     R11 K1       ; R11 := 0
 14 [-]: GETGLOBAL R12 K3       ; R12 := Lotus_Game
 15 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["LEGENDARY"]
 16 [-]: LOADK     R13 K5       ; R13 := 1
 17 [-]: FORPREP   R11 33       ; R11 -= R13; PC := 33
 18 [-]: SELF      R15 R0 K6    ; R16 := R0; R15 := R0["0x41604216"]
 19 [-]: MOVE      R17 R14      ; R17 := R14
 20 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 21 [-]: SELF      R16 R0 K7    ; R17 := R0; R16 := R0["0xE5B2203D"]
 22 [-]: MOVE      R18 R14      ; R18 := R14
 23 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 24 [-]: LT        1 K1 R15     ; if 0 < R15 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: LT        1 K1 R16     ; if 0 < R16 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: EQ        0 R6 K2      ; if R6 ~= nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: MOVE      R6 R15       ; R6 := R15
 31 [-]: MOVE      R7 R16       ; R7 := R16
 32 [-]: MOVE      R8 R14       ; R8 := R14
 33 [-]: FORLOOP   R11 18       ; R11 += R13; if R11 <= R12 then begin PC := 18; R14 := R11 end
 34 [-]: JMP       43           ; PC := 43
 35 [-]: SELF      R17 R0 K6    ; R18 := R0; R17 := R0["0x41604216"]
 36 [-]: MOVE      R19 R1       ; R19 := R1
 37 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 38 [-]: MOVE      R6 R17       ; R6 := R17
 39 [-]: SELF      R17 R0 K7    ; R18 := R0; R17 := R0["0xE5B2203D"]
 40 [-]: MOVE      R19 R1       ; R19 := R1
 41 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 42 [-]: MOVE      R7 R17       ; R7 := R17
 43 [-]: SELF      R17 R0 K8    ; R18 := R0; R17 := R0["0x964C009B"]
 44 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 45 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
 46 [-]: MOVE      R19 R17      ; R19 := R17
 47 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 48 [-]: TEST      R18 1        ; if R18 then PC := 74
 49 [-]: JMP       74           ; PC := 74
 50 [-]: MOVE      R18 R0       ; R18 := R0
 51 [-]: GETGLOBAL R19 K9       ; R19 := gPlayerProfileMgr
 52 [-]: SELF      R19 R19 K10  ; R20 := R19; R19 := R19["0x21EF7B1A"]
 53 [-]: LOADK     R21 K1       ; R21 := 0
 54 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 55 [-]: SELF      R19 R19 K11  ; R20 := R19; R19 := R19["0x654F1092"]
 56 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 57 [-]: SELF      R20 R17 K12  ; R21 := R17; R20 := R17["0x8B598ED4"]
 58 [-]: GETUPVAL  R22 U0       ; R22 := U0
 59 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 60 [-]: TEST      R20 0        ; if not R20 then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: SELF      R20 R19 K13  ; R21 := R19; R20 := R19["0xB451D706"]
 63 [-]: MOVE      R22 R17      ; R22 := R17
 64 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 65 [-]: MOVE      R18 R20      ; R18 := R20
 66 [-]: TEST      R18 0        ; if not R18 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: SELF      R20 R0 K14   ; R21 := R0; R20 := R0["0xBFBC3D2F"]
 69 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 70 [-]: MOVE      R6 R20       ; R6 := R20
 71 [-]: SELF      R20 R0 K15   ; R21 := R0; R20 := R0["0xA0579411"]
 72 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 73 [-]: MOVE      R7 R20       ; R7 := R20
 74 [-]: TEST      R4 0         ; if not R4 then PC := 107
 75 [-]: JMP       107          ; PC := 107
 76 [-]: SETTABLE  R10 K16 R0   ; R10["StoreItem"] := R0
 77 [-]: GETUPVAL  R20 U1       ; R20 := U1
 78 [-]: MOVE      R21 R10      ; R21 := R10
 79 [-]: CALL      R20 2 1      ; R20(R21)
 80 [-]: GETTABLE  R20 R10 K17  ; R20 := R10["Coupon"]
 81 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 107
 82 [-]: JMP       107          ; PC := 107
 83 [-]: GETTABLE  R20 R10 K17  ; R20 := R10["Coupon"]
 84 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["mAmount"]
 85 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 107
 86 [-]: JMP       107          ; PC := 107
 87 [-]: GETTABLE  R20 R10 K17  ; R20 := R10["Coupon"]
 88 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["mAmount"]
 89 [-]: EQ        1 R20 K1     ; if R20 == 0 then PC := 107
 90 [-]: JMP       107          ; PC := 107
 91 [-]: EQ        1 R6 K2      ; if R6 == nil then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETUPVAL  R20 U2       ; R20 := U2
 94 [-]: MOVE      R21 R6       ; R21 := R6
 95 [-]: GETTABLE  R22 R10 K17  ; R22 := R10["Coupon"]
 96 [-]: GETTABLE  R22 R22 K18  ; R22 := R22["mAmount"]
 97 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 98 [-]: MOVE      R6 R20       ; R6 := R20
 99 [-]: EQ        1 R7 K2      ; if R7 == nil then PC := 107
100 [-]: JMP       107          ; PC := 107
101 [-]: GETUPVAL  R20 U2       ; R20 := U2
102 [-]: MOVE      R21 R7       ; R21 := R7
103 [-]: GETTABLE  R22 R10 K17  ; R22 := R10["Coupon"]
104 [-]: GETTABLE  R22 R22 K18  ; R22 := R22["mAmount"]
105 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
106 [-]: MOVE      R7 R20       ; R7 := R20
107 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 111
108 [-]: JMP       111          ; PC := 111
109 [-]: EQ        0 R2 K19     ; if R2 ~= "0x1" then PC := 188
110 [-]: JMP       188          ; PC := 188
111 [-]: GETTABLE  R20 R10 K17  ; R20 := R10["Coupon"]
112 [-]: EQ        1 R20 K2     ; if R20 == nil then PC := 118
113 [-]: JMP       118          ; PC := 118
114 [-]: GETTABLE  R20 R10 K17  ; R20 := R10["Coupon"]
115 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["mAmount"]
116 [-]: EQ        1 R20 K1     ; if R20 == 0 then PC := 188
117 [-]: JMP       188          ; PC := 188
118 [-]: GETUPVAL  R20 U3       ; R20 := U3
119 [-]: MOVE      R21 R0       ; R21 := R0
120 [-]: CALL      R20 2 2      ; R20 := R20(R21)
121 [-]: MOVE      R9 R20       ; R9 := R20
122 [-]: EQ        1 R9 K2      ; if R9 == nil then PC := 188
123 [-]: JMP       188          ; PC := 188
124 [-]: SELF      R20 R0 K20   ; R21 := R0; R20 := R0["0xE62F9771"]
125 [-]: CALL      R20 2 2      ; R20 := R20(R21)
126 [-]: TEST      R20 0        ; if not R20 then PC := 186
127 [-]: JMP       186          ; PC := 186
128 [-]: GETTABLE  R20 R9 K21   ; R20 := R9["mTieredPremiumOverrides"]
129 [-]: LEN       R20 R20      ; R20 := # R20
130 [-]: LT        1 K1 R20     ; if 0 < R20 then PC := 136
131 [-]: JMP       136          ; PC := 136
132 [-]: GETTABLE  R20 R9 K22   ; R20 := R9["mTieredRegularOverrides"]
133 [-]: LEN       R20 R20      ; R20 := # R20
134 [-]: LT        0 K1 R20     ; if 0 >= R20 then PC := 186
135 [-]: JMP       186          ; PC := 186
136 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 171
137 [-]: JMP       171          ; PC := 171
138 [-]: LOADK     R20 K1       ; R20 := 0
139 [-]: LOADK     R21 K5       ; R21 := 1
140 [-]: GETTABLE  R22 R9 K22   ; R22 := R9["mTieredRegularOverrides"]
141 [-]: LEN       R22 R22      ; R22 := # R22
142 [-]: LOADK     R23 K5       ; R23 := 1
143 [-]: FORPREP   R21 150      ; R21 -= R23; PC := 150
144 [-]: GETTABLE  R25 R9 K22   ; R25 := R9["mTieredRegularOverrides"]
145 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
146 [-]: LT        0 R20 R25    ; if R20 >= R25 then PC := 150
147 [-]: JMP       150          ; PC := 150
148 [-]: GETTABLE  R25 R9 K22   ; R25 := R9["mTieredRegularOverrides"]
149 [-]: GETTABLE  R20 R25 R24  ; R20 := R25[R24]
150 [-]: FORLOOP   R21 144      ; R21 += R23; if R21 <= R22 then begin PC := 144; R24 := R21 end
151 [-]: LT        0 K1 R20     ; if 0 >= R20 then PC := 154
152 [-]: JMP       154          ; PC := 154
153 [-]: MOVE      R6 R20       ; R6 := R20
154 [-]: LOADK     R25 K1       ; R25 := 0
155 [-]: LOADK     R26 K5       ; R26 := 1
156 [-]: GETTABLE  R27 R9 K21   ; R27 := R9["mTieredPremiumOverrides"]
157 [-]: LEN       R27 R27      ; R27 := # R27
158 [-]: LOADK     R28 K5       ; R28 := 1
159 [-]: FORPREP   R26 166      ; R26 -= R28; PC := 166
160 [-]: GETTABLE  R30 R9 K21   ; R30 := R9["mTieredPremiumOverrides"]
161 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
162 [-]: LT        0 R25 R30    ; if R25 >= R30 then PC := 166
163 [-]: JMP       166          ; PC := 166
164 [-]: GETTABLE  R30 R9 K21   ; R30 := R9["mTieredPremiumOverrides"]
165 [-]: GETTABLE  R25 R30 R29  ; R25 := R30[R29]
166 [-]: FORLOOP   R26 160      ; R26 += R28; if R26 <= R27 then begin PC := 160; R29 := R26 end
167 [-]: LT        0 K1 R25     ; if 0 >= R25 then PC := 188
168 [-]: JMP       188          ; PC := 188
169 [-]: MOVE      R7 R25       ; R7 := R25
170 [-]: JMP       188          ; PC := 188
171 [-]: GETTABLE  R30 R9 K22   ; R30 := R9["mTieredRegularOverrides"]
172 [-]: LEN       R30 R30      ; R30 := # R30
173 [-]: LT        0 K1 R30     ; if 0 >= R30 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: GETTABLE  R30 R9 K22   ; R30 := R9["mTieredRegularOverrides"]
176 [-]: ADD       R31 R1 K5    ; R31 := R1 + 1
177 [-]: GETTABLE  R6 R30 R31   ; R6 := R30[R31]
178 [-]: GETTABLE  R30 R9 K21   ; R30 := R9["mTieredPremiumOverrides"]
179 [-]: LEN       R30 R30      ; R30 := # R30
180 [-]: LT        0 K1 R30     ; if 0 >= R30 then PC := 188
181 [-]: JMP       188          ; PC := 188
182 [-]: GETTABLE  R30 R9 K21   ; R30 := R9["mTieredPremiumOverrides"]
183 [-]: ADD       R31 R1 K5    ; R31 := R1 + 1
184 [-]: GETTABLE  R7 R30 R31   ; R7 := R30[R31]
185 [-]: JMP       188          ; PC := 188
186 [-]: GETTABLE  R6 R9 K23    ; R6 := R9["mRegularOverride"]
187 [-]: GETTABLE  R7 R9 K24    ; R7 := R9["mPremiumOverride"]
188 [-]: EQ        0 R9 K2      ; if R9 ~= nil then PC := 219
189 [-]: JMP       219          ; PC := 219
190 [-]: SELF      R30 R0 K25   ; R31 := R0; R30 := R0["0x7D5774ED"]
191 [-]: CALL      R30 2 2      ; R30 := R30(R31)
192 [-]: TEST      R30 1        ; if R30 then PC := 219
193 [-]: JMP       219          ; PC := 219
194 [-]: TEST      R5 1         ; if R5 then PC := 219
195 [-]: JMP       219          ; PC := 219
196 [-]: LOADNIL   R30 R30      ; R30 := nil
197 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
198 [-]: GETGLOBAL R32 K26      ; R32 := gGameRules
199 [-]: CALL      R31 2 2      ; R31 := R31(R32)
200 [-]: TEST      R31 1        ; if R31 then PC := 206
201 [-]: JMP       206          ; PC := 206
202 [-]: GETGLOBAL R31 K26      ; R31 := gGameRules
203 [-]: SELF      R31 R31 K27  ; R32 := R31; R31 := R31["0xC17093D6"]
204 [-]: CALL      R31 2 2      ; R31 := R31(R32)
205 [-]: MOVE      R30 R31      ; R30 := R31
206 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
207 [-]: MOVE      R32 R30      ; R32 := R30
208 [-]: CALL      R31 2 2      ; R31 := R31(R32)
209 [-]: TEST      R31 1        ; if R31 then PC := 216
210 [-]: JMP       216          ; PC := 216
211 [-]: SELF      R31 R30 K28  ; R32 := R30; R31 := R30["0xE815038B"]
212 [-]: MOVE      R33 R0       ; R33 := R0
213 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
214 [-]: EQ        0 R31 K2     ; if R31 ~= nil then PC := 219
215 [-]: JMP       219          ; PC := 219
216 [-]: LOADK     R31 K1       ; R31 := 0
217 [-]: LOADK     R32 K1       ; R32 := 0
218 [-]: RETURN    R31 3        ; return R31,R32
219 [-]: EQ        1 R3 K2      ; if R3 == nil then PC := 285
220 [-]: JMP       285          ; PC := 285
221 [-]: SELF      R31 R0 K29   ; R32 := R0; R31 := R0["0xC5349ED"]
222 [-]: CALL      R31 2 2      ; R31 := R31(R32)
223 [-]: TEST      R31 0        ; if not R31 then PC := 285
224 [-]: JMP       285          ; PC := 285
225 [-]: SELF      R31 R0 K30   ; R32 := R0; R31 := R0["0xE2FCFD11"]
226 [-]: CALL      R31 2 2      ; R31 := R31(R32)
227 [-]: SELF      R32 R0 K31   ; R33 := R0; R32 := R0["0x22DE1AAB"]
228 [-]: CALL      R32 2 2      ; R32 := R32(R33)
229 [-]: LOADK     R33 K1       ; R33 := 0
230 [-]: LOADK     R34 K1       ; R34 := 0
231 [-]: SELF      R35 R0 K32   ; R36 := R0; R35 := R0["0xEC2A2A3C"]
232 [-]: CALL      R35 2 2      ; R35 := R35(R36)
233 [-]: LOADK     R36 K5       ; R36 := 1
234 [-]: LEN       R37 R35      ; R37 := # R35
235 [-]: LOADK     R38 K5       ; R38 := 1
236 [-]: FORPREP   R36 268      ; R36 -= R38; PC := 268
237 [-]: GETGLOBAL R40 K33      ; R40 := 0x1BF588C6
238 [-]: CALL      R40 1 1      ; R40()
239 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
240 [-]: GETTABLE  R40 R40 K34  ; R40 := R40["mTypeName"]
241 [-]: GETGLOBAL R41 K0       ; R41 := 0x400E7765
242 [-]: MOVE      R42 R40      ; R42 := R40
243 [-]: CALL      R41 2 2      ; R41 := R41(R42)
244 [-]: TEST      R41 1        ; if R41 then PC := 268
245 [-]: JMP       268          ; PC := 268
246 [-]: GETUPVAL  R41 U4       ; R41 := U4
247 [-]: TEST      R41 0        ; if not R41 then PC := 268
248 [-]: JMP       268          ; PC := 268
249 [-]: GETUPVAL  R41 U5       ; R41 := U5
250 [-]: MOVE      R42 R40      ; R42 := R40
251 [-]: MOVE      R43 R3       ; R43 := R3
252 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
253 [-]: TEST      R41 1        ; if R41 then PC := 268
254 [-]: JMP       268          ; PC := 268
255 [-]: GETUPVAL  R41 U6       ; R41 := U6
256 [-]: MOVE      R42 R40      ; R42 := R40
257 [-]: GETTABLE  R43 R35 R39  ; R43 := R35[R39]
258 [-]: GETTABLE  R43 R43 K35  ; R43 := R43["mDurability"]
259 [-]: MOVE      R44 R2       ; R44 := R2
260 [-]: MOVE      R45 R3       ; R45 := R3
261 [-]: CALL      R41 5 3      ; R41,R42 := R41(R42,R43,R44,R45)
262 [-]: DIV       R43 R41 R31  ; R43 := R41 / R31
263 [-]: MUL       R43 R43 R6   ; R43 := R43 * R6
264 [-]: ADD       R33 R33 R43  ; R33 := R33 + R43
265 [-]: DIV       R43 R42 R32  ; R43 := R42 / R32
266 [-]: MUL       R43 R43 R7   ; R43 := R43 * R7
267 [-]: ADD       R34 R34 R43  ; R34 := R34 + R43
268 [-]: FORLOOP   R36 237      ; R36 += R38; if R36 <= R37 then begin PC := 237; R39 := R36 end
269 [-]: SUB       R6 R6 R33    ; R6 := R6 - R33
270 [-]: SUB       R7 R7 R34    ; R7 := R7 - R34
271 [-]: LT        1 R6 K1      ; if R6 < 0 then PC := 277
272 [-]: JMP       277          ; PC := 277
273 [-]: SELF      R43 R0 K36   ; R44 := R0; R43 := R0["0x6139ADFF"]
274 [-]: CALL      R43 2 2      ; R43 := R43(R44)
275 [-]: LT        0 K1 R43     ; if 0 >= R43 then PC := 278
276 [-]: JMP       278          ; PC := 278
277 [-]: LOADK     R6 K1        ; R6 := 0
278 [-]: LT        1 R7 K1      ; if R7 < 0 then PC := 284
279 [-]: JMP       284          ; PC := 284
280 [-]: SELF      R43 R0 K36   ; R44 := R0; R43 := R0["0x6139ADFF"]
281 [-]: CALL      R43 2 2      ; R43 := R43(R44)
282 [-]: LT        0 K1 R43     ; if 0 >= R43 then PC := 285
283 [-]: JMP       285          ; PC := 285
284 [-]: LOADK     R7 K1        ; R7 := 0
285 [-]: MOVE      R43 R6       ; R43 := R6
286 [-]: MOVE      R44 R7       ; R44 := R7
287 [-]: MOVE      R45 R8       ; R45 := R8
288 [-]: MOVE      R46 R9       ; R46 := R9
289 [-]: RETURN    R43 5        ; return R43,R44,R45,R46
290 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 2608
; #Upvalues:       1
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: MOVE      R8 R1        ; R8 := R1
  4 [-]: MOVE      R9 R2        ; R9 := R2
  5 [-]: MOVE      R10 R3       ; R10 := R3
  6 [-]: MOVE      R11 R4       ; R11 := R4
  7 [-]: MOVE      R12 R5       ; R12 := R5
  8 [-]: TAILCALL  R6 7 0       ; R6,... := R6(R7,R8,R9,R10,R11,R12)
  9 [-]: RETURN    R6 0         ; return R6,...
 10 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 2623
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 2627
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LT        0 R0 K0      ; if R0 >= 3 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: LOADK     R1 K1        ; R1 := 0
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K2        ; R1 := 2
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 2635
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: TEST      R0 0         ; if not R0 then PC := 17
  2 [-]: JMP       17           ; PC := 17
  3 [-]: LOADNIL   R1 R1        ; R1 := nil
  4 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x9375ADC7"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := gPlayerProfileMgr
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x21EF7B1A"]
  8 [-]: LOADK     R5 K4        ; R5 := 0
  9 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: TEST      R2 0         ; if not R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K4        ; R1 := 0
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADK     R1 K5        ; R1 := 2
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: GETGLOBAL R2 K6        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["gPendingMission"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 52
 20 [-]: JMP       52           ; PC := 52
 21 [-]: GETGLOBAL R2 K8        ; R2 := gMatchingService
 22 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0xE1C847EF"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 52
 25 [-]: JMP       52           ; PC := 52
 26 [-]: GETGLOBAL R2 K10       ; R2 := 0x9FAED6BC
 27 [-]: GETGLOBAL R3 K6        ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["gPendingMission"]
 29 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["name"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETGLOBAL R3 K12       ; R3 := string
 32 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["0xDE44F664"]
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETGLOBAL R5 K14       ; R5 := TAG_SEPERATOR
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: TEST      R3 0         ; if not R3 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R4 K12       ; R4 := string
 39 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["0x7B782033"]
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: LOADK     R6 K16       ; R6 := 1
 42 [-]: SUB       R7 R3 K16    ; R7 := R3 - 1
 43 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 44 [-]: MOVE      R2 R4        ; R2 := R4
 45 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 46 [-]: GETGLOBAL R5 K17       ; R5 := PLAINS_NODE_TAG
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: GETGLOBAL R4 K18       ; R4 := PLAINS_ELO_IN_LISET
 51 [-]: RETURN    R4 2         ; return R4
 52 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 53 [-]: GETGLOBAL R5 K19       ; R5 := Engine
 54 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["SLOT_1"]
 55 [-]: GETGLOBAL R6 K19       ; R6 := Engine
 56 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["SLOT_2"]
 57 [-]: GETGLOBAL R7 K19       ; R7 := Engine
 58 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["SLOT_4"]
 59 [-]: GETGLOBAL R8 K19       ; R8 := Engine
 60 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["SLOT_6"]
 61 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 62 [-]: LOADK     R5 K4        ; R5 := 0
 63 [-]: LOADK     R6 K4        ; R6 := 0
 64 [-]: GETUPVAL  R7 U0        ; R7 := U0
 65 [-]: CALL      R7 1 2       ; R7 := R7()
 66 [-]: GETGLOBAL R8 K24       ; R8 := 0x400E7765
 67 [-]: MOVE      R9 R7        ; R9 := R7
 68 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 69 [-]: TEST      R8 1         ; if R8 then PC := 95
 70 [-]: JMP       95           ; PC := 95
 71 [-]: SELF      R8 R7 K25    ; R9 := R7; R8 := R7["0x8DB5D01F"]
 72 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 73 [-]: GETGLOBAL R9 K24       ; R9 := 0x400E7765
 74 [-]: MOVE      R10 R8       ; R10 := R8
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: TEST      R9 1         ; if R9 then PC := 95
 77 [-]: JMP       95           ; PC := 95
 78 [-]: LOADK     R9 K16       ; R9 := 1
 79 [-]: LEN       R10 R4       ; R10 := # R4
 80 [-]: LOADK     R11 K16      ; R11 := 1
 81 [-]: FORPREP   R9 94        ; R9 -= R11; PC := 94
 82 [-]: SELF      R13 R8 K26   ; R14 := R8; R13 := R8["0x63D63C30"]
 83 [-]: GETTABLE  R15 R4 R12   ; R15 := R4[R12]
 84 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 85 [-]: GETGLOBAL R14 K24      ; R14 := 0x400E7765
 86 [-]: MOVE      R15 R13      ; R15 := R13
 87 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 88 [-]: TEST      R14 1        ; if R14 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: ADD       R5 R5 K16    ; R5 := R5 + 1
 91 [-]: SELF      R14 R13 K27  ; R15 := R13; R14 := R13["0x4A8D7E2A"]
 92 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 93 [-]: ADD       R6 R6 R14    ; R6 := R6 + R14
 94 [-]: FORLOOP   R9 82        ; R9 += R11; if R9 <= R10 then begin PC := 82; R12 := R9 end
 95 [-]: LT        0 R5 K16     ; if R5 >= 1 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: LOADK     R5 K16       ; R5 := 1
 98 [-]: DIV       R14 R6 R5    ; R14 := R6 / R5
 99 [-]: RETURN    R14 2        ; return R14
100 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 2689
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 2693
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R4 R1        ; R4 := R1
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 151
  6 [-]: JMP       151          ; PC := 151
  7 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R7 K2        ; R7 := gDecorationType
  9 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 10 [-]: TEST      R5 0         ; if not R5 then PC := 30
 11 [-]: JMP       30           ; PC := 30
 12 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0["0xB0761E05"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x315E860F"]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 0         ; if not R5 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x76B0242D"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0xCE832AFF"]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: JMP       151          ; PC := 151
 30 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 31 [-]: GETGLOBAL R7 K7        ; R7 := gDynamicCoverType
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: TEST      R5 1         ; if R5 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 36 [-]: GETGLOBAL R7 K8        ; R7 := gEmplacementType
 37 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 38 [-]: TEST      R5 1         ; if R5 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 41 [-]: GETGLOBAL R7 K9        ; R7 := gDevourerType
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R1 R0        ; R1 := R0
 46 [-]: JMP       151          ; PC := 151
 47 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 48 [-]: GETUPVAL  R7 U1        ; R7 := U1
 49 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 50 [-]: TEST      R5 0         ; if not R5 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: LOADNIL   R5 R5        ; R5 := nil
 53 [-]: RETURN    R5 2         ; return R5
 54 [-]: JMP       151          ; PC := 151
 55 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 56 [-]: GETGLOBAL R7 K10       ; R7 := gBaseAvatarType
 57 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 58 [-]: TEST      R5 0         ; if not R5 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: JMP       151          ; PC := 151
 62 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0x8B598ED4"]
 63 [-]: GETGLOBAL R7 K11       ; R7 := gHitProxyType
 64 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 65 [-]: TEST      R5 0         ; if not R5 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0["0xB1627322"]
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0["0x7C5C9389"]
 70 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 71 [-]: TEST      R5 0         ; if not R5 then PC := 80
 72 [-]: JMP       80           ; PC := 80
 73 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 74 [-]: GETGLOBAL R9 K10       ; R9 := gBaseAvatarType
 75 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 76 [-]: TEST      R7 0         ; if not R7 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: MOVE      R2 R6        ; R2 := R6
 79 [-]: JMP       151          ; PC := 151
 80 [-]: TEST      R5 0         ; if not R5 then PC := 107
 81 [-]: JMP       107          ; PC := 107
 82 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 83 [-]: GETGLOBAL R9 K2        ; R9 := gDecorationType
 84 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 85 [-]: TEST      R7 0         ; if not R7 then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0xB0761E05"]
 88 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 89 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7["0x315E860F"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: TEST      R7 1         ; if R7 then PC := 103
 92 [-]: JMP       103          ; PC := 103
 93 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 94 [-]: GETGLOBAL R9 K7        ; R9 := gDynamicCoverType
 95 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 96 [-]: TEST      R7 1         ; if R7 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
 99 [-]: GETGLOBAL R9 K8        ; R9 := gEmplacementType
100 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
101 [-]: TEST      R7 0         ; if not R7 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: MOVE      R1 R6        ; R1 := R6
104 [-]: MOVE      R3 R0        ; R3 := R0
105 [-]: MOVE      R4 R0        ; R4 := R0
106 [-]: JMP       151          ; PC := 151
107 [-]: TEST      R5 0         ; if not R5 then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6["0x8B598ED4"]
110 [-]: GETGLOBAL R9 K9        ; R9 := gDevourerType
111 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
112 [-]: TEST      R7 0         ; if not R7 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: MOVE      R1 R6        ; R1 := R6
115 [-]: MOVE      R3 R0        ; R3 := R0
116 [-]: JMP       151          ; PC := 151
117 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0["0x8B598ED4"]
118 [-]: GETGLOBAL R9 K14       ; R9 := gPickUpType
119 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
120 [-]: TEST      R7 0         ; if not R7 then PC := 140
121 [-]: JMP       140          ; PC := 140
122 [-]: SELF      R7 R0 K15    ; R8 := R0; R7 := R0["0xD332219D"]
123 [-]: CALL      R7 2 2       ; R7 := R7(R8)
124 [-]: TEST      R7 0         ; if not R7 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0["0x4E4D0C1B"]
127 [-]: CALL      R7 2 2       ; R7 := R7(R8)
128 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
129 [-]: MOVE      R9 R7        ; R9 := R7
130 [-]: CALL      R8 2 2       ; R8 := R8(R9)
131 [-]: TEST      R8 1         ; if R8 then PC := 151
132 [-]: JMP       151          ; PC := 151
133 [-]: SELF      R8 R7 K1     ; R9 := R7; R8 := R7["0x8B598ED4"]
134 [-]: GETGLOBAL R10 K17      ; R10 := gFusionTreasureType
135 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
136 [-]: TEST      R8 0         ; if not R8 then PC := 151
137 [-]: JMP       151          ; PC := 151
138 [-]: MOVE      R1 R0        ; R1 := R0
139 [-]: JMP       151          ; PC := 151
140 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0["0x907C463B"]
141 [-]: CALL      R8 2 2       ; R8 := R8(R9)
142 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
143 [-]: MOVE      R10 R8       ; R10 := R8
144 [-]: CALL      R9 2 2       ; R9 := R9(R10)
145 [-]: TEST      R9 1         ; if R9 then PC := 151
146 [-]: JMP       151          ; PC := 151
147 [-]: GETUPVAL  R9 U2        ; R9 := U2
148 [-]: MOVE      R10 R8       ; R10 := R8
149 [-]: TAILCALL  R9 2 0       ; R9,... := R9(R10)
150 [-]: RETURN    R9 0         ; return R9,...
151 [-]: MOVE      R9 R1        ; R9 := R1
152 [-]: MOVE      R10 R2       ; R10 := R2
153 [-]: MOVE      R11 R3       ; R11 := R3
154 [-]: MOVE      R12 R4       ; R12 := R4
155 [-]: RETURN    R9 5         ; return R9,R10,R11,R12
156 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 2736
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 2740
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 61
  2 [-]: JMP       61           ; PC := 61
  3 [-]: LOADK     R2 K1        ; R2 := 1
  4 [-]: LEN       R3 R1        ; R3 := # R1
  5 [-]: LOADK     R4 K1        ; R4 := 1
  6 [-]: FORPREP   R2 60        ; R2 -= R4; PC := 60
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0x1BF588C6
  8 [-]: LOADK     R7 K3        ; R7 := 0
  9 [-]: CALL      R6 2 1       ; R6(R7)
 10 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 11 [-]: GETTABLE  R7 R6 K4     ; R7 := R6["mItemType"]
 12 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x1B252E3C"]
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: GETTABLE  R8 R0 R7     ; R8 := R0[R7]
 15 [-]: EQ        1 R8 K0      ; if R8 == nil then PC := 49
 16 [-]: JMP       49           ; PC := 49
 17 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["Count"]
 18 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["Count"]
 21 [-]: EQ        0 R9 K3      ; if R9 ~= 0 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETUPVAL  R9 U0        ; R9 := U0
 24 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xF81722A2"]
 25 [-]: GETTABLE  R10 R6 K8    ; R10 := R6["mItemCount"]
 26 [-]: EQ        1 R10 K0     ; if R10 == nil then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: MOVE      R10 R0       ; R10 := R0
 29 [-]: MOVE      R10 R1       ; R10 := R1
 30 [-]: LOADK     R11 K1       ; R11 := 1
 31 [-]: GETTABLE  R12 R6 K8    ; R12 := R6["mItemCount"]
 32 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 33 [-]: SETTABLE  R8 K6 R9     ; R8["Count"] := R9
 34 [-]: JMP       60           ; PC := 60
 35 [-]: GETTABLE  R9 R8 K6     ; R9 := R8["Count"]
 36 [-]: GETUPVAL  R10 U0       ; R10 := U0
 37 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF81722A2"]
 38 [-]: GETTABLE  R11 R6 K8    ; R11 := R6["mItemCount"]
 39 [-]: EQ        1 R11 K0     ; if R11 == nil then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R11 R0       ; R11 := R0
 42 [-]: MOVE      R11 R1       ; R11 := R1
 43 [-]: LOADK     R12 K1       ; R12 := 1
 44 [-]: GETTABLE  R13 R6 K8    ; R13 := R6["mItemCount"]
 45 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 46 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
 47 [-]: SETTABLE  R8 K6 R9     ; R8["Count"] := R9
 48 [-]: JMP       60           ; PC := 60
 49 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 50 [-]: GETTABLE  R10 R6 K4    ; R10 := R6["mItemType"]
 51 [-]: SETTABLE  R9 K9 R10    ; R9["Type"] := R10
 52 [-]: GETTABLE  R10 R6 K8    ; R10 := R6["mItemCount"]
 53 [-]: SETTABLE  R9 K6 R10    ; R9["Count"] := R10
 54 [-]: SETTABLE  R9 K10 R6    ; R9["Item"] := R6
 55 [-]: GETTABLE  R10 R9 K6    ; R10 := R9["Count"]
 56 [-]: EQ        0 R10 K0     ; if R10 ~= nil then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: SETTABLE  R9 K6 K1     ; R9["Count"] := 1
 59 [-]: SETTABLE  R0 R7 R9     ; R0[R7] := R9
 60 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 61 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 2767
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 125
 10 [-]: JMP       125          ; PC := 125
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 125
 17 [-]: JMP       125          ; PC := 125
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x6F2E05FD"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 125
 24 [-]: JMP       125          ; PC := 125
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: MOVE      R5 R0        ; R5 := R0
 27 [-]: SELF      R6 R3 K6     ; R7 := R3; R6 := R3["0x1D216770"]
 28 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 29 [-]: CALL      R4 0 1       ; R4(R5,...)
 30 [-]: GETUPVAL  R4 U0        ; R4 := U0
 31 [-]: MOVE      R5 R0        ; R5 := R0
 32 [-]: SELF      R6 R3 K7     ; R7 := R3; R6 := R3["0xB5D66AE"]
 33 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 34 [-]: CALL      R4 0 1       ; R4(R5,...)
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: MOVE      R5 R0        ; R5 := R0
 37 [-]: SELF      R6 R3 K8     ; R7 := R3; R6 := R3["0xD3A6CE65"]
 38 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 39 [-]: CALL      R4 0 1       ; R4(R5,...)
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: MOVE      R5 R0        ; R5 := R0
 42 [-]: SELF      R6 R3 K9     ; R7 := R3; R6 := R3["0xA82A3D30"]
 43 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 44 [-]: CALL      R4 0 1       ; R4(R5,...)
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: MOVE      R5 R0        ; R5 := R0
 47 [-]: SELF      R6 R3 K10    ; R7 := R3; R6 := R3["0x4ADC73C2"]
 48 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 49 [-]: CALL      R4 0 1       ; R4(R5,...)
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: MOVE      R5 R0        ; R5 := R0
 52 [-]: SELF      R6 R3 K11    ; R7 := R3; R6 := R3["0x213E1D36"]
 53 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 54 [-]: CALL      R4 0 1       ; R4(R5,...)
 55 [-]: GETUPVAL  R4 U0        ; R4 := U0
 56 [-]: MOVE      R5 R0        ; R5 := R0
 57 [-]: SELF      R6 R3 K12    ; R7 := R3; R6 := R3["0xA5FC09FD"]
 58 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 59 [-]: CALL      R4 0 1       ; R4(R5,...)
 60 [-]: GETUPVAL  R4 U0        ; R4 := U0
 61 [-]: MOVE      R5 R0        ; R5 := R0
 62 [-]: SELF      R6 R3 K13    ; R7 := R3; R6 := R3["0xC119AB7B"]
 63 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 64 [-]: CALL      R4 0 1       ; R4(R5,...)
 65 [-]: GETUPVAL  R4 U0        ; R4 := U0
 66 [-]: MOVE      R5 R0        ; R5 := R0
 67 [-]: SELF      R6 R3 K14    ; R7 := R3; R6 := R3["0xEA75EFF7"]
 68 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 69 [-]: CALL      R4 0 1       ; R4(R5,...)
 70 [-]: GETUPVAL  R4 U0        ; R4 := U0
 71 [-]: MOVE      R5 R0        ; R5 := R0
 72 [-]: SELF      R6 R3 K15    ; R7 := R3; R6 := R3["0x85D4CA1C"]
 73 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 74 [-]: CALL      R4 0 1       ; R4(R5,...)
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: MOVE      R5 R0        ; R5 := R0
 77 [-]: SELF      R6 R3 K16    ; R7 := R3; R6 := R3["0x640AA7E"]
 78 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 79 [-]: CALL      R4 0 1       ; R4(R5,...)
 80 [-]: GETUPVAL  R4 U0        ; R4 := U0
 81 [-]: MOVE      R5 R0        ; R5 := R0
 82 [-]: SELF      R6 R3 K17    ; R7 := R3; R6 := R3["0x63A03B31"]
 83 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 84 [-]: CALL      R4 0 1       ; R4(R5,...)
 85 [-]: GETUPVAL  R4 U0        ; R4 := U0
 86 [-]: MOVE      R5 R0        ; R5 := R0
 87 [-]: SELF      R6 R3 K18    ; R7 := R3; R6 := R3["0x6E1FFCCD"]
 88 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 89 [-]: CALL      R4 0 1       ; R4(R5,...)
 90 [-]: GETUPVAL  R4 U0        ; R4 := U0
 91 [-]: MOVE      R5 R0        ; R5 := R0
 92 [-]: SELF      R6 R3 K19    ; R7 := R3; R6 := R3["0x3329FBFF"]
 93 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 94 [-]: CALL      R4 0 1       ; R4(R5,...)
 95 [-]: GETUPVAL  R4 U0        ; R4 := U0
 96 [-]: MOVE      R5 R0        ; R5 := R0
 97 [-]: SELF      R6 R3 K20    ; R7 := R3; R6 := R3["0x4FA1109B"]
 98 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 99 [-]: CALL      R4 0 1       ; R4(R5,...)
100 [-]: GETUPVAL  R4 U0        ; R4 := U0
101 [-]: MOVE      R5 R0        ; R5 := R0
102 [-]: SELF      R6 R3 K21    ; R7 := R3; R6 := R3["0xAB4E6F2A"]
103 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
104 [-]: CALL      R4 0 1       ; R4(R5,...)
105 [-]: GETUPVAL  R4 U0        ; R4 := U0
106 [-]: MOVE      R5 R0        ; R5 := R0
107 [-]: SELF      R6 R3 K22    ; R7 := R3; R6 := R3["0x70666039"]
108 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
109 [-]: CALL      R4 0 1       ; R4(R5,...)
110 [-]: GETUPVAL  R4 U0        ; R4 := U0
111 [-]: MOVE      R5 R0        ; R5 := R0
112 [-]: SELF      R6 R3 K23    ; R7 := R3; R6 := R3["0xC7873095"]
113 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
114 [-]: CALL      R4 0 1       ; R4(R5,...)
115 [-]: GETUPVAL  R4 U0        ; R4 := U0
116 [-]: MOVE      R5 R0        ; R5 := R0
117 [-]: SELF      R6 R3 K24    ; R7 := R3; R6 := R3["0x44384E3E"]
118 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
119 [-]: CALL      R4 0 1       ; R4(R5,...)
120 [-]: GETUPVAL  R4 U0        ; R4 := U0
121 [-]: MOVE      R5 R0        ; R5 := R0
122 [-]: SELF      R6 R3 K25    ; R7 := R3; R6 := R3["0xC814E302"]
123 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
124 [-]: CALL      R4 0 1       ; R4(R5,...)
125 [-]: RETURN    R0 2         ; return R0
126 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 2803
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0["0x5DB0BD4"]
  2 [-]: GETGLOBAL R6 K1        ; R6 := 0x9FAED6BC
  3 [-]: SELF      R7 R1 K2     ; R8 := R1; R7 := R1["0x616C74B6"]
  4 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
  5 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
  6 [-]: MOVE      R7 R0        ; R7 := R0
  7 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  8 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1["0x3077BE70"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 11 [-]: MOVE      R7 R5        ; R7 := R5
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: TEST      R6 1         ; if R6 then PC := 27
 14 [-]: JMP       27           ; PC := 27
 15 [-]: SELF      R6 R5 K5     ; R7 := R5; R6 := R5["0x8B598ED4"]
 16 [-]: GETGLOBAL R8 K6        ; R8 := gRecipeItemType
 17 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 18 [-]: TEST      R6 0         ; if not R6 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: SELF      R6 R0 K0     ; R7 := R0; R6 := R0["0x5DB0BD4"]
 21 [-]: LOADK     R8 K7        ; R8 := "/Lotus/Language/Items/BlueprintAndItem"
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 24 [-]: SETTABLE  R10 K8 R4    ; R10["ITEM"] := R4
 25 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 26 [-]: MOVE      R4 R6        ; R4 := R6
 27 [-]: SELF      R6 R1 K9     ; R7 := R1; R6 := R1["0x8292A1EF"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := Engine
 30 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["Item_FusionBundles"]
 31 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: SELF      R6 R1 K12    ; R7 := R1; R6 := R1["0x41604216"]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: UNM       R6 R6        ; R6 := - R6
 36 [-]: LOADK     R7 K13       ; R7 := "<FUSION_POINTS>"
 37 [-]: TEST      R3 1         ; if R3 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: SELF      R8 R0 K0     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 40 [-]: LOADK     R10 K13      ; R10 := "<FUSION_POINTS>"
 41 [-]: MOVE      R11 R1       ; R11 := R1
 42 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 43 [-]: MOVE      R7 R8        ; R7 := R8
 44 [-]: MOVE      R8 R7        ; R8 := R7
 45 [-]: GETUPVAL  R9 U0        ; R9 := U0
 46 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0x7E197415"]
 47 [-]: SELF      R10 R1 K15   ; R11 := R1; R10 := R1["0xE10719C5"]
 48 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 49 [-]: MUL       R10 R6 R10   ; R10 := R6 * R10
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: CONCAT    R4 R8 R9     ; R4 := R8 .. R9
 52 [-]: JMP       60           ; PC := 60
 53 [-]: LT        0 K16 R2     ; if 1 >= R2 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: MOVE      R8 R4        ; R8 := R4
 56 [-]: LOADK     R9 K17       ; R9 := " ("
 57 [-]: MOVE      R10 R2       ; R10 := R2
 58 [-]: LOADK     R11 K18      ; R11 := ")"
 59 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 60 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
 61 [-]: MOVE      R9 R5        ; R9 := R5
 62 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 63 [-]: TEST      R8 1         ; if R8 then PC := 109
 64 [-]: JMP       109          ; PC := 109
 65 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 68 [-]: TEST      R8 0         ; if not R8 then PC := 81
 69 [-]: JMP       81           ; PC := 81
 70 [-]: LOADK     R8 K19       ; R8 := "U"
 71 [-]: GETGLOBAL R9 K20       ; R9 := 0x7C282057
 72 [-]: MOVE      R10 R5       ; R10 := R5
 73 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 74 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0x6F399EDE"]
 75 [-]: LOADK     R11 K22      ; R11 := ""
 76 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 77 [-]: LOADK     R10 K23      ; R10 := " "
 78 [-]: MOVE      R11 R4       ; R11 := R4
 79 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 80 [-]: JMP       109          ; PC := 109
 81 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 82 [-]: GETUPVAL  R10 U2       ; R10 := U2
 83 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 84 [-]: TEST      R8 0         ; if not R8 then PC := 97
 85 [-]: JMP       97           ; PC := 97
 86 [-]: LOADK     R8 K24       ; R8 := "R"
 87 [-]: GETGLOBAL R9 K20       ; R9 := 0x7C282057
 88 [-]: MOVE      R10 R5       ; R10 := R5
 89 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 90 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0x6F399EDE"]
 91 [-]: LOADK     R11 K22      ; R11 := ""
 92 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 93 [-]: LOADK     R10 K23      ; R10 := " "
 94 [-]: MOVE      R11 R4       ; R11 := R4
 95 [-]: CONCAT    R4 R8 R11    ; R4 := R8 .. R9 .. R10 .. R11
 96 [-]: JMP       109          ; PC := 109
 97 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 98 [-]: GETGLOBAL R10 K25      ; R10 := gKeyChainItemType
 99 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
100 [-]: TEST      R8 0         ; if not R8 then PC := 109
101 [-]: JMP       109          ; PC := 109
102 [-]: SELF      R8 R0 K0     ; R9 := R0; R8 := R0["0x5DB0BD4"]
103 [-]: LOADK     R10 K26      ; R10 := "/Lotus/Language/Menu/MissionReward_Quest"
104 [-]: MOVE      R11 R0       ; R11 := R0
105 [-]: NEWTABLE  R12 0 1      ; R12 := {}
106 [-]: SETTABLE  R12 K27 R4   ; R12["QUEST"] := R4
107 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
108 [-]: MOVE      R4 R8        ; R4 := R8
109 [-]: RETURN    R4 2         ; return R4
110 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 2835
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  2 [-]: CLOSURE   R6 0         ; R6 := closure(Function #163.1)
  3 [-]: MOVE      R0 R2        ; R0 := R2
  4 [-]: MOVE      R0 R5        ; R0 := R5
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: GETTABLE  R7 R1 K0     ; R7 := R1["credits"]
  7 [-]: LT        0 K1 R7      ; if 0 >= R7 then PC := 25
  8 [-]: JMP       25           ; PC := 25
  9 [-]: LOADK     R7 K2        ; R7 := "<CREDITS>"
 10 [-]: TEST      R3 1         ; if R3 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R8 R0 K3     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 13 [-]: LOADK     R10 K2       ; R10 := "<CREDITS>"
 14 [-]: MOVE      R11 R1       ; R11 := R1
 15 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 16 [-]: MOVE      R7 R8        ; R7 := R8
 17 [-]: MOVE      R8 R6        ; R8 := R6
 18 [-]: MOVE      R9 R7        ; R9 := R7
 19 [-]: GETUPVAL  R10 U0       ; R10 := U0
 20 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0x7E197415"]
 21 [-]: GETTABLE  R11 R1 K0    ; R11 := R1["credits"]
 22 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 23 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 24 [-]: CALL      R8 2 1       ; R8(R9)
 25 [-]: GETTABLE  R8 R1 K5     ; R8 := R1["items"]
 26 [-]: LOADK     R9 K6        ; R9 := 1
 27 [-]: LEN       R10 R8       ; R10 := # R8
 28 [-]: LOADK     R11 K6       ; R11 := 1
 29 [-]: FORPREP   R9 45        ; R9 -= R11; PC := 45
 30 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 31 [-]: GETGLOBAL R14 K7       ; R14 := 0x400E7765
 32 [-]: MOVE      R15 R13      ; R15 := R13
 33 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 34 [-]: TEST      R14 1        ; if R14 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETUPVAL  R14 U1       ; R14 := U1
 37 [-]: MOVE      R15 R0       ; R15 := R0
 38 [-]: MOVE      R16 R13      ; R16 := R13
 39 [-]: LOADK     R17 K6       ; R17 := 1
 40 [-]: MOVE      R18 R3       ; R18 := R3
 41 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 42 [-]: MOVE      R15 R6       ; R15 := R6
 43 [-]: MOVE      R16 R14      ; R16 := R14
 44 [-]: CALL      R15 2 1      ; R15(R16)
 45 [-]: FORLOOP   R9 30        ; R9 += R11; if R9 <= R10 then begin PC := 30; R12 := R9 end
 46 [-]: GETTABLE  R15 R1 K8    ; R15 := R1["countedStoreItems"]
 47 [-]: LOADK     R16 K6       ; R16 := 1
 48 [-]: LEN       R17 R15      ; R17 := # R15
 49 [-]: LOADK     R18 K6       ; R18 := 1
 50 [-]: FORPREP   R16 67       ; R16 -= R18; PC := 67
 51 [-]: GETTABLE  R20 R15 R19  ; R20 := R15[R19]
 52 [-]: GETTABLE  R21 R20 K9   ; R21 := R20["mStoreItem"]
 53 [-]: GETGLOBAL R22 K7       ; R22 := 0x400E7765
 54 [-]: MOVE      R23 R21      ; R23 := R21
 55 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 56 [-]: TEST      R22 1        ; if R22 then PC := 67
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETUPVAL  R22 U1       ; R22 := U1
 59 [-]: MOVE      R23 R0       ; R23 := R0
 60 [-]: MOVE      R24 R21      ; R24 := R21
 61 [-]: GETTABLE  R25 R20 K10  ; R25 := R20["mItemCount"]
 62 [-]: MOVE      R26 R3       ; R26 := R3
 63 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
 64 [-]: MOVE      R23 R6       ; R23 := R6
 65 [-]: MOVE      R24 R22      ; R24 := R22
 66 [-]: CALL      R23 2 1      ; R23(R24)
 67 [-]: FORLOOP   R16 51       ; R16 += R18; if R16 <= R17 then begin PC := 51; R19 := R16 end
 68 [-]: GETTABLE  R23 R1 K11   ; R23 := R1["countedItems"]
 69 [-]: LOADK     R24 K6       ; R24 := 1
 70 [-]: LEN       R25 R23      ; R25 := # R23
 71 [-]: LOADK     R26 K6       ; R26 := 1
 72 [-]: FORPREP   R24 138      ; R24 -= R26; PC := 138
 73 [-]: GETTABLE  R28 R1 K11   ; R28 := R1["countedItems"]
 74 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
 75 [-]: GETGLOBAL R29 K7       ; R29 := 0x400E7765
 76 [-]: GETTABLE  R30 R28 K12  ; R30 := R28["mItemType"]
 77 [-]: CALL      R29 2 2      ; R29 := R29(R30)
 78 [-]: TEST      R29 1        ; if R29 then PC := 138
 79 [-]: JMP       138          ; PC := 138
 80 [-]: LOADK     R29 K13      ; R29 := ""
 81 [-]: GETTABLE  R30 R28 K12  ; R30 := R28["mItemType"]
 82 [-]: SELF      R30 R30 K14  ; R31 := R30; R30 := R30["0x8B598ED4"]
 83 [-]: GETGLOBAL R32 K15      ; R32 := gRecipeItemType
 84 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
 85 [-]: TEST      R30 0        ; if not R30 then PC := 104
 86 [-]: JMP       104          ; PC := 104
 87 [-]: GETGLOBAL R30 K16      ; R30 := 0x7C282057
 88 [-]: GETTABLE  R31 R28 K12  ; R31 := R28["mItemType"]
 89 [-]: CALL      R30 2 2      ; R30 := R30(R31)
 90 [-]: GETGLOBAL R31 K7       ; R31 := 0x400E7765
 91 [-]: MOVE      R32 R30      ; R32 := R30
 92 [-]: CALL      R31 2 2      ; R31 := R31(R32)
 93 [-]: TEST      R31 1        ; if R31 then PC := 112
 94 [-]: JMP       112          ; PC := 112
 95 [-]: SELF      R31 R0 K3    ; R32 := R0; R31 := R0["0x5DB0BD4"]
 96 [-]: GETGLOBAL R33 K17      ; R33 := 0x9FAED6BC
 97 [-]: SELF      R34 R30 K18  ; R35 := R30; R34 := R30["0x616C74B6"]
 98 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
 99 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
100 [-]: MOVE      R34 R0       ; R34 := R0
101 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
102 [-]: MOVE      R29 R31      ; R29 := R31
103 [-]: JMP       112          ; PC := 112
104 [-]: SELF      R31 R0 K3    ; R32 := R0; R31 := R0["0x5DB0BD4"]
105 [-]: GETGLOBAL R33 K17      ; R33 := 0x9FAED6BC
106 [-]: SELF      R34 R28 K19  ; R35 := R28; R34 := R28["0x208D01AA"]
107 [-]: CALL      R34 2 0      ; R34,... := R34(R35)
108 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
109 [-]: MOVE      R34 R0       ; R34 := R0
110 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
111 [-]: MOVE      R29 R31      ; R29 := R31
112 [-]: GETTABLE  R31 R28 K12  ; R31 := R28["mItemType"]
113 [-]: SELF      R31 R31 K14  ; R32 := R31; R31 := R31["0x8B598ED4"]
114 [-]: GETGLOBAL R33 K20      ; R33 := gFusionBundleType
115 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
116 [-]: TEST      R31 0        ; if not R31 then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: SELF      R31 R28 K21  ; R32 := R28; R31 := R28["0x8F2E28E1"]
119 [-]: CALL      R31 2 2      ; R31 := R31(R32)
120 [-]: UNM       R31 R31      ; R31 := - R31
121 [-]: GETTABLE  R32 R28 K10  ; R32 := R28["mItemCount"]
122 [-]: MUL       R32 R31 R32  ; R32 := R31 * R32
123 [-]: LOADK     R33 K22      ; R33 := " "
124 [-]: MOVE      R34 R29      ; R34 := R29
125 [-]: CONCAT    R29 R32 R34  ; R29 := R32 .. R33 .. R34
126 [-]: JMP       135          ; PC := 135
127 [-]: GETTABLE  R32 R28 K10  ; R32 := R28["mItemCount"]
128 [-]: LT        0 K6 R32     ; if 1 >= R32 then PC := 135
129 [-]: JMP       135          ; PC := 135
130 [-]: MOVE      R32 R29      ; R32 := R29
131 [-]: LOADK     R33 K23      ; R33 := " ("
132 [-]: GETTABLE  R34 R28 K10  ; R34 := R28["mItemCount"]
133 [-]: LOADK     R35 K24      ; R35 := ")"
134 [-]: CONCAT    R29 R32 R35  ; R29 := R32 .. R33 .. R34 .. R35
135 [-]: MOVE      R32 R6       ; R32 := R6
136 [-]: MOVE      R33 R29      ; R33 := R29
137 [-]: CALL      R32 2 1      ; R32(R33)
138 [-]: FORLOOP   R24 73       ; R24 += R26; if R24 <= R25 then begin PC := 73; R27 := R24 end
139 [-]: EQ        0 R4 K25     ; if R4 ~= nil then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: LOADK     R4 K13       ; R4 := ""
142 [-]: GETUPVAL  R32 U0       ; R32 := U0
143 [-]: GETTABLE  R32 R32 K26  ; R32 := R32["0xF81722A2"]
144 [-]: MOVE      R33 R2       ; R33 := R2
145 [-]: MOVE      R34 R5       ; R34 := R5
146 [-]: MOVE      R35 R4       ; R35 := R4
147 [-]: TAILCALL  R32 4 0      ; R32,... := R32(R33,R34,R35)
148 [-]: RETURN    R32 0        ; return R32,...
149 [-]: RETURN    R0 1         ; return 


; Function #163.1:
;
; Name:            
; Defined at line: 2839
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R1 K0        ; R1 := table
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R0 R2        ; R0 := R2
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: LOADK     R2 K3        ; R2 := " + "
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 19 [-]: MOVE      R1 R2        ; R1 := R2
 20 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 2914
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x8B598ED4"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gStoreItemType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
  7 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  8 [-]: RETURN    R1 0         ; return R1,...
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0xEAC5E738
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x12F3CEFA
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0["0x105AB39B"]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: LT        0 K6 R1      ; if 1 >= R1 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xF1A9732E"]
 26 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 27 [-]: RETURN    R1 0         ; return R1,...
 28 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0["0xCF3F0AF8"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 36 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1["0xF1A9732E"]
 37 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 38 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 39 [-]: TEST      R2 1         ; if R2 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1["0xF1A9732E"]
 42 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 43 [-]: RETURN    R2 0         ; return R2,...
 44 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0["0xF1A9732E"]
 45 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 46 [-]: RETURN    R2 0         ; return R2,...
 47 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 2943
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 2949
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R5 R0        ; R5 := R0
  2 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["items"]
  3 [-]: LEN       R6 R6        ; R6 := # R6
  4 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["items"]
  7 [-]: GETTABLE  R2 R6 K2     ; R2 := R6[1]
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["countedItems"]
 10 [-]: LEN       R6 R6        ; R6 := # R6
 11 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["countedItems"]
 14 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[1]
 15 [-]: GETTABLE  R3 R6 K4     ; R3 := R6["mItemType"]
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["countedStoreItems"]
 18 [-]: LEN       R6 R6        ; R6 := # R6
 19 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["countedStoreItems"]
 22 [-]: GETTABLE  R6 R6 K2     ; R6 := R6[1]
 23 [-]: GETTABLE  R3 R6 K6     ; R3 := R6["mStoreItem"]
 24 [-]: EQ        1 R2 K7      ; if R2 == nil then PC := 48
 25 [-]: JMP       48           ; PC := 48
 26 [-]: SELF      R6 R2 K8     ; R7 := R2; R6 := R2["0x3077BE70"]
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: MOVE      R4 R6        ; R4 := R6
 29 [-]: SELF      R6 R2 K9     ; R7 := R2; R6 := R2["0xF1A9732E"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: MOVE      R1 R6        ; R1 := R6
 32 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 33 [-]: SELF      R7 R2 K8     ; R8 := R2; R7 := R2["0x3077BE70"]
 34 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 35 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 36 [-]: TEST      R6 1         ; if R6 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: SELF      R6 R2 K8     ; R7 := R2; R6 := R2["0x3077BE70"]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x8B598ED4"]
 41 [-]: GETGLOBAL R8 K12       ; R8 := gRecipeItemType
 42 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 43 [-]: MOVE      R5 R6        ; R5 := R6
 44 [-]: JMP       75           ; PC := 75
 45 [-]: MOVE      R5 R0        ; R5 := R0
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: JMP       75           ; PC := 75
 48 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 70
 49 [-]: JMP       70           ; PC := 70
 50 [-]: MOVE      R4 R3        ; R4 := R3
 51 [-]: GETGLOBAL R6 K13       ; R6 := 0x7C282057
 52 [-]: MOVE      R7 R3        ; R7 := R3
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: MOVE      R3 R6        ; R3 := R6
 55 [-]: SELF      R6 R3 K11    ; R7 := R3; R6 := R3["0x8B598ED4"]
 56 [-]: GETGLOBAL R8 K12       ; R8 := gRecipeItemType
 57 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 58 [-]: MOVE      R5 R6        ; R5 := R6
 59 [-]: TEST      R5 0         ; if not R5 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETUPVAL  R6 U0        ; R6 := U0
 62 [-]: MOVE      R7 R3        ; R7 := R3
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: MOVE      R1 R6        ; R1 := R6
 65 [-]: JMP       75           ; PC := 75
 66 [-]: SELF      R6 R3 K9     ; R7 := R3; R6 := R3["0xF1A9732E"]
 67 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 68 [-]: MOVE      R1 R6        ; R1 := R6
 69 [-]: JMP       75           ; PC := 75
 70 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["credits"]
 71 [-]: LT        0 K1 R6      ; if 0 >= R6 then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: GETGLOBAL R6 K15       ; R6 := _G
 74 [-]: GETTABLE  R1 R6 K16    ; R1 := R6["UITexture_CreditsIcon"]
 75 [-]: MOVE      R6 R1        ; R6 := R1
 76 [-]: MOVE      R7 R5        ; R7 := R5
 77 [-]: MOVE      R8 R4        ; R8 := R4
 78 [-]: RETURN    R6 4         ; return R6,R7,R8
 79 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 2985
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["credits"]
  3 [-]: LT        0 K1 R2      ; if 0 >= R2 then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETGLOBAL R2 K2        ; R2 := table
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xE6450C9D"]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: NEWTABLE  R4 0 2       ; R4 := {}
  9 [-]: GETGLOBAL R5 K5        ; R5 := _G
 10 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UITexture_CreditsIcon"]
 11 [-]: SETTABLE  R4 K4 R5     ; R4["Icon"] := R5
 12 [-]: SETTABLE  R4 K7 K8     ; R4["IsRecipe"] := "0x0"
 13 [-]: CALL      R2 3 1       ; R2(R3,R4)
 14 [-]: LOADK     R2 K9        ; R2 := 1
 15 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["items"]
 16 [-]: LEN       R3 R3        ; R3 := # R3
 17 [-]: LOADK     R4 K9        ; R4 := 1
 18 [-]: FORPREP   R2 72        ; R2 -= R4; PC := 72
 19 [-]: GETGLOBAL R6 K11       ; R6 := 0x400E7765
 20 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["items"]
 21 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 22 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x3077BE70"]
 23 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 24 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 25 [-]: TEST      R6 1         ; if R6 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["items"]
 28 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 29 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x3077BE70"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6["0x8B598ED4"]
 32 [-]: GETGLOBAL R8 K14       ; R8 := gRecipeItemType
 33 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 34 [-]: JMP       37           ; PC := 37
 35 [-]: MOVE      R6 R0        ; R6 := R0
 36 [-]: MOVE      R6 R1        ; R6 := R1
 37 [-]: GETGLOBAL R7 K11       ; R7 := 0x400E7765
 38 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["items"]
 39 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x3077BE70"]
 41 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 42 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 43 [-]: TEST      R7 1         ; if R7 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["items"]
 46 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 47 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x3077BE70"]
 48 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 49 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x8B598ED4"]
 50 [-]: GETGLOBAL R9 K15       ; R9 := gLotusArtifactUpgradeType
 51 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 52 [-]: JMP       55           ; PC := 55
 53 [-]: MOVE      R7 R0        ; R7 := R0
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: GETGLOBAL R8 K2        ; R8 := table
 56 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["0xE6450C9D"]
 57 [-]: MOVE      R9 R1        ; R9 := R1
 58 [-]: NEWTABLE  R10 0 4      ; R10 := {}
 59 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["items"]
 60 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 61 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0xF1A9732E"]
 62 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 63 [-]: SETTABLE  R10 K4 R11   ; R10["Icon"] := R11
 64 [-]: SETTABLE  R10 K7 R6    ; R10["IsRecipe"] := R6
 65 [-]: SETTABLE  R10 K17 R7   ; R10["IsMod"] := R7
 66 [-]: GETTABLE  R11 R0 K10   ; R11 := R0["items"]
 67 [-]: GETTABLE  R11 R11 R5   ; R11 := R11[R5]
 68 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x3077BE70"]
 69 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 70 [-]: SETTABLE  R10 K18 R11  ; R10["ItemType"] := R11
 71 [-]: CALL      R8 3 1       ; R8(R9,R10)
 72 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 73 [-]: GETTABLE  R8 R0 K19    ; R8 := R0["countedStoreItems"]
 74 [-]: LOADK     R9 K9        ; R9 := 1
 75 [-]: LEN       R10 R8       ; R10 := # R8
 76 [-]: LOADK     R11 K9       ; R11 := 1
 77 [-]: FORPREP   R9 120       ; R9 -= R11; PC := 120
 78 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 79 [-]: GETTABLE  R14 R13 K20  ; R14 := R13["mStoreItem"]
 80 [-]: GETGLOBAL R15 K11      ; R15 := 0x400E7765
 81 [-]: MOVE      R16 R14      ; R16 := R14
 82 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 83 [-]: TEST      R15 1        ; if R15 then PC := 120
 84 [-]: JMP       120          ; PC := 120
 85 [-]: SELF      R15 R14 K12  ; R16 := R14; R15 := R14["0x3077BE70"]
 86 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 87 [-]: GETGLOBAL R16 K11      ; R16 := 0x400E7765
 88 [-]: MOVE      R17 R15      ; R17 := R15
 89 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 90 [-]: TEST      R16 1        ; if R16 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: SELF      R16 R15 K13  ; R17 := R15; R16 := R15["0x8B598ED4"]
 93 [-]: GETGLOBAL R18 K14      ; R18 := gRecipeItemType
 94 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 95 [-]: JMP       98           ; PC := 98
 96 [-]: MOVE      R16 R0       ; R16 := R0
 97 [-]: MOVE      R16 R1       ; R16 := R1
 98 [-]: GETGLOBAL R17 K11      ; R17 := 0x400E7765
 99 [-]: MOVE      R18 R15      ; R18 := R15
100 [-]: CALL      R17 2 2      ; R17 := R17(R18)
101 [-]: TEST      R17 1        ; if R17 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: SELF      R17 R15 K13  ; R18 := R15; R17 := R15["0x8B598ED4"]
104 [-]: GETGLOBAL R19 K15      ; R19 := gLotusArtifactUpgradeType
105 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
106 [-]: JMP       109          ; PC := 109
107 [-]: MOVE      R17 R0       ; R17 := R0
108 [-]: MOVE      R17 R1       ; R17 := R1
109 [-]: GETGLOBAL R18 K2       ; R18 := table
110 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["0xE6450C9D"]
111 [-]: MOVE      R19 R1       ; R19 := R1
112 [-]: NEWTABLE  R20 0 4      ; R20 := {}
113 [-]: SELF      R21 R14 K16  ; R22 := R14; R21 := R14["0xF1A9732E"]
114 [-]: CALL      R21 2 2      ; R21 := R21(R22)
115 [-]: SETTABLE  R20 K4 R21   ; R20["Icon"] := R21
116 [-]: SETTABLE  R20 K7 R16   ; R20["IsRecipe"] := R16
117 [-]: SETTABLE  R20 K17 R17  ; R20["IsMod"] := R17
118 [-]: SETTABLE  R20 K18 R15  ; R20["ItemType"] := R15
119 [-]: CALL      R18 3 1      ; R18(R19,R20)
120 [-]: FORLOOP   R9 78        ; R9 += R11; if R9 <= R10 then begin PC := 78; R12 := R9 end
121 [-]: LOADK     R18 K9       ; R18 := 1
122 [-]: GETTABLE  R19 R0 K21   ; R19 := R0["countedItems"]
123 [-]: LEN       R19 R19      ; R19 := # R19
124 [-]: LOADK     R20 K9       ; R20 := 1
125 [-]: FORPREP   R18 157      ; R18 -= R20; PC := 157
126 [-]: GETGLOBAL R22 K22      ; R22 := 0x7C282057
127 [-]: GETTABLE  R23 R0 K21   ; R23 := R0["countedItems"]
128 [-]: GETTABLE  R23 R23 R21  ; R23 := R23[R21]
129 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["mItemType"]
130 [-]: CALL      R22 2 2      ; R22 := R22(R23)
131 [-]: SELF      R23 R22 K13  ; R24 := R22; R23 := R22["0x8B598ED4"]
132 [-]: GETGLOBAL R25 K14      ; R25 := gRecipeItemType
133 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
134 [-]: SELF      R24 R22 K13  ; R25 := R22; R24 := R22["0x8B598ED4"]
135 [-]: GETGLOBAL R26 K15      ; R26 := gLotusArtifactUpgradeType
136 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
137 [-]: LOADNIL   R25 R25      ; R25 := nil
138 [-]: TEST      R23 0        ; if not R23 then PC := 145
139 [-]: JMP       145          ; PC := 145
140 [-]: GETUPVAL  R26 U0       ; R26 := U0
141 [-]: MOVE      R27 R22      ; R27 := R22
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: MOVE      R25 R26      ; R25 := R26
144 [-]: JMP       148          ; PC := 148
145 [-]: SELF      R26 R22 K16  ; R27 := R22; R26 := R22["0xF1A9732E"]
146 [-]: CALL      R26 2 2      ; R26 := R26(R27)
147 [-]: MOVE      R25 R26      ; R25 := R26
148 [-]: GETGLOBAL R26 K2       ; R26 := table
149 [-]: GETTABLE  R26 R26 K3   ; R26 := R26["0xE6450C9D"]
150 [-]: MOVE      R27 R1       ; R27 := R1
151 [-]: NEWTABLE  R28 0 4      ; R28 := {}
152 [-]: SETTABLE  R28 K4 R25   ; R28["Icon"] := R25
153 [-]: SETTABLE  R28 K7 R23   ; R28["IsRecipe"] := R23
154 [-]: SETTABLE  R28 K17 R24  ; R28["IsMod"] := R24
155 [-]: SETTABLE  R28 K18 R22  ; R28["ItemType"] := R22
156 [-]: CALL      R26 3 1      ; R26(R27,R28)
157 [-]: FORLOOP   R18 126      ; R18 += R20; if R18 <= R19 then begin PC := 126; R21 := R18 end
158 [-]: RETURN    R1 2         ; return R1
159 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 3031
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 3035
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := Lotus_Game
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xA866E1C8"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  5 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["MT_RECOVERY"]
  6 [-]: SETTABLE  R0 K2 R1     ; R0["missionType"] := R1
  7 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  8 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["FC_CORPUS"]
  9 [-]: SETTABLE  R0 K4 R1     ; R0["faction"] := R1
 10 [-]: LOADK     R1 K6        ; R1 := "/Lotus/Levels/Proc/Corpus/CorpusGasCityHarvester"
 11 [-]: LOADK     R2 K7        ; R2 := "/Lotus/Types/Game/EnemySpecs/CorpusSquadA"
 12 [-]: GETGLOBAL R3 K9        ; R3 := 0x2C00D429
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SETTABLE  R0 K8 R3     ; R0["levelOverride"] := R3
 16 [-]: GETGLOBAL R3 K11       ; R3 := 0x7C282057
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: SETTABLE  R0 K10 R3    ; R0["enemySpec"] := R3
 20 [-]: SETTABLE  R0 K12 K13   ; R0["soloMode"] := "0x1"
 21 [-]: GETGLOBAL R3 K15       ; R3 := 0xEC274B1A
 22 [-]: LOADK     R4 K16       ; R4 := "/Lotus/Language/Game/Jupiter"
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: SETTABLE  R0 K14 R3    ; R0["location"] := R3
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 3056
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6374FD98
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 K1        ; R3 := 0
  4 [-]: LOADK     R4 K2        ; R4 := 100
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K3        ; R2 := math
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xF7005A7B"]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K3        ; R3 := math
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xF93F7CC8"]
 12 [-]: GETGLOBAL R4 K3        ; R4 := math
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF7005A7B"]
 14 [-]: MUL       R5 R1 K6     ; R5 := R1 * 10
 15 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 16 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 17 [-]: MOD       R3 R3 K6     ; R3 := R3 % 10
 18 [-]: EQ        0 R2 K1      ; if R2 ~= 0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: EQ        1 R1 K1      ; if R1 == 0 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R3 K7        ; R3 := 1
 25 [-]: GETGLOBAL R4 K8        ; R4 := 0x9FAED6BC
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: EQ        1 R3 K1      ; if R3 == 0 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: MOVE      R5 R4        ; R5 := R4
 31 [-]: LOADK     R6 K9        ; R6 := "."
 32 [-]: MOVE      R7 R3        ; R7 := R3
 33 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 34 [-]: MOVE      R5 R4        ; R5 := R4
 35 [-]: LOADK     R6 K10       ; R6 := "%"
 36 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 37 [-]: RETURN    R4 2         ; return R4
 38 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 3076
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x930EC5CF"]
  3 [-]: LOADK     R2 K1        ; R2 := "AvatarLight"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xF81722A2"]
  6 [-]: GETGLOBAL R4 K3        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["InHub"]
  8 [-]: GETGLOBAL R5 K5        ; R5 := gBackgroundRegion
  9 [-]: LOADNIL   R6 R6        ; R6 := nil
 10 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 31
 16 [-]: JMP       31           ; PC := 31
 17 [-]: TEST      R0 0         ; if not R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0xEF5C4E85"]
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: GETGLOBAL R2 K8        ; R2 := gFlashMgr
 22 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x1089D053"]
 23 [-]: LOADK     R4 K10       ; R4 := "Graphics.DynamicLighting"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: SELF      R3 R1 K11    ; R4 := R1; R3 := R1["0x11C1A43E"]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: JMP       31           ; PC := 31
 29 [-]: SELF      R3 R1 K12    ; R4 := R1; R3 := R1["0x59052138"]
 30 [-]: CALL      R3 2 1       ; R3(R4)
 31 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 3089
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 3094
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["BackgroundMovie"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 24
  6 [-]: JMP       24           ; PC := 24
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x28609C89"]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xEC274B1A
 11 [-]: LOADK     R4 K5        ; R4 := "Kneel"
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K6        ; R1 := gRegion
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xA933C036"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETTABLE  R2 R1 K8     ; R2 := R1["postProcess"]
 21 [-]: SETTABLE  R2 K9 K10    ; R2["horizonDOF"] := 0
 22 [-]: GETGLOBAL R2 K1        ; R2 := _T
 23 [-]: SETTABLE  R2 K11 K12   ; R2["SelectedLoadOutPart"] := nil
 24 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 3107
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x93B1256B
  2 [-]: LOADK     R2 K1        ; R2 := "OnSaveLoadOutCompleteCommon"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: GETGLOBAL R2 K3        ; R2 := gGameRules
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x931066AE"]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: GETGLOBAL R1 K5        ; R1 := gMatchingService
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD5E03646"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETGLOBAL R2 K5        ; R2 := gMatchingService
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xE1C847EF"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 0         ; if not R2 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1["0xEB3F45BE"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: CALL      R3 1 2       ; R3 := R3()
 29 [-]: SETTABLE  R2 K9 R3     ; R2["eloRating"] := R3
 30 [-]: GETGLOBAL R3 K5        ; R3 := gMatchingService
 31 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0xA6A77FF7"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETGLOBAL R3 K5        ; R3 := gMatchingService
 36 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x9068148C"]
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 3126
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADK     R2 K2        ; R2 := " "
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
  8 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x4A8D7E2A"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
 11 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0["0x616C74B6"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x5EC7A3D2"]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: LOADNIL   R5 R5        ; R5 := nil
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: LOADK     R4 K7        ; R4 := "<p><font face=\"Noto Sans\"><b>"
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 19 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/LevelAbbreviation"
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: LOADK     R6 K2        ; R6 := " "
 23 [-]: GETGLOBAL R7 K9        ; R7 := 0x9FAED6BC
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LOADK     R8 K10       ; R8 := " </b>"
 27 [-]: MOVE      R9 R3        ; R9 := R3
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: LOADK     R11 K11      ; R11 := "</font></p>"
 30 [-]: CONCAT    R4 R4 R11    ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 3137
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gCorpusHarvesterFinisherVictim"]
  3 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R1 R1        ; R1 := R1
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 40
 11 [-]: JMP       40           ; PC := 40
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 13 [-]: GETGLOBAL R2 K3        ; R2 := gGameRules
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R1 K3        ; R1 := gGameRules
 18 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x48685460"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 40
 24 [-]: JMP       40           ; PC := 40
 25 [-]: LOADK     R2 K5        ; R2 := 1
 26 [-]: LEN       R3 R1        ; R3 := # R1
 27 [-]: LOADK     R4 K5        ; R4 := 1
 28 [-]: FORPREP   R2 39        ; R2 -= R4; PC := 39
 29 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 30 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["playerName"]
 31 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0["0xDE5882DD"]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x144A28F9"]
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R6 R1        ; R6 := R1
 38 [-]: RETURN    R6 2         ; return R6
 39 [-]: FORLOOP   R2 29        ; R2 += R4; if R2 <= R3 then begin PC := 29; R5 := R2 end
 40 [-]: MOVE      R6 R0        ; R6 := R0
 41 [-]: RETURN    R6 2         ; return R6
 42 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 3160
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := UI_MODE_IN_GAME
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K3        ; R2 := gClient
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R1 K3        ; R1 := gClient
 12 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xAA6BC1F3"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 16 [-]: GETGLOBAL R2 K5        ; R2 := gGameRules
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 52
 19 [-]: JMP       52           ; PC := 52
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETGLOBAL R0 K7        ; R0 := UI_MODE_IN_SPACE_SHIP
 30 [-]: JMP       52           ; PC := 52
 31 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 33 [-]: GETGLOBAL R3 K8        ; R3 := gLotusDojoGameRulesType
 34 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 35 [-]: TEST      R1 1         ; if R1 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 38 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 39 [-]: GETGLOBAL R3 K9        ; R3 := gLotusDuelGameRulesType
 40 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 41 [-]: TEST      R1 0         ; if not R1 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: GETGLOBAL R0 K10       ; R0 := UI_MODE_IN_DOJO
 44 [-]: JMP       52           ; PC := 52
 45 [-]: GETGLOBAL R1 K5        ; R1 := gGameRules
 46 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8B598ED4"]
 47 [-]: GETGLOBAL R3 K11       ; R3 := gLotusHubGameRulesType
 48 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: GETGLOBAL R0 K12       ; R0 := UI_MODE_IN_SPACE_HUB
 52 [-]: RETURN    R0 2         ; return R0
 53 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 3185
; #Upvalues:       0
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R10 K0       ; R10 := Engine
  2 [-]: GETTABLE  R10 R10 K1   ; R10 := R10["0x9490FE70"]
  3 [-]: CALL      R10 1 2      ; R10 := R10()
  4 [-]: TEST      R10 1        ; if R10 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R10 K0       ; R10 := Engine
  7 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["0x212137BC"]
  8 [-]: CALL      R10 1 2      ; R10 := R10()
  9 [-]: TEST      R10 0        ; if not R10 then PC := 51
 10 [-]: JMP       51           ; PC := 51
 11 [-]: GETGLOBAL R10 K0       ; R10 := Engine
 12 [-]: GETTABLE  R10 R10 K3   ; R10 := R10["0xC5E0B002"]
 13 [-]: CALL      R10 1 2      ; R10 := R10()
 14 [-]: TEST      R10 0        ; if not R10 then PC := 51
 15 [-]: JMP       51           ; PC := 51
 16 [-]: GETGLOBAL R10 K4       ; R10 := 0xE6DC43B0
 17 [-]: MOVE      R11 R1       ; R11 := R1
 18 [-]: NEWTABLE  R12 0 0      ; R12 := {}
 19 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 20 [-]: MOVE      R1 R10       ; R1 := R10
 21 [-]: TEST      R8 1         ; if R8 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: EQ        1 R3 K5      ; if R3 == 0 then PC := 39
 25 [-]: JMP       39           ; PC := 39
 26 [-]: GETGLOBAL R10 K6       ; R10 := gRegion
 27 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x134B434E"]
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: MOVE      R13 R1       ; R13 := R1
 30 [-]: MOVE      R14 R1       ; R14 := R1
 31 [-]: MOVE      R15 R0       ; R15 := R0
 32 [-]: MOVE      R16 R0       ; R16 := R0
 33 [-]: MOVE      R17 R8       ; R17 := R8
 34 [-]: MOVE      R18 R5       ; R18 := R5
 35 [-]: MOVE      R19 R3       ; R19 := R3
 36 [-]: TAILCALL  R10 10 0     ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19)
 37 [-]: RETURN    R10 0        ; return R10,...
 38 [-]: JMP       128          ; PC := 128
 39 [-]: GETGLOBAL R10 K6       ; R10 := gRegion
 40 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0xA502DAE1"]
 41 [-]: MOVE      R12 R2       ; R12 := R2
 42 [-]: MOVE      R13 R1       ; R13 := R1
 43 [-]: MOVE      R14 R1       ; R14 := R1
 44 [-]: MOVE      R15 R0       ; R15 := R0
 45 [-]: MOVE      R16 R0       ; R16 := R0
 46 [-]: MOVE      R17 R8       ; R17 := R8
 47 [-]: MOVE      R18 R5       ; R18 := R5
 48 [-]: TAILCALL  R10 9 0      ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18)
 49 [-]: RETURN    R10 0        ; return R10,...
 50 [-]: JMP       128          ; PC := 128
 51 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
 52 [-]: GETGLOBAL R11 K10      ; R11 := _G
 53 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["UIMovie_InputDialogMovie"]
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 1        ; if R10 then PC := 128
 56 [-]: JMP       128          ; PC := 128
 57 [-]: LOADNIL   R10 R10      ; R10 := nil
 58 [-]: GETGLOBAL R11 K9       ; R11 := 0x400E7765
 59 [-]: MOVE      R12 R0       ; R12 := R0
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: TEST      R11 1        ; if R11 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: SELF      R11 R0 K12   ; R12 := R0; R11 := R0["0x5FF274BB"]
 64 [-]: GETGLOBAL R13 K10      ; R13 := _G
 65 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["UIMovie_InputDialogMovie"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: MOVE      R10 R11      ; R10 := R11
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETGLOBAL R11 K13      ; R11 := gFlashMgr
 70 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x7548923C"]
 71 [-]: GETGLOBAL R13 K10      ; R13 := _G
 72 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["UIMovie_InputDialogMovie"]
 73 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 74 [-]: MOVE      R10 R11      ; R10 := R11
 75 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 76 [-]: LOADK     R13 K16      ; R13 := "SetYesTag"
 77 [-]: LOADK     R14 K17      ; R14 := "/Menu/Confirm_Item_Ok"
 78 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 79 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 80 [-]: LOADK     R13 K18      ; R13 := "SetNoTag"
 81 [-]: LOADK     R14 K19      ; R14 := "/Menu/Confirm_Item_Cancel"
 82 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 83 [-]: TEST      R7 0         ; if not R7 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
 86 [-]: LOADK     R13 K20      ; R13 := "SetCancelEnable"
 87 [-]: LOADK     R14 K21      ; R14 := "false"
 88 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 89 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
 90 [-]: LOADK     R13 K23      ; R13 := "SetCaption"
 91 [-]: NEWTABLE  R14 1 0      ; R14 := {}
 92 [-]: MOVE      R15 R1       ; R15 := R1
 93 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
 94 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 95 [-]: EQ        1 R9 K24     ; if R9 == nil then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
 98 [-]: LOADK     R13 K25      ; R13 := "SetText"
 99 [-]: NEWTABLE  R14 1 0      ; R14 := {}
100 [-]: MOVE      R15 R9       ; R15 := R9
101 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
102 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
103 [-]: TEST      R6 0         ; if not R6 then PC := 109
104 [-]: JMP       109          ; PC := 109
105 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
106 [-]: LOADK     R13 K26      ; R13 := "SetMultiline"
107 [-]: LOADK     R14 K27      ; R14 := ""
108 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
109 [-]: SELF      R11 R10 K22  ; R12 := R10; R11 := R10["0xB9C96BA0"]
110 [-]: LOADK     R13 K28      ; R13 := "SetContent"
111 [-]: NEWTABLE  R14 1 0      ; R14 := {}
112 [-]: MOVE      R15 R2       ; R15 := R2
113 [-]: SETLIST   R14 1 1      ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
114 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
115 [-]: EQ        1 R3 K5      ; if R3 == 0 then PC := 121
116 [-]: JMP       121          ; PC := 121
117 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
118 [-]: LOADK     R13 K29      ; R13 := "SetMaxChars"
119 [-]: MOVE      R14 R3       ; R14 := R3
120 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
121 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10["0x458F27A9"]
122 [-]: LOADK     R13 K30      ; R13 := "SetCallback"
123 [-]: MOVE      R14 R4       ; R14 := R4
124 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
125 [-]: MOVE      R11 R1       ; R11 := R1
126 [-]: MOVE      R12 R10      ; R12 := R10
127 [-]: RETURN    R11 3        ; return R11,R12
128 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 3224
; #Upvalues:       1
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETUPVAL  R10 U0       ; R10 := U0
  2 [-]: MOVE      R11 R0       ; R11 := R0
  3 [-]: MOVE      R12 R1       ; R12 := R1
  4 [-]: MOVE      R13 R2       ; R13 := R2
  5 [-]: MOVE      R14 R3       ; R14 := R3
  6 [-]: MOVE      R15 R4       ; R15 := R4
  7 [-]: MOVE      R16 R5       ; R16 := R5
  8 [-]: MOVE      R17 R6       ; R17 := R6
  9 [-]: MOVE      R18 R7       ; R18 := R7
 10 [-]: MOVE      R19 R8       ; R19 := R8
 11 [-]: MOVE      R20 R9       ; R20 := R9
 12 [-]: TAILCALL  R10 11 0     ; R10,... := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19,R20)
 13 [-]: RETURN    R10 0        ; return R10,...
 14 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 3228
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R0 K0        ; R0 := 0
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K0        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 31
 10 [-]: JMP       31           ; PC := 31
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x37E9308C"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: LOADK     R4 K6        ; R4 := 1
 21 [-]: LEN       R5 R3        ; R5 := # R3
 22 [-]: LOADK     R6 K6        ; R6 := 1
 23 [-]: FORPREP   R4 30        ; R4 -= R6; PC := 30
 24 [-]: GETGLOBAL R8 K7        ; R8 := gGameConfig
 25 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0x915FC77"]
 26 [-]: GETTABLE  R10 R3 R7    ; R10 := R3[R7]
 27 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["mTier"]
 28 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 29 [-]: ADD       R0 R0 R8     ; R0 := R0 + R8
 30 [-]: FORLOOP   R4 24        ; R4 += R6; if R4 <= R5 then begin PC := 24; R7 := R4 end
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 3244
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 31
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisible"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 28 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mAlertInfo"]
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mMissionInfo"]
 30 [-]: RETURN    R1 2         ; return R1
 31 [-]: LOADNIL   R1 R1        ; R1 := nil
 32 [-]: RETURN    R1 2         ; return R1
 33 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 3251
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 3255
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 3259
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 3263
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _G
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedGoalInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 3267
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 3271
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedBadlandInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 3275
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 3279
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CachedBadlandInfo"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: MOVE      R3 R0        ; R3 := R0
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: MOVE      R1 R2        ; R1 := R2
  9 [-]: JMP       51           ; PC := 51
 10 [-]: GETGLOBAL R2 K2        ; R2 := gPlayerProfileMgr
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 12 [-]: LOADK     R4 K4        ; R4 := 0
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K5        ; R3 := 0x400E7765
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x654F1092"]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 24 [-]: MOVE      R5 R3        ; R5 := R3
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3["0x2D0B8A86"]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: GETGLOBAL R5 K5        ; R5 := 0x400E7765
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 0         ; if not R5 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R5 R0        ; R5 := R0
 38 [-]: RETURN    R5 2         ; return R5
 39 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["mBadlandNodes"]
 40 [-]: LOADK     R6 K9        ; R6 := 1
 41 [-]: LEN       R7 R5        ; R7 := # R5
 42 [-]: LOADK     R8 K9        ; R8 := 1
 43 [-]: FORPREP   R6 50        ; R6 -= R8; PC := 50
 44 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 45 [-]: GETTABLE  R11 R10 K10  ; R11 := R10["mNode"]
 46 [-]: EQ        0 R11 R0     ; if R11 ~= R0 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: MOVE      R1 R10       ; R1 := R10
 49 [-]: JMP       51           ; PC := 51
 50 [-]: FORLOOP   R6 44        ; R6 += R8; if R6 <= R7 then begin PC := 44; R9 := R6 end
 51 [-]: TEST      R1 0         ; if not R1 then PC := 73
 52 [-]: JMP       73           ; PC := 73
 53 [-]: GETTABLE  R11 R1 K11   ; R11 := R1["mDefenderInfo"]
 54 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x315E860F"]
 55 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 56 [-]: TEST      R11 0        ; if not R11 then PC := 72
 57 [-]: JMP       72           ; PC := 72
 58 [-]: GETTABLE  R11 R1 K13   ; R11 := R1["mAttackerInfo"]
 59 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x315E860F"]
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: TEST      R11 0        ; if not R11 then PC := 72
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETGLOBAL R11 K14      ; R11 := Engine
 64 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["0xD09D7910"]
 65 [-]: GETTABLE  R12 R1 K13   ; R12 := R1["mAttackerInfo"]
 66 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["mDeploymentActivationTime"]
 67 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 68 [-]: LT        1 R11 K4     ; if R11 < 0 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: MOVE      R11 R0       ; R11 := R0
 71 [-]: MOVE      R11 R1       ; R11 := R1
 72 [-]: RETURN    R11 2        ; return R11
 73 [-]: MOVE      R11 R0       ; R11 := R0
 74 [-]: RETURN    R11 2        ; return R11
 75 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 3320
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 3324
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSyndicateMissions"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 30
  4 [-]: JMP       30           ; PC := 30
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSyndicateMissions"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 30
 12 [-]: JMP       30           ; PC := 30
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSyndicateMissions"]
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisible"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSyndicateMissions"]
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x9FAED6BC
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 28 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mMissionInfo"]
 29 [-]: RETURN    R1 2         ; return R1
 30 [-]: LOADNIL   R1 R1        ; R1 := nil
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 3331
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedSortieMissions"]
  6 [-]: TEST      R2 0         ; if not R2 then PC := 24
  7 [-]: JMP       24           ; PC := 24
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedSortieMissions"]
 10 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 11 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedSortieMissions"]
 15 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mShowInStarChart"]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETGLOBAL R2 K1        ; R2 := _T
 20 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedSortieMissions"]
 21 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mMissionInfo"]
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: LOADNIL   R2 R2        ; R2 := nil
 25 [-]: RETURN    R2 2         ; return R2
 26 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 3339
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := _G
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
  6 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 10 [-]: GETGLOBAL R3 K1        ; R3 := _G
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["CachedGoalInfo"]
 12 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mIcon"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
 19 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 20 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mIcon"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: GETGLOBAL R2 K1        ; R2 := _G
 23 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UITexture_Event"]
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 3347
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 3351
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := Lotus_Game
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x94A890AA"]
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: LOADNIL   R2 R2        ; R2 := nil
 10 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K0        ; R1 := ""
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["forceAllyFaction"]
 15 [-]: TEST      R3 0         ; if not R3 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: LOADK     R1 K6        ; R1 := "Crossfire"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["goalTag"]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K8        ; R1 := "KuvaSurvival"
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: MOVE      R4 R2        ; R4 := R2
 27 [-]: RETURN    R3 3         ; return R3,R4
 28 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 3371
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 3375
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["FC_GRINEER"]
  4 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K3        ; R1 := "Grineer"
  7 [-]: JMP       25           ; PC := 25
  8 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["FC_CORPUS"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K5        ; R1 := "Corpus"
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["FC_INFESTATION"]
 16 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R1 K7        ; R1 := "Infestation"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K1        ; R2 := Lotus_Game
 21 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["FC_OROKIN"]
 22 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K9        ; R1 := "Orokin"
 25 [-]: GETGLOBAL R2 K10       ; R2 := 0xE6DC43B0
 26 [-]: LOADK     R3 K11       ; R3 := "/Lotus/Language/Game/Faction_"
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: LOADK     R5 K12       ; R5 := "UC"
 29 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 30 [-]: LOADNIL   R4 R4        ; R4 := nil
 31 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 32 [-]: RETURN    R2 0         ; return R2,...
 33 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 3389
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 3393
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R4 K0        ; R4 := ""
  2 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  3 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["levelOverride"]
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["levelOverride"]
  8 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x1B252E3C"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: MOVE      R4 R5        ; R4 := R5
 11 [-]: LOADNIL   R5 R5        ; R5 := nil
 12 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 13 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["icon"]
 14 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 15 [-]: TEST      R6 1         ; if R6 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R2        ; R7 := R2
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: GETTABLE  R5 R2 K4     ; R5 := R2["icon"]
 23 [-]: JMP       303          ; PC := 303
 24 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["icon"]
 25 [-]: JMP       303          ; PC := 303
 26 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 27 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["MT_ARENA"]
 29 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R6 K8        ; R6 := _G
 32 [-]: GETTABLE  R5 R6 K9     ; R5 := R6["UITextures_ArenaLocation"]
 33 [-]: JMP       303          ; PC := 303
 34 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 35 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 36 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["MT_JUNCTION"]
 37 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETGLOBAL R6 K8        ; R6 := _G
 40 [-]: GETTABLE  R5 R6 K11    ; R5 := R6["UITextures_JunctionLocation"]
 41 [-]: JMP       303          ; PC := 303
 42 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["missionType"]
 43 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
 44 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["MT_LANDSCAPE"]
 45 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETGLOBAL R6 K8        ; R6 := _G
 48 [-]: GETTABLE  R5 R6 K13    ; R5 := R6["UITextures_EidolonPlains"]
 49 [-]: JMP       303          ; PC := 303
 50 [-]: GETGLOBAL R6 K14       ; R6 := string
 51 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 52 [-]: MOVE      R7 R4        ; R7 := R4
 53 [-]: LOADK     R8 K16       ; R8 := "Asteroid"
 54 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 55 [-]: TEST      R6 0         ; if not R6 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R6 K8        ; R6 := _G
 58 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["UITextures_GrineerAsteroid"]
 59 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 60 [-]: LOADK     R8 K19       ; R8 := 1
 61 [-]: GETGLOBAL R9 K8        ; R9 := _G
 62 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["UITextures_GrineerAsteroid"]
 63 [-]: LEN       R9 R9        ; R9 := # R9
 64 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 65 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 66 [-]: JMP       303          ; PC := 303
 67 [-]: GETGLOBAL R6 K14       ; R6 := string
 68 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 69 [-]: MOVE      R7 R4        ; R7 := R4
 70 [-]: LOADK     R8 K20       ; R8 := "GasCity"
 71 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 72 [-]: TEST      R6 0         ; if not R6 then PC := 84
 73 [-]: JMP       84           ; PC := 84
 74 [-]: GETGLOBAL R6 K8        ; R6 := _G
 75 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["UITextures_GasCity"]
 76 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 77 [-]: LOADK     R8 K19       ; R8 := 1
 78 [-]: GETGLOBAL R9 K8        ; R9 := _G
 79 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["UITextures_GasCity"]
 80 [-]: LEN       R9 R9        ; R9 := # R9
 81 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 82 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 83 [-]: JMP       303          ; PC := 303
 84 [-]: GETGLOBAL R6 K14       ; R6 := string
 85 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
 86 [-]: MOVE      R7 R4        ; R7 := R4
 87 [-]: LOADK     R8 K22       ; R8 := "Galleon"
 88 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 89 [-]: TEST      R6 0         ; if not R6 then PC := 101
 90 [-]: JMP       101          ; PC := 101
 91 [-]: GETGLOBAL R6 K8        ; R6 := _G
 92 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["UITextures_GrineerShip"]
 93 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
 94 [-]: LOADK     R8 K19       ; R8 := 1
 95 [-]: GETGLOBAL R9 K8        ; R9 := _G
 96 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["UITextures_GrineerShip"]
 97 [-]: LEN       R9 R9        ; R9 := # R9
 98 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 99 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
100 [-]: JMP       303          ; PC := 303
101 [-]: GETGLOBAL R6 K14       ; R6 := string
102 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
103 [-]: MOVE      R7 R4        ; R7 := R4
104 [-]: LOADK     R8 K24       ; R8 := "Outpost"
105 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
106 [-]: TEST      R6 0         ; if not R6 then PC := 118
107 [-]: JMP       118          ; PC := 118
108 [-]: GETGLOBAL R6 K8        ; R6 := _G
109 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["UITextures_Outpost"]
110 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
111 [-]: LOADK     R8 K19       ; R8 := 1
112 [-]: GETGLOBAL R9 K8        ; R9 := _G
113 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["UITextures_Outpost"]
114 [-]: LEN       R9 R9        ; R9 := # R9
115 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
116 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
117 [-]: JMP       303          ; PC := 303
118 [-]: GETGLOBAL R6 K14       ; R6 := string
119 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
120 [-]: MOVE      R7 R4        ; R7 := R4
121 [-]: LOADK     R8 K26       ; R8 := "InfestedCorpus"
122 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
123 [-]: TEST      R6 1         ; if R6 then PC := 132
124 [-]: JMP       132          ; PC := 132
125 [-]: GETGLOBAL R6 K14       ; R6 := string
126 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
127 [-]: MOVE      R7 R4        ; R7 := R4
128 [-]: LOADK     R8 K27       ; R8 := "InfestedHive"
129 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
130 [-]: TEST      R6 0         ; if not R6 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETGLOBAL R6 K8        ; R6 := _G
133 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["UITextures_InfestedCorpusShip"]
134 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
135 [-]: LOADK     R8 K19       ; R8 := 1
136 [-]: GETGLOBAL R9 K8        ; R9 := _G
137 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["UITextures_InfestedCorpusShip"]
138 [-]: LEN       R9 R9        ; R9 := # R9
139 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
140 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
141 [-]: JMP       303          ; PC := 303
142 [-]: GETGLOBAL R6 K14       ; R6 := string
143 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
144 [-]: MOVE      R7 R4        ; R7 := R4
145 [-]: LOADK     R8 K29       ; R8 := "IcePlanet"
146 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
147 [-]: TEST      R6 0         ; if not R6 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: GETGLOBAL R6 K8        ; R6 := _G
150 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["UITextures_IcePlanet"]
151 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
152 [-]: LOADK     R8 K19       ; R8 := 1
153 [-]: GETGLOBAL R9 K8        ; R9 := _G
154 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["UITextures_IcePlanet"]
155 [-]: LEN       R9 R9        ; R9 := # R9
156 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
157 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
158 [-]: JMP       303          ; PC := 303
159 [-]: GETGLOBAL R6 K14       ; R6 := string
160 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
161 [-]: MOVE      R7 R4        ; R7 := R4
162 [-]: LOADK     R8 K31       ; R8 := "Corpus"
163 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
164 [-]: TEST      R6 0         ; if not R6 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETGLOBAL R6 K8        ; R6 := _G
167 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["UITextures_CorpusShip"]
168 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
169 [-]: LOADK     R8 K19       ; R8 := 1
170 [-]: GETGLOBAL R9 K8        ; R9 := _G
171 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["UITextures_CorpusShip"]
172 [-]: LEN       R9 R9        ; R9 := # R9
173 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
174 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
175 [-]: JMP       303          ; PC := 303
176 [-]: GETGLOBAL R6 K14       ; R6 := string
177 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
178 [-]: MOVE      R7 R4        ; R7 := R4
179 [-]: LOADK     R8 K33       ; R8 := "Settlement"
180 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
181 [-]: TEST      R6 0         ; if not R6 then PC := 193
182 [-]: JMP       193          ; PC := 193
183 [-]: GETGLOBAL R6 K8        ; R6 := _G
184 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["UITextures_Settlement"]
185 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
186 [-]: LOADK     R8 K19       ; R8 := 1
187 [-]: GETGLOBAL R9 K8        ; R9 := _G
188 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["UITextures_Settlement"]
189 [-]: LEN       R9 R9        ; R9 := # R9
190 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
191 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
192 [-]: JMP       303          ; PC := 303
193 [-]: GETGLOBAL R6 K14       ; R6 := string
194 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
195 [-]: MOVE      R7 R4        ; R7 := R4
196 [-]: LOADK     R8 K35       ; R8 := "Forest"
197 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
198 [-]: TEST      R6 0         ; if not R6 then PC := 210
199 [-]: JMP       210          ; PC := 210
200 [-]: GETGLOBAL R6 K8        ; R6 := _G
201 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["UITextures_GrineerForest"]
202 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
203 [-]: LOADK     R8 K19       ; R8 := 1
204 [-]: GETGLOBAL R9 K8        ; R9 := _G
205 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["UITextures_GrineerForest"]
206 [-]: LEN       R9 R9        ; R9 := # R9
207 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
208 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
209 [-]: JMP       303          ; PC := 303
210 [-]: GETGLOBAL R6 K14       ; R6 := string
211 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
212 [-]: MOVE      R7 R4        ; R7 := R4
213 [-]: LOADK     R8 K37       ; R8 := "Shipyard"
214 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
215 [-]: TEST      R6 0         ; if not R6 then PC := 227
216 [-]: JMP       227          ; PC := 227
217 [-]: GETGLOBAL R6 K8        ; R6 := _G
218 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["UITextures_GrineerShipyard"]
219 [-]: GETGLOBAL R7 K18       ; R7 := 0x290116D3
220 [-]: LOADK     R8 K19       ; R8 := 1
221 [-]: GETGLOBAL R9 K8        ; R9 := _G
222 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["UITextures_GrineerShipyard"]
223 [-]: LEN       R9 R9        ; R9 := # R9
224 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
225 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
226 [-]: JMP       303          ; PC := 303
227 [-]: GETGLOBAL R6 K14       ; R6 := string
228 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
229 [-]: MOVE      R7 R4        ; R7 := R4
230 [-]: LOADK     R8 K39       ; R8 := "SpaceBattles/"
231 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
232 [-]: TEST      R6 0         ; if not R6 then PC := 237
233 [-]: JMP       237          ; PC := 237
234 [-]: GETGLOBAL R6 K8        ; R6 := _G
235 [-]: GETTABLE  R5 R6 K40    ; R5 := R6["UITextures_ArchwingTrench"]
236 [-]: JMP       303          ; PC := 303
237 [-]: GETGLOBAL R6 K14       ; R6 := string
238 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
239 [-]: MOVE      R7 R4        ; R7 := R4
240 [-]: LOADK     R8 K41       ; R8 := "GrineerOcean"
241 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
242 [-]: TEST      R6 0         ; if not R6 then PC := 247
243 [-]: JMP       247          ; PC := 247
244 [-]: GETGLOBAL R6 K8        ; R6 := _G
245 [-]: GETTABLE  R5 R6 K42    ; R5 := R6["UITextures_GrineerOcean"]
246 [-]: JMP       303          ; PC := 303
247 [-]: GETGLOBAL R6 K14       ; R6 := string
248 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
249 [-]: MOVE      R7 R4        ; R7 := R4
250 [-]: LOADK     R8 K43       ; R8 := "OrokinMoon"
251 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
252 [-]: TEST      R6 0         ; if not R6 then PC := 257
253 [-]: JMP       257          ; PC := 257
254 [-]: GETGLOBAL R6 K8        ; R6 := _G
255 [-]: GETTABLE  R5 R6 K44    ; R5 := R6["UITextures_OrokinMoon"]
256 [-]: JMP       303          ; PC := 303
257 [-]: GETGLOBAL R6 K14       ; R6 := string
258 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
259 [-]: MOVE      R7 R4        ; R7 := R4
260 [-]: LOADK     R8 K45       ; R8 := "OrokinTower"
261 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
262 [-]: TEST      R6 0         ; if not R6 then PC := 267
263 [-]: JMP       267          ; PC := 267
264 [-]: GETGLOBAL R6 K8        ; R6 := _G
265 [-]: GETTABLE  R5 R6 K46    ; R5 := R6["UITextures_OrokinTower"]
266 [-]: JMP       303          ; PC := 303
267 [-]: GETGLOBAL R6 K14       ; R6 := string
268 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
269 [-]: MOVE      R7 R4        ; R7 := R4
270 [-]: LOADK     R8 K47       ; R8 := "Space/"
271 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
272 [-]: TEST      R6 0         ; if not R6 then PC := 277
273 [-]: JMP       277          ; PC := 277
274 [-]: GETGLOBAL R6 K8        ; R6 := _G
275 [-]: GETTABLE  R5 R6 K48    ; R5 := R6["UITextures_ArchwingFreeFlight"]
276 [-]: JMP       303          ; PC := 303
277 [-]: GETGLOBAL R6 K14       ; R6 := string
278 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xDE44F664"]
279 [-]: MOVE      R7 R4        ; R7 := R4
280 [-]: LOADK     R8 K49       ; R8 := "Fortress"
281 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
282 [-]: TEST      R6 0         ; if not R6 then PC := 287
283 [-]: JMP       287          ; PC := 287
284 [-]: GETGLOBAL R6 K8        ; R6 := _G
285 [-]: GETTABLE  R5 R6 K50    ; R5 := R6["UITextures_GrineerFortress"]
286 [-]: JMP       303          ; PC := 303
287 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
288 [-]: MOVE      R7 R1        ; R7 := R1
289 [-]: CALL      R6 2 2       ; R6 := R6(R7)
290 [-]: TEST      R6 1         ; if R6 then PC := 297
291 [-]: JMP       297          ; PC := 297
292 [-]: GETTABLE  R6 R1 K51    ; R6 := R1["nodeType"]
293 [-]: GETGLOBAL R7 K6        ; R7 := Lotus_Game
294 [-]: GETTABLE  R7 R7 K52    ; R7 := R7["NT_EVENT"]
295 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 299
296 [-]: JMP       299          ; PC := 299
297 [-]: EQ        1 R3 K53     ; if R3 == nil then PC := 303
298 [-]: JMP       303          ; PC := 303
299 [-]: GETUPVAL  R6 U0        ; R6 := U0
300 [-]: GETTABLE  R7 R1 K54    ; R7 := R1["name"]
301 [-]: CALL      R6 2 2       ; R6 := R6(R7)
302 [-]: MOVE      R5 R6        ; R5 := R6
303 [-]: RETURN    R5 2         ; return R5
304 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 3451
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 3455
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x9FAED6BC
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1B252E3C"]
  9 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 10 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 11 [-]: EQ        1 R1 K4      ; if R1 == "/Lotus/Levels/Proc/Orokin/OrokinMoonSpy" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R1 R0        ; R1 := R0
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["forceAllyFaction"]
 16 [-]: TEST      R2 1         ; if R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: TEST      R1 0         ; if not R1 then PC := 56
 19 [-]: JMP       56           ; PC := 56
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["invasionAllyFaction"]
 21 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 22 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["FC_OROKIN"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: TEST      R1 0         ; if not R1 then PC := 37
 26 [-]: JMP       37           ; PC := 37
 27 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["faction"]
 28 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 29 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["FC_GRINEER"]
 30 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 33 [-]: GETTABLE  R2 R3 K11    ; R2 := R3["FC_CORPUS"]
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 36 [-]: GETTABLE  R2 R3 K10    ; R2 := R3["FC_GRINEER"]
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["faction"]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETGLOBAL R5 K12       ; R5 := string
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["0x639C642A"]
 45 [-]: MOVE      R6 R3        ; R6 := R3
 46 [-]: LOADK     R7 K14       ; R7 := " "
 47 [-]: GETGLOBAL R8 K15       ; R8 := 0xE6DC43B0
 48 [-]: LOADK     R9 K16       ; R9 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
 49 [-]: LOADNIL   R10 R10      ; R10 := nil
 50 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 51 [-]: LOADK     R9 K14       ; R9 := " "
 52 [-]: MOVE      R10 R4       ; R10 := R4
 53 [-]: CONCAT    R6 R6 R10    ; R6 := R6 .. R7 .. R8 .. R9 .. R10
 54 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 55 [-]: RETURN    R5 2         ; return R5
 56 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 3476
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 3480
; #Upvalues:       10
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  55

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: CALL      R3 1 2       ; R3 := R3()
  3 [-]: GETTABLE  R4 R3 K0     ; R4 := R3["mMovie"]
  4 [-]: LOADNIL   R5 R5        ; R5 := nil
  5 [-]: GETUPVAL  R6 U1        ; R6 := U1
  6 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["name"]
  7 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  8 [-]: GETUPVAL  R7 U2        ; R7 := U2
  9 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["name"]
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: LOADNIL   R8 R12       ; R8 := R9 := R10 := R11 := R12 := nil
 12 [-]: GETGLOBAL R13 K2       ; R13 := 0x9FAED6BC
 13 [-]: GETTABLE  R14 R0 K1    ; R14 := R0["name"]
 14 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 15 [-]: GETTABLE  R14 R0 K3    ; R14 := R0["reconstructionProgress"]
 16 [-]: TEST      R14 0        ; if not R14 then PC := 40
 17 [-]: JMP       40           ; PC := 40
 18 [-]: LOADNIL   R14 R14      ; R14 := nil
 19 [-]: GETGLOBAL R15 K4       ; R15 := _T
 20 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["CachedConstructionProjects"]
 21 [-]: LOADK     R16 K6       ; R16 := 1
 22 [-]: LEN       R17 R15      ; R17 := # R15
 23 [-]: LOADK     R18 K6       ; R18 := 1
 24 [-]: FORPREP   R16 33       ; R16 -= R18; PC := 33
 25 [-]: GETTABLE  R20 R15 R19  ; R20 := R15[R19]
 26 [-]: GETTABLE  R21 R20 K7   ; R21 := R20["info"]
 27 [-]: GETTABLE  R21 R21 K8   ; R21 := R21["mNode"]
 28 [-]: GETTABLE  R22 R0 K1    ; R22 := R0["name"]
 29 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: MOVE      R14 R20      ; R14 := R20
 32 [-]: JMP       34           ; PC := 34
 33 [-]: FORLOOP   R16 25       ; R16 += R18; if R16 <= R17 then begin PC := 25; R19 := R16 end
 34 [-]: TEST      R14 0        ; if not R14 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: GETTABLE  R22 R0 K3    ; R22 := R0["reconstructionProgress"]
 37 [-]: EQ        1 R22 K6     ; if R22 == 1 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADNIL   R7 R7        ; R7 := nil
 40 [-]: GETTABLE  R22 R0 K9    ; R22 := R0["locked"]
 41 [-]: MOVE      R22 R22      ; R22 := R22
 42 [-]: TEST      R22 0        ; if not R22 then PC := 73
 43 [-]: JMP       73           ; PC := 73
 44 [-]: GETGLOBAL R23 K10      ; R23 := 0x400E7765
 45 [-]: MOVE      R24 R6       ; R24 := R6
 46 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 47 [-]: TEST      R23 1        ; if R23 then PC := 73
 48 [-]: JMP       73           ; PC := 73
 49 [-]: MOVE      R5 R6        ; R5 := R6
 50 [-]: GETGLOBAL R23 K4       ; R23 := _T
 51 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["CachedAlerts"]
 52 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 53 [-]: TEST      R23 0        ; if not R23 then PC := 220
 54 [-]: JMP       220          ; PC := 220
 55 [-]: GETGLOBAL R23 K4       ; R23 := _T
 56 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["CachedAlerts"]
 57 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 58 [-]: GETTABLE  R23 R23 K12  ; R23 := R23["mVisible"]
 59 [-]: TEST      R23 0        ; if not R23 then PC := 220
 60 [-]: JMP       220          ; PC := 220
 61 [-]: GETGLOBAL R23 K4       ; R23 := _T
 62 [-]: GETTABLE  R23 R23 K11  ; R23 := R23["CachedAlerts"]
 63 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 64 [-]: GETTABLE  R23 R23 K13  ; R23 := R23["mAlertInfo"]
 65 [-]: GETTABLE  R23 R23 K14  ; R23 := R23["mTag"]
 66 [-]: GETUPVAL  R24 U3       ; R24 := U3
 67 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 220
 68 [-]: JMP       220          ; PC := 220
 69 [-]: GETGLOBAL R23 K16      ; R23 := _G
 70 [-]: GETTABLE  R23 R23 K17  ; R23 := R23["UITexture_Darvo"]
 71 [-]: SETTABLE  R5 K15 R23   ; R5["icon"] := R23
 72 [-]: JMP       220          ; PC := 220
 73 [-]: TEST      R7 0         ; if not R7 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: GETTABLE  R5 R7 K18    ; R5 := R7["mMissionInfo"]
 76 [-]: JMP       220          ; PC := 220
 77 [-]: TEST      R22 0        ; if not R22 then PC := 108
 78 [-]: JMP       108          ; PC := 108
 79 [-]: GETGLOBAL R23 K4       ; R23 := _T
 80 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
 81 [-]: TEST      R23 0        ; if not R23 then PC := 108
 82 [-]: JMP       108          ; PC := 108
 83 [-]: GETGLOBAL R23 K4       ; R23 := _T
 84 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
 85 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 86 [-]: TEST      R23 0        ; if not R23 then PC := 108
 87 [-]: JMP       108          ; PC := 108
 88 [-]: GETGLOBAL R23 K4       ; R23 := _T
 89 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
 90 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 91 [-]: GETTABLE  R23 R23 K20  ; R23 := R23["mUnlocked"]
 92 [-]: TEST      R23 0        ; if not R23 then PC := 108
 93 [-]: JMP       108          ; PC := 108
 94 [-]: GETGLOBAL R23 K4       ; R23 := _T
 95 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
 96 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
 97 [-]: GETTABLE  R23 R23 K21  ; R23 := R23["mShowInStarChart"]
 98 [-]: TEST      R23 0        ; if not R23 then PC := 108
 99 [-]: JMP       108          ; PC := 108
100 [-]: GETGLOBAL R23 K4       ; R23 := _T
101 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
102 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
103 [-]: GETTABLE  R5 R23 K18   ; R5 := R23["mMissionInfo"]
104 [-]: GETGLOBAL R23 K4       ; R23 := _T
105 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["CachedGhostTowerMissions"]
106 [-]: GETTABLE  R11 R23 R13  ; R11 := R23[R13]
107 [-]: JMP       220          ; PC := 220
108 [-]: TEST      R22 0        ; if not R22 then PC := 129
109 [-]: JMP       129          ; PC := 129
110 [-]: GETGLOBAL R23 K4       ; R23 := _T
111 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["CachedSyndicateMissions"]
112 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
113 [-]: TEST      R23 0        ; if not R23 then PC := 129
114 [-]: JMP       129          ; PC := 129
115 [-]: GETGLOBAL R23 K4       ; R23 := _T
116 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["CachedSyndicateMissions"]
117 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
118 [-]: GETTABLE  R23 R23 K12  ; R23 := R23["mVisible"]
119 [-]: TEST      R23 0        ; if not R23 then PC := 129
120 [-]: JMP       129          ; PC := 129
121 [-]: GETGLOBAL R23 K4       ; R23 := _T
122 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["CachedSyndicateMissions"]
123 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
124 [-]: GETTABLE  R5 R23 K18   ; R5 := R23["mMissionInfo"]
125 [-]: GETGLOBAL R23 K4       ; R23 := _T
126 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["CachedSyndicateMissions"]
127 [-]: GETTABLE  R8 R23 R13   ; R8 := R23[R13]
128 [-]: JMP       220          ; PC := 220
129 [-]: TEST      R22 0        ; if not R22 then PC := 150
130 [-]: JMP       150          ; PC := 150
131 [-]: GETGLOBAL R23 K4       ; R23 := _T
132 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["CachedSortieMissions"]
133 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
134 [-]: TEST      R23 0        ; if not R23 then PC := 150
135 [-]: JMP       150          ; PC := 150
136 [-]: GETGLOBAL R23 K4       ; R23 := _T
137 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["CachedSortieMissions"]
138 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
139 [-]: GETTABLE  R23 R23 K21  ; R23 := R23["mShowInStarChart"]
140 [-]: TEST      R23 0        ; if not R23 then PC := 150
141 [-]: JMP       150          ; PC := 150
142 [-]: GETGLOBAL R23 K4       ; R23 := _T
143 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["CachedSortieMissions"]
144 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
145 [-]: GETTABLE  R5 R23 K18   ; R5 := R23["mMissionInfo"]
146 [-]: GETGLOBAL R23 K4       ; R23 := _T
147 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["CachedSortieMissions"]
148 [-]: GETTABLE  R9 R23 R13   ; R9 := R23[R13]
149 [-]: JMP       220          ; PC := 220
150 [-]: TEST      R22 0        ; if not R22 then PC := 169
151 [-]: JMP       169          ; PC := 169
152 [-]: GETGLOBAL R23 K4       ; R23 := _T
153 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["CachedInvasionInfo"]
154 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
155 [-]: TEST      R23 0        ; if not R23 then PC := 169
156 [-]: JMP       169          ; PC := 169
157 [-]: GETGLOBAL R23 K4       ; R23 := _T
158 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["CachedInvasionInfo"]
159 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
160 [-]: GETTABLE  R23 R23 K25  ; R23 := R23["mEventTag"]
161 [-]: GETGLOBAL R24 K26      ; R24 := EMPTY_SYMBOL
162 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 169
163 [-]: JMP       169          ; PC := 169
164 [-]: GETGLOBAL R23 K4       ; R23 := _T
165 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["CachedInvasionInfo"]
166 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
167 [-]: GETTABLE  R5 R23 K27   ; R5 := R23["mAttackerMissionInfo"]
168 [-]: JMP       220          ; PC := 220
169 [-]: TEST      R22 0        ; if not R22 then PC := 188
170 [-]: JMP       188          ; PC := 188
171 [-]: GETGLOBAL R23 K4       ; R23 := _T
172 [-]: GETTABLE  R23 R23 K28  ; R23 := R23["CachedActiveMissions"]
173 [-]: TEST      R23 0        ; if not R23 then PC := 188
174 [-]: JMP       188          ; PC := 188
175 [-]: GETGLOBAL R23 K4       ; R23 := _T
176 [-]: GETTABLE  R23 R23 K28  ; R23 := R23["CachedActiveMissions"]
177 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
178 [-]: TEST      R23 0        ; if not R23 then PC := 188
179 [-]: JMP       188          ; PC := 188
180 [-]: GETGLOBAL R23 K4       ; R23 := _T
181 [-]: GETTABLE  R23 R23 K28  ; R23 := R23["CachedActiveMissions"]
182 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
183 [-]: GETTABLE  R5 R23 K18   ; R5 := R23["mMissionInfo"]
184 [-]: GETGLOBAL R23 K4       ; R23 := _T
185 [-]: GETTABLE  R23 R23 K28  ; R23 := R23["CachedActiveMissions"]
186 [-]: GETTABLE  R10 R23 R13  ; R10 := R23[R13]
187 [-]: JMP       220          ; PC := 220
188 [-]: TEST      R22 0        ; if not R22 then PC := 219
189 [-]: JMP       219          ; PC := 219
190 [-]: GETGLOBAL R23 K4       ; R23 := _T
191 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
192 [-]: TEST      R23 0        ; if not R23 then PC := 219
193 [-]: JMP       219          ; PC := 219
194 [-]: GETGLOBAL R23 K4       ; R23 := _T
195 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
196 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
197 [-]: TEST      R23 0        ; if not R23 then PC := 219
198 [-]: JMP       219          ; PC := 219
199 [-]: GETGLOBAL R23 K4       ; R23 := _T
200 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
201 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
202 [-]: GETTABLE  R23 R23 K20  ; R23 := R23["mUnlocked"]
203 [-]: TEST      R23 0        ; if not R23 then PC := 219
204 [-]: JMP       219          ; PC := 219
205 [-]: GETGLOBAL R23 K4       ; R23 := _T
206 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
207 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
208 [-]: GETTABLE  R23 R23 K21  ; R23 := R23["mShowInStarChart"]
209 [-]: TEST      R23 0        ; if not R23 then PC := 219
210 [-]: JMP       219          ; PC := 219
211 [-]: GETGLOBAL R23 K4       ; R23 := _T
212 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
213 [-]: GETTABLE  R23 R23 R13  ; R23 := R23[R13]
214 [-]: GETTABLE  R5 R23 K18   ; R5 := R23["mMissionInfo"]
215 [-]: GETGLOBAL R23 K4       ; R23 := _T
216 [-]: GETTABLE  R23 R23 K29  ; R23 := R23["CachedEliteAlertMissions"]
217 [-]: GETTABLE  R12 R23 R13  ; R12 := R23[R13]
218 [-]: JMP       220          ; PC := 220
219 [-]: MOVE      R5 R1        ; R5 := R1
220 [-]: GETUPVAL  R23 U4       ; R23 := U4
221 [-]: MOVE      R24 R5       ; R24 := R5
222 [-]: CALL      R23 2 3      ; R23,R24 := R23(R24)
223 [-]: SELF      R25 R4 K30   ; R26 := R4; R25 := R4["0x5DB0BD4"]
224 [-]: LOADK     R27 K31      ; R27 := "/Lotus/Language/Game/MissionName_"
225 [-]: MOVE      R28 R23      ; R28 := R23
226 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
227 [-]: MOVE      R28 R0       ; R28 := R0
228 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
229 [-]: TEST      R24 0        ; if not R24 then PC := 240
230 [-]: JMP       240          ; PC := 240
231 [-]: MOVE      R26 R25      ; R26 := R25
232 [-]: LOADK     R27 K32      ; R27 := " "
233 [-]: SELF      R28 R4 K30   ; R29 := R4; R28 := R4["0x5DB0BD4"]
234 [-]: LOADK     R30 K31      ; R30 := "/Lotus/Language/Game/MissionName_"
235 [-]: MOVE      R31 R24      ; R31 := R24
236 [-]: CONCAT    R30 R30 R31  ; R30 := R30 .. R31
237 [-]: MOVE      R31 R0       ; R31 := R0
238 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
239 [-]: CONCAT    R25 R26 R28  ; R25 := R26 .. R27 .. R28
240 [-]: LOADNIL   R26 R26      ; R26 := nil
241 [-]: GETGLOBAL R27 K10      ; R27 := 0x400E7765
242 [-]: MOVE      R28 R6       ; R28 := R6
243 [-]: CALL      R27 2 2      ; R27 := R27(R28)
244 [-]: TEST      R27 0        ; if not R27 then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: GETUPVAL  R27 U5       ; R27 := U5
247 [-]: GETTABLE  R28 R0 K1    ; R28 := R0["name"]
248 [-]: CALL      R27 2 2      ; R27 := R27(R28)
249 [-]: MOVE      R26 R27      ; R26 := R27
250 [-]: LOADK     R27 K6       ; R27 := 1
251 [-]: GETTABLE  R28 R5 K15   ; R28 := R5["icon"]
252 [-]: LOADK     R29 K33      ; R29 := ""
253 [-]: GETTABLE  R30 R5 K34   ; R30 := R5["completions"]
254 [-]: GETTABLE  R31 R5 K35   ; R31 := R5["unlocked"]
255 [-]: GETTABLE  R32 R5 K36   ; R32 := R5["descText"]
256 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x5EC7A3D2"]
257 [-]: CALL      R32 2 2      ; R32 := R32(R33)
258 [-]: GETTABLE  R33 R5 K38   ; R33 := R5["difficulty"]
259 [-]: GETTABLE  R34 R5 K39   ; R34 := R5["minEnemyLevel"]
260 [-]: GETTABLE  R35 R5 K40   ; R35 := R5["maxEnemyLevel"]
261 [-]: GETTABLE  R36 R5 K41   ; R36 := R5["uniqueName"]
262 [-]: GETTABLE  R37 R5 K42   ; R37 := R5["rarity"]
263 [-]: GETTABLE  R38 R5 K43   ; R38 := R5["tag"]
264 [-]: LOADNIL   R39 R39      ; R39 := nil
265 [-]: GETTABLE  R40 R0 K44   ; R40 := R0["nodeType"]
266 [-]: GETGLOBAL R41 K45      ; R41 := Lotus_Game
267 [-]: GETTABLE  R41 R41 K46  ; R41 := R41["NT_HUB"]
268 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 271
269 [-]: JMP       271          ; PC := 271
270 [-]: MOVE      R40 R0       ; R40 := R0
271 [-]: MOVE      R40 R1       ; R40 := R1
272 [-]: GETGLOBAL R41 K47      ; R41 := string
273 [-]: GETTABLE  R41 R41 K48  ; R41 := R41["0xDE44F664"]
274 [-]: GETGLOBAL R42 K2       ; R42 := 0x9FAED6BC
275 [-]: GETTABLE  R43 R0 K1    ; R43 := R0["name"]
276 [-]: CALL      R42 2 2      ; R42 := R42(R43)
277 [-]: LOADK     R43 K49      ; R43 := "Dojo"
278 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
279 [-]: EQ        0 R41 K50    ; if R41 ~= nil then PC := 282
280 [-]: JMP       282          ; PC := 282
281 [-]: MOVE      R41 R0       ; R41 := R0
282 [-]: MOVE      R41 R1       ; R41 := R1
283 [-]: TEST      R40 0        ; if not R40 then PC := 308
284 [-]: JMP       308          ; PC := 308
285 [-]: SELF      R42 R4 K30   ; R43 := R4; R42 := R4["0x5DB0BD4"]
286 [-]: LOADK     R44 K51      ; R44 := "/Lotus/Language/Menu/Chat_HubTitle"
287 [-]: MOVE      R45 R0       ; R45 := R0
288 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
289 [-]: MOVE      R25 R42      ; R25 := R42
290 [-]: SELF      R42 R4 K30   ; R43 := R4; R42 := R4["0x5DB0BD4"]
291 [-]: LOADK     R44 K52      ; R44 := "/Lotus/Language/Bosses/Tenno"
292 [-]: MOVE      R45 R0       ; R45 := R0
293 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
294 [-]: MOVE      R29 R42      ; R29 := R42
295 [-]: GETGLOBAL R42 K16      ; R42 := _G
296 [-]: GETTABLE  R28 R42 K53  ; R28 := R42["UITexture_Hub"]
297 [-]: GETGLOBAL R42 K47      ; R42 := string
298 [-]: GETTABLE  R42 R42 K54  ; R42 := R42["0x639C642A"]
299 [-]: MOVE      R43 R25      ; R43 := R25
300 [-]: CALL      R42 2 2      ; R42 := R42(R43)
301 [-]: MOVE      R25 R42      ; R25 := R42
302 [-]: GETGLOBAL R42 K47      ; R42 := string
303 [-]: GETTABLE  R42 R42 K54  ; R42 := R42["0x639C642A"]
304 [-]: MOVE      R43 R29      ; R43 := R29
305 [-]: CALL      R42 2 2      ; R42 := R42(R43)
306 [-]: MOVE      R29 R42      ; R29 := R42
307 [-]: JMP       626          ; PC := 626
308 [-]: TEST      R41 0        ; if not R41 then PC := 337
309 [-]: JMP       337          ; PC := 337
310 [-]: GETGLOBAL R42 K55      ; R42 := gPlayerProfileMgr
311 [-]: SELF      R42 R42 K56  ; R43 := R42; R42 := R42["0x21EF7B1A"]
312 [-]: LOADK     R44 K57      ; R44 := 0
313 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
314 [-]: SELF      R42 R42 K58  ; R43 := R42; R42 := R42["0x654F1092"]
315 [-]: CALL      R42 2 2      ; R42 := R42(R43)
316 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
317 [-]: LOADK     R45 K59      ; R45 := "/Lotus/Language/Clan/Clan_DOJO"
318 [-]: MOVE      R46 R0       ; R46 := R0
319 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
320 [-]: MOVE      R25 R43      ; R25 := R43
321 [-]: SELF      R43 R42 K60  ; R44 := R42; R43 := R42["0x6D176768"]
322 [-]: CALL      R43 2 2      ; R43 := R43(R44)
323 [-]: MOVE      R29 R43      ; R29 := R43
324 [-]: GETGLOBAL R43 K16      ; R43 := _G
325 [-]: GETTABLE  R28 R43 K61  ; R28 := R43["UITexture_DefaultClan"]
326 [-]: GETGLOBAL R43 K47      ; R43 := string
327 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["0x639C642A"]
328 [-]: MOVE      R44 R25      ; R44 := R25
329 [-]: CALL      R43 2 2      ; R43 := R43(R44)
330 [-]: MOVE      R25 R43      ; R25 := R43
331 [-]: GETGLOBAL R43 K47      ; R43 := string
332 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["0x639C642A"]
333 [-]: MOVE      R44 R29      ; R44 := R29
334 [-]: CALL      R43 2 2      ; R43 := R43(R44)
335 [-]: MOVE      R29 R43      ; R29 := R43
336 [-]: JMP       626          ; PC := 626
337 [-]: GETTABLE  R43 R0 K44   ; R43 := R0["nodeType"]
338 [-]: GETGLOBAL R44 K45      ; R44 := Lotus_Game
339 [-]: GETTABLE  R44 R44 K62  ; R44 := R44["NT_PVP"]
340 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 360
341 [-]: JMP       360          ; PC := 360
342 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
343 [-]: LOADK     R45 K63      ; R45 := "/Lotus/Language/Menu/MissionIntro_PVP"
344 [-]: MOVE      R46 R0       ; R46 := R0
345 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
346 [-]: MOVE      R25 R43      ; R25 := R43
347 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
348 [-]: LOADK     R45 K64      ; R45 := "/Lotus/Language/Menu/Codex_Tenno"
349 [-]: MOVE      R46 R0       ; R46 := R0
350 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
351 [-]: MOVE      R29 R43      ; R29 := R43
352 [-]: GETGLOBAL R43 K16      ; R43 := _G
353 [-]: GETTABLE  R28 R43 K65  ; R28 := R43["UITexture_Pvp"]
354 [-]: GETGLOBAL R43 K47      ; R43 := string
355 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["0x639C642A"]
356 [-]: MOVE      R44 R29      ; R44 := R29
357 [-]: CALL      R43 2 2      ; R43 := R43(R44)
358 [-]: MOVE      R29 R43      ; R29 := R43
359 [-]: JMP       626          ; PC := 626
360 [-]: EQ        1 R26 K50    ; if R26 == nil then PC := 440
361 [-]: JMP       440          ; PC := 440
362 [-]: GETTABLE  R43 R26 K66  ; R43 := R26["mFaction"]
363 [-]: GETGLOBAL R44 K45      ; R44 := Lotus_Game
364 [-]: GETTABLE  R44 R44 K67  ; R44 := R44["FC_INFESTATION"]
365 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 379
366 [-]: JMP       379          ; PC := 379
367 [-]: GETUPVAL  R43 U4       ; R43 := U4
368 [-]: GETTABLE  R44 R26 K68  ; R44 := R26["mDefenderMissionInfo"]
369 [-]: CALL      R43 2 2      ; R43 := R43(R44)
370 [-]: MOVE      R23 R43      ; R23 := R43
371 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
372 [-]: LOADK     R45 K31      ; R45 := "/Lotus/Language/Game/MissionName_"
373 [-]: MOVE      R46 R23      ; R46 := R23
374 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
375 [-]: MOVE      R46 R0       ; R46 := R0
376 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
377 [-]: MOVE      R25 R43      ; R25 := R43
378 [-]: JMP       388          ; PC := 388
379 [-]: GETTABLE  R43 R26 K25  ; R43 := R26["mEventTag"]
380 [-]: GETGLOBAL R44 K26      ; R44 := EMPTY_SYMBOL
381 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 388
382 [-]: JMP       388          ; PC := 388
383 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
384 [-]: LOADK     R45 K69      ; R45 := "/Lotus/Language/Menu/MissionIntro_Invasion"
385 [-]: MOVE      R46 R0       ; R46 := R0
386 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
387 [-]: MOVE      R25 R43      ; R25 := R43
388 [-]: GETTABLE  R43 R26 K68  ; R43 := R26["mDefenderMissionInfo"]
389 [-]: SELF      R43 R43 K70  ; R44 := R43; R43 := R43["0xEFC448EC"]
390 [-]: CALL      R43 2 2      ; R43 := R43(R44)
391 [-]: SELF      R43 R43 K37  ; R44 := R43; R43 := R43["0x5EC7A3D2"]
392 [-]: CALL      R43 2 2      ; R43 := R43(R44)
393 [-]: MOVE      R29 R43      ; R29 := R43
394 [-]: GETGLOBAL R43 K16      ; R43 := _G
395 [-]: GETTABLE  R28 R43 K71  ; R28 := R43["UITexture_Invasion"]
396 [-]: GETGLOBAL R43 K47      ; R43 := string
397 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["0x639C642A"]
398 [-]: MOVE      R44 R29      ; R44 := R29
399 [-]: CALL      R43 2 2      ; R43 := R43(R44)
400 [-]: MOVE      R29 R43      ; R29 := R43
401 [-]: LOADK     R36 K33      ; R36 := ""
402 [-]: GETTABLE  R43 R26 K27  ; R43 := R26["mAttackerMissionInfo"]
403 [-]: GETTABLE  R34 R43 K39  ; R34 := R43["minEnemyLevel"]
404 [-]: GETTABLE  R43 R26 K27  ; R43 := R26["mAttackerMissionInfo"]
405 [-]: GETTABLE  R35 R43 K40  ; R35 := R43["maxEnemyLevel"]
406 [-]: GETGLOBAL R43 K10      ; R43 := 0x400E7765
407 [-]: MOVE      R44 R2       ; R44 := R2
408 [-]: CALL      R43 2 2      ; R43 := R43(R44)
409 [-]: TEST      R43 1        ; if R43 then PC := 626
410 [-]: JMP       626          ; PC := 626
411 [-]: GETGLOBAL R43 K10      ; R43 := 0x400E7765
412 [-]: GETTABLE  R44 R26 K68  ; R44 := R26["mDefenderMissionInfo"]
413 [-]: GETTABLE  R44 R44 K72  ; R44 := R44["vipAgent"]
414 [-]: CALL      R43 2 2      ; R43 := R43(R44)
415 [-]: TEST      R43 1        ; if R43 then PC := 626
416 [-]: JMP       626          ; PC := 626
417 [-]: GETTABLE  R43 R26 K25  ; R43 := R26["mEventTag"]
418 [-]: GETGLOBAL R44 K26      ; R44 := EMPTY_SYMBOL
419 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 626
420 [-]: JMP       626          ; PC := 626
421 [-]: SELF      R43 R2 K73   ; R44 := R2; R43 := R2["0xF37AEF8E"]
422 [-]: GETTABLE  R45 R26 K68  ; R45 := R26["mDefenderMissionInfo"]
423 [-]: GETTABLE  R45 R45 K72  ; R45 := R45["vipAgent"]
424 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
425 [-]: MOVE      R39 R43      ; R39 := R43
426 [-]: GETTABLE  R43 R39 K74  ; R43 := R39["locName"]
427 [-]: GETGLOBAL R44 K26      ; R44 := EMPTY_SYMBOL
428 [-]: EQ        1 R43 R44    ; if R43 == R44 then PC := 626
429 [-]: JMP       626          ; PC := 626
430 [-]: SELF      R43 R4 K30   ; R44 := R4; R43 := R4["0x5DB0BD4"]
431 [-]: GETTABLE  R45 R39 K74  ; R45 := R39["locName"]
432 [-]: SELF      R45 R45 K37  ; R46 := R45; R45 := R45["0x5EC7A3D2"]
433 [-]: CALL      R45 2 2      ; R45 := R45(R46)
434 [-]: MOVE      R46 R0       ; R46 := R0
435 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
436 [-]: MOVE      R29 R43      ; R29 := R43
437 [-]: GETTABLE  R28 R39 K15  ; R28 := R39["icon"]
438 [-]: LOADK     R36 K33      ; R36 := ""
439 [-]: JMP       626          ; PC := 626
440 [-]: EQ        1 R7 K50     ; if R7 == nil then PC := 531
441 [-]: JMP       531          ; PC := 531
442 [-]: GETGLOBAL R43 K10      ; R43 := 0x400E7765
443 [-]: GETTABLE  R44 R7 K75   ; R44 := R7["mMissionKeyName"]
444 [-]: CALL      R43 2 2      ; R43 := R43(R44)
445 [-]: TEST      R43 1        ; if R43 then PC := 501
446 [-]: JMP       501          ; PC := 501
447 [-]: GETGLOBAL R43 K76      ; R43 := 0x7C282057
448 [-]: GETTABLE  R44 R7 K75   ; R44 := R7["mMissionKeyName"]
449 [-]: CALL      R43 2 2      ; R43 := R43(R44)
450 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
451 [-]: MOVE      R45 R43      ; R45 := R43
452 [-]: CALL      R44 2 2      ; R44 := R44(R45)
453 [-]: TEST      R44 1        ; if R44 then PC := 506
454 [-]: JMP       506          ; PC := 506
455 [-]: SELF      R44 R43 K77  ; R45 := R43; R44 := R43["0xB8637349"]
456 [-]: CALL      R44 2 2      ; R44 := R44(R45)
457 [-]: MOVE      R5 R44       ; R5 := R44
458 [-]: GETTABLE  R44 R7 K18   ; R44 := R7["mMissionInfo"]
459 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["minEnemyLevel"]
460 [-]: LT        0 K6 R44     ; if 1 >= R44 then PC := 465
461 [-]: JMP       465          ; PC := 465
462 [-]: GETTABLE  R44 R7 K18   ; R44 := R7["mMissionInfo"]
463 [-]: GETTABLE  R44 R44 K39  ; R44 := R44["minEnemyLevel"]
464 [-]: SETTABLE  R5 K39 R44   ; R5["minEnemyLevel"] := R44
465 [-]: GETTABLE  R44 R7 K18   ; R44 := R7["mMissionInfo"]
466 [-]: GETTABLE  R44 R44 K40  ; R44 := R44["maxEnemyLevel"]
467 [-]: LT        0 K6 R44     ; if 1 >= R44 then PC := 472
468 [-]: JMP       472          ; PC := 472
469 [-]: GETTABLE  R44 R7 K18   ; R44 := R7["mMissionInfo"]
470 [-]: GETTABLE  R44 R44 K40  ; R44 := R44["maxEnemyLevel"]
471 [-]: SETTABLE  R5 K40 R44   ; R5["maxEnemyLevel"] := R44
472 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
473 [-]: GETTABLE  R45 R7 K18   ; R45 := R7["mMissionInfo"]
474 [-]: GETTABLE  R45 R45 K78  ; R45 := R45["enemySpec"]
475 [-]: CALL      R44 2 2      ; R44 := R44(R45)
476 [-]: TEST      R44 1        ; if R44 then PC := 481
477 [-]: JMP       481          ; PC := 481
478 [-]: GETTABLE  R44 R7 K18   ; R44 := R7["mMissionInfo"]
479 [-]: GETTABLE  R44 R44 K78  ; R44 := R44["enemySpec"]
480 [-]: SETTABLE  R5 K78 R44   ; R5["enemySpec"] := R44
481 [-]: GETTABLE  R34 R5 K39   ; R34 := R5["minEnemyLevel"]
482 [-]: GETTABLE  R35 R5 K40   ; R35 := R5["maxEnemyLevel"]
483 [-]: SELF      R44 R5 K70   ; R45 := R5; R44 := R5["0xEFC448EC"]
484 [-]: CALL      R44 2 2      ; R44 := R44(R45)
485 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
486 [-]: CALL      R44 2 2      ; R44 := R44(R45)
487 [-]: MOVE      R29 R44      ; R29 := R44
488 [-]: GETUPVAL  R44 U4       ; R44 := U4
489 [-]: MOVE      R45 R5       ; R45 := R5
490 [-]: CALL      R44 2 2      ; R44 := R44(R45)
491 [-]: MOVE      R23 R44      ; R23 := R44
492 [-]: SELF      R44 R4 K30   ; R45 := R4; R44 := R4["0x5DB0BD4"]
493 [-]: LOADK     R46 K31      ; R46 := "/Lotus/Language/Game/MissionName_"
494 [-]: MOVE      R47 R23      ; R47 := R23
495 [-]: CONCAT    R46 R46 R47  ; R46 := R46 .. R47
496 [-]: MOVE      R47 R0       ; R47 := R0
497 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
498 [-]: MOVE      R25 R44      ; R25 := R44
499 [-]: LOADK     R36 K33      ; R36 := ""
500 [-]: JMP       506          ; PC := 506
501 [-]: SELF      R44 R4 K30   ; R45 := R4; R44 := R4["0x5DB0BD4"]
502 [-]: GETTABLE  R46 R7 K79   ; R46 := R7["mDesc"]
503 [-]: MOVE      R47 R0       ; R47 := R0
504 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
505 [-]: MOVE      R25 R44      ; R25 := R44
506 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
507 [-]: GETTABLE  R45 R5 K78   ; R45 := R5["enemySpec"]
508 [-]: CALL      R44 2 2      ; R44 := R44(R45)
509 [-]: TEST      R44 1        ; if R44 then PC := 520
510 [-]: JMP       520          ; PC := 520
511 [-]: GETGLOBAL R44 K2       ; R44 := 0x9FAED6BC
512 [-]: GETTABLE  R45 R5 K78   ; R45 := R5["enemySpec"]
513 [-]: SELF      R45 R45 K80  ; R46 := R45; R45 := R45["0x1B252E3C"]
514 [-]: CALL      R45 2 0      ; R45,... := R45(R46)
515 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
516 [-]: EQ        0 R44 K81    ; if R44 ~= "/Lotus/Types/Game/EnemySpecs/GrineerEventSquadM" then PC := 520
517 [-]: JMP       520          ; PC := 520
518 [-]: LOADK     R29 K33      ; R29 := ""
519 [-]: JMP       525          ; PC := 525
520 [-]: SELF      R44 R5 K70   ; R45 := R5; R44 := R5["0xEFC448EC"]
521 [-]: CALL      R44 2 2      ; R44 := R44(R45)
522 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
523 [-]: CALL      R44 2 2      ; R44 := R44(R45)
524 [-]: MOVE      R29 R44      ; R29 := R44
525 [-]: GETGLOBAL R44 K47      ; R44 := string
526 [-]: GETTABLE  R44 R44 K54  ; R44 := R44["0x639C642A"]
527 [-]: MOVE      R45 R29      ; R45 := R29
528 [-]: CALL      R44 2 2      ; R44 := R44(R45)
529 [-]: MOVE      R29 R44      ; R29 := R44
530 [-]: JMP       626          ; PC := 626
531 [-]: GETTABLE  R44 R5 K82   ; R44 := R5["missionType"]
532 [-]: GETGLOBAL R45 K45      ; R45 := Lotus_Game
533 [-]: GETTABLE  R45 R45 K83  ; R45 := R45["MT_ASSASSINATION"]
534 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 572
535 [-]: JMP       572          ; PC := 572
536 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
537 [-]: MOVE      R45 R2       ; R45 := R2
538 [-]: CALL      R44 2 2      ; R44 := R44(R45)
539 [-]: TEST      R44 1        ; if R44 then PC := 563
540 [-]: JMP       563          ; PC := 563
541 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
542 [-]: GETTABLE  R45 R5 K72   ; R45 := R5["vipAgent"]
543 [-]: CALL      R44 2 2      ; R44 := R44(R45)
544 [-]: TEST      R44 1        ; if R44 then PC := 563
545 [-]: JMP       563          ; PC := 563
546 [-]: SELF      R44 R2 K73   ; R45 := R2; R44 := R2["0xF37AEF8E"]
547 [-]: GETTABLE  R46 R5 K72   ; R46 := R5["vipAgent"]
548 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
549 [-]: MOVE      R39 R44      ; R39 := R44
550 [-]: GETTABLE  R44 R39 K74  ; R44 := R39["locName"]
551 [-]: GETGLOBAL R45 K26      ; R45 := EMPTY_SYMBOL
552 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 563
553 [-]: JMP       563          ; PC := 563
554 [-]: SELF      R44 R4 K30   ; R45 := R4; R44 := R4["0x5DB0BD4"]
555 [-]: GETTABLE  R46 R39 K74  ; R46 := R39["locName"]
556 [-]: SELF      R46 R46 K37  ; R47 := R46; R46 := R46["0x5EC7A3D2"]
557 [-]: CALL      R46 2 2      ; R46 := R46(R47)
558 [-]: MOVE      R47 R0       ; R47 := R0
559 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
560 [-]: MOVE      R29 R44      ; R29 := R44
561 [-]: GETTABLE  R28 R39 K15  ; R28 := R39["icon"]
562 [-]: LOADK     R36 K33      ; R36 := ""
563 [-]: TEST      R39 1        ; if R39 then PC := 626
564 [-]: JMP       626          ; PC := 626
565 [-]: SELF      R44 R4 K30   ; R45 := R4; R44 := R4["0x5DB0BD4"]
566 [-]: GETTABLE  R46 R5 K41   ; R46 := R5["uniqueName"]
567 [-]: MOVE      R47 R0       ; R47 := R0
568 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
569 [-]: MOVE      R29 R44      ; R29 := R44
570 [-]: GETTABLE  R28 R5 K15   ; R28 := R5["icon"]
571 [-]: JMP       626          ; PC := 626
572 [-]: GETGLOBAL R44 K4       ; R44 := _T
573 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["CachedAlerts"]
574 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
575 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
576 [-]: TEST      R44 0        ; if not R44 then PC := 610
577 [-]: JMP       610          ; PC := 610
578 [-]: GETGLOBAL R44 K4       ; R44 := _T
579 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["CachedAlerts"]
580 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
581 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
582 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mAlertInfo"]
583 [-]: GETTABLE  R44 R44 K14  ; R44 := R44["mTag"]
584 [-]: GETGLOBAL R45 K26      ; R45 := EMPTY_SYMBOL
585 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 610
586 [-]: JMP       610          ; PC := 610
587 [-]: GETGLOBAL R44 K4       ; R44 := _T
588 [-]: GETTABLE  R44 R44 K11  ; R44 := R44["CachedAlerts"]
589 [-]: GETTABLE  R45 R0 K1    ; R45 := R0["name"]
590 [-]: GETTABLE  R44 R44 R45  ; R44 := R44[R45]
591 [-]: GETTABLE  R44 R44 K13  ; R44 := R44["mAlertInfo"]
592 [-]: GETTABLE  R44 R44 K18  ; R44 := R44["mMissionInfo"]
593 [-]: GETTABLE  R44 R44 K36  ; R44 := R44["descText"]
594 [-]: GETGLOBAL R45 K26      ; R45 := EMPTY_SYMBOL
595 [-]: EQ        1 R44 R45    ; if R44 == R45 then PC := 610
596 [-]: JMP       610          ; PC := 610
597 [-]: GETGLOBAL R44 K84      ; R44 := 0xE6DC43B0
598 [-]: GETGLOBAL R45 K2       ; R45 := 0x9FAED6BC
599 [-]: GETGLOBAL R46 K4       ; R46 := _T
600 [-]: GETTABLE  R46 R46 K11  ; R46 := R46["CachedAlerts"]
601 [-]: GETTABLE  R47 R0 K1    ; R47 := R0["name"]
602 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
603 [-]: GETTABLE  R46 R46 K13  ; R46 := R46["mAlertInfo"]
604 [-]: GETTABLE  R46 R46 K18  ; R46 := R46["mMissionInfo"]
605 [-]: GETTABLE  R46 R46 K36  ; R46 := R46["descText"]
606 [-]: CALL      R45 2 2      ; R45 := R45(R46)
607 [-]: MOVE      R46 R0       ; R46 := R0
608 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
609 [-]: MOVE      R36 R44      ; R36 := R44
610 [-]: SELF      R44 R5 K70   ; R45 := R5; R44 := R5["0xEFC448EC"]
611 [-]: CALL      R44 2 2      ; R44 := R44(R45)
612 [-]: SELF      R44 R44 K37  ; R45 := R44; R44 := R44["0x5EC7A3D2"]
613 [-]: CALL      R44 2 2      ; R44 := R44(R45)
614 [-]: MOVE      R29 R44      ; R29 := R44
615 [-]: GETGLOBAL R44 K10      ; R44 := 0x400E7765
616 [-]: MOVE      R45 R28      ; R45 := R28
617 [-]: CALL      R44 2 2      ; R44 := R44(R45)
618 [-]: TEST      R44 0        ; if not R44 then PC := 621
619 [-]: JMP       621          ; PC := 621
620 [-]: LOADNIL   R28 R28      ; R28 := nil
621 [-]: GETGLOBAL R44 K47      ; R44 := string
622 [-]: GETTABLE  R44 R44 K54  ; R44 := R44["0x639C642A"]
623 [-]: MOVE      R45 R29      ; R45 := R29
624 [-]: CALL      R44 2 2      ; R44 := R44(R45)
625 [-]: MOVE      R29 R44      ; R29 := R44
626 [-]: GETGLOBAL R44 K47      ; R44 := string
627 [-]: GETTABLE  R44 R44 K85  ; R44 := R44["0xC6772A8A"]
628 [-]: MOVE      R45 R36      ; R45 := R36
629 [-]: CALL      R44 2 2      ; R44 := R44(R45)
630 [-]: LT        0 K57 R44    ; if 0 >= R44 then PC := 637
631 [-]: JMP       637          ; PC := 637
632 [-]: SELF      R44 R4 K30   ; R45 := R4; R44 := R4["0x5DB0BD4"]
633 [-]: MOVE      R46 R36      ; R46 := R36
634 [-]: MOVE      R47 R0       ; R47 := R0
635 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
636 [-]: MOVE      R29 R44      ; R29 := R44
637 [-]: GETUPVAL  R44 U6       ; R44 := U6
638 [-]: GETTABLE  R44 R44 K86  ; R44 := R44["0xF81722A2"]
639 [-]: GETGLOBAL R45 K87      ; R45 := Engine
640 [-]: GETTABLE  R45 R45 K88  ; R45 := R45["0xE35E176B"]
641 [-]: CALL      R45 1 2      ; R45 := R45()
642 [-]: LOADK     R46 K33      ; R46 := ""
643 [-]: GETTABLE  R47 R0 K89   ; R47 := R0["founders"]
644 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
645 [-]: LOADNIL   R45 R45      ; R45 := nil
646 [-]: GETGLOBAL R46 K10      ; R46 := 0x400E7765
647 [-]: GETTABLE  R47 R5 K90   ; R47 := R5["levelOverride"]
648 [-]: CALL      R46 2 2      ; R46 := R46(R47)
649 [-]: TEST      R46 1        ; if R46 then PC := 661
650 [-]: JMP       661          ; PC := 661
651 [-]: GETGLOBAL R46 K91      ; R46 := 0x9B21739C
652 [-]: GETTABLE  R47 R5 K92   ; R47 := R5["seed"]
653 [-]: CALL      R46 2 1      ; R46(R47)
654 [-]: GETUPVAL  R46 U7       ; R46 := U7
655 [-]: MOVE      R47 R5       ; R47 := R5
656 [-]: MOVE      R48 R0       ; R48 := R0
657 [-]: MOVE      R49 R39      ; R49 := R39
658 [-]: MOVE      R50 R7       ; R50 := R7
659 [-]: CALL      R46 5 2      ; R46 := R46(R47,R48,R49,R50)
660 [-]: MOVE      R45 R46      ; R45 := R46
661 [-]: GETTABLE  R46 R0 K44   ; R46 := R0["nodeType"]
662 [-]: GETGLOBAL R47 K45      ; R47 := Lotus_Game
663 [-]: GETTABLE  R47 R47 K93  ; R47 := R47["NT_CLAN"]
664 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 691
665 [-]: JMP       691          ; PC := 691
666 [-]: GETUPVAL  R46 U8       ; R46 := U8
667 [-]: GETTABLE  R47 R0 K1    ; R47 := R0["name"]
668 [-]: CALL      R46 2 2      ; R46 := R46(R47)
669 [-]: TEST      R46 0        ; if not R46 then PC := 684
670 [-]: JMP       684          ; PC := 684
671 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
672 [-]: LOADK     R48 K94      ; R48 := "/Lotus/Language/Game/MissionName_BadlandsConflict"
673 [-]: MOVE      R49 R0       ; R49 := R0
674 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
675 [-]: MOVE      R25 R46      ; R25 := R46
676 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
677 [-]: LOADK     R48 K64      ; R48 := "/Lotus/Language/Menu/Codex_Tenno"
678 [-]: MOVE      R49 R0       ; R49 := R0
679 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
680 [-]: MOVE      R29 R46      ; R29 := R46
681 [-]: GETGLOBAL R46 K16      ; R46 := _G
682 [-]: GETTABLE  R45 R46 K95  ; R45 := R46["UITexture_BadlandConflict"]
683 [-]: JMP       691          ; PC := 691
684 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
685 [-]: LOADK     R48 K96      ; R48 := "/Lotus/Language/Game/MissionName_Badlands"
686 [-]: MOVE      R49 R0       ; R49 := R0
687 [-]: NEWTABLE  R50 0 1      ; R50 := {}
688 [-]: SETTABLE  R50 K97 R25  ; R50["MISSION_NAME"] := R25
689 [-]: CALL      R46 5 2      ; R46 := R46(R47,R48,R49,R50)
690 [-]: MOVE      R25 R46      ; R25 := R46
691 [-]: EQ        0 R29 K98    ; if R29 ~= "GRINEER" then PC := 699
692 [-]: JMP       699          ; PC := 699
693 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
694 [-]: LOADK     R48 K99      ; R48 := "/Lotus/Language/Game/Faction_GrineerUC"
695 [-]: MOVE      R49 R0       ; R49 := R0
696 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
697 [-]: MOVE      R29 R46      ; R29 := R46
698 [-]: JMP       744          ; PC := 744
699 [-]: EQ        0 R29 K100   ; if R29 ~= "CORPUS" then PC := 707
700 [-]: JMP       707          ; PC := 707
701 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
702 [-]: LOADK     R48 K101     ; R48 := "/Lotus/Language/Game/Faction_CorpusUC"
703 [-]: MOVE      R49 R0       ; R49 := R0
704 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
705 [-]: MOVE      R29 R46      ; R29 := R46
706 [-]: JMP       744          ; PC := 744
707 [-]: EQ        0 R29 K102   ; if R29 ~= "INFESTATION" then PC := 715
708 [-]: JMP       715          ; PC := 715
709 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
710 [-]: LOADK     R48 K103     ; R48 := "/Lotus/Language/Game/Faction_InfestationUC"
711 [-]: MOVE      R49 R0       ; R49 := R0
712 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
713 [-]: MOVE      R29 R46      ; R29 := R46
714 [-]: JMP       744          ; PC := 744
715 [-]: EQ        0 R29 K104   ; if R29 ~= "WILD" then PC := 723
716 [-]: JMP       723          ; PC := 723
717 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
718 [-]: LOADK     R48 K105     ; R48 := "/Lotus/Language/Game/Faction_WildUC"
719 [-]: MOVE      R49 R0       ; R49 := R0
720 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
721 [-]: MOVE      R29 R46      ; R29 := R46
722 [-]: JMP       744          ; PC := 744
723 [-]: EQ        0 R29 K106   ; if R29 ~= "OROKIN" then PC := 731
724 [-]: JMP       731          ; PC := 731
725 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
726 [-]: LOADK     R48 K107     ; R48 := "/Lotus/Language/Game/Faction_OrokinUC"
727 [-]: MOVE      R49 R0       ; R49 := R0
728 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
729 [-]: MOVE      R29 R46      ; R29 := R46
730 [-]: JMP       744          ; PC := 744
731 [-]: EQ        0 R29 K108   ; if R29 ~= "REDVEIL" then PC := 739
732 [-]: JMP       739          ; PC := 739
733 [-]: SELF      R46 R4 K30   ; R47 := R4; R46 := R4["0x5DB0BD4"]
734 [-]: LOADK     R48 K109     ; R48 := "/Lotus/Language/Game/Faction_RedVeilUC"
735 [-]: MOVE      R49 R0       ; R49 := R0
736 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
737 [-]: MOVE      R29 R46      ; R29 := R46
738 [-]: JMP       744          ; PC := 744
739 [-]: GETGLOBAL R46 K47      ; R46 := string
740 [-]: GETTABLE  R46 R46 K54  ; R46 := R46["0x639C642A"]
741 [-]: MOVE      R47 R29      ; R47 := R29
742 [-]: CALL      R46 2 2      ; R46 := R46(R47)
743 [-]: MOVE      R29 R46      ; R29 := R46
744 [-]: GETUPVAL  R46 U9       ; R46 := U9
745 [-]: MOVE      R47 R5       ; R47 := R5
746 [-]: CALL      R46 2 2      ; R46 := R46(R47)
747 [-]: TEST      R46 0        ; if not R46 then PC := 750
748 [-]: JMP       750          ; PC := 750
749 [-]: MOVE      R29 R46      ; R29 := R46
750 [-]: GETTABLE  R47 R5 K110  ; R47 := R5["isSharkwingMission"]
751 [-]: TEST      R47 1        ; if R47 then PC := 770
752 [-]: JMP       770          ; PC := 770
753 [-]: GETTABLE  R47 R5 K111  ; R47 := R5["archwingRequired"]
754 [-]: TEST      R47 0        ; if not R47 then PC := 783
755 [-]: JMP       783          ; PC := 783
756 [-]: SELF      R47 R4 K30   ; R48 := R4; R47 := R4["0x5DB0BD4"]
757 [-]: LOADK     R49 K112     ; R49 := "<ARCHWING>"
758 [-]: MOVE      R50 R1       ; R50 := R1
759 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
760 [-]: LOADK     R48 K32      ; R48 := " "
761 [-]: MOVE      R49 R25      ; R49 := R25
762 [-]: LOADK     R50 K113     ; R50 := " ("
763 [-]: SELF      R51 R4 K30   ; R52 := R4; R51 := R4["0x5DB0BD4"]
764 [-]: LOADK     R53 K114     ; R53 := "/Lotus/Language/Menu/Loadout_Archwing"
765 [-]: MOVE      R54 R0       ; R54 := R0
766 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
767 [-]: LOADK     R52 K115     ; R52 := ")"
768 [-]: CONCAT    R25 R47 R52  ; R25 := R47 .. R48 .. R49 .. R50 .. R51 .. R52
769 [-]: JMP       783          ; PC := 783
770 [-]: SELF      R47 R4 K30   ; R48 := R4; R47 := R4["0x5DB0BD4"]
771 [-]: LOADK     R49 K112     ; R49 := "<ARCHWING>"
772 [-]: MOVE      R50 R1       ; R50 := R1
773 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
774 [-]: LOADK     R48 K32      ; R48 := " "
775 [-]: MOVE      R49 R25      ; R49 := R25
776 [-]: LOADK     R50 K113     ; R50 := " ("
777 [-]: SELF      R51 R4 K30   ; R52 := R4; R51 := R4["0x5DB0BD4"]
778 [-]: LOADK     R53 K116     ; R53 := "/Lotus/Language/Menu/Sharkwing"
779 [-]: MOVE      R54 R0       ; R54 := R0
780 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
781 [-]: LOADK     R52 K115     ; R52 := ")"
782 [-]: CONCAT    R25 R47 R52  ; R25 := R47 .. R48 .. R49 .. R50 .. R51 .. R52
783 [-]: NEWTABLE  R47 0 21     ; R47 := {}
784 [-]: SETTABLE  R47 K117 R5  ; R47["mMission"] := R5
785 [-]: SETTABLE  R47 K118 R44 ; R47["mFounders"] := R44
786 [-]: SETTABLE  R47 K119 R28 ; R47["mTexture"] := R28
787 [-]: SETTABLE  R47 K120 R45 ; R47["mLocationTexture"] := R45
788 [-]: SETTABLE  R47 K13 R6   ; R47["mAlertInfo"] := R6
789 [-]: SETTABLE  R47 K121 R8  ; R47["mSyndicateInfo"] := R8
790 [-]: SETTABLE  R47 K122 R26 ; R47["mInvasionInfo"] := R26
791 [-]: SETTABLE  R47 K123 R7  ; R47["mGoalInfo"] := R7
792 [-]: SETTABLE  R47 K124 R9  ; R47["mSortieInfo"] := R9
793 [-]: SETTABLE  R47 K125 R10 ; R47["mActiveMissionInfo"] := R10
794 [-]: SETTABLE  R47 K126 R11 ; R47["mGhostTowerMissionInfo"] := R11
795 [-]: SETTABLE  R47 K127 R12 ; R47["mEliteAlertMissionInfo"] := R12
796 [-]: SETTABLE  R47 K128 R38 ; R47["mCardTag"] := R38
797 [-]: SETTABLE  R47 K129 R25 ; R47["mName"] := R25
798 [-]: SETTABLE  R47 K130 R37 ; R47["mRarity"] := R37
799 [-]: SETTABLE  R47 K79 R29  ; R47["mDesc"] := R29
800 [-]: SETTABLE  R47 K131 R30 ; R47["mCompleted"] := R30
801 [-]: SETTABLE  R47 K20 R31  ; R47["mUnlocked"] := R31
802 [-]: SETTABLE  R47 K132 R32 ; R47["mDescText"] := R32
803 [-]: SETTABLE  R47 K133 R36 ; R47["mNameText"] := R36
804 [-]: SETTABLE  R47 K134 R27 ; R47["mNumMissions"] := R27
805 [-]: SETTABLE  R47 K135 R33 ; R47["mDifficulty"] := R33
806 [-]: SETTABLE  R47 K136 R34 ; R47["mLevelMin"] := R34
807 [-]: SETTABLE  R47 K137 R35 ; R47["mLevelMax"] := R35
808 [-]: GETTABLE  R48 R5 K139  ; R48 := R5["conclaveRange"]
809 [-]: GETTABLE  R48 R48 K140 ; R48 := R48["minValue"]
810 [-]: SETTABLE  R47 K138 R48 ; R47["mConclaveMin"] := R48
811 [-]: GETTABLE  R48 R5 K139  ; R48 := R5["conclaveRange"]
812 [-]: GETTABLE  R48 R48 K142 ; R48 := R48["maxValue"]
813 [-]: SETTABLE  R47 K141 R48 ; R47["mConclaveMax"] := R48
814 [-]: RETURN    R47 2        ; return R47
815 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 3728
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x5FF274BB"]
  2 [-]: GETGLOBAL R4 K1        ; R4 := _G
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_MeleeCombosMovie"]
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R3 K4        ; R3 := _T
 11 [-]: SETTABLE  R3 K5 R1     ; R3["StanceUpgradeInfo"] := R1
 12 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x458F27A9"]
 13 [-]: LOADK     R5 K7        ; R5 := "SetStanceUpgradeInfo"
 14 [-]: LOADK     R6 K5        ; R6 := "StanceUpgradeInfo"
 15 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 16 [-]: GETGLOBAL R3 K4        ; R3 := _T
 17 [-]: SETTABLE  R3 K5 K8     ; R3["StanceUpgradeInfo"] := nil
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 3738
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 73
  5 [-]: JMP       73           ; PC := 73
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 73
 11 [-]: JMP       73           ; PC := 73
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 13 [-]: GETGLOBAL R1 K4        ; R1 := gGameData
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 73
 16 [-]: JMP       73           ; PC := 73
 17 [-]: GETGLOBAL R0 K4        ; R0 := gGameData
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x6F2E05FD"]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 156
 24 [-]: JMP       156          ; PC := 156
 25 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x5A67CD40"]
 26 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LOT_NORMAL"]
 28 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0["0x413E14F1"]
 29 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 30 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["LOT_NORMAL"]
 31 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 32 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 33 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 1         ; if R2 then PC := 156
 37 [-]: JMP       156          ; PC := 156
 38 [-]: SELF      R2 R1 K10    ; R3 := R1; R2 := R1["0xA81C4B63"]
 39 [-]: GETGLOBAL R4 K7        ; R4 := Lotus_Game
 40 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["MELEE_SLOT"]
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mItemId"]
 43 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1["0xA81C4B63"]
 44 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 45 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["MELEE_SLOT"]
 46 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 47 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mModSlot"]
 48 [-]: SELF      R4 R0 K14    ; R5 := R0; R4 := R0["0x177B1956"]
 49 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["mId"]
 50 [-]: MOVE      R7 R3        ; R7 := R3
 51 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 52 [-]: LOADK     R5 K16       ; R5 := 1
 53 [-]: LEN       R6 R4        ; R6 := # R4
 54 [-]: LOADK     R7 K16       ; R7 := 1
 55 [-]: FORPREP   R5 71        ; R5 -= R7; PC := 71
 56 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 57 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 58 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["mItemType"]
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: TEST      R9 1         ; if R9 then PC := 71
 61 [-]: JMP       71           ; PC := 71
 62 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 63 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mItemType"]
 64 [-]: SELF      R9 R9 K2     ; R10 := R9; R9 := R9["0x8B598ED4"]
 65 [-]: GETGLOBAL R11 K18      ; R11 := gMeleeTreeType
 66 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 67 [-]: TEST      R9 0         ; if not R9 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 70 [-]: RETURN    R9 2         ; return R9
 71 [-]: FORLOOP   R5 56        ; R5 += R7; if R5 <= R6 then begin PC := 56; R8 := R5 end
 72 [-]: JMP       156          ; PC := 156
 73 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 74 [-]: GETGLOBAL R10 K19      ; R10 := gRegion
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: TEST      R9 1         ; if R9 then PC := 156
 77 [-]: JMP       156          ; PC := 156
 78 [-]: GETGLOBAL R9 K19       ; R9 := gRegion
 79 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9["0x3E2F6BF"]
 80 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 81 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 82 [-]: MOVE      R11 R9       ; R11 := R9
 83 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 84 [-]: TEST      R10 1        ; if R10 then PC := 156
 85 [-]: JMP       156          ; PC := 156
 86 [-]: SELF      R10 R9 K21   ; R11 := R9; R10 := R9["0x8DB5D01F"]
 87 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 88 [-]: SELF      R10 R10 K22  ; R11 := R10; R10 := R10["0x70627EFF"]
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: GETGLOBAL R11 K0       ; R11 := 0x400E7765
 91 [-]: MOVE      R12 R10      ; R12 := R10
 92 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 93 [-]: TEST      R11 1        ; if R11 then PC := 156
 94 [-]: JMP       156          ; PC := 156
 95 [-]: SELF      R11 R10 K23  ; R12 := R10; R11 := R10["0x3061149"]
 96 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 97 [-]: LOADK     R12 K16      ; R12 := 1
 98 [-]: MOVE      R13 R11      ; R13 := R11
 99 [-]: LOADK     R14 K16      ; R14 := 1
100 [-]: FORPREP   R12 124      ; R12 -= R14; PC := 124
101 [-]: SELF      R16 R10 K24  ; R17 := R10; R16 := R10["0x38F325B8"]
102 [-]: SUB       R18 R15 K16  ; R18 := R15 - 1
103 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
104 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
105 [-]: MOVE      R18 R16      ; R18 := R16
106 [-]: CALL      R17 2 2      ; R17 := R17(R18)
107 [-]: TEST      R17 1        ; if R17 then PC := 124
108 [-]: JMP       124          ; PC := 124
109 [-]: SELF      R17 R16 K2   ; R18 := R16; R17 := R16["0x8B598ED4"]
110 [-]: GETGLOBAL R19 K18      ; R19 := gMeleeTreeType
111 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
112 [-]: TEST      R17 0        ; if not R17 then PC := 124
113 [-]: JMP       124          ; PC := 124
114 [-]: GETGLOBAL R17 K7       ; R17 := Lotus_Game
115 [-]: GETTABLE  R17 R17 K25  ; R17 := R17["0xA9D5605B"]
116 [-]: CALL      R17 1 2      ; R17 := R17()
117 [-]: SELF      R18 R16 K26  ; R19 := R16; R18 := R16["0xE2B32C65"]
118 [-]: CALL      R18 2 2      ; R18 := R18(R19)
119 [-]: SETTABLE  R17 K17 R18  ; R17["mItemType"] := R18
120 [-]: SELF      R18 R16 K28  ; R19 := R16; R18 := R16["0x952C658E"]
121 [-]: CALL      R18 2 2      ; R18 := R18(R19)
122 [-]: SETTABLE  R17 K27 R18  ; R17["mUpgradeFingerprint"] := R18
123 [-]: RETURN    R17 2        ; return R17
124 [-]: FORLOOP   R12 101      ; R12 += R14; if R12 <= R13 then begin PC := 101; R15 := R12 end
125 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
126 [-]: GETGLOBAL R19 K1       ; R19 := gGameRules
127 [-]: CALL      R18 2 2      ; R18 := R18(R19)
128 [-]: TEST      R18 1        ; if R18 then PC := 156
129 [-]: JMP       156          ; PC := 156
130 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
131 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x8B598ED4"]
132 [-]: GETGLOBAL R20 K29      ; R20 := gLotusPvpGameRulesType
133 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
134 [-]: TEST      R18 0        ; if not R18 then PC := 141
135 [-]: JMP       141          ; PC := 141
136 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
137 [-]: SELF      R18 R18 K30  ; R19 := R18; R18 := R18["0x3740FA61"]
138 [-]: CALL      R18 2 2      ; R18 := R18(R19)
139 [-]: TEST      R18 1        ; if R18 then PC := 147
140 [-]: JMP       147          ; PC := 147
141 [-]: GETGLOBAL R18 K1       ; R18 := gGameRules
142 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x8B598ED4"]
143 [-]: GETGLOBAL R20 K31      ; R20 := gLotusFightingGameRulesType
144 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
145 [-]: TEST      R18 0        ; if not R18 then PC := 156
146 [-]: JMP       156          ; PC := 156
147 [-]: GETGLOBAL R18 K7       ; R18 := Lotus_Game
148 [-]: GETTABLE  R18 R18 K25  ; R18 := R18["0xA9D5605B"]
149 [-]: CALL      R18 1 2      ; R18 := R18()
150 [-]: SELF      R19 R10 K32  ; R20 := R10; R19 := R10["0x98CC31EA"]
151 [-]: CALL      R19 2 2      ; R19 := R19(R20)
152 [-]: SELF      R19 R19 K26  ; R20 := R19; R19 := R19["0xE2B32C65"]
153 [-]: CALL      R19 2 2      ; R19 := R19(R20)
154 [-]: SETTABLE  R18 K17 R19  ; R18["mItemType"] := R19
155 [-]: RETURN    R18 2        ; return R18
156 [-]: LOADNIL   R19 R19      ; R19 := nil
157 [-]: RETURN    R19 2        ; return R19
158 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 3787
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x2C00D429
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Types/LotusMeleeTree/LotusMeleeTree"
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 39
  8 [-]: JMP       39           ; PC := 39
  9 [-]: LOADK     R3 K3        ; R3 := 0
 10 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 11 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0x38F325B8"]
 12 [-]: MOVE      R7 R3        ; R7 := R3
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 15 [-]: TEST      R4 1         ; if R4 then PC := 39
 16 [-]: JMP       39           ; PC := 39
 17 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x38F325B8"]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 20 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4["0x8B598ED4"]
 21 [-]: GETGLOBAL R7 K6        ; R7 := gLotusArtifactUpgradeType
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: SELF      R6 R4 K5     ; R7 := R4; R6 := R4["0x8B598ED4"]
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 26 [-]: TEST      R5 0         ; if not R5 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: TEST      R6 0         ; if not R6 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: TEST      R1 1         ; if R1 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0["0xF21555A7"]
 33 [-]: MOVE      R9 R4        ; R9 := R4
 34 [-]: MOVE      R10 R1       ; R10 := R1
 35 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 36 [-]: JMP       10           ; PC := 10
 37 [-]: ADD       R3 R3 K8     ; R3 := R3 + 1
 38 [-]: JMP       10           ; PC := 10
 39 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 3806
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "Assassination" then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[1]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       101          ; PC := 101
  8 [-]: EQ        0 R0 K4      ; if R0 ~= "Capture" then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K1        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[2]
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       101          ; PC := 101
 15 [-]: EQ        0 R0 K6      ; if R0 ~= "PVP" then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[3]
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       101          ; PC := 101
 22 [-]: EQ        0 R0 K8      ; if R0 ~= "Deception" then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R2 K1        ; R2 := _G
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[4]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       101          ; PC := 101
 29 [-]: EQ        0 R0 K10     ; if R0 ~= "Defense" then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R2 K1        ; R2 := _G
 32 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 33 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[6]
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: JMP       101          ; PC := 101
 36 [-]: EQ        0 R0 K12     ; if R0 ~= "Exterminate" then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: EQ        1 R1 K13     ; if R1 == nil then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R2 K1        ; R2 := _G
 41 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 42 [-]: ADD       R3 K14 R1    ; R3 := 7 + R1
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       101          ; PC := 101
 46 [-]: EQ        0 R0 K15     ; if R0 ~= "Hijack" then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: GETGLOBAL R2 K1        ; R2 := _G
 49 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 50 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[10]
 51 [-]: RETURN    R2 2         ; return R2
 52 [-]: JMP       101          ; PC := 101
 53 [-]: EQ        0 R0 K17     ; if R0 ~= "Territory" then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R2 K1        ; R2 := _G
 56 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 57 [-]: GETTABLE  R2 R2 K18    ; R2 := R2[11]
 58 [-]: RETURN    R2 2         ; return R2
 59 [-]: JMP       101          ; PC := 101
 60 [-]: EQ        0 R0 K19     ; if R0 ~= "MobileDefense" then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R2 K1        ; R2 := _G
 63 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 64 [-]: GETTABLE  R2 R2 K20    ; R2 := R2[12]
 65 [-]: RETURN    R2 2         ; return R2
 66 [-]: JMP       101          ; PC := 101
 67 [-]: EQ        0 R0 K21     ; if R0 ~= "Rescue" then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R2 K1        ; R2 := _G
 70 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 71 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[13]
 72 [-]: RETURN    R2 2         ; return R2
 73 [-]: JMP       101          ; PC := 101
 74 [-]: EQ        0 R0 K23     ; if R0 ~= "Sabotage" then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETGLOBAL R2 K1        ; R2 := _G
 77 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 78 [-]: GETTABLE  R2 R2 K24    ; R2 := R2[14]
 79 [-]: RETURN    R2 2         ; return R2
 80 [-]: JMP       101          ; PC := 101
 81 [-]: EQ        0 R0 K25     ; if R0 ~= "Spy" then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETGLOBAL R2 K1        ; R2 := _G
 84 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 85 [-]: GETTABLE  R2 R2 K26    ; R2 := R2[15]
 86 [-]: RETURN    R2 2         ; return R2
 87 [-]: JMP       101          ; PC := 101
 88 [-]: EQ        0 R0 K27     ; if R0 ~= "Survival" then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: GETGLOBAL R2 K1        ; R2 := _G
 91 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 92 [-]: GETTABLE  R2 R2 K28    ; R2 := R2[16]
 93 [-]: RETURN    R2 2         ; return R2
 94 [-]: JMP       101          ; PC := 101
 95 [-]: EQ        0 R0 K29     ; if R0 ~= "Void" then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETGLOBAL R2 K1        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 99 [-]: GETTABLE  R2 R2 K30    ; R2 := R2[17]
100 [-]: RETURN    R2 2         ; return R2
101 [-]: GETGLOBAL R2 K1        ; R2 := _G
102 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
103 [-]: GETTABLE  R2 R2 K31    ; R2 := R2[5]
104 [-]: RETURN    R2 2         ; return R2
105 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 3840
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 0         ; if not R3 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 12 [-]: RETURN    R3 5         ; return R3,R4,R5,R6
 13 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x6F2E05FD"]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SELF      R4 R3 K2     ; R5 := R3; R4 := R3["0x70666039"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 18 [-]: MOVE      R6 R4        ; R6 := R4
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 0         ; if not R5 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADNIL   R5 R8        ; R5 := R6 := R7 := R8 := nil
 23 [-]: RETURN    R5 5         ; return R5,R6,R7,R8
 24 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1["0x52E65D47"]
 25 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 26 [-]: GETGLOBAL R6 K4        ; R6 := 0x63B09107
 27 [-]: MOVE      R7 R4        ; R7 := R4
 28 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 29 [-]: JMP       102          ; PC := 102
 30 [-]: GETTABLE  R11 R10 K5   ; R11 := R10["mItemType"]
 31 [-]: EQ        0 R11 R1     ; if R11 ~= R1 then PC := 102
 32 [-]: JMP       102          ; PC := 102
 33 [-]: LOADK     R11 K6       ; R11 := -1
 34 [-]: GETTABLE  R12 R10 K7   ; R12 := R10["mProgress"]
 35 [-]: LEN       R13 R12      ; R13 := # R12
 36 [-]: LT        0 K8 R13     ; if 0 >= R13 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: GETTABLE  R13 R12 K9   ; R13 := R12[1]
 39 [-]: GETTABLE  R11 R13 K10  ; R11 := R13["mCompletion"]
 40 [-]: LOADK     R13 K8       ; R13 := 0
 41 [-]: LE        0 K8 R11     ; if 0 > R11 then PC := 75
 42 [-]: JMP       75           ; PC := 75
 43 [-]: LEN       R14 R12      ; R14 := # R12
 44 [-]: LT        0 R14 R5     ; if R14 >= R5 then PC := 60
 45 [-]: JMP       60           ; PC := 60
 46 [-]: GETGLOBAL R14 K4       ; R14 := 0x63B09107
 47 [-]: MOVE      R15 R12      ; R15 := R12
 48 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R19 R18 K10  ; R19 := R18["mCompletion"]
 51 [-]: LT        0 K6 R19     ; if -1 >= R19 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: MOVE      R13 R17      ; R13 := R17
 54 [-]: JMP       56           ; PC := 56
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 50; R16 := R17 end
 57 [-]: JMP       50           ; PC := 50
 58 [-]: ADD       R13 R13 K9   ; R13 := R13 + 1
 59 [-]: JMP       75           ; PC := 75
 60 [-]: LOADK     R19 K9       ; R19 := 1
 61 [-]: GETGLOBAL R20 K11      ; R20 := math
 62 [-]: GETTABLE  R20 R20 K12  ; R20 := R20["0x65F9712A"]
 63 [-]: LEN       R21 R12      ; R21 := # R12
 64 [-]: MOVE      R22 R5       ; R22 := R5
 65 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 66 [-]: LOADK     R21 K9       ; R21 := 1
 67 [-]: FORPREP   R19 74       ; R19 -= R21; PC := 74
 68 [-]: GETTABLE  R23 R12 R22  ; R23 := R12[R22]
 69 [-]: GETTABLE  R23 R23 K10  ; R23 := R23["mCompletion"]
 70 [-]: LT        0 R23 R11    ; if R23 >= R11 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R13 R22      ; R13 := R22
 73 [-]: JMP       75           ; PC := 75
 74 [-]: FORLOOP   R19 68       ; R19 += R21; if R19 <= R20 then begin PC := 68; R22 := R19 end
 75 [-]: LT        0 R11 K8     ; if R11 >= 0 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: LOADK     R13 K9       ; R13 := 1
 78 [-]: LOADK     R11 K8       ; R11 := 0
 79 [-]: JMP       84           ; PC := 84
 80 [-]: EQ        0 R13 K8     ; if R13 ~= 0 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: ADD       R11 R11 K9   ; R11 := R11 + 1
 83 [-]: LOADK     R13 K9       ; R13 := 1
 84 [-]: LOADNIL   R23 R23      ; R23 := nil
 85 [-]: TEST      R2 0         ; if not R2 then PC := 97
 86 [-]: JMP       97           ; PC := 97
 87 [-]: SELF      R24 R1 K13   ; R25 := R1; R24 := R1["0xC94BFA6B"]
 88 [-]: SUB       R26 R13 K9   ; R26 := R13 - 1
 89 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
 90 [-]: TEST      R24 0        ; if not R24 then PC := 97
 91 [-]: JMP       97           ; PC := 97
 92 [-]: SELF      R24 R1 K14   ; R25 := R1; R24 := R1["0x6C207447"]
 93 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 94 [-]: GETTABLE  R24 R24 R13  ; R24 := R24[R13]
 95 [-]: GETTABLE  R24 R24 K15  ; R24 := R24["mMainMission"]
 96 [-]: GETTABLE  R23 R24 K16  ; R23 := R24["mKey"]
 97 [-]: MOVE      R24 R13      ; R24 := R13
 98 [-]: MOVE      R25 R11      ; R25 := R11
 99 [-]: GETTABLE  R26 R10 K17  ; R26 := R10["mCanProgressQuest"]
100 [-]: MOVE      R27 R23      ; R27 := R23
101 [-]: RETURN    R24 5        ; return R24,R25,R26,R27
102 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 30; R8 := R9 end
103 [-]: JMP       30           ; PC := 30
104 [-]: LOADNIL   R24 R27      ; R24 := R25 := R26 := R27 := nil
105 [-]: RETURN    R24 5        ; return R24,R25,R26,R27
106 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 3910
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 3914
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  7 [-]: RETURN    R1 5         ; return R1,R2,R3,R4
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x6F2E05FD"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ActiveQuestLoaded"]
 12 [-]: TEST      R2 1         ; if R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R2 R5        ; R2 := R3 := R4 := R5 := nil
 15 [-]: RETURN    R2 5         ; return R2,R3,R4,R5
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x7C282057
 17 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0x52C8784B"]
 18 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 26 [-]: RETURN    R3 5         ; return R3,R4,R5,R6
 27 [-]: MOVE      R3 R2        ; R3 := R2
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: MOVE      R6 R2        ; R6 := R2
 31 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 32 [-]: RETURN    R3 0         ; return R3,...
 33 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 3933
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 3937
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R3 K0        ; R3 := gPlayerProfileMgr
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x21EF7B1A"]
  3 [-]: LOADK     R5 K2        ; R5 := 0
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 0         ; if not R4 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x654F1092"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
 14 [-]: MOVE      R6 R4        ; R6 := R4
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 0         ; if not R5 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4["0x6F2E05FD"]
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xAB4E6F2A"]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 24 [-]: MOVE      R7 R5        ; R7 := R5
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: TEST      R6 1         ; if R6 then PC := 195
 27 [-]: JMP       195          ; PC := 195
 28 [-]: SELF      R6 R4 K7     ; R7 := R4; R6 := R4["0x2D0B8A86"]
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: LOADK     R7 K8        ; R7 := 1
 31 [-]: LEN       R8 R5        ; R8 := # R5
 32 [-]: LOADK     R9 K8        ; R9 := 1
 33 [-]: FORPREP   R7 189       ; R7 -= R9; PC := 189
 34 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 35 [-]: MOVE      R12 R0       ; R12 := R0
 36 [-]: GETUPVAL  R13 U0       ; R13 := U0
 37 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["0x36BA5F48"]
 38 [-]: CALL      R13 1 2      ; R13 := R13()
 39 [-]: TEST      R13 0        ; if not R13 then PC := 75
 40 [-]: JMP       75           ; PC := 75
 41 [-]: GETGLOBAL R13 K3       ; R13 := 0x400E7765
 42 [-]: GETGLOBAL R14 K10      ; R14 := _G
 43 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["UITypes_UGCKeys"]
 44 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 45 [-]: TEST      R13 1        ; if R13 then PC := 75
 46 [-]: JMP       75           ; PC := 75
 47 [-]: LOADK     R13 K8       ; R13 := 1
 48 [-]: GETGLOBAL R14 K10      ; R14 := _G
 49 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["UITypes_UGCKeys"]
 50 [-]: LEN       R14 R14      ; R14 := # R14
 51 [-]: LOADK     R15 K8       ; R15 := 1
 52 [-]: FORPREP   R13 74       ; R13 -= R15; PC := 74
 53 [-]: GETGLOBAL R17 K3       ; R17 := 0x400E7765
 54 [-]: GETTABLE  R18 R11 K12  ; R18 := R11["mItemType"]
 55 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 56 [-]: TEST      R17 1        ; if R17 then PC := 74
 57 [-]: JMP       74           ; PC := 74
 58 [-]: GETGLOBAL R17 K3       ; R17 := 0x400E7765
 59 [-]: GETGLOBAL R18 K10      ; R18 := _G
 60 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["UITypes_UGCKeys"]
 61 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 62 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 63 [-]: TEST      R17 1        ; if R17 then PC := 74
 64 [-]: JMP       74           ; PC := 74
 65 [-]: GETTABLE  R17 R11 K12  ; R17 := R11["mItemType"]
 66 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0x8B598ED4"]
 67 [-]: GETGLOBAL R19 K10      ; R19 := _G
 68 [-]: GETTABLE  R19 R19 K11  ; R19 := R19["UITypes_UGCKeys"]
 69 [-]: GETTABLE  R19 R19 R16  ; R19 := R19[R16]
 70 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 71 [-]: TEST      R17 0        ; if not R17 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: MOVE      R12 R1       ; R12 := R1
 74 [-]: FORLOOP   R13 53       ; R13 += R15; if R13 <= R14 then begin PC := 53; R16 := R13 end
 75 [-]: GETGLOBAL R17 K14      ; R17 := 0x7C282057
 76 [-]: GETTABLE  R18 R11 K12  ; R18 := R11["mItemType"]
 77 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 78 [-]: GETGLOBAL R18 K3       ; R18 := 0x400E7765
 79 [-]: MOVE      R19 R17      ; R19 := R17
 80 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 81 [-]: TEST      R18 1        ; if R18 then PC := 189
 82 [-]: JMP       189          ; PC := 189
 83 [-]: MOVE      R18 R0       ; R18 := R0
 84 [-]: GETTABLE  R19 R11 K12  ; R19 := R11["mItemType"]
 85 [-]: SELF      R19 R19 K13  ; R20 := R19; R19 := R19["0x8B598ED4"]
 86 [-]: GETGLOBAL R21 K15      ; R21 := gKeyItemType
 87 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 88 [-]: TEST      R19 0        ; if not R19 then PC := 117
 89 [-]: JMP       117          ; PC := 117
 90 [-]: SELF      R20 R17 K16  ; R21 := R17; R20 := R17["0xCDC5A063"]
 91 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 92 [-]: TEST      R20 0        ; if not R20 then PC := 117
 93 [-]: JMP       117          ; PC := 117
 94 [-]: MOVE      R18 R1       ; R18 := R1
 95 [-]: LOADK     R20 K8       ; R20 := 1
 96 [-]: GETTABLE  R21 R6 K17   ; R21 := R6["mGoals"]
 97 [-]: LEN       R21 R21      ; R21 := # R21
 98 [-]: LOADK     R22 K8       ; R22 := 1
 99 [-]: FORPREP   R20 116      ; R20 -= R22; PC := 116
100 [-]: SELF      R24 R4 K18   ; R25 := R4; R24 := R4["0x4C365F64"]
101 [-]: SUB       R26 R23 K8   ; R26 := R23 - 1
102 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
103 [-]: TEST      R24 0        ; if not R24 then PC := 116
104 [-]: JMP       116          ; PC := 116
105 [-]: GETTABLE  R24 R6 K17   ; R24 := R6["mGoals"]
106 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
107 [-]: GETTABLE  R25 R11 K12  ; R25 := R11["mItemType"]
108 [-]: GETTABLE  R26 R24 K19  ; R26 := R24["mKeyRequired"]
109 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 116
110 [-]: JMP       116          ; PC := 116
111 [-]: GETTABLE  R25 R24 K20  ; R25 := R24["mSuccess"]
112 [-]: EQ        0 R25 K2     ; if R25 ~= 0 then PC := 116
113 [-]: JMP       116          ; PC := 116
114 [-]: MOVE      R18 R0       ; R18 := R0
115 [-]: JMP       117          ; PC := 117
116 [-]: FORLOOP   R20 100      ; R20 += R22; if R20 <= R21 then begin PC := 100; R23 := R20 end
117 [-]: GETTABLE  R25 R11 K21  ; R25 := R11["mItemCount"]
118 [-]: LT        0 K2 R25     ; if 0 >= R25 then PC := 189
119 [-]: JMP       189          ; PC := 189
120 [-]: TEST      R12 1        ; if R12 then PC := 189
121 [-]: JMP       189          ; PC := 189
122 [-]: TEST      R18 1        ; if R18 then PC := 189
123 [-]: JMP       189          ; PC := 189
124 [-]: NEWTABLE  R25 0 6      ; R25 := {}
125 [-]: SETTABLE  R25 K22 R11  ; R25["Key"] := R11
126 [-]: SETTABLE  R25 K23 R17  ; R25["Type"] := R17
127 [-]: GETGLOBAL R26 K25      ; R26 := 0xCAA43ABB
128 [-]: MOVE      R27 R17      ; R27 := R17
129 [-]: CALL      R26 2 2      ; R26 := R26(R27)
130 [-]: SETTABLE  R25 K24 R26  ; R25["Anchor"] := R26
131 [-]: GETGLOBAL R26 K27      ; R26 := 0xE6DC43B0
132 [-]: GETGLOBAL R27 K28      ; R27 := 0x9FAED6BC
133 [-]: SELF      R28 R17 K29  ; R29 := R17; R28 := R17["0x616C74B6"]
134 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
135 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
136 [-]: MOVE      R28 R0       ; R28 := R0
137 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
138 [-]: SETTABLE  R25 K26 R26  ; R25["Name"] := R26
139 [-]: GETGLOBAL R26 K27      ; R26 := 0xE6DC43B0
140 [-]: GETGLOBAL R27 K28      ; R27 := 0x9FAED6BC
141 [-]: SELF      R28 R17 K31  ; R29 := R17; R28 := R17["0x42300EB5"]
142 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
143 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
144 [-]: MOVE      R28 R0       ; R28 := R0
145 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
146 [-]: SETTABLE  R25 K30 R26  ; R25["Description"] := R26
147 [-]: GETUPVAL  R26 U1       ; R26 := U1
148 [-]: LOADNIL   R27 R27      ; R27 := nil
149 [-]: MOVE      R28 R17      ; R28 := R17
150 [-]: LOADNIL   R29 R30      ; R29 := R30 := nil
151 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
152 [-]: SETTABLE  R25 K32 R26  ; R25["ToolTip"] := R26
153 [-]: GETGLOBAL R26 K3       ; R26 := 0x400E7765
154 [-]: MOVE      R27 R2       ; R27 := R2
155 [-]: CALL      R26 2 2      ; R26 := R26(R27)
156 [-]: TEST      R26 1        ; if R26 then PC := 170
157 [-]: JMP       170          ; PC := 170
158 [-]: SELF      R26 R2 K33   ; R27 := R2; R26 := R2["0x62FBC1B8"]
159 [-]: GETTABLE  R28 R11 K12  ; R28 := R11["mItemType"]
160 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
161 [-]: GETGLOBAL R27 K3       ; R27 := 0x400E7765
162 [-]: MOVE      R28 R26      ; R28 := R26
163 [-]: CALL      R27 2 2      ; R27 := R27(R28)
164 [-]: TEST      R27 1        ; if R27 then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: SETTABLE  R25 K34 R26  ; R25["StoreItem"] := R26
167 [-]: SELF      R27 R26 K36  ; R28 := R26; R27 := R26["0xF1A9732E"]
168 [-]: CALL      R27 2 2      ; R27 := R27(R28)
169 [-]: SETTABLE  R25 K35 R27  ; R25["Icon"] := R27
170 [-]: TEST      R19 0        ; if not R19 then PC := 189
171 [-]: JMP       189          ; PC := 189
172 [-]: SELF      R27 R17 K37  ; R28 := R17; R27 := R17["0x49F6C90A"]
173 [-]: CALL      R27 2 2      ; R27 := R27(R28)
174 [-]: TEST      R27 0        ; if not R27 then PC := 178
175 [-]: JMP       178          ; PC := 178
176 [-]: GETTABLE  R27 R11 K21  ; R27 := R11["mItemCount"]
177 [-]: SETTABLE  R25 K38 R27  ; R25["Count"] := R27
178 [-]: EQ        1 R1 K39     ; if R1 == nil then PC := 184
179 [-]: JMP       184          ; PC := 184
180 [-]: SELF      R27 R17 K40  ; R28 := R17; R27 := R17["0x9B16E6AD"]
181 [-]: CALL      R27 2 2      ; R27 := R27(R28)
182 [-]: EQ        0 R27 R1     ; if R27 ~= R1 then PC := 189
183 [-]: JMP       189          ; PC := 189
184 [-]: GETGLOBAL R27 K41      ; R27 := table
185 [-]: GETTABLE  R27 R27 K42  ; R27 := R27["0xE6450C9D"]
186 [-]: MOVE      R28 R0       ; R28 := R0
187 [-]: MOVE      R29 R25      ; R29 := R25
188 [-]: CALL      R27 3 1      ; R27(R28,R29)
189 [-]: FORLOOP   R7 34        ; R7 += R9; if R7 <= R8 then begin PC := 34; R10 := R7 end
190 [-]: GETGLOBAL R27 K41      ; R27 := table
191 [-]: GETTABLE  R27 R27 K43  ; R27 := R27["0xA5C58010"]
192 [-]: MOVE      R28 R0       ; R28 := R0
193 [-]: CLOSURE   R29 0        ; R29 := closure(Function #212.1)
194 [-]: CALL      R27 3 1      ; R27(R28,R29)
195 [-]: RETURN    R0 1         ; return 


; Function #212.1:
;
; Name:            
; Defined at line: 4019
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Name"]
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["Name"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 4024
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x32D83CC3"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 131
  5 [-]: JMP       131          ; PC := 131
  6 [-]: GETGLOBAL R1 K2        ; R1 := gRegion
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x9139A00"]
  8 [-]: GETGLOBAL R3 K4        ; R3 := gUIConsoleTriggerType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
 11 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 12 [-]: LOADK     R4 K6        ; R4 := 0
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x654F1092"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: LOADK     R4 K8        ; R4 := 1
 18 [-]: LOADK     R5 K9        ; R5 := 2
 19 [-]: LOADK     R6 K8        ; R6 := 1
 20 [-]: FORPREP   R4 127       ; R4 -= R6; PC := 127
 21 [-]: LOADK     R8 K8        ; R8 := 1
 22 [-]: LEN       R9 R1        ; R9 := # R1
 23 [-]: LOADK     R10 K8       ; R10 := 1
 24 [-]: FORPREP   R8 126       ; R8 -= R10; PC := 126
 25 [-]: MOVE      R12 R1       ; R12 := R1
 26 [-]: GETGLOBAL R13 K10      ; R13 := 0xDA39688E
 27 [-]: CALL      R13 1 2      ; R13 := R13()
 28 [-]: TEST      R13 0        ; if not R13 then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETGLOBAL R13 K11      ; R13 := Engine
 31 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["0x1398DAFB"]
 32 [-]: CALL      R13 1 2      ; R13 := R13()
 33 [-]: TEST      R13 1        ; if R13 then PC := 44
 34 [-]: JMP       44           ; PC := 44
 35 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 36 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13["0xCE832AFF"]
 37 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 38 [-]: GETGLOBAL R14 K14      ; R14 := 0xEC274B1A
 39 [-]: LOADK     R15 K15      ; R15 := "News"
 40 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 41 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 44
 42 [-]: JMP       44           ; PC := 44
 43 [-]: MOVE      R12 R0       ; R12 := R0
 44 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 45 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13["0x4B66A3E4"]
 46 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 47 [-]: TEST      R13 1        ; if R13 then PC := 126
 48 [-]: JMP       126          ; PC := 126
 49 [-]: TEST      R12 0        ; if not R12 then PC := 126
 50 [-]: JMP       126          ; PC := 126
 51 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 52 [-]: SELF      R13 R13 K17  ; R14 := R13; R13 := R13["0x827C6A77"]
 53 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 54 [-]: LEN       R14 R13      ; R14 := # R13
 55 [-]: EQ        1 R14 K6     ; if R14 == 0 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: MOVE      R14 R0       ; R14 := R0
 58 [-]: MOVE      R14 R1       ; R14 := R1
 59 [-]: GETUPVAL  R15 U0       ; R15 := U0
 60 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0xF81722A2"]
 61 [-]: EQ        1 R7 K8      ; if R7 == 1 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R16 R0       ; R16 := R0
 64 [-]: MOVE      R16 R1       ; R16 := R1
 65 [-]: GETGLOBAL R17 K19      ; R17 := math
 66 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["0x65F9712A"]
 67 [-]: LOADK     R18 K8       ; R18 := 1
 68 [-]: LEN       R19 R13      ; R19 := # R13
 69 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 70 [-]: LEN       R18 R13      ; R18 := # R13
 71 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 72 [-]: LOADK     R16 K8       ; R16 := 1
 73 [-]: MOVE      R17 R15      ; R17 := R15
 74 [-]: LOADK     R18 K8       ; R18 := 1
 75 [-]: FORPREP   R16 116      ; R16 -= R18; PC := 116
 76 [-]: GETTABLE  R20 R13 R19  ; R20 := R13[R19]
 77 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["mFeatureItem"]
 78 [-]: SELF      R21 R2 K22   ; R22 := R2; R21 := R2["0xB451D706"]
 79 [-]: MOVE      R23 R20      ; R23 := R20
 80 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 81 [-]: TEST      R21 0        ; if not R21 then PC := 89
 82 [-]: JMP       89           ; PC := 89
 83 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
 84 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21["0xF5F261FF"]
 85 [-]: MOVE      R23 R20      ; R23 := R20
 86 [-]: CALL      R21 3 1      ; R21(R22,R23)
 87 [-]: MOVE      R14 R1       ; R14 := R1
 88 [-]: JMP       116          ; PC := 116
 89 [-]: TEST      R3 1         ; if R3 then PC := 116
 90 [-]: JMP       116          ; PC := 116
 91 [-]: SELF      R21 R2 K24   ; R22 := R2; R21 := R2["0xADADED3A"]
 92 [-]: MOVE      R23 R20      ; R23 := R20
 93 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 94 [-]: TEST      R21 0        ; if not R21 then PC := 116
 95 [-]: JMP       116          ; PC := 116
 96 [-]: GETTABLE  R21 R13 R19  ; R21 := R13[R19]
 97 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["mRequiresMainUpgrade"]
 98 [-]: TEST      R21 0        ; if not R21 then PC := 105
 99 [-]: JMP       105          ; PC := 105
100 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
101 [-]: SELF      R21 R21 K26  ; R22 := R21; R21 := R21["0x5FB1261A"]
102 [-]: CALL      R21 2 2      ; R21 := R21(R22)
103 [-]: TEST      R21 0        ; if not R21 then PC := 116
104 [-]: JMP       116          ; PC := 116
105 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
106 [-]: SELF      R21 R21 K27  ; R22 := R21; R21 := R21["0x49D6937E"]
107 [-]: MOVE      R23 R20      ; R23 := R20
108 [-]: CALL      R21 3 1      ; R21(R22,R23)
109 [-]: MOVE      R14 R1       ; R14 := R1
110 [-]: GETUPVAL  R21 U1       ; R21 := U1
111 [-]: GETTABLE  R22 R13 R19  ; R22 := R13[R19]
112 [-]: GETTABLE  R22 R22 K28  ; R22 := R22["mInstallNowTransmission"]
113 [-]: CALL      R21 2 1      ; R21(R22)
114 [-]: MOVE      R3 R1        ; R3 := R1
115 [-]: JMP       117          ; PC := 117
116 [-]: FORLOOP   R16 76       ; R16 += R18; if R16 <= R17 then begin PC := 76; R19 := R16 end
117 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
118 [-]: SELF      R21 R21 K29  ; R22 := R21; R21 := R21["0x38CD82F1"]
119 [-]: MOVE      R23 R14      ; R23 := R14
120 [-]: CALL      R21 3 1      ; R21(R22,R23)
121 [-]: TEST      R0 0         ; if not R0 then PC := 126
122 [-]: JMP       126          ; PC := 126
123 [-]: GETTABLE  R21 R1 R11   ; R21 := R1[R11]
124 [-]: SELF      R21 R21 K30  ; R22 := R21; R21 := R21["0x6F5A2238"]
125 [-]: CALL      R21 2 1      ; R21(R22)
126 [-]: FORLOOP   R8 25        ; R8 += R10; if R8 <= R9 then begin PC := 25; R11 := R8 end
127 [-]: FORLOOP   R4 21        ; R4 += R6; if R4 <= R5 then begin PC := 21; R7 := R4 end
128 [-]: GETGLOBAL R21 K31      ; R21 := _T
129 [-]: SETTABLE  R21 K32 K33  ; R21["uiConsoleTriggersInitialized"] := "0x1"
130 [-]: JMP       134          ; PC := 134
131 [-]: GETGLOBAL R21 K34      ; R21 := 0x93B1256B
132 [-]: LOADK     R22 K35      ; R22 := "Warning: called UpdateUIConsoleTriggers but the player isn't logged in yet!"
133 [-]: CALL      R21 2 1      ; R21(R22)
134 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 4077
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xC6772A8A"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: EQ        0 R2 K2      ; if R2 ~= 0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: GETGLOBAL R3 K0        ; R3 := string
 11 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["0x7B782033"]
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: LOADK     R5 K4        ; R5 := 1
 14 [-]: LOADK     R6 K4        ; R6 := 1
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETGLOBAL R4 K0        ; R4 := string
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x7B782033"]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R6 R2        ; R6 := R2
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: LOADK     R5 K2        ; R5 := 0
 23 [-]: LOADK     R6 K5        ; R6 := 9
 24 [-]: LOADK     R7 K4        ; R7 := 1
 25 [-]: FORPREP   R5 35        ; R5 -= R7; PC := 35
 26 [-]: GETGLOBAL R9 K0        ; R9 := string
 27 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0x633C4246"]
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: GETGLOBAL R11 K7       ; R11 := 0x9FAED6BC
 30 [-]: MOVE      R12 R8       ; R12 := R8
 31 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 32 [-]: LOADK     R12 K8       ; R12 := ""
 33 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 34 [-]: MOVE      R1 R9        ; R1 := R9
 35 [-]: FORLOOP   R5 26        ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
 36 [-]: EQ        1 R1 K8      ; if R1 == "" then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: EQ        1 R1 K9      ; if R1 == "." then PC := 50
 39 [-]: JMP       50           ; PC := 50
 40 [-]: EQ        0 R1 K10     ; if R1 ~= " " then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: EQ        1 R3 K10     ; if R3 == " " then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: EQ        1 R4 K10     ; if R4 == " " then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: EQ        1 R1 K11     ; if R1 == ". " then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: EQ        0 R1 K12     ; if R1 ~= " ." then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: MOVE      R9 R1        ; R9 := R1
 51 [-]: RETURN    R9 2         ; return R9
 52 [-]: JMP       55           ; PC := 55
 53 [-]: MOVE      R9 R0        ; R9 := R0
 54 [-]: RETURN    R9 2         ; return R9
 55 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 4096
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["GetTopScreen"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETGLOBAL R3 K3        ; R3 := gRegion
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: GETGLOBAL R2 K0        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x8E1FE5E2"]
 19 [-]: CALL      R2 1 3       ; R2,R3 := R2()
 20 [-]: GETGLOBAL R4 K3        ; R4 := gRegion
 21 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x7B2F8B2F"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x8DB5D01F"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x6EA0928F"]
 26 [-]: GETGLOBAL R8 K8        ; R8 := Engine
 27 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["MAIN_HAND"]
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: GETGLOBAL R7 K0        ; R7 := _T
 30 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["DisableHeadTracking"]
 31 [-]: TEST      R7 1         ; if R7 then PC := 83
 32 [-]: JMP       83           ; PC := 83
 33 [-]: EQ        1 R3 K11     ; if R3 == "LoadOut" then PC := 83
 34 [-]: JMP       83           ; PC := 83
 35 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: TEST      R7 0         ; if not R7 then PC := 83
 39 [-]: JMP       83           ; PC := 83
 40 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0["0xF8FD58BD"]
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 83
 43 [-]: JMP       83           ; PC := 83
 44 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0["0x44299779"]
 45 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 46 [-]: TEST      R7 1         ; if R7 then PC := 83
 47 [-]: JMP       83           ; PC := 83
 48 [-]: SELF      R7 R0 K14    ; R8 := R0; R7 := R0["0xF3340665"]
 49 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 50 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PM_AIM"]
 51 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 52 [-]: TEST      R7 1         ; if R7 then PC := 83
 53 [-]: JMP       83           ; PC := 83
 54 [-]: SELF      R7 R0 K14    ; R8 := R0; R7 := R0["0xF3340665"]
 55 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 56 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["PM_FREE_FIRED"]
 57 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 58 [-]: TEST      R7 1         ; if R7 then PC := 83
 59 [-]: JMP       83           ; PC := 83
 60 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 61 [-]: MOVE      R8 R6        ; R8 := R6
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: TEST      R7 1         ; if R7 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: SELF      R7 R6 K17    ; R8 := R6; R7 := R6["0xC06ED429"]
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: TEST      R7 1         ; if R7 then PC := 83
 68 [-]: JMP       83           ; PC := 83
 69 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 70 [-]: MOVE      R8 R6        ; R8 := R6
 71 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 72 [-]: TEST      R7 1         ; if R7 then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R7 K18       ; R7 := 0x2C00D429
 75 [-]: LOADK     R8 K19       ; R8 := "/Lotus/Weapons/Tenno/HackingDevices/TnHackingDevice/TnHackingDeviceWeapon"
 76 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 77 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 83
 78 [-]: JMP       83           ; PC := 83
 79 [-]: SELF      R7 R0 K20    ; R8 := R0; R7 := R0["0xE555AC5C"]
 80 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 81 [-]: TEST      R7 0         ; if not R7 then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: SELF      R7 R0 K21    ; R8 := R0; R7 := R0["0xAC259BD9"]
 84 [-]: CALL      R7 2 1       ; R7(R8)
 85 [-]: JMP       102          ; PC := 102
 86 [-]: LOADNIL   R7 R7        ; R7 := nil
 87 [-]: GETGLOBAL R8 K0        ; R8 := _T
 88 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["DiegeticPosition"]
 89 [-]: TEST      R8 0         ; if not R8 then PC := 96
 90 [-]: JMP       96           ; PC := 96
 91 [-]: EQ        1 R1 K23     ; if R1 == "0x1" then PC := 96
 92 [-]: JMP       96           ; PC := 96
 93 [-]: GETGLOBAL R8 K0        ; R8 := _T
 94 [-]: GETTABLE  R7 R8 K22    ; R7 := R8["DiegeticPosition"]
 95 [-]: JMP       99           ; PC := 99
 96 [-]: SELF      R8 R5 K24    ; R9 := R5; R8 := R5["0x84096397"]
 97 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 98 [-]: MOVE      R7 R8        ; R7 := R8
 99 [-]: SELF      R8 R0 K25    ; R9 := R0; R8 := R0["0x589BE75B"]
100 [-]: MOVE      R10 R7       ; R10 := R7
101 [-]: CALL      R8 3 1       ; R8(R9,R10)
102 [-]: MOVE      R8 R1        ; R8 := R1
103 [-]: RETURN    R8 2         ; return R8
104 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 4132
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: CALL      R3 1 2       ; R3 := R3()
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0["0xC92135A6"]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: LOADK     R6 K2        ; R6 := 1
 14 [-]: LEN       R7 R5        ; R7 := # R5
 15 [-]: LOADK     R8 K2        ; R8 := 1
 16 [-]: FORPREP   R6 23        ; R6 -= R8; PC := 23
 17 [-]: SELF      R10 R3 K3    ; R11 := R3; R10 := R3["0xF64198FD"]
 18 [-]: GETTABLE  R12 R5 R9    ; R12 := R5[R9]
 19 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["mTag"]
 20 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 21 [-]: GETTABLE  R11 R10 K5   ; R11 := R10["name"]
 22 [-]: SETTABLE  R4 R11 K6    ; R4[R11] := "0x1"
 23 [-]: FORLOOP   R6 17        ; R6 += R8; if R6 <= R7 then begin PC := 17; R9 := R6 end
 24 [-]: SELF      R11 R1 K7    ; R12 := R1; R11 := R1["0xB68BBE7C"]
 25 [-]: GETGLOBAL R13 K8       ; R13 := gNavigationFeatureItemType
 26 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 27 [-]: LOADK     R12 K2       ; R12 := 1
 28 [-]: LEN       R13 R11      ; R13 := # R11
 29 [-]: LOADK     R14 K2       ; R14 := 1
 30 [-]: FORPREP   R12 58       ; R12 -= R14; PC := 58
 31 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
 32 [-]: SELF      R16 R16 K9   ; R17 := R16; R16 := R16["0x3077BE70"]
 33 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 34 [-]: GETGLOBAL R17 K10      ; R17 := 0x7C282057
 35 [-]: MOVE      R18 R16      ; R18 := R16
 36 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 37 [-]: SELF      R18 R17 K11  ; R19 := R17; R18 := R17["0xEEFE7983"]
 38 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 39 [-]: LOADK     R19 K2       ; R19 := 1
 40 [-]: LEN       R20 R18      ; R20 := # R18
 41 [-]: LOADK     R21 K2       ; R21 := 1
 42 [-]: FORPREP   R19 57       ; R19 -= R21; PC := 57
 43 [-]: SELF      R23 R3 K3    ; R24 := R3; R23 := R3["0xF64198FD"]
 44 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
 45 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 46 [-]: GETTABLE  R24 R23 K5   ; R24 := R23["name"]
 47 [-]: GETTABLE  R24 R4 R24   ; R24 := R4[R24]
 48 [-]: TEST      R24 0        ; if not R24 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETTABLE  R24 R23 K5   ; R24 := R23["name"]
 51 [-]: SETTABLE  R4 R24 K12   ; R4[R24] := "0x0"
 52 [-]: GETGLOBAL R24 K13      ; R24 := table
 53 [-]: GETTABLE  R24 R24 K14  ; R24 := R24["0xE6450C9D"]
 54 [-]: MOVE      R25 R2       ; R25 := R2
 55 [-]: MOVE      R26 R16      ; R26 := R16
 56 [-]: CALL      R24 3 1      ; R24(R25,R26)
 57 [-]: FORLOOP   R19 43       ; R19 += R21; if R19 <= R20 then begin PC := 43; R22 := R19 end
 58 [-]: FORLOOP   R12 31       ; R12 += R14; if R12 <= R13 then begin PC := 31; R15 := R12 end
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 4167
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["0x97B78441"]
  3 [-]: GETGLOBAL R4 K1        ; R4 := _G
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIColor_DarkGrey"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0xF81722A2"]
  8 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: GETGLOBAL R6 K1        ; R6 := _G
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIMaterial_Rectangle"]
 14 [-]: MOVE      R7 R2        ; R7 := R2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0x63B09107
 17 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: LOADK     R8 K7        ; R8 := ".Foreground"
 20 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: LOADK     R9 K8        ; R9 := ".Shadow"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: MOVE      R9 R1        ; R9 := R1
 25 [-]: LOADK     R10 K9       ; R10 := ".BackShadow"
 26 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 27 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 28 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 29 [-]: JMP       56           ; PC := 56
 30 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0["0x7E1F26D7"]
 31 [-]: MOVE      R12 R9       ; R12 := R9
 32 [-]: MOVE      R13 R4       ; R13 := R4
 33 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 34 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x302AAB2F"]
 35 [-]: MOVE      R12 R9       ; R12 := R9
 36 [-]: LOADK     R13 K12      ; R13 := "RectInnerColor"
 37 [-]: GETTABLE  R14 R3 K13   ; R14 := R3["r"]
 38 [-]: GETTABLE  R15 R3 K14   ; R15 := R3["g"]
 39 [-]: GETTABLE  R16 R3 K15   ; R16 := R3["b"]
 40 [-]: LOADK     R17 K16      ; R17 := 0.34999999403954
 41 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 42 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0["0x302AAB2F"]
 43 [-]: MOVE      R12 R9       ; R12 := R9
 44 [-]: LOADK     R13 K17      ; R13 := "RectEdgeColor"
 45 [-]: GETGLOBAL R14 K1       ; R14 := _G
 46 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["UIColorObject_White"]
 47 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["r"]
 48 [-]: GETGLOBAL R15 K1       ; R15 := _G
 49 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["UIColorObject_White"]
 50 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["g"]
 51 [-]: GETGLOBAL R16 K1       ; R16 := _G
 52 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["UIColorObject_White"]
 53 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["b"]
 54 [-]: LOADK     R17 K19      ; R17 := 1
 55 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 56 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
 57 [-]: JMP       30           ; PC := 30
 58 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 59 [-]: MOVE      R12 R1       ; R12 := R1
 60 [-]: LOADK     R13 K21      ; R13 := "Foreground"
 61 [-]: LOADK     R14 K22      ; R14 := "_z"
 62 [-]: LOADK     R15 K23      ; R15 := 0
 63 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 64 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 65 [-]: MOVE      R12 R1       ; R12 := R1
 66 [-]: LOADK     R13 K24      ; R13 := "Shadow"
 67 [-]: LOADK     R14 K22      ; R14 := "_z"
 68 [-]: LOADK     R15 K25      ; R15 := 200
 69 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 70 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 71 [-]: MOVE      R12 R1       ; R12 := R1
 72 [-]: LOADK     R13 K26      ; R13 := "BackShadow"
 73 [-]: LOADK     R14 K22      ; R14 := "_z"
 74 [-]: LOADK     R15 K27      ; R15 := 400
 75 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 76 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 77 [-]: MOVE      R12 R1       ; R12 := R1
 78 [-]: LOADK     R13 K21      ; R13 := "Foreground"
 79 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 80 [-]: LOADK     R15 K29      ; R15 := 75
 81 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 82 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 83 [-]: MOVE      R12 R1       ; R12 := R1
 84 [-]: LOADK     R13 K24      ; R13 := "Shadow"
 85 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 86 [-]: LOADK     R15 K30      ; R15 := 45
 87 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 88 [-]: SELF      R10 R0 K20   ; R11 := R0; R10 := R0["0x880196A7"]
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: LOADK     R13 K26      ; R13 := "BackShadow"
 91 [-]: LOADK     R14 K28      ; R14 := "_alpha"
 92 [-]: LOADK     R15 K31      ; R15 := 25
 93 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 94 [-]: GETGLOBAL R10 K32      ; R10 := 0x400E7765
 95 [-]: MOVE      R11 R4       ; R11 := R4
 96 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 97 [-]: MOVE      R10 R10      ; R10 := R10
 98 [-]: RETURN    R10 2        ; return R10
 99 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 4188
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.0031308000907302 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: MUL       R1 R0 K1     ; R1 := R0 * 12.920000076294
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K2        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xD6F2D811"]
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: LOADK     R3 K4        ; R3 := 0.41666665673256
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: MUL       R1 K5 R1     ; R1 := 1.0549999475479 * R1
 12 [-]: SUB       R1 R1 K6     ; R1 := R1 - 0.054999999701977
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 4196
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.039280001074076 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: DIV       R1 R0 K1     ; R1 := R0 / 12.920000076294
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xD6F2D811"]
  8 [-]: ADD       R2 R0 K4     ; R2 := R0 + 0.054999999701977
  9 [-]: DIV       R2 R2 K5     ; R2 := R2 / 1.0549999475479
 10 [-]: LOADK     R3 K6        ; R3 := 2.4000000953674
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 4206
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["AP_ATTACK"]
  8 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "<POLARITY_ATTACK>"
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["AP_DEFENSE"]
 12 [-]: SETTABLE  R1 R2 K4     ; R1[R2] := "<POLARITY_DEFENSE>"
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["AP_TACTIC"]
 16 [-]: SETTABLE  R1 R2 K6     ; R1[R2] := "<POLARITY_TACTIC>"
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["AP_POWER"]
 20 [-]: SETTABLE  R1 R2 K8     ; R1[R2] := "<POLARITY_POWER>"
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 23 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["AP_PRECEPT"]
 24 [-]: SETTABLE  R1 R2 K10    ; R1[R2] := "<POLARITY_PRECEPT>"
 25 [-]: GETUPVAL  R1 U1        ; R1 := U1
 26 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 27 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AP_FUSION"]
 28 [-]: SETTABLE  R1 R2 K12    ; R1[R2] := "<POLARITY_FUSION>"
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 31 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["AP_WARD"]
 32 [-]: SETTABLE  R1 R2 K14    ; R1[R2] := "<POLARITY_WARD>"
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 35 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["AP_UMBRA"]
 36 [-]: SETTABLE  R1 R2 K16    ; R1[R2] := "<POLARITY_UMBRA>"
 37 [-]: GETUPVAL  R1 U1        ; R1 := U1
 38 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 39 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["AP_ANY"]
 40 [-]: SETTABLE  R1 R2 K18    ; R1[R2] := "<POLARITY_ANY>"
 41 [-]: LOADK     R1 K19       ; R1 := 1
 42 [-]: GETUPVAL  R2 U1        ; R2 := U1
 43 [-]: LEN       R2 R2        ; R2 := # R2
 44 [-]: LOADK     R3 K19       ; R3 := 1
 45 [-]: FORPREP   R1 54        ; R1 -= R3; PC := 54
 46 [-]: GETUPVAL  R5 U1        ; R5 := U1
 47 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mMovie"]
 48 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 49 [-]: GETUPVAL  R8 U1        ; R8 := U1
 50 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 51 [-]: MOVE      R9 R1        ; R9 := R1
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 54 [-]: FORLOOP   R1 46        ; R1 += R3; if R1 <= R2 then begin PC := 46; R4 := R1 end
 55 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 4224
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 4228
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADK     R1 K1        ; R1 := ""
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 4239
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x6A235628
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K1      ; if R1 == "string" then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x1B252E3C"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 10 [-]: GETGLOBAL R2 K4        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R1 K6        ; R1 := gFlashMgr
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x7548923C"]
 17 [-]: GETGLOBAL R3 K4        ; R3 := _G
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 19 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 20 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "SetQuestType"
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 4251
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x7E1F26D7"]
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["0xF81722A2"]
  8 [-]: MOVE      R7 R2        ; R7 := R2
  9 [-]: GETGLOBAL R8 K3        ; R8 := _G
 10 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["UIMaterial_RectangleNoDepth"]
 11 [-]: GETGLOBAL R9 K3        ; R9 := _G
 12 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["UIMaterial_Rectangle"]
 13 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0["0x302AAB2F"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K7        ; R6 := "RectInnerColor"
 18 [-]: GETGLOBAL R7 K3        ; R7 := _G
 19 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UIColorObject_DarkBlue"]
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 21 [-]: GETGLOBAL R8 K3        ; R8 := _G
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColorObject_DarkBlue"]
 23 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 24 [-]: GETGLOBAL R9 K3        ; R9 := _G
 25 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["UIColorObject_DarkBlue"]
 26 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 27 [-]: LOADK     R10 K12      ; R10 := 0.20000000298023
 28 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 29 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0["0x302AAB2F"]
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: LOADK     R6 K13       ; R6 := "RectEdgeColor"
 32 [-]: GETGLOBAL R7 K3        ; R7 := _G
 33 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColorObject_White"]
 34 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 35 [-]: GETGLOBAL R8 K3        ; R8 := _G
 36 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["UIColorObject_White"]
 37 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 38 [-]: GETGLOBAL R9 K3        ; R9 := _G
 39 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["UIColorObject_White"]
 40 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 41 [-]: LOADK     R10 K15      ; R10 := 0
 42 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 43 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 4260
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R4 K0        ; R4 := gPlayerProfileMgr
  2 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x21EF7B1A"]
  3 [-]: LOADK     R6 K2        ; R6 := 0
  4 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  6 [-]: MOVE      R6 R4        ; R6 := R4
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: TEST      R5 1         ; if R5 then PC := 119
  9 [-]: JMP       119          ; PC := 119
 10 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4["0x654F1092"]
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 13 [-]: MOVE      R7 R5        ; R7 := R5
 14 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 15 [-]: TEST      R6 1         ; if R6 then PC := 119
 16 [-]: JMP       119          ; PC := 119
 17 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0xE6F0FF83"]
 18 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 19 [-]: SELF      R7 R5 K6     ; R8 := R5; R7 := R5["0xDB2548DF"]
 20 [-]: MOVE      R9 R6        ; R9 := R6
 21 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 22 [-]: GETUPVAL  R8 U0        ; R8 := U0
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xF81722A2"]
 24 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R9 R0        ; R9 := R0
 27 [-]: MOVE      R9 R1        ; R9 := R1
 28 [-]: MOVE      R10 R3       ; R10 := R3
 29 [-]: GETTABLE  R11 R7 K9    ; R11 := R7["mTitle"]
 30 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 31 [-]: GETGLOBAL R9 K10       ; R9 := 0xF595ADDE
 32 [-]: GETUPVAL  R10 U0       ; R10 := U0
 33 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF81722A2"]
 34 [-]: EQ        0 R2 K8      ; if R2 ~= nil then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R11 R0       ; R11 := R0
 37 [-]: MOVE      R11 R1       ; R11 := R1
 38 [-]: MOVE      R12 R2       ; R12 := R2
 39 [-]: GETTABLE  R13 R7 K11   ; R13 := R7["mStanding"]
 40 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 41 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 42 [-]: GETUPVAL  R10 U0       ; R10 := U0
 43 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF81722A2"]
 44 [-]: SELF      R11 R0 K12   ; R12 := R0; R11 := R0["0xF4A5D323"]
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: GETGLOBAL R12 K13      ; R12 := gGameConfig
 47 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12["0xA96A5D94"]
 48 [-]: MOVE      R14 R6       ; R14 := R6
 49 [-]: MOVE      R15 R8       ; R15 := R8
 50 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 51 [-]: LOADK     R13 K2       ; R13 := 0
 52 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 53 [-]: GETUPVAL  R11 U0       ; R11 := U0
 54 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF81722A2"]
 55 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0xF4A5D323"]
 56 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 57 [-]: GETGLOBAL R13 K13      ; R13 := gGameConfig
 58 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13["0xFA65888C"]
 59 [-]: MOVE      R15 R6       ; R15 := R6
 60 [-]: MOVE      R16 R8       ; R16 := R8
 61 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 62 [-]: SELF      R14 R0 K16   ; R15 := R0; R14 := R0["0x14B9772E"]
 63 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 64 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 65 [-]: SUB       R12 R11 R9   ; R12 := R11 - R9
 66 [-]: SELF      R13 R0 K17   ; R14 := R0; R13 := R0["0xFFA83251"]
 67 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 68 [-]: GETGLOBAL R14 K18      ; R14 := Lotus_Game
 69 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["STANDING_LIMIT_BIN_NONE"]
 70 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 85
 71 [-]: JMP       85           ; PC := 85
 72 [-]: GETGLOBAL R14 K18      ; R14 := Lotus_Game
 73 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["MAX_DailyStandingLimitBin"]
 74 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 85
 75 [-]: JMP       85           ; PC := 85
 76 [-]: SELF      R14 R5 K21   ; R15 := R5; R14 := R5["0x79B173F7"]
 77 [-]: MOVE      R16 R13      ; R16 := R13
 78 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 79 [-]: GETGLOBAL R15 K22      ; R15 := math
 80 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["0x65F9712A"]
 81 [-]: MOVE      R16 R12      ; R16 := R12
 82 [-]: MOVE      R17 R14      ; R17 := R14
 83 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 84 [-]: MOVE      R12 R15      ; R12 := R15
 85 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 91
 86 [-]: JMP       91           ; PC := 91
 87 [-]: GETGLOBAL R15 K10      ; R15 := 0xF595ADDE
 88 [-]: MOVE      R16 R1       ; R16 := R1
 89 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 90 [-]: ADD       R9 R9 R15    ; R9 := R9 + R15
 91 [-]: SUB       R15 R9 R10   ; R15 := R9 - R10
 92 [-]: SUB       R16 R11 R10  ; R16 := R11 - R10
 93 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R17 R0       ; R17 := R0
 96 [-]: MOVE      R17 R1       ; R17 := R1
 97 [-]: SELF      R18 R0 K12   ; R19 := R0; R18 := R0["0xF4A5D323"]
 98 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 99 [-]: TEST      R18 0        ; if not R18 then PC := 113
100 [-]: JMP       113          ; PC := 113
101 [-]: EQ        0 R8 K2      ; if R8 ~= 0 then PC := 109
102 [-]: JMP       109          ; PC := 109
103 [-]: DIV       R16 R16 K24  ; R16 := R16 / 2
104 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
105 [-]: LT        0 R15 K2     ; if R15 >= 0 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: UNM       R16 R16      ; R16 := - R16
108 [-]: JMP       113          ; PC := 113
109 [-]: LT        0 R8 K2      ; if R8 >= 0 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: SUB       R15 R15 R16  ; R15 := R15 - R16
112 [-]: UNM       R16 R16      ; R16 := - R16
113 [-]: MOVE      R18 R8       ; R18 := R8
114 [-]: MOVE      R19 R15      ; R19 := R15
115 [-]: MOVE      R20 R16      ; R20 := R16
116 [-]: MOVE      R21 R17      ; R21 := R17
117 [-]: MOVE      R22 R12      ; R22 := R12
118 [-]: RETURN    R18 6        ; return R18,R19,R20,R21,R22
119 [-]: LOADK     R18 K2       ; R18 := 0
120 [-]: LOADK     R19 K2       ; R19 := 0
121 [-]: LOADK     R20 K25      ; R20 := 1
122 [-]: MOVE      R21 R0       ; R21 := R0
123 [-]: LOADK     R22 K2       ; R22 := 0
124 [-]: RETURN    R18 6        ; return R18,R19,R20,R21,R22
125 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 4310
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 4314
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSpeakerSyndicate"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mSpeakerSyndicate"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 10 [-]: SETTABLE  R1 K5 R6     ; R1["HasEnoughReputationForSacrifice"] := R6
 11 [-]: SETTABLE  R1 K4 R5     ; R1["ReputationRequired"] := R5
 12 [-]: SETTABLE  R1 K3 R4     ; R1["Reputation"] := R4
 13 [-]: SETTABLE  R1 K2 R3     ; R1["Level"] := R3
 14 [-]: LOADK     R3 K6        ; R3 := 3
 15 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0xF56D15AF"]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Level"]
 24 [-]: LE        1 R3 R4      ; if R3 <= R4 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: SETTABLE  R1 K8 R4     ; R1["Loved"] := R4
 29 [-]: GETGLOBAL R4 K9        ; R4 := gPlayerProfileMgr
 30 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x21EF7B1A"]
 31 [-]: LOADK     R6 K11       ; R6 := 0
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: TEST      R5 1         ; if R5 then PC := 47
 37 [-]: JMP       47           ; PC := 47
 38 [-]: SELF      R5 R4 K12    ; R6 := R4; R5 := R4["0x3EEB612E"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETTABLE  R6 R1 K8     ; R6 := R1["Loved"]
 41 [-]: TEST      R6 0         ; if not R6 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R6 R5 K13    ; R7 := R5; R6 := R5["0xD481AC59"]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: MOVE      R6 R6        ; R6 := R6
 46 [-]: SETTABLE  R1 K8 R6     ; R1["Loved"] := R6
 47 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 4335
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x880196A7"]
  2 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mClipName"]
  3 [-]: LOADK     R5 K2        ; R5 := "Image"
  4 [-]: LOADK     R6 K3        ; R6 := "_alpha"
  5 [-]: GETUPVAL  R7 U0        ; R7 := U0
  6 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["0xF81722A2"]
  7 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
  8 [-]: GETTABLE  R9 R1 K6     ; R9 := R1["Icon"]
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: LOADK     R9 K7        ; R9 := 0
 11 [-]: LOADK     R10 K8       ; R10 := 100
 12 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 15 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["Icon"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K9        ; R2 := 0x2C00D429
 21 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Types/Game/LotusSigil"
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 24 [-]: SELF      R4 R0 K12    ; R5 := R0; R4 := R0["0x6B7B470B"]
 25 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 26 [-]: LOADK     R7 K13       ; R7 := ".Image"
 27 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 28 [-]: LOADK     R7 K14       ; R7 := "_height"
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["0xF81722A2"]
 33 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["Type"]
 34 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x8B598ED4"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 37 [-]: MOVE      R6 R3        ; R6 := R3
 38 [-]: MUL       R7 R3 K17    ; R7 := R3 * 1.444000005722
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: SELF      R5 R0 K18    ; R6 := R0; R5 := R0["0x26581636"]
 41 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 42 [-]: LOADK     R8 K13       ; R8 := ".Image"
 43 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 44 [-]: GETTABLE  R8 R1 K6     ; R8 := R1["Icon"]
 45 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 46 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0["0x880196A7"]
 47 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 48 [-]: LOADK     R8 K2        ; R8 := "Image"
 49 [-]: LOADK     R9 K19       ; R9 := "_width"
 50 [-]: MOVE      R10 R4       ; R10 := R4
 51 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 52 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 4350
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADNIL   R2 R2        ; R2 := nil
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADNIL   R3 R3        ; R3 := nil
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: GETGLOBAL R3 K6        ; R3 := 0x63B09107
 31 [-]: GETTABLE  R4 R2 K7     ; R4 := R2["mDailyDeals"]
 32 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETGLOBAL R8 K8        ; R8 := Engine
 35 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0xD09D7910"]
 36 [-]: GETTABLE  R9 R7 K10    ; R9 := R7["mActivation"]
 37 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 38 [-]: LE        0 R8 K2      ; if R8 > 0 then PC := 51
 39 [-]: JMP       51           ; PC := 51
 40 [-]: GETGLOBAL R8 K8        ; R8 := Engine
 41 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["0xD09D7910"]
 42 [-]: GETTABLE  R9 R7 K11    ; R9 := R7["mExpiry"]
 43 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 44 [-]: LT        0 K2 R8      ; if 0 >= R8 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R8 K12       ; R8 := Lotus_Game
 47 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["0xF6C45762"]
 48 [-]: MOVE      R9 R7        ; R9 := R7
 49 [-]: TAILCALL  R8 2 0       ; R8,... := R8(R9)
 50 [-]: RETURN    R8 0         ; return R8,...
 51 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 34; R5 := R6 end
 52 [-]: JMP       34           ; PC := 34
 53 [-]: LOADNIL   R8 R8        ; R8 := nil
 54 [-]: RETURN    R8 2         ; return R8
 55 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 4375
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  3 [-]: SELF      R4 R1 K2     ; R5 := R1; R4 := R1["0x3077BE70"]
  4 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  5 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  6 [-]: TEST      R3 1         ; if R3 then PC := 72
  7 [-]: JMP       72           ; PC := 72
  8 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1["0x3077BE70"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x8B598ED4"]
 11 [-]: GETGLOBAL R5 K4        ; R5 := gRecipeItemType
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 72
 14 [-]: JMP       72           ; PC := 72
 15 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x5DB0BD4"]
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0x9FAED6BC
 17 [-]: SELF      R6 R1 K7     ; R7 := R1; R6 := R1["0xFF82B3D"]
 18 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: MOVE      R6 R1        ; R6 := R1
 21 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 22 [-]: EQ        1 R3 K0      ; if R3 == "" then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 69
 25 [-]: JMP       69           ; PC := 69
 26 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0xCF3F0AF8"]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: TEST      R5 1         ; if R5 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x5DB0BD4"]
 34 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 35 [-]: SELF      R8 R4 K10    ; R9 := R4; R8 := R4["0x616C74B6"]
 36 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 37 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 38 [-]: MOVE      R8 R1        ; R8 := R1
 39 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 40 [-]: MOVE      R2 R5        ; R2 := R5
 41 [-]: JMP       50           ; PC := 50
 42 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0x5DB0BD4"]
 43 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 44 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1["0x616C74B6"]
 45 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 46 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R2 R5        ; R2 := R5
 50 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 51 [-]: SETTABLE  R5 K11 R2    ; R5["ITEM"] := R2
 52 [-]: MOVE      R3 R5        ; R3 := R5
 53 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Items/BlueprintAndItem"
 54 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1["0x105AB39B"]
 55 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 56 [-]: LT        0 K14 R6     ; if 1 >= R6 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1["0x105AB39B"]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: SETTABLE  R3 K15 R6    ; R3["NUM"] := R6
 61 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Items/LargeBatchBlueprintAndItem"
 62 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x5DB0BD4"]
 63 [-]: MOVE      R8 R5        ; R8 := R5
 64 [-]: MOVE      R9 R1        ; R9 := R1
 65 [-]: MOVE      R10 R3       ; R10 := R3
 66 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 67 [-]: MOVE      R2 R6        ; R2 := R6
 68 [-]: JMP       70           ; PC := 70
 69 [-]: MOVE      R2 R3        ; R2 := R3
 70 [-]: RETURN    R2 2         ; return R2
 71 [-]: JMP       103          ; PC := 103
 72 [-]: SELF      R6 R1 K17    ; R7 := R1; R6 := R1["0x8292A1EF"]
 73 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 74 [-]: GETGLOBAL R7 K18       ; R7 := Engine
 75 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["Item_FusionBundles"]
 76 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 92
 77 [-]: JMP       92           ; PC := 92
 78 [-]: SELF      R6 R1 K20    ; R7 := R1; R6 := R1["0x41604216"]
 79 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 80 [-]: UNM       R6 R6        ; R6 := - R6
 81 [-]: MOVE      R7 R6        ; R7 := R6
 82 [-]: LOADK     R8 K21       ; R8 := " "
 83 [-]: SELF      R9 R0 K5     ; R10 := R0; R9 := R0["0x5DB0BD4"]
 84 [-]: GETGLOBAL R11 K6       ; R11 := 0x9FAED6BC
 85 [-]: SELF      R12 R1 K10   ; R13 := R1; R12 := R1["0x616C74B6"]
 86 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 87 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 88 [-]: MOVE      R12 R1       ; R12 := R1
 89 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 90 [-]: CONCAT    R2 R7 R9     ; R2 := R7 .. R8 .. R9
 91 [-]: JMP       103          ; PC := 103
 92 [-]: SELF      R7 R1 K17    ; R8 := R1; R7 := R1["0x8292A1EF"]
 93 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 94 [-]: GETGLOBAL R8 K18       ; R8 := Engine
 95 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["Item_AvatarImage"]
 96 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: GETGLOBAL R7 K6        ; R7 := 0x9FAED6BC
 99 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1["0x616C74B6"]
100 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
101 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
102 [-]: MOVE      R2 R7        ; R2 := R7
103 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0["0x5DB0BD4"]
104 [-]: MOVE      R9 R2        ; R9 := R2
105 [-]: MOVE      R10 R1       ; R10 := R1
106 [-]: TAILCALL  R7 4 0       ; R7,... := R7(R8,R9,R10)
107 [-]: RETURN    R7 0         ; return R7,...
108 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 4408
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := _G
  2 [-]: SETTABLE  R2 K1 R0     ; R2["TrainingMissionRank"] := R0
  3 [-]: GETGLOBAL R2 K2        ; R2 := gGameConfig
  4 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x7DDA95FC"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETGLOBAL R3 K4        ; R3 := math
  7 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x65F9712A"]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: SUB       R5 R2 K6     ; R5 := R2 - 1
 10 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 11 [-]: MOVE      R0 R3        ; R0 := R3
 12 [-]: GETGLOBAL R3 K0        ; R3 := _G
 13 [-]: SETTABLE  R3 K7 R1     ; R3["IsTrainingMissionPractise"] := R1
 14 [-]: GETGLOBAL R3 K2        ; R3 := gGameConfig
 15 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x5360CCB0"]
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETTABLE  R4 R3 K9     ; R4 := R3["missionReward"]
 21 [-]: SETTABLE  R4 K10 K11   ; R4["credits"] := 0
 22 [-]: GETGLOBAL R4 K12       ; R4 := Engine
 23 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0x8661A01"]
 24 [-]: CALL      R4 1 2       ; R4 := R4()
 25 [-]: SELF      R5 R3 K14    ; R6 := R3; R5 := R3["0x22B1F84A"]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: SELF      R6 R3 K15    ; R7 := R3; R6 := R3["0x70C51B59"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LOADK     R7 K6        ; R7 := 1
 30 [-]: LEN       R8 R6        ; R8 := # R6
 31 [-]: LOADK     R9 K6        ; R9 := 1
 32 [-]: FORPREP   R7 37        ; R7 -= R9; PC := 37
 33 [-]: SELF      R11 R4 K16   ; R12 := R4; R11 := R4["0x8D25D081"]
 34 [-]: GETTABLE  R13 R6 R10   ; R13 := R6[R10]
 35 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["agent"]
 36 [-]: CALL      R11 3 1      ; R11(R12,R13)
 37 [-]: FORLOOP   R7 33        ; R7 += R9; if R7 <= R8 then begin PC := 33; R10 := R7 end
 38 [-]: SELF      R11 R4 K18   ; R12 := R4; R11 := R4["0x26103FF"]
 39 [-]: MOVE      R13 R5       ; R13 := R5
 40 [-]: CALL      R11 3 1      ; R11(R12,R13)
 41 [-]: SELF      R11 R4 K19   ; R12 := R4; R11 := R4["0xE96B2E8E"]
 42 [-]: GETTABLE  R13 R3 K20   ; R13 := R3["levelOverride"]
 43 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13["0x1B252E3C"]
 44 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 45 [-]: CALL      R11 0 1      ; R11(R12,...)
 46 [-]: GETTABLE  R11 R3 K22   ; R11 := R3["gameRules"]
 47 [-]: SETTABLE  R4 K22 R11   ; R4["gameRules"] := R11
 48 [-]: SETTABLE  R4 K23 K24   ; R4["migrateServer"] := "0x0"
 49 [-]: GETGLOBAL R11 K12      ; R11 := Engine
 50 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["0x56DF865D"]
 51 [-]: MOVE      R12 R4       ; R12 := R4
 52 [-]: CALL      R11 2 1      ; R11(R12)
 53 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 4439
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := 10
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 4443
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 4447
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: MOVE      R2 R1        ; R2 := R1
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: TEST      R5 0         ; if not R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: RETURN    R5 3         ; return R5,R6
 12 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0["0x30BDE7F"]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R6 R5 K3     ; R7 := R5; R6 := R5["0x6200B095"]
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["LOT_NORMAL"]
 17 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 18 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["PISTOL_SLOT"]
 19 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 20 [-]: SELF      R7 R5 K3     ; R8 := R5; R7 := R5["0x6200B095"]
 21 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 22 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["LOT_NORMAL"]
 23 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 24 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LONG_GUN_SLOT"]
 25 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 26 [-]: SELF      R8 R5 K3     ; R9 := R5; R8 := R5["0x6200B095"]
 27 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 28 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["LOT_NORMAL"]
 29 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 30 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["MELEE_SLOT"]
 31 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 32 [-]: GETTABLE  R9 R6 K9     ; R9 := R6["mItemId"]
 33 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 34 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 35 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 36 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETTABLE  R9 R7 K9     ; R9 := R7["mItemId"]
 39 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 40 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 41 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 42 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETTABLE  R9 R8 K9     ; R9 := R8["mItemId"]
 45 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mId"]
 46 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 47 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["InvalidItemID"]
 48 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Menu/IncompleteLoadout"
 52 [-]: GETGLOBAL R9 K13       ; R9 := gPlayerProfileMgr
 53 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9["0x21EF7B1A"]
 54 [-]: LOADK     R11 K15      ; R11 := 0
 55 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 56 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0x654F1092"]
 57 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 58 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9["0x3155222A"]
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: GETGLOBAL R10 K18      ; R10 := gGameConfig
 61 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x7DDA95FC"]
 62 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 63 [-]: GETGLOBAL R11 K20      ; R11 := math
 64 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["0x65F9712A"]
 65 [-]: ADD       R12 R9 K22   ; R12 := R9 + 1
 66 [-]: SUB       R13 R10 K22  ; R13 := R10 - 1
 67 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 68 [-]: GETGLOBAL R12 K18      ; R12 := gGameConfig
 69 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x5360CCB0"]
 70 [-]: MOVE      R14 R11      ; R14 := R11
 71 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 72 [-]: GETTABLE  R13 R12 K24  ; R13 := R12["archwingRequired"]
 73 [-]: TEST      R13 0        ; if not R13 then PC := 134
 74 [-]: JMP       134          ; PC := 134
 75 [-]: GETGLOBAL R13 K13      ; R13 := gPlayerProfileMgr
 76 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13["0x21EF7B1A"]
 77 [-]: LOADK     R15 K15      ; R15 := 0
 78 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 79 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13["0x654F1092"]
 80 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 81 [-]: SELF      R14 R13 K25  ; R15 := R13; R14 := R13["0x6F2E05FD"]
 82 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 83 [-]: SELF      R15 R14 K26  ; R16 := R14; R15 := R14["0x5A67CD40"]
 84 [-]: GETGLOBAL R17 K4       ; R17 := Lotus_Game
 85 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["LOT_ARCHWING"]
 86 [-]: SELF      R18 R14 K28  ; R19 := R14; R18 := R14["0x413E14F1"]
 87 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
 88 [-]: GETTABLE  R20 R20 K27  ; R20 := R20["LOT_ARCHWING"]
 89 [-]: CALL      R18 3 0      ; R18,... := R18(R19,R20)
 90 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 91 [-]: SELF      R16 R15 K29  ; R17 := R15; R16 := R15["0xA81C4B63"]
 92 [-]: GETGLOBAL R18 K4       ; R18 := Lotus_Game
 93 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["SUIT_SLOT"]
 94 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 95 [-]: SELF      R17 R15 K29  ; R18 := R15; R17 := R15["0xA81C4B63"]
 96 [-]: GETGLOBAL R19 K4       ; R19 := Lotus_Game
 97 [-]: GETTABLE  R19 R19 K7   ; R19 := R19["LONG_GUN_SLOT"]
 98 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 99 [-]: SELF      R18 R15 K29  ; R19 := R15; R18 := R15["0xA81C4B63"]
100 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
101 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["MELEE_SLOT"]
102 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
103 [-]: GETTABLE  R19 R16 K9   ; R19 := R16["mItemId"]
104 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
105 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
106 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
107 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 121
108 [-]: JMP       121          ; PC := 121
109 [-]: GETTABLE  R19 R17 K9   ; R19 := R17["mItemId"]
110 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
111 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
112 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
113 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 121
114 [-]: JMP       121          ; PC := 121
115 [-]: GETTABLE  R19 R18 K9   ; R19 := R18["mItemId"]
116 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["mId"]
117 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
118 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["InvalidItemID"]
119 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: MOVE      R19 R0       ; R19 := R0
122 [-]: MOVE      R19 R1       ; R19 := R1
123 [-]: SELF      R20 R13 K31  ; R21 := R13; R20 := R13["0x95FCF4A0"]
124 [-]: CALL      R20 2 2      ; R20 := R20(R21)
125 [-]: TEST      R20 1        ; if R20 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: MOVE      R20 R0       ; R20 := R0
128 [-]: TEST      R19 0        ; if not R19 then PC := 132
129 [-]: JMP       132          ; PC := 132
130 [-]: TEST      R20 1        ; if R20 then PC := 134
131 [-]: JMP       134          ; PC := 134
132 [-]: MOVE      R2 R0        ; R2 := R0
133 [-]: LOADK     R3 K32       ; R3 := "/Lotus/Language/Menu/ArchwingFailureSolo"
134 [-]: TEST      R2 0         ; if not R2 then PC := 172
135 [-]: JMP       172          ; PC := 172
136 [-]: SELF      R21 R0 K33   ; R22 := R0; R21 := R0["0x99FA94A5"]
137 [-]: CALL      R21 2 2      ; R21 := R21(R22)
138 [-]: LT        0 K15 R21    ; if 0 >= R21 then PC := 172
139 [-]: JMP       172          ; PC := 172
140 [-]: TEST      R1 1         ; if R1 then PC := 172
141 [-]: JMP       172          ; PC := 172
142 [-]: GETUPVAL  R22 U0       ; R22 := U0
143 [-]: LOADNIL   R23 R23      ; R23 := nil
144 [-]: MOVE      R24 R21      ; R24 := R21
145 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
146 [-]: SELF      R23 R0 K34   ; R24 := R0; R23 := R0["0xAE27D172"]
147 [-]: CALL      R23 2 2      ; R23 := R23(R24)
148 [-]: LT        0 K15 R23    ; if 0 >= R23 then PC := 161
149 [-]: JMP       161          ; PC := 161
150 [-]: GETGLOBAL R23 K35      ; R23 := 0xE6DC43B0
151 [-]: LOADK     R24 K36      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpRetry"
152 [-]: NEWTABLE  R25 0 2      ; R25 := {}
153 [-]: SETTABLE  R25 K37 R22  ; R25["TIME_REMAINING"] := R22
154 [-]: GETUPVAL  R26 U1       ; R26 := U1
155 [-]: CALL      R26 1 2      ; R26 := R26()
156 [-]: SETTABLE  R25 K38 R26  ; R25["COST"] := R26
157 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
158 [-]: MOVE      R3 R23       ; R3 := R23
159 [-]: MOVE      R4 R1        ; R4 := R1
160 [-]: JMP       171          ; PC := 171
161 [-]: GETGLOBAL R23 K35      ; R23 := 0xE6DC43B0
162 [-]: LOADK     R24 K39      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
163 [-]: MOVE      R25 R0       ; R25 := R0
164 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
165 [-]: GETGLOBAL R24 K40      ; R24 := string
166 [-]: GETTABLE  R24 R24 K41  ; R24 := R24["0x4B1F4F58"]
167 [-]: MOVE      R25 R23      ; R25 := R23
168 [-]: MOVE      R26 R22      ; R26 := R22
169 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
170 [-]: MOVE      R3 R24       ; R3 := R24
171 [-]: MOVE      R2 R0        ; R2 := R0
172 [-]: TEST      R2 0         ; if not R2 then PC := 190
173 [-]: JMP       190          ; PC := 190
174 [-]: GETGLOBAL R24 K1       ; R24 := 0x400E7765
175 [-]: GETGLOBAL R25 K42      ; R25 := gMatchingService
176 [-]: SELF      R25 R25 K43  ; R26 := R25; R25 := R25["0xD5E03646"]
177 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
178 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
179 [-]: TEST      R24 1        ; if R24 then PC := 190
180 [-]: JMP       190          ; PC := 190
181 [-]: GETGLOBAL R24 K42      ; R24 := gMatchingService
182 [-]: SELF      R24 R24 K43  ; R25 := R24; R24 := R24["0xD5E03646"]
183 [-]: CALL      R24 2 2      ; R24 := R24(R25)
184 [-]: SELF      R24 R24 K44  ; R25 := R24; R24 := R24["0x65BE14FA"]
185 [-]: CALL      R24 2 2      ; R24 := R24(R25)
186 [-]: LT        0 K22 R24    ; if 1 >= R24 then PC := 190
187 [-]: JMP       190          ; PC := 190
188 [-]: MOVE      R2 R0        ; R2 := R0
189 [-]: LOADK     R3 K45       ; R3 := "/Lotus/Language/Menu/Foreground_LevelUpSessionActive"
190 [-]: MOVE      R24 R2       ; R24 := R2
191 [-]: MOVE      R25 R3       ; R25 := R3
192 [-]: MOVE      R26 R4       ; R26 := R4
193 [-]: RETURN    R24 4        ; return R24,R25,R26
194 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 4516
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "Dojo: OnTrainingResultUploaded result="
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", body="
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0x9FAED6BC
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 10 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 4520
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["0xF81722A2"]
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
  4 [-]: GETGLOBAL R7 K2        ; R7 := _G
  5 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["IsTrainingMissionPractise"]
  6 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  7 [-]: MOVE      R7 R1        ; R7 := R1
  8 [-]: GETGLOBAL R8 K2        ; R8 := _G
  9 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["IsTrainingMissionPractise"]
 10 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 11 [-]: GETGLOBAL R6 K4        ; R6 := 0x329BDC44
 12 [-]: LOADK     R7 K5        ; R7 := "Lotus.Scripts.ChallengeRooms.BaseChallengeRoom"
 13 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 14 [-]: TEST      R5 1         ; if R5 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R7 K6        ; R7 := gPlayerProfileMgr
 17 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0x21EF7B1A"]
 18 [-]: LOADK     R9 K8        ; R9 := 0
 19 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 20 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x654F1092"]
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x21179974"]
 23 [-]: LOADK     R9 K11       ; R9 := 1
 24 [-]: GETUPVAL  R10 U1       ; R10 := U1
 25 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 26 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 29 [-]: TEST      R7 0         ; if not R7 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R7 K12       ; R7 := gRegion
 32 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x6C682A30"]
 33 [-]: LOADK     R9 K8        ; R9 := 0
 34 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 35 [-]: MOVE      R0 R7        ; R0 := R7
 36 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
 37 [-]: MOVE      R8 R0        ; R8 := R0
 38 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 39 [-]: TEST      R7 1         ; if R7 then PC := 54
 40 [-]: JMP       54           ; PC := 54
 41 [-]: SELF      R7 R0 K14    ; R8 := R0; R7 := R0["0x868E646A"]
 42 [-]: MOVE      R9 R1        ; R9 := R1
 43 [-]: MOVE      R10 R1       ; R10 := R1
 44 [-]: GETGLOBAL R11 K15      ; R11 := Engine
 45 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["ATMM_PHYSICS_DRIVEN"]
 46 [-]: GETGLOBAL R12 K15      ; R12 := Engine
 47 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["PRT_FREEZE"]
 48 [-]: MOVE      R13 R1       ; R13 := R1
 49 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 50 [-]: SELF      R7 R0 K18    ; R8 := R0; R7 := R0["0x58347F07"]
 51 [-]: MOVE      R9 R2        ; R9 := R2
 52 [-]: MOVE      R10 R1       ; R10 := R1
 53 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 54 [-]: GETGLOBAL R7 K19       ; R7 := 0x201191EA
 55 [-]: LOADK     R8 K20       ; R8 := 3
 56 [-]: CALL      R7 2 1       ; R7(R8)
 57 [-]: GETTABLE  R7 R6 K21    ; R7 := R6["0x1849C790"]
 58 [-]: MOVE      R8 R3        ; R8 := R3
 59 [-]: MOVE      R9 R4        ; R9 := R4
 60 [-]: MOVE      R10 R5       ; R10 := R5
 61 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 62 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 4541
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gGameRules
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8B598ED4"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := gLotusBasePvpGameRulesType
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETGLOBAL R3 K3        ; R3 := gRegion
  7 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x48FBE19F"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K5        ; R4 := 0x63B09107
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 12 [-]: JMP       45           ; PC := 45
 13 [-]: TEST      R1 0         ; if not R1 then PC := 35
 14 [-]: JMP       35           ; PC := 35
 15 [-]: SELF      R9 R0 K6     ; R10 := R0; R9 := R0["0x62914D1F"]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: SELF      R10 R8 K6    ; R11 := R8; R10 := R8["0x62914D1F"]
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 45
 20 [-]: JMP       45           ; PC := 45
 21 [-]: GETGLOBAL R9 K7        ; R9 := _T
 22 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 23 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: GETGLOBAL R9 K7        ; R9 := _T
 26 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 27 [-]: TEST      R9 0         ; if not R9 then PC := 45
 28 [-]: JMP       45           ; PC := 45
 29 [-]: GETGLOBAL R9 K7        ; R9 := _T
 30 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 31 [-]: GETGLOBAL R10 K10      ; R10 := Lotus_Game
 32 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["PVPMODE_DEATHMATCH"]
 33 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: SELF      R9 R8 K12    ; R10 := R8; R9 := R8["0x144A28F9"]
 36 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 37 [-]: GETGLOBAL R10 K13      ; R10 := HIDDEN_PLAYER_NAME
 38 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: GETGLOBAL R9 K14       ; R9 := table
 41 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["0xE6450C9D"]
 42 [-]: MOVE      R10 R2       ; R10 := R2
 43 [-]: MOVE      R11 R8       ; R11 := R8
 44 [-]: CALL      R9 3 1       ; R9(R10,R11)
 45 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 13; R6 := R7 end
 46 [-]: JMP       13           ; PC := 13
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 4557
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= "" then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0xE6DC43B0
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Loadout_Default"
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: MOVE      R1 R2        ; R1 := R2
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x86466050
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0xF5BEE61A
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: GETGLOBAL R4 K5        ; R4 := Script
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["TSC_NAME"]
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: MOVE      R1 R2        ; R1 := R2
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 4571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 4575
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gPlayerProfileMgr
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADK     R1 K2        ; R1 := ""
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R1 3         ; return R1,R2
  9 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x21EF7B1A"]
 11 [-]: LOADK     R3 K4        ; R3 := 0
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 0         ; if not R2 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: LOADK     R2 K2        ; R2 := ""
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: RETURN    R2 3         ; return R2,R3
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x654F1092"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: LOADK     R3 K2        ; R3 := ""
 29 [-]: MOVE      R4 R0        ; R4 := R0
 30 [-]: RETURN    R3 3         ; return R3,R4
 31 [-]: GETGLOBAL R3 K6        ; R3 := _T
 32 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["ActiveQuestLoaded"]
 33 [-]: TEST      R3 1         ; if R3 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADK     R3 K2        ; R3 := ""
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: RETURN    R3 3         ; return R3,R4
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: MOVE      R4 R2        ; R4 := R2
 40 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 41 [-]: LOADK     R7 K2        ; R7 := ""
 42 [-]: GETGLOBAL R8 K6        ; R8 := _T
 43 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["questInfo"]
 44 [-]: EQ        1 R8 K9      ; if R8 == nil then PC := 68
 45 [-]: JMP       68           ; PC := 68
 46 [-]: GETGLOBAL R8 K6        ; R8 := _T
 47 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["questInfo"]
 48 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["activeQuest"]
 49 [-]: EQ        1 R8 K9      ; if R8 == nil then PC := 68
 50 [-]: JMP       68           ; PC := 68
 51 [-]: GETGLOBAL R8 K6        ; R8 := _T
 52 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["questInfo"]
 53 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["activeQuest"]
 54 [-]: EQ        0 R8 R3      ; if R8 ~= R3 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R8 K6        ; R8 := _T
 57 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["questInfo"]
 58 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["stage"]
 59 [-]: EQ        0 R8 R4      ; if R8 ~= R4 then PC := 68
 60 [-]: JMP       68           ; PC := 68
 61 [-]: GETGLOBAL R8 K6        ; R8 := _T
 62 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["questInfo"]
 63 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["gameRules"]
 64 [-]: GETGLOBAL R9 K13       ; R9 := gGameRules
 65 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: MOVE      R8 R0        ; R8 := R0
 68 [-]: MOVE      R8 R1        ; R8 := R1
 69 [-]: GETGLOBAL R9 K6        ; R9 := _T
 70 [-]: NEWTABLE  R10 0 5      ; R10 := {}
 71 [-]: SETTABLE  R10 K10 R3   ; R10["activeQuest"] := R3
 72 [-]: SETTABLE  R10 K11 R4   ; R10["stage"] := R4
 73 [-]: SETTABLE  R10 K14 R5   ; R10["difficulty"] := R5
 74 [-]: SETTABLE  R10 K15 R6   ; R10["canProgress"] := R6
 75 [-]: GETGLOBAL R11 K13      ; R11 := gGameRules
 76 [-]: SETTABLE  R10 K12 R11  ; R10["gameRules"] := R11
 77 [-]: SETTABLE  R9 K8 R10    ; R9["questInfo"] := R10
 78 [-]: GETGLOBAL R9 K16       ; R9 := _G
 79 [-]: GETGLOBAL R10 K6       ; R10 := _T
 80 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["questInfo"]
 81 [-]: SETTABLE  R9 K8 R10    ; R9["questInfo"] := R10
 82 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 83 [-]: MOVE      R10 R3       ; R10 := R3
 84 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 85 [-]: TEST      R9 0         ; if not R9 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: TEST      R0 0         ; if not R0 then PC := 214
 88 [-]: JMP       214          ; PC := 214
 89 [-]: TEST      R4 0         ; if not R4 then PC := 206
 90 [-]: JMP       206          ; PC := 206
 91 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 92 [-]: MOVE      R10 R3       ; R10 := R3
 93 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 94 [-]: TEST      R9 1         ; if R9 then PC := 206
 95 [-]: JMP       206          ; PC := 206
 96 [-]: GETGLOBAL R9 K17       ; R9 := 0xE6DC43B0
 97 [-]: GETGLOBAL R10 K18      ; R10 := 0x9FAED6BC
 98 [-]: SELF      R11 R3 K19   ; R12 := R3; R11 := R3["0x616C74B6"]
 99 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
100 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
101 [-]: MOVE      R11 R0       ; R11 := R0
102 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
103 [-]: MOVE      R7 R9        ; R7 := R9
104 [-]: SELF      R9 R3 K20    ; R10 := R3; R9 := R3["0xDBE456AD"]
105 [-]: SUB       R11 R4 K21   ; R11 := R4 - 1
106 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
107 [-]: GETGLOBAL R10 K22      ; R10 := EMPTY_SYMBOL
108 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 119
109 [-]: JMP       119          ; PC := 119
110 [-]: MOVE      R10 R7       ; R10 := R7
111 [-]: LOADK     R11 K23      ; R11 := "\r\n"
112 [-]: GETGLOBAL R12 K17      ; R12 := 0xE6DC43B0
113 [-]: GETGLOBAL R13 K18      ; R13 := 0x9FAED6BC
114 [-]: MOVE      R14 R9       ; R14 := R9
115 [-]: CALL      R13 2 2      ; R13 := R13(R14)
116 [-]: MOVE      R14 R0       ; R14 := R0
117 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
118 [-]: CONCAT    R7 R10 R12   ; R7 := R10 .. R11 .. R12
119 [-]: TEST      R8 0         ; if not R8 then PC := 206
120 [-]: JMP       206          ; PC := 206
121 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
122 [-]: GETGLOBAL R11 K24      ; R11 := gRegion
123 [-]: CALL      R10 2 2      ; R10 := R10(R11)
124 [-]: TEST      R10 1        ; if R10 then PC := 206
125 [-]: JMP       206          ; PC := 206
126 [-]: LOADK     R10 K21      ; R10 := 1
127 [-]: GETGLOBAL R11 K6       ; R11 := _T
128 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["QuestResetVars"]
129 [-]: LEN       R11 R11      ; R11 := # R11
130 [-]: LOADK     R12 K21      ; R12 := 1
131 [-]: FORPREP   R10 137      ; R10 -= R12; PC := 137
132 [-]: GETGLOBAL R14 K6       ; R14 := _T
133 [-]: GETGLOBAL R15 K6       ; R15 := _T
134 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["QuestResetVars"]
135 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
136 [-]: SETTABLE  R14 R15 K9   ; R14[R15] := nil
137 [-]: FORLOOP   R10 132      ; R10 += R12; if R10 <= R11 then begin PC := 132; R13 := R10 end
138 [-]: GETGLOBAL R14 K6       ; R14 := _T
139 [-]: NEWTABLE  R15 0 0      ; R15 := {}
140 [-]: SETTABLE  R14 K25 R15  ; R14["QuestResetVars"] := R15
141 [-]: GETGLOBAL R14 K24      ; R14 := gRegion
142 [-]: SELF      R14 R14 K26  ; R15 := R14; R14 := R14["0x372CB914"]
143 [-]: CALL      R14 2 2      ; R14 := R14(R15)
144 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
145 [-]: MOVE      R16 R14      ; R16 := R14
146 [-]: CALL      R15 2 2      ; R15 := R15(R16)
147 [-]: TEST      R15 0        ; if not R15 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: GETGLOBAL R15 K27      ; R15 := 0x93B1256B
150 [-]: LOADK     R16 K28      ; R16 := "No local player yet, and this is kinda important"
151 [-]: CALL      R15 2 1      ; R15(R16)
152 [-]: GETGLOBAL R15 K6       ; R15 := _T
153 [-]: SETTABLE  R15 K8 K9    ; R15["questInfo"] := nil
154 [-]: GETGLOBAL R15 K16      ; R15 := _G
155 [-]: SETTABLE  R15 K8 K9    ; R15["questInfo"] := nil
156 [-]: LOADK     R15 K2       ; R15 := ""
157 [-]: MOVE      R16 R0       ; R16 := R0
158 [-]: RETURN    R15 3        ; return R15,R16
159 [-]: GETGLOBAL R15 K6       ; R15 := _T
160 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["InHub"]
161 [-]: TEST      R15 1        ; if R15 then PC := 168
162 [-]: JMP       168          ; PC := 168
163 [-]: GETGLOBAL R15 K13      ; R15 := gGameRules
164 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15["0x7C138DEF"]
165 [-]: CALL      R15 2 2      ; R15 := R15(R16)
166 [-]: TEST      R15 1        ; if R15 then PC := 206
167 [-]: JMP       206          ; PC := 206
168 [-]: GETGLOBAL R15 K6       ; R15 := _T
169 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["InHub"]
170 [-]: TEST      R15 0        ; if not R15 then PC := 183
171 [-]: JMP       183          ; PC := 183
172 [-]: GETGLOBAL R15 K13      ; R15 := gGameRules
173 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15["0x8B598ED4"]
174 [-]: GETGLOBAL R17 K32      ; R17 := gLotusHubGameRulesType
175 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
176 [-]: TEST      R15 0        ; if not R15 then PC := 183
177 [-]: JMP       183          ; PC := 183
178 [-]: GETGLOBAL R15 K13      ; R15 := gGameRules
179 [-]: SELF      R15 R15 K33  ; R16 := R15; R15 := R15["0xDA28574"]
180 [-]: MOVE      R17 R14      ; R17 := R14
181 [-]: CALL      R15 3 1      ; R15(R16,R17)
182 [-]: JMP       197          ; PC := 197
183 [-]: GETUPVAL  R15 U1       ; R15 := U1
184 [-]: CALL      R15 1 2      ; R15 := R15()
185 [-]: TEST      R15 1        ; if R15 then PC := 197
186 [-]: JMP       197          ; PC := 197
187 [-]: GETGLOBAL R15 K13      ; R15 := gGameRules
188 [-]: SELF      R15 R15 K31  ; R16 := R15; R15 := R15["0x8B598ED4"]
189 [-]: GETGLOBAL R17 K34      ; R17 := gLotusAttractModeGameRulesType
190 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
191 [-]: TEST      R15 0        ; if not R15 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETGLOBAL R15 K13      ; R15 := gGameRules
194 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xDB0D333E"]
195 [-]: MOVE      R17 R14      ; R17 := R14
196 [-]: CALL      R15 3 1      ; R15(R16,R17)
197 [-]: GETUPVAL  R15 U2       ; R15 := U2
198 [-]: CALL      R15 1 2      ; R15 := R15()
199 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
200 [-]: MOVE      R17 R15      ; R17 := R15
201 [-]: CALL      R16 2 2      ; R16 := R16(R17)
202 [-]: TEST      R16 1        ; if R16 then PC := 206
203 [-]: JMP       206          ; PC := 206
204 [-]: SELF      R16 R15 K36  ; R17 := R15; R16 := R15["0x58475636"]
205 [-]: CALL      R16 2 1      ; R16(R17)
206 [-]: GETGLOBAL R16 K37      ; R16 := gFlashMgr
207 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16["0xE3A8ABAA"]
208 [-]: LOADK     R18 K39      ; R18 := "OnQuestsChanged"
209 [-]: LOADK     R19 K2       ; R19 := ""
210 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
211 [-]: MOVE      R16 R7       ; R16 := R7
212 [-]: MOVE      R17 R1       ; R17 := R1
213 [-]: RETURN    R16 3        ; return R16,R17
214 [-]: SELF      R16 R2 K40   ; R17 := R2; R16 := R2["0x6F2E05FD"]
215 [-]: CALL      R16 2 2      ; R16 := R16(R17)
216 [-]: SELF      R17 R16 K41  ; R18 := R16; R17 := R16["0x70666039"]
217 [-]: CALL      R17 2 2      ; R17 := R17(R18)
218 [-]: GETGLOBAL R18 K42      ; R18 := 0x63B09107
219 [-]: MOVE      R19 R17      ; R19 := R17
220 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
221 [-]: JMP       228          ; PC := 228
222 [-]: GETTABLE  R23 R22 K43  ; R23 := R22["completed"]
223 [-]: TEST      R23 1        ; if R23 then PC := 228
224 [-]: JMP       228          ; PC := 228
225 [-]: LOADK     R23 K44      ; R23 := "New quests are available!"
226 [-]: MOVE      R24 R1       ; R24 := R1
227 [-]: RETURN    R23 3        ; return R23,R24
228 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 222; R20 := R21 end
229 [-]: JMP       222          ; PC := 222
230 [-]: LOADK     R23 K2       ; R23 := ""
231 [-]: MOVE      R24 R1       ; R24 := R1
232 [-]: RETURN    R23 3        ; return R23,R24
233 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 4655
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 4659
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 4663
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R2 K0        ; R2 := 3
  2 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x2C00D429
  4 [-]: LOADK     R5 K2        ; R5 := "/EE/Types/Physics/FullBody"
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: GETGLOBAL R5 K3        ; R5 := gBaseAvatarType
  7 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
  8 [-]: GETGLOBAL R4 K4        ; R4 := 0x221C9700
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: GETGLOBAL R5 K5        ; R5 := 0xA0DB3B89
 11 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0["0x7EEA994C"]
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 14 [-]: SELF      R6 R0 K7     ; R7 := R0; R6 := R0["0x8DB5D01F"]
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x84096397"]
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: MUL       R7 R5 R2     ; R7 := R5 * R2
 19 [-]: ADD       R7 R6 R7     ; R7 := R6 + R7
 20 [-]: GETGLOBAL R8 K9        ; R8 := gRegion
 21 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8["0x31444607"]
 22 [-]: MOVE      R10 R6       ; R10 := R6
 23 [-]: MOVE      R11 R7       ; R11 := R7
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: MOVE      R14 R4       ; R14 := R4
 27 [-]: TAILCALL  R8 7 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14)
 28 [-]: RETURN    R8 0         ; return R8,...
 29 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 4676
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: LOADK     R3 K1        ; R3 := ""
 13 [-]: RETURN    R2 3         ; return R2,R3
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: LOADK     R5 K1        ; R5 := ""
 18 [-]: NEWTABLE  R6 4 0       ; R6 := {}
 19 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 20 [-]: GETGLOBAL R8 K3        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["SUIT_SLOT"]
 22 [-]: SETTABLE  R7 K2 R8     ; R7["Cat"] := R8
 23 [-]: SETTABLE  R7 K5 K6     ; R7["isSuit"] := "0x1"
 24 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 25 [-]: GETGLOBAL R9 K3        ; R9 := Lotus_Game
 26 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["LONG_GUN_SLOT"]
 27 [-]: SETTABLE  R8 K2 R9     ; R8["Cat"] := R9
 28 [-]: SETTABLE  R8 K5 K8     ; R8["isSuit"] := "0x0"
 29 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 30 [-]: GETGLOBAL R10 K3       ; R10 := Lotus_Game
 31 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["PISTOL_SLOT"]
 32 [-]: SETTABLE  R9 K2 R10    ; R9["Cat"] := R10
 33 [-]: SETTABLE  R9 K5 K8     ; R9["isSuit"] := "0x0"
 34 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 35 [-]: GETGLOBAL R11 K3       ; R11 := Lotus_Game
 36 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["MELEE_SLOT"]
 37 [-]: SETTABLE  R10 K2 R11   ; R10["Cat"] := R11
 38 [-]: SETTABLE  R10 K5 K8    ; R10["isSuit"] := "0x0"
 39 [-]: SETLIST   R6 4 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
 40 [-]: CLOSURE   R7 0         ; R7 := closure(Function #244.1)
 41 [-]: GETGLOBAL R8 K11       ; R8 := 0x63B09107
 42 [-]: MOVE      R9 R6        ; R9 := R6
 43 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 44 [-]: JMP       90           ; PC := 90
 45 [-]: GETTABLE  R13 R12 K5   ; R13 := R12["isSuit"]
 46 [-]: TEST      R13 0        ; if not R13 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: TEST      R2 0         ; if not R2 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETTABLE  R13 R12 K5   ; R13 := R12["isSuit"]
 51 [-]: TEST      R13 1        ; if R13 then PC := 84
 52 [-]: JMP       84           ; PC := 84
 53 [-]: TEST      R3 1         ; if R3 then PC := 84
 54 [-]: JMP       84           ; PC := 84
 55 [-]: MOVE      R13 R7       ; R13 := R7
 56 [-]: GETTABLE  R14 R12 K2   ; R14 := R12["Cat"]
 57 [-]: MOVE      R15 R0       ; R15 := R0
 58 [-]: MOVE      R16 R1       ; R16 := R1
 59 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 60 [-]: GETGLOBAL R14 K11      ; R14 := 0x63B09107
 61 [-]: MOVE      R15 R13      ; R15 := R13
 62 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
 63 [-]: JMP       82           ; PC := 82
 64 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
 65 [-]: MOVE      R20 R18      ; R20 := R18
 66 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 67 [-]: TEST      R19 1        ; if R19 then PC := 82
 68 [-]: JMP       82           ; PC := 82
 69 [-]: SELF      R19 R18 K12  ; R20 := R18; R19 := R18["0xA2BAA519"]
 70 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 71 [-]: TEST      R19 0        ; if not R19 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R19 R12 K2   ; R19 := R12["Cat"]
 74 [-]: GETGLOBAL R20 K3       ; R20 := Lotus_Game
 75 [-]: GETTABLE  R20 R20 K4   ; R20 := R20["SUIT_SLOT"]
 76 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: MOVE      R2 R1        ; R2 := R1
 79 [-]: JMP       84           ; PC := 84
 80 [-]: MOVE      R3 R1        ; R3 := R1
 81 [-]: JMP       84           ; PC := 84
 82 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 64; R16 := R17 end
 83 [-]: JMP       64           ; PC := 64
 84 [-]: TESTSET   R4 R2 0      ; if not R2 then PC := 87 else R4 := R2
 85 [-]: JMP       87           ; PC := 87
 86 [-]: MOVE      R4 R3        ; R4 := R3
 87 [-]: TEST      R4 0         ; if not R4 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: JMP       92           ; PC := 92
 90 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 45; R10 := R11 end
 91 [-]: JMP       45           ; PC := 45
 92 [-]: TEST      R4 1         ; if R4 then PC := 124
 93 [-]: JMP       124          ; PC := 124
 94 [-]: LOADK     R19 K1       ; R19 := ""
 95 [-]: TEST      R2 1         ; if R2 then PC := 109
 96 [-]: JMP       109          ; PC := 109
 97 [-]: MOVE      R20 R19      ; R20 := R19
 98 [-]: LOADK     R21 K13      ; R21 := "1x "
 99 [-]: GETGLOBAL R22 K14      ; R22 := 0xE6DC43B0
100 [-]: LOADK     R23 K15      ; R23 := "/Lotus/Language/Menu/Global_ProductCategory_Suit"
101 [-]: MOVE      R24 R0       ; R24 := R0
102 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
103 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
104 [-]: TEST      R3 1         ; if R3 then PC := 109
105 [-]: JMP       109          ; PC := 109
106 [-]: MOVE      R20 R19      ; R20 := R19
107 [-]: LOADK     R21 K16      ; R21 := " + "
108 [-]: CONCAT    R19 R20 R21  ; R19 := R20 .. R21
109 [-]: TEST      R3 1         ; if R3 then PC := 118
110 [-]: JMP       118          ; PC := 118
111 [-]: MOVE      R20 R19      ; R20 := R19
112 [-]: LOADK     R21 K13      ; R21 := "1x "
113 [-]: GETGLOBAL R22 K14      ; R22 := 0xE6DC43B0
114 [-]: LOADK     R23 K17      ; R23 := "/Lotus/Language/Menu/Loadout_PVPCompatibleWeapon"
115 [-]: MOVE      R24 R0       ; R24 := R0
116 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
117 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
118 [-]: GETGLOBAL R20 K14      ; R20 := 0xE6DC43B0
119 [-]: LOADK     R21 K18      ; R21 := "/Lotus/Language/Menu/Loadout_PVPNeedCompatibleGear"
120 [-]: NEWTABLE  R22 0 1      ; R22 := {}
121 [-]: SETTABLE  R22 K19 R19  ; R22["REQ_GEAR"] := R19
122 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
123 [-]: MOVE      R5 R20       ; R5 := R20
124 [-]: MOVE      R20 R4       ; R20 := R4
125 [-]: MOVE      R21 R5       ; R21 := R5
126 [-]: RETURN    R20 3        ; return R20,R21
127 [-]: RETURN    R0 1         ; return 


; Function #244.1:
;
; Name:            
; Defined at line: 4690
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  3 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
  4 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["SUIT_SLOT"]
  5 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: SELF      R5 R1 K2     ; R6 := R1; R5 := R1["0xD3A6CE65"]
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: MOVE      R3 R5        ; R3 := R5
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 12 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["MELEE_SLOT"]
 13 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: SELF      R5 R1 K4     ; R6 := R1; R5 := R1["0xA82A3D30"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: MOVE      R3 R5        ; R3 := R5
 18 [-]: JMP       34           ; PC := 34
 19 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LONG_GUN_SLOT"]
 21 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: SELF      R5 R1 K6     ; R6 := R1; R5 := R1["0x1D216770"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: MOVE      R3 R5        ; R3 := R5
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R5 K0        ; R5 := Lotus_Game
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["PISTOL_SLOT"]
 29 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xB5D66AE"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 35 [-]: MOVE      R6 R3        ; R6 := R3
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 1         ; if R5 then PC := 67
 38 [-]: JMP       67           ; PC := 67
 39 [-]: LEN       R5 R3        ; R5 := # R3
 40 [-]: LT        0 K10 R5     ; if 0 >= R5 then PC := 67
 41 [-]: JMP       67           ; PC := 67
 42 [-]: LOADK     R5 K11       ; R5 := 1
 43 [-]: LEN       R6 R3        ; R6 := # R3
 44 [-]: LOADK     R7 K11       ; R7 := 1
 45 [-]: FORPREP   R5 66        ; R5 -= R7; PC := 66
 46 [-]: GETGLOBAL R9 K9        ; R9 := 0x400E7765
 47 [-]: GETTABLE  R10 R3 R8    ; R10 := R3[R8]
 48 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["mItemType"]
 49 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 50 [-]: TEST      R9 1         ; if R9 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: SELF      R9 R2 K13    ; R10 := R2; R9 := R2["0x62FBC1B8"]
 53 [-]: GETTABLE  R11 R3 R8    ; R11 := R3[R8]
 54 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["mItemType"]
 55 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 56 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
 57 [-]: MOVE      R11 R9       ; R11 := R9
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: TEST      R10 1        ; if R10 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETGLOBAL R10 K14      ; R10 := table
 62 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0xE6450C9D"]
 63 [-]: MOVE      R11 R4       ; R11 := R4
 64 [-]: MOVE      R12 R9       ; R12 := R9
 65 [-]: CALL      R10 3 1      ; R10(R11,R12)
 66 [-]: FORLOOP   R5 46        ; R5 += R7; if R5 <= R6 then begin PC := 46; R8 := R5 end
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 4758
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xEA569929"]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
  5 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0x1C19D966"]
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: LOADK     R7 K2        ; R7 := "_width"
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 10 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0["0x1C19D966"]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: LOADK     R7 K3        ; R7 := "_height"
 13 [-]: MOVE      R8 R3        ; R8 := R3
 14 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 15 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x7E1F26D7"]
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: GETGLOBAL R7 K5        ; R7 := _G
 18 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIMaterial_Bluer"]
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 4767
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gPlayerProfileMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x21EF7B1A"]
  3 [-]: LOADK     R4 K2        ; R4 := 0
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 34
  9 [-]: JMP       34           ; PC := 34
 10 [-]: LOADK     R3 K4        ; R3 := 0.30000001192093
 11 [-]: GETGLOBAL R4 K5        ; R4 := Engine
 12 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0x9490FE70"]
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: TEST      R4 0         ; if not R4 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0x3EEB612E"]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0xA0E6A036"]
 19 [-]: GETGLOBAL R6 K5        ; R6 := Engine
 20 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["IST_CONTROLLER"]
 21 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 22 [-]: MUL       R3 K10 R4    ; R3 := 13 * R4
 23 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2["0x3EEB612E"]
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x386648A7"]
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 0         ; if not R4 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: UNM       R1 R1        ; R1 := - R1
 30 [-]: MUL       R4 R0 R3     ; R4 := R0 * R3
 31 [-]: MUL       R5 R1 R3     ; R5 := R1 * R3
 32 [-]: LOADK     R6 K2        ; R6 := 0
 33 [-]: RETURN    R4 4         ; return R4,R5,R6
 34 [-]: LOADK     R4 K2        ; R4 := 0
 35 [-]: LOADK     R5 K2        ; R5 := 0
 36 [-]: LOADK     R6 K2        ; R6 := 0
 37 [-]: RETURN    R4 4         ; return R4,R5,R6
 38 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 4786
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: CLOSURE   R2 0         ; R2 := closure(Function #247.1)
 10 [-]: SETTABLE  R1 K1 R2     ; R1["ViewConsoleCallback"] := R2
 11 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x695D4229"]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 0         ; if not R2 then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R2 K4        ; R2 := gPlayerProfileMgr
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 18 [-]: LOADK     R4 K6        ; R4 := 0
 19 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 20 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x654F1092"]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: SELF      R4 R3 K8     ; R5 := R3; R4 := R3["0xDD467D6D"]
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: LOADK     R7 K1        ; R7 := "ViewConsoleCallback"
 25 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R4 K9        ; R4 := gMatchingService
 28 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x3E49F77"]
 29 [-]: MOVE      R6 R0        ; R6 := R0
 30 [-]: CALL      R4 3 1       ; R4(R5,R6)
 31 [-]: RETURN    R0 1         ; return 


; Function #247.1:
;
; Name:            
; Defined at line: 4792
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := gMatchingService
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x3E49F77"]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 4809
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalOpen"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["ArsenalUpgradeOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ModScreenOpen"]
 11 [-]: GETGLOBAL R1 K0        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["AppearancePreviewOpen"]
 13 [-]: TEST      R1 0         ; if not R1 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["PurchaseParams_PURCHASE_APPEARANCE_PREVIEW"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: JMP       28           ; PC := 28
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 22 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["PurchaseParams_PURCHASE_ARSENAL"]
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R1 K5        ; R1 := Lotus_Game
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["PurchaseParams_PURCHASE_MARKET"]
 27 [-]: RETURN    R1 2         ; return R1
 28 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 4820
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := math
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xBCF846DF"]
  3 [-]: MUL       R3 R0 R1     ; R3 := R0 * R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SUB       R3 R0 R2     ; R3 := R0 - R2
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 4825
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 4830
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Coupon_Generic"
  2 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Item_Suits"]
  4 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/Coupon_Warframe"
  7 [-]: JMP       25           ; PC := 25
  8 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Item_LongGuns"]
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/Coupon_LongGun"
 13 [-]: JMP       25           ; PC := 25
 14 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["Item_Pistols"]
 16 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADK     R1 K7        ; R1 := "/Lotus/Language/Menu/Coupon_Pistol"
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 21 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Item_Melee"]
 22 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R1 K9        ; R1 := "/Lotus/Language/Menu/Coupon_Melee"
 25 [-]: GETGLOBAL R2 K10       ; R2 := 0xE6DC43B0
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 29 [-]: RETURN    R2 0         ; return R2,...
 30 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 4846
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["StoreItem"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: NEWTABLE  R1 0 1       ; R1 := {}
 18 [-]: SETTABLE  R1 K4 K5     ; R1["mAmount"] := 0
 19 [-]: SETTABLE  R0 K3 R1     ; R0["Coupon"] := R1
 20 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xE088419A"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADK     R2 K7        ; R2 := 1
 24 [-]: LEN       R3 R1        ; R3 := # R1
 25 [-]: LOADK     R4 K7        ; R4 := 1
 26 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 27 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 28 [-]: GETGLOBAL R7 K8        ; R7 := Engine
 29 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xD09D7910"]
 30 [-]: GETTABLE  R8 R6 K10    ; R8 := R6["mExpiryDate"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: LT        0 K5 R7      ; if 0 >= R7 then PC := 57
 33 [-]: JMP       57           ; PC := 57
 34 [-]: SELF      R8 R6 K11    ; R9 := R6; R8 := R6["0x689E4214"]
 35 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["StoreItem"]
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: TEST      R8 0         ; if not R8 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 40 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x10ECB0C4"]
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: TEST      R8 1         ; if R8 then PC := 57
 43 [-]: JMP       57           ; PC := 57
 44 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 45 [-]: GETTABLE  R9 R6 K13    ; R9 := R6["mId"]
 46 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["mId"]
 47 [-]: SETTABLE  R8 K13 R9    ; R8["mId"] := R9
 48 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 49 [-]: GETTABLE  R9 R6 K4     ; R9 := R6["mAmount"]
 50 [-]: DIV       R9 R9 K14    ; R9 := R9 / 100
 51 [-]: SETTABLE  R8 K4 R9     ; R8["mAmount"] := R9
 52 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 53 [-]: GETTABLE  R9 R6 K10    ; R9 := R6["mExpiryDate"]
 54 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["sec"]
 55 [-]: SETTABLE  R8 K15 R9    ; R8["mExpiry"] := R9
 56 [-]: JMP       58           ; PC := 58
 57 [-]: FORLOOP   R2 27        ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
 58 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 59 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x6139ADFF"]
 60 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 61 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 62 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["Item_DC_NONE"]
 63 [-]: LT        0 R9 R8      ; if R9 >= R8 then PC := 94
 64 [-]: JMP       94           ; PC := 94
 65 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 66 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8["0x8292A1EF"]
 67 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 68 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 69 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["Item_MiscItems"]
 70 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 94
 71 [-]: JMP       94           ; PC := 94
 72 [-]: GETGLOBAL R8 K1        ; R8 := gGameData
 73 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8["0x41010993"]
 74 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 75 [-]: TEST      R8 0         ; if not R8 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R9 K8        ; R9 := Engine
 78 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["0xD09D7910"]
 79 [-]: GETTABLE  R10 R8 K15   ; R10 := R8["mExpiry"]
 80 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 81 [-]: LT        0 K5 R9      ; if 0 >= R9 then PC := 94
 82 [-]: JMP       94           ; PC := 94
 83 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 84 [-]: SETTABLE  R10 K13 K22  ; R10["mId"] := nil
 85 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 86 [-]: GETTABLE  R11 R8 K23   ; R11 := R8["mDiscount"]
 87 [-]: DIV       R11 R11 K14  ; R11 := R11 / 100
 88 [-]: SETTABLE  R10 K4 R11   ; R10["mAmount"] := R11
 89 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 90 [-]: GETTABLE  R11 R8 K15   ; R11 := R8["mExpiry"]
 91 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["sec"]
 92 [-]: SETTABLE  R10 K15 R11  ; R10["mExpiry"] := R11
 93 [-]: SETTABLE  R0 K24 K25   ; R0["IsDiscordPlat"] := "0x1"
 94 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 4881
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 4885
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: LOADNIL   R5 R5        ; R5 := nil
  4 [-]: GETGLOBAL R6 K0        ; R6 := gPlayerProfileMgr
  5 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x21EF7B1A"]
  6 [-]: LOADK     R8 K2        ; R8 := 0
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: GETGLOBAL R7 K3        ; R7 := 0x400E7765
  9 [-]: MOVE      R8 R6        ; R8 := R6
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: SELF      R7 R6 K4     ; R8 := R6; R7 := R6["0x654F1092"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 16 [-]: MOVE      R9 R7        ; R9 := R7
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: TEST      R8 1         ; if R8 then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7["0x6F2E05FD"]
 21 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 22 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8["0x4FA1109B"]
 23 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 24 [-]: MOVE      R5 R8        ; R5 := R8
 25 [-]: LOADK     R8 K7        ; R8 := 1
 26 [-]: LEN       R9 R5        ; R9 := # R5
 27 [-]: LOADK     R10 K7       ; R10 := 1
 28 [-]: FORPREP   R8 33        ; R8 -= R10; PC := 33
 29 [-]: GETUPVAL  R12 U0       ; R12 := U0
 30 [-]: EQ        0 R5 R12     ; if R5 ~= R12 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: FORLOOP   R8 29        ; R8 += R10; if R8 <= R9 then begin PC := 29; R11 := R8 end
 34 [-]: GETGLOBAL R12 K3       ; R12 := 0x400E7765
 35 [-]: MOVE      R13 R0       ; R13 := R0
 36 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 37 [-]: TEST      R12 1        ; if R12 then PC := 104
 38 [-]: JMP       104          ; PC := 104
 39 [-]: SELF      R12 R0 K8    ; R13 := R0; R12 := R0["0xB68BBE7C"]
 40 [-]: GETGLOBAL R14 K9       ; R14 := gColorPickerItemType
 41 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 42 [-]: GETGLOBAL R13 K10      ; R13 := 0x63B09107
 43 [-]: MOVE      R14 R12      ; R14 := R12
 44 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 45 [-]: JMP       102          ; PC := 102
 46 [-]: GETGLOBAL R18 K11      ; R18 := 0x1BF588C6
 47 [-]: LOADK     R19 K2       ; R19 := 0
 48 [-]: CALL      R18 2 1      ; R18(R19)
 49 [-]: GETGLOBAL R18 K3       ; R18 := 0x400E7765
 50 [-]: MOVE      R19 R17      ; R19 := R17
 51 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 52 [-]: TEST      R18 1        ; if R18 then PC := 102
 53 [-]: JMP       102          ; PC := 102
 54 [-]: SELF      R18 R17 K12  ; R19 := R17; R18 := R17["0x3077BE70"]
 55 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 56 [-]: GETGLOBAL R19 K3       ; R19 := 0x400E7765
 57 [-]: MOVE      R20 R18      ; R20 := R18
 58 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 59 [-]: TEST      R19 1        ; if R19 then PC := 102
 60 [-]: JMP       102          ; PC := 102
 61 [-]: SELF      R19 R17 K13  ; R20 := R17; R19 := R17["0x8292A1EF"]
 62 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 63 [-]: GETGLOBAL R20 K14      ; R20 := Engine
 64 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["Item_FlavourItems"]
 65 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 102
 66 [-]: JMP       102          ; PC := 102
 67 [-]: SELF      R19 R17 K16  ; R20 := R17; R19 := R17["0x8EE9CD07"]
 68 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 69 [-]: GETGLOBAL R20 K3       ; R20 := 0x400E7765
 70 [-]: MOVE      R21 R5       ; R21 := R5
 71 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 72 [-]: TEST      R20 1        ; if R20 then PC := 85
 73 [-]: JMP       85           ; PC := 85
 74 [-]: LOADK     R20 K7       ; R20 := 1
 75 [-]: LEN       R21 R5       ; R21 := # R5
 76 [-]: LOADK     R22 K7       ; R22 := 1
 77 [-]: FORPREP   R20 84       ; R20 -= R22; PC := 84
 78 [-]: GETTABLE  R24 R5 R23   ; R24 := R5[R23]
 79 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["mItemType"]
 80 [-]: EQ        0 R24 R18    ; if R24 ~= R18 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: MOVE      R19 R1       ; R19 := R1
 83 [-]: JMP       85           ; PC := 85
 84 [-]: FORLOOP   R20 78       ; R20 += R22; if R20 <= R21 then begin PC := 78; R23 := R20 end
 85 [-]: TEST      R19 1        ; if R19 then PC := 95
 86 [-]: JMP       95           ; PC := 95
 87 [-]: SELF      R24 R17 K18  ; R25 := R17; R24 := R17["0x7D5774ED"]
 88 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 89 [-]: TEST      R24 1        ; if R24 then PC := 93
 90 [-]: JMP       93           ; PC := 93
 91 [-]: TEST      R2 0         ; if not R2 then PC := 102
 92 [-]: JMP       102          ; PC := 102
 93 [-]: TEST      R1 1         ; if R1 then PC := 102
 94 [-]: JMP       102          ; PC := 102
 95 [-]: GETGLOBAL R24 K19      ; R24 := table
 96 [-]: GETTABLE  R24 R24 K20  ; R24 := R24["0xE6450C9D"]
 97 [-]: MOVE      R25 R3       ; R25 := R3
 98 [-]: NEWTABLE  R26 0 2      ; R26 := {}
 99 [-]: SETTABLE  R26 K21 R17  ; R26["mStoreItem"] := R17
100 [-]: SETTABLE  R26 K22 R19  ; R26["mOwned"] := R19
101 [-]: CALL      R24 3 1      ; R24(R25,R26)
102 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 46; R15 := R16 end
103 [-]: JMP       46           ; PC := 46
104 [-]: MOVE      R24 R3       ; R24 := R3
105 [-]: MOVE      R25 R4       ; R25 := R4
106 [-]: RETURN    R24 3        ; return R24,R25
107 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 4935
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 4939
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 12 [-]: LEN       R5 R3        ; R5 := # R3
 13 [-]: TEST      R4 1         ; if R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: ADD       R5 R5 K1     ; R5 := R5 + 1
 16 [-]: GETGLOBAL R6 K2        ; R6 := 0x7FD4B57D
 17 [-]: LOADK     R7 K1        ; R7 := 1
 18 [-]: MOVE      R8 R5        ; R8 := R5
 19 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: LEN       R8 R3        ; R8 := # R3
 22 [-]: LE        0 R6 R8      ; if R6 > R8 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: GETGLOBAL R8 K3        ; R8 := 0x7C282057
 25 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 26 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mStoreItem"]
 27 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9["0x3077BE70"]
 28 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 29 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 30 [-]: SELF      R9 R8 K6     ; R10 := R8; R9 := R8["0x7696CE30"]
 31 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 32 [-]: MOVE      R2 R9        ; R2 := R9
 33 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 34 [-]: GETTABLE  R7 R9 K4     ; R7 := R9["mStoreItem"]
 35 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 38 [-]: MOVE      R2 R9        ; R2 := R9
 39 [-]: LEN       R9 R2        ; R9 := # R2
 40 [-]: EQ        0 R9 K8      ; if R9 ~= 0 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: SELF      R9 R1 K6     ; R10 := R1; R9 := R1["0x7696CE30"]
 43 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 44 [-]: LOADK     R10 K9       ; R10 := 3
 45 [-]: LEN       R11 R9       ; R11 := # R9
 46 [-]: LOADK     R12 K10      ; R12 := 5
 47 [-]: FORPREP   R10 53       ; R10 -= R12; PC := 53
 48 [-]: GETGLOBAL R14 K11      ; R14 := table
 49 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["0xE6450C9D"]
 50 [-]: MOVE      R15 R2       ; R15 := R2
 51 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
 52 [-]: CALL      R14 3 1      ; R14(R15,R16)
 53 [-]: FORLOOP   R10 48       ; R10 += R12; if R10 <= R11 then begin PC := 48; R13 := R10 end
 54 [-]: LOADNIL   R7 R7        ; R7 := nil
 55 [-]: MOVE      R14 R2       ; R14 := R2
 56 [-]: MOVE      R15 R7       ; R15 := R7
 57 [-]: RETURN    R14 3        ; return R14,R15
 58 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 4982
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  3 [-]: LOADK     R3 K2        ; R3 := 0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x654F1092"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1["0x6F2E05FD"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xBF12F696"]
 13 [-]: GETGLOBAL R5 K6        ; R5 := Lotus_Game
 14 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["PvpBonusLoadoutBin"]
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: GETGLOBAL R4 K8        ; R4 := math
 17 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0x65F9712A"]
 18 [-]: ADD       R5 R2 K10    ; R5 := R2 + 1
 19 [-]: ADD       R5 R5 R3     ; R5 := R5 + R3
 20 [-]: GETGLOBAL R6 K11       ; R6 := MAX_PVP_LOADOUTS
 21 [-]: TAILCALL  R4 3 0       ; R4,... := R4(R5,R6)
 22 [-]: RETURN    R4 0         ; return R4,...
 23 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 4990
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 4994
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0["0x1B252E3C"]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: LOADK     R3 K1        ; R3 := 0
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: MOVE      R6 R2        ; R6 := R2
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 30
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4[1]
 12 [-]: GETTABLE  R6 R4 K3     ; R6 := R4[2]
 13 [-]: LOADK     R7 K2        ; R7 := 1
 14 [-]: FORPREP   R5 29        ; R5 -= R7; PC := 29
 15 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 16 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["count"]
 17 [-]: TEST      R9 0         ; if not R9 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 20 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["count"]
 21 [-]: ADD       R3 R3 R9     ; R3 := R3 + R9
 22 [-]: JMP       24           ; PC := 24
 23 [-]: ADD       R3 R3 K2     ; R3 := R3 + 1
 24 [-]: GETTABLE  R9 R4 K2     ; R9 := R4[1]
 25 [-]: GETTABLE  R10 R4 K3    ; R10 := R4[2]
 26 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: JMP       30           ; PC := 30
 29 [-]: FORLOOP   R5 15        ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 5014
; #Upvalues:       8
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: LOADK     R4 K0        ; R4 := 0
  2 [-]: SELF      R5 R2 K1     ; R6 := R2; R5 := R2["0x8292A1EF"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETGLOBAL R6 K2        ; R6 := Engine
  5 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["Item_Consumables"]
  6 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R6 R0        ; R6 := R0
  9 [-]: MOVE      R6 R1        ; R6 := R1
 10 [-]: SELF      R7 R2 K4     ; R8 := R2; R7 := R2["0xC5349ED"]
 11 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 12 [-]: SELF      R8 R2 K5     ; R9 := R2; R8 := R2["0x3077BE70"]
 13 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 14 [-]: TEST      R7 0         ; if not R7 then PC := 99
 15 [-]: JMP       99           ; PC := 99
 16 [-]: MOVE      R9 R0        ; R9 := R0
 17 [-]: MOVE      R10 R0       ; R10 := R0
 18 [-]: SELF      R11 R2 K6    ; R12 := R2; R11 := R2["0xEC2A2A3C"]
 19 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 20 [-]: LOADK     R12 K7       ; R12 := 1
 21 [-]: LEN       R13 R11      ; R13 := # R11
 22 [-]: LOADK     R14 K7       ; R14 := 1
 23 [-]: FORPREP   R12 47       ; R12 -= R14; PC := 47
 24 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
 25 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["mTypeName"]
 26 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
 27 [-]: MOVE      R18 R16      ; R18 := R16
 28 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 29 [-]: TEST      R17 1        ; if R17 then PC := 47
 30 [-]: JMP       47           ; PC := 47
 31 [-]: GETUPVAL  R17 U0       ; R17 := U0
 32 [-]: SELF      R18 R16 K1   ; R19 := R16; R18 := R16["0x8292A1EF"]
 33 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
 34 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 35 [-]: TEST      R17 0        ; if not R17 then PC := 47
 36 [-]: JMP       47           ; PC := 47
 37 [-]: MOVE      R9 R1        ; R9 := R1
 38 [-]: GETUPVAL  R17 U1       ; R17 := U1
 39 [-]: MOVE      R18 R16      ; R18 := R16
 40 [-]: MOVE      R19 R3       ; R19 := R3
 41 [-]: MOVE      R20 R1       ; R20 := R1
 42 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 43 [-]: TEST      R17 0        ; if not R17 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R10 R1       ; R10 := R1
 46 [-]: JMP       48           ; PC := 48
 47 [-]: FORLOOP   R12 24       ; R12 += R14; if R12 <= R13 then begin PC := 24; R15 := R12 end
 48 [-]: SELF      R17 R2 K10   ; R18 := R2; R17 := R2["0x6139ADFF"]
 49 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 50 [-]: GETGLOBAL R18 K2       ; R18 := Engine
 51 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["Item_DC_NITRO"]
 52 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETGLOBAL R17 K12      ; R17 := gGameData
 55 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0x9C8CCF19"]
 56 [-]: SELF      R19 R2 K14   ; R20 := R2; R19 := R2["0x1170584F"]
 57 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 58 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 59 [-]: EQ        1 R17 K15    ; if R17 == "0x0" then PC := 77
 60 [-]: JMP       77           ; PC := 77
 61 [-]: GETGLOBAL R17 K2       ; R17 := Engine
 62 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["0x1398DAFB"]
 63 [-]: CALL      R17 1 2      ; R17 := R17()
 64 [-]: TEST      R17 0        ; if not R17 then PC := 79
 65 [-]: JMP       79           ; PC := 79
 66 [-]: SELF      R17 R2 K14   ; R18 := R2; R17 := R2["0x1170584F"]
 67 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 68 [-]: EQ        1 R17 K17    ; if R17 == "" then PC := 79
 69 [-]: JMP       79           ; PC := 79
 70 [-]: GETGLOBAL R17 K12      ; R17 := gGameData
 71 [-]: SELF      R17 R17 K18  ; R18 := R17; R17 := R17["0xBFA9E4F4"]
 72 [-]: SELF      R19 R2 K14   ; R20 := R2; R19 := R2["0x1170584F"]
 73 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 74 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 75 [-]: TEST      R17 1        ; if R17 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADK     R4 K0        ; R4 := 0
 78 [-]: JMP       193          ; PC := 193
 79 [-]: TEST      R9 0         ; if not R9 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: TEST      R10 1        ; if R10 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: LOADK     R4 K7        ; R4 := 1
 84 [-]: JMP       193          ; PC := 193
 85 [-]: GETUPVAL  R17 U2       ; R17 := U2
 86 [-]: TEST      R17 0        ; if not R17 then PC := 193
 87 [-]: JMP       193          ; PC := 193
 88 [-]: GETUPVAL  R17 U3       ; R17 := U3
 89 [-]: MOVE      R18 R2       ; R18 := R2
 90 [-]: LOADNIL   R19 R20      ; R19 := R20 := nil
 91 [-]: MOVE      R21 R3       ; R21 := R3
 92 [-]: CALL      R17 5 3      ; R17,R18 := R17(R18,R19,R20,R21)
 93 [-]: EQ        0 R17 K0     ; if R17 ~= 0 then PC := 193
 94 [-]: JMP       193          ; PC := 193
 95 [-]: EQ        0 R18 K0     ; if R18 ~= 0 then PC := 193
 96 [-]: JMP       193          ; PC := 193
 97 [-]: LOADK     R4 K7        ; R4 := 1
 98 [-]: JMP       193          ; PC := 193
 99 [-]: GETGLOBAL R19 K19      ; R19 := 0x1BF588C6
100 [-]: CALL      R19 1 1      ; R19()
101 [-]: SELF      R19 R2 K20   ; R20 := R2; R19 := R2["0x966E7851"]
102 [-]: CALL      R19 2 2      ; R19 := R19(R20)
103 [-]: GETGLOBAL R20 K9       ; R20 := 0x400E7765
104 [-]: MOVE      R21 R8       ; R21 := R8
105 [-]: CALL      R20 2 2      ; R20 := R20(R21)
106 [-]: TEST      R20 1        ; if R20 then PC := 158
107 [-]: JMP       158          ; PC := 158
108 [-]: SELF      R20 R8 K21   ; R21 := R8; R20 := R8["0x8B598ED4"]
109 [-]: GETGLOBAL R22 K22      ; R22 := gVoidProjectionItemType
110 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
111 [-]: TEST      R20 0        ; if not R20 then PC := 158
112 [-]: JMP       158          ; PC := 158
113 [-]: MOVE      R20 R19      ; R20 := R19
114 [-]: GETGLOBAL R21 K23      ; R21 := string
115 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["0x633C4246"]
116 [-]: MOVE      R22 R20      ; R22 := R20
117 [-]: LOADK     R23 K25      ; R23 := "Bronze"
118 [-]: LOADK     R24 K17      ; R24 := ""
119 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
120 [-]: MOVE      R20 R21      ; R20 := R21
121 [-]: GETGLOBAL R21 K23      ; R21 := string
122 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["0x633C4246"]
123 [-]: MOVE      R22 R20      ; R22 := R20
124 [-]: LOADK     R23 K26      ; R23 := "Silver"
125 [-]: LOADK     R24 K17      ; R24 := ""
126 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
127 [-]: MOVE      R20 R21      ; R20 := R21
128 [-]: GETGLOBAL R21 K23      ; R21 := string
129 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["0x633C4246"]
130 [-]: MOVE      R22 R20      ; R22 := R20
131 [-]: LOADK     R23 K27      ; R23 := "Gold"
132 [-]: LOADK     R24 K17      ; R24 := ""
133 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
134 [-]: MOVE      R20 R21      ; R20 := R21
135 [-]: GETGLOBAL R21 K23      ; R21 := string
136 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["0x633C4246"]
137 [-]: MOVE      R22 R20      ; R22 := R20
138 [-]: LOADK     R23 K28      ; R23 := "Platinum"
139 [-]: LOADK     R24 K17      ; R24 := ""
140 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
141 [-]: MOVE      R20 R21      ; R20 := R21
142 [-]: NEWTABLE  R21 4 0      ; R21 := {}
143 [-]: MOVE      R22 R20      ; R22 := R20
144 [-]: LOADK     R23 K25      ; R23 := "Bronze"
145 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
146 [-]: MOVE      R23 R20      ; R23 := R20
147 [-]: LOADK     R24 K26      ; R24 := "Silver"
148 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
149 [-]: MOVE      R24 R20      ; R24 := R20
150 [-]: LOADK     R25 K27      ; R25 := "Gold"
151 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
152 [-]: MOVE      R25 R20      ; R25 := R20
153 [-]: LOADK     R26 K28      ; R26 := "Platinum"
154 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
155 [-]: SETLIST   R21 4 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 4
156 [-]: MOVE      R19 R21      ; R19 := R21
157 [-]: JMP       162          ; PC := 162
158 [-]: NEWTABLE  R21 1 0      ; R21 := {}
159 [-]: MOVE      R22 R19      ; R22 := R19
160 [-]: SETLIST   R21 1 1      ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
161 [-]: MOVE      R19 R21      ; R19 := R21
162 [-]: LOADK     R21 K7       ; R21 := 1
163 [-]: LEN       R22 R19      ; R22 := # R19
164 [-]: LOADK     R23 K7       ; R23 := 1
165 [-]: FORPREP   R21 192      ; R21 -= R23; PC := 192
166 [-]: GETUPVAL  R25 U4       ; R25 := U4
167 [-]: MOVE      R26 R3       ; R26 := R3
168 [-]: GETTABLE  R27 R19 R24  ; R27 := R19[R24]
169 [-]: GETUPVAL  R28 U5       ; R28 := U5
170 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
171 [-]: TEST      R25 0        ; if not R25 then PC := 192
172 [-]: JMP       192          ; PC := 192
173 [-]: GETTABLE  R26 R25 K7   ; R26 := R25[1]
174 [-]: GETTABLE  R27 R25 K29  ; R27 := R25[2]
175 [-]: LOADK     R28 K7       ; R28 := 1
176 [-]: FORPREP   R26 191      ; R26 -= R28; PC := 191
177 [-]: GETTABLE  R30 R3 R29   ; R30 := R3[R29]
178 [-]: GETTABLE  R30 R30 K30  ; R30 := R30["count"]
179 [-]: TEST      R30 0        ; if not R30 then PC := 185
180 [-]: JMP       185          ; PC := 185
181 [-]: GETTABLE  R30 R3 R29   ; R30 := R3[R29]
182 [-]: GETTABLE  R30 R30 K30  ; R30 := R30["count"]
183 [-]: ADD       R4 R4 R30    ; R4 := R4 + R30
184 [-]: JMP       186          ; PC := 186
185 [-]: ADD       R4 R4 K7     ; R4 := R4 + 1
186 [-]: GETTABLE  R30 R25 K7   ; R30 := R25[1]
187 [-]: GETTABLE  R31 R25 K29  ; R31 := R25[2]
188 [-]: EQ        0 R30 R31    ; if R30 ~= R31 then PC := 191
189 [-]: JMP       191          ; PC := 191
190 [-]: JMP       192          ; PC := 192
191 [-]: FORLOOP   R26 177      ; R26 += R28; if R26 <= R27 then begin PC := 177; R29 := R26 end
192 [-]: FORLOOP   R21 166      ; R21 += R23; if R21 <= R22 then begin PC := 166; R24 := R21 end
193 [-]: EQ        0 R4 K0      ; if R4 ~= 0 then PC := 229
194 [-]: JMP       229          ; PC := 229
195 [-]: GETGLOBAL R30 K2       ; R30 := Engine
196 [-]: GETTABLE  R30 R30 K31  ; R30 := R30["Item_Recipes"]
197 [-]: EQ        0 R5 R30     ; if R5 ~= R30 then PC := 229
198 [-]: JMP       229          ; PC := 229
199 [-]: SELF      R30 R2 K32   ; R31 := R2; R30 := R2["0x99575BC7"]
200 [-]: CALL      R30 2 2      ; R30 := R30(R31)
201 [-]: GETGLOBAL R31 K9       ; R31 := 0x400E7765
202 [-]: MOVE      R32 R30      ; R32 := R30
203 [-]: CALL      R31 2 2      ; R31 := R31(R32)
204 [-]: TEST      R31 1        ; if R31 then PC := 229
205 [-]: JMP       229          ; PC := 229
206 [-]: SELF      R31 R30 K21  ; R32 := R30; R31 := R30["0x8B598ED4"]
207 [-]: GETGLOBAL R33 K33      ; R33 := gKeyChainItemType
208 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
209 [-]: TEST      R31 0        ; if not R31 then PC := 229
210 [-]: JMP       229          ; PC := 229
211 [-]: SELF      R31 R1 K34   ; R32 := R1; R31 := R1["0x70666039"]
212 [-]: CALL      R31 2 2      ; R31 := R31(R32)
213 [-]: LOADK     R32 K7       ; R32 := 1
214 [-]: LEN       R33 R31      ; R33 := # R31
215 [-]: LOADK     R34 K7       ; R34 := 1
216 [-]: FORPREP   R32 228      ; R32 -= R34; PC := 228
217 [-]: GETGLOBAL R36 K9       ; R36 := 0x400E7765
218 [-]: GETTABLE  R37 R31 R35  ; R37 := R31[R35]
219 [-]: CALL      R36 2 2      ; R36 := R36(R37)
220 [-]: TEST      R36 1        ; if R36 then PC := 228
221 [-]: JMP       228          ; PC := 228
222 [-]: GETTABLE  R36 R31 R35  ; R36 := R31[R35]
223 [-]: GETTABLE  R36 R36 K35  ; R36 := R36["mItemType"]
224 [-]: EQ        0 R36 R30    ; if R36 ~= R30 then PC := 228
225 [-]: JMP       228          ; PC := 228
226 [-]: LOADK     R4 K7        ; R4 := 1
227 [-]: JMP       229          ; PC := 229
228 [-]: FORLOOP   R32 217      ; R32 += R34; if R32 <= R33 then begin PC := 217; R35 := R32 end
229 [-]: GETGLOBAL R36 K9       ; R36 := 0x400E7765
230 [-]: MOVE      R37 R8       ; R37 := R8
231 [-]: CALL      R36 2 2      ; R36 := R36(R37)
232 [-]: TEST      R36 1        ; if R36 then PC := 273
233 [-]: JMP       273          ; PC := 273
234 [-]: EQ        0 R4 K0      ; if R4 ~= 0 then PC := 261
235 [-]: JMP       261          ; PC := 261
236 [-]: GETGLOBAL R36 K9       ; R36 := 0x400E7765
237 [-]: GETGLOBAL R37 K12      ; R37 := gGameData
238 [-]: CALL      R36 2 2      ; R36 := R36(R37)
239 [-]: TEST      R36 1        ; if R36 then PC := 261
240 [-]: JMP       261          ; PC := 261
241 [-]: GETGLOBAL R36 K2       ; R36 := Engine
242 [-]: GETTABLE  R36 R36 K36  ; R36 := R36["Item_MiscItems"]
243 [-]: EQ        1 R5 R36     ; if R5 == R36 then PC := 246
244 [-]: JMP       246          ; PC := 246
245 [-]: MOVE      R36 R0       ; R36 := R0
246 [-]: MOVE      R36 R1       ; R36 := R1
247 [-]: TEST      R36 0        ; if not R36 then PC := 261
248 [-]: JMP       261          ; PC := 261
249 [-]: SELF      R37 R8 K21   ; R38 := R8; R37 := R8["0x8B598ED4"]
250 [-]: GETUPVAL  R39 U6       ; R39 := U6
251 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
252 [-]: TEST      R37 0        ; if not R37 then PC := 261
253 [-]: JMP       261          ; PC := 261
254 [-]: GETGLOBAL R37 K12      ; R37 := gGameData
255 [-]: SELF      R37 R37 K37  ; R38 := R37; R37 := R37["0xB451D706"]
256 [-]: MOVE      R39 R8       ; R39 := R8
257 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
258 [-]: TEST      R37 0        ; if not R37 then PC := 261
259 [-]: JMP       261          ; PC := 261
260 [-]: LOADK     R4 K7        ; R4 := 1
261 [-]: SELF      R37 R8 K21   ; R38 := R8; R37 := R8["0x8B598ED4"]
262 [-]: GETGLOBAL R39 K38      ; R39 := 0x2C00D429
263 [-]: LOADK     R40 K39      ; R40 := "/Lotus/Types/StoreItems/SlotItems/PvPLoadoutSlotItem"
264 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
265 [-]: CALL      R37 0 2      ; R37 := R37(R38,...)
266 [-]: TEST      R37 0        ; if not R37 then PC := 273
267 [-]: JMP       273          ; PC := 273
268 [-]: GETUPVAL  R37 U7       ; R37 := U7
269 [-]: GETGLOBAL R38 K40      ; R38 := _T
270 [-]: GETTABLE  R38 R38 K41  ; R38 := R38["ShowSyndicate"]
271 [-]: CALL      R37 2 2      ; R37 := R37(R38)
272 [-]: MOVE      R4 R37       ; R4 := R37
273 [-]: RETURN    R4 2         ; return R4
274 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 5121
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := string
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "_"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K1        ; R3 := string
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0xDE44F664"]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADK     R5 K4        ; R5 := "x"
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: GETGLOBAL R4 K1        ; R4 := string
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xDE44F664"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K5        ; R6 := "%."
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: LOADK     R5 K6        ; R5 := 1
 21 [-]: LOADK     R6 K6        ; R6 := 1
 22 [-]: TEST      R2 0         ; if not R2 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: TEST      R3 0         ; if not R3 then PC := 46
 25 [-]: JMP       46           ; PC := 46
 26 [-]: TEST      R4 0         ; if not R4 then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: LT        0 R3 R4      ; if R3 >= R4 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R7 K1        ; R7 := string
 33 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x7B782033"]
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: ADD       R9 R2 K6     ; R9 := R2 + 1
 36 [-]: SUB       R10 R3 K6    ; R10 := R3 - 1
 37 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 38 [-]: MOVE      R5 R7        ; R5 := R7
 39 [-]: GETGLOBAL R7 K1        ; R7 := string
 40 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x7B782033"]
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: ADD       R9 R3 K6     ; R9 := R3 + 1
 43 [-]: SUB       R10 R4 K6    ; R10 := R4 - 1
 44 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 45 [-]: MOVE      R6 R7        ; R6 := R7
 46 [-]: MOVE      R7 R5        ; R7 := R5
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: RETURN    R7 3         ; return R7,R8
 49 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 5135
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R2 R1        ; R2 := R1
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: RETURN    R3 2         ; return R3
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xBF12F696"]
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 12 [-]: LOADK     R4 K2        ; R4 := 0
 13 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 14 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["SuitBin"]
 15 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0["0xD3A6CE65"]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: LEN       R4 R5        ; R4 := # R5
 20 [-]: JMP       86           ; PC := 86
 21 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 22 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["WeaponBin"]
 23 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x1D216770"]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: LEN       R5 R5        ; R5 := # R5
 28 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0xB5D66AE"]
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: LEN       R6 R6        ; R6 := # R6
 31 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 32 [-]: SELF      R6 R0 K9     ; R7 := R0; R6 := R0["0xA82A3D30"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: LEN       R6 R6        ; R6 := # R6
 35 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 36 [-]: JMP       86           ; PC := 86
 37 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 38 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["SentinelBin"]
 39 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 49
 40 [-]: JMP       49           ; PC := 49
 41 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0xC119AB7B"]
 42 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 43 [-]: LEN       R5 R5        ; R5 := # R5
 44 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0["0x2485CEF6"]
 45 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 46 [-]: LEN       R6 R6        ; R6 := # R6
 47 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 48 [-]: JMP       86           ; PC := 86
 49 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 50 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["SpaceSuitBin"]
 51 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: SELF      R5 R0 K14    ; R6 := R0; R5 := R0["0x4ADC73C2"]
 54 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 55 [-]: LEN       R4 R5        ; R4 := # R5
 56 [-]: JMP       86           ; PC := 86
 57 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 58 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["SpaceWeaponBin"]
 59 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 69
 60 [-]: JMP       69           ; PC := 69
 61 [-]: SELF      R5 R0 K16    ; R6 := R0; R5 := R0["0x213E1D36"]
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: LEN       R5 R5        ; R5 := # R5
 64 [-]: SELF      R6 R0 K17    ; R7 := R0; R6 := R0["0xA5FC09FD"]
 65 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 66 [-]: LEN       R6 R6        ; R6 := # R6
 67 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 68 [-]: JMP       86           ; PC := 86
 69 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 70 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["OperatorAmpBin"]
 71 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: SELF      R5 R0 K19    ; R6 := R0; R5 := R0["0x67D14622"]
 74 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 75 [-]: LEN       R4 R5        ; R4 := # R5
 76 [-]: JMP       86           ; PC := 86
 77 [-]: GETGLOBAL R5 K20       ; R5 := 0x93B1256B
 78 [-]: LOADK     R6 K21       ; R6 := "Unsupported bin type!"
 79 [-]: GETGLOBAL R7 K22       ; R7 := 0x9FAED6BC
 80 [-]: MOVE      R8 R1        ; R8 := R1
 81 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 82 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 83 [-]: CALL      R5 2 1       ; R5(R6)
 84 [-]: MOVE      R5 R0        ; R5 := R0
 85 [-]: RETURN    R5 2         ; return R5
 86 [-]: SUB       R5 R3 R4     ; R5 := R3 - R4
 87 [-]: LT        0 R5 K2      ; if R5 >= 0 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: MOVE      R2 R0        ; R2 := R0
 90 [-]: RETURN    R2 2         ; return R2
 91 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 5169
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xF271473D"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xF81722A2"]
  6 [-]: GETGLOBAL R3 K0        ; R3 := Engine
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x9490FE70"]
  8 [-]: CALL      R3 1 2       ; R3 := R3()
  9 [-]: GETGLOBAL R4 K0        ; R4 := Engine
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Accept"]
 11 [-]: GETGLOBAL R5 K0        ; R5 := Engine
 12 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["OkCancel"]
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: SETTABLE  R1 K2 R2     ; R1["dialogType"] := R2
 15 [-]: SETTABLE  R1 K7 K8     ; R1["locString"] := "/Lotus/Language/Menu/Slot_InvalidBinError"
 16 [-]: SETTABLE  R1 K9 K10    ; R1["secondString"] := "/Lotus/Language/Menu/ContactSupport"
 17 [-]: EQ        1 R0 K11     ; if R0 == nil then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1["0x69A4A158"]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CALL      R2 3 1       ; R2(R3,R4)
 22 [-]: GETGLOBAL R2 K13       ; R2 := gClient
 23 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x68567799"]
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x4027211E"]
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: CALL      R2 3 1       ; R2(R3,R4)
 28 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 5181
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 18 [-]: RETURN    R1 0         ; return R1,...
 19 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["StoreItem"]
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x42286714"]
 23 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 24 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 25 [-]: RETURN    R1 0         ; return R1,...
 26 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 5189
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: LT        1 R1 K7      ; if R1 < 0 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R1 R0        ; R1 := R0
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["StoreItem"]
 24 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x42286714"]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: EQ        1 R1 K7      ; if R1 == 0 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R1 K5        ; R1 := Engine
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xD09D7910"]
 30 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["StoreItem"]
 31 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x42286714"]
 32 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 33 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 34 [-]: LE        0 R1 K7      ; if R1 > 0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: MOVE      R1 R0        ; R1 := R0
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 5235
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := Lotus_Game
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["AP_UNIVERSAL"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 0         ; if not R4 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 0         ; if not R4 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: GETGLOBAL R4 K3        ; R4 := _G
 16 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UIMaterial_FocusLens"]
 17 [-]: TEST      R1 0         ; if not R1 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xF81722A2"]
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: GETGLOBAL R7 K3        ; R7 := _G
 23 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIMaterial_FocusLensStoreDepth"]
 24 [-]: GETGLOBAL R8 K3        ; R8 := _G
 25 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["UIMaterial_FocusLensStore"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: MOVE      R4 R5        ; R4 := R5
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: GETGLOBAL R6 K8        ; R6 := 0xEAC5E738
 30 [-]: MOVE      R7 R5        ; R7 := R5
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: TEST      R6 0         ; if not R6 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: GETGLOBAL R6 K9        ; R6 := 0x7C282057
 35 [-]: MOVE      R7 R5        ; R7 := R5
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: MOVE      R5 R6        ; R5 := R6
 38 [-]: LOADK     R6 K10       ; R6 := ""
 39 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
 40 [-]: MOVE      R8 R5        ; R8 := R5
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 74
 43 [-]: JMP       74           ; PC := 74
 44 [-]: SELF      R7 R5 K11    ; R8 := R5; R7 := R5["0x1435C2FC"]
 45 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 46 [-]: LOADK     R8 K12       ; R8 := 1
 47 [-]: GETGLOBAL R9 K13       ; R9 := math
 48 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0x65F9712A"]
 49 [-]: GETUPVAL  R10 U1       ; R10 := U1
 50 [-]: LEN       R10 R10      ; R10 := # R10
 51 [-]: LEN       R11 R7       ; R11 := # R7
 52 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 53 [-]: LOADK     R10 K12      ; R10 := 1
 54 [-]: FORPREP   R8 60        ; R8 -= R10; PC := 60
 55 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
 56 [-]: LT        0 K15 R12    ; if 0 >= R12 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R3 R11 K12   ; R3 := R11 - 1
 59 [-]: JMP       61           ; PC := 61
 60 [-]: FORLOOP   R8 55        ; R8 += R10; if R8 <= R9 then begin PC := 55; R11 := R8 end
 61 [-]: SELF      R12 R5 K16   ; R13 := R5; R12 := R5["0x824F51E5"]
 62 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 63 [-]: EQ        0 R12 K17    ; if R12 ~= 0.34999999403954 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: LOADK     R6 K18       ; R6 := "_GREATER"
 66 [-]: JMP       74           ; PC := 74
 67 [-]: EQ        0 R12 K19    ; if R12 ~= 0.44999998807907 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R6 K20       ; R6 := "_EIDOLON"
 70 [-]: JMP       74           ; PC := 74
 71 [-]: EQ        0 R12 K21    ; if R12 ~= 0.64999997615814 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: LOADK     R6 K22       ; R6 := "_LUA"
 74 [-]: GETUPVAL  R13 U1       ; R13 := U1
 75 [-]: GETTABLE  R13 R13 R3   ; R13 := R13[R3]
 76 [-]: LOADK     R14 K23      ; R14 := "<"
 77 [-]: GETTABLE  R15 R13 K24  ; R15 := R13["Lens"]
 78 [-]: MOVE      R16 R6       ; R16 := R6
 79 [-]: LOADK     R17 K25      ; R17 := ">"
 80 [-]: CONCAT    R6 R14 R17   ; R6 := R14 .. R15 .. R16 .. R17
 81 [-]: NEWTABLE  R14 0 4      ; R14 := {}
 82 [-]: GETTABLE  R15 R13 K27  ; R15 := R13["Polarity"]
 83 [-]: SETTABLE  R14 K26 R15  ; R14["PolarityTag"] := R15
 84 [-]: SETTABLE  R14 K28 R6   ; R14["LensTag"] := R6
 85 [-]: GETTABLE  R15 R4 R3    ; R15 := R4[R3]
 86 [-]: SETTABLE  R14 K29 R15  ; R14["Material"] := R15
 87 [-]: SETTABLE  R14 K30 R3   ; R14["PolarityType"] := R3
 88 [-]: RETURN    R14 2        ; return R14
 89 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 5284
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 5288
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x8F7453D9"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 0         ; if not R2 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R2 K4        ; R2 := 0xEC274B1A
 25 [-]: LOADK     R3 K5        ; R3 := "GAME_R1_EYE1"
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETGLOBAL R3 K4        ; R3 := 0xEC274B1A
 28 [-]: LOADK     R4 K6        ; R4 := "GAME_L1_EYE1"
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K4        ; R4 := 0xEC274B1A
 31 [-]: LOADK     R5 K7        ; R5 := "GAME_C1_HEAD1"
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xAD018312"]
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 37 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0xAD018312"]
 38 [-]: MOVE      R7 R3        ; R7 := R3
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 41 [-]: GETGLOBAL R5 K9        ; R5 := _T
 42 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["OperatorEyeTrack"]
 43 [-]: EQ        1 R5 K11     ; if R5 == nil then PC := 72
 44 [-]: JMP       72           ; PC := 72
 45 [-]: GETGLOBAL R6 K13       ; R6 := math
 46 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0x8B011038"]
 47 [-]: LOADK     R7 K15       ; R7 := 0
 48 [-]: GETTABLE  R8 R5 K12    ; R8 := R5["LerpAmount"]
 49 [-]: GETGLOBAL R9 K16       ; R9 := 0x4CDEF9FF
 50 [-]: CALL      R9 1 2       ; R9 := R9()
 51 [-]: MUL       R9 R9 K17    ; R9 := R9 * 3
 52 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
 53 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 54 [-]: SETTABLE  R5 K12 R6    ; R5["LerpAmount"] := R6
 55 [-]: GETGLOBAL R6 K18       ; R6 := 0xDB3504BA
 56 [-]: GETTABLE  R7 R5 K19    ; R7 := R5["InitialRot"]
 57 [-]: GETTABLE  R8 R5 K20    ; R8 := R5["FinalRot"]
 58 [-]: GETTABLE  R9 R5 K12    ; R9 := R5["LerpAmount"]
 59 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 60 [-]: SELF      R7 R1 K21    ; R8 := R1; R7 := R1["0x42C8B968"]
 61 [-]: MOVE      R9 R4        ; R9 := R4
 62 [-]: MOVE      R10 R6       ; R10 := R6
 63 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 64 [-]: GETTABLE  R7 R5 K12    ; R7 := R5["LerpAmount"]
 65 [-]: EQ        0 R7 K15     ; if R7 ~= 0 then PC := 76
 66 [-]: JMP       76           ; PC := 76
 67 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1["0xAD018312"]
 68 [-]: MOVE      R9 R4        ; R9 := R4
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 71 [-]: JMP       76           ; PC := 76
 72 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1["0xAD018312"]
 73 [-]: MOVE      R9 R4        ; R9 := R4
 74 [-]: MOVE      R10 R0       ; R10 := R0
 75 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 76 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 5323
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := gRegion
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := gRegion
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x372CB914"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x8F7453D9"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 0         ; if not R4 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETGLOBAL R4 K4        ; R4 := 0xEC274B1A
 25 [-]: LOADK     R5 K5        ; R5 := "GAME_R1_EYE1"
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: GETGLOBAL R5 K4        ; R5 := 0xEC274B1A
 28 [-]: LOADK     R6 K5        ; R6 := "GAME_R1_EYE1"
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETGLOBAL R6 K4        ; R6 := 0xEC274B1A
 31 [-]: LOADK     R7 K6        ; R7 := "GAME_L1_EYE1"
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: GETGLOBAL R7 K4        ; R7 := 0xEC274B1A
 34 [-]: LOADK     R8 K7        ; R8 := "GAME_C1_HEAD1"
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: GETGLOBAL R8 K8        ; R8 := _T
 37 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OperatorEyeTrack"]
 38 [-]: EQ        0 R8 K10     ; if R8 ~= nil then PC := 70
 39 [-]: JMP       70           ; PC := 70
 40 [-]: GETGLOBAL R8 K8        ; R8 := _T
 41 [-]: NEWTABLE  R9 0 5       ; R9 := {}
 42 [-]: GETGLOBAL R10 K12      ; R10 := 0x70D42C02
 43 [-]: LOADK     R11 K13      ; R11 := 0
 44 [-]: LOADK     R12 K14      ; R12 := 0.15000000596046
 45 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 46 [-]: SETTABLE  R9 K11 R10   ; R9["X"] := R10
 47 [-]: GETGLOBAL R10 K12      ; R10 := 0x70D42C02
 48 [-]: LOADK     R11 K13      ; R11 := 0
 49 [-]: LOADK     R12 K14      ; R12 := 0.15000000596046
 50 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 51 [-]: SETTABLE  R9 K15 R10   ; R9["Y"] := R10
 52 [-]: SELF      R10 R3 K17   ; R11 := R3; R10 := R3["0xB0C9CED1"]
 53 [-]: MOVE      R12 R4       ; R12 := R4
 54 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 55 [-]: SETTABLE  R9 K16 R10   ; R9["InitialRot"] := R10
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x1E4F6281
 57 [-]: CALL      R10 1 2      ; R10 := R10()
 58 [-]: SETTABLE  R9 K18 R10   ; R9["FinalRot"] := R10
 59 [-]: SETTABLE  R9 K20 K13   ; R9["LerpAmount"] := 0
 60 [-]: SETTABLE  R8 K9 R9     ; R8["OperatorEyeTrack"] := R9
 61 [-]: GETGLOBAL R8 K8        ; R8 := _T
 62 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["OperatorEyeTrack"]
 63 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["InitialRot"]
 64 [-]: GETGLOBAL R9 K8        ; R9 := _T
 65 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["OperatorEyeTrack"]
 66 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["InitialRot"]
 67 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["pitch"]
 68 [-]: SUB       R9 R9 K22    ; R9 := R9 - 12
 69 [-]: SETTABLE  R8 K21 R9    ; R8["pitch"] := R9
 70 [-]: SELF      R8 R0 K23    ; R9 := R0; R8 := R0["0x86B1765F"]
 71 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 72 [-]: GETGLOBAL R9 K1        ; R9 := gRegion
 73 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9["0xF7C1BE25"]
 74 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 75 [-]: SELF      R10 R0 K25   ; R11 := R0; R10 := R0["0xBAE5F929"]
 76 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 77 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: GETTABLE  R10 R1 K26   ; R10 := R1["x"]
 80 [-]: SELF      R11 R0 K27   ; R12 := R0; R11 := R0["0x6ACD1B87"]
 81 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 82 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 85
 83 [-]: JMP       85           ; PC := 85
 84 [-]: GETTABLE  R11 R1 K28   ; R11 := R1["y"]
 85 [-]: SELF      R12 R0 K29   ; R13 := R0; R12 := R0["0xF595D5E1"]
 86 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 87 [-]: DIV       R12 R10 R12  ; R12 := R10 / R12
 88 [-]: MUL       R12 R12 K30  ; R12 := R12 * 2
 89 [-]: SUB       R12 R12 K31  ; R12 := R12 - 1
 90 [-]: SELF      R13 R0 K32   ; R14 := R0; R13 := R0["0xEE069D65"]
 91 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 92 [-]: DIV       R13 R11 R13  ; R13 := R11 / R13
 93 [-]: MUL       R13 R13 K30  ; R13 := R13 * 2
 94 [-]: SUB       R13 R13 K31  ; R13 := R13 - 1
 95 [-]: GETGLOBAL R14 K33      ; R14 := 0x49D2F3F2
 96 [-]: GETGLOBAL R15 K34      ; R15 := 0x58E5C2DB
 97 [-]: CALL      R15 1 2      ; R15 := R15()
 98 [-]: MUL       R15 R15 K35  ; R15 := R15 * 0.10000000149012
 99 [-]: CALL      R14 2 2      ; R14 := R14(R15)
100 [-]: MUL       R14 R14 K35  ; R14 := R14 * 0.10000000149012
101 [-]: ADD       R12 R12 R14  ; R12 := R12 + R14
102 [-]: GETGLOBAL R14 K33      ; R14 := 0x49D2F3F2
103 [-]: GETGLOBAL R15 K34      ; R15 := 0x58E5C2DB
104 [-]: CALL      R15 1 2      ; R15 := R15()
105 [-]: MUL       R15 R15 K35  ; R15 := R15 * 0.10000000149012
106 [-]: ADD       R15 K36 R15  ; R15 := 7 + R15
107 [-]: CALL      R14 2 2      ; R14 := R14(R15)
108 [-]: MUL       R14 R14 K35  ; R14 := R14 * 0.10000000149012
109 [-]: ADD       R13 R13 R14  ; R13 := R13 + R14
110 [-]: GETGLOBAL R14 K8       ; R14 := _T
111 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["OperatorEyeTrack"]
112 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["X"]
113 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0xDB349344"]
114 [-]: MOVE      R16 R12      ; R16 := R12
115 [-]: CALL      R14 3 1      ; R14(R15,R16)
116 [-]: GETGLOBAL R14 K8       ; R14 := _T
117 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["OperatorEyeTrack"]
118 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Y"]
119 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0xDB349344"]
120 [-]: MOVE      R16 R13      ; R16 := R13
121 [-]: CALL      R14 3 1      ; R14(R15,R16)
122 [-]: GETGLOBAL R14 K8       ; R14 := _T
123 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["OperatorEyeTrack"]
124 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["X"]
125 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x8C7099E9"]
126 [-]: GETGLOBAL R16 K39      ; R16 := 0x4CDEF9FF
127 [-]: CALL      R16 1 0      ; R16,... := R16()
128 [-]: CALL      R14 0 1      ; R14(R15,...)
129 [-]: GETGLOBAL R14 K8       ; R14 := _T
130 [-]: GETTABLE  R14 R14 K9   ; R14 := R14["OperatorEyeTrack"]
131 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Y"]
132 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0x8C7099E9"]
133 [-]: GETGLOBAL R16 K39      ; R16 := 0x4CDEF9FF
134 [-]: CALL      R16 1 0      ; R16,... := R16()
135 [-]: CALL      R14 0 1      ; R14(R15,...)
136 [-]: SELF      R14 R9 K40   ; R15 := R9; R14 := R9["0x6DA72501"]
137 [-]: CALL      R14 2 2      ; R14 := R14(R15)
138 [-]: GETGLOBAL R15 K41      ; R15 := 0x221C9700
139 [-]: GETGLOBAL R16 K8       ; R16 := _T
140 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["OperatorEyeTrack"]
141 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["X"]
142 [-]: SELF      R16 R16 K42  ; R17 := R16; R16 := R16["0xC4E503B0"]
143 [-]: CALL      R16 2 2      ; R16 := R16(R17)
144 [-]: MUL       R16 R16 K43  ; R16 := R16 * 0.30000001192093
145 [-]: GETGLOBAL R17 K8       ; R17 := _T
146 [-]: GETTABLE  R17 R17 K9   ; R17 := R17["OperatorEyeTrack"]
147 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["Y"]
148 [-]: SELF      R17 R17 K42  ; R18 := R17; R17 := R17["0xC4E503B0"]
149 [-]: CALL      R17 2 2      ; R17 := R17(R18)
150 [-]: MUL       R17 R17 K35  ; R17 := R17 * 0.10000000149012
151 [-]: ADD       R17 K44 R17  ; R17 := 0.025000000372529 + R17
152 [-]: LOADK     R18 K13      ; R18 := 0
153 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
154 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
155 [-]: SELF      R15 R3 K45   ; R16 := R3; R15 := R3["0xA2B01604"]
156 [-]: MOVE      R17 R4       ; R17 := R4
157 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
158 [-]: GETGLOBAL R16 K46      ; R16 := 0xEDD2EBFF
159 [-]: MOVE      R17 R15      ; R17 := R15
160 [-]: MOVE      R18 R14      ; R18 := R14
161 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
162 [-]: GETGLOBAL R17 K46      ; R17 := 0xEDD2EBFF
163 [-]: MOVE      R18 R15      ; R18 := R15
164 [-]: MOVE      R19 R14      ; R19 := R14
165 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
166 [-]: GETGLOBAL R18 K48      ; R18 := 0x6374FD98
167 [-]: GETTABLE  R19 R17 K47  ; R19 := R17["heading"]
168 [-]: LOADK     R20 K49      ; R20 := -10
169 [-]: LOADK     R21 K50      ; R21 := 10
170 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
171 [-]: SETTABLE  R17 K47 R18  ; R17["heading"] := R18
172 [-]: SELF      R18 R3 K51   ; R19 := R3; R18 := R3["0xBA14BA66"]
173 [-]: MOVE      R20 R5       ; R20 := R5
174 [-]: MOVE      R21 R17      ; R21 := R17
175 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
176 [-]: SELF      R18 R3 K51   ; R19 := R3; R18 := R3["0xBA14BA66"]
177 [-]: MOVE      R20 R6       ; R20 := R6
178 [-]: MOVE      R21 R17      ; R21 := R17
179 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
180 [-]: SELF      R18 R3 K52   ; R19 := R3; R18 := R3["0xAD018312"]
181 [-]: MOVE      R20 R5       ; R20 := R5
182 [-]: MOVE      R21 R1       ; R21 := R1
183 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
184 [-]: SELF      R18 R3 K52   ; R19 := R3; R18 := R3["0xAD018312"]
185 [-]: MOVE      R20 R6       ; R20 := R6
186 [-]: MOVE      R21 R1       ; R21 := R1
187 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
188 [-]: SELF      R18 R3 K52   ; R19 := R3; R18 := R3["0xAD018312"]
189 [-]: MOVE      R20 R7       ; R20 := R7
190 [-]: MOVE      R21 R1       ; R21 := R1
191 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
192 [-]: GETTABLE  R18 R16 K21  ; R18 := R16["pitch"]
193 [-]: SUB       R18 R18 K53  ; R18 := R18 - 15
194 [-]: SETTABLE  R16 K21 R18  ; R16["pitch"] := R18
195 [-]: GETGLOBAL R18 K8       ; R18 := _T
196 [-]: GETTABLE  R18 R18 K9   ; R18 := R18["OperatorEyeTrack"]
197 [-]: GETGLOBAL R19 K54      ; R19 := math
198 [-]: GETTABLE  R19 R19 K55  ; R19 := R19["0x65F9712A"]
199 [-]: LOADK     R20 K31      ; R20 := 1
200 [-]: GETGLOBAL R21 K8       ; R21 := _T
201 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["OperatorEyeTrack"]
202 [-]: GETTABLE  R21 R21 K20  ; R21 := R21["LerpAmount"]
203 [-]: GETGLOBAL R22 K39      ; R22 := 0x4CDEF9FF
204 [-]: CALL      R22 1 2      ; R22 := R22()
205 [-]: ADD       R21 R21 R22  ; R21 := R21 + R22
206 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
207 [-]: SETTABLE  R18 K20 R19  ; R18["LerpAmount"] := R19
208 [-]: GETGLOBAL R18 K56      ; R18 := 0xDB3504BA
209 [-]: GETGLOBAL R19 K8       ; R19 := _T
210 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["OperatorEyeTrack"]
211 [-]: GETTABLE  R19 R19 K16  ; R19 := R19["InitialRot"]
212 [-]: MOVE      R20 R16      ; R20 := R16
213 [-]: GETGLOBAL R21 K8       ; R21 := _T
214 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["OperatorEyeTrack"]
215 [-]: GETTABLE  R21 R21 K20  ; R21 := R21["LerpAmount"]
216 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
217 [-]: GETGLOBAL R19 K8       ; R19 := _T
218 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["OperatorEyeTrack"]
219 [-]: SETTABLE  R19 K18 R18  ; R19["FinalRot"] := R18
220 [-]: SELF      R19 R3 K57   ; R20 := R3; R19 := R3["0x42C8B968"]
221 [-]: MOVE      R21 R7       ; R21 := R7
222 [-]: MOVE      R22 R18      ; R22 := R18
223 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
224 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
225 [-]: GETGLOBAL R20 K8       ; R20 := _T
226 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["TennoSpeaking"]
227 [-]: CALL      R19 2 2      ; R19 := R19(R20)
228 [-]: TEST      R19 1        ; if R19 then PC := 234
229 [-]: JMP       234          ; PC := 234
230 [-]: SELF      R19 R3 K59   ; R20 := R3; R19 := R3["0x7BC634B1"]
231 [-]: GETGLOBAL R21 K8       ; R21 := _T
232 [-]: GETTABLE  R21 R21 K58  ; R21 := R21["TennoSpeaking"]
233 [-]: CALL      R19 3 1      ; R19(R20,R21)
234 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 5402
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := string
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "Deluxe"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: GETGLOBAL R2 K1        ; R2 := string
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: LOADK     R4 K5        ; R4 := "ExcaliburProtoSuit"
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R2 K1        ; R2 := string
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xDE44F664"]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K6        ; R4 := "NyxNemesisSuit"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: MOVE      R2 R1        ; R2 := R1
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 5409
; #Upvalues:       1
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0["0x1C19D966"]
  2 [-]: MOVE      R12 R2       ; R12 := R2
  3 [-]: LOADK     R13 K1       ; R13 := "text"
  4 [-]: MOVE      R14 R1       ; R14 := R1
  5 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
  6 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0["0x1C19D966"]
  7 [-]: MOVE      R12 R3       ; R12 := R3
  8 [-]: LOADK     R13 K1       ; R13 := "text"
  9 [-]: MOVE      R14 R1       ; R14 := R1
 10 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 11 [-]: GETGLOBAL R10 K2       ; R10 := 0x8C64AFA9
 12 [-]: MOVE      R11 R0       ; R11 := R0
 13 [-]: MOVE      R12 R2       ; R12 := R2
 14 [-]: LOADK     R13 K3       ; R13 := ".setVertexColors"
 15 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 16 [-]: MOVE      R13 R4       ; R13 := R4
 17 [-]: MOVE      R14 R4       ; R14 := R4
 18 [-]: MOVE      R15 R6       ; R15 := R6
 19 [-]: MOVE      R16 R6       ; R16 := R6
 20 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
 21 [-]: GETUPVAL  R10 U0       ; R10 := U0
 22 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["0x69B983D"]
 23 [-]: MOVE      R11 R0       ; R11 := R0
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: CALL      R10 3 3      ; R10,R11 := R10(R11,R12)
 26 [-]: GETGLOBAL R12 K5       ; R12 := 0xF595ADDE
 27 [-]: SELF      R13 R0 K6    ; R14 := R0; R13 := R0["0x6B7B470B"]
 28 [-]: MOVE      R15 R3       ; R15 := R3
 29 [-]: LOADK     R16 K7       ; R16 := "_height"
 30 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
 31 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 32 [-]: DIV       R12 R12 K8   ; R12 := R12 / 2
 33 [-]: ADD       R12 R11 R12  ; R12 := R11 + R12
 34 [-]: GETUPVAL  R13 U0       ; R13 := U0
 35 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["0x4F6BF2C8"]
 36 [-]: MOVE      R14 R0       ; R14 := R0
 37 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 38 [-]: SETTABLE  R15 K10 K11  ; R15["x"] := 0
 39 [-]: ADD       R16 R12 R7   ; R16 := R12 + R7
 40 [-]: SETTABLE  R15 K12 R16  ; R15["y"] := R16
 41 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 42 [-]: GETTABLE  R12 R13 K12  ; R12 := R13["y"]
 43 [-]: SELF      R13 R0 K13   ; R14 := R0; R13 := R0["0xF595D5E1"]
 44 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 45 [-]: SELF      R14 R0 K14   ; R15 := R0; R14 := R0["0xEE069D65"]
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: SELF      R15 R0 K15   ; R16 := R0; R15 := R0["0xF3E132E0"]
 48 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 49 [-]: LT        1 R13 R15    ; if R13 < R15 then PC := 55
 50 [-]: JMP       55           ; PC := 55
 51 [-]: SELF      R15 R0 K16   ; R16 := R0; R15 := R0["0x68998E7D"]
 52 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 53 [-]: LT        0 R14 R15    ; if R14 >= R15 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETGLOBAL R15 K17      ; R15 := Engine
 56 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["0x1398DAFB"]
 57 [-]: CALL      R15 1 2      ; R15 := R15()
 58 [-]: TEST      R15 1        ; if R15 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: SELF      R15 R0 K15   ; R16 := R0; R15 := R0["0xF3E132E0"]
 61 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 62 [-]: MOVE      R13 R15      ; R13 := R15
 63 [-]: SELF      R15 R0 K16   ; R16 := R0; R15 := R0["0x68998E7D"]
 64 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 65 [-]: MOVE      R14 R15      ; R14 := R15
 66 [-]: DIV       R8 R8 R14    ; R8 := R8 / R14
 67 [-]: DIV       R9 R9 R14    ; R9 := R9 / R14
 68 [-]: SELF      R15 R0 K19   ; R16 := R0; R15 := R0["0x7E1F26D7"]
 69 [-]: MOVE      R17 R3       ; R17 := R3
 70 [-]: GETGLOBAL R18 K20      ; R18 := _G
 71 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["UIMaterial_VerticalVisibilityRangeText"]
 72 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 73 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 74 [-]: MOVE      R17 R3       ; R17 := R3
 75 [-]: LOADK     R18 K23      ; R18 := "VisibilityCenter"
 76 [-]: MOVE      R19 R12      ; R19 := R12
 77 [-]: LOADK     R20 K11      ; R20 := 0
 78 [-]: LOADK     R21 K11      ; R21 := 0
 79 [-]: LOADK     R22 K11      ; R22 := 0
 80 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 81 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 82 [-]: MOVE      R17 R3       ; R17 := R3
 83 [-]: LOADK     R18 K24      ; R18 := "VisibilitySize"
 84 [-]: MOVE      R19 R8       ; R19 := R8
 85 [-]: LOADK     R20 K11      ; R20 := 0
 86 [-]: LOADK     R21 K11      ; R21 := 0
 87 [-]: LOADK     R22 K11      ; R22 := 0
 88 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 89 [-]: SELF      R15 R0 K22   ; R16 := R0; R15 := R0["0x302AAB2F"]
 90 [-]: MOVE      R17 R3       ; R17 := R3
 91 [-]: LOADK     R18 K25      ; R18 := "VisibilityFadeSize"
 92 [-]: MOVE      R19 R9       ; R19 := R9
 93 [-]: LOADK     R20 K11      ; R20 := 0
 94 [-]: LOADK     R21 K11      ; R21 := 0
 95 [-]: LOADK     R22 K11      ; R22 := 0
 96 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 97 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 5434
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xB5A59043
  2 [-]: LOADK     R3 K1        ; R3 := 232
  3 [-]: LOADK     R4 K2        ; R4 := 145
  4 [-]: LOADK     R5 K3        ; R5 := 58
  5 [-]: LOADK     R6 K4        ; R6 := 255
  6 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
  7 [-]: EQ        0 R1 K5      ; if R1 ~= 2 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xB5A59043
 10 [-]: LOADK     R4 K6        ; R4 := 62
 11 [-]: LOADK     R5 K7        ; R5 := 196
 12 [-]: LOADK     R6 K8        ; R6 := 221
 13 [-]: LOADK     R7 K4        ; R7 := 255
 14 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: SELF      R3 R0 K9     ; R4 := R0; R3 := R0["0x8DB5D01F"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 19 [-]: GETGLOBAL R5 K10       ; R5 := table
 20 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 21 [-]: MOVE      R6 R4        ; R6 := R4
 22 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 23 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 24 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["SLOT_2"]
 25 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 26 [-]: CALL      R5 0 1       ; R5(R6,...)
 27 [-]: GETGLOBAL R5 K10       ; R5 := table
 28 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 31 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 32 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["SLOT_1"]
 33 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 34 [-]: CALL      R5 0 1       ; R5(R6,...)
 35 [-]: GETGLOBAL R5 K10       ; R5 := table
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 37 [-]: MOVE      R6 R4        ; R6 := R4
 38 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x63D63C30"]
 39 [-]: GETGLOBAL R9 K13       ; R9 := Engine
 40 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["SLOT_6"]
 41 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 42 [-]: CALL      R5 0 1       ; R5(R6,...)
 43 [-]: GETGLOBAL R5 K10       ; R5 := table
 44 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["0xE6450C9D"]
 45 [-]: MOVE      R6 R4        ; R6 := R4
 46 [-]: SELF      R7 R3 K17    ; R8 := R3; R7 := R3["0x6978AC59"]
 47 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 48 [-]: CALL      R5 0 1       ; R5(R6,...)
 49 [-]: GETGLOBAL R5 K18       ; R5 := 0x63B09107
 50 [-]: MOVE      R6 R4        ; R6 := R4
 51 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 52 [-]: JMP       106          ; PC := 106
 53 [-]: GETGLOBAL R10 K19      ; R10 := 0x400E7765
 54 [-]: MOVE      R11 R9       ; R11 := R9
 55 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 56 [-]: TEST      R10 1        ; if R10 then PC := 106
 57 [-]: JMP       106          ; PC := 106
 58 [-]: SELF      R10 R9 K20   ; R11 := R9; R10 := R9["0xAFA67B2D"]
 59 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 60 [-]: SELF      R11 R10 K21  ; R12 := R10; R11 := R10["0xE36D0FC5"]
 61 [-]: GETGLOBAL R13 K22      ; R13 := Lotus_Game
 62 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["PrimaryColors"]
 63 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 64 [-]: SELF      R12 R11 K24  ; R13 := R11; R12 := R11["0x8FD31352"]
 65 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 66 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["EnergyColor"]
 67 [-]: MOVE      R15 R2       ; R15 := R2
 68 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 69 [-]: SELF      R12 R11 K26  ; R13 := R11; R12 := R11["0xC22391BF"]
 70 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 71 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["EnergyColor"]
 72 [-]: MOVE      R15 R1       ; R15 := R1
 73 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 74 [-]: SELF      R12 R10 K27  ; R13 := R10; R12 := R10["0x9A246B08"]
 75 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 76 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["PrimaryColors"]
 77 [-]: MOVE      R15 R11      ; R15 := R11
 78 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 79 [-]: SELF      R12 R9 K28   ; R13 := R9; R12 := R9["0x8B598ED4"]
 80 [-]: GETGLOBAL R14 K29      ; R14 := gPowerSuitType
 81 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 82 [-]: TEST      R12 0        ; if not R12 then PC := 103
 83 [-]: JMP       103          ; PC := 103
 84 [-]: SELF      R12 R10 K21  ; R13 := R10; R12 := R10["0xE36D0FC5"]
 85 [-]: GETGLOBAL R14 K22      ; R14 := Lotus_Game
 86 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["Attachments"]
 87 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 88 [-]: SELF      R13 R12 K24  ; R14 := R12; R13 := R12["0x8FD31352"]
 89 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
 90 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["EnergyColor"]
 91 [-]: MOVE      R16 R2       ; R16 := R2
 92 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 93 [-]: SELF      R13 R12 K26  ; R14 := R12; R13 := R12["0xC22391BF"]
 94 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
 95 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["EnergyColor"]
 96 [-]: MOVE      R16 R1       ; R16 := R1
 97 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 98 [-]: SELF      R13 R10 K27  ; R14 := R10; R13 := R10["0x9A246B08"]
 99 [-]: GETGLOBAL R15 K22      ; R15 := Lotus_Game
100 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["Attachments"]
101 [-]: MOVE      R16 R12      ; R16 := R12
102 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
103 [-]: SELF      R13 R9 K31   ; R14 := R9; R13 := R9["0xC2123CF5"]
104 [-]: MOVE      R15 R10      ; R15 := R10
105 [-]: CALL      R13 3 1      ; R13(R14,R15)
106 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 53; R7 := R8 end
107 [-]: JMP       53           ; PC := 53
108 [-]: RETURN    R0 1         ; return 


; Function #273:
;
; Name:            
; Defined at line: 5465
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := gFlashMgr
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x616DD092"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := _G
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 71
 10 [-]: JMP       71           ; PC := 71
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 71
 15 [-]: JMP       71           ; PC := 71
 16 [-]: GETGLOBAL R3 K5        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 18 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: TEST      R1 0         ; if not R1 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K5        ; R3 := _T
 23 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 24 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x8B598ED4"]
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: TEST      R3 0         ; if not R3 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x458F27A9"]
 30 [-]: LOADK     R5 K9        ; R5 := "QueueClose"
 31 [-]: LOADK     R6 K10       ; R6 := ""
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: JMP       71           ; PC := 71
 34 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 35 [-]: GETGLOBAL R4 K5        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: TEST      R3 1         ; if R3 then PC := 71
 39 [-]: JMP       71           ; PC := 71
 40 [-]: LOADK     R3 K12       ; R3 := 1
 41 [-]: GETGLOBAL R4 K5        ; R4 := _T
 42 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 43 [-]: LEN       R4 R4        ; R4 := # R4
 44 [-]: LE        0 R3 R4      ; if R3 > R4 then PC := 71
 45 [-]: JMP       71           ; PC := 71
 46 [-]: GETGLOBAL R4 K5        ; R4 := _T
 47 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 48 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 49 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: TEST      R1 0         ; if not R1 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: GETGLOBAL R4 K5        ; R4 := _T
 54 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["QueuedTransmissions"]
 55 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 56 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x8B598ED4"]
 57 [-]: MOVE      R6 R0        ; R6 := R0
 58 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 59 [-]: TEST      R4 0         ; if not R4 then PC := 69
 60 [-]: JMP       69           ; PC := 69
 61 [-]: GETGLOBAL R4 K13       ; R4 := table
 62 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["0xCDB1FD5E"]
 63 [-]: GETGLOBAL R5 K5        ; R5 := _T
 64 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["QueuedTransmissions"]
 65 [-]: MOVE      R6 R3        ; R6 := R3
 66 [-]: CALL      R4 3 1       ; R4(R5,R6)
 67 [-]: JMP       71           ; PC := 71
 68 [-]: JMP       41           ; PC := 41
 69 [-]: ADD       R3 R3 K12    ; R3 := R3 + 1
 70 [-]: JMP       41           ; PC := 41
 71 [-]: RETURN    R0 1         ; return 


; Function #274:
;
; Name:            
; Defined at line: 5488
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x10ECB0C4"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R1 R1        ; R1 := nil
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x47916128"]
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x88DECBBC"]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0["0xC5349ED"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 27 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x1398DAFB"]
 28 [-]: CALL      R2 1 2       ; R2 := R2()
 29 [-]: TEST      R2 0         ; if not R2 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: TEST      R1 1         ; if R1 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: LOADK     R2 K7        ; R2 := "MARKET"
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADK     R2 K8        ; R2 := "UNAVAILABLE"
 37 [-]: RETURN    R2 2         ; return R2
 38 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 39 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x536FC07E"]
 40 [-]: CALL      R2 1 2       ; R2 := R2()
 41 [-]: TEST      R2 0         ; if not R2 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LOADK     R2 K10       ; R2 := "EXTERNAL"
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: SELF      R2 R0 K11    ; R3 := R0; R2 := R0["0xE5B2203D"]
 46 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 47 [-]: LT        0 K12 R2     ; if 0 >= R2 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 50 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0x1398DAFB"]
 51 [-]: CALL      R2 1 2       ; R2 := R2()
 52 [-]: TEST      R2 1         ; if R2 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 55 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0xE35E176B"]
 56 [-]: CALL      R2 1 2       ; R2 := R2()
 57 [-]: TEST      R2 0         ; if not R2 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: LOADK     R2 K7        ; R2 := "MARKET"
 60 [-]: RETURN    R2 2         ; return R2
 61 [-]: LOADK     R2 K8        ; R2 := "UNAVAILABLE"
 62 [-]: RETURN    R2 2         ; return R2
 63 [-]: RETURN    R0 1         ; return 


; Function #275:
;
; Name:            
; Defined at line: 5525
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x6139ADFF"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := Engine
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Item_DC_NONE"]
 12 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R1 R1        ; R1 := nil
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: GETGLOBAL R1 K2        ; R1 := Engine
 17 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x79E04C26"]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADK     R1 K5        ; R1 := "EXTERNAL"
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: LOADK     R1 K6        ; R1 := "UNAVAILABLE"
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #276:
;
; Name:            
; Defined at line: 5543
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R3 2         ; return R3
 12 [-]: MOVE      R4 R3        ; R4 := R3
 13 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1["0xA87158DF"]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: LEN       R6 R5        ; R6 := # R5
 16 [-]: LT        0 K2 R6      ; if 0 >= R6 then PC := 64
 17 [-]: JMP       64           ; PC := 64
 18 [-]: LOADK     R6 K3        ; R6 := ""
 19 [-]: MOVE      R7 R0        ; R7 := R0
 20 [-]: LOADK     R8 K4        ; R8 := 1
 21 [-]: LEN       R9 R5        ; R9 := # R5
 22 [-]: LOADK     R10 K4       ; R10 := 1
 23 [-]: FORPREP   R8 40        ; R8 -= R10; PC := 40
 24 [-]: SELF      R12 R2 K5    ; R13 := R2; R12 := R2["0x4F2FB14C"]
 25 [-]: SUB       R14 R11 K4   ; R14 := R11 - 1
 26 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 27 [-]: MOVE      R12 R12      ; R12 := R12
 28 [-]: TEST      R7 1         ; if R7 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R7 R12       ; R7 := R12
 31 [-]: MOVE      R13 R6       ; R13 := R6
 32 [-]: GETUPVAL  R14 U0       ; R14 := U0
 33 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["0xF81722A2"]
 34 [-]: MOVE      R15 R12      ; R15 := R12
 35 [-]: LOADK     R16 K7       ; R16 := "<TREASURE_GEM_OUTLINE>"
 36 [-]: LOADK     R17 K8       ; R17 := "<TREASURE_GEM>"
 37 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 38 [-]: LOADK     R15 K3       ; R15 := ""
 39 [-]: CONCAT    R6 R13 R15   ; R6 := R13 .. R14 .. R15
 40 [-]: FORLOOP   R8 24        ; R8 += R10; if R8 <= R9 then begin PC := 24; R11 := R8 end
 41 [-]: TEST      R7 0         ; if not R7 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: LOADK     R13 K3       ; R13 := ""
 44 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
 45 [-]: MOVE      R15 R0       ; R15 := R0
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: TEST      R14 1        ; if R14 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: SELF      R14 R0 K9    ; R15 := R0; R14 := R0["0x5DB0BD4"]
 50 [-]: MOVE      R16 R6       ; R16 := R6
 51 [-]: MOVE      R17 R1       ; R17 := R1
 52 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 53 [-]: MOVE      R13 R14      ; R13 := R14
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R14 K10      ; R14 := 0xE6DC43B0
 56 [-]: MOVE      R15 R6       ; R15 := R6
 57 [-]: MOVE      R16 R1       ; R16 := R1
 58 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 59 [-]: MOVE      R13 R14      ; R13 := R14
 60 [-]: MOVE      R14 R4       ; R14 := R4
 61 [-]: LOADK     R15 K11      ; R15 := "   "
 62 [-]: MOVE      R16 R13      ; R16 := R13
 63 [-]: CONCAT    R4 R14 R16   ; R4 := R14 .. R15 .. R16
 64 [-]: RETURN    R4 2         ; return R4
 65 [-]: RETURN    R0 1         ; return 


; Function #277:
;
; Name:            
; Defined at line: 5573
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: RETURN    R0 1         ; return 


; Function #278:
;
; Name:            
; Defined at line: 5577
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 60
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #279:
;
; Name:            
; Defined at line: 5581
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #280:
;
; Name:            
; Defined at line: 5585
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 3600
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #281:
;
; Name:            
; Defined at line: 5589
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #282:
;
; Name:            
; Defined at line: 5593
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 86400
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #283:
;
; Name:            
; Defined at line: 5597
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #284:
;
; Name:            
; Defined at line: 5601
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := math
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xF7005A7B"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := gGameRules
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x7B107ACD"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 604800
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #285:
;
; Name:            
; Defined at line: 5605
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["missionType"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["MT_RAID"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  8 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  9 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["LotusBaseGameRules_NM_CUSTOM"]
 10 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/NightmareModeName"
 11 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
 12 [-]: RETURN    R3 2         ; return R3
 13 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 14 [-]: GETGLOBAL R4 K5        ; R4 := table
 15 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 18 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 19 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["LotusBaseGameRules_NM_VAMPIRE"]
 20 [-]: LOADK     R8 K8        ; R8 := "/Lotus/Language/Game/NightmareModeVampire"
 21 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: GETGLOBAL R4 K5        ; R4 := table
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 27 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 28 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["LotusBaseGameRules_NM_ENERGY_DRAIN"]
 29 [-]: LOADK     R8 K10       ; R8 := "/Lotus/Language/Game/NightmareModeEnergyDrain"
 30 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 31 [-]: CALL      R4 3 1       ; R4(R5,R6)
 32 [-]: GETGLOBAL R4 K5        ; R4 := table
 33 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 36 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 37 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["LotusBaseGameRules_NM_EXPLODING_CORPSES"]
 38 [-]: LOADK     R8 K12       ; R8 := "/Lotus/Language/Game/NightmareModeExplodingCorpses"
 39 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 42 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["MT_DEFENSE"]
 43 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 44 [-]: JMP       82           ; PC := 82
 45 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["MT_MOBILE_DEFENSE"]
 47 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 48 [-]: JMP       82           ; PC := 82
 49 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 50 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MT_SURVIVAL"]
 51 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 52 [-]: JMP       82           ; PC := 82
 53 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 54 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["MT_ARTIFACT"]
 55 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 56 [-]: JMP       82           ; PC := 82
 57 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 58 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["MT_SABOTAGE"]
 59 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 60 [-]: JMP       82           ; PC := 82
 61 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 62 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["MT_RESCUE"]
 63 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 66 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ASSASSINATION"]
 67 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 68 [-]: JMP       82           ; PC := 82
 69 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 70 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["MT_ARTIFACT"]
 71 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETGLOBAL R4 K5        ; R4 := table
 74 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 75 [-]: MOVE      R5 R3        ; R5 := R3
 76 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 77 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 78 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["LotusBaseGameRules_NM_TIMED"]
 79 [-]: LOADK     R8 K21       ; R8 := "/Lotus/Language/Game/NightmareModeTimed"
 80 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 81 [-]: CALL      R4 3 1       ; R4(R5,R6)
 82 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 83 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["MT_ASSASSINATION"]
 84 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 86
 85 [-]: JMP       86           ; PC := 86
 86 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
 87 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["MT_RETRIEVAL"]
 88 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 99
 89 [-]: JMP       99           ; PC := 99
 90 [-]: GETGLOBAL R4 K5        ; R4 := table
 91 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xE6450C9D"]
 92 [-]: MOVE      R5 R3        ; R5 := R3
 93 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 94 [-]: GETGLOBAL R7 K1        ; R7 := Lotus_Game
 95 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["LotusBaseGameRules_NM_NO_SHIELD"]
 96 [-]: LOADK     R8 K24       ; R8 := "/Lotus/Language/Game/NightmareModeNoShield"
 97 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 98 [-]: CALL      R4 3 1       ; R4(R5,R6)
 99 [-]: GETGLOBAL R4 K25       ; R4 := 0x77EE484C
100 [-]: CALL      R4 1 2       ; R4 := R4()
101 [-]: GETGLOBAL R5 K26       ; R5 := 0xCD597D99
102 [-]: GETGLOBAL R6 K27       ; R6 := 0x12513525
103 [-]: GETGLOBAL R7 K28       ; R7 := 0x9FAED6BC
104 [-]: GETTABLE  R8 R0 K29    ; R8 := R0["location"]
105 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
106 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
107 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
108 [-]: GETGLOBAL R6 K30       ; R6 := 0xB3FEE6A
109 [-]: MOVE      R7 R5        ; R7 := R5
110 [-]: GETUPVAL  R8 U0        ; R8 := U0
111 [-]: CALL      R8 1 2       ; R8 := R8()
112 [-]: MOD       R8 R8 K31    ; R8 := R8 % 365
113 [-]: CALL      R6 3 1       ; R6(R7,R8)
114 [-]: GETGLOBAL R6 K32       ; R6 := 0x290116D3
115 [-]: LOADK     R7 K33       ; R7 := 1
116 [-]: LEN       R8 R3        ; R8 := # R3
117 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
118 [-]: GETGLOBAL R7 K5        ; R7 := table
119 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
122 [-]: CALL      R7 3 1       ; R7(R8,R9)
123 [-]: GETGLOBAL R7 K32       ; R7 := 0x290116D3
124 [-]: LOADK     R8 K34       ; R8 := 0
125 [-]: LOADK     R9 K35       ; R9 := 2
126 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
127 [-]: EQ        0 R7 K36     ; if R7 ~= -1 then PC := 138
128 [-]: JMP       138          ; PC := 138
129 [-]: GETGLOBAL R7 K5        ; R7 := table
130 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
131 [-]: MOVE      R8 R1        ; R8 := R1
132 [-]: NEWTABLE  R9 2 0       ; R9 := {}
133 [-]: GETGLOBAL R10 K1       ; R10 := Lotus_Game
134 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["LotusBaseGameRules_NM_NO_HUD"]
135 [-]: LOADK     R11 K38      ; R11 := "/Lotus/Language/Game/NightmareModeNoHud"
136 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
137 [-]: CALL      R7 3 1       ; R7(R8,R9)
138 [-]: GETGLOBAL R7 K32       ; R7 := 0x290116D3
139 [-]: LOADK     R8 K34       ; R8 := 0
140 [-]: LOADK     R9 K39       ; R9 := 3
141 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
142 [-]: EQ        0 R7 K33     ; if R7 ~= 1 then PC := 153
143 [-]: JMP       153          ; PC := 153
144 [-]: GETGLOBAL R7 K5        ; R7 := table
145 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["0xE6450C9D"]
146 [-]: MOVE      R8 R1        ; R8 := R1
147 [-]: NEWTABLE  R9 2 0       ; R9 := {}
148 [-]: GETGLOBAL R10 K1       ; R10 := Lotus_Game
149 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["LotusBaseGameRules_NM_LOW_GRAVITY"]
150 [-]: LOADK     R11 K41      ; R11 := "/Lotus/Language/Game/NightmareModeLowGrav"
151 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
152 [-]: CALL      R7 3 1       ; R7(R8,R9)
153 [-]: GETGLOBAL R7 K42       ; R7 := 0x9B21739C
154 [-]: MOVE      R8 R4        ; R8 := R4
155 [-]: CALL      R7 2 1       ; R7(R8)
156 [-]: RETURN    R1 2         ; return R1
157 [-]: RETURN    R0 1         ; return 


; Function #286:
;
; Name:            
; Defined at line: 5665
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x6F2E05FD"]
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 23 [-]: MOVE      R5 R3        ; R5 := R3
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: TEST      R4 0         ; if not R4 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0x85D4CA1C"]
 29 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 30 [-]: GETGLOBAL R5 K7        ; R5 := gRandomizedArtifactUpgradeType
 31 [-]: LOADK     R6 K8        ; R6 := 1
 32 [-]: LEN       R7 R4        ; R7 := # R4
 33 [-]: LOADK     R8 K8        ; R8 := 1
 34 [-]: FORPREP   R6 52        ; R6 -= R8; PC := 52
 35 [-]: GETTABLE  R10 R4 R9    ; R10 := R4[R9]
 36 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["mItemType"]
 37 [-]: GETGLOBAL R11 K3       ; R11 := 0x400E7765
 38 [-]: MOVE      R12 R10      ; R12 := R10
 39 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 40 [-]: TEST      R11 1        ; if R11 then PC := 52
 41 [-]: JMP       52           ; PC := 52
 42 [-]: SELF      R11 R10 K10  ; R12 := R10; R11 := R10["0x8B598ED4"]
 43 [-]: MOVE      R13 R5       ; R13 := R5
 44 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 45 [-]: TEST      R11 0        ; if not R11 then PC := 52
 46 [-]: JMP       52           ; PC := 52
 47 [-]: GETGLOBAL R11 K11      ; R11 := table
 48 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["0xE6450C9D"]
 49 [-]: MOVE      R12 R0       ; R12 := R0
 50 [-]: GETTABLE  R13 R4 R9    ; R13 := R4[R9]
 51 [-]: CALL      R11 3 1      ; R11(R12,R13)
 52 [-]: FORLOOP   R6 35        ; R6 += R8; if R6 <= R7 then begin PC := 35; R9 := R6 end
 53 [-]: RETURN    R0 2         ; return R0
 54 [-]: RETURN    R0 1         ; return 


; Function #287:
;
; Name:            
; Defined at line: 5694
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #288:
;
; Name:            
; Defined at line: 5698
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x654F1092"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x6F2E05FD"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: CALL      R3 1 2       ; R3 := R3()
 32 [-]: LEN       R3 R3        ; R3 := # R3
 33 [-]: GETUPVAL  R4 U1        ; R4 := U1
 34 [-]: MOVE      R5 R2        ; R5 := R2
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: LT        1 R4 R3      ; if R4 < R3 then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: MOVE      R3 R1        ; R3 := R1
 40 [-]: RETURN    R3 2         ; return R3
 41 [-]: RETURN    R0 1         ; return 


; Function #289:
;
; Name:            
; Defined at line: 5717
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #290:
;
; Name:            
; Defined at line: 5721
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K1        ; R1 := 0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0xBF12F696"]
  9 [-]: GETGLOBAL R3 K3        ; R3 := Lotus_Game
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["RandomModBin"]
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: RETURN    R0 1         ; return 


; Function #291:
;
; Name:            
; Defined at line: 5729
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #292:
;
; Name:            
; Defined at line: 5733
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x6200B095"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LOT_NORMAL"]
  4 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mInfestationDate"]
  8 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x315E860F"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: LOADK     R2 K6        ; R2 := -86400
 13 [-]: LOADK     R3 K7        ; R3 := 7
 14 [-]: GETGLOBAL R4 K8        ; R4 := Engine
 15 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xD09D7910"]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: MUL       R5 R2 R3     ; R5 := R2 * R3
 19 [-]: LE        1 R4 R5      ; if R4 <= R5 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: MOVE      R5 R1        ; R5 := R1
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: MOVE      R6 R0        ; R6 := R0
 25 [-]: RETURN    R6 2         ; return R6
 26 [-]: RETURN    R0 1         ; return 


; Function #293:
;
; Name:            
; Defined at line: 5749
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE35E176B"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETGLOBAL R1 K3        ; R1 := gPlayerProfileMgr
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x21EF7B1A"]
 15 [-]: LOADK     R3 K5        ; R3 := 0
 16 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 0         ; if not R2 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0x654F1092"]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: MOVE      R0 R2        ; R0 := R2
 27 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 0         ; if not R2 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: MOVE      R2 R0        ; R2 := R0
 33 [-]: RETURN    R2 2         ; return R2
 34 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0x4A4B6CEE"]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 0         ; if not R2 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: MOVE      R2 R0        ; R2 := R0
 39 [-]: RETURN    R2 2         ; return R2
 40 [-]: GETGLOBAL R2 K8        ; R2 := gRegion
 41 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x3E2F6BF"]
 42 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 43 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 44 [-]: MOVE      R4 R2        ; R4 := R2
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: TEST      R3 0         ; if not R3 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: MOVE      R3 R0        ; R3 := R0
 49 [-]: RETURN    R3 2         ; return R3
 50 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2["0x8DB5D01F"]
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6978AC59"]
 53 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 54 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 55 [-]: MOVE      R5 R3        ; R5 := R3
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: TEST      R4 1         ; if R4 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: SELF      R4 R3 K12    ; R5 := R3; R4 := R3["0xBC9B028A"]
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: TEST      R4 0         ; if not R4 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: MOVE      R4 R0        ; R4 := R0
 64 [-]: RETURN    R4 2         ; return R4
 65 [-]: MOVE      R4 R1        ; R4 := R1
 66 [-]: RETURN    R4 2         ; return R4
 67 [-]: RETURN    R0 1         ; return 


; Function #294:
;
; Name:            
; Defined at line: 5784
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 55
  5 [-]: JMP       55           ; PC := 55
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 55
 10 [-]: JMP       55           ; PC := 55
 11 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1["0x58A4A786"]
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x4CDEF9FF
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: SELF      R7 R0 K3     ; R8 := R0; R7 := R0["0x26739FE5"]
 17 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x3823ED12"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 55
 25 [-]: JMP       55           ; PC := 55
 26 [-]: GETGLOBAL R3 K5        ; R3 := 0xB09F286F
 27 [-]: SELF      R4 R0 K6     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x84096397"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0xA7003AD9"]
 32 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 33 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 34 [-]: GETGLOBAL R4 K9        ; R4 := math
 35 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["0xF7005A7B"]
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: GETGLOBAL R5 K9        ; R5 := math
 39 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0xF7005A7B"]
 40 [-]: MUL       R6 R3 K11    ; R6 := R3 * 10
 41 [-]: MUL       R7 R4 K11    ; R7 := R4 * 10
 42 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: SELF      R6 R2 K12    ; R7 := R2; R6 := R2["0x458F27A9"]
 45 [-]: LOADK     R8 K13       ; R8 := "UpdateRangeFinder"
 46 [-]: GETGLOBAL R9 K14       ; R9 := 0x9FAED6BC
 47 [-]: MOVE      R10 R4       ; R10 := R4
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: LOADK     R10 K15      ; R10 := ","
 50 [-]: GETGLOBAL R11 K14      ; R11 := 0x9FAED6BC
 51 [-]: MOVE      R12 R5       ; R12 := R5
 52 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 53 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 54 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 55 [-]: RETURN    R0 1         ; return 


; Function #295:
;
; Name:            
; Defined at line: 5797
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x9F1DC568"]
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x2C00D429
  8 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Types/Player/PlayerFlashLight"
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2["0xAC5ABE40"]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #296:
;
; Name:            
; Defined at line: 5806
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R2 K1        ; R2 := ""
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: LOADK     R2 K2        ; R2 := "<p>"
  9 [-]: EQ        0 R1 K3      ; if R1 ~= 2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x5DB0BD4"]
 12 [-]: LOADK     R5 K5        ; R5 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpTrading"
 13 [-]: MOVE      R6 R0        ; R6 := R0
 14 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K6        ; R5 := "<font color=\"#48B8FF\">"
 17 [-]: MOVE      R6 R3        ; R6 := R3
 18 [-]: LOADK     R7 K7        ; R7 := "<br></font>"
 19 [-]: CONCAT    R2 R4 R7     ; R2 := R4 .. R5 .. R6 .. R7
 20 [-]: JMP       46           ; PC := 46
 21 [-]: EQ        0 R1 K8      ; if R1 ~= 3 then PC := 33
 22 [-]: JMP       33           ; PC := 33
 23 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0["0x5DB0BD4"]
 24 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpSyndicates"
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 27 [-]: MOVE      R5 R2        ; R5 := R2
 28 [-]: LOADK     R6 K6        ; R6 := "<font color=\"#48B8FF\">"
 29 [-]: MOVE      R7 R4        ; R7 := R4
 30 [-]: LOADK     R8 K7        ; R8 := "<br></font>"
 31 [-]: CONCAT    R2 R5 R8     ; R2 := R5 .. R6 .. R7 .. R8
 32 [-]: JMP       46           ; PC := 46
 33 [-]: EQ        1 R1 K10     ; if R1 == 5 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: EQ        0 R1 K11     ; if R1 ~= 10 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0["0x5DB0BD4"]
 38 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpExtraDroneSlot"
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 41 [-]: MOVE      R6 R2        ; R6 := R2
 42 [-]: LOADK     R7 K6        ; R7 := "<font color=\"#48B8FF\">"
 43 [-]: MOVE      R8 R5        ; R8 := R5
 44 [-]: LOADK     R9 K7        ; R9 := "<br></font>"
 45 [-]: CONCAT    R2 R6 R9     ; R2 := R6 .. R7 .. R8 .. R9
 46 [-]: MOD       R6 R1 K3     ; R6 := R1 % 2
 47 [-]: EQ        0 R6 K13     ; if R6 ~= 0 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: SELF      R6 R0 K4     ; R7 := R0; R6 := R0["0x5DB0BD4"]
 50 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/EndOfMatch_LoadOutSlot"
 51 [-]: MOVE      R9 R0        ; R9 := R0
 52 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 53 [-]: MOVE      R7 R2        ; R7 := R2
 54 [-]: LOADK     R8 K15       ; R8 := "<font color=\"#FFFFFF\">"
 55 [-]: GETGLOBAL R9 K16       ; R9 := string
 56 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["0x639C642A"]
 57 [-]: MOVE      R10 R6       ; R10 := R6
 58 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 59 [-]: LOADK     R10 K7       ; R10 := "<br></font>"
 60 [-]: CONCAT    R2 R7 R10    ; R2 := R7 .. R8 .. R9 .. R10
 61 [-]: MOVE      R7 R2        ; R7 := R2
 62 [-]: LOADK     R8 K15       ; R8 := "<font color=\"#FFFFFF\">"
 63 [-]: CONCAT    R2 R7 R8     ; R2 := R7 .. R8
 64 [-]: MOVE      R7 R2        ; R7 := R2
 65 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 66 [-]: LOADK     R10 K18      ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpStanding"
 67 [-]: MOVE      R11 R1       ; R11 := R1
 68 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 69 [-]: SETTABLE  R12 K19 K20  ; R12["NUM"] := 1000
 70 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 71 [-]: LOADK     R9 K21       ; R9 := "<br>"
 72 [-]: CONCAT    R2 R7 R9     ; R2 := R7 .. R8 .. R9
 73 [-]: MOVE      R7 R2        ; R7 := R2
 74 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 75 [-]: LOADK     R10 K22      ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpReactant"
 76 [-]: MOVE      R11 R1       ; R11 := R1
 77 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 78 [-]: SETTABLE  R12 K19 K23  ; R12["NUM"] := 50
 79 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 80 [-]: LOADK     R9 K21       ; R9 := "<br>"
 81 [-]: CONCAT    R2 R7 R9     ; R2 := R7 .. R8 .. R9
 82 [-]: MOVE      R7 R2        ; R7 := R2
 83 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0["0x5DB0BD4"]
 84 [-]: LOADK     R10 K24      ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpCapacity"
 85 [-]: MOVE      R11 R0       ; R11 := R0
 86 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 87 [-]: CONCAT    R2 R7 R8     ; R2 := R7 .. R8
 88 [-]: MOVE      R7 R2        ; R7 := R2
 89 [-]: LOADK     R8 K25       ; R8 := "</font></p>"
 90 [-]: CONCAT    R2 R7 R8     ; R2 := R7 .. R8
 91 [-]: RETURN    R2 2         ; return R2
 92 [-]: RETURN    R0 1         ; return 


; Function #297:
;
; Name:            
; Defined at line: 5839
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: CLOSURE   R5 0         ; R5 := closure(Function #297.1)
  2 [-]: LOADK     R6 K0        ; R6 := 3
  3 [-]: NEWTABLE  R7 3 0       ; R7 := {}
  4 [-]: NEWTABLE  R8 0 2       ; R8 := {}
  5 [-]: SETTABLE  R8 K1 K2     ; R8["IsSentinel"] := "0x0"
  6 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
  7 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["SUIT_SLOT"]
  8 [-]: SETTABLE  R8 K3 R9     ; R8["Id"] := R9
  9 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 10 [-]: SETTABLE  R9 K1 K2     ; R9["IsSentinel"] := "0x0"
 11 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 12 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["LONG_GUN_SLOT"]
 13 [-]: SETTABLE  R9 K3 R10    ; R9["Id"] := R10
 14 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 15 [-]: SETTABLE  R10 K1 K2    ; R10["IsSentinel"] := "0x0"
 16 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 17 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["MELEE_SLOT"]
 18 [-]: SETTABLE  R10 K3 R11   ; R10["Id"] := R11
 19 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 20 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["LOT_NORMAL"]
 22 [-]: EQ        1 R2 R8      ; if R2 == R8 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 25 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["LOT_NORMAL_PVP"]
 26 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R8 K10       ; R8 := table
 29 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["0xE6450C9D"]
 30 [-]: MOVE      R9 R7        ; R9 := R7
 31 [-]: LOADK     R10 K0       ; R10 := 3
 32 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 33 [-]: SETTABLE  R11 K1 K2    ; R11["IsSentinel"] := "0x0"
 34 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 35 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["PISTOL_SLOT"]
 36 [-]: SETTABLE  R11 K3 R12   ; R11["Id"] := R12
 37 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 38 [-]: LOADK     R6 K13       ; R6 := 4
 39 [-]: EQ        1 R1 K14     ; if R1 == nil then PC := 59
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETGLOBAL R8 K10       ; R8 := table
 42 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["0xE6450C9D"]
 43 [-]: MOVE      R9 R7        ; R9 := R7
 44 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 45 [-]: SETTABLE  R10 K1 K15   ; R10["IsSentinel"] := "0x1"
 46 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 47 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["SUIT_SLOT"]
 48 [-]: SETTABLE  R10 K3 R11   ; R10["Id"] := R11
 49 [-]: CALL      R8 3 1       ; R8(R9,R10)
 50 [-]: GETGLOBAL R8 K10       ; R8 := table
 51 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["0xE6450C9D"]
 52 [-]: MOVE      R9 R7        ; R9 := R7
 53 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 54 [-]: SETTABLE  R10 K1 K15   ; R10["IsSentinel"] := "0x1"
 55 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 56 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["LONG_GUN_SLOT"]
 57 [-]: SETTABLE  R10 K3 R11   ; R10["Id"] := R11
 58 [-]: CALL      R8 3 1       ; R8(R9,R10)
 59 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 60 [-]: LOADNIL   R9 R9        ; R9 := nil
 61 [-]: GETGLOBAL R10 K16      ; R10 := 0x400E7765
 62 [-]: MOVE      R11 R4       ; R11 := R4
 63 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 64 [-]: TEST      R10 1        ; if R10 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: LOADK     R9 K17       ; R9 := "<p>"
 67 [-]: GETUPVAL  R10 U0       ; R10 := U0
 68 [-]: CALL      R10 1 3      ; R10,R11 := R10()
 69 [-]: LOADK     R12 K18      ; R12 := 1
 70 [-]: LEN       R13 R7       ; R13 := # R7
 71 [-]: LOADK     R14 K18      ; R14 := 1
 72 [-]: FORPREP   R12 212      ; R12 -= R14; PC := 212
 73 [-]: GETUPVAL  R16 U1       ; R16 := U1
 74 [-]: GETTABLE  R16 R16 K19  ; R16 := R16["0xF81722A2"]
 75 [-]: EQ        1 R15 R6     ; if R15 == R6 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R17 R0       ; R17 := R0
 78 [-]: MOVE      R17 R1       ; R17 := R1
 79 [-]: LOADK     R18 K20      ; R18 := ""
 80 [-]: LOADK     R19 K21      ; R19 := "<br>"
 81 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 82 [-]: GETUPVAL  R17 U1       ; R17 := U1
 83 [-]: GETTABLE  R17 R17 K19  ; R17 := R17["0xF81722A2"]
 84 [-]: GETTABLE  R18 R7 R15   ; R18 := R7[R15]
 85 [-]: GETTABLE  R18 R18 K1   ; R18 := R18["IsSentinel"]
 86 [-]: MOVE      R19 R1       ; R19 := R1
 87 [-]: MOVE      R20 R0       ; R20 := R0
 88 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 89 [-]: GETGLOBAL R18 K16      ; R18 := 0x400E7765
 90 [-]: MOVE      R19 R17      ; R19 := R17
 91 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 92 [-]: TEST      R18 1        ; if R18 then PC := 212
 93 [-]: JMP       212          ; PC := 212
 94 [-]: SELF      R18 R17 K22  ; R19 := R17; R18 := R17["0xA81C4B63"]
 95 [-]: GETTABLE  R20 R7 R15   ; R20 := R7[R15]
 96 [-]: GETTABLE  R20 R20 K3   ; R20 := R20["Id"]
 97 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 98 [-]: GETTABLE  R19 R18 K23  ; R19 := R18["mItemId"]
 99 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mId"]
100 [-]: GETGLOBAL R20 K4       ; R20 := Lotus_Game
101 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["InvalidItemID"]
102 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 195
103 [-]: JMP       195          ; PC := 195
104 [-]: MOVE      R19 R5       ; R19 := R5
105 [-]: GETUPVAL  R20 U1       ; R20 := U1
106 [-]: GETTABLE  R20 R20 K19  ; R20 := R20["0xF81722A2"]
107 [-]: GETTABLE  R21 R7 R15   ; R21 := R7[R15]
108 [-]: GETTABLE  R21 R21 K1   ; R21 := R21["IsSentinel"]
109 [-]: GETGLOBAL R22 K4       ; R22 := Lotus_Game
110 [-]: GETTABLE  R22 R22 K26  ; R22 := R22["LOT_SENTINEL"]
111 [-]: MOVE      R23 R2       ; R23 := R2
112 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
113 [-]: GETTABLE  R21 R7 R15   ; R21 := R7[R15]
114 [-]: GETTABLE  R21 R21 K3   ; R21 := R21["Id"]
115 [-]: MOVE      R22 R3       ; R22 := R3
116 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
117 [-]: LOADK     R20 K18      ; R20 := 1
118 [-]: LEN       R21 R19      ; R21 := # R19
119 [-]: LOADK     R22 K18      ; R22 := 1
120 [-]: FORPREP   R20 193      ; R20 -= R22; PC := 193
121 [-]: GETTABLE  R24 R19 R23  ; R24 := R19[R23]
122 [-]: GETTABLE  R24 R24 K23  ; R24 := R24["mItemId"]
123 [-]: GETTABLE  R24 R24 K24  ; R24 := R24["mId"]
124 [-]: GETTABLE  R25 R18 K23  ; R25 := R18["mItemId"]
125 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mId"]
126 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 193
127 [-]: JMP       193          ; PC := 193
128 [-]: GETGLOBAL R24 K10      ; R24 := table
129 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["0xE6450C9D"]
130 [-]: MOVE      R25 R8       ; R25 := R8
131 [-]: GETTABLE  R26 R19 R23  ; R26 := R19[R23]
132 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["mItemType"]
133 [-]: CALL      R24 3 1      ; R24(R25,R26)
134 [-]: GETGLOBAL R24 K16      ; R24 := 0x400E7765
135 [-]: MOVE      R25 R4       ; R25 := R4
136 [-]: CALL      R24 2 2      ; R24 := R24(R25)
137 [-]: TEST      R24 1        ; if R24 then PC := 212
138 [-]: JMP       212          ; PC := 212
139 [-]: GETTABLE  R24 R7 R15   ; R24 := R7[R15]
140 [-]: GETTABLE  R24 R24 K1   ; R24 := R24["IsSentinel"]
141 [-]: TEST      R24 1        ; if R24 then PC := 212
142 [-]: JMP       212          ; PC := 212
143 [-]: SELF      R24 R4 K28   ; R25 := R4; R24 := R4["0x62FBC1B8"]
144 [-]: GETTABLE  R26 R19 R23  ; R26 := R19[R23]
145 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["mItemType"]
146 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
147 [-]: GETGLOBAL R25 K16      ; R25 := 0x400E7765
148 [-]: MOVE      R26 R24      ; R26 := R24
149 [-]: CALL      R25 2 2      ; R25 := R25(R26)
150 [-]: TEST      R25 1        ; if R25 then PC := 185
151 [-]: JMP       185          ; PC := 185
152 [-]: LOADK     R25 K29      ; R25 := 0
153 [-]: GETTABLE  R26 R19 R23  ; R26 := R19[R23]
154 [-]: GETTABLE  R26 R26 K30  ; R26 := R26["mXP"]
155 [-]: EQ        1 R26 K14    ; if R26 == nil then PC := 165
156 [-]: JMP       165          ; PC := 165
157 [-]: GETGLOBAL R26 K31      ; R26 := gGameConfig
158 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26["0x9E8E66BA"]
159 [-]: GETTABLE  R28 R19 R23  ; R28 := R19[R23]
160 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["mXP"]
161 [-]: GETTABLE  R29 R19 R23  ; R29 := R19[R23]
162 [-]: GETTABLE  R29 R29 K27  ; R29 := R29["mItemType"]
163 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
164 [-]: MOVE      R25 R26      ; R25 := R26
165 [-]: MOVE      R26 R9       ; R26 := R9
166 [-]: LOADK     R27 K33      ; R27 := "<font color=\""
167 [-]: MOVE      R28 R11      ; R28 := R11
168 [-]: LOADK     R29 K34      ; R29 := "\">"
169 [-]: GETGLOBAL R30 K35      ; R30 := 0xE6DC43B0
170 [-]: SELF      R31 R24 K36  ; R32 := R24; R31 := R24["0x616C74B6"]
171 [-]: CALL      R31 2 2      ; R31 := R31(R32)
172 [-]: SELF      R31 R31 K37  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
173 [-]: CALL      R31 2 2      ; R31 := R31(R32)
174 [-]: NEWTABLE  R32 0 0      ; R32 := {}
175 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
176 [-]: LOADK     R31 K38      ; R31 := " ["
177 [-]: GETGLOBAL R32 K39      ; R32 := 0x9FAED6BC
178 [-]: MOVE      R33 R25      ; R33 := R25
179 [-]: CALL      R32 2 2      ; R32 := R32(R33)
180 [-]: LOADK     R33 K40      ; R33 := "]"
181 [-]: MOVE      R34 R16      ; R34 := R16
182 [-]: LOADK     R35 K41      ; R35 := "</font>"
183 [-]: CONCAT    R9 R26 R35   ; R9 := R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33 .. R34 .. R35
184 [-]: JMP       212          ; PC := 212
185 [-]: MOVE      R26 R9       ; R26 := R9
186 [-]: LOADK     R27 K33      ; R27 := "<font color=\""
187 [-]: MOVE      R28 R11      ; R28 := R11
188 [-]: LOADK     R29 K42      ; R29 := "\">---"
189 [-]: MOVE      R30 R16      ; R30 := R16
190 [-]: LOADK     R31 K41      ; R31 := "</font>"
191 [-]: CONCAT    R9 R26 R31   ; R9 := R26 .. R27 .. R28 .. R29 .. R30 .. R31
192 [-]: JMP       212          ; PC := 212
193 [-]: FORLOOP   R20 121      ; R20 += R22; if R20 <= R21 then begin PC := 121; R23 := R20 end
194 [-]: JMP       212          ; PC := 212
195 [-]: EQ        1 R9 K14     ; if R9 == nil then PC := 212
196 [-]: JMP       212          ; PC := 212
197 [-]: GETTABLE  R26 R7 R15   ; R26 := R7[R15]
198 [-]: GETTABLE  R26 R26 K1   ; R26 := R26["IsSentinel"]
199 [-]: TEST      R26 1        ; if R26 then PC := 212
200 [-]: JMP       212          ; PC := 212
201 [-]: MOVE      R26 R9       ; R26 := R9
202 [-]: LOADK     R27 K33      ; R27 := "<font color=\""
203 [-]: MOVE      R28 R10      ; R28 := R10
204 [-]: LOADK     R29 K34      ; R29 := "\">"
205 [-]: GETGLOBAL R30 K35      ; R30 := 0xE6DC43B0
206 [-]: LOADK     R31 K43      ; R31 := "/Lotus/Language/Menu/Cosmetics_None"
207 [-]: NEWTABLE  R32 0 0      ; R32 := {}
208 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
209 [-]: MOVE      R31 R16      ; R31 := R16
210 [-]: LOADK     R32 K41      ; R32 := "</font>"
211 [-]: CONCAT    R9 R26 R32   ; R9 := R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32
212 [-]: FORLOOP   R12 73       ; R12 += R14; if R12 <= R13 then begin PC := 73; R15 := R12 end
213 [-]: EQ        1 R9 K14     ; if R9 == nil then PC := 218
214 [-]: JMP       218          ; PC := 218
215 [-]: MOVE      R26 R9       ; R26 := R9
216 [-]: LOADK     R27 K44      ; R27 := "</p>"
217 [-]: CONCAT    R9 R26 R27   ; R9 := R26 .. R27
218 [-]: MOVE      R26 R8       ; R26 := R8
219 [-]: MOVE      R27 R9       ; R27 := R9
220 [-]: RETURN    R26 3        ; return R26,R27
221 [-]: RETURN    R0 1         ; return 


; Function #297.1:
;
; Name:            
; Defined at line: 5841
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
  3 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["LOT_NORMAL"]
  4 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["LOT_NORMAL_PVP"]
  8 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 42
  9 [-]: JMP       42           ; PC := 42
 10 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 11 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 12 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2["0xD3A6CE65"]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: MOVE      R3 R4        ; R3 := R4
 17 [-]: JMP       158          ; PC := 158
 18 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 19 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["MELEE_SLOT"]
 20 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2["0xA82A3D30"]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: MOVE      R3 R4        ; R3 := R4
 25 [-]: JMP       158          ; PC := 158
 26 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 27 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LONG_GUN_SLOT"]
 28 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2["0x1D216770"]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: JMP       158          ; PC := 158
 34 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 35 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["PISTOL_SLOT"]
 36 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 37 [-]: JMP       158          ; PC := 158
 38 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0xB5D66AE"]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: MOVE      R3 R4        ; R3 := R4
 41 [-]: JMP       158          ; PC := 158
 42 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 43 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["LOT_ARCHWING"]
 44 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 70
 45 [-]: JMP       70           ; PC := 70
 46 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 47 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 48 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R4 R2 K12    ; R5 := R2; R4 := R2["0x4ADC73C2"]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: MOVE      R3 R4        ; R3 := R4
 53 [-]: JMP       158          ; PC := 158
 54 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 55 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["MELEE_SLOT"]
 56 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R4 R2 K13    ; R5 := R2; R4 := R2["0xA5FC09FD"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: MOVE      R3 R4        ; R3 := R4
 61 [-]: JMP       158          ; PC := 158
 62 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 63 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["LONG_GUN_SLOT"]
 64 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 65 [-]: JMP       158          ; PC := 158
 66 [-]: SELF      R4 R2 K14    ; R5 := R2; R4 := R2["0x213E1D36"]
 67 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 68 [-]: MOVE      R3 R4        ; R3 := R4
 69 [-]: JMP       158          ; PC := 158
 70 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 71 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["LOT_KDRIVE"]
 72 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 82
 73 [-]: JMP       82           ; PC := 82
 74 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 75 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 76 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 158
 77 [-]: JMP       158          ; PC := 158
 78 [-]: SELF      R4 R2 K16    ; R5 := R2; R4 := R2["0x613232C3"]
 79 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 80 [-]: MOVE      R3 R4        ; R3 := R4
 81 [-]: JMP       158          ; PC := 158
 82 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 83 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["LOT_SENTINEL"]
 84 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 147
 85 [-]: JMP       147          ; PC := 147
 86 [-]: GETGLOBAL R4 K0        ; R4 := Lotus_Game
 87 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
 88 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 143
 89 [-]: JMP       143          ; PC := 143
 90 [-]: SELF      R4 R2 K18    ; R5 := R2; R4 := R2["0xC119AB7B"]
 91 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: TEST      R3 1         ; if R3 then PC := 97
 94 [-]: JMP       97           ; PC := 97
 95 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 96 [-]: MOVE      R3 R4        ; R3 := R4
 97 [-]: SELF      R4 R2 K19    ; R5 := R2; R4 := R2["0xC4F6B9B9"]
 98 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 99 [-]: LOADK     R5 K20       ; R5 := 1
100 [-]: LEN       R6 R4        ; R6 := # R4
101 [-]: LOADK     R7 K20       ; R7 := 1
102 [-]: FORPREP   R5 108       ; R5 -= R7; PC := 108
103 [-]: GETGLOBAL R9 K21       ; R9 := table
104 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["0xE6450C9D"]
105 [-]: MOVE      R10 R3       ; R10 := R3
106 [-]: GETTABLE  R11 R4 R8    ; R11 := R4[R8]
107 [-]: CALL      R9 3 1       ; R9(R10,R11)
108 [-]: FORLOOP   R5 103       ; R5 += R7; if R5 <= R6 then begin PC := 103; R8 := R5 end
109 [-]: SELF      R9 R2 K23    ; R10 := R2; R9 := R2["0x3534C3F3"]
110 [-]: CALL      R9 2 2       ; R9 := R9(R10)
111 [-]: LOADK     R10 K20      ; R10 := 1
112 [-]: LEN       R11 R9       ; R11 := # R9
113 [-]: LOADK     R12 K20      ; R12 := 1
114 [-]: FORPREP   R10 141      ; R10 -= R12; PC := 141
115 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
116 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
117 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
118 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
119 [-]: GETTABLE  R15 R15 K26  ; R15 := R15["KubrowPetInfoDetails_STATUS_STASIS"]
120 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
121 [-]: JMP       141          ; PC := 141
122 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
123 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
124 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
125 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
126 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["KubrowPetInfoDetails_STATUS_INCUBATING"]
127 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
128 [-]: JMP       141          ; PC := 141
129 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
130 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mDetails"]
131 [-]: GETTABLE  R14 R14 K25  ; R14 := R14["mStatus"]
132 [-]: GETGLOBAL R15 K0       ; R15 := Lotus_Game
133 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["KubrowPetInfoDetails_STATUS_INCUBATED"]
134 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 141
135 [-]: JMP       141          ; PC := 141
136 [-]: GETGLOBAL R14 K21      ; R14 := table
137 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["0xE6450C9D"]
138 [-]: MOVE      R15 R3       ; R15 := R3
139 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
140 [-]: CALL      R14 3 1      ; R14(R15,R16)
141 [-]: FORLOOP   R10 115      ; R10 += R12; if R10 <= R11 then begin PC := 115; R13 := R10 end
142 [-]: JMP       158          ; PC := 158
143 [-]: SELF      R14 R2 K29   ; R15 := R2; R14 := R2["0x2485CEF6"]
144 [-]: CALL      R14 2 2      ; R14 := R14(R15)
145 [-]: MOVE      R3 R14       ; R3 := R14
146 [-]: JMP       158          ; PC := 158
147 [-]: GETGLOBAL R14 K0       ; R14 := Lotus_Game
148 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["LOT_DATAKNIFE"]
149 [-]: EQ        0 R0 R14     ; if R0 ~= R14 then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETGLOBAL R14 K0       ; R14 := Lotus_Game
152 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["SUIT_SLOT"]
153 [-]: EQ        0 R1 R14     ; if R1 ~= R14 then PC := 158
154 [-]: JMP       158          ; PC := 158
155 [-]: SELF      R14 R2 K31   ; R15 := R2; R14 := R2["0x12E94700"]
156 [-]: CALL      R14 2 2      ; R14 := R14(R15)
157 [-]: MOVE      R3 R14       ; R3 := R14
158 [-]: RETURN    R3 2         ; return R3
159 [-]: RETURN    R0 1         ; return 


; Function #298:
;
; Name:            
; Defined at line: 5964
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: MOVE      R7 R1        ; R7 := R1
  4 [-]: MOVE      R8 R2        ; R8 := R2
  5 [-]: MOVE      R9 R3        ; R9 := R3
  6 [-]: MOVE      R10 R4       ; R10 := R4
  7 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  8 [-]: RETURN    R5 0         ; return R5,...
  9 [-]: RETURN    R0 1         ; return 


; Function #299:
;
; Name:            
; Defined at line: 5968
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := string
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x7B782033"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := -1
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: LOADK     R2 K3        ; R2 := "/"
  7 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  8 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Interface/ClanEmblems/"
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: LOADK     R5 K5        ; R5 := "_em.png"
 12 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #300:
;
; Name:            
; Defined at line: 5974
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mCount"]
  2 [-]: LOADK     R2 K1        ; R2 := 0
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mGoal"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mPersonal"]
  5 [-]: TEST      R4 1         ; if R4 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mInvasion"]
  8 [-]: TEST      R4 0         ; if not R4 then PC := 97
  9 [-]: JMP       97           ; PC := 97
 10 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mTag"]
 11 [-]: GETGLOBAL R5 K6        ; R5 := 0xEC274B1A
 12 [-]: LOADK     R6 K7        ; R6 := "HeatFissure"
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADK     R1 K1        ; R1 := 0
 17 [-]: GETGLOBAL R4 K8        ; R4 := 0x400E7765
 18 [-]: GETGLOBAL R5 K9        ; R5 := gPlayerProfileMgr
 19 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x21EF7B1A"]
 20 [-]: LOADK     R7 K1        ; R7 := 0
 21 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 22 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 23 [-]: TEST      R4 1         ; if R4 then PC := 94
 24 [-]: JMP       94           ; PC := 94
 25 [-]: GETGLOBAL R4 K8        ; R4 := 0x400E7765
 26 [-]: GETGLOBAL R5 K9        ; R5 := gPlayerProfileMgr
 27 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x21EF7B1A"]
 28 [-]: LOADK     R7 K1        ; R7 := 0
 29 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 30 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5["0x654F1092"]
 31 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 32 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 33 [-]: TEST      R4 1         ; if R4 then PC := 94
 34 [-]: JMP       94           ; PC := 94
 35 [-]: GETGLOBAL R4 K9        ; R4 := gPlayerProfileMgr
 36 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x21EF7B1A"]
 37 [-]: LOADK     R6 K1        ; R6 := 0
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x654F1092"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: LOADNIL   R5 R5        ; R5 := nil
 42 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClanGoal"]
 43 [-]: LEN       R6 R6        ; R6 := # R6
 44 [-]: LT        1 K1 R6      ; if 0 < R6 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: MOVE      R6 R0        ; R6 := R0
 47 [-]: MOVE      R6 R1        ; R6 := R1
 48 [-]: TEST      R6 0         ; if not R6 then PC := 58
 49 [-]: JMP       58           ; PC := 58
 50 [-]: SELF      R7 R4 K13    ; R8 := R4; R7 := R4["0x15793965"]
 51 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 52 [-]: EQ        1 R7 K14     ; if R7 == "" then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: SELF      R7 R4 K15    ; R8 := R4; R7 := R4["0xF969266B"]
 55 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 56 [-]: MOVE      R5 R7        ; R5 := R7
 57 [-]: JMP       61           ; PC := 61
 58 [-]: SELF      R7 R4 K16    ; R8 := R4; R7 := R4["0x94A9020"]
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: MOVE      R5 R7        ; R5 := R7
 61 [-]: LOADK     R7 K17       ; R7 := 1
 62 [-]: LEN       R8 R5        ; R8 := # R5
 63 [-]: LOADK     R9 K17       ; R9 := 1
 64 [-]: FORPREP   R7 92        ; R7 -= R9; PC := 92
 65 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 66 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["mId"]
 67 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["mId"]
 68 [-]: GETTABLE  R12 R0 K18   ; R12 := R0["mId"]
 69 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["mId"]
 70 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 92
 71 [-]: JMP       92           ; PC := 92
 72 [-]: GETTABLE  R11 R0 K19   ; R11 := R0["mBest"]
 73 [-]: TEST      R11 0        ; if not R11 then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 76 [-]: GETTABLE  R1 R11 K19   ; R1 := R11["mBest"]
 77 [-]: JMP       89           ; PC := 89
 78 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 79 [-]: GETTABLE  R11 R11 K0   ; R11 := R11["mCount"]
 80 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["mGoal"]
 81 [-]: LT        0 R12 R11    ; if R12 >= R11 then PC := 87
 82 [-]: JMP       87           ; PC := 87
 83 [-]: GETTABLE  R11 R0 K20   ; R11 := R0["mBonusGoal"]
 84 [-]: LT        0 K1 R11     ; if 0 >= R11 then PC := 87
 85 [-]: JMP       87           ; PC := 87
 86 [-]: GETTABLE  R3 R0 K20    ; R3 := R0["mBonusGoal"]
 87 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 88 [-]: GETTABLE  R1 R11 K0    ; R1 := R11["mCount"]
 89 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 90 [-]: GETTABLE  R2 R11 K19   ; R2 := R11["mBest"]
 91 [-]: JMP       97           ; PC := 97
 92 [-]: FORLOOP   R7 65        ; R7 += R9; if R7 <= R8 then begin PC := 65; R10 := R7 end
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R11 K21      ; R11 := 0x93B1256B
 95 [-]: LOADK     R12 K22      ; R12 := "GetPersonalGoalProgress: profile or gamedata is nil"
 96 [-]: CALL      R11 2 1      ; R11(R12)
 97 [-]: MOVE      R11 R1       ; R11 := R1
 98 [-]: MOVE      R12 R2       ; R12 := R2
 99 [-]: MOVE      R13 R3       ; R13 := R3
100 [-]: RETURN    R11 4        ; return R11,R12,R13
101 [-]: RETURN    R0 1         ; return 


; Function #301:
;
; Name:            
; Defined at line: 6019
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETGLOBAL R3 K3        ; R3 := string
  4 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xBDD0D625"]
  5 [-]: GETGLOBAL R4 K5        ; R4 := gFlashMgr
  6 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x6402F397"]
  7 [-]: LOADK     R6 K7        ; R6 := "LotusGameRules.ForceElementalCarrier"
  8 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: SETTABLE  R2 K2 R3     ; R2["DebugElementalCarrier"] := R3
 11 [-]: GETGLOBAL R2 K1        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["DebugElementalCarrier"]
 13 [-]: EQ        1 R2 K8      ; if R2 == "" then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: LOADK     R3 K9        ; R3 := 0
 17 [-]: RETURN    R2 3         ; return R2,R3
 18 [-]: JMP       104          ; PC := 104
 19 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 104
 20 [-]: JMP       104          ; PC := 104
 21 [-]: GETGLOBAL R2 K11       ; R2 := 0x400E7765
 22 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["keyChainName"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 104
 25 [-]: JMP       104          ; PC := 104
 26 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["missionType"]
 27 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
 28 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["MT_RAID"]
 29 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 104
 30 [-]: JMP       104          ; PC := 104
 31 [-]: GETGLOBAL R2 K16       ; R2 := gGameConfig
 32 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0xCFE64B82"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: GETGLOBAL R3 K18       ; R3 := gPlayerProfileMgr
 35 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x21EF7B1A"]
 36 [-]: LOADK     R5 K9        ; R5 := 0
 37 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 38 [-]: GETGLOBAL R4 K11       ; R4 := 0x400E7765
 39 [-]: MOVE      R5 R3        ; R5 := R3
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 104
 42 [-]: JMP       104          ; PC := 104
 43 [-]: SELF      R4 R3 K20    ; R5 := R3; R4 := R3["0x654F1092"]
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: GETGLOBAL R5 K21       ; R5 := 0x63B09107
 46 [-]: SELF      R6 R4 K22    ; R7 := R4; R6 := R4["0x2D0B8A86"]
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["mGoals"]
 49 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 50 [-]: JMP       102          ; PC := 102
 51 [-]: GETTABLE  R10 R9 K24   ; R10 := R9["mTag"]
 52 [-]: EQ        0 R10 R2     ; if R10 ~= R2 then PC := 102
 53 [-]: JMP       102          ; PC := 102
 54 [-]: GETGLOBAL R10 K25      ; R10 := Engine
 55 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["0xD09D7910"]
 56 [-]: GETTABLE  R11 R9 K27   ; R11 := R9["mActivation"]
 57 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 58 [-]: LT        0 R10 K9     ; if R10 >= 0 then PC := 102
 59 [-]: JMP       102          ; PC := 102
 60 [-]: GETGLOBAL R10 K25      ; R10 := Engine
 61 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["0xD09D7910"]
 62 [-]: GETTABLE  R11 R9 K28   ; R11 := R9["mExpiry"]
 63 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 64 [-]: LT        0 K9 R10     ; if 0 >= R10 then PC := 102
 65 [-]: JMP       102          ; PC := 102
 66 [-]: GETTABLE  R10 R0 K29   ; R10 := R0["location"]
 67 [-]: GETGLOBAL R11 K30      ; R11 := EMPTY_SYMBOL
 68 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 102
 69 [-]: JMP       102          ; PC := 102
 70 [-]: GETUPVAL  R11 U0       ; R11 := U0
 71 [-]: CALL      R11 1 2      ; R11 := R11()
 72 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11["0xDF213CE1"]
 73 [-]: GETTABLE  R13 R0 K29   ; R13 := R0["location"]
 74 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 75 [-]: GETTABLE  R12 R11 K32  ; R12 := R11["nodeType"]
 76 [-]: GETGLOBAL R13 K14      ; R13 := Lotus_Game
 77 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NT_JUNCTION"]
 78 [-]: EQ        1 R12 R13    ; if R12 == R13 then PC := 86
 79 [-]: JMP       86           ; PC := 86
 80 [-]: GETTABLE  R12 R0 K29   ; R12 := R0["location"]
 81 [-]: GETGLOBAL R13 K34      ; R13 := 0xEC274B1A
 82 [-]: GETTABLE  R14 R9 K35   ; R14 := R9["mNode"]
 83 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 84 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: MOVE      R12 R0       ; R12 := R0
 87 [-]: RETURN    R12 2        ; return R12
 88 [-]: GETTABLE  R12 R11 K36  ; R12 := R11["region"]
 89 [-]: GETTABLE  R13 R9 K37   ; R13 := R9["mRegions"]
 90 [-]: GETGLOBAL R14 K21      ; R14 := 0x63B09107
 91 [-]: MOVE      R15 R13      ; R15 := R13
 92 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
 93 [-]: JMP       99           ; PC := 99
 94 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 99
 95 [-]: JMP       99           ; PC := 99
 96 [-]: MOVE      R19 R1       ; R19 := R1
 97 [-]: MOVE      R20 R1       ; R20 := R1
 98 [-]: RETURN    R19 3        ; return R19,R20
 99 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 94; R16 := R17 end
100 [-]: JMP       94           ; PC := 94
101 [-]: JMP       104          ; PC := 104
102 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 51; R7 := R8 end
103 [-]: JMP       51           ; PC := 51
104 [-]: MOVE      R19 R0       ; R19 := R0
105 [-]: RETURN    R19 2        ; return R19
106 [-]: RETURN    R0 1         ; return 


; Function #302:
;
; Name:            
; Defined at line: 6084
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xA559F558"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x8DB5D01F"]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETGLOBAL R3 K4        ; R3 := Engine
 21 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SLOT_1"]
 22 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 23 [-]: SELF      R5 R2 K6     ; R6 := R2; R5 := R2["0x6EA0928F"]
 24 [-]: GETGLOBAL R7 K4        ; R7 := Engine
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["MAIN_HAND"]
 26 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 27 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 28 [-]: TEST      R4 0         ; if not R4 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: GETGLOBAL R4 K8        ; R4 := 0x201191EA
 31 [-]: LOADK     R5 K9        ; R5 := 0
 32 [-]: CALL      R4 2 1       ; R4(R5)
 33 [-]: JMP       22           ; PC := 22
 34 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 35 [-]: GETGLOBAL R5 K4        ; R5 := Engine
 36 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["SLOT_1"]
 37 [-]: GETGLOBAL R6 K4        ; R6 := Engine
 38 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["SLOT_2"]
 39 [-]: GETGLOBAL R7 K4        ; R7 := Engine
 40 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["SLOT_6"]
 41 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 42 [-]: GETGLOBAL R5 K12       ; R5 := 0xECFDD17
 43 [-]: MOVE      R6 R4        ; R6 := R4
 44 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 45 [-]: JMP       76           ; PC := 76
 46 [-]: SELF      R10 R2 K13   ; R11 := R2; R10 := R2["0x63D63C30"]
 47 [-]: MOVE      R12 R9       ; R12 := R9
 48 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 49 [-]: GETGLOBAL R11 K2       ; R11 := 0x400E7765
 50 [-]: MOVE      R12 R10      ; R12 := R10
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: TEST      R11 1        ; if R11 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: SELF      R11 R10 K14  ; R12 := R10; R11 := R10["0x8B598ED4"]
 55 [-]: MOVE      R13 R1       ; R13 := R1
 56 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 57 [-]: TEST      R11 0        ; if not R11 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R3 R9        ; R3 := R9
 60 [-]: JMP       76           ; PC := 76
 61 [-]: SELF      R11 R2 K15   ; R12 := R2; R11 := R2["0xA23F6C57"]
 62 [-]: MOVE      R13 R9       ; R13 := R9
 63 [-]: CALL      R11 3 1      ; R11(R12,R13)
 64 [-]: GETGLOBAL R11 K0       ; R11 := gRegion
 65 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x9B0A3887"]
 66 [-]: MOVE      R13 R10      ; R13 := R10
 67 [-]: CALL      R11 3 1      ; R11(R12,R13)
 68 [-]: GETGLOBAL R11 K4       ; R11 := Engine
 69 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["SLOT_6"]
 70 [-]: EQ        0 R9 R11     ; if R9 ~= R11 then PC := 76
 71 [-]: JMP       76           ; PC := 76
 72 [-]: SELF      R11 R2 K17   ; R12 := R2; R11 := R2["0x8F04DB34"]
 73 [-]: GETGLOBAL R13 K4       ; R13 := Engine
 74 [-]: GETTABLE  R13 R13 K18  ; R13 := R13["SLOT_8"]
 75 [-]: CALL      R11 3 1      ; R11(R12,R13)
 76 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 46; R7 := R8 end
 77 [-]: JMP       46           ; PC := 46
 78 [-]: SELF      R11 R2 K19   ; R12 := R2; R11 := R2["0x290DDD35"]
 79 [-]: MOVE      R13 R3       ; R13 := R3
 80 [-]: GETGLOBAL R14 K4       ; R14 := Engine
 81 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["MAIN_HAND"]
 82 [-]: GETGLOBAL R15 K4       ; R15 := Engine
 83 [-]: GETTABLE  R15 R15 K20  ; R15 := R15["InventoryControllerBase_ES_INSTANT_EQUIP"]
 84 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 85 [-]: GETGLOBAL R11 K21      ; R11 := _T
 86 [-]: SETTABLE  R11 K22 R3   ; R11["ExclusiveWeaponSlot"] := R3
 87 [-]: RETURN    R0 1         ; return 


; Function #303:
;
; Name:            
; Defined at line: 6121
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0x8DB5D01F"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R3 K2        ; R3 := gGameRules
 16 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x970BA12"]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: CLOSURE   R3 0         ; R3 := closure(Function #303.1)
 20 [-]: MOVE      R4 R3        ; R4 := R3
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: CALL      R4 2 1       ; R4(R5)
 23 [-]: GETGLOBAL R4 K2        ; R4 := gGameRules
 24 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5F122093"]
 25 [-]: GETGLOBAL R6 K5        ; R6 := gLotusAuraUpgradeType
 26 [-]: MOVE      R7 R0        ; R7 := R0
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0xECFDD17
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R10 K7       ; R10 := gRegion
 33 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0x9B0A3887"]
 34 [-]: MOVE      R12 R9       ; R12 := R9
 35 [-]: CALL      R10 3 1      ; R10(R11,R12)
 36 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 32; R7 := R8 end
 37 [-]: JMP       32           ; PC := 32
 38 [-]: SELF      R10 R0 K9    ; R11 := R0; R10 := R0["0xA3F6069B"]
 39 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 40 [-]: SELF      R11 R10 K10  ; R12 := R10; R11 := R10["0x8938B1C9"]
 41 [-]: SELF      R13 R10 K11  ; R14 := R10; R13 := R10["0xF27096B7"]
 42 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 43 [-]: CALL      R11 0 1      ; R11(R12,...)
 44 [-]: LOADNIL   R11 R11      ; R11 := nil
 45 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0["0x96D4FC9C"]
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: GETGLOBAL R13 K0       ; R13 := 0x400E7765
 48 [-]: MOVE      R14 R12      ; R14 := R12
 49 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 50 [-]: TEST      R13 1        ; if R13 then PC := 112
 51 [-]: JMP       112          ; PC := 112
 52 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12["0x30BDE7F"]
 53 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 54 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["mPetType"]
 55 [-]: GETGLOBAL R14 K15      ; R14 := Lotus_Game
 56 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["MAX_PetType"]
 57 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 112
 58 [-]: JMP       112          ; PC := 112
 59 [-]: GETGLOBAL R14 K2       ; R14 := gGameRules
 60 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14["0x211CFAC2"]
 61 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 62 [-]: TEST      R14 0        ; if not R14 then PC := 112
 63 [-]: JMP       112          ; PC := 112
 64 [-]: MOVE      R14 R0       ; R14 := R0
 65 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
 66 [-]: MOVE      R16 R11      ; R16 := R11
 67 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 68 [-]: TEST      R15 0        ; if not R15 then PC := 103
 69 [-]: JMP       103          ; PC := 103
 70 [-]: TEST      R14 1        ; if R14 then PC := 103
 71 [-]: JMP       103          ; PC := 103
 72 [-]: SELF      R15 R12 K13  ; R16 := R12; R15 := R12["0x30BDE7F"]
 73 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 74 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15["0xF3640469"]
 75 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 76 [-]: TESTSET   R14 R15 0    ; if not R15 then PC := 90 else R14 := R15
 77 [-]: JMP       90           ; PC := 90
 78 [-]: GETGLOBAL R15 K2       ; R15 := gGameRules
 79 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15["0x3D64BDEF"]
 80 [-]: SELF      R17 R0 K20   ; R18 := R0; R17 := R0["0xFA66CF82"]
 81 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 82 [-]: MOVE      R18 R1       ; R18 := R1
 83 [-]: SELF      R19 R12 K13  ; R20 := R12; R19 := R12["0x30BDE7F"]
 84 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 85 [-]: SELF      R19 R19 K18  ; R20 := R19; R19 := R19["0xF3640469"]
 86 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 87 [-]: MOVE      R20 R1       ; R20 := R1
 88 [-]: CALL      R15 6 2      ; R15 := R15(R16,R17,R18,R19,R20)
 89 [-]: MOVE      R14 R15      ; R14 := R15
 90 [-]: SELF      R15 R2 K21   ; R16 := R2; R15 := R2["0x30DABA98"]
 91 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 92 [-]: MOVE      R11 R15      ; R11 := R15
 93 [-]: EQ        1 R1 K22     ; if R1 == "0x1" then PC := 97
 94 [-]: JMP       97           ; PC := 97
 95 [-]: EQ        0 R1 K23     ; if R1 ~= nil then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETGLOBAL R15 K24      ; R15 := 0x201191EA
 98 [-]: LOADK     R16 K25      ; R16 := 0
 99 [-]: CALL      R15 2 1      ; R15(R16)
100 [-]: JMP       65           ; PC := 65
101 [-]: JMP       103          ; PC := 103
102 [-]: JMP       65           ; PC := 65
103 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
104 [-]: MOVE      R16 R11      ; R16 := R11
105 [-]: CALL      R15 2 2      ; R15 := R15(R16)
106 [-]: TEST      R15 1        ; if R15 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: MOVE      R15 R3       ; R15 := R3
109 [-]: SELF      R16 R11 K1   ; R17 := R11; R16 := R11["0x8DB5D01F"]
110 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
111 [-]: CALL      R15 0 1      ; R15(R16,...)
112 [-]: GETGLOBAL R15 K0       ; R15 := 0x400E7765
113 [-]: MOVE      R16 R11      ; R16 := R11
114 [-]: CALL      R15 2 2      ; R15 := R15(R16)
115 [-]: TEST      R15 1        ; if R15 then PC := 123
116 [-]: JMP       123          ; PC := 123
117 [-]: SELF      R15 R11 K9   ; R16 := R11; R15 := R11["0xA3F6069B"]
118 [-]: CALL      R15 2 2      ; R15 := R15(R16)
119 [-]: SELF      R16 R15 K10  ; R17 := R15; R16 := R15["0x8938B1C9"]
120 [-]: SELF      R18 R15 K11  ; R19 := R15; R18 := R15["0xF27096B7"]
121 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
122 [-]: CALL      R16 0 1      ; R16(R17,...)
123 [-]: RETURN    R0 1         ; return 


; Function #303.1:
;
; Name:            
; Defined at line: 6135
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x2C00D429
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Game/SentinelPrecept"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SLOT_1"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := Engine
  7 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["SLOT_12"]
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: FORPREP   R2 71        ; R2 -= R4; PC := 71
 10 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0["0x63D63C30"]
 11 [-]: MOVE      R8 R5        ; R8 := R5
 12 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 13 [-]: GETGLOBAL R7 K7        ; R7 := 0x400E7765
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: TEST      R7 1         ; if R7 then PC := 71
 17 [-]: JMP       71           ; PC := 71
 18 [-]: LOADK     R7 K8        ; R7 := 0
 19 [-]: GETGLOBAL R8 K7        ; R8 := 0x400E7765
 20 [-]: SELF      R9 R6 K9     ; R10 := R6; R9 := R6["0x38F325B8"]
 21 [-]: MOVE      R11 R7       ; R11 := R7
 22 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 23 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 24 [-]: TEST      R8 1         ; if R8 then PC := 71
 25 [-]: JMP       71           ; PC := 71
 26 [-]: SELF      R8 R6 K9     ; R9 := R6; R8 := R6["0x38F325B8"]
 27 [-]: MOVE      R10 R7       ; R10 := R7
 28 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 29 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0x8B598ED4"]
 30 [-]: GETGLOBAL R11 K11      ; R11 := gLotusArtifactUpgradeType
 31 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 32 [-]: SELF      R10 R8 K10   ; R11 := R8; R10 := R8["0x8B598ED4"]
 33 [-]: MOVE      R12 R1       ; R12 := R1
 34 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 35 [-]: SELF      R11 R8 K10   ; R12 := R8; R11 := R8["0x8B598ED4"]
 36 [-]: GETGLOBAL R13 K12      ; R13 := gLotusSuitCustomizationType
 37 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 38 [-]: TEST      R11 0        ; if not R11 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x3061149"]
 41 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 42 [-]: LT        1 K8 R11     ; if 0 < R11 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R11 R0       ; R11 := R0
 45 [-]: MOVE      R11 R1       ; R11 := R1
 46 [-]: TEST      R9 0         ; if not R9 then PC := 64
 47 [-]: JMP       64           ; PC := 64
 48 [-]: TEST      R10 0        ; if not R10 then PC := 59
 49 [-]: JMP       59           ; PC := 59
 50 [-]: SELF      R12 R8 K14   ; R13 := R8; R12 := R8["0xE2DA2DE5"]
 51 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 52 [-]: TEST      R12 0        ; if not R12 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: SELF      R13 R12 K15  ; R14 := R12; R13 := R12["0xADAA022C"]
 55 [-]: MOVE      R15 R1       ; R15 := R1
 56 [-]: CALL      R13 3 1      ; R13(R14,R15)
 57 [-]: SELF      R13 R12 K16  ; R14 := R12; R13 := R12["0x1FDB8A0"]
 58 [-]: CALL      R13 2 1      ; R13(R14)
 59 [-]: SELF      R13 R6 K17   ; R14 := R6; R13 := R6["0xF21555A7"]
 60 [-]: MOVE      R15 R8       ; R15 := R8
 61 [-]: MOVE      R16 R1       ; R16 := R1
 62 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 63 [-]: JMP       19           ; PC := 19
 64 [-]: TEST      R11 0        ; if not R11 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: SELF      R13 R6 K18   ; R14 := R6; R13 := R6["0x43CA1968"]
 67 [-]: MOVE      R15 R8       ; R15 := R8
 68 [-]: CALL      R13 3 1      ; R13(R14,R15)
 69 [-]: ADD       R7 R7 K5     ; R7 := R7 + 1
 70 [-]: JMP       19           ; PC := 19
 71 [-]: FORLOOP   R2 10        ; R2 += R4; if R2 <= R3 then begin PC := 10; R5 := R2 end
 72 [-]: RETURN    R0 1         ; return 


; Function #304:
;
; Name:            
; Defined at line: 6208
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8B598ED4"]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 28
 11 [-]: JMP       28           ; PC := 28
 12 [-]: GETGLOBAL R0 K1        ; R0 := gGameRules
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xB8637349"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["goalTag"]
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0xEC274B1A
 22 [-]: LOADK     R3 K7        ; R3 := "NoMods"
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R1 R1        ; R1 := R1
 27 [-]: RETURN    R1 2         ; return R1
 28 [-]: MOVE      R1 R0        ; R1 := R0
 29 [-]: RETURN    R1 2         ; return R1
 30 [-]: RETURN    R0 1         ; return 


; Function #305:
;
; Name:            
; Defined at line: 6219
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0["0x30BDE7F"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mIsFirstTimeInNode"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #306:
;
; Name:            
; Defined at line: 6227
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["PendingEquippingGearItem"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R2 K1        ; R2 := _T
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: SETTABLE  R2 K2 R3     ; R2["PendingEquippingGearItem"] := R3
 10 [-]: GETGLOBAL R2 K1        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
 12 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0["0xDBEF0FB6"]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: SETTABLE  R2 R3 R1     ; R2[R3] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #307:
;
; Name:            
; Defined at line: 6234
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PendingEquippingGearItem"]
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0xDBEF0FB6"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #308:
;
; Name:            
; Defined at line: 6242
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x6DA72501"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: LOADK     R2 K1        ; R2 := 1
  4 [-]: GETGLOBAL R3 K2        ; R3 := SHIP_ROOMS
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K1        ; R4 := 1
  7 [-]: FORPREP   R2 56        ; R2 -= R4; PC := 56
  8 [-]: GETGLOBAL R6 K3        ; R6 := gRegion
  9 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xA76F0612"]
 10 [-]: GETGLOBAL R8 K2        ; R8 := SHIP_ROOMS
 11 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 12 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["Name"]
 13 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 14 [-]: LOADK     R7 K1        ; R7 := 1
 15 [-]: LEN       R8 R6        ; R8 := # R6
 16 [-]: LOADK     R9 K1        ; R9 := 1
 17 [-]: FORPREP   R7 55        ; R7 -= R9; PC := 55
 18 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 19 [-]: SELF      R11 R11 K6   ; R12 := R11; R11 := R11["0x3D6ED718"]
 20 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 21 [-]: GETTABLE  R12 R6 R10   ; R12 := R6[R10]
 22 [-]: SELF      R12 R12 K7   ; R13 := R12; R12 := R12["0xEFE96608"]
 23 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 24 [-]: GETTABLE  R13 R12 K8   ; R13 := R12["x"]
 25 [-]: GETTABLE  R14 R1 K8    ; R14 := R1["x"]
 26 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 27 [-]: JMP       55           ; PC := 55
 28 [-]: GETTABLE  R13 R12 K9   ; R13 := R12["y"]
 29 [-]: GETTABLE  R14 R1 K9    ; R14 := R1["y"]
 30 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 31 [-]: JMP       55           ; PC := 55
 32 [-]: GETTABLE  R13 R12 K10  ; R13 := R12["z"]
 33 [-]: GETTABLE  R14 R1 K10   ; R14 := R1["z"]
 34 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETTABLE  R13 R1 K8    ; R13 := R1["x"]
 37 [-]: GETTABLE  R14 R11 K8   ; R14 := R11["x"]
 38 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 39 [-]: JMP       55           ; PC := 55
 40 [-]: GETTABLE  R13 R1 K9    ; R13 := R1["y"]
 41 [-]: GETTABLE  R14 R11 K9   ; R14 := R11["y"]
 42 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 43 [-]: JMP       55           ; PC := 55
 44 [-]: GETTABLE  R13 R1 K10   ; R13 := R1["z"]
 45 [-]: GETTABLE  R14 R11 K10  ; R14 := R11["z"]
 46 [-]: LE        0 R13 R14    ; if R13 > R14 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R13 K2       ; R13 := SHIP_ROOMS
 49 [-]: GETTABLE  R13 R13 R5   ; R13 := R13[R5]
 50 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["Name"]
 51 [-]: GETGLOBAL R14 K2       ; R14 := SHIP_ROOMS
 52 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 53 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["LocTag"]
 54 [-]: RETURN    R13 3        ; return R13,R14
 55 [-]: FORLOOP   R7 18        ; R7 += R9; if R7 <= R8 then begin PC := 18; R10 := R7 end
 56 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 57 [-]: GETGLOBAL R13 K12      ; R13 := BRIDGE_ROOM
 58 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["Name"]
 59 [-]: GETGLOBAL R14 K12      ; R14 := BRIDGE_ROOM
 60 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["LocTag"]
 61 [-]: RETURN    R13 3        ; return R13,R14
 62 [-]: RETURN    R0 1         ; return 


; Function #309:
;
; Name:            
; Defined at line: 6262
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
  2 [-]: GETGLOBAL R9 K1        ; R9 := _G
  3 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["UIMovie_LoadoutSelectMovie"]
  4 [-]: CALL      R8 2 2       ; R8 := R8(R9)
  5 [-]: TEST      R8 1         ; if R8 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
  8 [-]: MOVE      R9 R2        ; R9 := R2
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 0         ; if not R8 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R8 R8        ; R8 := nil
 13 [-]: RETURN    R8 2         ; return R8
 14 [-]: GETGLOBAL R8 K3        ; R8 := gGameRules
 15 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0xC17093D6"]
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: LOADNIL   R9 R9        ; R9 := nil
 18 [-]: GETGLOBAL R10 K5       ; R10 := _T
 19 [-]: SETTABLE  R10 K6 R3    ; R10["SelectLoadOutType"] := R3
 20 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 21 [-]: MOVE      R11 R0       ; R11 := R0
 22 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 23 [-]: TEST      R10 1        ; if R10 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: SELF      R10 R0 K7    ; R11 := R0; R10 := R0["0x5FF274BB"]
 26 [-]: GETGLOBAL R12 K1       ; R12 := _G
 27 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["UIMovie_LoadoutSelectMovie"]
 28 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 29 [-]: MOVE      R9 R10       ; R9 := R10
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETGLOBAL R10 K8       ; R10 := gFlashMgr
 32 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x7548923C"]
 33 [-]: GETGLOBAL R12 K1       ; R12 := _G
 34 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["UIMovie_LoadoutSelectMovie"]
 35 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 36 [-]: MOVE      R9 R10       ; R9 := R10
 37 [-]: GETGLOBAL R10 K5       ; R10 := _T
 38 [-]: CLOSURE   R11 0        ; R11 := closure(Function #309.1)
 39 [-]: MOVE      R0 R4        ; R0 := R4
 40 [-]: SETTABLE  R10 K10 R11  ; R10["LoadoutSelectionDone"] := R11
 41 [-]: SELF      R10 R9 K11   ; R11 := R9; R10 := R9["0x458F27A9"]
 42 [-]: LOADK     R12 K12      ; R12 := "SetCallBack"
 43 [-]: LOADK     R13 K10      ; R13 := "LoadoutSelectionDone"
 44 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 45 [-]: RETURN    R9 2         ; return R9
 46 [-]: RETURN    R0 1         ; return 


; Function #309.1:
;
; Name:            
; Defined at line: 6277
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["LoadoutSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #310:
;
; Name:            
; Defined at line: 6289
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: LOADK     R4 K1        ; R4 := 0
  4 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R5 K3        ; R5 := FORTUNA_NODE_TAG
  7 [-]: EQ        1 R1 R5      ; if R1 == R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R5 K4        ; R5 := ORB_VALLIS_NODE_TAG
 10 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["HOURS_PER_SECOND_VENUS"]
 14 [-]: LT        0 R0 K6      ; if R0 >= 12 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETUPVAL  R6 U0        ; R6 := U0
 17 [-]: GETTABLE  R2 R6 K7     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: GETTABLE  R3 R6 K8     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 20 [-]: SUB       R6 K6 R0     ; R6 := 12 - R0
 21 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 22 [-]: JMP       63           ; PC := 63
 23 [-]: LT        0 R0 K9      ; if R0 >= 18 then PC := 32
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R2 R6 K8     ; R2 := R6["TIME_OF_DAY_LABEL_WARM"]
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R3 R6 K7     ; R3 := R6["TIME_OF_DAY_LABEL_COLD"]
 29 [-]: SUB       R6 K9 R0     ; R6 := 18 - R0
 30 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 31 [-]: JMP       63           ; PC := 63
 32 [-]: GETUPVAL  R6 U0        ; R6 := U0
 33 [-]: GETTABLE  R2 R6 K7     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: GETTABLE  R3 R6 K8     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 36 [-]: SUB       R6 K10 R0    ; R6 := 36 - R0
 37 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 38 [-]: JMP       63           ; PC := 63
 39 [-]: GETUPVAL  R6 U0        ; R6 := U0
 40 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["HOURS_PER_SECOND_EIDOLON"]
 41 [-]: LE        1 K12 R0     ; if 22 <= R0 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: LT        0 R0 K13     ; if R0 >= 6 then PC := 57
 44 [-]: JMP       57           ; PC := 57
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: GETTABLE  R2 R7 K14    ; R2 := R7["TIME_OF_DAY_LABEL_NIGHT"]
 47 [-]: GETUPVAL  R7 U0        ; R7 := U0
 48 [-]: GETTABLE  R3 R7 K15    ; R3 := R7["TIME_OF_DAY_LABEL_DAY"]
 49 [-]: LE        0 K12 R0     ; if 22 > R0 then PC := 54
 50 [-]: JMP       54           ; PC := 54
 51 [-]: SUB       R7 K16 R0    ; R7 := 30 - R0
 52 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 53 [-]: JMP       63           ; PC := 63
 54 [-]: SUB       R7 K13 R0    ; R7 := 6 - R0
 55 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETUPVAL  R7 U0        ; R7 := U0
 58 [-]: GETTABLE  R2 R7 K15    ; R2 := R7["TIME_OF_DAY_LABEL_DAY"]
 59 [-]: GETUPVAL  R7 U0        ; R7 := U0
 60 [-]: GETTABLE  R3 R7 K14    ; R3 := R7["TIME_OF_DAY_LABEL_NIGHT"]
 61 [-]: SUB       R7 K12 R0    ; R7 := 22 - R0
 62 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 63 [-]: MOVE      R7 R2        ; R7 := R2
 64 [-]: MOVE      R8 R3        ; R8 := R3
 65 [-]: MOVE      R9 R4        ; R9 := R4
 66 [-]: RETURN    R7 4         ; return R7,R8,R9
 67 [-]: RETURN    R0 1         ; return 


; Function #311:
;
; Name:            
; Defined at line: 6328
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  3 [-]: GETGLOBAL R3 K2        ; R3 := gGameData
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  8 [-]: GETGLOBAL R3 K3        ; R3 := gGameRules
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: GETGLOBAL R2 K2        ; R2 := gGameData
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x2D0B8A86"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["HOURS_PER_SECOND_EIDOLON"]
 24 [-]: GETGLOBAL R4 K6        ; R4 := FORTUNA_NODE_TAG
 25 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETGLOBAL R4 K7        ; R4 := ORB_VALLIS_NODE_TAG
 28 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: GETUPVAL  R4 U0        ; R4 := U0
 31 [-]: GETTABLE  R3 R4 K8     ; R3 := R4["HOURS_PER_SECOND_VENUS"]
 32 [-]: GETGLOBAL R4 K3        ; R4 := gGameRules
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x555EFA5"]
 34 [-]: MOVE      R6 R3        ; R6 := R3
 35 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 36 [-]: RETURN    R4 2         ; return R4
 37 [-]: RETURN    R0 1         ; return 


; Function #312:
;
; Name:            
; Defined at line: 6349
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: NEWTABLE  R3 0 5       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 K1     ; R3["Name"] := nil
  3 [-]: SETTABLE  R3 K2 K1     ; R3["NameWithRank"] := nil
  4 [-]: SETTABLE  R3 K3 K1     ; R3["WeaponInfo"] := nil
  5 [-]: SETTABLE  R3 K4 K1     ; R3["CompanionInfo"] := nil
  6 [-]: SETTABLE  R3 K5 K1     ; R3["AuraInfo"] := nil
  7 [-]: GETGLOBAL R4 K6        ; R4 := 0x400E7765
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 1         ; if R4 then PC := 307
 11 [-]: JMP       307          ; PC := 307
 12 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["name"]
 13 [-]: GETGLOBAL R5 K8        ; R5 := cjson
 14 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["0x8A2E8315"]
 15 [-]: GETTABLE  R6 R1 K10    ; R6 := R1["loadout"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R4        ; R7 := R4
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 307
 21 [-]: JMP       307          ; PC := 307
 22 [-]: GETGLOBAL R6 K6        ; R6 := 0x400E7765
 23 [-]: MOVE      R7 R5        ; R7 := R5
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 1         ; if R6 then PC := 307
 26 [-]: JMP       307          ; PC := 307
 27 [-]: EQ        1 R4 K11     ; if R4 == "" then PC := 307
 28 [-]: JMP       307          ; PC := 307
 29 [-]: LOADK     R6 K12       ; R6 := "0"
 30 [-]: GETGLOBAL R7 K6        ; R7 := 0x400E7765
 31 [-]: GETTABLE  R8 R5 K13    ; R8 := R5["PlayerLevel"]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: TEST      R7 1         ; if R7 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETTABLE  R7 R5 K13    ; R7 := R5["PlayerLevel"]
 36 [-]: EQ        1 R7 K11     ; if R7 == "" then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R6 R5 K13    ; R6 := R5["PlayerLevel"]
 39 [-]: MOVE      R7 R4        ; R7 := R4
 40 [-]: SELF      R8 R0 K14    ; R9 := R0; R8 := R0["0x5DB0BD4"]
 41 [-]: LOADK     R10 K15      ; R10 := "<RANK_"
 42 [-]: MOVE      R11 R6       ; R11 := R6
 43 [-]: LOADK     R12 K16      ; R12 := ">"
 44 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 45 [-]: MOVE      R11 R1       ; R11 := R1
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: MOVE      R9 R6        ; R9 := R6
 48 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 49 [-]: MOVE      R9 R7        ; R9 := R7
 50 [-]: LOADK     R10 K17      ; R10 := " "
 51 [-]: MOVE      R11 R8       ; R11 := R8
 52 [-]: CONCAT    R7 R9 R11    ; R7 := R9 .. R10 .. R11
 53 [-]: SETTABLE  R3 K0 R4     ; R3["Name"] := R4
 54 [-]: SETTABLE  R3 K2 R7     ; R3["NameWithRank"] := R7
 55 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 56 [-]: GETUPVAL  R11 U0       ; R11 := U0
 57 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0xF81722A2"]
 58 [-]: GETTABLE  R12 R5 K19   ; R12 := R5["NORMAL_PVP"]
 59 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: MOVE      R12 R0       ; R12 := R0
 62 [-]: MOVE      R12 R1       ; R12 := R1
 63 [-]: GETTABLE  R13 R5 K19   ; R13 := R5["NORMAL_PVP"]
 64 [-]: GETTABLE  R14 R5 K20   ; R14 := R5["NORMAL"]
 65 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 66 [-]: MOVE      R9 R11       ; R9 := R11
 67 [-]: GETUPVAL  R11 U0       ; R11 := U0
 68 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0xF81722A2"]
 69 [-]: GETTABLE  R12 R5 K19   ; R12 := R5["NORMAL_PVP"]
 70 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 73
 71 [-]: JMP       73           ; PC := 73
 72 [-]: MOVE      R12 R0       ; R12 := R0
 73 [-]: MOVE      R12 R1       ; R12 := R1
 74 [-]: GETGLOBAL R13 K21      ; R13 := Lotus_Game
 75 [-]: GETTABLE  R13 R13 K22  ; R13 := R13["LOT_NORMAL_PVP"]
 76 [-]: GETGLOBAL R14 K21      ; R14 := Lotus_Game
 77 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["LOT_NORMAL"]
 78 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 79 [-]: MOVE      R10 R11      ; R10 := R11
 80 [-]: NEWTABLE  R11 5 0      ; R11 := {}
 81 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 82 [-]: GETTABLE  R13 R9 K25   ; R13 := R9[1]
 83 [-]: SETTABLE  R12 K24 R13  ; R12["Type"] := R13
 84 [-]: SETTABLE  R12 K26 K27  ; R12["isWeapon"] := "0x1"
 85 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 86 [-]: GETTABLE  R14 R5 K28   ; R14 := R5["DragonKey"]
 87 [-]: SETTABLE  R13 K24 R14  ; R13["Type"] := R14
 88 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 89 [-]: GETTABLE  R15 R9 K29   ; R15 := R9[3]
 90 [-]: SETTABLE  R14 K24 R15  ; R14["Type"] := R15
 91 [-]: SETTABLE  R14 K26 K27  ; R14["isWeapon"] := "0x1"
 92 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 93 [-]: GETTABLE  R16 R9 K30   ; R16 := R9[2]
 94 [-]: SETTABLE  R15 K24 R16  ; R15["Type"] := R16
 95 [-]: SETTABLE  R15 K26 K27  ; R15["isWeapon"] := "0x1"
 96 [-]: NEWTABLE  R16 0 2      ; R16 := {}
 97 [-]: GETTABLE  R17 R9 K31   ; R17 := R9[4]
 98 [-]: SETTABLE  R16 K24 R17  ; R16["Type"] := R17
 99 [-]: SETTABLE  R16 K26 K27  ; R16["isWeapon"] := "0x1"
100 [-]: SETLIST   R11 5 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 5
101 [-]: CLOSURE   R12 0        ; R12 := closure(Function #312.1)
102 [-]: CLOSURE   R13 1        ; R13 := closure(Function #312.2)
103 [-]: MOVE      R14 R13      ; R14 := R13
104 [-]: MOVE      R15 R2       ; R15 := R2
105 [-]: CALL      R14 2 2      ; R14 := R14(R15)
106 [-]: TEST      R14 1        ; if R14 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: MOVE      R14 R12      ; R14 := R12
109 [-]: MOVE      R15 R2       ; R15 := R2
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: TEST      R14 0        ; if not R14 then PC := 137
112 [-]: JMP       137          ; PC := 137
113 [-]: GETTABLE  R14 R5 K32   ; R14 := R5["ARCHWING"]
114 [-]: TEST      R14 0        ; if not R14 then PC := 137
115 [-]: JMP       137          ; PC := 137
116 [-]: GETTABLE  R14 R5 K33   ; R14 := R5["HasArchwing"]
117 [-]: TEST      R14 0        ; if not R14 then PC := 137
118 [-]: JMP       137          ; PC := 137
119 [-]: LOADK     R14 K25      ; R14 := 1
120 [-]: GETTABLE  R15 R5 K32   ; R15 := R5["ARCHWING"]
121 [-]: LEN       R15 R15      ; R15 := # R15
122 [-]: LOADK     R16 K25      ; R16 := 1
123 [-]: FORPREP   R14 136      ; R14 -= R16; PC := 136
124 [-]: GETGLOBAL R18 K34      ; R18 := table
125 [-]: GETTABLE  R18 R18 K35  ; R18 := R18["0xE6450C9D"]
126 [-]: MOVE      R19 R11      ; R19 := R11
127 [-]: NEWTABLE  R20 0 2      ; R20 := {}
128 [-]: GETTABLE  R21 R5 K32   ; R21 := R5["ARCHWING"]
129 [-]: GETGLOBAL R22 K21      ; R22 := Lotus_Game
130 [-]: GETTABLE  R22 R22 K36  ; R22 := R22["SUIT_SLOT"]
131 [-]: ADD       R22 R22 R17  ; R22 := R22 + R17
132 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
133 [-]: SETTABLE  R20 K24 R21  ; R20["Type"] := R21
134 [-]: SETTABLE  R20 K26 K27  ; R20["isWeapon"] := "0x1"
135 [-]: CALL      R18 3 1      ; R18(R19,R20)
136 [-]: FORLOOP   R14 124      ; R14 += R16; if R14 <= R15 then begin PC := 124; R17 := R14 end
137 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
138 [-]: MOVE      R19 R9       ; R19 := R9
139 [-]: CALL      R18 2 2      ; R18 := R18(R19)
140 [-]: TEST      R18 1        ; if R18 then PC := 236
141 [-]: JMP       236          ; PC := 236
142 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
143 [-]: MOVE      R19 R11      ; R19 := R11
144 [-]: CALL      R18 2 2      ; R18 := R18(R19)
145 [-]: TEST      R18 1        ; if R18 then PC := 236
146 [-]: JMP       236          ; PC := 236
147 [-]: LOADK     R18 K11      ; R18 := ""
148 [-]: LOADK     R19 K25      ; R19 := 1
149 [-]: LEN       R20 R11      ; R20 := # R11
150 [-]: LOADK     R21 K25      ; R21 := 1
151 [-]: FORPREP   R19 234      ; R19 -= R21; PC := 234
152 [-]: GETTABLE  R23 R11 R22  ; R23 := R11[R22]
153 [-]: GETGLOBAL R24 K6       ; R24 := 0x400E7765
154 [-]: GETTABLE  R25 R11 R22  ; R25 := R11[R22]
155 [-]: CALL      R24 2 2      ; R24 := R24(R25)
156 [-]: TEST      R24 1        ; if R24 then PC := 234
157 [-]: JMP       234          ; PC := 234
158 [-]: GETTABLE  R24 R11 R22  ; R24 := R11[R22]
159 [-]: GETTABLE  R24 R24 K24  ; R24 := R24["Type"]
160 [-]: TEST      R24 0        ; if not R24 then PC := 234
161 [-]: JMP       234          ; PC := 234
162 [-]: GETTABLE  R24 R11 R22  ; R24 := R11[R22]
163 [-]: GETTABLE  R24 R24 K24  ; R24 := R24["Type"]
164 [-]: GETTABLE  R24 R24 K37  ; R24 := R24["LocTag"]
165 [-]: TEST      R24 0        ; if not R24 then PC := 234
166 [-]: JMP       234          ; PC := 234
167 [-]: GETTABLE  R24 R23 K26  ; R24 := R23["isWeapon"]
168 [-]: TEST      R24 0        ; if not R24 then PC := 196
169 [-]: JMP       196          ; PC := 196
170 [-]: GETGLOBAL R24 K38      ; R24 := 0x9FAED6BC
171 [-]: GETTABLE  R25 R23 K24  ; R25 := R23["Type"]
172 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["LocTag"]
173 [-]: CALL      R24 2 2      ; R24 := R24(R25)
174 [-]: EQ        1 R24 K11    ; if R24 == "" then PC := 234
175 [-]: JMP       234          ; PC := 234
176 [-]: LT        0 K25 R22    ; if 1 >= R22 then PC := 181
177 [-]: JMP       181          ; PC := 181
178 [-]: MOVE      R25 R18      ; R25 := R18
179 [-]: LOADK     R26 K39      ; R26 := "\n\r"
180 [-]: CONCAT    R18 R25 R26  ; R18 := R25 .. R26
181 [-]: GETTABLE  R25 R23 K24  ; R25 := R23["Type"]
182 [-]: GETTABLE  R25 R25 K40  ; R25 := R25["Level"]
183 [-]: MOVE      R26 R18      ; R26 := R18
184 [-]: GETGLOBAL R27 K41      ; R27 := string
185 [-]: GETTABLE  R27 R27 K42  ; R27 := R27["0x639C642A"]
186 [-]: SELF      R28 R0 K14   ; R29 := R0; R28 := R0["0x5DB0BD4"]
187 [-]: MOVE      R30 R24      ; R30 := R24
188 [-]: MOVE      R31 R1       ; R31 := R1
189 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
190 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
191 [-]: LOADK     R28 K43      ; R28 := " ["
192 [-]: MOVE      R29 R25      ; R29 := R25
193 [-]: LOADK     R30 K44      ; R30 := "]"
194 [-]: CONCAT    R18 R26 R30  ; R18 := R26 .. R27 .. R28 .. R29 .. R30
195 [-]: JMP       234          ; PC := 234
196 [-]: GETGLOBAL R26 K6       ; R26 := 0x400E7765
197 [-]: GETTABLE  R27 R23 K24  ; R27 := R23["Type"]
198 [-]: CALL      R26 2 2      ; R26 := R26(R27)
199 [-]: TEST      R26 1        ; if R26 then PC := 234
200 [-]: JMP       234          ; PC := 234
201 [-]: GETGLOBAL R26 K45      ; R26 := 0x2C00D429
202 [-]: GETTABLE  R27 R23 K24  ; R27 := R23["Type"]
203 [-]: CALL      R26 2 2      ; R26 := R26(R27)
204 [-]: SELF      R26 R26 K46  ; R27 := R26; R26 := R26["0x8B598ED4"]
205 [-]: GETGLOBAL R28 K45      ; R28 := 0x2C00D429
206 [-]: LOADK     R29 K47      ; R29 := "/Lotus/Types/Restoratives/Upgraded/CorruptedKey"
207 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
208 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
209 [-]: TEST      R26 0        ; if not R26 then PC := 234
210 [-]: JMP       234          ; PC := 234
211 [-]: GETGLOBAL R26 K48      ; R26 := 0x7C282057
212 [-]: GETTABLE  R27 R23 K24  ; R27 := R23["Type"]
213 [-]: CALL      R26 2 2      ; R26 := R26(R27)
214 [-]: GETGLOBAL R27 K6       ; R27 := 0x400E7765
215 [-]: MOVE      R28 R26      ; R28 := R26
216 [-]: CALL      R27 2 2      ; R27 := R27(R28)
217 [-]: TEST      R27 1        ; if R27 then PC := 234
218 [-]: JMP       234          ; PC := 234
219 [-]: LT        0 K25 R22    ; if 1 >= R22 then PC := 224
220 [-]: JMP       224          ; PC := 224
221 [-]: MOVE      R27 R18      ; R27 := R18
222 [-]: LOADK     R28 K39      ; R28 := "\n\r"
223 [-]: CONCAT    R18 R27 R28  ; R18 := R27 .. R28
224 [-]: SELF      R27 R26 K49  ; R28 := R26; R27 := R26["0x616C74B6"]
225 [-]: CALL      R27 2 2      ; R27 := R27(R28)
226 [-]: MOVE      R28 R18      ; R28 := R18
227 [-]: SELF      R29 R0 K14   ; R30 := R0; R29 := R0["0x5DB0BD4"]
228 [-]: GETGLOBAL R31 K38      ; R31 := 0x9FAED6BC
229 [-]: MOVE      R32 R27      ; R32 := R27
230 [-]: CALL      R31 2 2      ; R31 := R31(R32)
231 [-]: MOVE      R32 R0       ; R32 := R0
232 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
233 [-]: CONCAT    R18 R28 R29  ; R18 := R28 .. R29
234 [-]: FORLOOP   R19 152      ; R19 += R21; if R19 <= R20 then begin PC := 152; R22 := R19 end
235 [-]: SETTABLE  R3 K3 R18    ; R3["WeaponInfo"] := R18
236 [-]: LOADK     R28 K11      ; R28 := ""
237 [-]: GETTABLE  R29 R5 K50   ; R29 := R5["KubrowName"]
238 [-]: EQ        1 R29 K11    ; if R29 == "" then PC := 253
239 [-]: JMP       253          ; PC := 253
240 [-]: GETUPVAL  R29 U0       ; R29 := U0
241 [-]: GETTABLE  R29 R29 K51  ; R29 := R29["0x36BA5F48"]
242 [-]: CALL      R29 1 2      ; R29 := R29()
243 [-]: TEST      R29 0        ; if not R29 then PC := 251
244 [-]: JMP       251          ; PC := 251
245 [-]: SELF      R29 R0 K14   ; R30 := R0; R29 := R0["0x5DB0BD4"]
246 [-]: LOADK     R31 K52      ; R31 := "/Lotus/Language/Menu/CategoryKubrow"
247 [-]: MOVE      R32 R0       ; R32 := R0
248 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
249 [-]: MOVE      R28 R29      ; R28 := R29
250 [-]: JMP       275          ; PC := 275
251 [-]: GETTABLE  R28 R5 K50   ; R28 := R5["KubrowName"]
252 [-]: JMP       275          ; PC := 275
253 [-]: GETGLOBAL R29 K6       ; R29 := 0x400E7765
254 [-]: GETTABLE  R30 R5 K53   ; R30 := R5["SENTINEL"]
255 [-]: CALL      R29 2 2      ; R29 := R29(R30)
256 [-]: TEST      R29 1        ; if R29 then PC := 275
257 [-]: JMP       275          ; PC := 275
258 [-]: GETGLOBAL R29 K38      ; R29 := 0x9FAED6BC
259 [-]: GETTABLE  R30 R5 K53   ; R30 := R5["SENTINEL"]
260 [-]: GETTABLE  R30 R30 K25  ; R30 := R30[1]
261 [-]: GETTABLE  R30 R30 K37  ; R30 := R30["LocTag"]
262 [-]: CALL      R29 2 2      ; R29 := R29(R30)
263 [-]: GETGLOBAL R30 K6       ; R30 := 0x400E7765
264 [-]: MOVE      R31 R29      ; R31 := R29
265 [-]: CALL      R30 2 2      ; R30 := R30(R31)
266 [-]: TEST      R30 1        ; if R30 then PC := 275
267 [-]: JMP       275          ; PC := 275
268 [-]: SELF      R30 R0 K14   ; R31 := R0; R30 := R0["0x5DB0BD4"]
269 [-]: GETGLOBAL R32 K38      ; R32 := 0x9FAED6BC
270 [-]: MOVE      R33 R29      ; R33 := R29
271 [-]: CALL      R32 2 2      ; R32 := R32(R33)
272 [-]: MOVE      R33 R0       ; R33 := R0
273 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
274 [-]: MOVE      R28 R30      ; R28 := R30
275 [-]: EQ        1 R28 K11    ; if R28 == "" then PC := 291
276 [-]: JMP       291          ; PC := 291
277 [-]: GETGLOBAL R30 K6       ; R30 := 0x400E7765
278 [-]: GETTABLE  R31 R5 K53   ; R31 := R5["SENTINEL"]
279 [-]: CALL      R30 2 2      ; R30 := R30(R31)
280 [-]: TEST      R30 1        ; if R30 then PC := 291
281 [-]: JMP       291          ; PC := 291
282 [-]: GETTABLE  R30 R5 K53   ; R30 := R5["SENTINEL"]
283 [-]: GETTABLE  R30 R30 K25  ; R30 := R30[1]
284 [-]: GETTABLE  R30 R30 K40  ; R30 := R30["Level"]
285 [-]: LOADK     R31 K39      ; R31 := "\n\r"
286 [-]: MOVE      R32 R28      ; R32 := R28
287 [-]: LOADK     R33 K43      ; R33 := " ["
288 [-]: MOVE      R34 R30      ; R34 := R30
289 [-]: LOADK     R35 K44      ; R35 := "]"
290 [-]: CONCAT    R28 R31 R35  ; R28 := R31 .. R32 .. R33 .. R34 .. R35
291 [-]: SETTABLE  R3 K4 R28    ; R3["CompanionInfo"] := R28
292 [-]: SELF      R31 R0 K14   ; R32 := R0; R31 := R0["0x5DB0BD4"]
293 [-]: GETGLOBAL R33 K38      ; R33 := 0x9FAED6BC
294 [-]: GETTABLE  R34 R5 K54   ; R34 := R5["AuraName"]
295 [-]: CALL      R33 2 2      ; R33 := R33(R34)
296 [-]: MOVE      R34 R0       ; R34 := R0
297 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
298 [-]: EQ        1 R31 K11    ; if R31 == "" then PC := 306
299 [-]: JMP       306          ; PC := 306
300 [-]: LOADK     R32 K39      ; R32 := "\n\r"
301 [-]: GETGLOBAL R33 K41      ; R33 := string
302 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["0x639C642A"]
303 [-]: MOVE      R34 R31      ; R34 := R31
304 [-]: CALL      R33 2 2      ; R33 := R33(R34)
305 [-]: CONCAT    R31 R32 R33  ; R31 := R32 .. R33
306 [-]: SETTABLE  R3 K5 R31    ; R3["AuraInfo"] := R31
307 [-]: RETURN    R3 2         ; return R3
308 [-]: RETURN    R0 1         ; return 


; Function #312.1:
;
; Name:            
; Defined at line: 6385
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
  9 [-]: GETGLOBAL R2 K2        ; R2 := Lotus_Game
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MT_LANDSCAPE"]
 11 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["sortieId"]
 14 [-]: EQ        0 R1 K5      ; if R1 ~= "" then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["goalTag"]
 17 [-]: GETGLOBAL R2 K7        ; R2 := EMPTY_SYMBOL
 18 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: MOVE      R1 R0        ; R1 := R0
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #312.2:
;
; Name:            
; Defined at line: 6393
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["archwingRequired"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #313:
;
; Name:            
; Defined at line: 6470
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #313.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K1 R1     ; R0["OnVendorConversationStarted"] := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: CLOSURE   R1 1         ; R1 := closure(Function #313.2)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 R1     ; R0["OnVendorConversationEnded"] := R1
  9 [-]: RETURN    R0 1         ; return 


; Function #313.1:
;
; Name:            
; Defined at line: 6472
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mSpeakerName"]
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x6A235628
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        0 R2 K4      ; if R2 ~= "function" then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 19 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: TEST      R1 0         ; if not R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: MOVE      R5 R2        ; R5 := R2
 30 [-]: CALL      R3 3 1       ; R3(R4,R5)
 31 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 32 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0xD168273F"]
 33 [-]: GETGLOBAL R5 K8        ; R5 := 0xEC274B1A
 34 [-]: LOADK     R6 K9        ; R6 := "FirstVisit"
 35 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 36 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 37 [-]: GETGLOBAL R4 K8        ; R4 := 0xEC274B1A
 38 [-]: LOADK     R5 K10       ; R5 := "FirstVisitIntro"
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mSpeakerName"]
 41 [-]: GETGLOBAL R6 K5        ; R6 := 0x400E7765
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: TEST      R6 1         ; if R6 then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETGLOBAL R6 K11       ; R6 := gGameData
 47 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x8572D26E"]
 48 [-]: GETGLOBAL R8 K8        ; R8 := 0xEC274B1A
 49 [-]: MOVE      R9 R5        ; R9 := R5
 50 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 51 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 52 [-]: MOVE      R6 R6        ; R6 := R6
 53 [-]: JMP       56           ; PC := 56
 54 [-]: MOVE      R6 R0        ; R6 := R0
 55 [-]: MOVE      R6 R1        ; R6 := R1
 56 [-]: GETTABLE  R7 R2 K13    ; R7 := R2["Loved"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 103
 58 [-]: JMP       103          ; PC := 103
 59 [-]: TEST      R6 1         ; if R6 then PC := 87
 60 [-]: JMP       87           ; PC := 87
 61 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
 62 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
 63 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 64 [-]: LOADK     R10 K14      ; R10 := "FirstLoved"
 65 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 66 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 67 [-]: MOVE      R3 R7        ; R3 := R7
 68 [-]: LOADNIL   R4 R4        ; R4 := nil
 69 [-]: MOVE      R7 R5        ; R7 := R5
 70 [-]: LOADK     R8 K13       ; R8 := "Loved"
 71 [-]: CONCAT    R5 R7 R8     ; R5 := R7 .. R8
 72 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 73 [-]: MOVE      R8 R3        ; R8 := R3
 74 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 75 [-]: TEST      R7 1         ; if R7 then PC := 85
 76 [-]: JMP       85           ; PC := 85
 77 [-]: GETGLOBAL R7 K11       ; R7 := gGameData
 78 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x8572D26E"]
 79 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 80 [-]: MOVE      R10 R5       ; R10 := R5
 81 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 82 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 83 [-]: MOVE      R6 R7        ; R6 := R7
 84 [-]: JMP       87           ; PC := 87
 85 [-]: MOVE      R6 R0        ; R6 := R0
 86 [-]: MOVE      R6 R1        ; R6 := R1
 87 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 88 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["mHubNpc"]
 89 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 90 [-]: TEST      R7 1         ; if R7 then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mHubNpc"]
 93 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0x58DAD0C5"]
 94 [-]: MOVE      R9 R0        ; R9 := R0
 95 [-]: CALL      R7 3 1       ; R7(R8,R9)
 96 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mHubNpc"]
 97 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7["0x966DE7DB"]
 98 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
 99 [-]: LOADK     R10 K18      ; R10 := "LovedIntro"
100 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
101 [-]: CALL      R7 0 1       ; R7(R8,...)
102 [-]: SETTABLE  R0 K19 K20   ; R0["IsUnmasked"] := "0x1"
103 [-]: TEST      R6 1         ; if R6 then PC := 138
104 [-]: JMP       138          ; PC := 138
105 [-]: GETTABLE  R7 R2 K21    ; R7 := R2["Level"]
106 [-]: EQ        0 R7 K22     ; if R7 ~= 0 then PC := 119
107 [-]: JMP       119          ; PC := 119
108 [-]: GETTABLE  R7 R2 K23    ; R7 := R2["Reputation"]
109 [-]: EQ        0 R7 K22     ; if R7 ~= 0 then PC := 119
110 [-]: JMP       119          ; PC := 119
111 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
112 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
113 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
114 [-]: LOADK     R10 K24      ; R10 := "Intro"
115 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
116 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
117 [-]: MOVE      R3 R7        ; R3 := R7
118 [-]: JMP       137          ; PC := 137
119 [-]: GETTABLE  R7 R2 K13    ; R7 := R2["Loved"]
120 [-]: TEST      R7 1         ; if R7 then PC := 130
121 [-]: JMP       130          ; PC := 130
122 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
123 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
124 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
125 [-]: LOADK     R10 K25      ; R10 := "Welcome"
126 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
127 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
128 [-]: MOVE      R3 R7        ; R3 := R7
129 [-]: JMP       137          ; PC := 137
130 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
131 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0xD168273F"]
132 [-]: GETGLOBAL R9 K8        ; R9 := 0xEC274B1A
133 [-]: LOADK     R10 K13      ; R10 := "Loved"
134 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
135 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
136 [-]: MOVE      R3 R7        ; R3 := R7
137 [-]: LOADNIL   R4 R4        ; R4 := nil
138 [-]: GETTABLE  R7 R0 K26    ; R7 := R0["mEventStageTag"]
139 [-]: GETGLOBAL R8 K27       ; R8 := EMPTY_SYMBOL
140 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 177
141 [-]: JMP       177          ; PC := 177
142 [-]: GETTABLE  R7 R0 K28    ; R7 := R0["mEventTransmissionTag"]
143 [-]: GETGLOBAL R8 K27       ; R8 := EMPTY_SYMBOL
144 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 177
145 [-]: JMP       177          ; PC := 177
146 [-]: GETGLOBAL R7 K11       ; R7 := gGameData
147 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7["0x2D0B8A86"]
148 [-]: CALL      R7 2 2       ; R7 := R7(R8)
149 [-]: GETTABLE  R8 R7 K30    ; R8 := R7["mGoals"]
150 [-]: LOADK     R9 K31       ; R9 := 1
151 [-]: LEN       R10 R8       ; R10 := # R8
152 [-]: LOADK     R11 K31      ; R11 := 1
153 [-]: FORPREP   R9 176       ; R9 -= R11; PC := 176
154 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
155 [-]: GETGLOBAL R14 K32      ; R14 := Engine
156 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["0xD09D7910"]
157 [-]: GETTABLE  R15 R13 K34  ; R15 := R13["mActivation"]
158 [-]: CALL      R14 2 2      ; R14 := R14(R15)
159 [-]: LE        0 R14 K22    ; if R14 > 0 then PC := 176
160 [-]: JMP       176          ; PC := 176
161 [-]: GETGLOBAL R14 K32      ; R14 := Engine
162 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["0xD09D7910"]
163 [-]: GETTABLE  R15 R13 K35  ; R15 := R13["mExpiry"]
164 [-]: CALL      R14 2 2      ; R14 := R14(R15)
165 [-]: LT        0 K22 R14    ; if 0 >= R14 then PC := 176
166 [-]: JMP       176          ; PC := 176
167 [-]: GETTABLE  R14 R13 K36  ; R14 := R13["mTag"]
168 [-]: GETTABLE  R15 R0 K26   ; R15 := R0["mEventStageTag"]
169 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETTABLE  R14 R0 K6    ; R14 := R0["mTransmissionSet"]
172 [-]: SELF      R14 R14 K7   ; R15 := R14; R14 := R14["0xD168273F"]
173 [-]: GETTABLE  R16 R0 K28   ; R16 := R0["mEventTransmissionTag"]
174 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
175 [-]: MOVE      R3 R14       ; R3 := R14
176 [-]: FORLOOP   R9 154       ; R9 += R11; if R9 <= R10 then begin PC := 154; R12 := R9 end
177 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
178 [-]: MOVE      R15 R3       ; R15 := R3
179 [-]: CALL      R14 2 2      ; R14 := R14(R15)
180 [-]: TEST      R14 1        ; if R14 then PC := 197
181 [-]: JMP       197          ; PC := 197
182 [-]: SELF      R14 R0 K37   ; R15 := R0; R14 := R0["0xA59699C7"]
183 [-]: MOVE      R16 R3       ; R16 := R3
184 [-]: LOADNIL   R17 R17      ; R17 := nil
185 [-]: MOVE      R18 R6       ; R18 := R6
186 [-]: MOVE      R19 R1       ; R19 := R1
187 [-]: MOVE      R20 R4       ; R20 := R4
188 [-]: CALL      R14 7 1      ; R14(R15,R16,R17,R18,R19,R20)
189 [-]: TEST      R6 0         ; if not R6 then PC := 197
190 [-]: JMP       197          ; PC := 197
191 [-]: GETGLOBAL R14 K11      ; R14 := gGameData
192 [-]: SELF      R14 R14 K38  ; R15 := R14; R14 := R14["0xA0BAE468"]
193 [-]: GETGLOBAL R16 K8       ; R16 := 0xEC274B1A
194 [-]: MOVE      R17 R5       ; R17 := R5
195 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
196 [-]: CALL      R14 0 1      ; R14(R15,...)
197 [-]: RETURN    R0 1         ; return 


; Function #313.2:
;
; Name:            
; Defined at line: 6537
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Loved"]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 30
  8 [-]: JMP       30           ; PC := 30
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mHubNpc"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 30
 13 [-]: JMP       30           ; PC := 30
 14 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["IsUnmasked"]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x966DE7DB"]
 19 [-]: GETGLOBAL R4 K5        ; R4 := 0xEC274B1A
 20 [-]: LOADK     R5 K6        ; R5 := "LovedOutro"
 21 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 22 [-]: CALL      R2 0 1       ; R2(R3,...)
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x201191EA
 24 [-]: LOADK     R3 K8        ; R3 := 0.5
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 27 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2["0x58DAD0C5"]
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: CALL      R2 3 1       ; R2(R3,R4)
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 31 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mTransmissionSet"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mSkipEndTrans"]
 36 [-]: TEST      R2 1         ; if R2 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETGLOBAL R2 K12       ; R2 := _T
 39 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["SkipVendorDialog"]
 40 [-]: TEST      R2 0         ; if not R2 then PC := 50
 41 [-]: JMP       50           ; PC := 50
 42 [-]: GETGLOBAL R2 K12       ; R2 := _T
 43 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["SkipVendorDialog"]
 44 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSpeakerName"]
 45 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 46 [-]: TEST      R2 0         ; if not R2 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: SETTABLE  R0 K11 K15   ; R0["mSkipEndTrans"] := "0x0"
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mTransmissionSet"]
 51 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0xD168273F"]
 52 [-]: GETGLOBAL R4 K5        ; R4 := 0xEC274B1A
 53 [-]: LOADK     R5 K17       ; R5 := "Bye"
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 56 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 57 [-]: MOVE      R4 R2        ; R4 := R2
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: SELF      R3 R0 K18    ; R4 := R0; R3 := R0["0xA59699C7"]
 62 [-]: MOVE      R5 R2        ; R5 := R2
 63 [-]: LOADNIL   R6 R6        ; R6 := nil
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: MOVE      R8 R1        ; R8 := R1
 66 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 67 [-]: RETURN    R0 1         ; return 


; Function #314:
;
; Name:            
; Defined at line: 6563
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideHud"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideHud"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideHud"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideHud"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #315:
;
; Name:            
; Defined at line: 6571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideNotifications"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideNotifications"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideNotifications"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideNotifications"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #316:
;
; Name:            
; Defined at line: 6579
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideMapRedux"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideMapRedux"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideMapRedux"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideMapRedux"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #317:
;
; Name:            
; Defined at line: 6587
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideSquadOverlay"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideSquadOverlay"] := 0
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := math
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x8B011038"]
 12 [-]: LOADK     R3 K3        ; R3 := 0
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideSquadOverlay"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xF81722A2"]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 K7        ; R7 := 1
 19 [-]: LOADK     R8 K8        ; R8 := -1
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideSquadOverlay"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #318:
;
; Name:            
; Defined at line: 6595
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1["0x3E2F6BF"]
  3 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  4 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  5 [-]: TEST      R3 1         ; if R3 then PC := 40
  6 [-]: JMP       40           ; PC := 40
  7 [-]: SELF      R3 R1 K1     ; R4 := R1; R3 := R1["0x3E2F6BF"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5AF30A19"]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0xD425D6BD"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 40
 17 [-]: JMP       40           ; PC := 40
 18 [-]: SELF      R4 R1 K4     ; R5 := R1; R4 := R1["0x10DE083B"]
 19 [-]: SELF      R6 R3 K5     ; R7 := R3; R6 := R3["0x6DA72501"]
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3["0x6DA72501"]
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: SELF      R8 R0 K6     ; R9 := R0; R8 := R0["0x7F595CA7"]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: MUL       R8 R8 K7     ; R8 := R8 * 200
 26 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 27 [-]: LOADNIL   R8 R8        ; R8 := nil
 28 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 29 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 30 [-]: MOVE      R6 R4        ; R6 := R4
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4["0x8B598ED4"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 37 [-]: TEST      R5 0         ; if not R5 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R4 2         ; return R4
 40 [-]: LOADNIL   R5 R5        ; R5 := nil
 41 [-]: RETURN    R5 2         ; return R5
 42 [-]: RETURN    R0 1         ; return 


; Function #319:
;
; Name:            
; Defined at line: 6608
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: TEST      R1 0         ; if not R1 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R3 K0        ; R3 := table
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
  8 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["TACTICIAN"]
  9 [-]: CALL      R3 3 1       ; R3(R4,R5)
 10 [-]: JMP       25           ; PC := 25
 11 [-]: GETGLOBAL R3 K0        ; R3 := table
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["ARCHITECT"]
 16 [-]: CALL      R3 3 1       ; R3(R4,R5)
 17 [-]: TEST      R0 0         ; if not R0 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETGLOBAL R3 K0        ; R3 := table
 20 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["DECORATOR"]
 24 [-]: CALL      R3 3 1       ; R3(R4,R5)
 25 [-]: LOADK     R3 K6        ; R3 := 1
 26 [-]: LEN       R4 R2        ; R4 := # R2
 27 [-]: LOADK     R5 K6        ; R5 := 1
 28 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 29 [-]: GETGLOBAL R7 K7        ; R7 := gGameData
 30 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x8E3B3DA2"]
 31 [-]: GETTABLE  R9 R2 R6     ; R9 := R2[R6]
 32 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 33 [-]: TEST      R7 0         ; if not R7 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: RETURN    R7 2         ; return R7
 37 [-]: FORLOOP   R3 29        ; R3 += R5; if R3 <= R4 then begin PC := 29; R6 := R3 end
 38 [-]: MOVE      R7 R0        ; R7 := R0
 39 [-]: RETURN    R7 2         ; return R7
 40 [-]: RETURN    R0 1         ; return 


; Function #320:
;
; Name:            
; Defined at line: 6629
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == 0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: EQ        1 R0 K1      ; if R0 == 1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #321:
;
; Name:            
; Defined at line: 6633
; #Upvalues:       3
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: CLOSURE   R7 0         ; R7 := closure(Function #321.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R8 U1        ; R8 := U1
  6 [-]: CALL      R8 1 2       ; R8 := R8()
  7 [-]: CLOSURE   R9 1         ; R9 := closure(Function #321.2)
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: MOVE      R0 R5        ; R0 := R5
 10 [-]: SETTABLE  R8 K0 R9     ; R8["ConfirmConditionalWord"] := R9
 11 [-]: CLOSURE   R9 2         ; R9 := closure(Function #321.3)
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R5        ; R0 := R5
 14 [-]: SETTABLE  R8 K1 R9     ; R8["OSKConfirmConditionalWord"] := R9
 15 [-]: CLOSURE   R9 3         ; R9 := closure(Function #321.4)
 16 [-]: MOVE      R0 R7        ; R0 := R7
 17 [-]: MOVE      R0 R4        ; R0 := R4
 18 [-]: SETTABLE  R8 K2 R9     ; R8["ConditionalFirstConfirm"] := R9
 19 [-]: GETGLOBAL R9 K3        ; R9 := Engine
 20 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["0x1398DAFB"]
 21 [-]: CALL      R9 1 2       ; R9 := R9()
 22 [-]: TEST      R9 0         ; if not R9 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETUPVAL  R9 U2        ; R9 := U2
 25 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["0x5AE6E363"]
 26 [-]: MOVE      R10 R3       ; R10 := R3
 27 [-]: LOADK     R11 K2       ; R11 := "ConditionalFirstConfirm"
 28 [-]: LOADK     R12 K6       ; R12 := 3
 29 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 30 [-]: JMP       35           ; PC := 35
 31 [-]: MOVE      R9 R7        ; R9 := R7
 32 [-]: MOVE      R10 R2       ; R10 := R2
 33 [-]: MOVE      R11 R6       ; R11 := R6
 34 [-]: CALL      R9 3 1       ; R9(R10,R11)
 35 [-]: RETURN    R0 1         ; return 


; Function #321.1:
;
; Name:            
; Defined at line: 6635
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 K0        ; R5 := ""
  5 [-]: LOADK     R6 K1        ; R6 := 20
  6 [-]: LOADK     R7 K2        ; R7 := "ConfirmConditionalWord"
  7 [-]: LOADK     R8 K3        ; R8 := "OSKConfirmConditionalWord"
  8 [-]: LOADNIL   R9 R11       ; R9 := R10 := R11 := nil
  9 [-]: MOVE      R12 R1       ; R12 := R1
 10 [-]: CALL      R2 11 3      ; R2,R3 := R2(R3,R4,R5,R6,R7,R8,R9,R10,R11,R12)
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3["0x458F27A9"]
 17 [-]: LOADK     R6 K6        ; R6 := "SetConditionalWord"
 18 [-]: GETUPVAL  R7 U2        ; R7 := U2
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: RETURN    R0 1         ; return 


; Function #321.2:
;
; Name:            
; Defined at line: 6643
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xF595ADDE
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K1        ; R4 := Engine
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["CI_SELECT"]
  6 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x458F27A9"]
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: MOVE      R6 R0        ; R6 := R0
 12 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 13 [-]: RETURN    R0 1         ; return 


; Function #321.3:
;
; Name:            
; Defined at line: 6649
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: TEST      R0 1         ; if R0 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x458F27A9"]
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #321.4:
;
; Name:            
; Defined at line: 6655
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #322:
;
; Name:            
; Defined at line: 6669
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameRules
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 40
  5 [-]: JMP       40           ; PC := 40
  6 [-]: GETGLOBAL R1 K1        ; R1 := gGameRules
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8B598ED4"]
  8 [-]: GETGLOBAL R3 K3        ; R3 := gLotusBaseGameRulesType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 40
 11 [-]: JMP       40           ; PC := 40
 12 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 14 [-]: GETGLOBAL R3 K5        ; R3 := CETUS_NODE_TAG
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K6        ; R3 := SOUND_SET_EIDOLON
 17 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 19 [-]: GETGLOBAL R3 K7        ; R3 := PLAINS_NODE_TAG
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K6        ; R3 := SOUND_SET_EIDOLON
 22 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 24 [-]: GETGLOBAL R3 K8        ; R3 := ORB_VALLIS_NODE_TAG
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: GETGLOBAL R3 K9        ; R3 := SOUND_SET_ORB_VALLIS
 27 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 28 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 29 [-]: GETGLOBAL R3 K10       ; R3 := FORTUNA_NODE_TAG
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETGLOBAL R3 K11       ; R3 := SOUND_SET_FORTUNA
 32 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 33 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 34 [-]: GETGLOBAL R3 K1        ; R3 := gGameRules
 35 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xB8637349"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["location"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: GETTABLE  R0 R1 R2     ; R0 := R1[R2]
 40 [-]: EQ        0 R0 K14     ; if R0 ~= nil then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: GETGLOBAL R0 K6        ; R0 := SOUND_SET_EIDOLON
 43 [-]: RETURN    R0 2         ; return R0
 44 [-]: RETURN    R0 1         ; return 


; Function #323:
;
; Name:            
; Defined at line: 6685
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R2 1         ; if R2 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R2 K0        ; R2 := 0
  4 [-]: LOADK     R3 K1        ; R3 := 64
  5 [-]: SELF      R4 R1 K2     ; R5 := R1; R4 := R1["0x11FF52EA"]
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["x"]
  8 [-]: GETTABLE  R6 R4 K4     ; R6 := R4["y"]
  9 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 10 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 11 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x26581636"]
 12 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 13 [-]: MOVE      R9 R1        ; R9 := R1
 14 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 15 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x26581636"]
 16 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 17 [-]: MOVE      R9 R1        ; R9 := R1
 18 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 19 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 20 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 21 [-]: LOADK     R9 K9        ; R9 := "_width"
 22 [-]: MOVE      R10 R5       ; R10 := R5
 23 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 24 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 25 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 26 [-]: LOADK     R9 K10       ; R9 := "_height"
 27 [-]: MOVE      R10 R3       ; R10 := R3
 28 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 29 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 30 [-]: LOADK     R8 K6        ; R8 := "Title.BookendLeft"
 31 [-]: LOADK     R9 K11       ; R9 := "_y"
 32 [-]: ADD       R10 K12 R2   ; R10 := 22 + R2
 33 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 34 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 35 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 36 [-]: LOADK     R9 K9        ; R9 := "_width"
 37 [-]: MOVE      R10 R5       ; R10 := R5
 38 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 39 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 40 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 41 [-]: LOADK     R9 K10       ; R9 := "_height"
 42 [-]: MOVE      R10 R3       ; R10 := R3
 43 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 44 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x1C19D966"]
 45 [-]: LOADK     R8 K7        ; R8 := "Title.BookendRight"
 46 [-]: LOADK     R9 K11       ; R9 := "_y"
 47 [-]: ADD       R10 K12 R2   ; R10 := 22 + R2
 48 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 49 [-]: RETURN    R0 1         ; return 


; Function #324:
;
; Name:            
; Defined at line: 6700
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R3 K0        ; R3 := _G
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
  3 [-]: TEST      R3 1         ; if R3 then PC := 202
  4 [-]: JMP       202          ; PC := 202
  5 [-]: GETGLOBAL R3 K0        ; R3 := _G
  6 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  7 [-]: SETTABLE  R3 K1 R4     ; R3["EliteAlertTypeNameCache"] := R4
  8 [-]: GETGLOBAL R3 K0        ; R3 := _G
  9 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SETTABLE  R3 K2 R4     ; R3["suits"] := R4
 12 [-]: GETGLOBAL R3 K0        ; R3 := _G
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 14 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 15 [-]: SETTABLE  R3 K3 R4     ; R3["weapons"] := R4
 16 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xC17093D6"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3["0xB68BBE7C"]
 20 [-]: GETGLOBAL R6 K7        ; R6 := 0x2C00D429
 21 [-]: LOADK     R7 K8        ; R7 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
 22 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 23 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0xECFDD17
 25 [-]: MOVE      R6 R4        ; R6 := R4
 26 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 27 [-]: JMP       79           ; PC := 79
 28 [-]: SELF      R10 R9 K10   ; R11 := R9; R10 := R9["0x8292A1EF"]
 29 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 30 [-]: GETGLOBAL R11 K11      ; R11 := Engine
 31 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["Item_Suits"]
 32 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 79
 33 [-]: JMP       79           ; PC := 79
 34 [-]: SELF      R10 R9 K13   ; R11 := R9; R10 := R9["0x820C2921"]
 35 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 36 [-]: TEST      R10 1        ; if R10 then PC := 79
 37 [-]: JMP       79           ; PC := 79
 38 [-]: SELF      R10 R9 K14   ; R11 := R9; R10 := R9["0x7D5774ED"]
 39 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 40 [-]: TEST      R10 0        ; if not R10 then PC := 79
 41 [-]: JMP       79           ; PC := 79
 42 [-]: SELF      R10 R9 K15   ; R11 := R9; R10 := R9["0x1B252E3C"]
 43 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 44 [-]: GETGLOBAL R11 K16      ; R11 := string
 45 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0xDE44F664"]
 46 [-]: MOVE      R12 R10      ; R12 := R10
 47 [-]: LOADK     R13 K18      ; R13 := "Prime"
 48 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 49 [-]: TEST      R11 1        ; if R11 then PC := 79
 50 [-]: JMP       79           ; PC := 79
 51 [-]: GETGLOBAL R11 K16      ; R11 := string
 52 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0xDE44F664"]
 53 [-]: MOVE      R12 R10      ; R12 := R10
 54 [-]: LOADK     R13 K19      ; R13 := "Operator"
 55 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 56 [-]: TEST      R11 1        ; if R11 then PC := 79
 57 [-]: JMP       79           ; PC := 79
 58 [-]: GETGLOBAL R11 K16      ; R11 := string
 59 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0xDE44F664"]
 60 [-]: MOVE      R12 R10      ; R12 := R10
 61 [-]: LOADK     R13 K20      ; R13 := "Umbra"
 62 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 63 [-]: TEST      R11 1        ; if R11 then PC := 79
 64 [-]: JMP       79           ; PC := 79
 65 [-]: GETGLOBAL R11 K16      ; R11 := string
 66 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0xDE44F664"]
 67 [-]: MOVE      R12 R10      ; R12 := R10
 68 [-]: LOADK     R13 K21      ; R13 := "PlayerPowerSuit"
 69 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 70 [-]: TEST      R11 1        ; if R11 then PC := 79
 71 [-]: JMP       79           ; PC := 79
 72 [-]: GETGLOBAL R11 K22      ; R11 := table
 73 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["0xE6450C9D"]
 74 [-]: GETGLOBAL R12 K0       ; R12 := _G
 75 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["EliteAlertTypeNameCache"]
 76 [-]: GETTABLE  R12 R12 K2   ; R12 := R12["suits"]
 77 [-]: MOVE      R13 R10      ; R13 := R10
 78 [-]: CALL      R11 3 1      ; R11(R12,R13)
 79 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 28; R7 := R8 end
 80 [-]: JMP       28           ; PC := 28
 81 [-]: SELF      R11 R3 K6    ; R12 := R3; R11 := R3["0xB68BBE7C"]
 82 [-]: GETGLOBAL R13 K24      ; R13 := gLotusWeaponType
 83 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 84 [-]: GETGLOBAL R12 K9       ; R12 := 0xECFDD17
 85 [-]: MOVE      R13 R11      ; R13 := R11
 86 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 87 [-]: JMP       200          ; PC := 200
 88 [-]: SELF      R17 R16 K10  ; R18 := R16; R17 := R16["0x8292A1EF"]
 89 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 90 [-]: GETGLOBAL R18 K11      ; R18 := Engine
 91 [-]: GETTABLE  R18 R18 K25  ; R18 := R18["Item_Pistols"]
 92 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 102
 93 [-]: JMP       102          ; PC := 102
 94 [-]: GETGLOBAL R18 K11      ; R18 := Engine
 95 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["Item_LongGuns"]
 96 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 102
 97 [-]: JMP       102          ; PC := 102
 98 [-]: GETGLOBAL R18 K11      ; R18 := Engine
 99 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["Item_Melee"]
100 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 200
101 [-]: JMP       200          ; PC := 200
102 [-]: SELF      R18 R16 K28  ; R19 := R16; R18 := R16["0x42300EB5"]
103 [-]: CALL      R18 2 2      ; R18 := R18(R19)
104 [-]: GETGLOBAL R19 K29      ; R19 := EMPTY_SYMBOL
105 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 200
106 [-]: JMP       200          ; PC := 200
107 [-]: SELF      R18 R16 K30  ; R19 := R16; R18 := R16["0x5AAE9A6D"]
108 [-]: CALL      R18 2 2      ; R18 := R18(R19)
109 [-]: TEST      R18 0        ; if not R18 then PC := 200
110 [-]: JMP       200          ; PC := 200
111 [-]: SELF      R18 R16 K13  ; R19 := R16; R18 := R16["0x820C2921"]
112 [-]: CALL      R18 2 2      ; R18 := R18(R19)
113 [-]: TEST      R18 1        ; if R18 then PC := 200
114 [-]: JMP       200          ; PC := 200
115 [-]: SELF      R18 R16 K14  ; R19 := R16; R18 := R16["0x7D5774ED"]
116 [-]: CALL      R18 2 2      ; R18 := R18(R19)
117 [-]: TEST      R18 0        ; if not R18 then PC := 200
118 [-]: JMP       200          ; PC := 200
119 [-]: SELF      R18 R16 K15  ; R19 := R16; R18 := R16["0x1B252E3C"]
120 [-]: CALL      R18 2 2      ; R18 := R18(R19)
121 [-]: GETGLOBAL R19 K16      ; R19 := string
122 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
123 [-]: MOVE      R20 R18      ; R20 := R18
124 [-]: LOADK     R21 K18      ; R21 := "Prime"
125 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
126 [-]: TEST      R19 1        ; if R19 then PC := 200
127 [-]: JMP       200          ; PC := 200
128 [-]: GETGLOBAL R19 K16      ; R19 := string
129 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
130 [-]: MOVE      R20 R18      ; R20 := R18
131 [-]: LOADK     R21 K31      ; R21 := "MK1"
132 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
133 [-]: TEST      R19 1        ; if R19 then PC := 200
134 [-]: JMP       200          ; PC := 200
135 [-]: GETGLOBAL R19 K16      ; R19 := string
136 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
137 [-]: MOVE      R20 R18      ; R20 := R18
138 [-]: LOADK     R21 K32      ; R21 := "Gear"
139 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
140 [-]: TEST      R19 1        ; if R19 then PC := 200
141 [-]: JMP       200          ; PC := 200
142 [-]: GETGLOBAL R19 K16      ; R19 := string
143 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
144 [-]: MOVE      R20 R18      ; R20 := R18
145 [-]: LOADK     R21 K33      ; R21 := "Wraith"
146 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
147 [-]: TEST      R19 1        ; if R19 then PC := 200
148 [-]: JMP       200          ; PC := 200
149 [-]: GETGLOBAL R19 K16      ; R19 := string
150 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
151 [-]: MOVE      R20 R18      ; R20 := R18
152 [-]: LOADK     R21 K34      ; R21 := "Vandal"
153 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
154 [-]: TEST      R19 1        ; if R19 then PC := 200
155 [-]: JMP       200          ; PC := 200
156 [-]: GETGLOBAL R19 K16      ; R19 := string
157 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
158 [-]: MOVE      R20 R18      ; R20 := R18
159 [-]: LOADK     R21 K35      ; R21 := "Modular"
160 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
161 [-]: TEST      R19 1        ; if R19 then PC := 200
162 [-]: JMP       200          ; PC := 200
163 [-]: GETGLOBAL R19 K16      ; R19 := string
164 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
165 [-]: MOVE      R20 R18      ; R20 := R18
166 [-]: LOADK     R21 K36      ; R21 := "Prisma"
167 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
168 [-]: TEST      R19 1        ; if R19 then PC := 200
169 [-]: JMP       200          ; PC := 200
170 [-]: GETGLOBAL R19 K16      ; R19 := string
171 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
172 [-]: MOVE      R20 R18      ; R20 := R18
173 [-]: LOADK     R21 K37      ; R21 := "Syndicate"
174 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
175 [-]: TEST      R19 1        ; if R19 then PC := 200
176 [-]: JMP       200          ; PC := 200
177 [-]: GETGLOBAL R19 K16      ; R19 := string
178 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
179 [-]: MOVE      R20 R18      ; R20 := R18
180 [-]: LOADK     R21 K38      ; R21 := " "
181 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
182 [-]: TEST      R19 1        ; if R19 then PC := 200
183 [-]: JMP       200          ; PC := 200
184 [-]: GETGLOBAL R19 K16      ; R19 := string
185 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0xDE44F664"]
186 [-]: MOVE      R20 R18      ; R20 := R18
187 [-]: LOADK     R21 K39      ; R21 := "StartingRifle"
188 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
189 [-]: TEST      R19 1        ; if R19 then PC := 200
190 [-]: JMP       200          ; PC := 200
191 [-]: GETGLOBAL R19 K22      ; R19 := table
192 [-]: GETTABLE  R19 R19 K23  ; R19 := R19["0xE6450C9D"]
193 [-]: GETGLOBAL R20 K0       ; R20 := _G
194 [-]: GETTABLE  R20 R20 K1   ; R20 := R20["EliteAlertTypeNameCache"]
195 [-]: GETTABLE  R20 R20 K3   ; R20 := R20["weapons"]
196 [-]: NEWTABLE  R21 0 2      ; R21 := {}
197 [-]: SETTABLE  R21 K40 R18  ; R21["itemName"] := R18
198 [-]: SETTABLE  R21 K41 R17  ; R21["category"] := R17
199 [-]: CALL      R19 3 1      ; R19(R20,R21)
200 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 88; R14 := R15 end
201 [-]: JMP       88           ; PC := 88
202 [-]: GETGLOBAL R19 K42      ; R19 := 0x77EE484C
203 [-]: CALL      R19 1 2      ; R19 := R19()
204 [-]: GETUPVAL  R20 U0       ; R20 := U0
205 [-]: GETTABLE  R20 R20 K43  ; R20 := R20["0xF81722A2"]
206 [-]: EQ        0 R2 K44     ; if R2 ~= nil then PC := 209
207 [-]: JMP       209          ; PC := 209
208 [-]: MOVE      R21 R0       ; R21 := R0
209 [-]: MOVE      R21 R1       ; R21 := R1
210 [-]: MOVE      R22 R2       ; R22 := R2
211 [-]: GETGLOBAL R23 K45      ; R23 := math
212 [-]: GETTABLE  R23 R23 K46  ; R23 := R23["0xF7005A7B"]
213 [-]: GETUPVAL  R24 U1       ; R24 := U1
214 [-]: CALL      R24 1 2      ; R24 := R24()
215 [-]: GETGLOBAL R25 K47      ; R25 := ELITE_ALERT_MISSION_INTERVAL
216 [-]: DIV       R25 R25 K48  ; R25 := R25 / 60
217 [-]: DIV       R24 R24 R25  ; R24 := R24 / R25
218 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
219 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
220 [-]: GETGLOBAL R21 K49      ; R21 := 0x9B21739C
221 [-]: GETGLOBAL R22 K50      ; R22 := 0xCD597D99
222 [-]: MOVE      R23 R20      ; R23 := R20
223 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
224 [-]: CALL      R21 0 1      ; R21(R22,...)
225 [-]: GETGLOBAL R21 K51      ; R21 := 0x290116D3
226 [-]: LOADK     R22 K52      ; R22 := 1
227 [-]: LOADK     R23 K53      ; R23 := 1000000
228 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
229 [-]: GETGLOBAL R22 K54      ; R22 := 0x12513525
230 [-]: MOVE      R23 R0       ; R23 := R0
231 [-]: CALL      R22 2 2      ; R22 := R22(R23)
232 [-]: GETGLOBAL R23 K49      ; R23 := 0x9B21739C
233 [-]: GETGLOBAL R24 K50      ; R24 := 0xCD597D99
234 [-]: ADD       R25 R22 R21  ; R25 := R22 + R21
235 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
236 [-]: CALL      R23 0 1      ; R23(R24,...)
237 [-]: GETGLOBAL R23 K0       ; R23 := _G
238 [-]: GETTABLE  R23 R23 K1   ; R23 := R23["EliteAlertTypeNameCache"]
239 [-]: GETTABLE  R23 R23 K2   ; R23 := R23["suits"]
240 [-]: GETGLOBAL R24 K51      ; R24 := 0x290116D3
241 [-]: LOADK     R25 K52      ; R25 := 1
242 [-]: GETGLOBAL R26 K0       ; R26 := _G
243 [-]: GETTABLE  R26 R26 K1   ; R26 := R26["EliteAlertTypeNameCache"]
244 [-]: GETTABLE  R26 R26 K2   ; R26 := R26["suits"]
245 [-]: LEN       R26 R26      ; R26 := # R26
246 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
247 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
248 [-]: GETGLOBAL R24 K16      ; R24 := string
249 [-]: GETTABLE  R24 R24 K55  ; R24 := R24["0x633C4246"]
250 [-]: MOVE      R25 R23      ; R25 := R23
251 [-]: LOADK     R26 K56      ; R26 := "/StoreItems"
252 [-]: LOADK     R27 K57      ; R27 := ""
253 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
254 [-]: GETGLOBAL R25 K7       ; R25 := 0x2C00D429
255 [-]: MOVE      R26 R24      ; R26 := R24
256 [-]: CALL      R25 2 2      ; R25 := R25(R26)
257 [-]: GETGLOBAL R26 K16      ; R26 := string
258 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["0xDE44F664"]
259 [-]: MOVE      R27 R24      ; R27 := R24
260 [-]: LOADK     R28 K58      ; R28 := "/Anti"
261 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
262 [-]: TEST      R26 0        ; if not R26 then PC := 276
263 [-]: JMP       276          ; PC := 276
264 [-]: GETGLOBAL R26 K16      ; R26 := string
265 [-]: GETTABLE  R26 R26 K59  ; R26 := R26["0x7B782033"]
266 [-]: MOVE      R27 R24      ; R27 := R24
267 [-]: LOADK     R28 K52      ; R28 := 1
268 [-]: GETGLOBAL R29 K16      ; R29 := string
269 [-]: GETTABLE  R29 R29 K60  ; R29 := R29["0xC6772A8A"]
270 [-]: MOVE      R30 R24      ; R30 := R24
271 [-]: CALL      R29 2 2      ; R29 := R29(R30)
272 [-]: SUB       R29 R29 K61  ; R29 := R29 - 4
273 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
274 [-]: LOADK     R27 K62      ; R27 := "Nova"
275 [-]: CONCAT    R24 R26 R27  ; R24 := R26 .. R27
276 [-]: GETGLOBAL R26 K7       ; R26 := 0x2C00D429
277 [-]: MOVE      R27 R24      ; R27 := R24
278 [-]: LOADK     R28 K63      ; R28 := "BaseSuit"
279 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
280 [-]: CALL      R26 2 2      ; R26 := R26(R27)
281 [-]: NEWTABLE  R27 0 2      ; R27 := {}
282 [-]: GETGLOBAL R28 K65      ; R28 := Game
283 [-]: GETTABLE  R28 R28 K66  ; R28 := R28["AVATAR_ABILITY_STRENGTH"]
284 [-]: SETTABLE  R27 K64 R28  ; R27["value"] := R28
285 [-]: SETTABLE  R27 K67 K68  ; R27["label"] := "/Game/AVATAR_ABILITY_STRENGTH"
286 [-]: GETGLOBAL R28 K0       ; R28 := _G
287 [-]: GETTABLE  R28 R28 K1   ; R28 := R28["EliteAlertTypeNameCache"]
288 [-]: GETTABLE  R28 R28 K3   ; R28 := R28["weapons"]
289 [-]: GETGLOBAL R29 K51      ; R29 := 0x290116D3
290 [-]: LOADK     R30 K52      ; R30 := 1
291 [-]: GETGLOBAL R31 K0       ; R31 := _G
292 [-]: GETTABLE  R31 R31 K1   ; R31 := R31["EliteAlertTypeNameCache"]
293 [-]: GETTABLE  R31 R31 K3   ; R31 := R31["weapons"]
294 [-]: LEN       R31 R31      ; R31 := # R31
295 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
296 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
297 [-]: GETTABLE  R29 R28 K40  ; R29 := R28["itemName"]
298 [-]: GETGLOBAL R30 K16      ; R30 := string
299 [-]: GETTABLE  R30 R30 K55  ; R30 := R30["0x633C4246"]
300 [-]: MOVE      R31 R29      ; R31 := R29
301 [-]: LOADK     R32 K56      ; R32 := "/StoreItems"
302 [-]: LOADK     R33 K57      ; R33 := ""
303 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
304 [-]: GETGLOBAL R31 K7       ; R31 := 0x2C00D429
305 [-]: MOVE      R32 R30      ; R32 := R30
306 [-]: CALL      R31 2 2      ; R31 := R31(R32)
307 [-]: GETGLOBAL R32 K7       ; R32 := 0x2C00D429
308 [-]: MOVE      R33 R30      ; R33 := R30
309 [-]: LOADK     R34 K18      ; R34 := "Prime"
310 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
311 [-]: CALL      R32 2 2      ; R32 := R32(R33)
312 [-]: NEWTABLE  R33 0 2      ; R33 := {}
313 [-]: GETUPVAL  R34 U0       ; R34 := U0
314 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["0xF81722A2"]
315 [-]: GETTABLE  R35 R28 K41  ; R35 := R28["category"]
316 [-]: GETGLOBAL R36 K11      ; R36 := Engine
317 [-]: GETTABLE  R36 R36 K27  ; R36 := R36["Item_Melee"]
318 [-]: EQ        1 R35 R36    ; if R35 == R36 then PC := 321
319 [-]: JMP       321          ; PC := 321
320 [-]: MOVE      R35 R0       ; R35 := R0
321 [-]: MOVE      R35 R1       ; R35 := R1
322 [-]: GETGLOBAL R36 K65      ; R36 := Game
323 [-]: GETTABLE  R36 R36 K69  ; R36 := R36["WEAPON_MELEE_DAMAGE"]
324 [-]: GETGLOBAL R37 K65      ; R37 := Game
325 [-]: GETTABLE  R37 R37 K70  ; R37 := R37["WEAPON_DAMAGE_AMOUNT"]
326 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
327 [-]: SETTABLE  R33 K64 R34  ; R33["value"] := R34
328 [-]: SETTABLE  R33 K67 K71  ; R33["label"] := "/Game/WEAPON_DAMAGE_AMOUNT"
329 [-]: GETGLOBAL R34 K49      ; R34 := 0x9B21739C
330 [-]: MOVE      R35 R19      ; R35 := R19
331 [-]: CALL      R34 2 1      ; R34(R35)
332 [-]: GETGLOBAL R34 K72      ; R34 := 0x93B1256B
333 [-]: LOADK     R35 K73      ; R35 := "EliteAlert: generated boosts for "
334 [-]: MOVE      R36 R0       ; R36 := R0
335 [-]: LOADK     R37 K74      ; R37 := ": suitType="
336 [-]: MOVE      R38 R24      ; R38 := R24
337 [-]: LOADK     R39 K75      ; R39 := " wepType="
338 [-]: MOVE      R40 R30      ; R40 := R30
339 [-]: CONCAT    R35 R35 R40  ; R35 := R35 .. R36 .. R37 .. R38 .. R39 .. R40
340 [-]: CALL      R34 2 1      ; R34(R35)
341 [-]: MOVE      R34 R23      ; R34 := R23
342 [-]: MOVE      R35 R25      ; R35 := R25
343 [-]: MOVE      R36 R26      ; R36 := R26
344 [-]: MOVE      R37 R27      ; R37 := R27
345 [-]: MOVE      R38 R29      ; R38 := R29
346 [-]: MOVE      R39 R31      ; R39 := R31
347 [-]: MOVE      R40 R32      ; R40 := R32
348 [-]: MOVE      R41 R33      ; R41 := R33
349 [-]: MOVE      R42 R20      ; R42 := R20
350 [-]: RETURN    R34 10       ; return R34,R35,R36,R37,R38,R39,R40,R41,R42
351 [-]: RETURN    R0 1         ; return 


; Function #325:
;
; Name:            
; Defined at line: 6770
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Rank"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 53
  5 [-]: JMP       53           ; PC := 53
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["ResultItemType"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["Type"]
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 53
 14 [-]: JMP       53           ; PC := 53
 15 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 16 [-]: GETGLOBAL R3 K4        ; R3 := gGameData
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R2 K4        ; R2 := gGameData
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADNIL   R2 R2        ; R2 := nil
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 53
 30 [-]: JMP       53           ; PC := 53
 31 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mXPInfo"]
 32 [-]: LOADK     R4 K7        ; R4 := 1
 33 [-]: LEN       R5 R3        ; R5 := # R3
 34 [-]: LOADK     R6 K7        ; R6 := 1
 35 [-]: FORPREP   R4 52        ; R4 -= R6; PC := 52
 36 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 37 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mItemType"]
 38 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 39 [-]: MOVE      R10 R8       ; R10 := R8
 40 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 41 [-]: TEST      R9 1         ; if R9 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 52
 44 [-]: JMP       52           ; PC := 52
 45 [-]: GETGLOBAL R9 K9        ; R9 := gGameConfig
 46 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9["0x9E8E66BA"]
 47 [-]: GETTABLE  R11 R3 R7    ; R11 := R3[R7]
 48 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["mXP"]
 49 [-]: MOVE      R12 R8       ; R12 := R8
 50 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 51 [-]: SETTABLE  R0 K1 R9     ; R0["Rank"] := R9
 52 [-]: FORLOOP   R4 36        ; R4 += R6; if R4 <= R5 then begin PC := 36; R7 := R4 end
 53 [-]: RETURN    R0 1         ; return 


; Function #326:
;
; Name:            
; Defined at line: 6788
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 48
  5 [-]: JMP       48           ; PC := 48
  6 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  9 [-]: GETTABLE  R1 R3 K3     ; R1 := R3["UIStyle_FloatingContentHighlight"]
 10 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 13 [-]: GETTABLE  R2 R3 K4     ; R2 := R3["UIStyle_Background1"]
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0xBBAE08CF"]
 16 [-]: GETUPVAL  R4 U1        ; R4 := U1
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xDDA3917C"]
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: MOVE      R6 R1        ; R6 := R1
 20 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xBBAE08CF"]
 24 [-]: GETUPVAL  R5 U1        ; R5 := U1
 25 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["0xDDA3917C"]
 26 [-]: MOVE      R6 R2        ; R6 := R2
 27 [-]: MOVE      R7 R1        ; R7 := R1
 28 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 29 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 30 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x8B598ED4"]
 31 [-]: GETGLOBAL R7 K8        ; R7 := gParticleSysType
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 40
 34 [-]: JMP       40           ; PC := 40
 35 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0["0x408A179A"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0["0x8B598ED4"]
 41 [-]: GETGLOBAL R7 K10       ; R7 := gLensFlareType
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0["0xA20F64C0"]
 46 [-]: MOVE      R7 R3        ; R7 := R3
 47 [-]: CALL      R5 3 1       ; R5(R6,R7)
 48 [-]: RETURN    R0 1         ; return 


; Function #327:
;
; Name:            
; Defined at line: 6810
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CLOSURE   R1 0         ; R1 := closure(Function #327.1)
  2 [-]: MOVE      R2 R1        ; R2 := R1
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  8 [-]: GETGLOBAL R3 K1        ; R3 := gGameData
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 78
 11 [-]: JMP       78           ; PC := 78
 12 [-]: GETGLOBAL R2 K2        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ShowNotification"]
 14 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 78
 15 [-]: JMP       78           ; PC := 78
 16 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xA7D57555"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K2        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["SkipMailNotification"]
 21 [-]: TEST      R3 1         ; if R3 then PC := 45
 22 [-]: JMP       45           ; PC := 45
 23 [-]: GETGLOBAL R3 K7        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xBDD0D625"]
 25 [-]: GETGLOBAL R4 K9        ; R4 := 0xE6DC43B0
 26 [-]: EQ        0 R2 K10     ; if R2 ~= 1 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: LOADK     R5 K11       ; R5 := "/Lotus/Language/Menu/Message"
 29 [-]: TEST      R5 1         ; if R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Menu/Messages"
 32 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 33 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 34 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 35 [-]: GETGLOBAL R4 K2        ; R4 := _T
 36 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["0x761CAD7D"]
 37 [-]: GETGLOBAL R5 K9        ; R5 := 0xE6DC43B0
 38 [-]: LOADK     R6 K14       ; R6 := "/Lotus/Language/Menu/Mailbox_NewMessagesNotification"
 39 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 40 [-]: SETTABLE  R7 K15 R2    ; R7["COUNT"] := R2
 41 [-]: SETTABLE  R7 K16 R3    ; R7["MESSAGES"] := R3
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: LOADK     R6 K17       ; R6 := "Mail"
 44 [-]: CALL      R4 3 1       ; R4(R5,R6)
 45 [-]: GETGLOBAL R4 K1        ; R4 := gGameData
 46 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x716FDD3E"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: LT        0 K19 R4     ; if 0 >= R4 then PC := 78
 49 [-]: JMP       78           ; PC := 78
 50 [-]: GETGLOBAL R4 K2        ; R4 := _T
 51 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["GetScreenRes"]
 52 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 78
 53 [-]: JMP       78           ; PC := 78
 54 [-]: GETGLOBAL R4 K2        ; R4 := _T
 55 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["0x4AFC37AA"]
 56 [-]: LOADK     R5 K22       ; R5 := "Inbox"
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: GETGLOBAL R5 K23       ; R5 := gFlashMgr
 59 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x616DD092"]
 60 [-]: MOVE      R7 R4        ; R7 := R4
 61 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 62 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 63 [-]: MOVE      R7 R5        ; R7 := R5
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: TEST      R6 0         ; if not R6 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 68 [-]: MOVE      R7 R0        ; R7 := R0
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: TEST      R6 1         ; if R6 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: GETGLOBAL R6 K2        ; R6 := _T
 73 [-]: SETTABLE  R6 K25 K26   ; R6["OpeningMailbox"] := "0x1"
 74 [-]: SELF      R6 R0 K27    ; R7 := R0; R6 := R0["0x61494587"]
 75 [-]: LOADK     R8 K10       ; R8 := 1
 76 [-]: CLOSURE   R9 1         ; R9 := closure(Function #327.2)
 77 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 78 [-]: GETGLOBAL R6 K2        ; R6 := _T
 79 [-]: SETTABLE  R6 K6 K28    ; R6["SkipMailNotification"] := "0x0"
 80 [-]: GETGLOBAL R6 K2        ; R6 := _T
 81 [-]: SETTABLE  R6 K29 K28   ; R6["gQueueMailbox"] := "0x0"
 82 [-]: RETURN    R0 1         ; return 


; Function #327.1:
;
; Name:            
; Defined at line: 6811
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gQueueMailbox"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= "0x1" then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K3        ; R0 := 0xE83D0CFD
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 12 [-]: GETGLOBAL R1 K6        ; R1 := gGameData
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 30
 15 [-]: JMP       30           ; PC := 30
 16 [-]: GETGLOBAL R0 K6        ; R0 := gGameData
 17 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x3D1A6885"]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: LEN       R0 R0        ; R0 := # R0
 20 [-]: LT        1 K8 R0      ; if 0 < R0 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R0 K6        ; R0 := gGameData
 23 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0xC6AB8F7"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: LEN       R0 R0        ; R0 := # R0
 26 [-]: LT        0 K8 R0      ; if 0 >= R0 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R0 R0        ; R0 := R0
 29 [-]: RETURN    R0 2         ; return R0
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #327.2:
;
; Name:            
; Defined at line: 6842
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIInputEnabled"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["RadialSolarMapOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["TeleportingToConsole"]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETGLOBAL R0 K0        ; R0 := _T
 14 [-]: SETTABLE  R0 K4 K5     ; R0["SkipMailNotification"] := "0x1"
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: SETTABLE  R0 K6 K5     ; R0["gQueueMailbox"] := "0x1"
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K7 K8     ; R0["OpeningMailbox"] := nil
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R0 K0        ; R0 := _T
 21 [-]: SETTABLE  R0 K9 K10    ; R0["ForceOpenScreen"] := "Inbox"
 22 [-]: GETGLOBAL R0 K11       ; R0 := 0x400E7765
 23 [-]: GETGLOBAL R1 K12       ; R1 := gGameRules
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: TEST      R0 1         ; if R0 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETGLOBAL R0 K12       ; R0 := gGameRules
 28 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0["0xC5926499"]
 29 [-]: CALL      R0 2 1       ; R0(R1)
 30 [-]: RETURN    R0 1         ; return 


; Function #328:
;
; Name:            
; Defined at line: 6867
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K1        ; R0 := gGameData
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x2D0B8A86"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x5B8EB241"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: JMP       18           ; PC := 18
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #329:
;
; Name:            
; Defined at line: 6871
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: CALL      R3 1 2       ; R3 := R3()
  3 [-]: SELF      R3 R3 K0     ; R4 := R3; R3 := R3["0xE29D2BBB"]
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: GETGLOBAL R6 K1        ; R6 := Lotus_Game
  6 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["FC_GRINEER"]
  7 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  8 [-]: LOADNIL   R4 R4        ; R4 := nil
  9 [-]: TEST      R2 0         ; if not R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETTABLE  R4 R2 K3     ; R4 := R2["mName"]
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 14 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Kingpins/NemesisViewer_Title"
 15 [-]: LOADNIL   R7 R7        ; R7 := nil
 16 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 17 [-]: MOVE      R4 R5        ; R4 := R5
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 19 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/Kingpins/NemesisControlledTerritory"
 20 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 21 [-]: SETTABLE  R7 K8 R4     ; R7["LICH_NAME"] := R4
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: SETTABLE  R3 K6 R5     ; R3["uniqueName"] := R5
 24 [-]: LOADK     R5 K9        ; R5 := 1
 25 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 26 [-]: MOVE      R7 R1        ; R7 := R1
 27 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 28 [-]: TEST      R6 1         ; if R6 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: GETTABLE  R5 R1 K11    ; R5 := R1["mRank"]
 31 [-]: LOADK     R6 K12       ; R6 := 55
 32 [-]: LOADK     R7 K13       ; R7 := 75
 33 [-]: EQ        0 R5 K9      ; if R5 ~= 1 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADK     R6 K14       ; R6 := 50
 36 [-]: LOADK     R7 K15       ; R7 := 60
 37 [-]: JMP       52           ; PC := 52
 38 [-]: EQ        0 R5 K16     ; if R5 ~= 2 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R6 K12       ; R6 := 55
 41 [-]: LOADK     R7 K17       ; R7 := 70
 42 [-]: JMP       52           ; PC := 52
 43 [-]: EQ        0 R5 K18     ; if R5 ~= 3 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: LOADK     R6 K13       ; R6 := 75
 46 [-]: LOADK     R7 K19       ; R7 := 90
 47 [-]: JMP       52           ; PC := 52
 48 [-]: LE        0 K20 R5     ; if 4 > R5 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADK     R6 K19       ; R6 := 90
 51 [-]: LOADK     R7 K21       ; R7 := 110
 52 [-]: GETGLOBAL R8 K23       ; R8 := math
 53 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["0x8B011038"]
 54 [-]: GETTABLE  R9 R3 K22    ; R9 := R3["minEnemyLevel"]
 55 [-]: MOVE      R10 R6       ; R10 := R6
 56 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 57 [-]: SETTABLE  R3 K22 R8    ; R3["minEnemyLevel"] := R8
 58 [-]: GETGLOBAL R8 K23       ; R8 := math
 59 [-]: GETTABLE  R8 R8 K24    ; R8 := R8["0x8B011038"]
 60 [-]: GETTABLE  R9 R3 K25    ; R9 := R3["maxEnemyLevel"]
 61 [-]: MOVE      R10 R7       ; R10 := R7
 62 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 63 [-]: SETTABLE  R3 K25 R8    ; R3["maxEnemyLevel"] := R8
 64 [-]: SETTABLE  R3 K26 K9    ; R3["difficulty"] := 1
 65 [-]: GETTABLE  R8 R3 K27    ; R8 := R3["missionType"]
 66 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 67 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["MT_DEFENSE"]
 68 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 71 [-]: JMP       107          ; PC := 107
 72 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 73 [-]: GETTABLE  R9 R9 K31    ; R9 := R9["MT_TERRITORY"]
 74 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 78
 75 [-]: JMP       78           ; PC := 78
 76 [-]: SETTABLE  R3 K29 K9    ; R3["maxWaveNum"] := 1
 77 [-]: JMP       107          ; PC := 107
 78 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 79 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["MT_SURVIVAL"]
 80 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 84
 81 [-]: JMP       84           ; PC := 84
 82 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 85 [-]: GETTABLE  R9 R9 K33    ; R9 := R9["MT_EXCAVATE"]
 86 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: SETTABLE  R3 K29 K30   ; R3["maxWaveNum"] := 5
 89 [-]: JMP       107          ; PC := 107
 90 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 91 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["MT_INTEL"]
 92 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: SETTABLE  R3 K29 K16   ; R3["maxWaveNum"] := 2
 95 [-]: JMP       107          ; PC := 107
 96 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
 97 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["MT_SABOTAGE"]
 98 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 102
 99 [-]: JMP       102          ; PC := 102
100 [-]: SETTABLE  R3 K29 K16   ; R3["maxWaveNum"] := 2
101 [-]: JMP       107          ; PC := 107
102 [-]: GETGLOBAL R9 K1        ; R9 := Lotus_Game
103 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["MT_ARTIFACT"]
104 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 107
105 [-]: JMP       107          ; PC := 107
106 [-]: SETTABLE  R3 K29 K20   ; R3["maxWaveNum"] := 4
107 [-]: RETURN    R3 2         ; return R3
108 [-]: RETURN    R0 1         ; return 


