code size: 1233
code size: 3
code size: 3
code size: 2
code size: 2
code size: 7
code size: 19
code size: 29
code size: 153
code size: 60
code size: 3
code size: 3
code size: 122
code size: 6
code size: 6
code size: 13
code size: 75
code size: 15
code size: 7
code size: 7
code size: 7
code size: 7
code size: 1
code size: 63
code size: 17
code size: 29
code size: 13
code size: 23
code size: 593
code size: 12
code size: 131
code size: 197
code size: 255
code size: 8
code size: 8
code size: 18
code size: 34
code size: 164
code size: 18
code size: 24
code size: 3
code size: 223
code size: 61
code size: 169
code size: 46
code size: 120
code size: 137
code size: 126
code size: 15
code size: 82
code size: 128
code size: 51
code size: 371
code size: 29
code size: 24
code size: 24
code size: 62
code size: 709
code size: 92
code size: 22
code size: 209
code size: 48
code size: 23
code size: 134
code size: 45
code size: 259
code size: 181
code size: 15
code size: 15
code size: 20
code size: 20
code size: 13
code size: 132
code size: 27
code size: 3
code size: 3
code size: 36
code size: 28
code size: 16
code size: 603
code size: 3
code size: 2
code size: 13
code size: 8
code size: 62
code size: 47
code size: 77
code size: 71
code size: 66
code size: 25
code size: 10
code size: 157
code size: 63
code size: 66
code size: 15
code size: 3
code size: 19
code size: 10
code size: 34
code size: 35
code size: 20
code size: 294
code size: 8
code size: 61
code size: 15
code size: 289
code size: 60
code size: 457
code size: 4
code size: 27
code size: 3
code size: 71
code size: 18
code size: 3
code size: 43
code size: 91
code size: 43
code size: 91
code size: 76
code size: 22
code size: 201
code size: 148
code size: 44
code size: 63
code size: 314
code size: 10
code size: 7
code size: 3
code size: 50
code size: 56
code size: 10
code size: 934
code size: 51
code size: 23
code size: 3
code size: 23
code size: 375
code size: 7
code size: 7
code size: 27
code size: 40
code size: 56
code size: 19
code size: 19
code size: 23
code size: 19
code size: 19
code size: 23
code size: 101
code size: 16
code size: 16
code size: 16
code size: 16
code size: 16
code size: 16
code size: 39
code size: 6
code size: 261
code size: 22
code size: 33
code size: 36
code size: 8
code size: 8
code size: 10
code size: 10
code size: 10
code size: 10
code size: 46
code size: 46
code size: 3
code size: 1
code size: 17
code size: 5
code size: 46
code size: 25
code size: 31
code size: 21
code size: 79
code size: 64
code size: 64
code size: 49
code size: 48
code size: 13
code size: 12
code size: 12
code size: 15
code size: 20
code size: 94
code size: 76
code size: 111
code size: 61
code size: 26
code size: 111
code size: 82
code size: 30
code size: 7
code size: 97
code size: 142
code size: 150
code size: 10
code size: 20
code size: 18
code size: 157
code size: 205
code size: 183
code size: 70
code size: 80
code size: 9
code size: 53
code size: 963
code size: 133
code size: 17
code size: 38
code size: 20
code size: 69
code size: 1
code size: 189
code size: 18
code size: 54
code size: 26
code size: 91
code size: 77
code size: 63
code size: 72
code size: 4
code size: 24
code size: 32
code size: 19
code size: 250
code size: 264
code size: 4
code size: 19
code size: 40
code size: 26
code size: 45
code size: 73
code size: 4
code size: 21
code size: 32
code size: 19
code size: 204
code size: 126
code size: 50
code size: 21
code size: 48
code size: 73
code size: 73
code size: 20
code size: 65
code size: 49
code size: 15
code size: 10
code size: 3
code size: 15
code size: 10
code size: 33
code size: 7
code size: 7
code size: 126
code size: 47
code size: 3
code size: 40
code size: 52
code size: 14
code size: 14
code size: 21
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis C:\wlua_dump\path\Lotus\Interface\DiegeticUpgradeCards.lua 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  189

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x329BDC44
  3 [-]: LOADK     R3 K1        ; R3 := "EE.Interface.Utilities"
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x329BDC44
  6 [-]: LOADK     R4 K2        ; R4 := "Lotus.Interface.UIUtilities"
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x329BDC44
  9 [-]: LOADK     R5 K3        ; R5 := "Lotus.Interface.LotusUtilities"
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: GETGLOBAL R5 K0        ; R5 := 0x329BDC44
 12 [-]: LOADK     R6 K4        ; R6 := "Lotus.Interface.CardUtilitiesRedux"
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: GETGLOBAL R6 K0        ; R6 := 0x329BDC44
 15 [-]: LOADK     R7 K5        ; R7 := "Lotus.Interface.StoreItemUtilities"
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0x329BDC44
 18 [-]: LOADK     R8 K6        ; R8 := "Lotus.Interface.Components.StatCompare"
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: GETGLOBAL R8 K0        ; R8 := 0x329BDC44
 21 [-]: LOADK     R9 K7        ; R9 := "Lotus.Interface.LoadoutUtilities"
 22 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 23 [-]: GETGLOBAL R9 K8        ; R9 := 0x7C282057
 24 [-]: LOADK     R10 K9       ; R10 := "/Lotus/Types/Game/Store/ProductsManifest"
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: LOADNIL   R10 R10      ; R10 := nil
 27 [-]: MOVE      R11 R0       ; R11 := R0
 28 [-]: LOADNIL   R12 R13      ; R12 := R13 := nil
 29 [-]: MOVE      R14 R0       ; R14 := R0
 30 [-]: LOADK     R15 K10      ; R15 := 5
 31 [-]: LOADK     R16 K11      ; R16 := 2
 32 [-]: LOADNIL   R17 R17      ; R17 := nil
 33 [-]: MOVE      R18 R0       ; R18 := R0
 34 [-]: LOADK     R19 K12      ; R19 := 16731212
 35 [-]: GETGLOBAL R20 K13      ; R20 := 0xEC274B1A
 36 [-]: LOADK     R21 K14      ; R21 := "ArchwingTeleportPos"
 37 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 38 [-]: LOADK     R21 K15      ; R21 := 180
 39 [-]: LOADNIL   R22 R22      ; R22 := nil
 40 [-]: MOVE      R23 R0       ; R23 := R0
 41 [-]: LOADNIL   R24 R32      ; R24 := R25 := R26 := R27 := R28 := R29 := R30 := R31 := R32 := nil
 42 [-]: LOADK     R33 K16      ; R33 := 60
 43 [-]: MUL       R34 R33 K17  ; R34 := R33 * 0.0099999997764826
 44 [-]: DIV       R34 K18 R34  ; R34 := 100 / R34
 45 [-]: LOADK     R35 K19      ; R35 := 50
 46 [-]: MUL       R36 R35 K17  ; R36 := R35 * 0.0099999997764826
 47 [-]: DIV       R36 K18 R36  ; R36 := 100 / R36
 48 [-]: LOADNIL   R37 R37      ; R37 := nil
 49 [-]: LOADK     R38 K20      ; R38 := 8
 50 [-]: NEWTABLE  R39 0 0      ; R39 := {}
 51 [-]: LOADK     R40 K21      ; R40 := 30
 52 [-]: LOADK     R41 K22      ; R41 := 0
 53 [-]: LOADK     R42 K22      ; R42 := 0
 54 [-]: LOADK     R43 K21      ; R43 := 30
 55 [-]: MOVE      R44 R0       ; R44 := R0
 56 [-]: LOADK     R45 K22      ; R45 := 0
 57 [-]: NEWTABLE  R46 0 0      ; R46 := {}
 58 [-]: NEWTABLE  R47 0 0      ; R47 := {}
 59 [-]: NEWTABLE  R48 0 0      ; R48 := {}
 60 [-]: LOADNIL   R49 R49      ; R49 := nil
 61 [-]: MOVE      R50 R0       ; R50 := R0
 62 [-]: MOVE      R51 R0       ; R51 := R0
 63 [-]: LOADNIL   R52 R55      ; R52 := R53 := R54 := R55 := nil
 64 [-]: LOADK     R56 K22      ; R56 := 0
 65 [-]: LOADNIL   R57 R59      ; R57 := R58 := R59 := nil
 66 [-]: NEWTABLE  R60 0 3      ; R60 := {}
 67 [-]: SETTABLE  R60 K23 K24  ; R60["SELECTING_SLOT"] := 1
 68 [-]: SETTABLE  R60 K25 K11  ; R60["SELECTING_CARD"] := 2
 69 [-]: SETTABLE  R60 K26 K27  ; R60["SELECTING_ARCANE"] := 3
 70 [-]: LOADNIL   R61 R62      ; R61 := R62 := nil
 71 [-]: LOADK     R63 K20      ; R63 := 8
 72 [-]: ADD       R64 R63 K24  ; R64 := R63 + 1
 73 [-]: ADD       R65 R63 K24  ; R65 := R63 + 1
 74 [-]: ADD       R66 R65 K24  ; R66 := R65 + 1
 75 [-]: LOADK     R67 K28      ; R67 := 4
 76 [-]: LOADNIL   R68 R69      ; R68 := R69 := nil
 77 [-]: LOADK     R70 K29      ; R70 := ""
 78 [-]: LOADNIL   R71 R72      ; R71 := R72 := nil
 79 [-]: MOVE      R73 R0       ; R73 := R0
 80 [-]: MOVE      R74 R0       ; R74 := R0
 81 [-]: LOADNIL   R75 R75      ; R75 := nil
 82 [-]: NEWTABLE  R76 0 0      ; R76 := {}
 83 [-]: NEWTABLE  R77 0 0      ; R77 := {}
 84 [-]: LOADNIL   R78 R78      ; R78 := nil
 85 [-]: LOADK     R79 K22      ; R79 := 0
 86 [-]: NEWTABLE  R80 0 2      ; R80 := {}
 87 [-]: NEWTABLE  R81 0 0      ; R81 := {}
 88 [-]: SETTABLE  R80 K30 R81  ; R80["mNormal"] := R81
 89 [-]: NEWTABLE  R81 0 0      ; R81 := {}
 90 [-]: SETTABLE  R80 K31 R81  ; R80["mPvp"] := R81
 91 [-]: NEWTABLE  R81 0 0      ; R81 := {}
 92 [-]: MOVE      R82 R1       ; R82 := R1
 93 [-]: MOVE      R83 R0       ; R83 := R0
 94 [-]: MOVE      R84 R0       ; R84 := R0
 95 [-]: LOADNIL   R85 R85      ; R85 := nil
 96 [-]: NEWTABLE  R86 0 5      ; R86 := {}
 97 [-]: SETTABLE  R86 K32 K22  ; R86["Slots"] := 0
 98 [-]: NEWTABLE  R87 0 0      ; R87 := {}
 99 [-]: SETTABLE  R86 K33 R87  ; R86["Arcanes"] := R87
100 [-]: SETTABLE  R86 K34 K35  ; R86["HasArcaneHelmet"] := "0x0"
101 [-]: SETTABLE  R86 K36 K37  ; R86["FocusedSlot"] := nil
102 [-]: SETTABLE  R86 K38 K37  ; R86["SelectedSlot"] := nil
103 [-]: MOVE      R87 R0       ; R87 := R0
104 [-]: LOADNIL   R88 R97      ; R88 := R89 := R90 := R91 := R92 := R93 := R94 := R95 := R96 := R97 := nil
105 [-]: NEWTABLE  R98 0 0      ; R98 := {}
106 [-]: GETGLOBAL R99 K39      ; R99 := 0x2C00D429
107 [-]: LOADK     R100 K40     ; R100 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
108 [-]: CALL      R99 2 2      ; R99 := R99(R100)
109 [-]: CLOSURE   R100 0       ; R100 := closure(Function #1)
110 [-]: MOVE      R0 R14       ; R0 := R14
111 [-]: SETGLOBAL R100 K41     ; IsInputBlocked := R100
112 [-]: SETGLOBAL R100 K42     ; 0x6FE7E740 := R100
113 [-]: CLOSURE   R100 1       ; R100 := closure(Function #2)
114 [-]: MOVE      R0 R46       ; R0 := R46
115 [-]: SETGLOBAL R100 K43     ; GetCards := R100
116 [-]: SETGLOBAL R100 K44     ; 0xD11BEB25 := R100
117 [-]: CLOSURE   R100 2       ; R100 := closure(Function #3)
118 [-]: SETGLOBAL R100 K45     ; GetSelectedCards := R100
119 [-]: SETGLOBAL R100 K46     ; 0x444C64CA := R100
120 [-]: CLOSURE   R100 3       ; R100 := closure(Function #4)
121 [-]: SETGLOBAL R100 K47     ; GetSelectedElement := R100
122 [-]: SETGLOBAL R100 K48     ; 0x89E93C1C := R100
123 [-]: CLOSURE   R100 4       ; R100 := closure(Function #5)
124 [-]: MOVE      R0 R79       ; R0 := R79
125 [-]: SETGLOBAL R100 K49     ; ShouldShowOmegaAttenStat := R100
126 [-]: SETGLOBAL R100 K50     ; 0x6821B838 := R100
127 [-]: CLOSURE   R100 5       ; R100 := closure(Function #6)
128 [-]: CLOSURE   R101 6       ; R101 := closure(Function #7)
129 [-]: CLOSURE   R102 7       ; R102 := closure(Function #8)
130 [-]: MOVE      R0 R74       ; R0 := R74
131 [-]: MOVE      R0 R2        ; R0 := R2
132 [-]: MOVE      R0 R100      ; R0 := R100
133 [-]: MOVE      R0 R27       ; R0 := R27
134 [-]: MOVE      R0 R10       ; R0 := R10
135 [-]: MOVE      R0 R57       ; R0 := R57
136 [-]: MOVE      R0 R71       ; R0 := R71
137 [-]: MOVE      R0 R101      ; R0 := R101
138 [-]: MOVE      R0 R72       ; R0 := R72
139 [-]: MOVE      R0 R24       ; R0 := R24
140 [-]: MOVE      R0 R83       ; R0 := R83
141 [-]: MOVE      R0 R84       ; R0 := R84
142 [-]: MOVE      R0 R4        ; R0 := R4
143 [-]: SETGLOBAL R102 K51     ; Shutdown := R102
144 [-]: SETGLOBAL R102 K52     ; 0x3C577FA3 := R102
145 [-]: CLOSURE   R102 8       ; R102 := closure(Function #9)
146 [-]: MOVE      R0 R14       ; R0 := R14
147 [-]: MOVE      R0 R68       ; R0 := R68
148 [-]: MOVE      R0 R2        ; R0 := R2
149 [-]: MOVE      R0 R50       ; R0 := R50
150 [-]: CLOSURE   R103 9       ; R103 := closure(Function #10)
151 [-]: MOVE      R0 R102      ; R0 := R102
152 [-]: SETGLOBAL R103 K53     ; TransitionOut := R103
153 [-]: SETGLOBAL R103 K54     ; 0x7097B1B4 := R103
154 [-]: CLOSURE   R103 10      ; R103 := closure(Function #11)
155 [-]: MOVE      R0 R97       ; R0 := R97
156 [-]: MOVE      R0 R96       ; R0 := R96
157 [-]: MOVE      R0 R13       ; R0 := R13
158 [-]: MOVE      R0 R61       ; R0 := R61
159 [-]: MOVE      R0 R60       ; R0 := R60
160 [-]: MOVE      R0 R2        ; R0 := R2
161 [-]: MOVE      R0 R94       ; R0 := R94
162 [-]: MOVE      R0 R95       ; R0 := R95
163 [-]: MOVE      R0 R93       ; R0 := R93
164 [-]: CLOSURE   R104 11      ; R104 := closure(Function #12)
165 [-]: MOVE      R0 R37       ; R0 := R37
166 [-]: CLOSURE   R105 12      ; R105 := closure(Function #13)
167 [-]: MOVE      R0 R61       ; R0 := R61
168 [-]: MOVE      R0 R2        ; R0 := R2
169 [-]: MOVE      R0 R60       ; R0 := R60
170 [-]: MOVE      R0 R27       ; R0 := R27
171 [-]: MOVE      R0 R103      ; R0 := R103
172 [-]: CLOSURE   R106 13      ; R106 := closure(Function #14)
173 [-]: MOVE      R0 R2        ; R0 := R2
174 [-]: MOVE      R0 R76       ; R0 := R76
175 [-]: CLOSURE   R107 14      ; R107 := closure(Function #15)
176 [-]: MOVE      R0 R13       ; R0 := R13
177 [-]: SETGLOBAL R107 K55     ; Pressed := R107
178 [-]: SETGLOBAL R107 K56     ; 0xBB68C6EB := R107
179 [-]: CLOSURE   R107 15      ; R107 := closure(Function #16)
180 [-]: MOVE      R0 R13       ; R0 := R13
181 [-]: SETGLOBAL R107 K57     ; Selected := R107
182 [-]: SETGLOBAL R107 K58     ; 0x399EF47B := R107
183 [-]: CLOSURE   R107 16      ; R107 := closure(Function #17)
184 [-]: MOVE      R0 R13       ; R0 := R13
185 [-]: SETGLOBAL R107 K59     ; Focused := R107
186 [-]: SETGLOBAL R107 K60     ; 0x7F34AD4D := R107
187 [-]: CLOSURE   R107 17      ; R107 := closure(Function #18)
188 [-]: MOVE      R0 R13       ; R0 := R13
189 [-]: SETGLOBAL R107 K61     ; Unfocused := R107
190 [-]: SETGLOBAL R107 K62     ; 0x64DA107D := R107
191 [-]: CLOSURE   R107 18      ; R107 := closure(Function #19)
192 [-]: CLOSURE   R108 19      ; R108 := closure(Function #20)
193 [-]: MOVE      R0 R32       ; R0 := R32
194 [-]: CLOSURE   R109 20      ; R109 := closure(Function #21)
195 [-]: CLOSURE   R110 21      ; R110 := closure(Function #22)
196 [-]: MOVE      R0 R24       ; R0 := R24
197 [-]: CLOSURE   R111 22      ; R111 := closure(Function #23)
198 [-]: MOVE      R0 R110      ; R0 := R110
199 [-]: CLOSURE   R112 23      ; R112 := closure(Function #24)
200 [-]: MOVE      R0 R2        ; R0 := R2
201 [-]: MOVE      R0 R80       ; R0 := R80
202 [-]: MOVE      R0 R10       ; R0 := R10
203 [-]: MOVE      R0 R24       ; R0 := R24
204 [-]: CLOSURE   R113 24      ; R113 := closure(Function #25)
205 [-]: MOVE      R0 R24       ; R0 := R24
206 [-]: MOVE      R0 R40       ; R0 := R40
207 [-]: MOVE      R0 R41       ; R0 := R41
208 [-]: MOVE      R0 R112      ; R0 := R112
209 [-]: MOVE      R0 R0        ; R0 := R0
210 [-]: MOVE      R0 R46       ; R0 := R46
211 [-]: MOVE      R0 R67       ; R0 := R67
212 [-]: MOVE      R0 R5        ; R0 := R5
213 [-]: MOVE      R0 R2        ; R0 := R2
214 [-]: MOVE      R0 R65       ; R0 := R65
215 [-]: MOVE      R0 R8        ; R0 := R8
216 [-]: MOVE      R0 R13       ; R0 := R13
217 [-]: MOVE      R0 R89       ; R0 := R89
218 [-]: MOVE      R0 R104      ; R0 := R104
219 [-]: MOVE      R0 R111      ; R0 := R111
220 [-]: MOVE      R0 R64       ; R0 := R64
221 [-]: MOVE      R0 R109      ; R0 := R109
222 [-]: MOVE      R0 R22       ; R0 := R22
223 [-]: CLOSURE   R114 25      ; R114 := closure(Function #26)
224 [-]: MOVE      R0 R5        ; R0 := R5
225 [-]: CLOSURE   R115 26      ; R115 := closure(Function #27)
226 [-]: MOVE      R0 R2        ; R0 := R2
227 [-]: MOVE      R0 R10       ; R0 := R10
228 [-]: MOVE      R0 R5        ; R0 := R5
229 [-]: MOVE      R0 R9        ; R0 := R9
230 [-]: CLOSURE   R116 27      ; R116 := closure(Function #28)
231 [-]: MOVE      R0 R27       ; R0 := R27
232 [-]: MOVE      R0 R24       ; R0 := R24
233 [-]: MOVE      R0 R46       ; R0 := R46
234 [-]: MOVE      R0 R10       ; R0 := R10
235 [-]: MOVE      R0 R114      ; R0 := R114
236 [-]: MOVE      R0 R115      ; R0 := R115
237 [-]: MOVE      R0 R5        ; R0 := R5
238 [-]: MOVE      R0 R79       ; R0 := R79
239 [-]: MOVE      R0 R77       ; R0 := R77
240 [-]: MOVE      R0 R78       ; R0 := R78
241 [-]: CLOSURE   R117 28      ; R117 := closure(Function #29)
242 [-]: MOVE      R0 R25       ; R0 := R25
243 [-]: CLOSURE   R118 29      ; R118 := closure(Function #30)
244 [-]: MOVE      R0 R25       ; R0 := R25
245 [-]: MOVE      R0 R26       ; R0 := R26
246 [-]: CLOSURE   R119 30      ; R119 := closure(Function #31)
247 [-]: MOVE      R0 R24       ; R0 := R24
248 [-]: MOVE      R0 R117      ; R0 := R117
249 [-]: MOVE      R0 R118      ; R0 := R118
250 [-]: CLOSURE   R120 31      ; R120 := closure(Function #32)
251 [-]: MOVE      R0 R24       ; R0 := R24
252 [-]: MOVE      R0 R46       ; R0 := R46
253 [-]: MOVE      R0 R5        ; R0 := R5
254 [-]: MOVE      R0 R2        ; R0 := R2
255 [-]: MOVE      R0 R106      ; R0 := R106
256 [-]: MOVE      R0 R12       ; R0 := R12
257 [-]: CLOSURE   R121 32      ; R121 := closure(Function #33)
258 [-]: MOVE      R0 R24       ; R0 := R24
259 [-]: MOVE      R0 R46       ; R0 := R46
260 [-]: MOVE      R0 R64       ; R0 := R64
261 [-]: MOVE      R0 R57       ; R0 := R57
262 [-]: MOVE      R0 R4        ; R0 := R4
263 [-]: CLOSURE   R122 33      ; R122 := closure(Function #34)
264 [-]: MOVE      R0 R121      ; R0 := R121
265 [-]: SETGLOBAL R122 K63     ; ShowMeleeCombos := R122
266 [-]: SETGLOBAL R122 K64     ; 0xCFB7269F := R122
267 [-]: CLOSURE   R122 34      ; R122 := closure(Function #35)
268 [-]: MOVE      R0 R2        ; R0 := R2
269 [-]: MOVE      R0 R10       ; R0 := R10
270 [-]: MOVE      R0 R5        ; R0 := R5
271 [-]: MOVE      R0 R9        ; R0 := R9
272 [-]: CLOSURE   R123 35      ; R123 := closure(Function #36)
273 [-]: CLOSURE   R124 36      ; R124 := closure(Function #37)
274 [-]: MOVE      R0 R84       ; R0 := R84
275 [-]: MOVE      R0 R123      ; R0 := R123
276 [-]: CLOSURE   R125 37      ; R125 := closure(Function #38)
277 [-]: MOVE      R0 R10       ; R0 := R10
278 [-]: MOVE      R0 R24       ; R0 := R24
279 [-]: MOVE      R0 R124      ; R0 := R124
280 [-]: MOVE      R0 R2        ; R0 := R2
281 [-]: CLOSURE   R126 38      ; R126 := closure(Function #39)
282 [-]: MOVE      R0 R124      ; R0 := R124
283 [-]: MOVE      R0 R17       ; R0 := R17
284 [-]: MOVE      R0 R7        ; R0 := R7
285 [-]: MOVE      R0 R84       ; R0 := R84
286 [-]: MOVE      R0 R73       ; R0 := R73
287 [-]: CLOSURE   R127 39      ; R127 := closure(Function #40)
288 [-]: MOVE      R0 R29       ; R0 := R29
289 [-]: MOVE      R0 R81       ; R0 := R81
290 [-]: CLOSURE   R128 40      ; R128 := closure(Function #41)
291 [-]: MOVE      R0 R52       ; R0 := R52
292 [-]: MOVE      R0 R7        ; R0 := R7
293 [-]: MOVE      R0 R53       ; R0 := R53
294 [-]: CLOSURE   R129 41      ; R129 := closure(Function #42)
295 [-]: MOVE      R0 R84       ; R0 := R84
296 [-]: MOVE      R0 R7        ; R0 := R7
297 [-]: MOVE      R0 R124      ; R0 := R124
298 [-]: MOVE      R0 R73       ; R0 := R73
299 [-]: MOVE      R0 R17       ; R0 := R17
300 [-]: MOVE      R0 R52       ; R0 := R52
301 [-]: MOVE      R0 R2        ; R0 := R2
302 [-]: MOVE      R0 R53       ; R0 := R53
303 [-]: MOVE      R0 R14       ; R0 := R14
304 [-]: CLOSURE   R130 42      ; R130 := closure(Function #43)
305 [-]: CLOSURE   R131 43      ; R131 := closure(Function #44)
306 [-]: MOVE      R0 R10       ; R0 := R10
307 [-]: MOVE      R0 R13       ; R0 := R13
308 [-]: MOVE      R0 R46       ; R0 := R46
309 [-]: MOVE      R0 R86       ; R0 := R86
310 [-]: MOVE      R0 R110      ; R0 := R110
311 [-]: MOVE      R0 R64       ; R0 := R64
312 [-]: MOVE      R0 R24       ; R0 := R24
313 [-]: MOVE      R0 R0        ; R0 := R0
314 [-]: MOVE      R0 R2        ; R0 := R2
315 [-]: MOVE      R0 R130      ; R0 := R130
316 [-]: MOVE      R0 R84       ; R0 := R84
317 [-]: MOVE      R0 R125      ; R0 := R125
318 [-]: MOVE      R0 R129      ; R0 := R129
319 [-]: MOVE      R0 R127      ; R0 := R127
320 [-]: MOVE      R0 R5        ; R0 := R5
321 [-]: MOVE      R0 R27       ; R0 := R27
322 [-]: CLOSURE   R132 44      ; R132 := closure(Function #45)
323 [-]: MOVE      R0 R29       ; R0 := R29
324 [-]: MOVE      R0 R10       ; R0 := R10
325 [-]: CLOSURE   R133 45      ; R133 := closure(Function #46)
326 [-]: MOVE      R0 R10       ; R0 := R10
327 [-]: MOVE      R0 R13       ; R0 := R13
328 [-]: MOVE      R0 R46       ; R0 := R46
329 [-]: MOVE      R0 R2        ; R0 := R2
330 [-]: MOVE      R0 R122      ; R0 := R122
331 [-]: MOVE      R0 R27       ; R0 := R27
332 [-]: MOVE      R0 R24       ; R0 := R24
333 [-]: MOVE      R0 R113      ; R0 := R113
334 [-]: MOVE      R0 R110      ; R0 := R110
335 [-]: MOVE      R0 R104      ; R0 := R104
336 [-]: MOVE      R0 R77       ; R0 := R77
337 [-]: MOVE      R0 R114      ; R0 := R114
338 [-]: MOVE      R0 R119      ; R0 := R119
339 [-]: MOVE      R0 R5        ; R0 := R5
340 [-]: MOVE      R0 R51       ; R0 := R51
341 [-]: MOVE      R0 R120      ; R0 := R120
342 [-]: MOVE      R0 R28       ; R0 := R28
343 [-]: MOVE      R0 R131      ; R0 := R131
344 [-]: CLOSURE   R134 46      ; R134 := closure(Function #47)
345 [-]: MOVE      R0 R2        ; R0 := R2
346 [-]: CLOSURE   R135 47      ; R135 := closure(Function #48)
347 [-]: MOVE      R0 R28       ; R0 := R28
348 [-]: MOVE      R0 R2        ; R0 := R2
349 [-]: MOVE      R0 R133      ; R0 := R133
350 [-]: CLOSURE   R136 48      ; R136 := closure(Function #49)
351 [-]: MOVE      R0 R13       ; R0 := R13
352 [-]: MOVE      R0 R124      ; R0 := R124
353 [-]: MOVE      R0 R16       ; R0 := R16
354 [-]: MOVE      R0 R15       ; R0 := R15
355 [-]: MOVE      R0 R8        ; R0 := R8
356 [-]: MOVE      R0 R54       ; R0 := R54
357 [-]: MOVE      R0 R55       ; R0 := R55
358 [-]: MOVE      R0 R86       ; R0 := R86
359 [-]: MOVE      R0 R38       ; R0 := R38
360 [-]: MOVE      R0 R63       ; R0 := R63
361 [-]: MOVE      R0 R14       ; R0 := R14
362 [-]: MOVE      R0 R28       ; R0 := R28
363 [-]: MOVE      R0 R103      ; R0 := R103
364 [-]: MOVE      R0 R59       ; R0 := R59
365 [-]: MOVE      R0 R2        ; R0 := R2
366 [-]: MOVE      R0 R5        ; R0 := R5
367 [-]: MOVE      R0 R135      ; R0 := R135
368 [-]: MOVE      R0 R46       ; R0 := R46
369 [-]: MOVE      R0 R24       ; R0 := R24
370 [-]: MOVE      R0 R31       ; R0 := R31
371 [-]: MOVE      R0 R89       ; R0 := R89
372 [-]: MOVE      R0 R134      ; R0 := R134
373 [-]: MOVE      R0 R65       ; R0 := R65
374 [-]: MOVE      R0 R64       ; R0 := R64
375 [-]: MOVE      R0 R111      ; R0 := R111
376 [-]: MOVE      R0 R67       ; R0 := R67
377 [-]: CLOSURE   R137 49      ; R137 := closure(Function #50)
378 [-]: MOVE      R0 R136      ; R0 := R136
379 [-]: MOVE      R0 R13       ; R0 := R13
380 [-]: MOVE      R0 R24       ; R0 := R24
381 [-]: MOVE      R0 R38       ; R0 := R38
382 [-]: MOVE      R0 R8        ; R0 := R8
383 [-]: MOVE      R0 R39       ; R0 := R39
384 [-]: MOVE      R0 R67       ; R0 := R67
385 [-]: MOVE      R0 R10       ; R0 := R10
386 [-]: MOVE      R0 R46       ; R0 := R46
387 [-]: MOVE      R0 R115      ; R0 := R115
388 [-]: MOVE      R0 R5        ; R0 := R5
389 [-]: MOVE      R0 R79       ; R0 := R79
390 [-]: MOVE      R0 R111      ; R0 := R111
391 [-]: MOVE      R0 R64       ; R0 := R64
392 [-]: CLOSURE   R138 50      ; R138 := closure(Function #51)
393 [-]: MOVE      R0 R27       ; R0 := R27
394 [-]: MOVE      R0 R14       ; R0 := R14
395 [-]: SETGLOBAL R138 K65     ; ModItemFocused := R138
396 [-]: SETGLOBAL R138 K66     ; 0x2B719325 := R138
397 [-]: CLOSURE   R138 51      ; R138 := closure(Function #52)
398 [-]: MOVE      R0 R27       ; R0 := R27
399 [-]: MOVE      R0 R14       ; R0 := R14
400 [-]: SETGLOBAL R138 K67     ; ModItemUnfocused := R138
401 [-]: SETGLOBAL R138 K68     ; 0xBAA973D := R138
402 [-]: CLOSURE   R138 52      ; R138 := closure(Function #53)
403 [-]: MOVE      R0 R27       ; R0 := R27
404 [-]: MOVE      R0 R14       ; R0 := R14
405 [-]: MOVE      R0 R2        ; R0 := R2
406 [-]: SETGLOBAL R138 K69     ; ModItemSelected := R138
407 [-]: SETGLOBAL R138 K70     ; 0x468DC5F8 := R138
408 [-]: CLOSURE   R138 53      ; R138 := closure(Function #54)
409 [-]: MOVE      R0 R27       ; R0 := R27
410 [-]: MOVE      R0 R14       ; R0 := R14
411 [-]: MOVE      R0 R2        ; R0 := R2
412 [-]: SETGLOBAL R138 K71     ; ModItemPressed := R138
413 [-]: SETGLOBAL R138 K72     ; 0xF81DDFCD := R138
414 [-]: CLOSURE   R91 54       ; R91 := closure(Function #55)
415 [-]: MOVE      R0 R13       ; R0 := R13
416 [-]: MOVE      R0 R2        ; R0 := R2
417 [-]: MOVE      R0 R64       ; R0 := R64
418 [-]: MOVE      R0 R111      ; R0 := R111
419 [-]: MOVE      R0 R65       ; R0 := R65
420 [-]: MOVE      R0 R8        ; R0 := R8
421 [-]: MOVE      R0 R24       ; R0 := R24
422 [-]: CLOSURE   R138 55      ; R138 := closure(Function #56)
423 [-]: MOVE      R0 R91       ; R0 := R91
424 [-]: CLOSURE   R139 56      ; R139 := closure(Function #57)
425 [-]: MOVE      R0 R27       ; R0 := R27
426 [-]: MOVE      R0 R46       ; R0 := R46
427 [-]: MOVE      R0 R28       ; R0 := R28
428 [-]: MOVE      R0 R58       ; R0 := R58
429 [-]: MOVE      R0 R2        ; R0 := R2
430 [-]: MOVE      R0 R5        ; R0 := R5
431 [-]: MOVE      R0 R135      ; R0 := R135
432 [-]: MOVE      R0 R134      ; R0 := R134
433 [-]: MOVE      R0 R14       ; R0 := R14
434 [-]: MOVE      R0 R78       ; R0 := R78
435 [-]: MOVE      R0 R124      ; R0 := R124
436 [-]: MOVE      R0 R77       ; R0 := R77
437 [-]: MOVE      R0 R116      ; R0 := R116
438 [-]: CLOSURE   R140 57      ; R140 := closure(Function #58)
439 [-]: CLOSURE   R141 58      ; R141 := closure(Function #59)
440 [-]: MOVE      R0 R24       ; R0 := R24
441 [-]: MOVE      R0 R140      ; R0 := R140
442 [-]: CLOSURE   R142 59      ; R142 := closure(Function #60)
443 [-]: MOVE      R0 R24       ; R0 := R24
444 [-]: MOVE      R0 R85       ; R0 := R85
445 [-]: MOVE      R0 R2        ; R0 := R2
446 [-]: CLOSURE   R143 60      ; R143 := closure(Function #61)
447 [-]: MOVE      R0 R142      ; R0 := R142
448 [-]: MOVE      R0 R79       ; R0 := R79
449 [-]: MOVE      R0 R137      ; R0 := R137
450 [-]: MOVE      R0 R139      ; R0 := R139
451 [-]: MOVE      R0 R105      ; R0 := R105
452 [-]: MOVE      R0 R60       ; R0 := R60
453 [-]: CLOSURE   R144 61      ; R144 := closure(Function #62)
454 [-]: MOVE      R0 R24       ; R0 := R24
455 [-]: MOVE      R0 R4        ; R0 := R4
456 [-]: MOVE      R0 R2        ; R0 := R2
457 [-]: MOVE      R0 R19       ; R0 := R19
458 [-]: MOVE      R0 R45       ; R0 := R45
459 [-]: CLOSURE   R145 62      ; R145 := closure(Function #63)
460 [-]: CLOSURE   R146 63      ; R146 := closure(Function #64)
461 [-]: MOVE      R0 R24       ; R0 := R24
462 [-]: MOVE      R0 R10       ; R0 := R10
463 [-]: MOVE      R0 R46       ; R0 := R46
464 [-]: MOVE      R0 R5        ; R0 := R5
465 [-]: MOVE      R0 R0        ; R0 := R0
466 [-]: MOVE      R0 R110      ; R0 := R110
467 [-]: MOVE      R0 R25       ; R0 := R25
468 [-]: MOVE      R0 R26       ; R0 := R26
469 [-]: MOVE      R0 R51       ; R0 := R51
470 [-]: MOVE      R0 R118      ; R0 := R118
471 [-]: MOVE      R0 R145      ; R0 := R145
472 [-]: MOVE      R0 R47       ; R0 := R47
473 [-]: MOVE      R0 R48       ; R0 := R48
474 [-]: MOVE      R0 R38       ; R0 := R38
475 [-]: MOVE      R0 R143      ; R0 := R143
476 [-]: MOVE      R0 R144      ; R0 := R144
477 [-]: MOVE      R0 R113      ; R0 := R113
478 [-]: MOVE      R0 R27       ; R0 := R27
479 [-]: MOVE      R0 R13       ; R0 := R13
480 [-]: MOVE      R0 R64       ; R0 := R64
481 [-]: MOVE      R0 R133      ; R0 := R133
482 [-]: CLOSURE   R147 64      ; R147 := closure(Function #65)
483 [-]: SETGLOBAL R147 K73     ; ResetRank := R147
484 [-]: SETGLOBAL R147 K74     ; 0xC416A719 := R147
485 [-]: CLOSURE   R147 65      ; R147 := closure(Function #66)
486 [-]: MOVE      R0 R14       ; R0 := R14
487 [-]: CLOSURE   R148 66      ; R148 := closure(Function #67)
488 [-]: MOVE      R0 R147      ; R0 := R147
489 [-]: SETGLOBAL R148 K75     ; CloseCommon := R148
490 [-]: SETGLOBAL R148 K76     ; 0x67135AB8 := R148
491 [-]: CLOSURE   R148 67      ; R148 := closure(Function #68)
492 [-]: MOVE      R0 R13       ; R0 := R13
493 [-]: MOVE      R0 R10       ; R0 := R10
494 [-]: MOVE      R0 R27       ; R0 := R27
495 [-]: MOVE      R0 R46       ; R0 := R46
496 [-]: MOVE      R0 R133      ; R0 := R133
497 [-]: CLOSURE   R94 68       ; R94 := closure(Function #69)
498 [-]: MOVE      R0 R13       ; R0 := R13
499 [-]: MOVE      R0 R148      ; R0 := R148
500 [-]: MOVE      R0 R131      ; R0 := R131
501 [-]: CLOSURE   R149 69      ; R149 := closure(Function #70)
502 [-]: MOVE      R0 R94       ; R0 := R94
503 [-]: SETGLOBAL R149 K77     ; RemoveAll := R149
504 [-]: SETGLOBAL R149 K78     ; 0xB1CB0D4B := R149
505 [-]: CLOSURE   R149 70      ; R149 := closure(Function #71)
506 [-]: MOVE      R0 R13       ; R0 := R13
507 [-]: MOVE      R0 R65       ; R0 := R65
508 [-]: MOVE      R0 R46       ; R0 := R46
509 [-]: MOVE      R0 R27       ; R0 := R27
510 [-]: MOVE      R0 R133      ; R0 := R133
511 [-]: CLOSURE   R150 71      ; R150 := closure(Function #72)
512 [-]: MOVE      R0 R13       ; R0 := R13
513 [-]: MOVE      R0 R64       ; R0 := R64
514 [-]: MOVE      R0 R46       ; R0 := R46
515 [-]: MOVE      R0 R27       ; R0 := R27
516 [-]: MOVE      R0 R133      ; R0 := R133
517 [-]: CLOSURE   R151 72      ; R151 := closure(Function #73)
518 [-]: MOVE      R0 R38       ; R0 := R38
519 [-]: MOVE      R0 R65       ; R0 := R65
520 [-]: MOVE      R0 R64       ; R0 := R64
521 [-]: MOVE      R0 R111      ; R0 := R111
522 [-]: MOVE      R0 R8        ; R0 := R8
523 [-]: MOVE      R0 R24       ; R0 := R24
524 [-]: MOVE      R0 R13       ; R0 := R13
525 [-]: CLOSURE   R152 73      ; R152 := closure(Function #74)
526 [-]: CLOSURE   R153 74      ; R153 := closure(Function #75)
527 [-]: MOVE      R0 R2        ; R0 := R2
528 [-]: MOVE      R0 R152      ; R0 := R152
529 [-]: CLOSURE   R154 75      ; R154 := closure(Function #76)
530 [-]: MOVE      R0 R2        ; R0 := R2
531 [-]: CLOSURE   R155 76      ; R155 := closure(Function #77)
532 [-]: MOVE      R0 R153      ; R0 := R153
533 [-]: MOVE      R0 R154      ; R0 := R154
534 [-]: CLOSURE   R156 77      ; R156 := closure(Function #78)
535 [-]: MOVE      R0 R98       ; R0 := R98
536 [-]: CLOSURE   R157 78      ; R157 := closure(Function #79)
537 [-]: MOVE      R0 R94       ; R0 := R94
538 [-]: MOVE      R0 R27       ; R0 := R27
539 [-]: MOVE      R0 R46       ; R0 := R46
540 [-]: MOVE      R0 R98       ; R0 := R98
541 [-]: MOVE      R0 R155      ; R0 := R155
542 [-]: MOVE      R0 R156      ; R0 := R156
543 [-]: MOVE      R0 R38       ; R0 := R38
544 [-]: MOVE      R0 R65       ; R0 := R65
545 [-]: MOVE      R0 R149      ; R0 := R149
546 [-]: MOVE      R0 R111      ; R0 := R111
547 [-]: MOVE      R0 R150      ; R0 := R150
548 [-]: MOVE      R0 R122      ; R0 := R122
549 [-]: MOVE      R0 R151      ; R0 := R151
550 [-]: MOVE      R0 R5        ; R0 := R5
551 [-]: MOVE      R0 R41       ; R0 := R41
552 [-]: MOVE      R0 R40       ; R0 := R40
553 [-]: MOVE      R0 R133      ; R0 := R133
554 [-]: MOVE      R0 R13       ; R0 := R13
555 [-]: MOVE      R0 R131      ; R0 := R131
556 [-]: CLOSURE   R158 79      ; R158 := closure(Function #80)
557 [-]: MOVE      R0 R147      ; R0 := R147
558 [-]: SETGLOBAL R158 K79     ; ConfirmCancel := R158
559 [-]: SETGLOBAL R158 K80     ; 0x4B0739FE := R158
560 [-]: CLOSURE   R158 80      ; R158 := closure(Function #81)
561 [-]: MOVE      R0 R14       ; R0 := R14
562 [-]: MOVE      R0 R147      ; R0 := R147
563 [-]: CLOSURE   R159 81      ; R159 := closure(Function #82)
564 [-]: MOVE      R0 R158      ; R0 := R158
565 [-]: SETGLOBAL R159 K81     ; Cancel := R159
566 [-]: SETGLOBAL R159 K82     ; 0x25CD4E56 := R159
567 [-]: CLOSURE   R159 82      ; R159 := closure(Function #83)
568 [-]: CLOSURE   R96 83       ; R96 := closure(Function #84)
569 [-]: MOVE      R0 R57       ; R0 := R57
570 [-]: MOVE      R0 R124      ; R0 := R124
571 [-]: MOVE      R0 R24       ; R0 := R24
572 [-]: MOVE      R0 R9        ; R0 := R9
573 [-]: MOVE      R0 R141      ; R0 := R141
574 [-]: MOVE      R0 R6        ; R0 := R6
575 [-]: MOVE      R0 R10       ; R0 := R10
576 [-]: MOVE      R0 R2        ; R0 := R2
577 [-]: MOVE      R0 R4        ; R0 := R4
578 [-]: MOVE      R0 R44       ; R0 := R44
579 [-]: MOVE      R0 R159      ; R0 := R159
580 [-]: CLOSURE   R160 84      ; R160 := closure(Function #85)
581 [-]: MOVE      R0 R2        ; R0 := R2
582 [-]: MOVE      R0 R74       ; R0 := R74
583 [-]: MOVE      R0 R4        ; R0 := R4
584 [-]: MOVE      R0 R102      ; R0 := R102
585 [-]: SETGLOBAL R160 K83     ; ShowCollection := R160
586 [-]: SETGLOBAL R160 K84     ; 0xB9E4CC30 := R160
587 [-]: CLOSURE   R95 85       ; R95 := closure(Function #86)
588 [-]: MOVE      R0 R13       ; R0 := R13
589 [-]: MOVE      R0 R148      ; R0 := R148
590 [-]: CLOSURE   R160 86      ; R160 := closure(Function #87)
591 [-]: MOVE      R0 R95       ; R0 := R95
592 [-]: SETGLOBAL R160 K85     ; RemoveCurrentCard := R160
593 [-]: SETGLOBAL R160 K86     ; 0x151D26DE := R160
594 [-]: CLOSURE   R160 87      ; R160 := closure(Function #88)
595 [-]: MOVE      R0 R146      ; R0 := R146
596 [-]: MOVE      R0 R128      ; R0 := R128
597 [-]: MOVE      R0 R126      ; R0 := R126
598 [-]: MOVE      R0 R131      ; R0 := R131
599 [-]: MOVE      R0 R4        ; R0 := R4
600 [-]: CLOSURE   R161 88      ; R161 := closure(Function #89)
601 [-]: MOVE      R0 R82       ; R0 := R82
602 [-]: MOVE      R0 R10       ; R0 := R10
603 [-]: MOVE      R0 R160      ; R0 := R160
604 [-]: MOVE      R0 R50       ; R0 := R50
605 [-]: MOVE      R0 R12       ; R0 := R12
606 [-]: MOVE      R0 R78       ; R0 := R78
607 [-]: MOVE      R0 R69       ; R0 := R69
608 [-]: MOVE      R0 R146      ; R0 := R146
609 [-]: MOVE      R0 R68       ; R0 := R68
610 [-]: MOVE      R0 R76       ; R0 := R76
611 [-]: MOVE      R0 R28       ; R0 := R28
612 [-]: MOVE      R0 R37       ; R0 := R37
613 [-]: MOVE      R0 R27       ; R0 := R27
614 [-]: MOVE      R0 R5        ; R0 := R5
615 [-]: MOVE      R0 R13       ; R0 := R13
616 [-]: MOVE      R0 R53       ; R0 := R53
617 [-]: MOVE      R0 R2        ; R0 := R2
618 [-]: MOVE      R0 R1        ; R0 := R1
619 [-]: MOVE      R0 R49       ; R0 := R49
620 [-]: MOVE      R0 R92       ; R0 := R92
621 [-]: MOVE      R0 R113      ; R0 := R113
622 [-]: MOVE      R0 R131      ; R0 := R131
623 [-]: MOVE      R0 R14       ; R0 := R14
624 [-]: SETGLOBAL R161 K87     ; Update := R161
625 [-]: SETGLOBAL R161 K88     ; 0x8C7099E9 := R161
626 [-]: CLOSURE   R161 89      ; R161 := closure(Function #90)
627 [-]: MOVE      R0 R27       ; R0 := R27
628 [-]: MOVE      R0 R28       ; R0 := R28
629 [-]: MOVE      R0 R158      ; R0 := R158
630 [-]: SETGLOBAL R161 K89     ; onKeyUp_MENU_CANCEL := R161
631 [-]: SETGLOBAL R161 K90     ; 0xD853E536 := R161
632 [-]: CLOSURE   R161 90      ; R161 := closure(Function #91)
633 [-]: MOVE      R0 R86       ; R0 := R86
634 [-]: MOVE      R0 R92       ; R0 := R92
635 [-]: MOVE      R0 R90       ; R0 := R90
636 [-]: MOVE      R0 R113      ; R0 := R113
637 [-]: MOVE      R0 R131      ; R0 := R131
638 [-]: CLOSURE   R162 91      ; R162 := closure(Function #92)
639 [-]: MOVE      R0 R86       ; R0 := R86
640 [-]: MOVE      R0 R161      ; R0 := R161
641 [-]: MOVE      R0 R95       ; R0 := R95
642 [-]: MOVE      R0 R28       ; R0 := R28
643 [-]: MOVE      R0 R13       ; R0 := R13
644 [-]: MOVE      R0 R27       ; R0 := R27
645 [-]: SETGLOBAL R162 K91     ; onRawInputEvent := R162
646 [-]: SETGLOBAL R162 K92     ; 0x11563913 := R162
647 [-]: CLOSURE   R162 92      ; R162 := closure(Function #93)
648 [-]: MOVE      R0 R27       ; R0 := R27
649 [-]: SETGLOBAL R162 K93     ; CategoryFocused := R162
650 [-]: SETGLOBAL R162 K94     ; 0xAEDAAA7A := R162
651 [-]: CLOSURE   R162 93      ; R162 := closure(Function #94)
652 [-]: MOVE      R0 R27       ; R0 := R27
653 [-]: SETGLOBAL R162 K95     ; CategoryUnfocused := R162
654 [-]: SETGLOBAL R162 K96     ; 0x7B54812E := R162
655 [-]: CLOSURE   R162 94      ; R162 := closure(Function #95)
656 [-]: MOVE      R0 R14       ; R0 := R14
657 [-]: MOVE      R0 R27       ; R0 := R27
658 [-]: SETGLOBAL R162 K97     ; CategoryPressed := R162
659 [-]: SETGLOBAL R162 K98     ; 0x37320952 := R162
660 [-]: CLOSURE   R162 95      ; R162 := closure(Function #96)
661 [-]: MOVE      R0 R27       ; R0 := R27
662 [-]: SETGLOBAL R162 K99     ; SortByFocused := R162
663 [-]: SETGLOBAL R162 K100    ; 0x2403F331 := R162
664 [-]: CLOSURE   R162 96      ; R162 := closure(Function #97)
665 [-]: MOVE      R0 R27       ; R0 := R27
666 [-]: SETGLOBAL R162 K101    ; SortByUnfocused := R162
667 [-]: SETGLOBAL R162 K102    ; 0x39D711A := R162
668 [-]: CLOSURE   R162 97      ; R162 := closure(Function #98)
669 [-]: MOVE      R0 R14       ; R0 := R14
670 [-]: MOVE      R0 R27       ; R0 := R27
671 [-]: SETGLOBAL R162 K103    ; SortByPressed := R162
672 [-]: SETGLOBAL R162 K104    ; 0x6821AD1 := R162
673 [-]: CLOSURE   R162 98      ; R162 := closure(Function #99)
674 [-]: MOVE      R0 R13       ; R0 := R13
675 [-]: CLOSURE   R163 99      ; R163 := closure(Function #100)
676 [-]: MOVE      R0 R27       ; R0 := R27
677 [-]: SETGLOBAL R163 K105    ; ScrubStartDrag := R163
678 [-]: SETGLOBAL R163 K106    ; 0x997B1409 := R163
679 [-]: CLOSURE   R163 100     ; R163 := closure(Function #101)
680 [-]: MOVE      R0 R27       ; R0 := R27
681 [-]: SETGLOBAL R163 K107    ; ScrubStopDrag := R163
682 [-]: SETGLOBAL R163 K108    ; 0xF66FE811 := R163
683 [-]: CLOSURE   R163 101     ; R163 := closure(Function #102)
684 [-]: MOVE      R0 R27       ; R0 := R27
685 [-]: SETGLOBAL R163 K109    ; ScrollBarClick := R163
686 [-]: SETGLOBAL R163 K110    ; 0x257DCF05 := R163
687 [-]: CLOSURE   R163 102     ; R163 := closure(Function #103)
688 [-]: MOVE      R0 R27       ; R0 := R27
689 [-]: SETGLOBAL R163 K111    ; DropDownArrowPressed := R163
690 [-]: SETGLOBAL R163 K112    ; 0xD9F2A01C := R163
691 [-]: CLOSURE   R163 103     ; R163 := closure(Function #104)
692 [-]: MOVE      R0 R27       ; R0 := R27
693 [-]: SETGLOBAL R163 K113    ; DropDownArrowFocused := R163
694 [-]: SETGLOBAL R163 K114    ; 0xE57F7AE9 := R163
695 [-]: CLOSURE   R163 104     ; R163 := closure(Function #105)
696 [-]: MOVE      R0 R27       ; R0 := R27
697 [-]: SETGLOBAL R163 K115    ; DropDownArrowUnfocused := R163
698 [-]: SETGLOBAL R163 K116    ; 0x51EE4A45 := R163
699 [-]: CLOSURE   R163 105     ; R163 := closure(Function #106)
700 [-]: MOVE      R0 R61       ; R0 := R61
701 [-]: MOVE      R0 R60       ; R0 := R60
702 [-]: MOVE      R0 R27       ; R0 := R27
703 [-]: MOVE      R0 R13       ; R0 := R13
704 [-]: MOVE      R0 R95       ; R0 := R95
705 [-]: MOVE      R0 R94       ; R0 := R94
706 [-]: SETGLOBAL R163 K117    ; onKeyDown_MENU_GENERIC2 := R163
707 [-]: SETGLOBAL R163 K118    ; 0x23E42758 := R163
708 [-]: CLOSURE   R163 106     ; R163 := closure(Function #107)
709 [-]: MOVE      R0 R2        ; R0 := R2
710 [-]: SETGLOBAL R163 K119    ; RollOver := R163
711 [-]: SETGLOBAL R163 K120    ; 0x578AD1BD := R163
712 [-]: CLOSURE   R163 107     ; R163 := closure(Function #108)
713 [-]: MOVE      R0 R0        ; R0 := R0
714 [-]: MOVE      R0 R51       ; R0 := R51
715 [-]: MOVE      R0 R28       ; R0 := R28
716 [-]: MOVE      R0 R27       ; R0 := R27
717 [-]: MOVE      R0 R24       ; R0 := R24
718 [-]: MOVE      R0 R13       ; R0 := R13
719 [-]: MOVE      R0 R46       ; R0 := R46
720 [-]: MOVE      R0 R114      ; R0 := R114
721 [-]: MOVE      R0 R5        ; R0 := R5
722 [-]: MOVE      R0 R77       ; R0 := R77
723 [-]: MOVE      R0 R10       ; R0 := R10
724 [-]: MOVE      R0 R47       ; R0 := R47
725 [-]: MOVE      R0 R48       ; R0 := R48
726 [-]: MOVE      R0 R115      ; R0 := R115
727 [-]: MOVE      R0 R49       ; R0 := R49
728 [-]: MOVE      R0 R1        ; R0 := R1
729 [-]: MOVE      R0 R14       ; R0 := R14
730 [-]: CLOSURE   R164 108     ; R164 := closure(Function #109)
731 [-]: MOVE      R0 R0        ; R0 := R0
732 [-]: MOVE      R0 R69       ; R0 := R69
733 [-]: CLOSURE   R165 109     ; R165 := closure(Function #110)
734 [-]: MOVE      R0 R14       ; R0 := R14
735 [-]: MOVE      R0 R27       ; R0 := R27
736 [-]: MOVE      R0 R53       ; R0 := R53
737 [-]: SETGLOBAL R165 K121    ; onKeyDown_MENU_MOUSE_Z := R165
738 [-]: SETGLOBAL R165 K122    ; 0x56EAD3A9 := R165
739 [-]: CLOSURE   R165 110     ; R165 := closure(Function #111)
740 [-]: MOVE      R0 R61       ; R0 := R61
741 [-]: MOVE      R0 R60       ; R0 := R60
742 [-]: MOVE      R0 R56       ; R0 := R56
743 [-]: MOVE      R0 R105      ; R0 := R105
744 [-]: CLOSURE   R166 111     ; R166 := closure(Function #112)
745 [-]: MOVE      R0 R165      ; R0 := R165
746 [-]: SETGLOBAL R166 K123    ; onKeyDown_MENU_Y := R166
747 [-]: SETGLOBAL R166 K124    ; 0x583D8DD3 := R166
748 [-]: CLOSURE   R166 112     ; R166 := closure(Function #113)
749 [-]: MOVE      R0 R165      ; R0 := R165
750 [-]: SETGLOBAL R166 K125    ; onKeyUp_MENU_Y := R166
751 [-]: SETGLOBAL R166 K126    ; 0xC4A0203 := R166
752 [-]: CLOSURE   R166 113     ; R166 := closure(Function #114)
753 [-]: MOVE      R0 R165      ; R0 := R165
754 [-]: SETGLOBAL R166 K127    ; onKeyDown_MENU_UP := R166
755 [-]: SETGLOBAL R166 K128    ; 0x396F9C7A := R166
756 [-]: CLOSURE   R166 114     ; R166 := closure(Function #115)
757 [-]: MOVE      R0 R165      ; R0 := R165
758 [-]: SETGLOBAL R166 K129    ; onKeyUp_MENU_UP := R166
759 [-]: SETGLOBAL R166 K130    ; 0xEF6A86E5 := R166
760 [-]: CLOSURE   R166 115     ; R166 := closure(Function #116)
761 [-]: MOVE      R0 R165      ; R0 := R165
762 [-]: SETGLOBAL R166 K131    ; onKeyDown_MENU_DOWN := R166
763 [-]: SETGLOBAL R166 K132    ; 0x3C4BCFF3 := R166
764 [-]: CLOSURE   R166 116     ; R166 := closure(Function #117)
765 [-]: MOVE      R0 R165      ; R0 := R165
766 [-]: SETGLOBAL R166 K133    ; onKeyUp_MENU_DOWN := R166
767 [-]: SETGLOBAL R166 K134    ; 0xF0FA1FB5 := R166
768 [-]: CLOSURE   R166 117     ; R166 := closure(Function #118)
769 [-]: MOVE      R0 R14       ; R0 := R14
770 [-]: MOVE      R0 R61       ; R0 := R61
771 [-]: MOVE      R0 R60       ; R0 := R60
772 [-]: MOVE      R0 R106      ; R0 := R106
773 [-]: MOVE      R0 R164      ; R0 := R164
774 [-]: MOVE      R0 R27       ; R0 := R27
775 [-]: MOVE      R0 R76       ; R0 := R76
776 [-]: SETGLOBAL R166 K135    ; onKeyDown_MENU_LTRIGGER2 := R166
777 [-]: SETGLOBAL R166 K136    ; 0x9BD896E0 := R166
778 [-]: CLOSURE   R166 118     ; R166 := closure(Function #119)
779 [-]: MOVE      R0 R14       ; R0 := R14
780 [-]: MOVE      R0 R61       ; R0 := R61
781 [-]: MOVE      R0 R60       ; R0 := R60
782 [-]: MOVE      R0 R164      ; R0 := R164
783 [-]: MOVE      R0 R106      ; R0 := R106
784 [-]: MOVE      R0 R27       ; R0 := R27
785 [-]: MOVE      R0 R76       ; R0 := R76
786 [-]: SETGLOBAL R166 K137    ; onKeyDown_MENU_RTRIGGER2 := R166
787 [-]: SETGLOBAL R166 K138    ; 0xFE4FF8B := R166
788 [-]: CLOSURE   R166 119     ; R166 := closure(Function #120)
789 [-]: MOVE      R0 R93       ; R0 := R93
790 [-]: SETGLOBAL R166 K139    ; onKeyDown_MENU_RTRIGGER1 := R166
791 [-]: SETGLOBAL R166 K140    ; 0x471768A := R166
792 [-]: CLOSURE   R166 120     ; R166 := closure(Function #121)
793 [-]: SETGLOBAL R166 K141    ; OnUpdateSessionSettings := R166
794 [-]: SETGLOBAL R166 K142    ; 0xF1D13E45 := R166
795 [-]: CLOSURE   R166 121     ; R166 := closure(Function #122)
796 [-]: MOVE      R0 R4        ; R0 := R4
797 [-]: MOVE      R0 R62       ; R0 := R62
798 [-]: CLOSURE   R167 122     ; R167 := closure(Function #123)
799 [-]: MOVE      R0 R166      ; R0 := R166
800 [-]: SETGLOBAL R167 K143    ; OnSaveLoadOutComplete := R167
801 [-]: SETGLOBAL R167 K144    ; 0xDEF88744 := R167
802 [-]: CLOSURE   R167 123     ; R167 := closure(Function #124)
803 [-]: MOVE      R0 R4        ; R0 := R4
804 [-]: MOVE      R0 R132      ; R0 := R132
805 [-]: MOVE      R0 R62       ; R0 := R62
806 [-]: SETGLOBAL R167 K145    ; ConfirmLeaveScreen := R167
807 [-]: SETGLOBAL R167 K146    ; 0xF6F357E0 := R167
808 [-]: CLOSURE   R167 124     ; R167 := closure(Function #125)
809 [-]: MOVE      R0 R62       ; R0 := R62
810 [-]: MOVE      R0 R51       ; R0 := R51
811 [-]: MOVE      R0 R2        ; R0 := R2
812 [-]: MOVE      R0 R132      ; R0 := R132
813 [-]: SETGLOBAL R167 K147    ; HandleCanBeClosed := R167
814 [-]: SETGLOBAL R167 K148    ; 0xBEE9C3ED := R167
815 [-]: CLOSURE   R167 125     ; R167 := closure(Function #126)
816 [-]: MOVE      R0 R2        ; R0 := R2
817 [-]: SETGLOBAL R167 K149    ; SetTrigger := R167
818 [-]: SETGLOBAL R167 K150    ; 0x3F956A34 := R167
819 [-]: CLOSURE   R93 126      ; R93 := closure(Function #127)
820 [-]: MOVE      R0 R57       ; R0 := R57
821 [-]: CLOSURE   R167 127     ; R167 := closure(Function #128)
822 [-]: MOVE      R0 R2        ; R0 := R2
823 [-]: CLOSURE   R168 128     ; R168 := closure(Function #129)
824 [-]: MOVE      R0 R167      ; R0 := R167
825 [-]: MOVE      R0 R69       ; R0 := R69
826 [-]: MOVE      R0 R8        ; R0 := R8
827 [-]: MOVE      R0 R24       ; R0 := R24
828 [-]: MOVE      R0 R10       ; R0 := R10
829 [-]: CLOSURE   R169 129     ; R169 := closure(Function #130)
830 [-]: MOVE      R0 R57       ; R0 := R57
831 [-]: MOVE      R0 R24       ; R0 := R24
832 [-]: MOVE      R0 R2        ; R0 := R2
833 [-]: MOVE      R0 R8        ; R0 := R8
834 [-]: MOVE      R0 R4        ; R0 := R4
835 [-]: MOVE      R0 R168      ; R0 := R168
836 [-]: CLOSURE   R170 130     ; R170 := closure(Function #131)
837 [-]: MOVE      R0 R69       ; R0 := R69
838 [-]: SETGLOBAL R170 K151    ; ConfigFocused := R170
839 [-]: SETGLOBAL R170 K152    ; 0xC7CFD043 := R170
840 [-]: CLOSURE   R170 131     ; R170 := closure(Function #132)
841 [-]: MOVE      R0 R69       ; R0 := R69
842 [-]: SETGLOBAL R170 K153    ; ConfigUnfocused := R170
843 [-]: SETGLOBAL R170 K154    ; 0x9005D4DE := R170
844 [-]: CLOSURE   R170 132     ; R170 := closure(Function #133)
845 [-]: MOVE      R0 R14       ; R0 := R14
846 [-]: MOVE      R0 R69       ; R0 := R69
847 [-]: SETGLOBAL R170 K155    ; ConfigPressed := R170
848 [-]: SETGLOBAL R170 K156    ; 0xCA71EB8C := R170
849 [-]: CLOSURE   R170 133     ; R170 := closure(Function #134)
850 [-]: MOVE      R0 R14       ; R0 := R14
851 [-]: MOVE      R0 R69       ; R0 := R69
852 [-]: MOVE      R0 R2        ; R0 := R2
853 [-]: SETGLOBAL R170 K157    ; ConfigSelected := R170
854 [-]: SETGLOBAL R170 K158    ; 0xB812A455 := R170
855 [-]: CLOSURE   R170 134     ; R170 := closure(Function #135)
856 [-]: MOVE      R0 R69       ; R0 := R69
857 [-]: MOVE      R0 R24       ; R0 := R24
858 [-]: MOVE      R0 R8        ; R0 := R8
859 [-]: MOVE      R0 R0        ; R0 := R0
860 [-]: CLOSURE   R171 135     ; R171 := closure(Function #136)
861 [-]: MOVE      R0 R69       ; R0 := R69
862 [-]: MOVE      R0 R11       ; R0 := R11
863 [-]: MOVE      R0 R2        ; R0 := R2
864 [-]: MOVE      R0 R3        ; R0 := R3
865 [-]: MOVE      R0 R89       ; R0 := R89
866 [-]: MOVE      R0 R163      ; R0 := R163
867 [-]: MOVE      R0 R24       ; R0 := R24
868 [-]: MOVE      R0 R125      ; R0 := R125
869 [-]: MOVE      R0 R170      ; R0 := R170
870 [-]: CLOSURE   R172 136     ; R172 := closure(Function #137)
871 [-]: MOVE      R0 R2        ; R0 := R2
872 [-]: MOVE      R0 R70       ; R0 := R70
873 [-]: MOVE      R0 R101      ; R0 := R101
874 [-]: MOVE      R0 R72       ; R0 := R72
875 [-]: MOVE      R0 R73       ; R0 := R73
876 [-]: MOVE      R0 R71       ; R0 := R71
877 [-]: MOVE      R0 R68       ; R0 := R68
878 [-]: CLOSURE   R97 137      ; R97 := closure(Function #138)
879 [-]: MOVE      R0 R27       ; R0 := R27
880 [-]: MOVE      R0 R5        ; R0 := R5
881 [-]: CLOSURE   R173 138     ; R173 := closure(Function #139)
882 [-]: MOVE      R0 R78       ; R0 := R78
883 [-]: MOVE      R0 R27       ; R0 := R27
884 [-]: CLOSURE   R174 139     ; R174 := closure(Function #140)
885 [-]: MOVE      R0 R24       ; R0 := R24
886 [-]: MOVE      R0 R86       ; R0 := R86
887 [-]: CLOSURE   R90 140      ; R90 := closure(Function #141)
888 [-]: MOVE      R0 R86       ; R0 := R86
889 [-]: MOVE      R0 R2        ; R0 := R2
890 [-]: MOVE      R0 R9        ; R0 := R9
891 [-]: MOVE      R0 R3        ; R0 := R3
892 [-]: MOVE      R0 R6        ; R0 := R6
893 [-]: MOVE      R0 R174      ; R0 := R174
894 [-]: CLOSURE   R92 141      ; R92 := closure(Function #142)
895 [-]: MOVE      R0 R10       ; R0 := R10
896 [-]: MOVE      R0 R24       ; R0 := R24
897 [-]: MOVE      R0 R0        ; R0 := R0
898 [-]: MOVE      R0 R38       ; R0 := R38
899 [-]: MOVE      R0 R86       ; R0 := R86
900 [-]: MOVE      R0 R90       ; R0 := R90
901 [-]: CLOSURE   R175 142     ; R175 := closure(Function #143)
902 [-]: MOVE      R0 R2        ; R0 := R2
903 [-]: MOVE      R0 R20       ; R0 := R20
904 [-]: MOVE      R0 R21       ; R0 := R21
905 [-]: MOVE      R0 R4        ; R0 := R4
906 [-]: CLOSURE   R176 143     ; R176 := closure(Function #144)
907 [-]: MOVE      R0 R125      ; R0 := R125
908 [-]: MOVE      R0 R39       ; R0 := R39
909 [-]: MOVE      R0 R24       ; R0 := R24
910 [-]: MOVE      R0 R110      ; R0 := R110
911 [-]: MOVE      R0 R64       ; R0 := R64
912 [-]: MOVE      R0 R45       ; R0 := R45
913 [-]: MOVE      R0 R43       ; R0 := R43
914 [-]: MOVE      R0 R42       ; R0 := R42
915 [-]: MOVE      R0 R40       ; R0 := R40
916 [-]: MOVE      R0 R10       ; R0 := R10
917 [-]: MOVE      R0 R13       ; R0 := R13
918 [-]: MOVE      R0 R146      ; R0 := R146
919 [-]: MOVE      R0 R131      ; R0 := R131
920 [-]: CLOSURE   R177 144     ; R177 := closure(Function #145)
921 [-]: MOVE      R0 R10       ; R0 := R10
922 [-]: MOVE      R0 R99       ; R0 := R99
923 [-]: MOVE      R0 R24       ; R0 := R24
924 [-]: CLOSURE   R178 145     ; R178 := closure(Function #146)
925 [-]: MOVE      R0 R73       ; R0 := R73
926 [-]: MOVE      R0 R70       ; R0 := R70
927 [-]: MOVE      R0 R2        ; R0 := R2
928 [-]: MOVE      R0 R11       ; R0 := R11
929 [-]: MOVE      R0 R56       ; R0 := R56
930 [-]: MOVE      R0 R83       ; R0 := R83
931 [-]: MOVE      R0 R84       ; R0 := R84
932 [-]: MOVE      R0 R4        ; R0 := R4
933 [-]: MOVE      R0 R100      ; R0 := R100
934 [-]: MOVE      R0 R12       ; R0 := R12
935 [-]: MOVE      R0 R29       ; R0 := R29
936 [-]: MOVE      R0 R10       ; R0 := R10
937 [-]: MOVE      R0 R68       ; R0 := R68
938 [-]: MOVE      R0 R40       ; R0 := R40
939 [-]: MOVE      R0 R42       ; R0 := R42
940 [-]: MOVE      R0 R43       ; R0 := R43
941 [-]: MOVE      R0 R45       ; R0 := R45
942 [-]: MOVE      R0 R24       ; R0 := R24
943 [-]: MOVE      R0 R0        ; R0 := R0
944 [-]: MOVE      R0 R39       ; R0 := R39
945 [-]: MOVE      R0 R44       ; R0 := R44
946 [-]: MOVE      R0 R86       ; R0 := R86
947 [-]: MOVE      R0 R177      ; R0 := R177
948 [-]: MOVE      R0 R66       ; R0 := R66
949 [-]: MOVE      R0 R63       ; R0 := R63
950 [-]: MOVE      R0 R110      ; R0 := R110
951 [-]: MOVE      R0 R64       ; R0 := R64
952 [-]: MOVE      R0 R38       ; R0 := R38
953 [-]: MOVE      R0 R112      ; R0 := R112
954 [-]: MOVE      R0 R144      ; R0 := R144
955 [-]: MOVE      R0 R171      ; R0 := R171
956 [-]: MOVE      R0 R50       ; R0 := R50
957 [-]: MOVE      R0 R173      ; R0 := R173
958 [-]: MOVE      R0 R92       ; R0 := R92
959 [-]: MOVE      R0 R28       ; R0 := R28
960 [-]: MOVE      R0 R138      ; R0 := R138
961 [-]: MOVE      R0 R22       ; R0 := R22
962 [-]: MOVE      R0 R172      ; R0 := R172
963 [-]: MOVE      R0 R175      ; R0 := R175
964 [-]: MOVE      R0 R82       ; R0 := R82
965 [-]: SETGLOBAL R178 K159    ; Initialize := R178
966 [-]: SETGLOBAL R178 K160    ; 0x62648036 := R178
967 [-]: CLOSURE   R178 146     ; R178 := closure(Function #147)
968 [-]: MOVE      R0 R31       ; R0 := R31
969 [-]: MOVE      R0 R2        ; R0 := R2
970 [-]: MOVE      R0 R125      ; R0 := R125
971 [-]: MOVE      R0 R40       ; R0 := R40
972 [-]: MOVE      R0 R42       ; R0 := R42
973 [-]: MOVE      R0 R10       ; R0 := R10
974 [-]: MOVE      R0 R24       ; R0 := R24
975 [-]: MOVE      R0 R113      ; R0 := R113
976 [-]: MOVE      R0 R106      ; R0 := R106
977 [-]: MOVE      R0 R13       ; R0 := R13
978 [-]: MOVE      R0 R170      ; R0 := R170
979 [-]: SETGLOBAL R178 K161    ; OnUnlockFeatureWebResult := R178
980 [-]: SETGLOBAL R178 K162    ; 0x7CCF8707 := R178
981 [-]: CLOSURE   R178 147     ; R178 := closure(Function #148)
982 [-]: MOVE      R0 R10       ; R0 := R10
983 [-]: MOVE      R0 R31       ; R0 := R31
984 [-]: SETGLOBAL R178 K163    ; OnConfirmUnlockFeature := R178
985 [-]: SETGLOBAL R178 K164    ; 0x210E415F := R178
986 [-]: CLOSURE   R178 148     ; R178 := closure(Function #149)
987 [-]: MOVE      R0 R2        ; R0 := R2
988 [-]: MOVE      R0 R31       ; R0 := R31
989 [-]: SETGLOBAL R178 K165    ; OnBuyFeatureItem := R178
990 [-]: SETGLOBAL R178 K166    ; 0x6B56ADBF := R178
991 [-]: CLOSURE   R89 149      ; R89 := closure(Function #150)
992 [-]: MOVE      R0 R124      ; R0 := R124
993 [-]: MOVE      R0 R24       ; R0 := R24
994 [-]: MOVE      R0 R31       ; R0 := R31
995 [-]: MOVE      R0 R8        ; R0 := R8
996 [-]: CLOSURE   R178 150     ; R178 := closure(Function #151)
997 [-]: SETGLOBAL R178 K167    ; OnUploadChallengeProgress := R178
998 [-]: SETGLOBAL R178 K168    ; 0xAA9012E9 := R178
999 [-]: CLOSURE   R178 151     ; R178 := closure(Function #152)
1000 [-]: MOVE      R0 R2        ; R0 := R2
1001 [-]: MOVE      R0 R10       ; R0 := R10
1002 [-]: MOVE      R0 R24       ; R0 := R24
1003 [-]: MOVE      R0 R18       ; R0 := R18
1004 [-]: MOVE      R0 R39       ; R0 := R39
1005 [-]: MOVE      R0 R80       ; R0 := R80
1006 [-]: MOVE      R0 R0        ; R0 := R0
1007 [-]: MOVE      R0 R148      ; R0 := R148
1008 [-]: MOVE      R0 R176      ; R0 := R176
1009 [-]: MOVE      R0 R31       ; R0 := R31
1010 [-]: SETGLOBAL R178 K169    ; OnPolarityChangesApplied := R178
1011 [-]: SETGLOBAL R178 K170    ; 0x4A2B8FC9 := R178
1012 [-]: CLOSURE   R178 152     ; R178 := closure(Function #153)
1013 [-]: MOVE      R0 R2        ; R0 := R2
1014 [-]: SETGLOBAL R178 K171    ; PolarizeSwapSelected := R178
1015 [-]: SETGLOBAL R178 K172    ; 0xB28A3DAF := R178
1016 [-]: CLOSURE   R178 153     ; R178 := closure(Function #154)
1017 [-]: MOVE      R0 R31       ; R0 := R31
1018 [-]: MOVE      R0 R8        ; R0 := R8
1019 [-]: MOVE      R0 R24       ; R0 := R24
1020 [-]: MOVE      R0 R112      ; R0 := R112
1021 [-]: MOVE      R0 R0        ; R0 := R0
1022 [-]: MOVE      R0 R10       ; R0 := R10
1023 [-]: SETGLOBAL R178 K173    ; ConfirmPolarizeSwaps := R178
1024 [-]: SETGLOBAL R178 K174    ; 0xE526BE25 := R178
1025 [-]: CLOSURE   R178 154     ; R178 := closure(Function #155)
1026 [-]: MOVE      R0 R44       ; R0 := R44
1027 [-]: MOVE      R0 R2        ; R0 := R2
1028 [-]: MOVE      R0 R57       ; R0 := R57
1029 [-]: MOVE      R0 R18       ; R0 := R18
1030 [-]: CLOSURE   R179 155     ; R179 := closure(Function #156)
1031 [-]: MOVE      R0 R23       ; R0 := R23
1032 [-]: MOVE      R0 R106      ; R0 := R106
1033 [-]: MOVE      R0 R8        ; R0 := R8
1034 [-]: MOVE      R0 R30       ; R0 := R30
1035 [-]: MOVE      R0 R31       ; R0 := R31
1036 [-]: MOVE      R0 R24       ; R0 := R24
1037 [-]: MOVE      R0 R112      ; R0 := R112
1038 [-]: MOVE      R0 R0        ; R0 := R0
1039 [-]: MOVE      R0 R10       ; R0 := R10
1040 [-]: SETGLOBAL R179 K175    ; ConfirmPolarizeChanges := R179
1041 [-]: SETGLOBAL R179 K176    ; 0xF07DD042 := R179
1042 [-]: CLOSURE   R179 156     ; R179 := closure(Function #157)
1043 [-]: MOVE      R0 R24       ; R0 := R24
1044 [-]: MOVE      R0 R30       ; R0 := R30
1045 [-]: MOVE      R0 R2        ; R0 := R2
1046 [-]: SETGLOBAL R179 K177    ; PolarizeSelected := R179
1047 [-]: SETGLOBAL R179 K178    ; 0xDD072DCB := R179
1048 [-]: CLOSURE   R179 157     ; R179 := closure(Function #158)
1049 [-]: MOVE      R0 R71       ; R0 := R71
1050 [-]: MOVE      R0 R101      ; R0 := R101
1051 [-]: MOVE      R0 R87       ; R0 := R87
1052 [-]: CLOSURE   R180 158     ; R180 := closure(Function #159)
1053 [-]: MOVE      R0 R12       ; R0 := R12
1054 [-]: MOVE      R0 R180      ; R0 := R180
1055 [-]: MOVE      R0 R179      ; R0 := R179
1056 [-]: MOVE      R0 R57       ; R0 := R57
1057 [-]: MOVE      R0 R30       ; R0 := R30
1058 [-]: MOVE      R0 R29       ; R0 := R29
1059 [-]: MOVE      R0 R24       ; R0 := R24
1060 [-]: MOVE      R0 R9        ; R0 := R9
1061 [-]: CLOSURE   R181 159     ; R181 := closure(Function #160)
1062 [-]: MOVE      R0 R42       ; R0 := R42
1063 [-]: MOVE      R0 R43       ; R0 := R43
1064 [-]: MOVE      R0 R44       ; R0 := R44
1065 [-]: MOVE      R0 R2        ; R0 := R2
1066 [-]: MOVE      R0 R141      ; R0 := R141
1067 [-]: MOVE      R0 R9        ; R0 := R9
1068 [-]: MOVE      R0 R4        ; R0 := R4
1069 [-]: MOVE      R0 R24       ; R0 := R24
1070 [-]: MOVE      R0 R65       ; R0 := R65
1071 [-]: MOVE      R0 R66       ; R0 := R66
1072 [-]: MOVE      R0 R39       ; R0 := R39
1073 [-]: CLOSURE   R182 160     ; R182 := closure(Function #161)
1074 [-]: MOVE      R0 R181      ; R0 := R181
1075 [-]: SETGLOBAL R182 K179    ; PolarizeItem := R182
1076 [-]: SETGLOBAL R182 K180    ; 0xD2ACAD83 := R182
1077 [-]: CLOSURE   R182 161     ; R182 := closure(Function #162)
1078 [-]: MOVE      R0 R125      ; R0 := R125
1079 [-]: MOVE      R0 R24       ; R0 := R24
1080 [-]: MOVE      R0 R181      ; R0 := R181
1081 [-]: MOVE      R0 R2        ; R0 := R2
1082 [-]: CLOSURE   R183 162     ; R183 := closure(Function #163)
1083 [-]: MOVE      R0 R9        ; R0 := R9
1084 [-]: MOVE      R0 R182      ; R0 := R182
1085 [-]: SETGLOBAL R183 K181    ; ConfirmPolarizeItemChoice := R183
1086 [-]: SETGLOBAL R183 K182    ; 0x687B9AFC := R183
1087 [-]: LOADNIL   R183 R183    ; R183 := nil
1088 [-]: CLOSURE   R184 163     ; R184 := closure(Function #164)
1089 [-]: MOVE      R0 R2        ; R0 := R2
1090 [-]: MOVE      R0 R125      ; R0 := R125
1091 [-]: MOVE      R0 R144      ; R0 := R144
1092 [-]: SETGLOBAL R184 K183    ; OnFocusLensInstalled := R184
1093 [-]: SETGLOBAL R184 K184    ; 0xB8E83994 := R184
1094 [-]: CLOSURE   R184 164     ; R184 := closure(Function #165)
1095 [-]: MOVE      R0 R183      ; R0 := R183
1096 [-]: MOVE      R0 R29       ; R0 := R29
1097 [-]: MOVE      R0 R24       ; R0 := R24
1098 [-]: SETGLOBAL R184 K185    ; FocusLensSelected := R184
1099 [-]: SETGLOBAL R184 K186    ; 0x99BB7B37 := R184
1100 [-]: CLOSURE   R184 165     ; R184 := closure(Function #166)
1101 [-]: MOVE      R0 R12       ; R0 := R12
1102 [-]: MOVE      R0 R184      ; R0 := R184
1103 [-]: MOVE      R0 R179      ; R0 := R179
1104 [-]: MOVE      R0 R57       ; R0 := R57
1105 [-]: MOVE      R0 R183      ; R0 := R183
1106 [-]: MOVE      R0 R29       ; R0 := R29
1107 [-]: MOVE      R0 R24       ; R0 := R24
1108 [-]: MOVE      R0 R9        ; R0 := R9
1109 [-]: MOVE      R0 R2        ; R0 := R2
1110 [-]: CLOSURE   R185 166     ; R185 := closure(Function #167)
1111 [-]: MOVE      R0 R24       ; R0 := R24
1112 [-]: MOVE      R0 R39       ; R0 := R39
1113 [-]: MOVE      R0 R65       ; R0 := R65
1114 [-]: MOVE      R0 R66       ; R0 := R66
1115 [-]: MOVE      R0 R30       ; R0 := R30
1116 [-]: MOVE      R0 R181      ; R0 := R181
1117 [-]: MOVE      R0 R180      ; R0 := R180
1118 [-]: CLOSURE   R186 167     ; R186 := closure(Function #168)
1119 [-]: MOVE      R0 R4        ; R0 := R4
1120 [-]: MOVE      R0 R2        ; R0 := R2
1121 [-]: CLOSURE   R187 168     ; R187 := closure(Function #169)
1122 [-]: MOVE      R0 R2        ; R0 := R2
1123 [-]: MOVE      R0 R125      ; R0 := R125
1124 [-]: MOVE      R0 R131      ; R0 := R131
1125 [-]: SETGLOBAL R187 K187    ; OnFuseWeapon := R187
1126 [-]: SETGLOBAL R187 K188    ; 0xD98E6415 := R187
1127 [-]: CLOSURE   R187 169     ; R187 := closure(Function #170)
1128 [-]: MOVE      R0 R24       ; R0 := R24
1129 [-]: MOVE      R0 R88       ; R0 := R88
1130 [-]: MOVE      R0 R2        ; R0 := R2
1131 [-]: SETGLOBAL R187 K189    ; ConfirmFuseWeapon := R187
1132 [-]: SETGLOBAL R187 K190    ; 0x740BC379 := R187
1133 [-]: CLOSURE   R187 170     ; R187 := closure(Function #171)
1134 [-]: MOVE      R0 R88       ; R0 := R88
1135 [-]: MOVE      R0 R186      ; R0 := R186
1136 [-]: MOVE      R0 R24       ; R0 := R24
1137 [-]: MOVE      R0 R2        ; R0 := R2
1138 [-]: MOVE      R0 R4        ; R0 := R4
1139 [-]: SETGLOBAL R187 K191    ; FuseKuvaWeapon := R187
1140 [-]: SETGLOBAL R187 K192    ; 0xC5AE3B9F := R187
1141 [-]: CLOSURE   R187 171     ; R187 := closure(Function #172)
1142 [-]: MOVE      R0 R179      ; R0 := R179
1143 [-]: MOVE      R0 R57       ; R0 := R57
1144 [-]: MOVE      R0 R24       ; R0 := R24
1145 [-]: MOVE      R0 R88       ; R0 := R88
1146 [-]: MOVE      R0 R159      ; R0 := R159
1147 [-]: MOVE      R0 R9        ; R0 := R9
1148 [-]: MOVE      R0 R6        ; R0 := R6
1149 [-]: MOVE      R0 R186      ; R0 := R186
1150 [-]: MOVE      R0 R3        ; R0 := R3
1151 [-]: CLOSURE   R188 172     ; R188 := closure(Function #173)
1152 [-]: MOVE      R0 R18       ; R0 := R18
1153 [-]: MOVE      R0 R157      ; R0 := R157
1154 [-]: MOVE      R0 R89       ; R0 := R89
1155 [-]: MOVE      R0 R185      ; R0 := R185
1156 [-]: MOVE      R0 R178      ; R0 := R178
1157 [-]: MOVE      R0 R184      ; R0 := R184
1158 [-]: MOVE      R0 R169      ; R0 := R169
1159 [-]: MOVE      R0 R187      ; R0 := R187
1160 [-]: SETGLOBAL R188 K193    ; ActionSelected := R188
1161 [-]: SETGLOBAL R188 K194    ; 0xB46963B9 := R188
1162 [-]: CLOSURE   R188 173     ; R188 := closure(Function #174)
1163 [-]: SETGLOBAL R188 K195    ; RenameIconFocused := R188
1164 [-]: SETGLOBAL R188 K196    ; 0xD965893 := R188
1165 [-]: CLOSURE   R188 174     ; R188 := closure(Function #175)
1166 [-]: SETGLOBAL R188 K197    ; RenameIconUnfocused := R188
1167 [-]: SETGLOBAL R188 K198    ; 0x9C32F37F := R188
1168 [-]: CLOSURE   R188 175     ; R188 := closure(Function #176)
1169 [-]: MOVE      R0 R169      ; R0 := R169
1170 [-]: SETGLOBAL R188 K199    ; RenameIconPressed := R188
1171 [-]: SETGLOBAL R188 K200    ; 0xD5710828 := R188
1172 [-]: CLOSURE   R188 176     ; R188 := closure(Function #177)
1173 [-]: SETGLOBAL R188 K201    ; LinkIconFocused := R188
1174 [-]: SETGLOBAL R188 K202    ; 0xF4D24661 := R188
1175 [-]: CLOSURE   R188 177     ; R188 := closure(Function #178)
1176 [-]: SETGLOBAL R188 K203    ; LinkIconUnfocused := R188
1177 [-]: SETGLOBAL R188 K204    ; 0xE5549F32 := R188
1178 [-]: CLOSURE   R188 178     ; R188 := closure(Function #179)
1179 [-]: MOVE      R0 R2        ; R0 := R2
1180 [-]: SETGLOBAL R188 K205    ; LinkIconPressed := R188
1181 [-]: SETGLOBAL R188 K206    ; 0x2600FA5C := R188
1182 [-]: CLOSURE   R188 179     ; R188 := closure(Function #180)
1183 [-]: MOVE      R0 R90       ; R0 := R90
1184 [-]: SETGLOBAL R188 K207    ; OnArcaneSlotFocused := R188
1185 [-]: SETGLOBAL R188 K208    ; 0x9DFC8550 := R188
1186 [-]: CLOSURE   R188 180     ; R188 := closure(Function #181)
1187 [-]: MOVE      R0 R90       ; R0 := R90
1188 [-]: SETGLOBAL R188 K209    ; OnArcaneSlotUnfocused := R188
1189 [-]: SETGLOBAL R188 K210    ; 0x83B77825 := R188
1190 [-]: CLOSURE   R188 181     ; R188 := closure(Function #182)
1191 [-]: MOVE      R0 R24       ; R0 := R24
1192 [-]: MOVE      R0 R89       ; R0 := R89
1193 [-]: MOVE      R0 R8        ; R0 := R8
1194 [-]: MOVE      R0 R2        ; R0 := R2
1195 [-]: MOVE      R0 R174      ; R0 := R174
1196 [-]: MOVE      R0 R57       ; R0 := R57
1197 [-]: MOVE      R0 R86       ; R0 := R86
1198 [-]: MOVE      R0 R161      ; R0 := R161
1199 [-]: MOVE      R0 R0        ; R0 := R0
1200 [-]: MOVE      R0 R38       ; R0 := R38
1201 [-]: SETGLOBAL R188 K211    ; OnArcaneSlotPressed := R188
1202 [-]: SETGLOBAL R188 K212    ; 0x257BF135 := R188
1203 [-]: CLOSURE   R188 182     ; R188 := closure(Function #183)
1204 [-]: MOVE      R0 R81       ; R0 := R81
1205 [-]: MOVE      R0 R3        ; R0 := R3
1206 [-]: SETGLOBAL R188 K213    ; AbilityRollOver := R188
1207 [-]: SETGLOBAL R188 K214    ; 0x3BCFF9BC := R188
1208 [-]: CLOSURE   R188 183     ; R188 := closure(Function #184)
1209 [-]: SETGLOBAL R188 K215    ; AbilityRollOut := R188
1210 [-]: SETGLOBAL R188 K216    ; 0x2DAFC365 := R188
1211 [-]: CLOSURE   R188 184     ; R188 := closure(Function #185)
1212 [-]: MOVE      R0 R105      ; R0 := R105
1213 [-]: MOVE      R0 R60       ; R0 := R60
1214 [-]: MOVE      R0 R165      ; R0 := R165
1215 [-]: MOVE      R0 R103      ; R0 := R103
1216 [-]: SETGLOBAL R188 K217    ; OnGamepadTransition := R188
1217 [-]: SETGLOBAL R188 K218    ; 0x98E4F633 := R188
1218 [-]: CLOSURE   R188 185     ; R188 := closure(Function #186)
1219 [-]: MOVE      R0 R144      ; R0 := R144
1220 [-]: MOVE      R0 R129      ; R0 := R129
1221 [-]: MOVE      R0 R13       ; R0 := R13
1222 [-]: MOVE      R0 R27       ; R0 := R27
1223 [-]: MOVE      R0 R78       ; R0 := R78
1224 [-]: SETGLOBAL R188 K219    ; IconCacheFlushed := R188
1225 [-]: SETGLOBAL R188 K220    ; 0x5C92AF6F := R188
1226 [-]: CLOSURE   R188 186     ; R188 := closure(Function #187)
1227 [-]: MOVE      R0 R24       ; R0 := R24
1228 [-]: MOVE      R0 R125      ; R0 := R125
1229 [-]: MOVE      R0 R163      ; R0 := R163
1230 [-]: MOVE      R0 R69       ; R0 := R69
1231 [-]: SETGLOBAL R188 K221    ; OnUpgradesCopied := R188
1232 [-]: SETGLOBAL R188 K222    ; 0x7CD679F1 := R188
1233 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 184
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 188
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 192
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 196
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 200
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LT        1 K0 R0      ; if 0 < R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 204
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x63B09107
  2 [-]: GETGLOBAL R2 K1        ; R2 := moviesToHide
  3 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETGLOBAL R6 K2        ; R6 := gFlashMgr
  6 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0x616DD092"]
  7 [-]: MOVE      R8 R5        ; R8 := R5
  8 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  9 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 10 [-]: MOVE      R8 R6        ; R8 := R6
 11 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 12 [-]: TEST      R7 1         ; if R7 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: SELF      R7 R6 K5     ; R8 := R6; R7 := R6["0x625791A8"]
 15 [-]: MOVE      R9 R0        ; R9 := R0
 16 [-]: CALL      R7 3 1       ; R7(R8,R9)
 17 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
 18 [-]: JMP       5            ; PC := 5
 19 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 213
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x5AF30A19"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 28
  9 [-]: JMP       28           ; PC := 28
 10 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 11 [-]: GETGLOBAL R2 K4        ; R2 := gRegion
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 16 [-]: GETGLOBAL R2 K4        ; R2 := gRegion
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x3E2F6BF"]
 18 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 19 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K4        ; R1 := gRegion
 23 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x3E2F6BF"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x5AF30A19"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 222
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETGLOBAL R0 K0        ; R0 := _T
  5 [-]: SETTABLE  R0 K1 K2     ; R0["upgradeItem"] := nil
  6 [-]: GETGLOBAL R0 K0        ; R0 := _T
  7 [-]: SETTABLE  R0 K3 K2     ; R0["InfoPopup_Data"] := nil
  8 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  9 [-]: GETGLOBAL R1 K5        ; R1 := gRegion
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x930EC5CF"]
 15 [-]: LOADK     R1 K7        ; R1 := "RampMover"
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0["0x8D5886B7"]
 23 [-]: LOADK     R3 K9        ; R3 := "StartForward"
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETGLOBAL R1 K10       ; R1 := gGameRules
 26 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: SELF      R2 R1 K11    ; R3 := R1; R2 := R1["0x6EF24057"]
 32 [-]: MOVE      R4 R0        ; R4 := R0
 33 [-]: CALL      R2 3 1       ; R2(R3,R4)
 34 [-]: GETUPVAL  R2 U2        ; R2 := U2
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: CALL      R2 2 1       ; R2(R3)
 37 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
 38 [-]: GETUPVAL  R3 U3        ; R3 := U3
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: TEST      R2 1         ; if R2 then PC := 63
 41 [-]: JMP       63           ; PC := 63
 42 [-]: GETUPVAL  R2 U3        ; R2 := U3
 43 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xD0C67041"]
 44 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 45 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 46 [-]: MOVE      R4 R2        ; R4 := R2
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: TEST      R3 1         ; if R3 then PC := 63
 49 [-]: JMP       63           ; PC := 63
 50 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 51 [-]: GETUPVAL  R4 U4        ; R4 := U4
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: TEST      R3 1         ; if R3 then PC := 63
 54 [-]: JMP       63           ; PC := 63
 55 [-]: GETGLOBAL R3 K13       ; R3 := mMovie
 56 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x851AD845"]
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: GETUPVAL  R4 U4        ; R4 := U4
 59 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0xDFA8CCE"]
 60 [-]: MOVE      R6 R3        ; R6 := R3
 61 [-]: MOVE      R7 R2        ; R7 := R2
 62 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 63 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 64 [-]: GETUPVAL  R5 U5        ; R5 := U5
 65 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 66 [-]: TEST      R4 1         ; if R4 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: GETUPVAL  R4 U5        ; R4 := U5
 69 [-]: SELF      R4 R4 K16    ; R5 := R4; R4 := R4["0xA58BB96C"]
 70 [-]: CALL      R4 2 1       ; R4(R5)
 71 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 72 [-]: GETUPVAL  R5 U6        ; R5 := U6
 73 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 74 [-]: TEST      R4 1         ; if R4 then PC := 106
 75 [-]: JMP       106          ; PC := 106
 76 [-]: GETUPVAL  R4 U6        ; R4 := U6
 77 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0xD4C2743F"]
 78 [-]: CALL      R4 2 1       ; R4(R5)
 79 [-]: GETUPVAL  R4 U7        ; R4 := U7
 80 [-]: CALL      R4 1 2       ; R4 := R4()
 81 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 82 [-]: MOVE      R6 R4        ; R6 := R4
 83 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 84 [-]: TEST      R5 1         ; if R5 then PC := 106
 85 [-]: JMP       106          ; PC := 106
 86 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 87 [-]: GETUPVAL  R6 U8        ; R6 := U8
 88 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 89 [-]: TEST      R5 1         ; if R5 then PC := 95
 90 [-]: JMP       95           ; PC := 95
 91 [-]: SELF      R5 R4 K18    ; R6 := R4; R5 := R4["0x5134D43C"]
 92 [-]: LOADNIL   R7 R7        ; R7 := nil
 93 [-]: LOADK     R8 K19       ; R8 := 0
 94 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 95 [-]: SELF      R5 R4 K18    ; R6 := R4; R5 := R4["0x5134D43C"]
 96 [-]: GETUPVAL  R7 U8        ; R7 := U8
 97 [-]: GETUPVAL  R8 U1        ; R8 := U1
 98 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["0xF81722A2"]
 99 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
100 [-]: GETUPVAL  R10 U8       ; R10 := U8
101 [-]: CALL      R9 2 2       ; R9 := R9(R10)
102 [-]: LOADK     R10 K19      ; R10 := 0
103 [-]: LOADK     R11 K21      ; R11 := 0.25
104 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
105 [-]: CALL      R5 0 1       ; R5(R6,...)
106 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
107 [-]: GETUPVAL  R6 U4        ; R6 := U4
108 [-]: CALL      R5 2 2       ; R5 := R5(R6)
109 [-]: TEST      R5 1         ; if R5 then PC := 128
110 [-]: JMP       128          ; PC := 128
111 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
112 [-]: GETUPVAL  R6 U9        ; R6 := U9
113 [-]: CALL      R5 2 2       ; R5 := R5(R6)
114 [-]: TEST      R5 1         ; if R5 then PC := 128
115 [-]: JMP       128          ; PC := 128
116 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
117 [-]: GETUPVAL  R6 U9        ; R6 := U9
118 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["info"]
119 [-]: CALL      R5 2 2       ; R5 := R5(R6)
120 [-]: TEST      R5 1         ; if R5 then PC := 128
121 [-]: JMP       128          ; PC := 128
122 [-]: GETUPVAL  R5 U4        ; R5 := U4
123 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5["0xC25040E0"]
124 [-]: GETUPVAL  R7 U9        ; R7 := U9
125 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["info"]
126 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["mItemType"]
127 [-]: CALL      R5 3 1       ; R5(R6,R7)
128 [-]: GETGLOBAL R5 K0        ; R5 := _T
129 [-]: GETUPVAL  R6 U10       ; R6 := U10
130 [-]: SETTABLE  R5 K25 R6    ; R5["mSentinelMode"] := R6
131 [-]: GETUPVAL  R5 U10       ; R5 := U10
132 [-]: TEST      R5 0         ; if not R5 then PC := 144
133 [-]: JMP       144          ; PC := 144
134 [-]: GETGLOBAL R5 K0        ; R5 := _T
135 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["suitTable"]
136 [-]: EQ        0 R5 K2      ; if R5 ~= nil then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETGLOBAL R5 K0        ; R5 := _T
139 [-]: NEWTABLE  R6 0 0       ; R6 := {}
140 [-]: SETTABLE  R5 K26 R6    ; R5["suitTable"] := R6
141 [-]: GETGLOBAL R5 K0        ; R5 := _T
142 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["suitTable"]
143 [-]: SETTABLE  R5 K27 K28   ; R5["queuedTeleport"] := 2
144 [-]: GETGLOBAL R5 K0        ; R5 := _T
145 [-]: GETUPVAL  R6 U11       ; R6 := U11
146 [-]: SETTABLE  R5 K29 R6    ; R5["mSpecialSuitMode"] := R6
147 [-]: GETGLOBAL R5 K0        ; R5 := _T
148 [-]: SETTABLE  R5 K30 K31   ; R5["ArsenalUpgradeOpen"] := "0x0"
149 [-]: GETUPVAL  R5 U12       ; R5 := U12
150 [-]: GETTABLE  R5 R5 K32    ; R5 := R5["0xB4BBB185"]
151 [-]: MOVE      R6 R0        ; R6 := R0
152 [-]: CALL      R5 2 1       ; R5(R6)
153 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 286
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: MOVE      R0 R1        ; R0 := R1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 12
 11 [-]: JMP       12           ; PC := 12
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 13 [-]: GETGLOBAL R1 K1        ; R1 := avatarAnimation
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 39
 16 [-]: JMP       39           ; PC := 39
 17 [-]: GETGLOBAL R0 K2        ; R0 := _T
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ArsenalState"]
 19 [-]: GETGLOBAL R1 K4        ; R1 := Lotus_Game
 20 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["ARSENAL_STATE_VEHICLES"]
 21 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 24 [-]: GETGLOBAL R1 K2        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MenuSuitAvatar"]
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: TEST      R0 1         ; if R0 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R0 K2        ; R0 := _T
 30 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["MenuSuitAvatar"]
 31 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x868E646A"]
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: MOVE      R3 R0        ; R3 := R0
 34 [-]: GETGLOBAL R4 K8        ; R4 := Engine
 35 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["ATMM_PHYSICS_DRIVEN"]
 36 [-]: GETGLOBAL R5 K8        ; R5 := Engine
 37 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["PRT_LOOP"]
 38 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 39 [-]: GETUPVAL  R0 U2        ; R0 := U2
 40 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["0x25992394"]
 41 [-]: GETGLOBAL R1 K12       ; R1 := _G
 42 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UISound_WindowClose"]
 43 [-]: CALL      R0 2 1       ; R0(R1)
 44 [-]: GETGLOBAL R0 K14       ; R0 := 0x52E17A90
 45 [-]: GETGLOBAL R1 K15       ; R1 := mMovie
 46 [-]: LOADK     R2 K16       ; R2 := "_root"
 47 [-]: GETGLOBAL R3 K17       ; R3 := UISys
 48 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["FlashInstance_LINEAR"]
 49 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 50 [-]: LOADK     R5 K19       ; R5 := "_alpha"
 51 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 52 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 53 [-]: LOADK     R6 K20       ; R6 := 0
 54 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 55 [-]: LOADK     R6 K21       ; R6 := 0.20000000298023
 56 [-]: LOADK     R7 K20       ; R7 := 0
 57 [-]: CLOSURE   R8 0         ; R8 := closure(Function #9.1)
 58 [-]: GETUPVAL  R0 U3        ; R0 := U3
 59 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 60 [-]: RETURN    R0 1         ; return 


; Function #9.1:
;
; Name:            
; Defined at line: 302
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 305
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 309
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x9490FE70"]
  4 [-]: CALL      R2 1 2       ; R2 := R2()
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R3 2 1       ; R3(R4)
  8 [-]: GETGLOBAL R3 K2        ; R3 := _T
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["upgradeItemLot"]
 10 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 11 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LOT_DATAKNIFE"]
 12 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETGLOBAL R3 K6        ; R3 := table
 15 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xE6450C9D"]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 18 [-]: SETTABLE  R5 K8 K9     ; R5["Label"] := "/Lotus/Language/Menu/ArtifactCards_ActionsTitle"
 19 [-]: GETUPVAL  R6 U1        ; R6 := U1
 20 [-]: SETTABLE  R5 K10 R6    ; R5["CallBack"] := R6
 21 [-]: SETTABLE  R5 K11 K12   ; R5["CallOut"] := "MENU_RTHUMB"
 22 [-]: CALL      R3 3 1       ; R3(R4,R5)
 23 [-]: GETGLOBAL R3 K2        ; R3 := _T
 24 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["InSimulacrum"]
 25 [-]: TEST      R3 1         ; if R3 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETGLOBAL R3 K6        ; R3 := table
 28 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xE6450C9D"]
 29 [-]: MOVE      R4 R1        ; R4 := R1
 30 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 31 [-]: SETTABLE  R5 K8 K14    ; R5["Label"] := "/Lotus/Language/Menu/ShowCollection"
 32 [-]: CLOSURE   R6 0         ; R6 := closure(Function #11.1)
 33 [-]: SETTABLE  R5 K10 R6    ; R5["CallBack"] := R6
 34 [-]: SETTABLE  R5 K11 K15   ; R5["CallOut"] := "MENU_GENERIC1"
 35 [-]: CALL      R3 3 1       ; R3(R4,R5)
 36 [-]: GETGLOBAL R3 K16       ; R3 := 0x400E7765
 37 [-]: GETUPVAL  R4 U2        ; R4 := U2
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: TEST      R3 1         ; if R3 then PC := 88
 40 [-]: JMP       88           ; PC := 88
 41 [-]: TEST      R2 0         ; if not R2 then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETUPVAL  R3 U3        ; R3 := U3
 44 [-]: GETUPVAL  R4 U4        ; R4 := U4
 45 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["SELECTING_SLOT"]
 46 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 88
 47 [-]: JMP       88           ; PC := 88
 48 [-]: GETUPVAL  R3 U5        ; R3 := U5
 49 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0xF81722A2"]
 50 [-]: MOVE      R4 R0        ; R4 := R0
 51 [-]: LOADNIL   R5 R5        ; R5 := nil
 52 [-]: GETUPVAL  R6 U2        ; R6 := U2
 53 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6["0x97B489B5"]
 54 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 55 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 56 [-]: TEST      R2 0         ; if not R2 then PC := 67
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETGLOBAL R4 K16       ; R4 := 0x400E7765
 59 [-]: MOVE      R5 R3        ; R5 := R3
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: TEST      R4 1         ; if R4 then PC := 68
 62 [-]: JMP       68           ; PC := 68
 63 [-]: GETTABLE  R4 R3 K20    ; R4 := R3["mCardIndex"]
 64 [-]: EQ        1 R4 K21     ; if R4 == -1 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: MOVE      R4 R0        ; R4 := R0
 67 [-]: MOVE      R4 R1        ; R4 := R1
 68 [-]: GETUPVAL  R5 U5        ; R5 := U5
 69 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["0xF81722A2"]
 70 [-]: MOVE      R6 R4        ; R6 := R4
 71 [-]: LOADK     R7 K22       ; R7 := "/Lotus/Language/Menu/Loadout_RemoveAll"
 72 [-]: LOADK     R8 K23       ; R8 := "/Lotus/Language/Menu/Loadout_Remove"
 73 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 74 [-]: GETUPVAL  R6 U5        ; R6 := U5
 75 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["0xF81722A2"]
 76 [-]: MOVE      R7 R4        ; R7 := R4
 77 [-]: GETUPVAL  R8 U6        ; R8 := U6
 78 [-]: GETUPVAL  R9 U7        ; R9 := U7
 79 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 80 [-]: GETGLOBAL R7 K6        ; R7 := table
 81 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xE6450C9D"]
 82 [-]: MOVE      R8 R1        ; R8 := R1
 83 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 84 [-]: SETTABLE  R9 K8 R5     ; R9["Label"] := R5
 85 [-]: SETTABLE  R9 K10 R6    ; R9["CallBack"] := R6
 86 [-]: SETTABLE  R9 K11 K24   ; R9["CallOut"] := "MENU_GENERIC2"
 87 [-]: CALL      R7 3 1       ; R7(R8,R9)
 88 [-]: TEST      R2 1         ; if R2 then PC := 99
 89 [-]: JMP       99           ; PC := 99
 90 [-]: GETGLOBAL R7 K6        ; R7 := table
 91 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xE6450C9D"]
 92 [-]: MOVE      R8 R1        ; R8 := R1
 93 [-]: NEWTABLE  R9 0 3       ; R9 := {}
 94 [-]: SETTABLE  R9 K8 K25    ; R9["Label"] := "/Lotus/Language/Menu/General_Tutorial"
 95 [-]: GETUPVAL  R10 U8       ; R10 := U8
 96 [-]: SETTABLE  R9 K10 R10   ; R9["CallBack"] := R10
 97 [-]: SETTABLE  R9 K11 K26   ; R9["CallOut"] := "MENU_RTRIGGER1"
 98 [-]: CALL      R7 3 1       ; R7(R8,R9)
 99 [-]: GETGLOBAL R7 K6        ; R7 := table
100 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0xE6450C9D"]
101 [-]: MOVE      R8 R1        ; R8 := R1
102 [-]: NEWTABLE  R9 0 3       ; R9 := {}
103 [-]: SETTABLE  R9 K8 K27    ; R9["Label"] := "/Lotus/Language/Menu/Global_Back"
104 [-]: CLOSURE   R10 1        ; R10 := closure(Function #11.2)
105 [-]: SETTABLE  R9 K10 R10   ; R9["CallBack"] := R10
106 [-]: SETTABLE  R9 K11 K28   ; R9["CallOut"] := "MENU_CANCEL"
107 [-]: CALL      R7 3 1       ; R7(R8,R9)
108 [-]: GETGLOBAL R7 K16       ; R7 := 0x400E7765
109 [-]: GETGLOBAL R8 K2        ; R8 := _T
110 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["SetButtons"]
111 [-]: CALL      R7 2 2       ; R7 := R7(R8)
112 [-]: TEST      R7 1         ; if R7 then PC := 122
113 [-]: JMP       122          ; PC := 122
114 [-]: GETGLOBAL R7 K2        ; R7 := _T
115 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["0xEFDFBF7E"]
116 [-]: GETGLOBAL R8 K31       ; R8 := mMovie
117 [-]: MOVE      R9 R1        ; R9 := R1
118 [-]: GETGLOBAL R10 K32      ; R10 := 0x6B695579
119 [-]: LOADK     R11 K33      ; R11 := 1
120 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
121 [-]: CALL      R7 0 1       ; R7(R8,...)
122 [-]: RETURN    R0 1         ; return 


; Function #11.1:
;
; Name:            
; Defined at line: 317
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "ShowCollection"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #11.2:
;
; Name:            
; Defined at line: 331
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "Cancel"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 338
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SETTABLE  R1 K0 K0     ; R1[1] := 1
  8 [-]: GETGLOBAL R1 K1        ; R1 := table
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xE6450C9D"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 346
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETUPVAL  R3 U2        ; R3 := U2
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["SELECTING_CARD"]
  7 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: LOADK     R3 K2        ; R3 := 100
 12 [-]: LOADK     R4 K3        ; R4 := 40
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETUPVAL  R4 U2        ; R4 := U2
 18 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["SELECTING_CARD"]
 19 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R3 R0        ; R3 := R0
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: LOADK     R4 K3        ; R4 := 40
 24 [-]: LOADK     R5 K2        ; R5 := 100
 25 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 26 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 27 [-]: GETUPVAL  R4 U3        ; R4 := U3
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 49
 30 [-]: JMP       49           ; PC := 49
 31 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 32 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mSortMenu"]
 35 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mContainerClipName"]
 36 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 37 [-]: GETUPVAL  R7 U1        ; R7 := U1
 38 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["0xF81722A2"]
 39 [-]: GETUPVAL  R8 U2        ; R8 := U2
 40 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["SELECTING_CARD"]
 41 [-]: EQ        1 R0 R8      ; if R0 == R8 then PC := 44
 42 [-]: JMP       44           ; PC := 44
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: MOVE      R8 R1        ; R8 := R1
 45 [-]: LOADK     R9 K2        ; R9 := 100
 46 [-]: LOADK     R10 K10      ; R10 := 30
 47 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 48 [-]: CALL      R3 0 1       ; R3(R4,...)
 49 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 50 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 51 [-]: LOADK     R5 K11       ; R5 := "MiddleMenu.LeftBumper"
 52 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 53 [-]: MOVE      R7 R1        ; R7 := R1
 54 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 55 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 56 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 57 [-]: LOADK     R5 K12       ; R5 := "MiddleMenu.RightBumper"
 58 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 59 [-]: MOVE      R7 R1        ; R7 := R1
 60 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 61 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 62 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 63 [-]: LOADK     R5 K13       ; R5 := "TopMenu.ConfigLeft"
 64 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 65 [-]: MOVE      R7 R2        ; R7 := R2
 66 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 67 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 68 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x1C19D966"]
 69 [-]: LOADK     R5 K14       ; R5 := "TopMenu.ConfigRight"
 70 [-]: LOADK     R6 K9        ; R6 := "_alpha"
 71 [-]: MOVE      R7 R2        ; R7 := R2
 72 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 73 [-]: GETUPVAL  R3 U4        ; R3 := U4
 74 [-]: CALL      R3 1 1       ; R3()
 75 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 364
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["0xAC19E744"]
  3 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
  4 [-]: MOVE      R6 R0        ; R6 := R0
  5 [-]: MOVE      R7 R1        ; R7 := R1
  6 [-]: MOVE      R8 R2        ; R8 := R2
  7 [-]: MOVE      R9 R3        ; R9 := R3
  8 [-]: CALL      R4 6 2       ; R4 := R4(R5,R6,R7,R8,R9)
  9 [-]: GETGLOBAL R5 K2        ; R5 := table
 10 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["0xE6450C9D"]
 11 [-]: GETUPVAL  R6 U1        ; R6 := U1
 12 [-]: MOVE      R7 R4        ; R7 := R4
 13 [-]: CALL      R5 3 1       ; R5(R6,R7)
 14 [-]: RETURN    R4 2         ; return R4
 15 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 370
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x8BA455B"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 374
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x3BC31182"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 378
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 382
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x2176B11E"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xF595ADDE
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 386
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 390
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 61
  2 [-]: JMP       61           ; PC := 61
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0xF1B0AA3"]
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: LOADK     R2 K2        ; R2 := "<p>"
  8 [-]: MOVE      R3 R2        ; R3 := R2
  9 [-]: LOADK     R4 K3        ; R4 := "<font color=\"#1896e7\">"
 10 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mUpgradeText"]
 13 [-]: LEN       R3 R3        ; R3 := # R3
 14 [-]: LT        0 K5 R3      ; if 1 >= R3 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: GETGLOBAL R5 K6        ; R5 := mMovie
 18 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 19 [-]: LOADK     R7 K8        ; R7 := "/Lotus/Language/Menu/Loadout_StatUpgradesToolTip"
 20 [-]: MOVE      R8 R0        ; R8 := R0
 21 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 22 [-]: CONCAT    R2 R4 R5     ; R2 := R4 .. R5
 23 [-]: JMP       31           ; PC := 31
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: GETGLOBAL R5 K6        ; R5 := mMovie
 26 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 27 [-]: LOADK     R7 K9        ; R7 := "/Lotus/Language/Menu/Loadout_StatUpgradeToolTip"
 28 [-]: MOVE      R8 R0        ; R8 := R0
 29 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 30 [-]: CONCAT    R2 R4 R5     ; R2 := R4 .. R5
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: LOADK     R5 K10       ; R5 := "<br></font>"
 33 [-]: CONCAT    R2 R4 R5     ; R2 := R4 .. R5
 34 [-]: MOVE      R4 R2        ; R4 := R2
 35 [-]: LOADK     R5 K11       ; R5 := "<font color=\"#FFFFFF\">"
 36 [-]: CONCAT    R2 R4 R5     ; R2 := R4 .. R5
 37 [-]: MOVE      R4 R2        ; R4 := R2
 38 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0["0xCC5C447F"]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: CONCAT    R2 R4 R5     ; R2 := R4 .. R5
 41 [-]: LOADK     R4 K5        ; R4 := 1
 42 [-]: MOVE      R5 R3        ; R5 := R3
 43 [-]: LOADK     R6 K5        ; R6 := 1
 44 [-]: FORPREP   R4 54        ; R4 -= R6; PC := 54
 45 [-]: GETUPVAL  R8 U0        ; R8 := U0
 46 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["mUpgradeText"]
 47 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 48 [-]: EQ        0 R8 K0      ; if R8 ~= nil then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADK     R8 K13       ; R8 := ""
 51 [-]: MOVE      R9 R2        ; R9 := R2
 52 [-]: MOVE      R10 R8       ; R10 := R8
 53 [-]: CONCAT    R2 R9 R10    ; R2 := R9 .. R10
 54 [-]: FORLOOP   R4 45        ; R4 += R6; if R4 <= R5 then begin PC := 45; R7 := R4 end
 55 [-]: MOVE      R9 R2        ; R9 := R2
 56 [-]: LOADK     R10 K14      ; R10 := "</font></p>"
 57 [-]: CONCAT    R2 R9 R10    ; R2 := R9 .. R10
 58 [-]: GETGLOBAL R9 K15       ; R9 := _T
 59 [-]: SETTABLE  R9 K16 R2    ; R9["gToolTip"] := R2
 60 [-]: JMP       63           ; PC := 63
 61 [-]: GETGLOBAL R9 K15       ; R9 := _T
 62 [-]: SETTABLE  R9 K16 R1    ; R9["gToolTip"] := R1
 63 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 421
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSyndicate"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := EMPTY_SYMBOL
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mSyndicate"]
  6 [-]: GETGLOBAL R3 K1        ; R3 := EMPTY_SYMBOL
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSyndicate"]
 12 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mSyndicate"]
 13 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 431
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["upgradeItemSlot"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["SPECIAL_A_SLOT"]
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 26
  6 [-]: JMP       26           ; PC := 26
  7 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["type"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 26
 12 [-]: JMP       26           ; PC := 26
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["type"]
 15 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x8B598ED4"]
 16 [-]: GETGLOBAL R2 K7        ; R2 := gLotusMeleeWeaponType
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: TEST      R0 0         ; if not R0 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["item"]
 23 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 24 [-]: MOVE      R0 R0        ; R0 := R0
 25 [-]: JMP       28           ; PC := 28
 26 [-]: MOVE      R0 R0        ; R0 := R0
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 435
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["upgradeItemCategory"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := Engine
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["Item_Melee"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R1        ; R0 := R1
 12 [-]: RETURN    R0 2         ; return R0
 13 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 439
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mPvp"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mNormal"]
  8 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  9 [-]: GETUPVAL  R3 U2        ; R3 := U2
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x6F2E05FD"]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x177B1956"]
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["info"]
 15 [-]: GETGLOBAL R6 K6        ; R6 := _T
 16 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["upgradeItemLot"]
 17 [-]: GETGLOBAL R7 K6        ; R7 := _T
 18 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["upgradeItemSlot"]
 19 [-]: MOVE      R8 R0        ; R8 := R0
 20 [-]: MOVE      R9 R1        ; R9 := R1
 21 [-]: CALL      R3 7 2       ; R3 := R3(R4,R5,R6,R7,R8,R9)
 22 [-]: SETTABLE  R2 R0 R3     ; R2[R0] := R3
 23 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 444
; #Upvalues:       18
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  89

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["info"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mItemId"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mId"]
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: LOADK     R3 K3        ; R3 := 0
  7 [-]: MOVE      R3 R2        ; R3 := R2
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 10 [-]: GETUPVAL  R5 U3        ; R5 := U3
 11 [-]: GETUPVAL  R6 U4        ; R6 := U4
 12 [-]: GETGLOBAL R7 K4        ; R7 := _T
 13 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["ArsenalState"]
 14 [-]: GETGLOBAL R8 K6        ; R8 := Lotus_Game
 15 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["ARSENAL_STATE_PVP"]
 16 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: MOVE      R7 R0        ; R7 := R0
 19 [-]: MOVE      R7 R1        ; R7 := R1
 20 [-]: CALL      R5 3 1       ; R5(R6,R7)
 21 [-]: LOADK     R5 K8        ; R5 := 1
 22 [-]: GETUPVAL  R6 U5        ; R6 := U5
 23 [-]: LEN       R6 R6        ; R6 := # R6
 24 [-]: LOADK     R7 K8        ; R7 := 1
 25 [-]: FORPREP   R5 37        ; R5 -= R7; PC := 37
 26 [-]: GETUPVAL  R9 U5        ; R9 := U5
 27 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 28 [-]: GETTABLE  R10 R9 K9    ; R10 := R9["mInstalled"]
 29 [-]: GETTABLE  R10 R10 R1   ; R10 := R10[R1]
 30 [-]: EQ        1 R10 K10    ; if R10 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R10 K11      ; R10 := table
 33 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["0xE6450C9D"]
 34 [-]: MOVE      R11 R4       ; R11 := R4
 35 [-]: MOVE      R12 R9       ; R12 := R9
 36 [-]: CALL      R10 3 1      ; R10(R11,R12)
 37 [-]: FORLOOP   R5 26        ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
 38 [-]: GETGLOBAL R10 K11      ; R10 := table
 39 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["0xA5C58010"]
 40 [-]: MOVE      R11 R4       ; R11 := R4
 41 [-]: CLOSURE   R12 0        ; R12 := closure(Function #25.1)
 42 [-]: MOVE      R0 R1        ; R0 := R1
 43 [-]: CALL      R10 3 1      ; R10(R11,R12)
 44 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 45 [-]: GETGLOBAL R11 K4       ; R11 := _T
 46 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["upgradeItemLot"]
 47 [-]: GETGLOBAL R12 K6       ; R12 := Lotus_Game
 48 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["LOT_DATAKNIFE"]
 49 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 96
 50 [-]: JMP       96           ; PC := 96
 51 [-]: LOADK     R11 K8       ; R11 := 1
 52 [-]: LEN       R12 R4       ; R12 := # R4
 53 [-]: LOADK     R13 K8       ; R13 := 1
 54 [-]: FORPREP   R11 94       ; R11 -= R13; PC := 94
 55 [-]: GETTABLE  R15 R4 R14   ; R15 := R4[R14]
 56 [-]: GETTABLE  R16 R15 K9   ; R16 := R15["mInstalled"]
 57 [-]: GETTABLE  R16 R16 R1   ; R16 := R16[R1]
 58 [-]: GETUPVAL  R17 U6       ; R17 := U6
 59 [-]: LT        0 R16 R17    ; if R16 >= R17 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: GETUPVAL  R17 U7       ; R17 := U7
 62 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["0xB151CC5A"]
 63 [-]: MOVE      R18 R15      ; R18 := R15
 64 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 65 [-]: JMP       68           ; PC := 68
 66 [-]: MOVE      R17 R0       ; R17 := R0
 67 [-]: MOVE      R17 R1       ; R17 := R1
 68 [-]: GETUPVAL  R18 U6       ; R18 := U6
 69 [-]: LE        0 R18 R16    ; if R18 > R16 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETUPVAL  R18 U7       ; R18 := U7
 72 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["0xB151CC5A"]
 73 [-]: MOVE      R19 R15      ; R19 := R15
 74 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 75 [-]: MOVE      R18 R18      ; R18 := R18
 76 [-]: JMP       79           ; PC := 79
 77 [-]: MOVE      R18 R0       ; R18 := R0
 78 [-]: MOVE      R18 R1       ; R18 := R1
 79 [-]: TEST      R17 1        ; if R17 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: TEST      R18 0        ; if not R18 then PC := 94
 82 [-]: JMP       94           ; PC := 94
 83 [-]: GETUPVAL  R19 U8       ; R19 := U8
 84 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["0x38ECFE60"]
 85 [-]: GETUPVAL  R20 U8       ; R20 := U8
 86 [-]: GETTABLE  R20 R20 K18  ; R20 := R20["0xF81722A2"]
 87 [-]: MOVE      R21 R18      ; R21 := R18
 88 [-]: LOADK     R22 K19      ; R22 := "/Lotus/Language/Menu/Loadout_ApplyModToImmortalSlot"
 89 [-]: LOADK     R23 K20      ; R23 := "/Lotus/Language/Menu/Loadout_ApplyImmortalWrongSlot"
 90 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
 91 [-]: CALL      R19 0 1      ; R19(R20,...)
 92 [-]: MOVE      R19 R0       ; R19 := R0
 93 [-]: RETURN    R19 2        ; return R19
 94 [-]: FORLOOP   R11 55       ; R11 += R13; if R11 <= R12 then begin PC := 55; R14 := R11 end
 95 [-]: JMP       270          ; PC := 270
 96 [-]: GETGLOBAL R19 K4       ; R19 := _T
 97 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["upgradeItemCategory"]
 98 [-]: GETGLOBAL R20 K22      ; R20 := Engine
 99 [-]: GETTABLE  R20 R20 K23  ; R20 := R20["Item_Suits"]
100 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 114
101 [-]: JMP       114          ; PC := 114
102 [-]: GETGLOBAL R19 K4       ; R19 := _T
103 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["upgradeItemCategory"]
104 [-]: GETGLOBAL R20 K22      ; R20 := Engine
105 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["Item_LongGuns"]
106 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 114
107 [-]: JMP       114          ; PC := 114
108 [-]: GETGLOBAL R19 K4       ; R19 := _T
109 [-]: GETTABLE  R19 R19 K21  ; R19 := R19["upgradeItemCategory"]
110 [-]: GETGLOBAL R20 K22      ; R20 := Engine
111 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["Item_Pistols"]
112 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 224
113 [-]: JMP       224          ; PC := 224
114 [-]: LOADK     R19 K8       ; R19 := 1
115 [-]: LEN       R20 R4       ; R20 := # R4
116 [-]: LOADK     R21 K8       ; R21 := 1
117 [-]: FORPREP   R19 222      ; R19 -= R21; PC := 222
118 [-]: GETTABLE  R23 R4 R22   ; R23 := R4[R22]
119 [-]: GETTABLE  R24 R23 K9   ; R24 := R23["mInstalled"]
120 [-]: GETTABLE  R24 R24 R1   ; R24 := R24[R1]
121 [-]: GETGLOBAL R25 K4       ; R25 := _T
122 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["upgradeItemCategory"]
123 [-]: GETGLOBAL R26 K22      ; R26 := Engine
124 [-]: GETTABLE  R26 R26 K23  ; R26 := R26["Item_Suits"]
125 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 158
126 [-]: JMP       158          ; PC := 158
127 [-]: GETUPVAL  R25 U9       ; R25 := U9
128 [-]: EQ        1 R24 R25    ; if R24 == R25 then PC := 133
129 [-]: JMP       133          ; PC := 133
130 [-]: GETTABLE  R25 R23 K26  ; R25 := R23["mType"]
131 [-]: EQ        1 R25 K27    ; if R25 == "AURA" then PC := 134
132 [-]: JMP       134          ; PC := 134
133 [-]: MOVE      R25 R0       ; R25 := R0
134 [-]: MOVE      R25 R1       ; R25 := R1
135 [-]: GETUPVAL  R26 U9       ; R26 := U9
136 [-]: EQ        0 R24 R26    ; if R24 ~= R26 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETTABLE  R26 R23 K26  ; R26 := R23["mType"]
139 [-]: EQ        0 R26 K27    ; if R26 ~= "AURA" then PC := 142
140 [-]: JMP       142          ; PC := 142
141 [-]: MOVE      R26 R0       ; R26 := R0
142 [-]: MOVE      R26 R1       ; R26 := R1
143 [-]: TEST      R26 1        ; if R26 then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: TEST      R25 0        ; if not R25 then PC := 158
146 [-]: JMP       158          ; PC := 158
147 [-]: GETUPVAL  R27 U8       ; R27 := U8
148 [-]: GETTABLE  R27 R27 K17  ; R27 := R27["0x38ECFE60"]
149 [-]: GETUPVAL  R28 U8       ; R28 := U8
150 [-]: GETTABLE  R28 R28 K18  ; R28 := R28["0xF81722A2"]
151 [-]: MOVE      R29 R26      ; R29 := R26
152 [-]: LOADK     R30 K28      ; R30 := "/Lotus/Language/Menu/Loadout_ApplyModToAuraSlot"
153 [-]: LOADK     R31 K29      ; R31 := "/Lotus/Language/Menu/Loadout_ApplyAuraWrongSlot"
154 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
155 [-]: CALL      R27 0 1      ; R27(R28,...)
156 [-]: MOVE      R27 R0       ; R27 := R0
157 [-]: RETURN    R27 2        ; return R27
158 [-]: GETUPVAL  R27 U10      ; R27 := U10
159 [-]: GETTABLE  R27 R27 K30  ; R27 := R27["0xEC4D1B6F"]
160 [-]: GETUPVAL  R28 U0       ; R28 := U0
161 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["type"]
162 [-]: MOVE      R29 R24      ; R29 := R24
163 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
164 [-]: TEST      R27 0        ; if not R27 then PC := 191
165 [-]: JMP       191          ; PC := 191
166 [-]: GETUPVAL  R27 U11      ; R27 := U11
167 [-]: SELF      R27 R27 K32  ; R28 := R27; R27 := R27["0xF61F409A"]
168 [-]: MOVE      R29 R24      ; R29 := R24
169 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
170 [-]: EQ        1 R27 K10    ; if R27 == nil then PC := 182
171 [-]: JMP       182          ; PC := 182
172 [-]: GETTABLE  R28 R27 K33  ; R28 := R27["Locked"]
173 [-]: TEST      R28 0        ; if not R28 then PC := 182
174 [-]: JMP       182          ; PC := 182
175 [-]: GETUPVAL  R28 U12      ; R28 := U12
176 [-]: GETGLOBAL R29 K6       ; R29 := Lotus_Game
177 [-]: GETTABLE  R29 R29 K34  ; R29 := R29["WF_UTILITY_UNLOCKED"]
178 [-]: CALL      R28 2 1      ; R28(R29)
179 [-]: MOVE      R28 R0       ; R28 := R0
180 [-]: RETURN    R28 2        ; return R28
181 [-]: JMP       191          ; PC := 191
182 [-]: GETTABLE  R28 R23 K35  ; R28 := R23["mIsUtility"]
183 [-]: TEST      R28 1        ; if R28 then PC := 191
184 [-]: JMP       191          ; PC := 191
185 [-]: GETUPVAL  R28 U8       ; R28 := U8
186 [-]: GETTABLE  R28 R28 K17  ; R28 := R28["0x38ECFE60"]
187 [-]: LOADK     R29 K36      ; R29 := "/Lotus/Language/Menu/Loadout_ApplyModToUtilitySlot"
188 [-]: CALL      R28 2 1      ; R28(R29)
189 [-]: MOVE      R28 R0       ; R28 := R0
190 [-]: RETURN    R28 2        ; return R28
191 [-]: GETTABLE  R28 R23 K37  ; R28 := R23["mUpgradeType"]
192 [-]: GETGLOBAL R29 K38      ; R29 := Game
193 [-]: GETTABLE  R29 R29 K39  ; R29 := R29["AVATAR_ABILITY"]
194 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 222
195 [-]: JMP       222          ; PC := 222
196 [-]: LEN       R28 R10      ; R28 := # R10
197 [-]: ADD       R28 R28 K8   ; R28 := R28 + 1
198 [-]: SETTABLE  R10 R28 R22  ; R10[R28] := R22
199 [-]: LEN       R28 R10      ; R28 := # R10
200 [-]: LT        0 K40 R28    ; if 4 >= R28 then PC := 222
201 [-]: JMP       222          ; PC := 222
202 [-]: TEST      R0 1         ; if R0 then PC := 220
203 [-]: JMP       220          ; PC := 220
204 [-]: LOADK     R28 K8       ; R28 := 1
205 [-]: LEN       R29 R10      ; R29 := # R10
206 [-]: LOADK     R30 K8       ; R30 := 1
207 [-]: FORPREP   R28 214      ; R28 -= R30; PC := 214
208 [-]: GETUPVAL  R32 U13      ; R32 := U13
209 [-]: GETTABLE  R33 R10 R31  ; R33 := R10[R31]
210 [-]: GETTABLE  R33 R4 R33   ; R33 := R4[R33]
211 [-]: GETTABLE  R33 R33 K41  ; R33 := R33["mElement"]
212 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["mClipName"]
213 [-]: CALL      R32 2 1      ; R32(R33)
214 [-]: FORLOOP   R28 208      ; R28 += R30; if R28 <= R29 then begin PC := 208; R31 := R28 end
215 [-]: GETUPVAL  R32 U8       ; R32 := U8
216 [-]: GETTABLE  R32 R32 K43  ; R32 := R32["0x25992394"]
217 [-]: GETGLOBAL R33 K44      ; R33 := _G
218 [-]: GETTABLE  R33 R33 K45  ; R33 := R33["UISound_Error"]
219 [-]: CALL      R32 2 1      ; R32(R33)
220 [-]: MOVE      R32 R0       ; R32 := R0
221 [-]: RETURN    R32 2        ; return R32
222 [-]: FORLOOP   R19 118      ; R19 += R21; if R19 <= R20 then begin PC := 118; R22 := R19 end
223 [-]: JMP       270          ; PC := 270
224 [-]: GETUPVAL  R32 U14      ; R32 := U14
225 [-]: CALL      R32 1 2      ; R32 := R32()
226 [-]: TEST      R32 0        ; if not R32 then PC := 270
227 [-]: JMP       270          ; PC := 270
228 [-]: LOADK     R32 K8       ; R32 := 1
229 [-]: LEN       R33 R4       ; R33 := # R4
230 [-]: LOADK     R34 K8       ; R34 := 1
231 [-]: FORPREP   R32 269      ; R32 -= R34; PC := 269
232 [-]: GETTABLE  R36 R4 R35   ; R36 := R4[R35]
233 [-]: GETTABLE  R37 R36 K9   ; R37 := R36["mInstalled"]
234 [-]: GETTABLE  R37 R37 R1   ; R37 := R37[R1]
235 [-]: GETUPVAL  R38 U15      ; R38 := U15
236 [-]: EQ        0 R37 R38    ; if R37 ~= R38 then PC := 241
237 [-]: JMP       241          ; PC := 241
238 [-]: GETTABLE  R37 R36 K46  ; R37 := R36["mIsStance"]
239 [-]: TEST      R37 0        ; if not R37 then PC := 249
240 [-]: JMP       249          ; PC := 249
241 [-]: GETTABLE  R37 R36 K9   ; R37 := R36["mInstalled"]
242 [-]: GETTABLE  R37 R37 R1   ; R37 := R37[R1]
243 [-]: GETUPVAL  R38 U15      ; R38 := U15
244 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 269
245 [-]: JMP       269          ; PC := 269
246 [-]: GETTABLE  R37 R36 K46  ; R37 := R36["mIsStance"]
247 [-]: TEST      R37 0        ; if not R37 then PC := 269
248 [-]: JMP       269          ; PC := 269
249 [-]: GETUPVAL  R37 U8       ; R37 := U8
250 [-]: GETTABLE  R37 R37 K17  ; R37 := R37["0x38ECFE60"]
251 [-]: GETUPVAL  R38 U8       ; R38 := U8
252 [-]: GETTABLE  R38 R38 K18  ; R38 := R38["0xF81722A2"]
253 [-]: GETTABLE  R39 R36 K9   ; R39 := R36["mInstalled"]
254 [-]: GETTABLE  R39 R39 R1   ; R39 := R39[R1]
255 [-]: GETUPVAL  R40 U15      ; R40 := U15
256 [-]: EQ        0 R39 R40    ; if R39 ~= R40 then PC := 261
257 [-]: JMP       261          ; PC := 261
258 [-]: GETTABLE  R39 R36 K46  ; R39 := R36["mIsStance"]
259 [-]: MOVE      R39 R39      ; R39 := R39
260 [-]: JMP       263          ; PC := 263
261 [-]: MOVE      R39 R0       ; R39 := R0
262 [-]: MOVE      R39 R1       ; R39 := R1
263 [-]: LOADK     R40 K47      ; R40 := "/Lotus/Language/Menu/Loadout_ApplyModToStanceSlot"
264 [-]: LOADK     R41 K48      ; R41 := "/Lotus/Language/Menu/Loadout_ApplyStanceWrongSlot"
265 [-]: CALL      R38 4 0      ; R38,... := R38(R39,R40,R41)
266 [-]: CALL      R37 0 1      ; R37(R38,...)
267 [-]: MOVE      R37 R0       ; R37 := R0
268 [-]: RETURN    R37 2        ; return R37
269 [-]: FORLOOP   R32 232      ; R32 += R34; if R32 <= R33 then begin PC := 232; R35 := R32 end
270 [-]: GETGLOBAL R37 K49      ; R37 := 0x2C00D429
271 [-]: LOADK     R38 K50      ; R38 := "/Lotus/Types/Game/SentinelPrecept/MoaPetPrecept"
272 [-]: CALL      R37 2 2      ; R37 := R37(R38)
273 [-]: NEWTABLE  R38 7 0      ; R38 := {}
274 [-]: GETGLOBAL R39 K51      ; R39 := gLotusArtifactUpgradeType
275 [-]: MOVE      R40 R37      ; R40 := R37
276 [-]: GETGLOBAL R41 K49      ; R41 := 0x2C00D429
277 [-]: LOADK     R42 K52      ; R42 := "/Lotus/Types/Game/LotusArtifactUpgrades/BaseArtifactUpgrade"
278 [-]: CALL      R41 2 2      ; R41 := R41(R42)
279 [-]: GETGLOBAL R42 K49      ; R42 := 0x2C00D429
280 [-]: LOADK     R43 K53      ; R43 := "/Lotus/Types/Game/LotusArtifactUpgrades/BaseAbilityMod"
281 [-]: CALL      R42 2 2      ; R42 := R42(R43)
282 [-]: GETGLOBAL R43 K49      ; R43 := 0x2C00D429
283 [-]: LOADK     R44 K54      ; R44 := "/Lotus/Upgrades/Mods/Melee/Channel/BaseChannelMod"
284 [-]: CALL      R43 2 2      ; R43 := R43(R44)
285 [-]: GETGLOBAL R44 K49      ; R44 := 0x2C00D429
286 [-]: LOADK     R45 K55      ; R45 := "/Lotus/Types/Game/SentinelPrecept"
287 [-]: CALL      R44 2 2      ; R44 := R44(R45)
288 [-]: GETGLOBAL R45 K49      ; R45 := 0x2C00D429
289 [-]: LOADK     R46 K56      ; R46 := "/Lotus/Upgrades/Mods/Immortal/ImmortalBaseMod"
290 [-]: CALL      R45 2 2      ; R45 := R45(R46)
291 [-]: GETGLOBAL R46 K49      ; R46 := 0x2C00D429
292 [-]: LOADK     R47 K57      ; R47 := "/Lotus/Upgrades/Mods/DataSpike/BaseDataSpikeMod"
293 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
294 [-]: SETLIST   R38 0 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 0
295 [-]: LOADK     R39 K8       ; R39 := 1
296 [-]: LEN       R40 R4       ; R40 := # R4
297 [-]: LOADK     R41 K8       ; R41 := 1
298 [-]: FORPREP   R39 383      ; R39 -= R41; PC := 383
299 [-]: GETTABLE  R43 R4 R42   ; R43 := R4[R42]
300 [-]: ADD       R44 R42 K8   ; R44 := R42 + 1
301 [-]: LEN       R45 R4       ; R45 := # R4
302 [-]: LOADK     R46 K8       ; R46 := 1
303 [-]: FORPREP   R44 382      ; R44 -= R46; PC := 382
304 [-]: GETTABLE  R48 R4 R47   ; R48 := R4[R47]
305 [-]: GETTABLE  R49 R43 K58  ; R49 := R43["mUpgrade"]
306 [-]: GETTABLE  R49 R49 K59  ; R49 := R49["mItemType"]
307 [-]: SELF      R49 R49 K60  ; R50 := R49; R49 := R49["0x4C52612B"]
308 [-]: CALL      R49 2 2      ; R49 := R49(R50)
309 [-]: GETTABLE  R50 R48 K58  ; R50 := R48["mUpgrade"]
310 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["mItemType"]
311 [-]: SELF      R50 R50 K60  ; R51 := R50; R50 := R50["0x4C52612B"]
312 [-]: CALL      R50 2 2      ; R50 := R50(R51)
313 [-]: MOVE      R51 R0       ; R51 := R0
314 [-]: MOVE      R52 R0       ; R52 := R0
315 [-]: LOADK     R53 K8       ; R53 := 1
316 [-]: LEN       R54 R38      ; R54 := # R38
317 [-]: LOADK     R55 K8       ; R55 := 1
318 [-]: FORPREP   R53 327      ; R53 -= R55; PC := 327
319 [-]: GETTABLE  R57 R38 R56  ; R57 := R38[R56]
320 [-]: EQ        0 R49 R57    ; if R49 ~= R57 then PC := 323
321 [-]: JMP       323          ; PC := 323
322 [-]: MOVE      R51 R1       ; R51 := R1
323 [-]: GETTABLE  R57 R38 R56  ; R57 := R38[R56]
324 [-]: EQ        0 R50 R57    ; if R50 ~= R57 then PC := 327
325 [-]: JMP       327          ; PC := 327
326 [-]: MOVE      R52 R1       ; R52 := R1
327 [-]: FORLOOP   R53 319      ; R53 += R55; if R53 <= R54 then begin PC := 319; R56 := R53 end
328 [-]: GETTABLE  R57 R43 K58  ; R57 := R43["mUpgrade"]
329 [-]: GETTABLE  R57 R57 K59  ; R57 := R57["mItemType"]
330 [-]: SELF      R57 R57 K61  ; R58 := R57; R57 := R57["0x8B598ED4"]
331 [-]: GETTABLE  R59 R48 K58  ; R59 := R48["mUpgrade"]
332 [-]: GETTABLE  R59 R59 K59  ; R59 := R59["mItemType"]
333 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
334 [-]: TEST      R57 1        ; if R57 then PC := 364
335 [-]: JMP       364          ; PC := 364
336 [-]: GETTABLE  R57 R48 K58  ; R57 := R48["mUpgrade"]
337 [-]: GETTABLE  R57 R57 K59  ; R57 := R57["mItemType"]
338 [-]: SELF      R57 R57 K61  ; R58 := R57; R57 := R57["0x8B598ED4"]
339 [-]: GETTABLE  R59 R43 K58  ; R59 := R43["mUpgrade"]
340 [-]: GETTABLE  R59 R59 K59  ; R59 := R59["mItemType"]
341 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
342 [-]: TEST      R57 1        ; if R57 then PC := 364
343 [-]: JMP       364          ; PC := 364
344 [-]: GETUPVAL  R57 U16      ; R57 := U16
345 [-]: MOVE      R58 R43      ; R58 := R43
346 [-]: MOVE      R59 R48      ; R59 := R48
347 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
348 [-]: TEST      R57 1        ; if R57 then PC := 364
349 [-]: JMP       364          ; PC := 364
350 [-]: TEST      R51 1        ; if R51 then PC := 382
351 [-]: JMP       382          ; PC := 382
352 [-]: TEST      R52 1        ; if R52 then PC := 382
353 [-]: JMP       382          ; PC := 382
354 [-]: SELF      R57 R49 K61  ; R58 := R49; R57 := R49["0x8B598ED4"]
355 [-]: MOVE      R59 R50      ; R59 := R50
356 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
357 [-]: TEST      R57 1        ; if R57 then PC := 364
358 [-]: JMP       364          ; PC := 364
359 [-]: SELF      R57 R50 K61  ; R58 := R50; R57 := R50["0x8B598ED4"]
360 [-]: MOVE      R59 R49      ; R59 := R49
361 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
362 [-]: TEST      R57 0        ; if not R57 then PC := 382
363 [-]: JMP       382          ; PC := 382
364 [-]: TEST      R0 1         ; if R0 then PC := 380
365 [-]: JMP       380          ; PC := 380
366 [-]: GETTABLE  R57 R43 K41  ; R57 := R43["mElement"]
367 [-]: TEST      R57 0        ; if not R57 then PC := 373
368 [-]: JMP       373          ; PC := 373
369 [-]: GETUPVAL  R57 U13      ; R57 := U13
370 [-]: GETTABLE  R58 R43 K41  ; R58 := R43["mElement"]
371 [-]: GETTABLE  R58 R58 K42  ; R58 := R58["mClipName"]
372 [-]: CALL      R57 2 1      ; R57(R58)
373 [-]: GETTABLE  R57 R48 K41  ; R57 := R48["mElement"]
374 [-]: TEST      R57 0        ; if not R57 then PC := 380
375 [-]: JMP       380          ; PC := 380
376 [-]: GETUPVAL  R57 U13      ; R57 := U13
377 [-]: GETTABLE  R58 R48 K41  ; R58 := R48["mElement"]
378 [-]: GETTABLE  R58 R58 K42  ; R58 := R58["mClipName"]
379 [-]: CALL      R57 2 1      ; R57(R58)
380 [-]: MOVE      R57 R0       ; R57 := R0
381 [-]: RETURN    R57 2        ; return R57
382 [-]: FORLOOP   R44 304      ; R44 += R46; if R44 <= R45 then begin PC := 304; R47 := R44 end
383 [-]: FORLOOP   R39 299      ; R39 += R41; if R39 <= R40 then begin PC := 299; R42 := R39 end
384 [-]: LOADK     R57 K3       ; R57 := 0
385 [-]: NEWTABLE  R58 0 0      ; R58 := {}
386 [-]: LOADK     R59 K8       ; R59 := 1
387 [-]: LEN       R60 R4       ; R60 := # R4
388 [-]: LOADK     R61 K8       ; R61 := 1
389 [-]: FORPREP   R59 425      ; R59 -= R61; PC := 425
390 [-]: GETTABLE  R63 R4 R62   ; R63 := R4[R62]
391 [-]: GETTABLE  R64 R63 K58  ; R64 := R63["mUpgrade"]
392 [-]: GETTABLE  R64 R64 K59  ; R64 := R64["mItemType"]
393 [-]: SELF      R64 R64 K61  ; R65 := R64; R64 := R64["0x8B598ED4"]
394 [-]: MOVE      R66 R37      ; R66 := R37
395 [-]: CALL      R64 3 2      ; R64 := R64(R65,R66)
396 [-]: TEST      R64 0        ; if not R64 then PC := 425
397 [-]: JMP       425          ; PC := 425
398 [-]: ADD       R57 R57 K8   ; R57 := R57 + 1
399 [-]: GETGLOBAL R64 K11      ; R64 := table
400 [-]: GETTABLE  R64 R64 K12  ; R64 := R64["0xE6450C9D"]
401 [-]: MOVE      R65 R58      ; R65 := R58
402 [-]: MOVE      R66 R63      ; R66 := R63
403 [-]: CALL      R64 3 1      ; R64(R65,R66)
404 [-]: GETGLOBAL R64 K6       ; R64 := Lotus_Game
405 [-]: GETTABLE  R64 R64 K62  ; R64 := R64["0x7499F909"]
406 [-]: CALL      R64 1 2      ; R64 := R64()
407 [-]: LT        0 R64 R57    ; if R64 >= R57 then PC := 425
408 [-]: JMP       425          ; PC := 425
409 [-]: LOADK     R64 K8       ; R64 := 1
410 [-]: LEN       R65 R58      ; R65 := # R58
411 [-]: LOADK     R66 K8       ; R66 := 1
412 [-]: FORPREP   R64 422      ; R64 -= R66; PC := 422
413 [-]: GETTABLE  R68 R58 R67  ; R68 := R58[R67]
414 [-]: GETTABLE  R68 R68 K41  ; R68 := R68["mElement"]
415 [-]: TEST      R68 0        ; if not R68 then PC := 422
416 [-]: JMP       422          ; PC := 422
417 [-]: GETUPVAL  R68 U13      ; R68 := U13
418 [-]: GETTABLE  R69 R58 R67  ; R69 := R58[R67]
419 [-]: GETTABLE  R69 R69 K41  ; R69 := R69["mElement"]
420 [-]: GETTABLE  R69 R69 K42  ; R69 := R69["mClipName"]
421 [-]: CALL      R68 2 1      ; R68(R69)
422 [-]: FORLOOP   R64 413      ; R64 += R66; if R64 <= R65 then begin PC := 413; R67 := R64 end
423 [-]: MOVE      R68 R0       ; R68 := R0
424 [-]: RETURN    R68 2        ; return R68
425 [-]: FORLOOP   R59 390      ; R59 += R61; if R59 <= R60 then begin PC := 390; R62 := R59 end
426 [-]: LOADK     R68 K3       ; R68 := 0
427 [-]: MOVE      R69 R0       ; R69 := R0
428 [-]: LOADK     R70 K8       ; R70 := 1
429 [-]: LEN       R71 R4       ; R71 := # R4
430 [-]: LOADK     R72 K8       ; R72 := 1
431 [-]: FORPREP   R70 463      ; R70 -= R72; PC := 463
432 [-]: GETTABLE  R74 R4 R73   ; R74 := R4[R73]
433 [-]: GETUPVAL  R75 U7       ; R75 := U7
434 [-]: GETTABLE  R75 R75 K63  ; R75 := R75["0xB32132B3"]
435 [-]: GETUPVAL  R76 U11      ; R76 := U11
436 [-]: SELF      R76 R76 K32  ; R77 := R76; R76 := R76["0xF61F409A"]
437 [-]: GETTABLE  R78 R74 K9   ; R78 := R74["mInstalled"]
438 [-]: GETTABLE  R78 R78 R1   ; R78 := R78[R1]
439 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
440 [-]: MOVE      R77 R74      ; R77 := R74
441 [-]: CALL      R75 3 2      ; R75 := R75(R76,R77)
442 [-]: LT        0 R75 K3     ; if R75 >= 0 then PC := 445
443 [-]: JMP       445          ; PC := 445
444 [-]: UNM       R68 R75      ; R68 := - R75
445 [-]: GETUPVAL  R76 U2       ; R76 := U2
446 [-]: ADD       R76 R76 R75  ; R76 := R76 + R75
447 [-]: MOVE      R76 R2       ; R76 := R2
448 [-]: SUB       R2 R2 R75    ; R2 := R2 - R75
449 [-]: LE        1 K3 R2      ; if 0 <= R2 then PC := 452
450 [-]: JMP       452          ; PC := 452
451 [-]: MOVE      R3 R0        ; R3 := R0
452 [-]: MOVE      R3 R1        ; R3 := R1
453 [-]: GETUPVAL  R76 U14      ; R76 := U14
454 [-]: CALL      R76 1 2      ; R76 := R76()
455 [-]: TEST      R76 0        ; if not R76 then PC := 463
456 [-]: JMP       463          ; PC := 463
457 [-]: GETTABLE  R76 R74 K9   ; R76 := R74["mInstalled"]
458 [-]: GETTABLE  R76 R76 R1   ; R76 := R76[R1]
459 [-]: GETUPVAL  R77 U15      ; R77 := U15
460 [-]: EQ        0 R76 R77    ; if R76 ~= R77 then PC := 463
461 [-]: JMP       463          ; PC := 463
462 [-]: MOVE      R69 R1       ; R69 := R1
463 [-]: FORLOOP   R70 432      ; R70 += R72; if R70 <= R71 then begin PC := 432; R73 := R70 end
464 [-]: GETUPVAL  R76 U17      ; R76 := U17
465 [-]: SELF      R76 R76 K64  ; R77 := R76; R76 := R76["0x625791A8"]
466 [-]: MOVE      R78 R69      ; R78 := R69
467 [-]: CALL      R76 3 1      ; R76(R77,R78)
468 [-]: GETGLOBAL R76 K65      ; R76 := mMovie
469 [-]: SELF      R76 R76 K66  ; R77 := R76; R76 := R76["0x1C19D966"]
470 [-]: LOADK     R78 K67      ; R78 := "Installed.ComboPointer"
471 [-]: LOADK     R79 K68      ; R79 := "_visible"
472 [-]: MOVE      R80 R69      ; R80 := R69
473 [-]: CALL      R76 5 1      ; R76(R77,R78,R79,R80)
474 [-]: LOADK     R76 K3       ; R76 := 0
475 [-]: GETGLOBAL R77 K69      ; R77 := 0xB5A59043
476 [-]: LOADK     R78 K3       ; R78 := 0
477 [-]: LOADK     R79 K3       ; R79 := 0
478 [-]: LOADK     R80 K3       ; R80 := 0
479 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
480 [-]: GETUPVAL  R78 U1       ; R78 := U1
481 [-]: LT        0 K3 R78     ; if 0 >= R78 then PC := 529
482 [-]: JMP       529          ; PC := 529
483 [-]: GETGLOBAL R78 K70      ; R78 := 0x6374FD98
484 [-]: GETUPVAL  R79 U2       ; R79 := U2
485 [-]: GETUPVAL  R80 U1       ; R80 := U1
486 [-]: DIV       R79 R79 R80  ; R79 := R79 / R80
487 [-]: SUB       R79 K8 R79   ; R79 := 1 - R79
488 [-]: LOADK     R80 K3       ; R80 := 0
489 [-]: LOADK     R81 K8       ; R81 := 1
490 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
491 [-]: MOVE      R76 R78      ; R76 := R78
492 [-]: GETGLOBAL R78 K69      ; R78 := 0xB5A59043
493 [-]: LOADK     R79 K3       ; R79 := 0
494 [-]: LOADK     R80 K71      ; R80 := 128
495 [-]: LOADK     R81 K72      ; R81 := 255
496 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
497 [-]: GETGLOBAL R79 K69      ; R79 := 0xB5A59043
498 [-]: LOADK     R80 K71      ; R80 := 128
499 [-]: LOADK     R81 K71      ; R81 := 128
500 [-]: LOADK     R82 K3       ; R82 := 0
501 [-]: CALL      R79 4 2      ; R79 := R79(R80,R81,R82)
502 [-]: GETGLOBAL R80 K69      ; R80 := 0xB5A59043
503 [-]: LOADK     R81 K72      ; R81 := 255
504 [-]: LOADK     R82 K3       ; R82 := 0
505 [-]: LOADK     R83 K3       ; R83 := 0
506 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
507 [-]: LT        0 R76 K73    ; if R76 >= 0.5 then PC := 519
508 [-]: JMP       519          ; PC := 519
509 [-]: SELF      R81 R79 K74  ; R82 := R79; R81 := R79["0x93034B55"]
510 [-]: MOVE      R83 R80      ; R83 := R80
511 [-]: GETGLOBAL R84 K75      ; R84 := math
512 [-]: GETTABLE  R84 R84 K76  ; R84 := R84["0x8B011038"]
513 [-]: MUL       R85 R76 K77  ; R85 := R76 * 2
514 [-]: CALL      R84 2 2      ; R84 := R84(R85)
515 [-]: SUB       R84 K8 R84   ; R84 := 1 - R84
516 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
517 [-]: MOVE      R77 R81      ; R77 := R81
518 [-]: JMP       529          ; PC := 529
519 [-]: SELF      R81 R78 K74  ; R82 := R78; R81 := R78["0x93034B55"]
520 [-]: MOVE      R83 R79      ; R83 := R79
521 [-]: GETGLOBAL R84 K75      ; R84 := math
522 [-]: GETTABLE  R84 R84 K76  ; R84 := R84["0x8B011038"]
523 [-]: SUB       R85 R76 K73  ; R85 := R76 - 0.5
524 [-]: MUL       R85 R85 K77  ; R85 := R85 * 2
525 [-]: CALL      R84 2 2      ; R84 := R84(R85)
526 [-]: SUB       R84 K8 R84   ; R84 := 1 - R84
527 [-]: CALL      R81 4 2      ; R81 := R81(R82,R83,R84)
528 [-]: MOVE      R77 R81      ; R77 := R81
529 [-]: GETGLOBAL R81 K75      ; R81 := math
530 [-]: GETTABLE  R81 R81 K76  ; R81 := R81["0x8B011038"]
531 [-]: LOADK     R82 K8       ; R82 := 1
532 [-]: MUL       R83 R76 K78  ; R83 := R76 * 100
533 [-]: CALL      R81 3 2      ; R81 := R81(R82,R83)
534 [-]: EQ        0 R81 K8     ; if R81 ~= 1 then PC := 543
535 [-]: JMP       543          ; PC := 543
536 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
537 [-]: SELF      R82 R82 K66  ; R83 := R82; R82 := R82["0x1C19D966"]
538 [-]: LOADK     R84 K79      ; R84 := "Capacity.Bar"
539 [-]: LOADK     R85 K68      ; R85 := "_visible"
540 [-]: MOVE      R86 R0       ; R86 := R0
541 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
542 [-]: JMP       555          ; PC := 555
543 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
544 [-]: SELF      R82 R82 K66  ; R83 := R82; R82 := R82["0x1C19D966"]
545 [-]: LOADK     R84 K79      ; R84 := "Capacity.Bar"
546 [-]: LOADK     R85 K68      ; R85 := "_visible"
547 [-]: MOVE      R86 R1       ; R86 := R1
548 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
549 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
550 [-]: SELF      R82 R82 K66  ; R83 := R82; R82 := R82["0x1C19D966"]
551 [-]: LOADK     R84 K79      ; R84 := "Capacity.Bar"
552 [-]: LOADK     R85 K80      ; R85 := "_xscale"
553 [-]: MOVE      R86 R81      ; R86 := R81
554 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
555 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
556 [-]: SELF      R82 R82 K66  ; R83 := R82; R82 := R82["0x1C19D966"]
557 [-]: LOADK     R84 K79      ; R84 := "Capacity.Bar"
558 [-]: LOADK     R85 K81      ; R85 := "_color"
559 [-]: SELF      R86 R77 K82  ; R87 := R77; R86 := R77["0x479E62B4"]
560 [-]: CALL      R86 2 0      ; R86,... := R86(R87)
561 [-]: CALL      R82 0 1      ; R82(R83,...)
562 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
563 [-]: SELF      R82 R82 K83  ; R83 := R82; R82 := R82["0x17028E8F"]
564 [-]: LOADK     R84 K84      ; R84 := "CapacityLabel.text"
565 [-]: LOADK     R85 K85      ; R85 := "/Lotus/Language/Menu/ModsCapacity"
566 [-]: CALL      R82 4 1      ; R82(R83,R84,R85)
567 [-]: GETGLOBAL R82 K65      ; R82 := mMovie
568 [-]: SELF      R82 R82 K86  ; R83 := R82; R82 := R82["0xD6A79FE9"]
569 [-]: LOADK     R84 K87      ; R84 := "CapacityNumber"
570 [-]: LOADK     R85 K88      ; R85 := "text"
571 [-]: GETUPVAL  R86 U1       ; R86 := U1
572 [-]: GETUPVAL  R87 U2       ; R87 := U2
573 [-]: SUB       R86 R86 R87  ; R86 := R86 - R87
574 [-]: LOADK     R87 K89      ; R87 := "/"
575 [-]: GETUPVAL  R88 U1       ; R88 := U1
576 [-]: ADD       R88 R88 R68  ; R88 := R88 + R68
577 [-]: CONCAT    R86 R86 R88  ; R86 := R86 .. R87 .. R88
578 [-]: CALL      R82 5 1      ; R82(R83,R84,R85,R86)
579 [-]: TEST      R3 1         ; if R3 then PC := 592
580 [-]: JMP       592          ; PC := 592
581 [-]: TEST      R0 1         ; if R0 then PC := 592
582 [-]: JMP       592          ; PC := 592
583 [-]: GETUPVAL  R82 U13      ; R82 := U13
584 [-]: LOADK     R83 K90      ; R83 := "Capacity"
585 [-]: CALL      R82 2 1      ; R82(R83)
586 [-]: GETUPVAL  R82 U13      ; R82 := U13
587 [-]: LOADK     R83 K91      ; R83 := "CapacityLabel"
588 [-]: CALL      R82 2 1      ; R82(R83)
589 [-]: GETUPVAL  R82 U13      ; R82 := U13
590 [-]: LOADK     R83 K87      ; R83 := "CapacityNumber"
591 [-]: CALL      R82 2 1      ; R82(R83)
592 [-]: RETURN    R3 2         ; return R3
593 [-]: RETURN    R0 1         ; return 


; Function #25.1:
;
; Name:            
; Defined at line: 459
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInstalled"]
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  4 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mInstalled"]
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
  7 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 652
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := table
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["CategoryId_ALL"]
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
  9 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x8B598ED4"]
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["warframeForFiltering"]
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mType"]
 16 [-]: EQ        0 R2 K7      ; if R2 ~= "AURA" then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R2 K0        ; R2 := table
 19 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["CategoryId_AURA"]
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["warframeForFiltering"]
 28 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R2 K0        ; R2 := table
 31 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: GETUPVAL  R4 U0        ; R4 := U0
 34 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["CategoryId_AUGMENT"]
 35 [-]: CALL      R2 3 1       ; R2(R3,R4)
 36 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mIsUtility"]
 37 [-]: TEST      R2 0         ; if not R2 then PC := 45
 38 [-]: JMP       45           ; PC := 45
 39 [-]: GETGLOBAL R2 K0        ; R2 := table
 40 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 41 [-]: MOVE      R3 R1        ; R3 := R1
 42 [-]: GETUPVAL  R4 U0        ; R4 := U0
 43 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["CategoryId_UTILITY"]
 44 [-]: CALL      R2 3 1       ; R2(R3,R4)
 45 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
 46 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x8B598ED4"]
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["rifleForFiltering"]
 49 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 50 [-]: TEST      R2 1         ; if R2 then PC := 59
 51 [-]: JMP       59           ; PC := 59
 52 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
 53 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x8B598ED4"]
 54 [-]: GETUPVAL  R4 U0        ; R4 := U0
 55 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["pistolForFiltering"]
 56 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 57 [-]: TEST      R2 0         ; if not R2 then PC := 68
 58 [-]: JMP       68           ; PC := 68
 59 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mIsUtility"]
 60 [-]: TEST      R2 0         ; if not R2 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R2 K0        ; R2 := table
 63 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 64 [-]: MOVE      R3 R1        ; R3 := R1
 65 [-]: GETUPVAL  R4 U0        ; R4 := U0
 66 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["CategoryId_UTILITY"]
 67 [-]: CALL      R2 3 1       ; R2(R3,R4)
 68 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
 69 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x8B598ED4"]
 70 [-]: GETUPVAL  R4 U0        ; R4 := U0
 71 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["archwingSuitForFiltering"]
 72 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 73 [-]: TEST      R2 0         ; if not R2 then PC := 86
 74 [-]: JMP       86           ; PC := 86
 75 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mItemCompatibility"]
 76 [-]: GETUPVAL  R3 U0        ; R3 := U0
 77 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["archwingSuitForFiltering"]
 78 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 86
 79 [-]: JMP       86           ; PC := 86
 80 [-]: GETGLOBAL R2 K0        ; R2 := table
 81 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 82 [-]: MOVE      R3 R1        ; R3 := R1
 83 [-]: GETUPVAL  R4 U0        ; R4 := U0
 84 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["CategoryId_AUGMENT"]
 85 [-]: CALL      R2 3 1       ; R2(R3,R4)
 86 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mIsStance"]
 87 [-]: TEST      R2 0         ; if not R2 then PC := 95
 88 [-]: JMP       95           ; PC := 95
 89 [-]: GETGLOBAL R2 K0        ; R2 := table
 90 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xE6450C9D"]
 91 [-]: MOVE      R3 R1        ; R3 := R1
 92 [-]: GETUPVAL  R4 U0        ; R4 := U0
 93 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["CategoryId_STANCE"]
 94 [-]: CALL      R2 3 1       ; R2(R3,R4)
 95 [-]: GETUPVAL  R2 U0        ; R2 := U0
 96 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["0x8616778F"]
 97 [-]: MOVE      R3 R0        ; R3 := R0
 98 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 99 [-]: TEST      R2 0         ; if not R2 then PC := 107
100 [-]: JMP       107          ; PC := 107
101 [-]: GETGLOBAL R3 K0        ; R3 := table
102 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
103 [-]: MOVE      R4 R1        ; R4 := R1
104 [-]: GETUPVAL  R5 U0        ; R5 := U0
105 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["CategoryId_OMEGA"]
106 [-]: CALL      R3 3 1       ; R3(R4,R5)
107 [-]: GETUPVAL  R3 U0        ; R3 := U0
108 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0xB151CC5A"]
109 [-]: MOVE      R4 R0        ; R4 := R0
110 [-]: CALL      R3 2 2       ; R3 := R3(R4)
111 [-]: TEST      R3 0         ; if not R3 then PC := 119
112 [-]: JMP       119          ; PC := 119
113 [-]: GETGLOBAL R3 K0        ; R3 := table
114 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
115 [-]: MOVE      R4 R1        ; R4 := R1
116 [-]: GETUPVAL  R5 U0        ; R5 := U0
117 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["CategoryId_IMMORTAL"]
118 [-]: CALL      R3 3 1       ; R3(R4,R5)
119 [-]: TEST      R2 0         ; if not R2 then PC := 124
120 [-]: JMP       124          ; PC := 124
121 [-]: GETTABLE  R3 R0 K21    ; R3 := R0["mIdentified"]
122 [-]: TEST      R3 0         ; if not R3 then PC := 130
123 [-]: JMP       130          ; PC := 130
124 [-]: GETGLOBAL R3 K0        ; R3 := table
125 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xE6450C9D"]
126 [-]: MOVE      R4 R1        ; R4 := R1
127 [-]: GETTABLE  R5 R0 K22    ; R5 := R0["mPolarity"]
128 [-]: ADD       R5 K23 R5    ; R5 := 100 + R5
129 [-]: CALL      R3 3 1       ; R3(R4,R5)
130 [-]: RETURN    R1 2         ; return R1
131 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 697
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ArsenalState"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["ARSENAL_STATE_PVP"]
  5 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: TEST      R2 0         ; if not R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: RETURN    R3 2         ; return R3
 13 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
 14 [-]: GETUPVAL  R5 U0        ; R5 := U0
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0xF81722A2"]
 16 [-]: GETGLOBAL R6 K0        ; R6 := _T
 17 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["upgradeItemLot"]
 18 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
 19 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["LOT_NORMAL"]
 20 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R6 R0        ; R6 := R0
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["LOT_SENTINEL"]
 26 [-]: GETGLOBAL R8 K2        ; R8 := Lotus_Game
 27 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["LOT_NORMAL"]
 28 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 29 [-]: LOADNIL   R6 R6        ; R6 := nil
 30 [-]: GETGLOBAL R7 K8        ; R7 := 0x400E7765
 31 [-]: GETUPVAL  R8 U1        ; R8 := U1
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: TEST      R7 1         ; if R7 then PC := 137
 34 [-]: JMP       137          ; PC := 137
 35 [-]: GETUPVAL  R7 U1        ; R7 := U1
 36 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x6F2E05FD"]
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: MOVE      R4 R7        ; R4 := R7
 39 [-]: EQ        1 R4 K10     ; if R4 == nil then PC := 137
 40 [-]: JMP       137          ; PC := 137
 41 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
 42 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["LOT_SENTINEL"]
 43 [-]: EQ        0 R5 R7      ; if R5 ~= R7 then PC := 69
 44 [-]: JMP       69           ; PC := 69
 45 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 46 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7["0xA81C4B63"]
 47 [-]: GETGLOBAL R9 K2        ; R9 := Lotus_Game
 48 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["SUIT_SLOT"]
 49 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 50 [-]: SELF      R8 R4 K13    ; R9 := R4; R8 := R4["0xD2EADDBF"]
 51 [-]: MOVE      R10 R5       ; R10 := R5
 52 [-]: GETGLOBAL R11 K2       ; R11 := Lotus_Game
 53 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["SUIT_SLOT"]
 54 [-]: GETTABLE  R12 R7 K14   ; R12 := R7["mItemId"]
 55 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mId"]
 56 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 57 [-]: GETGLOBAL R9 K8        ; R9 := 0x400E7765
 58 [-]: GETTABLE  R10 R8 K16   ; R10 := R8["mItemType"]
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: TEST      R9 1         ; if R9 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETTABLE  R9 R8 K16    ; R9 := R8["mItemType"]
 63 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9["0x8B598ED4"]
 64 [-]: GETGLOBAL R11 K18      ; R11 := gPetPowerSuitType
 65 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 66 [-]: TEST      R9 0         ; if not R9 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: LOADNIL   R9 R9        ; R9 := nil
 70 [-]: GETGLOBAL R10 K2       ; R10 := Lotus_Game
 71 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["LOT_NORMAL"]
 72 [-]: EQ        0 R5 R10     ; if R5 ~= R10 then PC := 115
 73 [-]: JMP       115          ; PC := 115
 74 [-]: GETGLOBAL R10 K2       ; R10 := Lotus_Game
 75 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["LOT_SENTINEL"]
 76 [-]: GETTABLE  R10 R1 R10   ; R10 := R1[R10]
 77 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xA81C4B63"]
 78 [-]: GETGLOBAL R12 K2       ; R12 := Lotus_Game
 79 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["LONG_GUN_SLOT"]
 80 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 81 [-]: SELF      R11 R4 K13   ; R12 := R4; R11 := R4["0xD2EADDBF"]
 82 [-]: GETGLOBAL R13 K2       ; R13 := Lotus_Game
 83 [-]: GETTABLE  R13 R13 K7   ; R13 := R13["LOT_SENTINEL"]
 84 [-]: GETGLOBAL R14 K2       ; R14 := Lotus_Game
 85 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["LONG_GUN_SLOT"]
 86 [-]: GETTABLE  R15 R10 K14  ; R15 := R10["mItemId"]
 87 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mId"]
 88 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
 89 [-]: GETGLOBAL R12 K8       ; R12 := 0x400E7765
 90 [-]: GETTABLE  R13 R11 K16  ; R13 := R11["mItemType"]
 91 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 92 [-]: TEST      R12 1        ; if R12 then PC := 117
 93 [-]: JMP       117          ; PC := 117
 94 [-]: GETTABLE  R12 R11 K16  ; R12 := R11["mItemType"]
 95 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x8B598ED4"]
 96 [-]: GETGLOBAL R14 K20      ; R14 := gLotusPistolType
 97 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 98 [-]: TEST      R12 0        ; if not R12 then PC := 103
 99 [-]: JMP       103          ; PC := 103
100 [-]: GETGLOBAL R12 K2       ; R12 := Lotus_Game
101 [-]: GETTABLE  R9 R12 K21   ; R9 := R12["PISTOL_SLOT"]
102 [-]: JMP       117          ; PC := 117
103 [-]: GETTABLE  R12 R11 K16  ; R12 := R11["mItemType"]
104 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x8B598ED4"]
105 [-]: GETGLOBAL R14 K22      ; R14 := gLotusMeleeWeaponType
106 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
107 [-]: TEST      R12 0        ; if not R12 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETGLOBAL R12 K2       ; R12 := Lotus_Game
110 [-]: GETTABLE  R9 R12 K23   ; R9 := R12["MELEE_SLOT"]
111 [-]: JMP       117          ; PC := 117
112 [-]: GETGLOBAL R12 K2       ; R12 := Lotus_Game
113 [-]: GETTABLE  R9 R12 K19   ; R9 := R12["LONG_GUN_SLOT"]
114 [-]: JMP       117          ; PC := 117
115 [-]: GETGLOBAL R12 K2       ; R12 := Lotus_Game
116 [-]: GETTABLE  R9 R12 K19   ; R9 := R12["LONG_GUN_SLOT"]
117 [-]: EQ        1 R9 K10     ; if R9 == nil then PC := 137
118 [-]: JMP       137          ; PC := 137
119 [-]: GETTABLE  R12 R1 R5    ; R12 := R1[R5]
120 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12["0xA81C4B63"]
121 [-]: MOVE      R14 R9       ; R14 := R9
122 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
123 [-]: SELF      R13 R4 K13   ; R14 := R4; R13 := R4["0xD2EADDBF"]
124 [-]: MOVE      R15 R5       ; R15 := R5
125 [-]: MOVE      R16 R9       ; R16 := R9
126 [-]: GETTABLE  R17 R12 K14  ; R17 := R12["mItemId"]
127 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["mId"]
128 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
129 [-]: MOVE      R3 R13       ; R3 := R13
130 [-]: GETTABLE  R6 R12 K24   ; R6 := R12["mModSlot"]
131 [-]: GETGLOBAL R13 K8       ; R13 := 0x400E7765
132 [-]: GETTABLE  R14 R3 K16   ; R14 := R3["mItemType"]
133 [-]: CALL      R13 2 2      ; R13 := R13(R14)
134 [-]: TEST      R13 0        ; if not R13 then PC := 137
135 [-]: JMP       137          ; PC := 137
136 [-]: LOADNIL   R3 R3        ; R3 := nil
137 [-]: EQ        1 R3 K10     ; if R3 == nil then PC := 148
138 [-]: JMP       148          ; PC := 148
139 [-]: GETTABLE  R13 R0 K25   ; R13 := R0["mUpgrade"]
140 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["mInstance"]
141 [-]: SELF      R13 R13 K27  ; R14 := R13; R13 := R13["0xDB6FB17B"]
142 [-]: GETTABLE  R15 R0 K25   ; R15 := R0["mUpgrade"]
143 [-]: GETTABLE  R15 R15 K28  ; R15 := R15["mUpgradeFingerprint"]
144 [-]: GETTABLE  R16 R3 K16   ; R16 := R3["mItemType"]
145 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
146 [-]: TEST      R13 1        ; if R13 then PC := 150
147 [-]: JMP       150          ; PC := 150
148 [-]: MOVE      R13 R0       ; R13 := R0
149 [-]: RETURN    R13 2        ; return R13
150 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 195
151 [-]: JMP       195          ; PC := 195
152 [-]: GETTABLE  R13 R0 K25   ; R13 := R0["mUpgrade"]
153 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["mItemId"]
154 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["mId"]
155 [-]: EQ        0 R13 K29    ; if R13 ~= "" then PC := 161
156 [-]: JMP       161          ; PC := 161
157 [-]: GETTABLE  R13 R0 K25   ; R13 := R0["mUpgrade"]
158 [-]: GETTABLE  R13 R13 K30  ; R13 := R13["mItemCount"]
159 [-]: EQ        0 R13 K31    ; if R13 ~= 1 then PC := 195
160 [-]: JMP       195          ; PC := 195
161 [-]: GETUPVAL  R13 U2       ; R13 := U2
162 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["0x9513F43A"]
163 [-]: MOVE      R14 R4       ; R14 := R4
164 [-]: MOVE      R15 R3       ; R15 := R3
165 [-]: MOVE      R16 R0       ; R16 := R0
166 [-]: MOVE      R17 R6       ; R17 := R6
167 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
168 [-]: GETTABLE  R13 R0 K33   ; R13 := R0["mInstalled"]
169 [-]: GETTABLE  R14 R3 K14   ; R14 := R3["mItemId"]
170 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["mId"]
171 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
172 [-]: GETTABLE  R14 R0 K33   ; R14 := R0["mInstalled"]
173 [-]: GETTABLE  R15 R3 K14   ; R15 := R3["mItemId"]
174 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mId"]
175 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
176 [-]: EQ        1 R14 K10    ; if R14 == nil then PC := 195
177 [-]: JMP       195          ; PC := 195
178 [-]: GETUPVAL  R14 U3       ; R14 := U3
179 [-]: SELF      R14 R14 K34  ; R15 := R14; R14 := R14["0xFED851F6"]
180 [-]: GETTABLE  R16 R3 K16   ; R16 := R3["mItemType"]
181 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
182 [-]: GETGLOBAL R15 K35      ; R15 := mMovie
183 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15["0x5DB0BD4"]
184 [-]: GETGLOBAL R17 K37      ; R17 := 0x9FAED6BC
185 [-]: SELF      R18 R14 K38  ; R19 := R14; R18 := R14["0x616C74B6"]
186 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
187 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
188 [-]: MOVE      R18 R0       ; R18 := R0
189 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
190 [-]: MOVE      R16 R1       ; R16 := R1
191 [-]: MOVE      R17 R5       ; R17 := R5
192 [-]: MOVE      R18 R14      ; R18 := R14
193 [-]: MOVE      R19 R15      ; R19 := R15
194 [-]: RETURN    R16 5        ; return R16,R17,R18,R19
195 [-]: MOVE      R16 R0       ; R16 := R0
196 [-]: RETURN    R16 2        ; return R16
197 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 769
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  50

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7CF71D03"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["info"]
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mItemId"]
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mId"]
  8 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 10 [-]: LOADK     R3 K6        ; R3 := "<MOD_SELECTOR>"
 11 [-]: MOVE      R4 R1        ; R4 := R1
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 14 [-]: GETUPVAL  R3 U2        ; R3 := U2
 15 [-]: LEN       R3 R3        ; R3 := # R3
 16 [-]: LOADK     R4 K7        ; R4 := 0
 17 [-]: LOADNIL   R5 R5        ; R5 := nil
 18 [-]: LOADK     R6 K7        ; R6 := 0
 19 [-]: GETUPVAL  R7 U3        ; R7 := U3
 20 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x6F2E05FD"]
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 23 [-]: LOADK     R9 K7        ; R9 := 0
 24 [-]: GETGLOBAL R10 K9       ; R10 := Lotus_Game
 25 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["MAX_LoadOutType"]
 26 [-]: SUB       R10 R10 K11  ; R10 := R10 - 1
 27 [-]: LOADK     R11 K11      ; R11 := 1
 28 [-]: FORPREP   R9 36        ; R9 -= R11; PC := 36
 29 [-]: SELF      R13 R7 K12   ; R14 := R7; R13 := R7["0x5A67CD40"]
 30 [-]: MOVE      R15 R12      ; R15 := R12
 31 [-]: SELF      R16 R7 K13   ; R17 := R7; R16 := R7["0x413E14F1"]
 32 [-]: MOVE      R18 R12      ; R18 := R12
 33 [-]: CALL      R16 3 0      ; R16,... := R16(R17,R18)
 34 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 35 [-]: SETTABLE  R8 R12 R13   ; R8[R12] := R13
 36 [-]: FORLOOP   R9 29        ; R9 += R11; if R9 <= R10 then begin PC := 29; R12 := R9 end
 37 [-]: LOADK     R13 K11      ; R13 := 1
 38 [-]: MOVE      R14 R3       ; R14 := R3
 39 [-]: LOADK     R15 K11      ; R15 := 1
 40 [-]: FORPREP   R13 141      ; R13 -= R15; PC := 141
 41 [-]: GETGLOBAL R17 K14      ; R17 := 0x1BF588C6
 42 [-]: LOADK     R18 K7       ; R18 := 0
 43 [-]: CALL      R17 2 1      ; R17(R18)
 44 [-]: GETUPVAL  R17 U2       ; R17 := U2
 45 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 46 [-]: GETTABLE  R18 R17 K15  ; R18 := R17["mInstalled"]
 47 [-]: GETTABLE  R18 R18 R0   ; R18 := R18[R0]
 48 [-]: EQ        0 R18 K16    ; if R18 ~= nil then PC := 133
 49 [-]: JMP       133          ; PC := 133
 50 [-]: LOADNIL   R5 R5        ; R5 := nil
 51 [-]: LOADK     R18 K11      ; R18 := 1
 52 [-]: MOVE      R19 R4       ; R19 := R4
 53 [-]: LOADK     R20 K11      ; R20 := 1
 54 [-]: FORPREP   R18 77       ; R18 -= R20; PC := 77
 55 [-]: GETTABLE  R22 R17 K17  ; R22 := R17["mUpgrade"]
 56 [-]: GETTABLE  R22 R22 K18  ; R22 := R22["mItemType"]
 57 [-]: GETUPVAL  R23 U2       ; R23 := U2
 58 [-]: GETTABLE  R24 R2 R21   ; R24 := R2[R21]
 59 [-]: GETTABLE  R24 R24 K19  ; R24 := R24["mCardIndex"]
 60 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
 61 [-]: GETTABLE  R23 R23 K17  ; R23 := R23["mUpgrade"]
 62 [-]: GETTABLE  R23 R23 K18  ; R23 := R23["mItemType"]
 63 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 77
 64 [-]: JMP       77           ; PC := 77
 65 [-]: GETTABLE  R22 R17 K20  ; R22 := R17["mLevel"]
 66 [-]: EQ        0 R22 K7     ; if R22 ~= 0 then PC := 77
 67 [-]: JMP       77           ; PC := 77
 68 [-]: GETTABLE  R22 R17 K20  ; R22 := R17["mLevel"]
 69 [-]: GETUPVAL  R23 U2       ; R23 := U2
 70 [-]: GETTABLE  R24 R2 R21   ; R24 := R2[R21]
 71 [-]: GETTABLE  R24 R24 K19  ; R24 := R24["mCardIndex"]
 72 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
 73 [-]: GETTABLE  R23 R23 K20  ; R23 := R23["mLevel"]
 74 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 77
 75 [-]: JMP       77           ; PC := 77
 76 [-]: JMP       78           ; PC := 78
 77 [-]: FORLOOP   R18 55       ; R18 += R20; if R18 <= R19 then begin PC := 55; R21 := R18 end
 78 [-]: EQ        0 R5 K16     ; if R5 ~= nil then PC := 129
 79 [-]: JMP       129          ; PC := 129
 80 [-]: ADD       R4 R4 K11    ; R4 := R4 + 1
 81 [-]: GETUPVAL  R22 U4       ; R22 := U4
 82 [-]: MOVE      R23 R17      ; R23 := R17
 83 [-]: CALL      R22 2 2      ; R22 := R22(R23)
 84 [-]: GETUPVAL  R23 U5       ; R23 := U5
 85 [-]: MOVE      R24 R17      ; R24 := R17
 86 [-]: MOVE      R25 R8       ; R25 := R8
 87 [-]: CALL      R23 3 5      ; R23,R24,R25,R26 := R23(R24,R25)
 88 [-]: NEWTABLE  R27 0 10     ; R27 := {}
 89 [-]: SETTABLE  R27 K19 R16  ; R27["mCardIndex"] := R16
 90 [-]: SETTABLE  R27 K21 K11  ; R27["Count"] := 1
 91 [-]: SETTABLE  R27 K22 R22  ; R27["Categories"] := R22
 92 [-]: SETTABLE  R27 K23 R1   ; R27["mSelectionText"] := R1
 93 [-]: GETTABLE  R28 R17 K24  ; R28 := R17["mName"]
 94 [-]: SETTABLE  R27 K24 R28  ; R27["mName"] := R28
 95 [-]: SETTABLE  R27 K15 R23  ; R27["mInstalled"] := R23
 96 [-]: SETTABLE  R27 K25 R24  ; R27["mInstalledLoadOutType"] := R24
 97 [-]: SETTABLE  R27 K26 R25  ; R27["mInstalledType"] := R25
 98 [-]: SETTABLE  R27 K27 R26  ; R27["mInstalledName"] := R26
 99 [-]: GETTABLE  R28 R17 K28  ; R28 := R17["mModSet"]
100 [-]: SETTABLE  R27 K28 R28  ; R27["mModSet"] := R28
101 [-]: GETUPVAL  R28 U6       ; R28 := U6
102 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["0xE8A61E6E"]
103 [-]: MOVE      R29 R17      ; R29 := R17
104 [-]: CALL      R28 2 2      ; R28 := R28(R29)
105 [-]: SETTABLE  R27 K29 R28  ; R27["SearchCache"] := R28
106 [-]: SETTABLE  R17 K31 R27  ; R17["mElement"] := R27
107 [-]: GETGLOBAL R28 K32      ; R28 := table
108 [-]: GETTABLE  R28 R28 K33  ; R28 := R28["0xE6450C9D"]
109 [-]: MOVE      R29 R2       ; R29 := R2
110 [-]: MOVE      R30 R27      ; R30 := R27
111 [-]: CALL      R28 3 1      ; R28(R29,R30)
112 [-]: GETUPVAL  R28 U0       ; R28 := U0
113 [-]: SELF      R28 R28 K34  ; R29 := R28; R28 := R28["0xA77DA8EE"]
114 [-]: MOVE      R30 R27      ; R30 := R27
115 [-]: MOVE      R31 R1       ; R31 := R1
116 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
117 [-]: GETUPVAL  R28 U6       ; R28 := U6
118 [-]: GETTABLE  R28 R28 K35  ; R28 := R28["0x8616778F"]
119 [-]: MOVE      R29 R17      ; R29 := R17
120 [-]: CALL      R28 2 2      ; R28 := R28(R29)
121 [-]: TEST      R28 0        ; if not R28 then PC := 141
122 [-]: JMP       141          ; PC := 141
123 [-]: GETUPVAL  R28 U7       ; R28 := U7
124 [-]: GETTABLE  R29 R17 K17  ; R29 := R17["mUpgrade"]
125 [-]: GETTABLE  R29 R29 K36  ; R29 := R29["mItemCount"]
126 [-]: ADD       R28 R28 R29  ; R28 := R28 + R29
127 [-]: MOVE      R28 R7       ; R28 := R7
128 [-]: JMP       141          ; PC := 141
129 [-]: GETTABLE  R28 R5 K21   ; R28 := R5["Count"]
130 [-]: ADD       R28 R28 K11  ; R28 := R28 + 1
131 [-]: SETTABLE  R5 K21 R28   ; R5["Count"] := R28
132 [-]: JMP       141          ; PC := 141
133 [-]: ADD       R6 R6 K11    ; R6 := R6 + 1
134 [-]: GETUPVAL  R28 U4       ; R28 := U4
135 [-]: MOVE      R29 R17      ; R29 := R17
136 [-]: CALL      R28 2 2      ; R28 := R28(R29)
137 [-]: GETUPVAL  R29 U0       ; R29 := U0
138 [-]: SELF      R29 R29 K37  ; R30 := R29; R29 := R29["0x38D5BF23"]
139 [-]: MOVE      R31 R28      ; R31 := R28
140 [-]: CALL      R29 3 1      ; R29(R30,R31)
141 [-]: FORLOOP   R13 41       ; R13 += R15; if R13 <= R14 then begin PC := 41; R16 := R13 end
142 [-]: GETUPVAL  R29 U0       ; R29 := U0
143 [-]: GETTABLE  R29 R29 K38  ; R29 := R29["mUnfilteredElements"]
144 [-]: LEN       R29 R29      ; R29 := # R29
145 [-]: GETGLOBAL R30 K39      ; R30 := math
146 [-]: GETTABLE  R30 R30 K40  ; R30 := R30["0x8B011038"]
147 [-]: GETUPVAL  R31 U0       ; R31 := U0
148 [-]: GETTABLE  R31 R31 K41  ; R31 := R31["mColumns"]
149 [-]: GETUPVAL  R32 U0       ; R32 := U0
150 [-]: GETTABLE  R32 R32 K42  ; R32 := R32["mRows"]
151 [-]: MUL       R31 R31 R32  ; R31 := R31 * R32
152 [-]: SUB       R31 R31 R29  ; R31 := R31 - R29
153 [-]: MOVE      R32 R6       ; R32 := R6
154 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
155 [-]: GETGLOBAL R31 K39      ; R31 := math
156 [-]: GETTABLE  R31 R31 K43  ; R31 := R31["0xBCF846DF"]
157 [-]: ADD       R32 R29 R30  ; R32 := R29 + R30
158 [-]: GETUPVAL  R33 U0       ; R33 := U0
159 [-]: GETTABLE  R33 R33 K41  ; R33 := R33["mColumns"]
160 [-]: DIV       R32 R32 R33  ; R32 := R32 / R33
161 [-]: CALL      R31 2 2      ; R31 := R31(R32)
162 [-]: GETUPVAL  R32 U0       ; R32 := U0
163 [-]: GETTABLE  R32 R32 K41  ; R32 := R32["mColumns"]
164 [-]: MUL       R32 R31 R32  ; R32 := R31 * R32
165 [-]: SUB       R30 R32 R29  ; R30 := R32 - R29
166 [-]: LOADK     R32 K11      ; R32 := 1
167 [-]: MOVE      R33 R30      ; R33 := R30
168 [-]: LOADK     R34 K11      ; R34 := 1
169 [-]: FORPREP   R32 180      ; R32 -= R34; PC := 180
170 [-]: GETUPVAL  R36 U0       ; R36 := U0
171 [-]: SELF      R36 R36 K34  ; R37 := R36; R36 := R36["0xA77DA8EE"]
172 [-]: NEWTABLE  R38 0 4      ; R38 := {}
173 [-]: SETTABLE  R38 K29 K44  ; R38["SearchCache"] := ""
174 [-]: SETTABLE  R38 K19 K45  ; R38["mCardIndex"] := -1
175 [-]: GETUPVAL  R39 U8       ; R39 := U8
176 [-]: SETTABLE  R38 K22 R39  ; R38["Categories"] := R39
177 [-]: SETTABLE  R38 K23 R1   ; R38["mSelectionText"] := R1
178 [-]: MOVE      R39 R1       ; R39 := R1
179 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
180 [-]: FORLOOP   R32 170      ; R32 += R34; if R32 <= R33 then begin PC := 170; R35 := R32 end
181 [-]: LOADK     R36 K11      ; R36 := 1
182 [-]: GETUPVAL  R37 U8       ; R37 := U8
183 [-]: LEN       R37 R37      ; R37 := # R37
184 [-]: LOADK     R38 K11      ; R38 := 1
185 [-]: FORPREP   R36 203      ; R36 -= R38; PC := 203
186 [-]: GETUPVAL  R40 U8       ; R40 := U8
187 [-]: GETTABLE  R40 R40 R39  ; R40 := R40[R39]
188 [-]: GETUPVAL  R41 U0       ; R41 := U0
189 [-]: GETTABLE  R41 R41 K46  ; R41 := R41["mCategoriesCount"]
190 [-]: GETTABLE  R41 R41 R40  ; R41 := R41[R40]
191 [-]: EQ        1 R41 K16    ; if R41 == nil then PC := 200
192 [-]: JMP       200          ; PC := 200
193 [-]: LT        0 R30 R41    ; if R30 >= R41 then PC := 200
194 [-]: JMP       200          ; PC := 200
195 [-]: GETUPVAL  R42 U0       ; R42 := U0
196 [-]: GETTABLE  R42 R42 K46  ; R42 := R42["mCategoriesCount"]
197 [-]: SUB       R43 R41 R30  ; R43 := R41 - R30
198 [-]: SETTABLE  R42 R40 R43  ; R42[R40] := R43
199 [-]: JMP       203          ; PC := 203
200 [-]: GETUPVAL  R42 U0       ; R42 := U0
201 [-]: GETTABLE  R42 R42 K46  ; R42 := R42["mCategoriesCount"]
202 [-]: SETTABLE  R42 R40 K7   ; R42[R40] := 0
203 [-]: FORLOOP   R36 186      ; R36 += R38; if R36 <= R37 then begin PC := 186; R39 := R36 end
204 [-]: GETUPVAL  R42 U7       ; R42 := U7
205 [-]: LT        0 K7 R42     ; if 0 >= R42 then PC := 234
206 [-]: JMP       234          ; PC := 234
207 [-]: MOVE      R42 R0       ; R42 := R0
208 [-]: GETUPVAL  R43 U0       ; R43 := U0
209 [-]: GETTABLE  R43 R43 K47  ; R43 := R43["mCategoryMenu"]
210 [-]: SELF      R43 R43 K48  ; R44 := R43; R43 := R43["0x9D2060CB"]
211 [-]: CLOSURE   R45 0        ; R45 := closure(Function #28.1)
212 [-]: GETUPVAL  R0 U6        ; R0 := U6
213 [-]: MOVE      R0 R42       ; R0 := R42
214 [-]: CALL      R43 3 1      ; R43(R44,R45)
215 [-]: TEST      R42 1        ; if R42 then PC := 233
216 [-]: JMP       233          ; PC := 233
217 [-]: GETUPVAL  R43 U0       ; R43 := U0
218 [-]: SELF      R43 R43 K49  ; R44 := R43; R43 := R43["0x2F2AD0EF"]
219 [-]: NEWTABLE  R45 0 3      ; R45 := {}
220 [-]: GETUPVAL  R46 U6       ; R46 := U6
221 [-]: GETTABLE  R46 R46 K51  ; R46 := R46["CategoryId_OMEGA"]
222 [-]: SETTABLE  R45 K50 R46  ; R45["Category"] := R46
223 [-]: GETGLOBAL R46 K4       ; R46 := mMovie
224 [-]: SELF      R46 R46 K5   ; R47 := R46; R46 := R46["0x5DB0BD4"]
225 [-]: LOADK     R48 K53      ; R48 := "/Lotus/Language/Menu/ArtifactCards_CategoryOmega"
226 [-]: MOVE      R49 R0       ; R49 := R0
227 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
228 [-]: SETTABLE  R45 K52 R46  ; R45["Name"] := R46
229 [-]: GETGLOBAL R46 K55      ; R46 := _G
230 [-]: GETTABLE  R46 R46 K56  ; R46 := R46["UICategoryIcon_OmegaOn"]
231 [-]: SETTABLE  R45 K54 R46  ; R45["Icon"] := R46
232 [-]: CALL      R43 3 1      ; R43(R44,R45)
233 [-]: CLOSE     R42          ; SAVE R42,...
234 [-]: GETUPVAL  R42 U0       ; R42 := U0
235 [-]: SELF      R42 R42 K57  ; R43 := R42; R42 := R42["0x26174AC9"]
236 [-]: GETUPVAL  R44 U6       ; R44 := U6
237 [-]: GETTABLE  R44 R44 K58  ; R44 := R44["CategoryId_ALL"]
238 [-]: CALL      R42 3 1      ; R42(R43,R44)
239 [-]: GETGLOBAL R42 K4       ; R42 := mMovie
240 [-]: SELF      R42 R42 K59  ; R43 := R42; R42 := R42["0xD6A79FE9"]
241 [-]: GETUPVAL  R44 U9       ; R44 := U9
242 [-]: GETTABLE  R44 R44 K60  ; R44 := R44["mClipName"]
243 [-]: LOADK     R45 K61      ; R45 := ".FilterText"
244 [-]: CONCAT    R44 R44 R45  ; R44 := R44 .. R45
245 [-]: LOADK     R45 K62      ; R45 := "text"
246 [-]: LOADK     R46 K44      ; R46 := ""
247 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
248 [-]: GETUPVAL  R42 U9       ; R42 := U9
249 [-]: SETTABLE  R42 K63 K16  ; R42["mSearchTerm"] := nil
250 [-]: GETUPVAL  R42 U9       ; R42 := U9
251 [-]: SETTABLE  R42 K64 K16  ; R42["mLowerSearchTerm"] := nil
252 [-]: GETUPVAL  R42 U0       ; R42 := U0
253 [-]: SELF      R42 R42 K65  ; R43 := R42; R42 := R42["0x6470BAF4"]
254 [-]: CALL      R42 2 1      ; R42(R43)
255 [-]: RETURN    R0 1         ; return 


; Function #28.1:
;
; Name:            
; Defined at line: 851
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Category"]
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CategoryId_OMEGA"]
  4 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R1 R1        ; R1 := R1
  7 [-]: MOVE      R1 R1        ; R1 := R1
  8 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 869
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mItemId"]
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mId"]
  4 [-]: NEWTABLE  R4 0 2       ; R4 := {}
  5 [-]: SETTABLE  R4 K2 R0     ; R4["upgrade"] := R0
  6 [-]: SETTABLE  R4 K3 R1     ; R4["slot"] := R1
  7 [-]: SETTABLE  R2 R3 R4     ; R2[R3] := R4
  8 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 873
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mItemId"]
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mId"]
  5 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mItemId"]
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mId"]
 12 [-]: SETTABLE  R1 R2 K3     ; R1[R2] := nil
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mItemId"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mId"]
 17 [-]: SETTABLE  R1 R2 R0     ; R1[R2] := R0
 18 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 882
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["info"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mItemId"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mId"]
  5 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mPriorInstalled"]
  6 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mInstalled"]
  7 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
  8 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mPriorInstalled"]
 12 [-]: EQ        0 R2 K5      ; if R2 ~= -1 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mUpgrade"]
 16 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mInstalled"]
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: JMP       34           ; PC := 34
 19 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mInstalled"]
 20 [-]: EQ        0 R2 K5      ; if R2 ~= -1 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mUpgrade"]
 24 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mInstalled"]
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETUPVAL  R2 U2        ; R2 := U2
 28 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mUpgrade"]
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: GETUPVAL  R2 U1        ; R2 := U1
 31 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mUpgrade"]
 32 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mInstalled"]
 33 [-]: CALL      R2 3 1       ; R2(R3,R4)
 34 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 899
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["info"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mItemId"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mId"]
  5 [-]: TEST      R0 0         ; if not R0 then PC := 164
  6 [-]: JMP       164          ; PC := 164
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mCardIndex"]
  8 [-]: LT        0 K4 R2      ; if 0 >= R2 then PC := 164
  9 [-]: JMP       164          ; PC := 164
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mCardIndex"]
 12 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 13 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["mInstalled"]
 14 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 15 [-]: EQ        1 R3 K6      ; if R3 == nil then PC := 148
 16 [-]: JMP       148          ; PC := 148
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0xDB400429"]
 19 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mRarity"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETUPVAL  R4 U3        ; R4 := U3
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBBAE08CF"]
 23 [-]: MOVE      R5 R3        ; R5 := R3
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: LOADNIL   R5 R5        ; R5 := nil
 26 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 27 [-]: GETTABLE  R7 R2 K11    ; R7 := R2["mModSet"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: TEST      R6 1         ; if R6 then PC := 57
 30 [-]: JMP       57           ; PC := 57
 31 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 32 [-]: GETTABLE  R7 R2 K11    ; R7 := R2["mModSet"]
 33 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x45A45609"]
 34 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 35 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 36 [-]: TEST      R6 1         ; if R6 then PC := 57
 37 [-]: JMP       57           ; PC := 57
 38 [-]: GETUPVAL  R6 U4        ; R6 := U4
 39 [-]: GETTABLE  R7 R2 K13    ; R7 := R2["mElement"]
 40 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["mClipName"]
 41 [-]: GETTABLE  R8 R2 K11    ; R8 := R2["mModSet"]
 42 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x45A45609"]
 43 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 44 [-]: GETGLOBAL R9 K15       ; R9 := math
 45 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["0x865961F7"]
 46 [-]: LOADK     R10 K17      ; R10 := -20
 47 [-]: LOADK     R11 K18      ; R11 := 20
 48 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 49 [-]: GETGLOBAL R10 K15      ; R10 := math
 50 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["0x865961F7"]
 51 [-]: LOADK     R11 K17      ; R11 := -20
 52 [-]: LOADK     R12 K18      ; R12 := 20
 53 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 54 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 55 [-]: MOVE      R5 R6        ; R5 := R6
 56 [-]: JMP       109          ; PC := 109
 57 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
 58 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["mUpgradeItemType"]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: TEST      R6 1         ; if R6 then PC := 88
 61 [-]: JMP       88           ; PC := 88
 62 [-]: GETGLOBAL R6 K20       ; R6 := 0x7C282057
 63 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["mUpgradeItemType"]
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: SELF      R7 R6 K12    ; R8 := R6; R7 := R6["0x45A45609"]
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
 68 [-]: MOVE      R9 R7        ; R9 := R7
 69 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 70 [-]: TEST      R8 1         ; if R8 then PC := 88
 71 [-]: JMP       88           ; PC := 88
 72 [-]: GETUPVAL  R8 U4        ; R8 := U4
 73 [-]: GETTABLE  R9 R2 K13    ; R9 := R2["mElement"]
 74 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mClipName"]
 75 [-]: MOVE      R10 R7       ; R10 := R7
 76 [-]: GETGLOBAL R11 K15      ; R11 := math
 77 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0x865961F7"]
 78 [-]: LOADK     R12 K17      ; R12 := -20
 79 [-]: LOADK     R13 K18      ; R13 := 20
 80 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 81 [-]: GETGLOBAL R12 K15      ; R12 := math
 82 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["0x865961F7"]
 83 [-]: LOADK     R13 K17      ; R13 := -20
 84 [-]: LOADK     R14 K18      ; R14 := 20
 85 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 86 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 87 [-]: MOVE      R5 R8        ; R5 := R8
 88 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
 89 [-]: MOVE      R9 R5        ; R9 := R5
 90 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 91 [-]: TEST      R8 0         ; if not R8 then PC := 109
 92 [-]: JMP       109          ; PC := 109
 93 [-]: GETUPVAL  R8 U4        ; R8 := U4
 94 [-]: GETTABLE  R9 R2 K13    ; R9 := R2["mElement"]
 95 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mClipName"]
 96 [-]: GETGLOBAL R10 K21      ; R10 := upgradeFX
 97 [-]: GETGLOBAL R11 K15      ; R11 := math
 98 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0x865961F7"]
 99 [-]: LOADK     R12 K17      ; R12 := -20
100 [-]: LOADK     R13 K18      ; R13 := 20
101 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
102 [-]: GETGLOBAL R12 K15      ; R12 := math
103 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["0x865961F7"]
104 [-]: LOADK     R13 K17      ; R13 := -20
105 [-]: LOADK     R14 K18      ; R14 := 20
106 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
107 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
108 [-]: MOVE      R5 R8        ; R5 := R8
109 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
110 [-]: MOVE      R9 R5        ; R9 := R5
111 [-]: CALL      R8 2 2       ; R8 := R8(R9)
112 [-]: TEST      R8 1         ; if R8 then PC := 130
113 [-]: JMP       130          ; PC := 130
114 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["mInstance"]
115 [-]: SELF      R8 R5 K23    ; R9 := R5; R8 := R5["0x408A179A"]
116 [-]: MOVE      R10 R4       ; R10 := R4
117 [-]: MOVE      R11 R4       ; R11 := R4
118 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
119 [-]: SELF      R8 R5 K24    ; R9 := R5; R8 := R5["0x9F1DC568"]
120 [-]: GETGLOBAL R10 K25      ; R10 := gLensFlareType
121 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
122 [-]: GETGLOBAL R9 K10       ; R9 := 0x400E7765
123 [-]: MOVE      R10 R8       ; R10 := R8
124 [-]: CALL      R9 2 2       ; R9 := R9(R10)
125 [-]: TEST      R9 1         ; if R9 then PC := 130
126 [-]: JMP       130          ; PC := 130
127 [-]: SELF      R9 R8 K26    ; R10 := R8; R9 := R8["0xA20F64C0"]
128 [-]: MOVE      R11 R4       ; R11 := R4
129 [-]: CALL      R9 3 1       ; R9(R10,R11)
130 [-]: GETTABLE  R9 R2 K27    ; R9 := R2["mPolarity"]
131 [-]: GETTABLE  R10 R2 K13   ; R10 := R2["mElement"]
132 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["mPolarity"]
133 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 163
134 [-]: JMP       163          ; PC := 163
135 [-]: GETTABLE  R9 R2 K27    ; R9 := R2["mPolarity"]
136 [-]: GETGLOBAL R10 K28      ; R10 := Lotus_Game
137 [-]: GETTABLE  R10 R10 K29  ; R10 := R10["AP_UNIVERSAL"]
138 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 163
139 [-]: JMP       163          ; PC := 163
140 [-]: GETUPVAL  R9 U5        ; R9 := U5
141 [-]: SELF      R9 R9 K30    ; R10 := R9; R9 := R9["0x61494587"]
142 [-]: LOADK     R11 K31      ; R11 := 0.44999998807907
143 [-]: CLOSURE   R12 0        ; R12 := closure(Function #32.1)
144 [-]: MOVE      R0 R2        ; R0 := R2
145 [-]: GETUPVAL  R0 U4        ; R0 := U4
146 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
147 [-]: JMP       163          ; PC := 163
148 [-]: GETUPVAL  R9 U4        ; R9 := U4
149 [-]: GETTABLE  R10 R2 K13   ; R10 := R2["mElement"]
150 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["mClipName"]
151 [-]: GETGLOBAL R11 K32      ; R11 := uninstallFX
152 [-]: GETGLOBAL R12 K15      ; R12 := math
153 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["0x865961F7"]
154 [-]: LOADK     R13 K17      ; R13 := -20
155 [-]: LOADK     R14 K18      ; R14 := 20
156 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
157 [-]: GETGLOBAL R13 K15      ; R13 := math
158 [-]: GETTABLE  R13 R13 K16  ; R13 := R13["0x865961F7"]
159 [-]: LOADK     R14 K17      ; R14 := -20
160 [-]: LOADK     R15 K18      ; R15 := 20
161 [-]: CALL      R13 3 0      ; R13,... := R13(R14,R15)
162 [-]: CALL      R9 0 1       ; R9(R10,...)
163 [-]: CLOSE     R2           ; SAVE R2,...
164 [-]: RETURN    R0 1         ; return 


; Function #32.1:
;
; Name:            
; Defined at line: 932
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mElement"]
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mClipName"]
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mElement"]
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mClipName"]
 12 [-]: LOADK     R2 K3        ; R2 := ".Card.TopInfo.PolarityBacker"
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: GETGLOBAL R2 K4        ; R2 := polarityFX
 15 [-]: LOADK     R3 K5        ; R3 := 20
 16 [-]: LOADK     R4 K6        ; R4 := 0
 17 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 944
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["info"]
  3 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mItemId"]
  4 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mId"]
  5 [-]: LOADK     R1 K3        ; R1 := 1
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: LEN       R2 R2        ; R2 := # R2
  8 [-]: LOADK     R3 K3        ; R3 := 1
  9 [-]: FORPREP   R1 23        ; R1 -= R3; PC := 23
 10 [-]: GETUPVAL  R5 U1        ; R5 := U1
 11 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 12 [-]: GETTABLE  R6 R5 K4     ; R6 := R5["mInstalled"]
 13 [-]: GETTABLE  R6 R6 R0     ; R6 := R6[R0]
 14 [-]: GETUPVAL  R7 U2        ; R7 := U2
 15 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R6 U4        ; R6 := U4
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["0xB830D275"]
 19 [-]: GETGLOBAL R7 K6        ; R7 := mMovie
 20 [-]: GETTABLE  R8 R5 K7     ; R8 := R5["mUpgrade"]
 21 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: FORLOOP   R1 10        ; R1 += R3; if R1 <= R2 then begin PC := 10; R4 := R1 end
 24 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 954
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 960
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: LEN       R2 R0        ; R2 := # R0
  2 [-]: EQ        0 R2 K0      ; if R2 ~= 0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADNIL   R2 R3        ; R2 := R3 := nil
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["0xF81722A2"]
  8 [-]: GETGLOBAL R5 K2        ; R5 := _T
  9 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["upgradeItemLot"]
 10 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 11 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["LOT_NORMAL"]
 12 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 17 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["LOT_SENTINEL"]
 18 [-]: GETGLOBAL R7 K4        ; R7 := Lotus_Game
 19 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["LOT_NORMAL"]
 20 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 21 [-]: LOADNIL   R5 R5        ; R5 := nil
 22 [-]: GETGLOBAL R6 K7        ; R6 := 0x400E7765
 23 [-]: GETUPVAL  R7 U1        ; R7 := U1
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 1         ; if R6 then PC := 139
 26 [-]: JMP       139          ; PC := 139
 27 [-]: GETGLOBAL R6 K2        ; R6 := _T
 28 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["loadoutInProgress"]
 29 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 139
 30 [-]: JMP       139          ; PC := 139
 31 [-]: GETUPVAL  R6 U1        ; R6 := U1
 32 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x6F2E05FD"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: MOVE      R3 R6        ; R3 := R6
 35 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 139
 36 [-]: JMP       139          ; PC := 139
 37 [-]: GETGLOBAL R6 K4        ; R6 := Lotus_Game
 38 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["LOT_SENTINEL"]
 39 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 67
 40 [-]: JMP       67           ; PC := 67
 41 [-]: GETGLOBAL R6 K2        ; R6 := _T
 42 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["loadoutInProgress"]
 43 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 44 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xA81C4B63"]
 45 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 46 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["SUIT_SLOT"]
 47 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 48 [-]: SELF      R7 R3 K13    ; R8 := R3; R7 := R3["0xD2EADDBF"]
 49 [-]: MOVE      R9 R4        ; R9 := R4
 50 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 51 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["SUIT_SLOT"]
 52 [-]: GETTABLE  R11 R6 K14   ; R11 := R6["mItemId"]
 53 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mId"]
 54 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 55 [-]: GETGLOBAL R8 K7        ; R8 := 0x400E7765
 56 [-]: GETTABLE  R9 R7 K16    ; R9 := R7["mItemType"]
 57 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 58 [-]: TEST      R8 1         ; if R8 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: GETTABLE  R8 R7 K16    ; R8 := R7["mItemType"]
 61 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0x8B598ED4"]
 62 [-]: GETGLOBAL R10 K18      ; R10 := gPetPowerSuitType
 63 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 64 [-]: TEST      R8 0         ; if not R8 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: RETURN    R0 1         ; return 
 67 [-]: LOADNIL   R8 R8        ; R8 := nil
 68 [-]: GETGLOBAL R9 K4        ; R9 := Lotus_Game
 69 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["LOT_NORMAL"]
 70 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 115
 71 [-]: JMP       115          ; PC := 115
 72 [-]: GETGLOBAL R9 K2        ; R9 := _T
 73 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["loadoutInProgress"]
 74 [-]: GETGLOBAL R10 K4       ; R10 := Lotus_Game
 75 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["LOT_SENTINEL"]
 76 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 77 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9["0xA81C4B63"]
 78 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
 79 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["LONG_GUN_SLOT"]
 80 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 81 [-]: SELF      R10 R3 K13   ; R11 := R3; R10 := R3["0xD2EADDBF"]
 82 [-]: GETGLOBAL R12 K4       ; R12 := Lotus_Game
 83 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["LOT_SENTINEL"]
 84 [-]: GETGLOBAL R13 K4       ; R13 := Lotus_Game
 85 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["LONG_GUN_SLOT"]
 86 [-]: GETTABLE  R14 R9 K14   ; R14 := R9["mItemId"]
 87 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["mId"]
 88 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 89 [-]: GETGLOBAL R11 K7       ; R11 := 0x400E7765
 90 [-]: GETTABLE  R12 R10 K16  ; R12 := R10["mItemType"]
 91 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 92 [-]: TEST      R11 1        ; if R11 then PC := 117
 93 [-]: JMP       117          ; PC := 117
 94 [-]: GETTABLE  R11 R10 K16  ; R11 := R10["mItemType"]
 95 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11["0x8B598ED4"]
 96 [-]: GETGLOBAL R13 K20      ; R13 := gLotusPistolType
 97 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 98 [-]: TEST      R11 0        ; if not R11 then PC := 103
 99 [-]: JMP       103          ; PC := 103
100 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
101 [-]: GETTABLE  R8 R11 K21   ; R8 := R11["PISTOL_SLOT"]
102 [-]: JMP       117          ; PC := 117
103 [-]: GETTABLE  R11 R10 K16  ; R11 := R10["mItemType"]
104 [-]: SELF      R11 R11 K17  ; R12 := R11; R11 := R11["0x8B598ED4"]
105 [-]: GETGLOBAL R13 K22      ; R13 := gLotusMeleeWeaponType
106 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
107 [-]: TEST      R11 0        ; if not R11 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
110 [-]: GETTABLE  R8 R11 K23   ; R8 := R11["MELEE_SLOT"]
111 [-]: JMP       117          ; PC := 117
112 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
113 [-]: GETTABLE  R8 R11 K19   ; R8 := R11["LONG_GUN_SLOT"]
114 [-]: JMP       117          ; PC := 117
115 [-]: GETGLOBAL R11 K4       ; R11 := Lotus_Game
116 [-]: GETTABLE  R8 R11 K19   ; R8 := R11["LONG_GUN_SLOT"]
117 [-]: EQ        1 R8 K9      ; if R8 == nil then PC := 139
118 [-]: JMP       139          ; PC := 139
119 [-]: GETGLOBAL R11 K2       ; R11 := _T
120 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["loadoutInProgress"]
121 [-]: GETTABLE  R11 R11 R4   ; R11 := R11[R4]
122 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11["0xA81C4B63"]
123 [-]: MOVE      R13 R8       ; R13 := R8
124 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
125 [-]: SELF      R12 R3 K13   ; R13 := R3; R12 := R3["0xD2EADDBF"]
126 [-]: MOVE      R14 R4       ; R14 := R4
127 [-]: MOVE      R15 R8       ; R15 := R8
128 [-]: GETTABLE  R16 R11 K14  ; R16 := R11["mItemId"]
129 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["mId"]
130 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
131 [-]: MOVE      R2 R12       ; R2 := R12
132 [-]: GETTABLE  R5 R11 K24   ; R5 := R11["mModSlot"]
133 [-]: GETGLOBAL R12 K7       ; R12 := 0x400E7765
134 [-]: GETTABLE  R13 R2 K16   ; R13 := R2["mItemType"]
135 [-]: CALL      R12 2 2      ; R12 := R12(R13)
136 [-]: TEST      R12 0        ; if not R12 then PC := 139
137 [-]: JMP       139          ; PC := 139
138 [-]: LOADNIL   R2 R2        ; R2 := nil
139 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 152
140 [-]: JMP       152          ; PC := 152
141 [-]: GETTABLE  R12 R0 K25   ; R12 := R0[1]
142 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["mUpgrade"]
143 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["mInstance"]
144 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12["0xDB6FB17B"]
145 [-]: GETTABLE  R14 R0 K25   ; R14 := R0[1]
146 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["mUpgrade"]
147 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["mUpgradeFingerprint"]
148 [-]: GETTABLE  R15 R2 K16   ; R15 := R2["mItemType"]
149 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
150 [-]: TEST      R12 1        ; if R12 then PC := 153
151 [-]: JMP       153          ; PC := 153
152 [-]: RETURN    R0 1         ; return 
153 [-]: LOADK     R12 K25      ; R12 := 1
154 [-]: LEN       R13 R0       ; R13 := # R0
155 [-]: LE        0 R12 R13    ; if R12 > R13 then PC := 223
156 [-]: JMP       223          ; PC := 223
157 [-]: GETTABLE  R13 R0 R12   ; R13 := R0[R12]
158 [-]: MOVE      R14 R0       ; R14 := R0
159 [-]: EQ        1 R13 K9     ; if R13 == nil then PC := 219
160 [-]: JMP       219          ; PC := 219
161 [-]: GETTABLE  R15 R13 K26  ; R15 := R13["mUpgrade"]
162 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["mItemId"]
163 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mId"]
164 [-]: EQ        0 R15 K30    ; if R15 ~= "" then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: GETTABLE  R15 R13 K26  ; R15 := R13["mUpgrade"]
167 [-]: GETTABLE  R15 R15 K31  ; R15 := R15["mItemCount"]
168 [-]: EQ        0 R15 K25    ; if R15 ~= 1 then PC := 219
169 [-]: JMP       219          ; PC := 219
170 [-]: GETUPVAL  R15 U2       ; R15 := U2
171 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["0x9513F43A"]
172 [-]: MOVE      R16 R3       ; R16 := R3
173 [-]: MOVE      R17 R2       ; R17 := R2
174 [-]: MOVE      R18 R13      ; R18 := R13
175 [-]: MOVE      R19 R5       ; R19 := R5
176 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
177 [-]: GETTABLE  R15 R13 K33  ; R15 := R13["mInstalled"]
178 [-]: GETTABLE  R16 R2 K14   ; R16 := R2["mItemId"]
179 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["mId"]
180 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
181 [-]: GETTABLE  R16 R13 K33  ; R16 := R13["mInstalled"]
182 [-]: GETTABLE  R17 R2 K14   ; R17 := R2["mItemId"]
183 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["mId"]
184 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
185 [-]: EQ        1 R16 K9     ; if R16 == nil then PC := 219
186 [-]: JMP       219          ; PC := 219
187 [-]: GETUPVAL  R16 U3       ; R16 := U3
188 [-]: SELF      R16 R16 K34  ; R17 := R16; R16 := R16["0xFED851F6"]
189 [-]: GETTABLE  R18 R2 K16   ; R18 := R2["mItemType"]
190 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
191 [-]: GETGLOBAL R17 K35      ; R17 := mMovie
192 [-]: SELF      R17 R17 K36  ; R18 := R17; R17 := R17["0x5DB0BD4"]
193 [-]: GETGLOBAL R19 K37      ; R19 := 0x9FAED6BC
194 [-]: SELF      R20 R16 K38  ; R21 := R16; R20 := R16["0x616C74B6"]
195 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
196 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
197 [-]: MOVE      R20 R0       ; R20 := R0
198 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
199 [-]: TEST      R1 1         ; if R1 then PC := 213
200 [-]: JMP       213          ; PC := 213
201 [-]: GETUPVAL  R18 U0       ; R18 := U0
202 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["0x38ECFE60"]
203 [-]: GETGLOBAL R19 K35      ; R19 := mMovie
204 [-]: SELF      R19 R19 K36  ; R20 := R19; R19 := R19["0x5DB0BD4"]
205 [-]: LOADK     R21 K40      ; R21 := "/Lotus/Language/Menu/Loadout_ModAlreadyInstalled"
206 [-]: MOVE      R22 R1       ; R22 := R1
207 [-]: NEWTABLE  R23 0 2      ; R23 := {}
208 [-]: GETTABLE  R24 R13 K42  ; R24 := R13["mName"]
209 [-]: SETTABLE  R23 K41 R24  ; R23["MOD"] := R24
210 [-]: SETTABLE  R23 K43 R17  ; R23["WEAPON"] := R17
211 [-]: CALL      R19 5 0      ; R19,... := R19(R20,R21,R22,R23)
212 [-]: CALL      R18 0 1      ; R18(R19,...)
213 [-]: GETGLOBAL R18 K44      ; R18 := table
214 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["0xCDB1FD5E"]
215 [-]: MOVE      R19 R0       ; R19 := R0
216 [-]: MOVE      R20 R12      ; R20 := R12
217 [-]: CALL      R18 3 1      ; R18(R19,R20)
218 [-]: MOVE      R14 R1       ; R14 := R1
219 [-]: TEST      R14 1        ; if R14 then PC := 154
220 [-]: JMP       154          ; PC := 154
221 [-]: ADD       R12 R12 K25  ; R12 := R12 + 1
222 [-]: JMP       154          ; PC := 154
223 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1048
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SUIT_SLOT"]
  3 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["LOT_DATAKNIFE"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["SLOT_12"]
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: JMP       59           ; PC := 59
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       59           ; PC := 59
 16 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LONG_GUN_SLOT"]
 18 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 21 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SLOT_2"]
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: JMP       59           ; PC := 59
 24 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 25 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["PISTOL_SLOT"]
 26 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 29 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SLOT_1"]
 30 [-]: RETURN    R2 2         ; return R2
 31 [-]: JMP       59           ; PC := 59
 32 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 33 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["MELEE_SLOT"]
 34 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SLOT_6"]
 38 [-]: RETURN    R2 2         ; return R2
 39 [-]: JMP       59           ; PC := 59
 40 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 41 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["SPECIAL_A_SLOT"]
 42 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 45 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SPECIAL_B_SLOT"]
 46 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 52
 47 [-]: JMP       52           ; PC := 52
 48 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 49 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["SLOT_8"]
 50 [-]: RETURN    R2 2         ; return R2
 51 [-]: JMP       59           ; PC := 59
 52 [-]: GETGLOBAL R2 K0        ; R2 := Lotus_Game
 53 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["HEAVY_GUN_SLOT"]
 54 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETGLOBAL R2 K3        ; R2 := Engine
 57 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["SLOT_11"]
 58 [-]: RETURN    R2 2         ; return R2
 59 [-]: LOADNIL   R2 R2        ; R2 := nil
 60 [-]: RETURN    R2 2         ; return R2
 61 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1069
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["upgradeItemLot"]
  3 [-]: GETGLOBAL R3 K0        ; R3 := _T
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["upgradeItemSlot"]
  5 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 168
  6 [-]: JMP       168          ; PC := 168
  7 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 168
  8 [-]: JMP       168          ; PC := 168
  9 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LOT_SENTINEL"]
 11 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 35
 12 [-]: JMP       35           ; PC := 35
 13 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["SUIT_SLOT"]
 15 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 35
 16 [-]: JMP       35           ; PC := 35
 17 [-]: GETGLOBAL R4 K0        ; R4 := _T
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["MenuSuitAvatar"]
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x8DB5D01F"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x30DABA98"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: MOVE      R0 R4        ; R0 := R4
 24 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 1         ; if R4 then PC := 168
 28 [-]: JMP       168          ; PC := 168
 29 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6978AC59"]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: MOVE      R1 R4        ; R1 := R4
 34 [-]: JMP       168          ; PC := 168
 35 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 36 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["LOT_ARCHWING"]
 37 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 51
 38 [-]: JMP       51           ; PC := 51
 39 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 40 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["SUIT_SLOT"]
 41 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: GETGLOBAL R4 K0        ; R4 := _T
 44 [-]: GETTABLE  R0 R4 K7     ; R0 := R4["MenuSuitAvatar"]
 45 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0xE81AC1B1"]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: MOVE      R1 R4        ; R1 := R4
 50 [-]: JMP       168          ; PC := 168
 51 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 52 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["LOT_KDRIVE"]
 53 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 67
 54 [-]: JMP       67           ; PC := 67
 55 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 56 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["SUIT_SLOT"]
 57 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 67
 58 [-]: JMP       67           ; PC := 67
 59 [-]: GETGLOBAL R4 K0        ; R4 := _T
 60 [-]: GETTABLE  R0 R4 K15    ; R0 := R4["KDriveAvatar"]
 61 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6978AC59"]
 64 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 65 [-]: MOVE      R1 R4        ; R1 := R4
 66 [-]: JMP       168          ; PC := 168
 67 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 68 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["SUIT_SLOT"]
 69 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 83
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 72 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["LOT_DATAKNIFE"]
 73 [-]: EQ        1 R2 R4      ; if R2 == R4 then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R4 K0        ; R4 := _T
 76 [-]: GETTABLE  R0 R4 K7     ; R0 := R4["MenuSuitAvatar"]
 77 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
 78 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 79 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6978AC59"]
 80 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 81 [-]: MOVE      R1 R4        ; R1 := R4
 82 [-]: JMP       168          ; PC := 168
 83 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 84 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["LOT_SENTINEL"]
 85 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 111
 86 [-]: JMP       111          ; PC := 111
 87 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
 88 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["LONG_GUN_SLOT"]
 89 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 111
 90 [-]: JMP       111          ; PC := 111
 91 [-]: GETGLOBAL R4 K0        ; R4 := _T
 92 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["MenuSuitAvatar"]
 93 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x8DB5D01F"]
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x30DABA98"]
 96 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 97 [-]: MOVE      R0 R4        ; R0 := R4
 98 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 99 [-]: MOVE      R5 R0        ; R5 := R0
100 [-]: CALL      R4 2 2       ; R4 := R4(R5)
101 [-]: TEST      R4 1         ; if R4 then PC := 168
102 [-]: JMP       168          ; PC := 168
103 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
104 [-]: CALL      R4 2 2       ; R4 := R4(R5)
105 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x63D63C30"]
106 [-]: GETGLOBAL R6 K19       ; R6 := Engine
107 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["SLOT_1"]
108 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
109 [-]: MOVE      R1 R4        ; R1 := R4
110 [-]: JMP       168          ; PC := 168
111 [-]: GETGLOBAL R4 K4        ; R4 := Lotus_Game
112 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["SPECIAL_A_SLOT"]
113 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 131
114 [-]: JMP       131          ; PC := 131
115 [-]: GETUPVAL  R4 U0        ; R4 := U0
116 [-]: TEST      R4 0         ; if not R4 then PC := 131
117 [-]: JMP       131          ; PC := 131
118 [-]: GETGLOBAL R4 K0        ; R4 := _T
119 [-]: GETTABLE  R0 R4 K22    ; R0 := R4["SpecialSuitAvatar"]
120 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
121 [-]: MOVE      R5 R0        ; R5 := R0
122 [-]: CALL      R4 2 2       ; R4 := R4(R5)
123 [-]: TEST      R4 1         ; if R4 then PC := 168
124 [-]: JMP       168          ; PC := 168
125 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0["0x8DB5D01F"]
126 [-]: CALL      R4 2 2       ; R4 := R4(R5)
127 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x6978AC59"]
128 [-]: CALL      R4 2 2       ; R4 := R4(R5)
129 [-]: MOVE      R1 R4        ; R1 := R4
130 [-]: JMP       168          ; PC := 168
131 [-]: GETUPVAL  R4 U1        ; R4 := U1
132 [-]: MOVE      R5 R3        ; R5 := R3
133 [-]: MOVE      R6 R2        ; R6 := R2
134 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
135 [-]: TEST      R4 1         ; if R4 then PC := 139
136 [-]: JMP       139          ; PC := 139
137 [-]: LOADNIL   R5 R5        ; R5 := nil
138 [-]: RETURN    R5 2         ; return R5
139 [-]: GETGLOBAL R5 K0        ; R5 := _T
140 [-]: GETTABLE  R0 R5 K7     ; R0 := R5["MenuSuitAvatar"]
141 [-]: GETGLOBAL R5 K10       ; R5 := 0x400E7765
142 [-]: MOVE      R6 R0        ; R6 := R0
143 [-]: CALL      R5 2 2       ; R5 := R5(R6)
144 [-]: TEST      R5 1         ; if R5 then PC := 168
145 [-]: JMP       168          ; PC := 168
146 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0x8DB5D01F"]
147 [-]: CALL      R5 2 2       ; R5 := R5(R6)
148 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x63D63C30"]
149 [-]: MOVE      R7 R4        ; R7 := R4
150 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
151 [-]: MOVE      R1 R5        ; R1 := R5
152 [-]: GETGLOBAL R5 K10       ; R5 := 0x400E7765
153 [-]: MOVE      R6 R1        ; R6 := R1
154 [-]: CALL      R5 2 2       ; R5 := R5(R6)
155 [-]: TEST      R5 0         ; if not R5 then PC := 168
156 [-]: JMP       168          ; PC := 168
157 [-]: GETGLOBAL R5 K19       ; R5 := Engine
158 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["SLOT_6"]
159 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 168
160 [-]: JMP       168          ; PC := 168
161 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0["0x8DB5D01F"]
162 [-]: CALL      R5 2 2       ; R5 := R5(R6)
163 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x63D63C30"]
164 [-]: GETGLOBAL R7 K19       ; R7 := Engine
165 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["SLOT_8"]
166 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
167 [-]: MOVE      R1 R5        ; R1 := R5
168 [-]: RETURN    R1 2         ; return R1
169 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1116
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6F2E05FD"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: CALL      R2 1 2       ; R2 := R2()
 13 [-]: SETTABLE  R1 K2 R2     ; R1["item"] := R2
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xF81722A2"]
 16 [-]: GETGLOBAL R2 K4        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["upgradeItemLot"]
 18 [-]: GETGLOBAL R3 K6        ; R3 := Lotus_Game
 19 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["LOT_NORMAL_PVP"]
 20 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: MOVE      R2 R1        ; R2 := R1
 24 [-]: GETGLOBAL R3 K6        ; R3 := Lotus_Game
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LOT_NORMAL"]
 26 [-]: GETGLOBAL R4 K4        ; R4 := _T
 27 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["upgradeItemLot"]
 28 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 29 [-]: SELF      R2 R0 K9     ; R3 := R0; R2 := R0["0xD2EADDBF"]
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: GETGLOBAL R5 K4        ; R5 := _T
 32 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["upgradeItemSlot"]
 33 [-]: GETGLOBAL R6 K4        ; R6 := _T
 34 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["upgradeItemUID"]
 35 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 36 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 37 [-]: GETTABLE  R4 R2 K12    ; R4 := R2["mItemType"]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: TEST      R3 1         ; if R3 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: GETUPVAL  R3 U1        ; R3 := U1
 42 [-]: SETTABLE  R3 K13 R2    ; R3["info"] := R2
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R4 R2 K15    ; R4 := R2["mXP"]
 45 [-]: SETTABLE  R3 K14 R4    ; R3["xp"] := R4
 46 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1134
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x2C00D429
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0x2C00D429
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Weapons/Tenno/LotusLongGun"
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: GETGLOBAL R3 K0        ; R3 := 0x2C00D429
  8 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Weapons/Tenno/Archwing/Primary/ArchGun"
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0x2C00D429
 11 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Types/Vehicles/Hoverboard/HoverboardSuit"
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: CALL      R5 1 2       ; R5 := R5()
 15 [-]: GETGLOBAL R6 K5        ; R6 := 0x400E7765
 16 [-]: MOVE      R7 R5        ; R7 := R5
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: TEST      R6 1         ; if R6 then PC := 120
 19 [-]: JMP       120          ; PC := 120
 20 [-]: SELF      R6 R5 K6     ; R7 := R5; R6 := R5["0x8B598ED4"]
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 23 [-]: TEST      R6 1         ; if R6 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: SELF      R6 R5 K6     ; R7 := R5; R6 := R5["0x8B598ED4"]
 26 [-]: GETGLOBAL R8 K7        ; R8 := gFlightJetPackItemType
 27 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 28 [-]: TEST      R6 1         ; if R6 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: SELF      R6 R5 K6     ; R7 := R5; R6 := R5["0x8B598ED4"]
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 33 [-]: TEST      R6 0         ; if not R6 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: GETUPVAL  R6 U2        ; R6 := U2
 36 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["0x9DE01FD8"]
 37 [-]: MOVE      R7 R5        ; R7 := R5
 38 [-]: GETGLOBAL R8 K9        ; R8 := _T
 39 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["MenuSuitAvatar"]
 40 [-]: MOVE      R9 R0        ; R9 := R0
 41 [-]: MOVE      R10 R1       ; R10 := R1
 42 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 43 [-]: MOVE      R6 R1        ; R6 := R1
 44 [-]: JMP       120          ; PC := 120
 45 [-]: SELF      R6 R5 K6     ; R7 := R5; R6 := R5["0x8B598ED4"]
 46 [-]: GETGLOBAL R8 K11       ; R8 := gSentinelPowerSuitType
 47 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 48 [-]: TEST      R6 1         ; if R6 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R6 K9        ; R6 := _T
 51 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["upgradeItemLot"]
 52 [-]: GETGLOBAL R7 K13       ; R7 := Lotus_Game
 53 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["LOT_SENTINEL"]
 54 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 90
 55 [-]: JMP       90           ; PC := 90
 56 [-]: GETGLOBAL R6 K9        ; R6 := _T
 57 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
 58 [-]: GETGLOBAL R7 K13       ; R7 := Lotus_Game
 59 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["LONG_GUN_SLOT"]
 60 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 90
 61 [-]: JMP       90           ; PC := 90
 62 [-]: LOADNIL   R6 R6        ; R6 := nil
 63 [-]: GETUPVAL  R7 U3        ; R7 := U3
 64 [-]: TEST      R7 0         ; if not R7 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETGLOBAL R7 K9        ; R7 := _T
 67 [-]: GETTABLE  R6 R7 K17    ; R6 := R7["SpecialSuitAvatar"]
 68 [-]: JMP       76           ; PC := 76
 69 [-]: GETGLOBAL R7 K9        ; R7 := _T
 70 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["MenuSuitAvatar"]
 71 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7["0x8DB5D01F"]
 72 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 73 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7["0x30DABA98"]
 74 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 75 [-]: MOVE      R6 R7        ; R6 := R7
 76 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 77 [-]: MOVE      R8 R6        ; R8 := R6
 78 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 79 [-]: TEST      R7 1         ; if R7 then PC := 120
 80 [-]: JMP       120          ; PC := 120
 81 [-]: GETUPVAL  R7 U2        ; R7 := U2
 82 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x9DE01FD8"]
 83 [-]: MOVE      R8 R5        ; R8 := R5
 84 [-]: MOVE      R9 R6        ; R9 := R6
 85 [-]: MOVE      R10 R0       ; R10 := R0
 86 [-]: MOVE      R11 R1       ; R11 := R1
 87 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 88 [-]: MOVE      R7 R1        ; R7 := R1
 89 [-]: JMP       120          ; PC := 120
 90 [-]: SELF      R7 R5 K6     ; R8 := R5; R7 := R5["0x8B598ED4"]
 91 [-]: MOVE      R9 R2        ; R9 := R2
 92 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 93 [-]: TEST      R7 1         ; if R7 then PC := 110
 94 [-]: JMP       110          ; PC := 110
 95 [-]: SELF      R7 R5 K6     ; R8 := R5; R7 := R5["0x8B598ED4"]
 96 [-]: GETGLOBAL R9 K20       ; R9 := gLotusPistolType
 97 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 98 [-]: TEST      R7 1         ; if R7 then PC := 110
 99 [-]: JMP       110          ; PC := 110
100 [-]: SELF      R7 R5 K6     ; R8 := R5; R7 := R5["0x8B598ED4"]
101 [-]: MOVE      R9 R3        ; R9 := R3
102 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
103 [-]: TEST      R7 1         ; if R7 then PC := 110
104 [-]: JMP       110          ; PC := 110
105 [-]: SELF      R7 R5 K6     ; R8 := R5; R7 := R5["0x8B598ED4"]
106 [-]: GETGLOBAL R9 K21       ; R9 := gLotusMeleeWeaponType
107 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
108 [-]: TEST      R7 0         ; if not R7 then PC := 120
109 [-]: JMP       120          ; PC := 120
110 [-]: GETUPVAL  R7 U2        ; R7 := U2
111 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x9DE01FD8"]
112 [-]: MOVE      R8 R5        ; R8 := R5
113 [-]: GETGLOBAL R9 K9        ; R9 := _T
114 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["MenuSuitAvatar"]
115 [-]: MOVE      R10 R0       ; R10 := R0
116 [-]: MOVE      R11 R1       ; R11 := R1
117 [-]: GETUPVAL  R12 U4       ; R12 := U4
118 [-]: CALL      R7 6 2       ; R7 := R7(R8,R9,R10,R11,R12)
119 [-]: MOVE      R7 R1        ; R7 := R1
120 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1159
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x93B1256B
  9 [-]: LOADK     R2 K4        ; R2 := "Failed to initialize ability list: null avatar"
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K0        ; R1 := _T
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["upgradeItemLot"]
 14 [-]: LOADNIL   R2 R2        ; R2 := nil
 15 [-]: GETGLOBAL R3 K6        ; R3 := Lotus_Game
 16 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["LOT_ARCHWING"]
 17 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: SELF      R3 R0 K8     ; R4 := R0; R3 := R0["0x8DB5D01F"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0xE81AC1B1"]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: MOVE      R2 R3        ; R2 := R3
 24 [-]: JMP       30           ; PC := 30
 25 [-]: SELF      R3 R0 K8     ; R4 := R0; R3 := R0["0x8DB5D01F"]
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x6978AC59"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: MOVE      R2 R3        ; R2 := R3
 30 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETGLOBAL R3 K3        ; R3 := 0x93B1256B
 36 [-]: LOADK     R4 K11       ; R4 := "Failed to initialize ability list: no powersuit"
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: LOADNIL   R3 R3        ; R3 := nil
 39 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: TEST      R4 1         ; if R4 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETUPVAL  R4 U0        ; R4 := U0
 45 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x3EEB612E"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: SELF      R5 R4 K13    ; R6 := R4; R5 := R4["0xDE97F259"]
 48 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 49 [-]: MOVE      R3 R5        ; R3 := R5
 50 [-]: GETGLOBAL R5 K14       ; R5 := 0x329BDC44
 51 [-]: LOADK     R6 K15       ; R6 := "Lotus.Powersuits.PowersuitAbilities.PVPLib"
 52 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 53 [-]: GETTABLE  R6 R5 K16    ; R6 := R5["0x232D0973"]
 54 [-]: CALL      R6 1 2       ; R6 := R6()
 55 [-]: LOADK     R7 K17       ; R7 := 1
 56 [-]: LOADK     R8 K18       ; R8 := 4
 57 [-]: LOADK     R9 K17       ; R9 := 1
 58 [-]: FORPREP   R7 136       ; R7 -= R9; PC := 136
 59 [-]: TEST      R6 0         ; if not R6 then PC := 66
 60 [-]: JMP       66           ; PC := 66
 61 [-]: SELF      R11 R2 K19   ; R12 := R2; R11 := R2["0xDD2FAA6A"]
 62 [-]: SUB       R13 R10 K17  ; R13 := R10 - 1
 63 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 64 [-]: TEST      R11 0        ; if not R11 then PC := 128
 65 [-]: JMP       128          ; PC := 128
 66 [-]: SELF      R11 R2 K20   ; R12 := R2; R11 := R2["0xEA55C538"]
 67 [-]: SUB       R13 R10 K17  ; R13 := R10 - 1
 68 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 69 [-]: SELF      R12 R2 K21   ; R13 := R2; R12 := R2["0x4A8D7E2A"]
 70 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 71 [-]: SELF      R13 R2 K22   ; R14 := R2; R13 := R2["0x504AF8A2"]
 72 [-]: SUB       R15 R10 K17  ; R15 := R10 - 1
 73 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 74 [-]: NEWTABLE  R14 0 12     ; R14 := {}
 75 [-]: SETTABLE  R14 K23 K24  ; R14["IsAbility"] := "0x1"
 76 [-]: SETTABLE  R14 K25 K24  ; R14["CustomEntry"] := "0x1"
 77 [-]: SUB       R15 R10 K17  ; R15 := R10 - 1
 78 [-]: SETTABLE  R14 K26 R15  ; R14["AbilityIndex"] := R15
 79 [-]: SETTABLE  R14 K27 R11  ; R14["Resource"] := R11
 80 [-]: SETTABLE  R14 K28 R2   ; R14["Suit"] := R2
 81 [-]: GETGLOBAL R15 K0       ; R15 := _T
 82 [-]: GETTABLE  R15 R15 K1   ; R15 := R15["MenuSuitAvatar"]
 83 [-]: SETTABLE  R14 K29 R15  ; R14["SourceAvatar"] := R15
 84 [-]: GETGLOBAL R15 K6       ; R15 := Lotus_Game
 85 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["LOT_ARCHWING"]
 86 [-]: EQ        1 R1 R15     ; if R1 == R15 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: MOVE      R15 R0       ; R15 := R0
 89 [-]: MOVE      R15 R1       ; R15 := R1
 90 [-]: SETTABLE  R14 K30 R15  ; R14["SourceAvatarAlternateSuit"] := R15
 91 [-]: GETGLOBAL R15 K32      ; R15 := string
 92 [-]: GETTABLE  R15 R15 K33  ; R15 := R15["0x639C642A"]
 93 [-]: GETGLOBAL R16 K34      ; R16 := mMovie
 94 [-]: SELF      R16 R16 K35  ; R17 := R16; R16 := R16["0x5DB0BD4"]
 95 [-]: SELF      R18 R11 K36  ; R19 := R11; R18 := R11["0x616C74B6"]
 96 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 97 [-]: SELF      R18 R18 K37  ; R19 := R18; R18 := R18["0x5EC7A3D2"]
 98 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 99 [-]: MOVE      R19 R0       ; R19 := R0
100 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
101 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
102 [-]: SETTABLE  R14 K31 R15  ; R14["Name"] := R15
103 [-]: SELF      R15 R2 K39   ; R16 := R2; R15 := R2["0x1498C3B6"]
104 [-]: SUB       R17 R10 K17  ; R17 := R10 - 1
105 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
106 [-]: SUB       R15 R15 K17  ; R15 := R15 - 1
107 [-]: SETTABLE  R14 K38 R15  ; R14["Level"] := R15
108 [-]: LT        1 R12 R13    ; if R12 < R13 then PC := 111
109 [-]: JMP       111          ; PC := 111
110 [-]: MOVE      R15 R0       ; R15 := R0
111 [-]: MOVE      R15 R1       ; R15 := R1
112 [-]: SETTABLE  R14 K40 R15  ; R14["Locked"] := R15
113 [-]: SELF      R15 R11 K42  ; R16 := R11; R15 := R11["0xF1A9732E"]
114 [-]: CALL      R15 2 2      ; R15 := R15(R16)
115 [-]: SETTABLE  R14 K41 R15  ; R14["Icon"] := R15
116 [-]: SETTABLE  R14 K43 R3   ; R14["ModdedStats"] := R3
117 [-]: GETGLOBAL R15 K34      ; R15 := mMovie
118 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15["0x26581636"]
119 [-]: LOADK     R17 K45      ; R17 := "AbilityList.Ability"
120 [-]: MOVE      R18 R10      ; R18 := R10
121 [-]: LOADK     R19 K46      ; R19 := ".Icon"
122 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
123 [-]: GETTABLE  R18 R14 K41  ; R18 := R14["Icon"]
124 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
125 [-]: GETUPVAL  R15 U1       ; R15 := U1
126 [-]: SETTABLE  R15 R10 R14  ; R15[R10] := R14
127 [-]: JMP       136          ; PC := 136
128 [-]: GETGLOBAL R15 K34      ; R15 := mMovie
129 [-]: SELF      R15 R15 K47  ; R16 := R15; R15 := R15["0x625791A8"]
130 [-]: LOADK     R17 K45      ; R17 := "AbilityList.Ability"
131 [-]: MOVE      R18 R10      ; R18 := R10
132 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
133 [-]: LOADK     R18 K48      ; R18 := "_visible"
134 [-]: MOVE      R19 R0       ; R19 := R0
135 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
136 [-]: FORLOOP   R7 59        ; R7 += R9; if R7 <= R8 then begin PC := 59; R10 := R7 end
137 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1212
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["upgradeItemLot"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["upgradeItemSlot"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
  6 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["LOT_NORMAL"]
  7 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LOT_NORMAL_PVP"]
 11 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
 14 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["LOT_ARCHWING"]
 15 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["SUIT_SLOT"]
 19 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x46FF1A3C"]
 25 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
 26 [-]: LOADK     R5 K10       ; R5 := "StatsContainer.StatRow"
 27 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 31 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 32 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 33 [-]: LOADK     R7 K14       ; R7 := "StatsContainer"
 34 [-]: LOADK     R8 K15       ; R8 := "_y"
 35 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 36 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 37 [-]: SETTABLE  R3 K11 R4    ; R3["mOriginalY"] := R4
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 40 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 41 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 42 [-]: LOADK     R7 K17       ; R7 := "TopMenu.Bg"
 43 [-]: LOADK     R8 K18       ; R8 := "_yscale"
 44 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 45 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 46 [-]: DIV       R4 R4 K19    ; R4 := R4 / 100
 47 [-]: SETTABLE  R3 K16 R4    ; R3["mBgYScale"] := R4
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 50 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 51 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 52 [-]: LOADK     R7 K21       ; R7 := "TopMenu.Bg.StatCompareBg"
 53 [-]: LOADK     R8 K15       ; R8 := "_y"
 54 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 55 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 56 [-]: SETTABLE  R3 K20 R4    ; R3["mOrigBgY"] := R4
 57 [-]: GETUPVAL  R3 U0        ; R3 := U0
 58 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 59 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 60 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 61 [-]: LOADK     R7 K21       ; R7 := "TopMenu.Bg.StatCompareBg"
 62 [-]: LOADK     R8 K23       ; R8 := "_height"
 63 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 64 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 65 [-]: GETUPVAL  R5 U0        ; R5 := U0
 66 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mBgYScale"]
 67 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
 68 [-]: SETTABLE  R3 K22 R4    ; R3["mOrigBgHeight"] := R4
 69 [-]: TEST      R2 0         ; if not R2 then PC := 80
 70 [-]: JMP       80           ; PC := 80
 71 [-]: GETUPVAL  R3 U0        ; R3 := U0
 72 [-]: SETTABLE  R3 K24 K25   ; R3["mAbilityHeightAdjustment"] := -50
 73 [-]: GETUPVAL  R3 U0        ; R3 := U0
 74 [-]: GETUPVAL  R4 U0        ; R4 := U0
 75 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mOrigBgHeight"]
 76 [-]: GETUPVAL  R5 U0        ; R5 := U0
 77 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["mAbilityHeightAdjustment"]
 78 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 79 [-]: SETTABLE  R3 K22 R4    ; R3["mOrigBgHeight"] := R4
 80 [-]: GETUPVAL  R3 U0        ; R3 := U0
 81 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 82 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 83 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 84 [-]: LOADK     R7 K27       ; R7 := "TopMenu.Bg.AbilitiesBg"
 85 [-]: LOADK     R8 K23       ; R8 := "_height"
 86 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 87 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 88 [-]: GETUPVAL  R5 U0        ; R5 := U0
 89 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mBgYScale"]
 90 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
 91 [-]: SETTABLE  R3 K26 R4    ; R3["mOrigAbilitiesBgHeight"] := R4
 92 [-]: GETUPVAL  R3 U0        ; R3 := U0
 93 [-]: GETGLOBAL R4 K12       ; R4 := 0xF595ADDE
 94 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 95 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x6B7B470B"]
 96 [-]: LOADK     R7 K27       ; R7 := "TopMenu.Bg.AbilitiesBg"
 97 [-]: LOADK     R8 K15       ; R8 := "_y"
 98 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 99 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
100 [-]: SETTABLE  R3 K28 R4    ; R3["mOrigAbilitiesYPos"] := R4
101 [-]: GETGLOBAL R3 K29       ; R3 := 0x329BDC44
102 [-]: LOADK     R4 K30       ; R4 := "EE.Interface.Components.ScrollBar"
103 [-]: CALL      R3 2 2       ; R3 := R3(R4)
104 [-]: GETTABLE  R4 R3 K31    ; R4 := R3["0x83DCEAB1"]
105 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
106 [-]: LOADK     R6 K32       ; R6 := "ScrollBarContainer.ScrollBar"
107 [-]: LOADK     R7 K19       ; R7 := 100
108 [-]: LOADK     R8 K33       ; R8 := 0.5
109 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
110 [-]: MOVE      R4 R2        ; R4 := R2
111 [-]: GETUPVAL  R4 U2        ; R4 := U2
112 [-]: CLOSURE   R5 0         ; R5 := closure(Function #41.1)
113 [-]: GETUPVAL  R0 U0        ; R0 := U0
114 [-]: GETUPVAL  R0 U2        ; R0 := U2
115 [-]: SETTABLE  R4 K34 R5    ; R4["mScrollValueChangedCallback"] := R5
116 [-]: GETUPVAL  R4 U2        ; R4 := U2
117 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4["0x91791A08"]
118 [-]: MOVE      R6 R0        ; R6 := R0
119 [-]: CALL      R4 3 1       ; R4(R5,R6)
120 [-]: GETUPVAL  R4 U2        ; R4 := U2
121 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x37AAD7A"]
122 [-]: CALL      R4 2 1       ; R4(R5)
123 [-]: GETUPVAL  R4 U2        ; R4 := U2
124 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0x62648036"]
125 [-]: CALL      R4 2 1       ; R4(R5)
126 [-]: RETURN    R0 1         ; return 


; Function #41.1:
;
; Name:            
; Defined at line: 1231
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
  3 [-]: LOADK     R4 K2        ; R4 := "StatsContainer"
  4 [-]: LOADK     R5 K3        ; R5 := "_y"
  5 [-]: GETUPVAL  R6 U0        ; R6 := U0
  6 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mOriginalY"]
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["ContentHeight"]
  9 [-]: GETUPVAL  R8 U1        ; R8 := U1
 10 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["MaskHeight"]
 11 [-]: SUB       R7 R7 R8     ; R7 := R7 - R8
 12 [-]: MUL       R7 R7 R0     ; R7 := R7 * R0
 13 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 14 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 15 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1239
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MenuSuitAvatar"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["upgradeItemLot"]
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["upgradeItemSlot"]
  7 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
  8 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["LOT_SENTINEL"]
  9 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R3 K0        ; R3 := _T
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["MenuSuitAvatar"]
 13 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x8DB5D01F"]
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x30DABA98"]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R0 R3        ; R0 := R3
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SPECIAL_A_SLOT"]
 21 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: TEST      R3 0         ; if not R3 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: GETGLOBAL R3 K0        ; R3 := _T
 27 [-]: GETTABLE  R0 R3 K9     ; R0 := R3["SpecialSuitAvatar"]
 28 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 29 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["LOT_NORMAL"]
 30 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 33 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["LOT_NORMAL_PVP"]
 34 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 37 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LOT_ARCHWING"]
 38 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETGLOBAL R3 K4        ; R3 := Lotus_Game
 41 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["SUIT_SLOT"]
 42 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R3 R0        ; R3 := R0
 45 [-]: MOVE      R3 R1        ; R3 := R1
 46 [-]: GETUPVAL  R4 U1        ; R4 := U1
 47 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["0x9DE01FD8"]
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: CALL      R5 1 2       ; R5 := R5()
 50 [-]: MOVE      R6 R0        ; R6 := R0
 51 [-]: MOVE      R7 R0        ; R7 := R0
 52 [-]: MOVE      R8 R1        ; R8 := R1
 53 [-]: GETUPVAL  R9 U3        ; R9 := U3
 54 [-]: CALL      R4 6 2       ; R4 := R4(R5,R6,R7,R8,R9)
 55 [-]: EQ        1 R4 K15     ; if R4 == nil then PC := 63
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETUPVAL  R5 U1        ; R5 := U1
 58 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["0x5F32027C"]
 59 [-]: GETUPVAL  R6 U4        ; R6 := U4
 60 [-]: MOVE      R7 R4        ; R7 := R4
 61 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 62 [-]: MOVE      R4 R5        ; R4 := R5
 63 [-]: GETGLOBAL R5 K17       ; R5 := 0x63B09107
 64 [-]: MOVE      R6 R4        ; R6 := R4
 65 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 66 [-]: JMP       69           ; PC := 69
 67 [-]: SETTABLE  R4 K18 K15   ; R4["Critical"] := nil
 68 [-]: SETTABLE  R4 K19 K15   ; R4["Trigger"] := nil
 69 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 67; R7 := R8 end
 70 [-]: JMP       67           ; PC := 67
 71 [-]: GETUPVAL  R10 U5       ; R10 := U5
 72 [-]: SETTABLE  R10 K20 R4   ; R10["mStats"] := R4
 73 [-]: GETUPVAL  R10 U5       ; R10 := U5
 74 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10["0x6470BAF4"]
 75 [-]: CLOSURE   R12 0        ; R12 := closure(Function #42.1)
 76 [-]: GETUPVAL  R0 U5        ; R0 := U5
 77 [-]: GETUPVAL  R0 U6        ; R0 := U6
 78 [-]: MOVE      R0 R3        ; R0 := R3
 79 [-]: GETUPVAL  R0 U7        ; R0 := U7
 80 [-]: GETUPVAL  R0 U8        ; R0 := U8
 81 [-]: CALL      R10 3 1      ; R10(R11,R12)
 82 [-]: RETURN    R0 1         ; return 


; Function #42.1:
;
; Name:            
; Defined at line: 1269
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8BF09FB6"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: ADD       R1 R1 K3     ; R1 := R1 + 7
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xF81722A2"]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: LOADK     R4 K5        ; R4 := 430
 12 [-]: LOADK     R5 K6        ; R5 := 460
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: GETUPVAL  R3 U2        ; R3 := U2
 15 [-]: TEST      R3 0         ; if not R3 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mOrigAbilitiesBgHeight"]
 19 [-]: SUB       R3 R2 R3     ; R3 := R2 - R3
 20 [-]: SUB       R2 R3 K8     ; R2 := R3 - 4
 21 [-]: GETUPVAL  R3 U3        ; R3 := U3
 22 [-]: SETTABLE  R3 K9 R2     ; R3["MaskHeight"] := R2
 23 [-]: GETGLOBAL R3 K10       ; R3 := 0x6374FD98
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mOrigBgHeight"]
 27 [-]: MOVE      R6 R2        ; R6 := R2
 28 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 29 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
 30 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x1C19D966"]
 31 [-]: LOADK     R6 K14       ; R6 := "StatCompareMask"
 32 [-]: LOADK     R7 K15       ; R7 := "_height"
 33 [-]: MOVE      R8 R3        ; R8 := R3
 34 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 35 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
 36 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x1C19D966"]
 37 [-]: LOADK     R6 K16       ; R6 := "TopMenu.Bg.StatCompareBg"
 38 [-]: LOADK     R7 K15       ; R7 := "_height"
 39 [-]: GETUPVAL  R8 U0        ; R8 := U0
 40 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mBgYScale"]
 41 [-]: DIV       R8 R3 R8     ; R8 := R3 / R8
 42 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 43 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: MOVE      R4 R0        ; R4 := R0
 46 [-]: MOVE      R4 R1        ; R4 := R1
 47 [-]: GETUPVAL  R5 U3        ; R5 := U3
 48 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x91791A08"]
 49 [-]: MOVE      R7 R4        ; R7 := R4
 50 [-]: CALL      R5 3 1       ; R5(R6,R7)
 51 [-]: GETGLOBAL R5 K12       ; R5 := mMovie
 52 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x1C19D966"]
 53 [-]: LOADK     R7 K19       ; R7 := "ScrollBarContainer"
 54 [-]: LOADK     R8 K20       ; R8 := "_visible"
 55 [-]: MOVE      R9 R4        ; R9 := R4
 56 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 57 [-]: GETGLOBAL R5 K12       ; R5 := mMovie
 58 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x1C19D966"]
 59 [-]: LOADK     R7 K21       ; R7 := "TopMenu.Bg.AbilitiesBg"
 60 [-]: LOADK     R8 K20       ; R8 := "_visible"
 61 [-]: GETUPVAL  R9 U2        ; R9 := U2
 62 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 63 [-]: GETGLOBAL R5 K12       ; R5 := mMovie
 64 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0x1C19D966"]
 65 [-]: LOADK     R7 K22       ; R7 := "AbilityList"
 66 [-]: LOADK     R8 K20       ; R8 := "_visible"
 67 [-]: GETUPVAL  R9 U2        ; R9 := U2
 68 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 69 [-]: TEST      R4 0         ; if not R4 then PC := 96
 70 [-]: JMP       96           ; PC := 96
 71 [-]: GETUPVAL  R5 U3        ; R5 := U3
 72 [-]: SETTABLE  R5 K23 K24   ; R5["mActiveX"] := 470
 73 [-]: GETUPVAL  R5 U3        ; R5 := U3
 74 [-]: SETTABLE  R5 K25 K26   ; R5["mActiveY"] := 650
 75 [-]: GETUPVAL  R5 U3        ; R5 := U3
 76 [-]: SUB       R6 R3 K28    ; R6 := R3 - 1
 77 [-]: SETTABLE  R5 K27 R6    ; R5["mHeight"] := R6
 78 [-]: GETUPVAL  R5 U3        ; R5 := U3
 79 [-]: DIV       R6 R2 R1     ; R6 := R2 / R1
 80 [-]: SETTABLE  R5 K29 R6    ; R5["mVisibleProp"] := R6
 81 [-]: GETUPVAL  R5 U3        ; R5 := U3
 82 [-]: SETTABLE  R5 K30 R1    ; R5["ContentHeight"] := R1
 83 [-]: GETUPVAL  R5 U3        ; R5 := U3
 84 [-]: SETTABLE  R5 K9 R2     ; R5["MaskHeight"] := R2
 85 [-]: GETUPVAL  R5 U3        ; R5 := U3
 86 [-]: GETUPVAL  R6 U3        ; R6 := U3
 87 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["ContentHeight"]
 88 [-]: GETUPVAL  R7 U3        ; R7 := U3
 89 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["MaskHeight"]
 90 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 91 [-]: DIV       R6 K32 R6    ; R6 := 40 / R6
 92 [-]: SETTABLE  R5 K31 R6    ; R5["mScrollStep"] := R6
 93 [-]: GETUPVAL  R5 U3        ; R5 := U3
 94 [-]: SELF      R5 R5 K33    ; R6 := R5; R5 := R5["0x3B8EF1F4"]
 95 [-]: CALL      R5 2 1       ; R5(R6)
 96 [-]: GETUPVAL  R5 U0        ; R5 := U0
 97 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mOrigBgHeight"]
 98 [-]: SUB       R5 R3 R5     ; R5 := R3 - R5
 99 [-]: GETUPVAL  R6 U0        ; R6 := U0
100 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["mOrigBgY"]
101 [-]: ADD       R6 R6 R3     ; R6 := R6 + R3
102 [-]: ADD       R6 R6 K8     ; R6 := R6 + 4
103 [-]: GETUPVAL  R7 U0        ; R7 := U0
104 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mBgYScale"]
105 [-]: DIV       R6 R6 R7     ; R6 := R6 / R7
106 [-]: GETUPVAL  R7 U0        ; R7 := U0
107 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["mOrigAbilitiesBgHeight"]
108 [-]: ADD       R6 R6 R7     ; R6 := R6 + R7
109 [-]: GETGLOBAL R7 K12       ; R7 := mMovie
110 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x1C19D966"]
111 [-]: LOADK     R9 K21       ; R9 := "TopMenu.Bg.AbilitiesBg"
112 [-]: LOADK     R10 K35      ; R10 := "_y"
113 [-]: MOVE      R11 R6       ; R11 := R6
114 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
115 [-]: GETUPVAL  R7 U1        ; R7 := U1
116 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["0x69B983D"]
117 [-]: GETGLOBAL R8 K12       ; R8 := mMovie
118 [-]: LOADK     R9 K21       ; R9 := "TopMenu.Bg.AbilitiesBg"
119 [-]: CALL      R7 3 3       ; R7,R8 := R7(R8,R9)
120 [-]: GETGLOBAL R9 K12       ; R9 := mMovie
121 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9["0x1C19D966"]
122 [-]: LOADK     R11 K22      ; R11 := "AbilityList"
123 [-]: LOADK     R12 K35      ; R12 := "_y"
124 [-]: MOVE      R13 R8       ; R13 := R8
125 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
126 [-]: MOVE      R9 R0        ; R9 := R0
127 [-]: MOVE      R9 R4        ; R9 := R4
128 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1311
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x6D25F92"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["LOT_KDRIVE"]
  4 [-]: GETGLOBAL R4 K1        ; R4 := Lotus_Game
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["SUIT_SLOT"]
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  8 [-]: GETGLOBAL R3 K5        ; R3 := _T
  9 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["KDriveAvatar"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 51
 12 [-]: JMP       51           ; PC := 51
 13 [-]: GETGLOBAL R2 K5        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["KDriveAvatar"]
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x8DB5D01F"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2["0x9770EDF"]
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2["0x6978AC59"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: GETGLOBAL R4 K4        ; R4 := 0x400E7765
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: TEST      R4 1         ; if R4 then PC := 51
 25 [-]: JMP       51           ; PC := 51
 26 [-]: GETTABLE  R4 R1 K10    ; R4 := R1["mAttachedUpgrades"]
 27 [-]: GETGLOBAL R5 K11       ; R5 := 0x63B09107
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 30 [-]: JMP       49           ; PC := 49
 31 [-]: GETGLOBAL R10 K4       ; R10 := 0x400E7765
 32 [-]: GETTABLE  R11 R9 K12   ; R11 := R9["mItemType"]
 33 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 34 [-]: TEST      R10 1        ; if R10 then PC := 49
 35 [-]: JMP       49           ; PC := 49
 36 [-]: GETGLOBAL R10 K13      ; R10 := gRegion
 37 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10["0xBB64E1BF"]
 38 [-]: GETGLOBAL R12 K15      ; R12 := 0xCAA43ABB
 39 [-]: GETTABLE  R13 R9 K12   ; R13 := R9["mItemType"]
 40 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 41 [-]: MOVE      R13 R3       ; R13 := R3
 42 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 43 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10["0x75FA94B7"]
 44 [-]: GETTABLE  R13 R9 K17   ; R13 := R9["mUpgradeFingerprint"]
 45 [-]: CALL      R11 3 1      ; R11(R12,R13)
 46 [-]: SELF      R11 R3 K18   ; R12 := R3; R11 := R3["0x3B1B11B9"]
 47 [-]: MOVE      R13 R10      ; R13 := R10
 48 [-]: CALL      R11 3 1      ; R11(R12,R13)
 49 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 31; R7 := R8 end
 50 [-]: JMP       31           ; PC := 31
 51 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1330
; #Upvalues:       16
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x6F2E05FD"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETGLOBAL R4 K2        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["MenuSuitAvatar"]
  8 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
  9 [-]: MOVE      R6 R4        ; R6 := R4
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 0         ; if not R5 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R5 K5        ; R5 := 0x93B1256B
 14 [-]: LOADK     R6 K6        ; R6 := "_UpdateStatComparison: avatar is nil"
 15 [-]: CALL      R5 2 1       ; R5(R6)
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x9D2060CB"]
 19 [-]: CLOSURE   R7 0         ; R7 := closure(Function #44.1)
 20 [-]: GETUPVAL  R0 U2        ; R0 := U2
 21 [-]: MOVE      R0 R1        ; R0 := R1
 22 [-]: MOVE      R0 R2        ; R0 := R2
 23 [-]: CALL      R5 3 1       ; R5(R6,R7)
 24 [-]: LOADK     R5 K8        ; R5 := 1
 25 [-]: GETUPVAL  R6 U3        ; R6 := U3
 26 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["Slots"]
 27 [-]: LOADK     R7 K8        ; R7 := 1
 28 [-]: FORPREP   R5 51        ; R5 -= R7; PC := 51
 29 [-]: GETGLOBAL R9 K10       ; R9 := Lotus_Game
 30 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0x27FA8743"]
 31 [-]: CALL      R9 1 2       ; R9 := R9()
 32 [-]: GETGLOBAL R10 K4       ; R10 := 0x400E7765
 33 [-]: GETUPVAL  R11 U3       ; R11 := U3
 34 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["Arcanes"]
 35 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
 36 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 37 [-]: TEST      R10 1        ; if R10 then PC := 46
 38 [-]: JMP       46           ; PC := 46
 39 [-]: GETUPVAL  R10 U3       ; R10 := U3
 40 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["Arcanes"]
 41 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
 42 [-]: GETTABLE  R11 R10 K14  ; R11 := R10["mItemId"]
 43 [-]: SETTABLE  R9 K13 R11   ; R9["mId"] := R11
 44 [-]: GETTABLE  R11 R10 K16  ; R11 := R10["mItemType"]
 45 [-]: SETTABLE  R9 K15 R11   ; R9["mType"] := R11
 46 [-]: GETGLOBAL R11 K17      ; R11 := table
 47 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["0xE6450C9D"]
 48 [-]: MOVE      R12 R2       ; R12 := R2
 49 [-]: MOVE      R13 R9       ; R13 := R9
 50 [-]: CALL      R11 3 1      ; R11(R12,R13)
 51 [-]: FORLOOP   R5 29        ; R5 += R7; if R5 <= R6 then begin PC := 29; R8 := R5 end
 52 [-]: GETGLOBAL R11 K2       ; R11 := _T
 53 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["ArsenalState"]
 54 [-]: GETGLOBAL R12 K10      ; R12 := Lotus_Game
 55 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["ARSENAL_STATE_PVP"]
 56 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: MOVE      R11 R0       ; R11 := R0
 59 [-]: MOVE      R11 R1       ; R11 := R1
 60 [-]: LOADNIL   R12 R12      ; R12 := nil
 61 [-]: GETUPVAL  R13 U4       ; R13 := U4
 62 [-]: CALL      R13 1 2      ; R13 := R13()
 63 [-]: TEST      R13 0        ; if not R13 then PC := 82
 64 [-]: JMP       82           ; PC := 82
 65 [-]: LEN       R13 R2       ; R13 := # R2
 66 [-]: GETUPVAL  R14 U5       ; R14 := U5
 67 [-]: LE        0 R14 R13    ; if R14 > R13 then PC := 82
 68 [-]: JMP       82           ; PC := 82
 69 [-]: GETUPVAL  R13 U6       ; R13 := U6
 70 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["item"]
 71 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13["0x8E5E18C5"]
 72 [-]: GETGLOBAL R15 K23      ; R15 := 0xEC274B1A
 73 [-]: LOADK     R16 K24      ; R16 := "POWER_WEAPON"
 74 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 75 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 76 [-]: TEST      R13 0        ; if not R13 then PC := 82
 77 [-]: JMP       82           ; PC := 82
 78 [-]: GETUPVAL  R13 U5       ; R13 := U5
 79 [-]: GETTABLE  R12 R2 R13   ; R12 := R2[R13]
 80 [-]: GETUPVAL  R13 U5       ; R13 := U5
 81 [-]: SETTABLE  R2 R13 K25   ; R2[R13] := nil
 82 [-]: GETUPVAL  R13 U7       ; R13 := U7
 83 [-]: EQ        1 R13 K25    ; if R13 == nil then PC := 150
 84 [-]: JMP       150          ; PC := 150
 85 [-]: SELF      R13 R3 K26   ; R14 := R3; R13 := R3["0x4EE28F6"]
 86 [-]: GETUPVAL  R15 U6       ; R15 := U6
 87 [-]: GETTABLE  R15 R15 K27  ; R15 := R15["info"]
 88 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["mItemId"]
 89 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["mId"]
 90 [-]: GETUPVAL  R16 U7       ; R16 := U7
 91 [-]: MOVE      R17 R11      ; R17 := R11
 92 [-]: MOVE      R18 R2       ; R18 := R2
 93 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
 94 [-]: GETGLOBAL R13 K4       ; R13 := 0x400E7765
 95 [-]: GETGLOBAL R14 K2       ; R14 := _T
 96 [-]: GETTABLE  R14 R14 K28  ; R14 := R14["loadoutInProgress"]
 97 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 98 [-]: TEST      R13 0        ; if not R13 then PC := 119
 99 [-]: JMP       119          ; PC := 119
100 [-]: GETGLOBAL R13 K2       ; R13 := _T
101 [-]: NEWTABLE  R14 0 0      ; R14 := {}
102 [-]: SETTABLE  R13 K28 R14  ; R13["loadoutInProgress"] := R14
103 [-]: LOADK     R13 K0       ; R13 := 0
104 [-]: GETGLOBAL R14 K10      ; R14 := Lotus_Game
105 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["MAX_LoadOutType"]
106 [-]: SUB       R14 R14 K8   ; R14 := R14 - 1
107 [-]: LOADK     R15 K8       ; R15 := 1
108 [-]: FORPREP   R13 118      ; R13 -= R15; PC := 118
109 [-]: GETGLOBAL R17 K2       ; R17 := _T
110 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["loadoutInProgress"]
111 [-]: SELF      R18 R3 K30   ; R19 := R3; R18 := R3["0x5A67CD40"]
112 [-]: MOVE      R20 R16      ; R20 := R16
113 [-]: SELF      R21 R3 K31   ; R22 := R3; R21 := R3["0x413E14F1"]
114 [-]: MOVE      R23 R16      ; R23 := R16
115 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
116 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
117 [-]: SETTABLE  R17 R16 R18  ; R17[R16] := R18
118 [-]: FORLOOP   R13 109      ; R13 += R15; if R13 <= R14 then begin PC := 109; R16 := R13 end
119 [-]: GETGLOBAL R17 K2       ; R17 := _T
120 [-]: GETTABLE  R17 R17 K28  ; R17 := R17["loadoutInProgress"]
121 [-]: GETGLOBAL R18 K2       ; R18 := _T
122 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["upgradeItemLot"]
123 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
124 [-]: SELF      R17 R17 K33  ; R18 := R17; R17 := R17["0xA81C4B63"]
125 [-]: GETGLOBAL R19 K2       ; R19 := _T
126 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["upgradeItemSlot"]
127 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
128 [-]: GETUPVAL  R18 U7       ; R18 := U7
129 [-]: SETTABLE  R17 K35 R18  ; R17["mModSlot"] := R18
130 [-]: GETGLOBAL R18 K2       ; R18 := _T
131 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["loadoutInProgress"]
132 [-]: GETGLOBAL R19 K2       ; R19 := _T
133 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["upgradeItemLot"]
134 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
135 [-]: SELF      R18 R18 K36  ; R19 := R18; R18 := R18["0x66BE827B"]
136 [-]: GETGLOBAL R20 K2       ; R20 := _T
137 [-]: GETTABLE  R20 R20 K34  ; R20 := R20["upgradeItemSlot"]
138 [-]: MOVE      R21 R17      ; R21 := R17
139 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
140 [-]: SELF      R18 R3 K37   ; R19 := R3; R18 := R3["0x6E569BEA"]
141 [-]: GETGLOBAL R20 K2       ; R20 := _T
142 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["upgradeItemLot"]
143 [-]: GETGLOBAL R21 K2       ; R21 := _T
144 [-]: GETTABLE  R21 R21 K28  ; R21 := R21["loadoutInProgress"]
145 [-]: GETGLOBAL R22 K2       ; R22 := _T
146 [-]: GETTABLE  R22 R22 K32  ; R22 := R22["upgradeItemLot"]
147 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
148 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
149 [-]: JMP       165          ; PC := 165
150 [-]: SELF      R18 R3 K26   ; R19 := R3; R18 := R3["0x4EE28F6"]
151 [-]: GETUPVAL  R20 U6       ; R20 := U6
152 [-]: GETTABLE  R20 R20 K27  ; R20 := R20["info"]
153 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["mItemId"]
154 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["mId"]
155 [-]: LOADK     R21 K0       ; R21 := 0
156 [-]: MOVE      R22 R11      ; R22 := R11
157 [-]: MOVE      R23 R2       ; R23 := R2
158 [-]: CALL      R18 6 1      ; R18(R19,R20,R21,R22,R23)
159 [-]: GETUPVAL  R18 U6       ; R18 := U6
160 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["info"]
161 [-]: SELF      R18 R18 K26  ; R19 := R18; R18 := R18["0x4EE28F6"]
162 [-]: MOVE      R20 R2       ; R20 := R2
163 [-]: LOADK     R21 K0       ; R21 := 0
164 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
165 [-]: EQ        1 R12 K25    ; if R12 == nil then PC := 169
166 [-]: JMP       169          ; PC := 169
167 [-]: GETUPVAL  R18 U5       ; R18 := U5
168 [-]: SETTABLE  R2 R18 R12   ; R2[R18] := R12
169 [-]: LT        0 K0 R1      ; if 0 >= R1 then PC := 188
170 [-]: JMP       188          ; PC := 188
171 [-]: GETGLOBAL R18 K38      ; R18 := gRegion
172 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0xB3ABFFBB"]
173 [-]: CALL      R18 2 2      ; R18 := R18(R19)
174 [-]: GETTABLE  R18 R18 K8   ; R18 := R18[1]
175 [-]: GETGLOBAL R19 K4       ; R19 := 0x400E7765
176 [-]: MOVE      R20 R18      ; R20 := R18
177 [-]: CALL      R19 2 2      ; R19 := R19(R20)
178 [-]: TEST      R19 1        ; if R19 then PC := 188
179 [-]: JMP       188          ; PC := 188
180 [-]: GETGLOBAL R19 K40      ; R19 := gChallengeMgr
181 [-]: SELF      R19 R19 K41  ; R20 := R19; R19 := R19["0x2994CA2B"]
182 [-]: MOVE      R21 R18      ; R21 := R18
183 [-]: GETGLOBAL R22 K23      ; R22 := 0xEC274B1A
184 [-]: LOADK     R23 K42      ; R23 := "ITEM_UPGRADE_COUNT"
185 [-]: CALL      R22 2 2      ; R22 := R22(R23)
186 [-]: MOVE      R23 R1       ; R23 := R1
187 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
188 [-]: GETUPVAL  R19 U8       ; R19 := U8
189 [-]: GETTABLE  R19 R19 K43  ; R19 := R19["0xF81722A2"]
190 [-]: MOVE      R20 R11      ; R20 := R11
191 [-]: GETGLOBAL R21 K10      ; R21 := Lotus_Game
192 [-]: GETTABLE  R21 R21 K44  ; R21 := R21["LOT_NORMAL_PVP"]
193 [-]: GETGLOBAL R22 K10      ; R22 := Lotus_Game
194 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["LOT_NORMAL"]
195 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
196 [-]: GETUPVAL  R20 U0       ; R20 := U0
197 [-]: SELF      R20 R20 K46  ; R21 := R20; R20 := R20["0x69E6AFF8"]
198 [-]: GETGLOBAL R22 K2       ; R22 := _T
199 [-]: GETTABLE  R22 R22 K32  ; R22 := R22["upgradeItemLot"]
200 [-]: GETGLOBAL R23 K2       ; R23 := _T
201 [-]: GETTABLE  R23 R23 K28  ; R23 := R23["loadoutInProgress"]
202 [-]: GETGLOBAL R24 K2       ; R24 := _T
203 [-]: GETTABLE  R24 R24 K32  ; R24 := R24["upgradeItemLot"]
204 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
205 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
206 [-]: SELF      R20 R4 K47   ; R21 := R4; R20 := R4["0x8DB5D01F"]
207 [-]: CALL      R20 2 2      ; R20 := R20(R21)
208 [-]: SELF      R21 R20 K48  ; R22 := R20; R21 := R20["0x2B92B828"]
209 [-]: GETGLOBAL R23 K49      ; R23 := Engine
210 [-]: GETTABLE  R23 R23 K50  ; R23 := R23["MAIN_HAND"]
211 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
212 [-]: SELF      R22 R20 K51  ; R23 := R20; R22 := R20["0x9770EDF"]
213 [-]: CALL      R22 2 1      ; R22(R23)
214 [-]: SELF      R22 R20 K52  ; R23 := R20; R22 := R20["0x4FE293E3"]
215 [-]: MOVE      R24 R1       ; R24 := R1
216 [-]: CALL      R22 3 1      ; R22(R23,R24)
217 [-]: GETUPVAL  R22 U0       ; R22 := U0
218 [-]: SELF      R22 R22 K53  ; R23 := R22; R22 := R22["0x30BDE7F"]
219 [-]: CALL      R22 2 2      ; R22 := R22(R23)
220 [-]: SELF      R23 R20 K54  ; R24 := R20; R23 := R20["0xB8EC0DB9"]
221 [-]: MOVE      R25 R22      ; R25 := R22
222 [-]: MOVE      R26 R19      ; R26 := R19
223 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
224 [-]: GETUPVAL  R23 U9       ; R23 := U9
225 [-]: MOVE      R24 R22      ; R24 := R22
226 [-]: CALL      R23 2 1      ; R23(R24)
227 [-]: GETUPVAL  R23 U10      ; R23 := U10
228 [-]: TEST      R23 0        ; if not R23 then PC := 247
229 [-]: JMP       247          ; PC := 247
230 [-]: GETGLOBAL R23 K4       ; R23 := 0x400E7765
231 [-]: GETGLOBAL R24 K2       ; R24 := _T
232 [-]: GETTABLE  R24 R24 K55  ; R24 := R24["SpecialSuitAvatar"]
233 [-]: CALL      R23 2 2      ; R23 := R23(R24)
234 [-]: TEST      R23 1        ; if R23 then PC := 247
235 [-]: JMP       247          ; PC := 247
236 [-]: GETGLOBAL R23 K2       ; R23 := _T
237 [-]: GETTABLE  R23 R23 K55  ; R23 := R23["SpecialSuitAvatar"]
238 [-]: SELF      R23 R23 K47  ; R24 := R23; R23 := R23["0x8DB5D01F"]
239 [-]: CALL      R23 2 2      ; R23 := R23(R24)
240 [-]: SELF      R23 R23 K56  ; R24 := R23; R23 := R23["0x25EA6080"]
241 [-]: MOVE      R25 R22      ; R25 := R22
242 [-]: MOVE      R26 R19      ; R26 := R19
243 [-]: GETGLOBAL R27 K10      ; R27 := Lotus_Game
244 [-]: GETTABLE  R27 R27 K57  ; R27 := R27["SPECIAL_A_SLOT"]
245 [-]: MOVE      R28 R1       ; R28 := R1
246 [-]: CALL      R23 6 1      ; R23(R24,R25,R26,R27,R28)
247 [-]: GETGLOBAL R23 K2       ; R23 := _T
248 [-]: GETTABLE  R23 R23 K34  ; R23 := R23["upgradeItemSlot"]
249 [-]: GETGLOBAL R24 K10      ; R24 := Lotus_Game
250 [-]: GETTABLE  R24 R24 K58  ; R24 := R24["HEAVY_GUN_SLOT"]
251 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 253
252 [-]: JMP       253          ; PC := 253
253 [-]: SELF      R23 R20 K59  ; R24 := R20; R23 := R20["0x6978AC59"]
254 [-]: CALL      R23 2 2      ; R23 := R23(R24)
255 [-]: GETGLOBAL R24 K4       ; R24 := 0x400E7765
256 [-]: MOVE      R25 R23      ; R25 := R23
257 [-]: CALL      R24 2 2      ; R24 := R24(R25)
258 [-]: TEST      R24 1        ; if R24 then PC := 292
259 [-]: JMP       292          ; PC := 292
260 [-]: GETGLOBAL R24 K10      ; R24 := Lotus_Game
261 [-]: GETTABLE  R24 R24 K57  ; R24 := R24["SPECIAL_A_SLOT"]
262 [-]: GETGLOBAL R25 K10      ; R25 := Lotus_Game
263 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["MAX_LoadOutSlot"]
264 [-]: SUB       R25 R25 K8   ; R25 := R25 - 1
265 [-]: LOADK     R26 K8       ; R26 := 1
266 [-]: FORPREP   R24 291      ; R24 -= R26; PC := 291
267 [-]: SELF      R28 R23 K61  ; R29 := R23; R28 := R23["0x6A927D5C"]
268 [-]: MOVE      R30 R27      ; R30 := R27
269 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
270 [-]: GETTABLE  R28 R28 K16  ; R28 := R28["mItemType"]
271 [-]: GETGLOBAL R29 K4       ; R29 := 0x400E7765
272 [-]: MOVE      R30 R28      ; R30 := R28
273 [-]: CALL      R29 2 2      ; R29 := R29(R30)
274 [-]: TEST      R29 1        ; if R29 then PC := 291
275 [-]: JMP       291          ; PC := 291
276 [-]: SELF      R29 R28 K62  ; R30 := R28; R29 := R28["0x8B598ED4"]
277 [-]: GETGLOBAL R31 K63      ; R31 := gPowerSuitType
278 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
279 [-]: TEST      R29 1        ; if R29 then PC := 291
280 [-]: JMP       291          ; PC := 291
281 [-]: GETUPVAL  R29 U6       ; R29 := U6
282 [-]: GETTABLE  R29 R29 K64  ; R29 := R29["type"]
283 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 291
284 [-]: JMP       291          ; PC := 291
285 [-]: SELF      R29 R20 K56  ; R30 := R20; R29 := R20["0x25EA6080"]
286 [-]: MOVE      R31 R22      ; R31 := R22
287 [-]: MOVE      R32 R19      ; R32 := R19
288 [-]: MOVE      R33 R27      ; R33 := R27
289 [-]: MOVE      R34 R1       ; R34 := R1
290 [-]: CALL      R29 6 1      ; R29(R30,R31,R32,R33,R34)
291 [-]: FORLOOP   R24 267      ; R24 += R26; if R24 <= R25 then begin PC := 267; R27 := R24 end
292 [-]: GETGLOBAL R29 K2       ; R29 := _T
293 [-]: GETTABLE  R29 R29 K19  ; R29 := R29["ArsenalState"]
294 [-]: GETGLOBAL R30 K10      ; R30 := Lotus_Game
295 [-]: GETTABLE  R30 R30 K65  ; R30 := R30["ARSENAL_STATE_VEHICLES"]
296 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 307
297 [-]: JMP       307          ; PC := 307
298 [-]: SELF      R29 R4 K47   ; R30 := R4; R29 := R4["0x8DB5D01F"]
299 [-]: CALL      R29 2 2      ; R29 := R29(R30)
300 [-]: SELF      R29 R29 K66  ; R30 := R29; R29 := R29["0x290DDD35"]
301 [-]: MOVE      R31 R21      ; R31 := R21
302 [-]: GETGLOBAL R32 K49      ; R32 := Engine
303 [-]: GETTABLE  R32 R32 K50  ; R32 := R32["MAIN_HAND"]
304 [-]: GETGLOBAL R33 K49      ; R33 := Engine
305 [-]: GETTABLE  R33 R33 K67  ; R33 := R33["InventoryControllerBase_ES_INSTANT_EQUIP"]
306 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
307 [-]: GETGLOBAL R29 K2       ; R29 := _T
308 [-]: GETGLOBAL R30 K2       ; R30 := _T
309 [-]: GETTABLE  R30 R30 K3   ; R30 := R30["MenuSuitAvatar"]
310 [-]: SELF      R30 R30 K47  ; R31 := R30; R30 := R30["0x8DB5D01F"]
311 [-]: CALL      R30 2 2      ; R30 := R30(R31)
312 [-]: SELF      R30 R30 K69  ; R31 := R30; R30 := R30["0x30DABA98"]
313 [-]: CALL      R30 2 2      ; R30 := R30(R31)
314 [-]: SETTABLE  R29 K68 R30  ; R29["MenuSentinel"] := R30
315 [-]: GETGLOBAL R29 K4       ; R29 := 0x400E7765
316 [-]: GETGLOBAL R30 K2       ; R30 := _T
317 [-]: GETTABLE  R30 R30 K68  ; R30 := R30["MenuSentinel"]
318 [-]: CALL      R29 2 2      ; R29 := R29(R30)
319 [-]: TEST      R29 1        ; if R29 then PC := 347
320 [-]: JMP       347          ; PC := 347
321 [-]: GETGLOBAL R29 K2       ; R29 := _T
322 [-]: GETTABLE  R29 R29 K68  ; R29 := R29["MenuSentinel"]
323 [-]: SELF      R29 R29 K70  ; R30 := R29; R29 := R29["0xA3F6069B"]
324 [-]: CALL      R29 2 2      ; R29 := R29(R30)
325 [-]: SELF      R29 R29 K71  ; R30 := R29; R29 := R29["0xE817E70D"]
326 [-]: MOVE      R31 R0       ; R31 := R0
327 [-]: CALL      R29 3 1      ; R29(R30,R31)
328 [-]: GETGLOBAL R29 K2       ; R29 := _T
329 [-]: GETTABLE  R29 R29 K68  ; R29 := R29["MenuSentinel"]
330 [-]: SELF      R29 R29 K72  ; R30 := R29; R29 := R29["0xEAE7001A"]
331 [-]: MOVE      R31 R0       ; R31 := R0
332 [-]: CALL      R29 3 1      ; R29(R30,R31)
333 [-]: GETGLOBAL R29 K2       ; R29 := _T
334 [-]: GETTABLE  R29 R29 K68  ; R29 := R29["MenuSentinel"]
335 [-]: SELF      R29 R29 K47  ; R30 := R29; R29 := R29["0x8DB5D01F"]
336 [-]: CALL      R29 2 2      ; R29 := R29(R30)
337 [-]: SELF      R29 R29 K59  ; R30 := R29; R29 := R29["0x6978AC59"]
338 [-]: CALL      R29 2 2      ; R29 := R29(R30)
339 [-]: GETGLOBAL R30 K4       ; R30 := 0x400E7765
340 [-]: MOVE      R31 R29      ; R31 := R29
341 [-]: CALL      R30 2 2      ; R30 := R30(R31)
342 [-]: TEST      R30 1        ; if R30 then PC := 347
343 [-]: JMP       347          ; PC := 347
344 [-]: SELF      R30 R29 K73  ; R31 := R29; R30 := R29["0xFBC48552"]
345 [-]: MOVE      R32 R0       ; R32 := R0
346 [-]: CALL      R30 3 1      ; R30(R31,R32)
347 [-]: GETUPVAL  R30 U11      ; R30 := U11
348 [-]: CALL      R30 1 1      ; R30()
349 [-]: GETUPVAL  R30 U12      ; R30 := U12
350 [-]: CALL      R30 1 1      ; R30()
351 [-]: GETUPVAL  R30 U13      ; R30 := U13
352 [-]: CALL      R30 1 1      ; R30()
353 [-]: GETGLOBAL R30 K2       ; R30 := _T
354 [-]: SETTABLE  R30 K74 K75  ; R30["LoadoutSaveRequired"] := "0x1"
355 [-]: TEST      R0 0         ; if not R0 then PC := 371
356 [-]: JMP       371          ; PC := 371
357 [-]: GETUPVAL  R30 U1       ; R30 := U1
358 [-]: SELF      R30 R30 K7   ; R31 := R30; R30 := R30["0x9D2060CB"]
359 [-]: CLOSURE   R32 1        ; R32 := closure(Function #44.2)
360 [-]: GETUPVAL  R0 U2        ; R0 := U2
361 [-]: GETUPVAL  R0 U14       ; R0 := U14
362 [-]: GETUPVAL  R0 U1        ; R0 := U1
363 [-]: CALL      R30 3 1      ; R30(R31,R32)
364 [-]: GETUPVAL  R30 U15      ; R30 := U15
365 [-]: SELF      R30 R30 K7   ; R31 := R30; R30 := R30["0x9D2060CB"]
366 [-]: CLOSURE   R32 2        ; R32 := closure(Function #44.3)
367 [-]: GETUPVAL  R0 U2        ; R0 := U2
368 [-]: GETUPVAL  R0 U14       ; R0 := U14
369 [-]: GETUPVAL  R0 U15       ; R0 := U15
370 [-]: CALL      R30 3 1      ; R30(R31,R32)
371 [-]: RETURN    R0 1         ; return 


; Function #44.1:
;
; Name:            
; Defined at line: 1341
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x27FA8743"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCardIndex"]
  5 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
  6 [-]: JMP       26           ; PC := 26
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCardIndex"]
  8 [-]: LT        0 K4 R2      ; if 0 >= R2 then PC := 26
  9 [-]: JMP       26           ; PC := 26
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCardIndex"]
 12 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mUpgrade"]
 14 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mItemId"]
 15 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mId"]
 16 [-]: EQ        1 R3 K8      ; if R3 == "" then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["mItemId"]
 19 [-]: SETTABLE  R1 K7 R3     ; R1["mId"] := R3
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETTABLE  R3 R2 K10    ; R3 := R2["mItemType"]
 22 [-]: SETTABLE  R1 K9 R3     ; R1["mType"] := R3
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: ADD       R3 R3 K11    ; R3 := R3 + 1
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["Id"]
 28 [-]: SETTABLE  R3 R4 R1     ; R3[R4] := R1
 29 [-]: RETURN    R0 1         ; return 


; Function #44.2:
;
; Name:            
; Defined at line: 1456
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mModSet"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mCardIndex"]
  7 [-]: LT        0 K3 R1      ; if 0 >= R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mCardIndex"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LEN       R2 R2        ; R2 := # R2
 12 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 24
 13 [-]: JMP       24           ; PC := 24
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE4B6454"]
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCardIndex"]
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xA372F64A"]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #44.3:
;
; Name:            
; Defined at line: 1463
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mModSet"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mCardIndex"]
  7 [-]: LT        0 K3 R1      ; if 0 >= R1 then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mCardIndex"]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: LEN       R2 R2        ; R2 := # R2
 12 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 24
 13 [-]: JMP       24           ; PC := 24
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xDE4B6454"]
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCardIndex"]
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xA372F64A"]
 22 [-]: MOVE      R2 R0        ; R2 := R0
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1472
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["loadoutInProgress"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 31
  6 [-]: JMP       31           ; PC := 31
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x654F1092"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6F2E05FD"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K1        ; R2 := _T
 13 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 14 [-]: SETTABLE  R2 K2 R3     ; R2["loadoutInProgress"] := R3
 15 [-]: LOADK     R2 K5        ; R2 := 0
 16 [-]: GETGLOBAL R3 K6        ; R3 := Lotus_Game
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MAX_LoadOutType"]
 18 [-]: SUB       R3 R3 K8     ; R3 := R3 - 1
 19 [-]: LOADK     R4 K8        ; R4 := 1
 20 [-]: FORPREP   R2 30        ; R2 -= R4; PC := 30
 21 [-]: GETGLOBAL R6 K1        ; R6 := _T
 22 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["loadoutInProgress"]
 23 [-]: SELF      R7 R1 K9     ; R8 := R1; R7 := R1["0x5A67CD40"]
 24 [-]: MOVE      R9 R5        ; R9 := R5
 25 [-]: SELF      R10 R1 K10   ; R11 := R1; R10 := R1["0x413E14F1"]
 26 [-]: MOVE      R12 R5       ; R12 := R5
 27 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 28 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 29 [-]: SETTABLE  R6 R5 R7     ; R6[R5] := R7
 30 [-]: FORLOOP   R2 21        ; R2 += R4; if R2 <= R3 then begin PC := 21; R5 := R2 end
 31 [-]: GETUPVAL  R6 U1        ; R6 := U1
 32 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x6F2E05FD"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x6E569BEA"]
 35 [-]: GETGLOBAL R8 K1        ; R8 := _T
 36 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["upgradeItemLot"]
 37 [-]: GETGLOBAL R9 K1        ; R9 := _T
 38 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["loadoutInProgress"]
 39 [-]: GETGLOBAL R10 K1       ; R10 := _T
 40 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["upgradeItemLot"]
 41 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 42 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 43 [-]: EQ        0 R0 K13     ; if R0 ~= nil then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETUPVAL  R6 U1        ; R6 := U1
 46 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x834C5145"]
 47 [-]: LOADK     R8 K15       ; R8 := "OnSaveLoadOutComplete"
 48 [-]: CALL      R6 3 1       ; R6(R7,R8)
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R6 U1        ; R6 := U1
 51 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x834C5145"]
 52 [-]: MOVE      R8 R0        ; R8 := R0
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: GETGLOBAL R6 K1        ; R6 := _T
 55 [-]: SETTABLE  R6 K2 K13    ; R6["loadoutInProgress"] := nil
 56 [-]: GETGLOBAL R6 K1        ; R6 := _T
 57 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["InSimulacrum"]
 58 [-]: TEST      R6 1         ; if R6 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: GETGLOBAL R6 K1        ; R6 := _T
 61 [-]: SETTABLE  R6 K17 K13   ; R6["LoadoutSaveRequired"] := nil
 62 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1492
; #Upvalues:       18
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: TEST      R1 0         ; if not R1 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
  4 [-]: GETUPVAL  R8 U0        ; R8 := U0
  5 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  6 [-]: TEST      R7 0         ; if not R7 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: RETURN    R7 2         ; return R7
 10 [-]: GETTABLE  R7 R2 K1     ; R7 := R2["mCardLocked"]
 11 [-]: TEST      R7 1         ; if R7 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R7 R1 K2     ; R7 := R1["element"]
 14 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["mCardLocked"]
 15 [-]: TEST      R7 0         ; if not R7 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R7 R0        ; R7 := R0
 18 [-]: RETURN    R7 2         ; return R7
 19 [-]: GETUPVAL  R7 U0        ; R7 := U0
 20 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0x3155222A"]
 21 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: EQ        0 R0 R8      ; if R0 ~= R8 then PC := 60
 24 [-]: JMP       60           ; PC := 60
 25 [-]: GETTABLE  R8 R1 K2     ; R8 := R1["element"]
 26 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["mCardIndex"]
 27 [-]: EQ        1 R8 K5      ; if R8 == -1 then PC := 60
 28 [-]: JMP       60           ; PC := 60
 29 [-]: GETUPVAL  R8 U2        ; R8 := U2
 30 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["element"]
 31 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mCardIndex"]
 32 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 33 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mLevelReq"]
 34 [-]: LT        0 R7 R8      ; if R7 >= R8 then PC := 60
 35 [-]: JMP       60           ; PC := 60
 36 [-]: GETGLOBAL R8 K7        ; R8 := mMovie
 37 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8["0x5DB0BD4"]
 38 [-]: LOADK     R10 K9       ; R10 := "/Lotus/Language/Menu/Omega_MasteryLimitError"
 39 [-]: MOVE      R11 R0       ; R11 := R0
 40 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 41 [-]: GETUPVAL  R13 U2       ; R13 := U2
 42 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["element"]
 43 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["mCardIndex"]
 44 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
 45 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["mName"]
 46 [-]: SETTABLE  R12 K10 R13  ; R12["MOD"] := R13
 47 [-]: GETUPVAL  R13 U2       ; R13 := U2
 48 [-]: GETTABLE  R14 R1 K2    ; R14 := R1["element"]
 49 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["mCardIndex"]
 50 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
 51 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["mLevelReq"]
 52 [-]: SETTABLE  R12 K12 R13  ; R12["RANK"] := R13
 53 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 54 [-]: GETUPVAL  R9 U3        ; R9 := U3
 55 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0x38ECFE60"]
 56 [-]: MOVE      R10 R8       ; R10 := R8
 57 [-]: CALL      R9 2 1       ; R9(R10)
 58 [-]: MOVE      R9 R0        ; R9 := R0
 59 [-]: RETURN    R9 2         ; return R9
 60 [-]: TEST      R5 1         ; if R5 then PC := 165
 61 [-]: JMP       165          ; PC := 165
 62 [-]: GETUPVAL  R9 U1        ; R9 := U1
 63 [-]: EQ        0 R0 R9      ; if R0 ~= R9 then PC := 115
 64 [-]: JMP       115          ; PC := 115
 65 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["element"]
 66 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mCardIndex"]
 67 [-]: EQ        1 R9 K5      ; if R9 == -1 then PC := 115
 68 [-]: JMP       115          ; PC := 115
 69 [-]: GETGLOBAL R9 K14       ; R9 := _T
 70 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["upgradeItemSlot"]
 71 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 72 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["LONG_GUN_SLOT"]
 73 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 87
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETGLOBAL R9 K14       ; R9 := _T
 76 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["upgradeItemSlot"]
 77 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 78 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["PISTOL_SLOT"]
 79 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETGLOBAL R9 K14       ; R9 := _T
 82 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["upgradeItemSlot"]
 83 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 84 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["MELEE_SLOT"]
 85 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 115
 86 [-]: JMP       115          ; PC := 115
 87 [-]: GETGLOBAL R9 K14       ; R9 := _T
 88 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["upgradeItemLot"]
 89 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 90 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["LOT_NORMAL"]
 91 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETGLOBAL R9 K14       ; R9 := _T
 94 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["upgradeItemLot"]
 95 [-]: GETGLOBAL R10 K16      ; R10 := Lotus_Game
 96 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["LOT_SENTINEL"]
 97 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 115
 98 [-]: JMP       115          ; PC := 115
 99 [-]: NEWTABLE  R9 1 0       ; R9 := {}
100 [-]: GETUPVAL  R10 U2       ; R10 := U2
101 [-]: GETTABLE  R11 R1 K2    ; R11 := R1["element"]
102 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mCardIndex"]
103 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
104 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
105 [-]: GETUPVAL  R10 U4       ; R10 := U4
106 [-]: MOVE      R11 R9       ; R11 := R9
107 [-]: MOVE      R12 R4       ; R12 := R4
108 [-]: CALL      R10 3 1      ; R10(R11,R12)
109 [-]: LEN       R10 R9       ; R10 := # R9
110 [-]: EQ        0 R10 K23    ; if R10 ~= 0 then PC := 165
111 [-]: JMP       165          ; PC := 165
112 [-]: MOVE      R10 R0       ; R10 := R0
113 [-]: RETURN    R10 2        ; return R10
114 [-]: JMP       165          ; PC := 165
115 [-]: GETUPVAL  R10 U5       ; R10 := U5
116 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 165
117 [-]: JMP       165          ; PC := 165
118 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["mCardIndex"]
119 [-]: EQ        1 R10 K5     ; if R10 == -1 then PC := 165
120 [-]: JMP       165          ; PC := 165
121 [-]: GETGLOBAL R10 K14      ; R10 := _T
122 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["upgradeItemSlot"]
123 [-]: GETGLOBAL R11 K16      ; R11 := Lotus_Game
124 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["LONG_GUN_SLOT"]
125 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 139
126 [-]: JMP       139          ; PC := 139
127 [-]: GETGLOBAL R10 K14      ; R10 := _T
128 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["upgradeItemSlot"]
129 [-]: GETGLOBAL R11 K16      ; R11 := Lotus_Game
130 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["PISTOL_SLOT"]
131 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 139
132 [-]: JMP       139          ; PC := 139
133 [-]: GETGLOBAL R10 K14      ; R10 := _T
134 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["upgradeItemSlot"]
135 [-]: GETGLOBAL R11 K16      ; R11 := Lotus_Game
136 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["MELEE_SLOT"]
137 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 165
138 [-]: JMP       165          ; PC := 165
139 [-]: GETGLOBAL R10 K14      ; R10 := _T
140 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["upgradeItemLot"]
141 [-]: GETGLOBAL R11 K16      ; R11 := Lotus_Game
142 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["LOT_NORMAL"]
143 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 151
144 [-]: JMP       151          ; PC := 151
145 [-]: GETGLOBAL R10 K14      ; R10 := _T
146 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["upgradeItemLot"]
147 [-]: GETGLOBAL R11 K16      ; R11 := Lotus_Game
148 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["LOT_SENTINEL"]
149 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 165
150 [-]: JMP       165          ; PC := 165
151 [-]: NEWTABLE  R10 1 0      ; R10 := {}
152 [-]: GETUPVAL  R11 U2       ; R11 := U2
153 [-]: GETTABLE  R12 R2 K4    ; R12 := R2["mCardIndex"]
154 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
155 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
156 [-]: GETUPVAL  R11 U4       ; R11 := U4
157 [-]: MOVE      R12 R10      ; R12 := R10
158 [-]: MOVE      R13 R4       ; R13 := R4
159 [-]: CALL      R11 3 1      ; R11(R12,R13)
160 [-]: LEN       R11 R10      ; R11 := # R10
161 [-]: EQ        0 R11 K23    ; if R11 ~= 0 then PC := 165
162 [-]: JMP       165          ; PC := 165
163 [-]: MOVE      R11 R0       ; R11 := R0
164 [-]: RETURN    R11 2        ; return R11
165 [-]: GETUPVAL  R11 U6       ; R11 := U6
166 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["info"]
167 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["mItemId"]
168 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["mId"]
169 [-]: GETTABLE  R12 R1 K2    ; R12 := R1["element"]
170 [-]: NEWTABLE  R13 0 7      ; R13 := {}
171 [-]: GETTABLE  R14 R2 K4    ; R14 := R2["mCardIndex"]
172 [-]: SETTABLE  R13 K27 R14  ; R13["CardIndex"] := R14
173 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["mName"]
174 [-]: SETTABLE  R13 K28 R14  ; R13["Name"] := R14
175 [-]: GETTABLE  R14 R2 K30   ; R14 := R2["mInstalled"]
176 [-]: SETTABLE  R13 K29 R14  ; R13["Installed"] := R14
177 [-]: GETTABLE  R14 R2 K32   ; R14 := R2["mInstalledLoadOutType"]
178 [-]: SETTABLE  R13 K31 R14  ; R13["InstalledLoadOutType"] := R14
179 [-]: GETTABLE  R14 R2 K34   ; R14 := R2["mInstalledType"]
180 [-]: SETTABLE  R13 K33 R14  ; R13["InstalledType"] := R14
181 [-]: GETTABLE  R14 R2 K36   ; R14 := R2["mInstalledName"]
182 [-]: SETTABLE  R13 K35 R14  ; R13["InstalledName"] := R14
183 [-]: GETTABLE  R14 R2 K38   ; R14 := R2["mModSet"]
184 [-]: SETTABLE  R13 K37 R14  ; R13["ModSet"] := R14
185 [-]: GETTABLE  R14 R12 K4   ; R14 := R12["mCardIndex"]
186 [-]: SETTABLE  R2 K4 R14    ; R2["mCardIndex"] := R14
187 [-]: GETTABLE  R14 R12 K11  ; R14 := R12["mName"]
188 [-]: SETTABLE  R2 K11 R14   ; R2["mName"] := R14
189 [-]: GETTABLE  R14 R12 K30  ; R14 := R12["mInstalled"]
190 [-]: SETTABLE  R2 K30 R14   ; R2["mInstalled"] := R14
191 [-]: GETTABLE  R14 R12 K32  ; R14 := R12["mInstalledLoadOutType"]
192 [-]: SETTABLE  R2 K32 R14   ; R2["mInstalledLoadOutType"] := R14
193 [-]: GETTABLE  R14 R12 K34  ; R14 := R12["mInstalledType"]
194 [-]: SETTABLE  R2 K34 R14   ; R2["mInstalledType"] := R14
195 [-]: GETTABLE  R14 R12 K36  ; R14 := R12["mInstalledName"]
196 [-]: SETTABLE  R2 K36 R14   ; R2["mInstalledName"] := R14
197 [-]: GETTABLE  R14 R12 K38  ; R14 := R12["mModSet"]
198 [-]: SETTABLE  R2 K38 R14   ; R2["mModSet"] := R14
199 [-]: GETTABLE  R14 R13 K27  ; R14 := R13["CardIndex"]
200 [-]: SETTABLE  R12 K4 R14   ; R12["mCardIndex"] := R14
201 [-]: GETTABLE  R14 R13 K28  ; R14 := R13["Name"]
202 [-]: SETTABLE  R12 K11 R14  ; R12["mName"] := R14
203 [-]: GETTABLE  R14 R13 K29  ; R14 := R13["Installed"]
204 [-]: SETTABLE  R12 K30 R14  ; R12["mInstalled"] := R14
205 [-]: GETTABLE  R14 R13 K31  ; R14 := R13["InstalledLoadOutType"]
206 [-]: SETTABLE  R12 K32 R14  ; R12["mInstalledLoadOutType"] := R14
207 [-]: GETTABLE  R14 R13 K33  ; R14 := R13["InstalledType"]
208 [-]: SETTABLE  R12 K34 R14  ; R12["mInstalledType"] := R14
209 [-]: GETTABLE  R14 R13 K35  ; R14 := R13["InstalledName"]
210 [-]: SETTABLE  R12 K36 R14  ; R12["mInstalledName"] := R14
211 [-]: GETTABLE  R14 R13 K37  ; R14 := R13["ModSet"]
212 [-]: SETTABLE  R12 K38 R14  ; R12["mModSet"] := R14
213 [-]: LOADNIL   R14 R15      ; R14 := R15 := nil
214 [-]: GETTABLE  R16 R2 K4    ; R16 := R2["mCardIndex"]
215 [-]: LT        0 K23 R16    ; if 0 >= R16 then PC := 244
216 [-]: JMP       244          ; PC := 244
217 [-]: GETUPVAL  R16 U2       ; R16 := U2
218 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
219 [-]: GETTABLE  R14 R16 R17  ; R14 := R16[R17]
220 [-]: GETUPVAL  R16 U2       ; R16 := U2
221 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
222 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
223 [-]: GETUPVAL  R17 U2       ; R17 := U2
224 [-]: GETTABLE  R18 R2 K4    ; R18 := R2["mCardIndex"]
225 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
226 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["mInstalled"]
227 [-]: GETTABLE  R17 R17 R11  ; R17 := R17[R11]
228 [-]: SETTABLE  R16 K39 R17  ; R16["mPriorInstalled"] := R17
229 [-]: GETUPVAL  R16 U2       ; R16 := U2
230 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
231 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
232 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mInstalled"]
233 [-]: GETUPVAL  R17 U3       ; R17 := U3
234 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xF81722A2"]
235 [-]: GETUPVAL  R18 U1       ; R18 := U1
236 [-]: EQ        0 R0 R18     ; if R0 ~= R18 then PC := 239
237 [-]: JMP       239          ; PC := 239
238 [-]: MOVE      R18 R0       ; R18 := R0
239 [-]: MOVE      R18 R1       ; R18 := R1
240 [-]: LOADNIL   R19 R19      ; R19 := nil
241 [-]: GETTABLE  R20 R2 K41   ; R20 := R2["Id"]
242 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
243 [-]: SETTABLE  R16 R11 R17  ; R16[R11] := R17
244 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["element"]
245 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["mCardIndex"]
246 [-]: LT        0 K23 R16    ; if 0 >= R16 then PC := 281
247 [-]: JMP       281          ; PC := 281
248 [-]: GETUPVAL  R16 U2       ; R16 := U2
249 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
250 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
251 [-]: GETTABLE  R15 R16 R17  ; R15 := R16[R17]
252 [-]: GETUPVAL  R16 U2       ; R16 := U2
253 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
254 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
255 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
256 [-]: GETUPVAL  R17 U2       ; R17 := U2
257 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
258 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mCardIndex"]
259 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
260 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["mInstalled"]
261 [-]: GETTABLE  R17 R17 R11  ; R17 := R17[R11]
262 [-]: SETTABLE  R16 K39 R17  ; R16["mPriorInstalled"] := R17
263 [-]: GETUPVAL  R16 U2       ; R16 := U2
264 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
265 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
266 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
267 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mInstalled"]
268 [-]: GETUPVAL  R17 U3       ; R17 := U3
269 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xF81722A2"]
270 [-]: GETTABLE  R18 R1 K42   ; R18 := R1["grid"]
271 [-]: GETUPVAL  R19 U1       ; R19 := U1
272 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 275
273 [-]: JMP       275          ; PC := 275
274 [-]: MOVE      R18 R0       ; R18 := R0
275 [-]: MOVE      R18 R1       ; R18 := R1
276 [-]: LOADNIL   R19 R19      ; R19 := nil
277 [-]: GETTABLE  R20 R1 K2    ; R20 := R1["element"]
278 [-]: GETTABLE  R20 R20 K41  ; R20 := R20["Id"]
279 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
280 [-]: SETTABLE  R16 R11 R17  ; R16[R11] := R17
281 [-]: GETUPVAL  R16 U7       ; R16 := U7
282 [-]: TESTSET   R17 R3 1     ; if R3 then PC := 285 else R17 := R3
283 [-]: JMP       285          ; PC := 285
284 [-]: MOVE      R17 R4       ; R17 := R4
285 [-]: CALL      R16 2 2      ; R16 := R16(R17)
286 [-]: TEST      R16 1        ; if R16 then PC := 485
287 [-]: JMP       485          ; PC := 485
288 [-]: GETUPVAL  R16 U8       ; R16 := U8
289 [-]: CALL      R16 1 2      ; R16 := R16()
290 [-]: TEST      R16 0        ; if not R16 then PC := 310
291 [-]: JMP       310          ; PC := 310
292 [-]: GETTABLE  R16 R14 K43  ; R16 := R14["mIsStance"]
293 [-]: TEST      R16 0        ; if not R16 then PC := 310
294 [-]: JMP       310          ; PC := 310
295 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
296 [-]: GETUPVAL  R17 U6       ; R17 := U6
297 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["item"]
298 [-]: CALL      R16 2 2      ; R16 := R16(R17)
299 [-]: TEST      R16 1        ; if R16 then PC := 310
300 [-]: JMP       310          ; PC := 310
301 [-]: GETUPVAL  R16 U6       ; R16 := U6
302 [-]: GETTABLE  R16 R16 K44  ; R16 := R16["item"]
303 [-]: SELF      R16 R16 K45  ; R17 := R16; R16 := R16["0x8E5E18C5"]
304 [-]: GETGLOBAL R18 K46      ; R18 := 0xEC274B1A
305 [-]: LOADK     R19 K47      ; R19 := "POWER_WEAPON"
306 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
307 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
308 [-]: TEST      R16 1        ; if R16 then PC := 485
309 [-]: JMP       485          ; PC := 485
310 [-]: GETUPVAL  R16 U5       ; R16 := U5
311 [-]: EQ        0 R0 R16     ; if R0 ~= R16 then PC := 325
312 [-]: JMP       325          ; PC := 325
313 [-]: GETTABLE  R16 R13 K27  ; R16 := R13["CardIndex"]
314 [-]: EQ        0 R16 K5     ; if R16 ~= -1 then PC := 325
315 [-]: JMP       325          ; PC := 325
316 [-]: TEST      R14 0        ; if not R14 then PC := 482
317 [-]: JMP       482          ; PC := 482
318 [-]: GETTABLE  R16 R14 K48  ; R16 := R14["mType"]
319 [-]: EQ        1 R16 K49    ; if R16 == "AURA" then PC := 325
320 [-]: JMP       325          ; PC := 325
321 [-]: GETTABLE  R16 R14 K43  ; R16 := R14["mIsStance"]
322 [-]: TEST      R16 1        ; if R16 then PC := 325
323 [-]: JMP       325          ; PC := 325
324 [-]: JMP       482          ; PC := 482
325 [-]: GETTABLE  R16 R2 K50   ; R16 := R2["mClipName"]
326 [-]: EQ        1 R16 K51    ; if R16 == nil then PC := 337
327 [-]: JMP       337          ; PC := 337
328 [-]: TEST      R3 1         ; if R3 then PC := 337
329 [-]: JMP       337          ; PC := 337
330 [-]: TEST      R4 1         ; if R4 then PC := 337
331 [-]: JMP       337          ; PC := 337
332 [-]: GETUPVAL  R16 U9       ; R16 := U9
333 [-]: GETTABLE  R17 R2 K50   ; R17 := R2["mClipName"]
334 [-]: LOADK     R18 K52      ; R18 := ".Card.TopInfo.Cost"
335 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
336 [-]: CALL      R16 2 1      ; R16(R17)
337 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["element"]
338 [-]: GETTABLE  R16 R16 K50  ; R16 := R16["mClipName"]
339 [-]: EQ        1 R16 K51    ; if R16 == nil then PC := 351
340 [-]: JMP       351          ; PC := 351
341 [-]: TEST      R3 1         ; if R3 then PC := 351
342 [-]: JMP       351          ; PC := 351
343 [-]: TEST      R4 1         ; if R4 then PC := 351
344 [-]: JMP       351          ; PC := 351
345 [-]: GETUPVAL  R16 U9       ; R16 := U9
346 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
347 [-]: GETTABLE  R17 R17 K50  ; R17 := R17["mClipName"]
348 [-]: LOADK     R18 K52      ; R18 := ".Card.TopInfo.Cost"
349 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
350 [-]: CALL      R16 2 1      ; R16(R17)
351 [-]: NEWTABLE  R16 0 7      ; R16 := {}
352 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
353 [-]: SETTABLE  R16 K27 R17  ; R16["CardIndex"] := R17
354 [-]: GETTABLE  R17 R2 K11   ; R17 := R2["mName"]
355 [-]: SETTABLE  R16 K28 R17  ; R16["Name"] := R17
356 [-]: GETTABLE  R17 R2 K30   ; R17 := R2["mInstalled"]
357 [-]: SETTABLE  R16 K29 R17  ; R16["Installed"] := R17
358 [-]: GETTABLE  R17 R2 K32   ; R17 := R2["mInstalledLoadOutType"]
359 [-]: SETTABLE  R16 K31 R17  ; R16["InstalledLoadOutType"] := R17
360 [-]: GETTABLE  R17 R2 K34   ; R17 := R2["mInstalledType"]
361 [-]: SETTABLE  R16 K33 R17  ; R16["InstalledType"] := R17
362 [-]: GETTABLE  R17 R2 K36   ; R17 := R2["mInstalledName"]
363 [-]: SETTABLE  R16 K35 R17  ; R16["InstalledName"] := R17
364 [-]: GETTABLE  R17 R2 K38   ; R17 := R2["mModSet"]
365 [-]: SETTABLE  R16 K37 R17  ; R16["ModSet"] := R17
366 [-]: MOVE      R13 R16      ; R13 := R16
367 [-]: GETTABLE  R16 R12 K4   ; R16 := R12["mCardIndex"]
368 [-]: SETTABLE  R2 K4 R16    ; R2["mCardIndex"] := R16
369 [-]: GETTABLE  R16 R12 K11  ; R16 := R12["mName"]
370 [-]: SETTABLE  R2 K11 R16   ; R2["mName"] := R16
371 [-]: GETTABLE  R16 R12 K30  ; R16 := R12["mInstalled"]
372 [-]: SETTABLE  R2 K30 R16   ; R2["mInstalled"] := R16
373 [-]: GETTABLE  R16 R12 K32  ; R16 := R12["mInstalledLoadOutType"]
374 [-]: SETTABLE  R2 K32 R16   ; R2["mInstalledLoadOutType"] := R16
375 [-]: GETTABLE  R16 R12 K34  ; R16 := R12["mInstalledType"]
376 [-]: SETTABLE  R2 K34 R16   ; R2["mInstalledType"] := R16
377 [-]: GETTABLE  R16 R12 K36  ; R16 := R12["mInstalledName"]
378 [-]: SETTABLE  R2 K36 R16   ; R2["mInstalledName"] := R16
379 [-]: GETTABLE  R16 R12 K38  ; R16 := R12["mModSet"]
380 [-]: SETTABLE  R2 K38 R16   ; R2["mModSet"] := R16
381 [-]: GETTABLE  R16 R13 K27  ; R16 := R13["CardIndex"]
382 [-]: SETTABLE  R12 K4 R16   ; R12["mCardIndex"] := R16
383 [-]: GETTABLE  R16 R13 K28  ; R16 := R13["Name"]
384 [-]: SETTABLE  R12 K11 R16  ; R12["mName"] := R16
385 [-]: GETTABLE  R16 R13 K29  ; R16 := R13["Installed"]
386 [-]: SETTABLE  R12 K30 R16  ; R12["mInstalled"] := R16
387 [-]: GETTABLE  R16 R13 K31  ; R16 := R13["InstalledLoadOutType"]
388 [-]: SETTABLE  R12 K32 R16  ; R12["mInstalledLoadOutType"] := R16
389 [-]: GETTABLE  R16 R13 K33  ; R16 := R13["InstalledType"]
390 [-]: SETTABLE  R12 K34 R16  ; R12["mInstalledType"] := R16
391 [-]: GETTABLE  R16 R13 K35  ; R16 := R13["InstalledName"]
392 [-]: SETTABLE  R12 K36 R16  ; R12["mInstalledName"] := R16
393 [-]: GETTABLE  R16 R13 K37  ; R16 := R13["ModSet"]
394 [-]: SETTABLE  R12 K38 R16  ; R12["mModSet"] := R16
395 [-]: GETTABLE  R16 R2 K4    ; R16 := R2["mCardIndex"]
396 [-]: LT        0 K23 R16    ; if 0 >= R16 then PC := 425
397 [-]: JMP       425          ; PC := 425
398 [-]: GETUPVAL  R16 U2       ; R16 := U2
399 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
400 [-]: GETTABLE  R14 R16 R17  ; R14 := R16[R17]
401 [-]: GETUPVAL  R16 U2       ; R16 := U2
402 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
403 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
404 [-]: GETUPVAL  R17 U2       ; R17 := U2
405 [-]: GETTABLE  R18 R2 K4    ; R18 := R2["mCardIndex"]
406 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
407 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["mInstalled"]
408 [-]: GETTABLE  R17 R17 R11  ; R17 := R17[R11]
409 [-]: SETTABLE  R16 K39 R17  ; R16["mPriorInstalled"] := R17
410 [-]: GETUPVAL  R16 U2       ; R16 := U2
411 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
412 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
413 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mInstalled"]
414 [-]: GETUPVAL  R17 U3       ; R17 := U3
415 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xF81722A2"]
416 [-]: GETUPVAL  R18 U1       ; R18 := U1
417 [-]: EQ        0 R0 R18     ; if R0 ~= R18 then PC := 420
418 [-]: JMP       420          ; PC := 420
419 [-]: MOVE      R18 R0       ; R18 := R0
420 [-]: MOVE      R18 R1       ; R18 := R1
421 [-]: LOADNIL   R19 R19      ; R19 := nil
422 [-]: GETTABLE  R20 R2 K41   ; R20 := R2["Id"]
423 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
424 [-]: SETTABLE  R16 R11 R17  ; R16[R11] := R17
425 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["element"]
426 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["mCardIndex"]
427 [-]: LT        0 K23 R16    ; if 0 >= R16 then PC := 462
428 [-]: JMP       462          ; PC := 462
429 [-]: GETUPVAL  R16 U2       ; R16 := U2
430 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
431 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
432 [-]: GETTABLE  R15 R16 R17  ; R15 := R16[R17]
433 [-]: GETUPVAL  R16 U2       ; R16 := U2
434 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
435 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
436 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
437 [-]: GETUPVAL  R17 U2       ; R17 := U2
438 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
439 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mCardIndex"]
440 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
441 [-]: GETTABLE  R17 R17 K30  ; R17 := R17["mInstalled"]
442 [-]: GETTABLE  R17 R17 R11  ; R17 := R17[R11]
443 [-]: SETTABLE  R16 K39 R17  ; R16["mPriorInstalled"] := R17
444 [-]: GETUPVAL  R16 U2       ; R16 := U2
445 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
446 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
447 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
448 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["mInstalled"]
449 [-]: GETUPVAL  R17 U3       ; R17 := U3
450 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["0xF81722A2"]
451 [-]: GETTABLE  R18 R1 K42   ; R18 := R1["grid"]
452 [-]: GETUPVAL  R19 U1       ; R19 := U1
453 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 456
454 [-]: JMP       456          ; PC := 456
455 [-]: MOVE      R18 R0       ; R18 := R0
456 [-]: MOVE      R18 R1       ; R18 := R1
457 [-]: LOADNIL   R19 R19      ; R19 := nil
458 [-]: GETTABLE  R20 R1 K2    ; R20 := R1["element"]
459 [-]: GETTABLE  R20 R20 K41  ; R20 := R20["Id"]
460 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
461 [-]: SETTABLE  R16 R11 R17  ; R16[R11] := R17
462 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["element"]
463 [-]: GETTABLE  R16 R16 K50  ; R16 := R16["mClipName"]
464 [-]: EQ        1 R16 K51    ; if R16 == nil then PC := 470
465 [-]: JMP       470          ; PC := 470
466 [-]: GETTABLE  R16 R1 K42   ; R16 := R1["grid"]
467 [-]: GETTABLE  R16 R16 K53  ; R16 := R16["0xA372F64A"]
468 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
469 [-]: CALL      R16 2 1      ; R16(R17)
470 [-]: GETUPVAL  R16 U7       ; R16 := U7
471 [-]: MOVE      R17 R3       ; R17 := R3
472 [-]: CALL      R16 2 1      ; R16(R17)
473 [-]: TEST      R3 1         ; if R3 then PC := 482
474 [-]: JMP       482          ; PC := 482
475 [-]: TEST      R4 1         ; if R4 then PC := 482
476 [-]: JMP       482          ; PC := 482
477 [-]: GETUPVAL  R16 U3       ; R16 := U3
478 [-]: GETTABLE  R16 R16 K54  ; R16 := R16["0x25992394"]
479 [-]: GETGLOBAL R17 K55      ; R17 := _G
480 [-]: GETTABLE  R17 R17 K56  ; R17 := R17["UISound_Error"]
481 [-]: CALL      R16 2 1      ; R16(R17)
482 [-]: MOVE      R16 R0       ; R16 := R0
483 [-]: RETURN    R16 2        ; return R16
484 [-]: JMP       577          ; PC := 577
485 [-]: LOADNIL   R16 R16      ; R16 := nil
486 [-]: GETUPVAL  R17 U5       ; R17 := U5
487 [-]: EQ        0 R0 R17     ; if R0 ~= R17 then PC := 491
488 [-]: JMP       491          ; PC := 491
489 [-]: MOVE      R16 R2       ; R16 := R2
490 [-]: JMP       492          ; PC := 492
491 [-]: GETTABLE  R16 R1 K2    ; R16 := R1["element"]
492 [-]: GETTABLE  R17 R16 K4   ; R17 := R16["mCardIndex"]
493 [-]: LE        0 R17 K23    ; if R17 > 0 then PC := 498
494 [-]: JMP       498          ; PC := 498
495 [-]: GETUPVAL  R17 U10      ; R17 := U10
496 [-]: SETTABLE  R16 K57 R17  ; R16["Categories"] := R17
497 [-]: JMP       504          ; PC := 504
498 [-]: GETUPVAL  R17 U11      ; R17 := U11
499 [-]: GETUPVAL  R18 U2       ; R18 := U2
500 [-]: GETTABLE  R19 R16 K4   ; R19 := R16["mCardIndex"]
501 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
502 [-]: CALL      R17 2 2      ; R17 := R17(R18)
503 [-]: SETTABLE  R16 K57 R17  ; R16["Categories"] := R17
504 [-]: GETTABLE  R17 R2 K4    ; R17 := R2["mCardIndex"]
505 [-]: LT        0 K23 R17    ; if 0 >= R17 then PC := 526
506 [-]: JMP       526          ; PC := 526
507 [-]: GETUPVAL  R17 U2       ; R17 := U2
508 [-]: GETTABLE  R18 R2 K4    ; R18 := R2["mCardIndex"]
509 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
510 [-]: SETTABLE  R17 K58 R2   ; R17["mElement"] := R2
511 [-]: GETUPVAL  R17 U12      ; R17 := U12
512 [-]: GETUPVAL  R18 U2       ; R18 := U2
513 [-]: GETTABLE  R19 R2 K4    ; R19 := R2["mCardIndex"]
514 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
515 [-]: CALL      R17 2 1      ; R17(R18)
516 [-]: GETUPVAL  R17 U5       ; R17 := U5
517 [-]: EQ        0 R0 R17     ; if R0 ~= R17 then PC := 526
518 [-]: JMP       526          ; PC := 526
519 [-]: GETUPVAL  R17 U13      ; R17 := U13
520 [-]: GETTABLE  R17 R17 K60  ; R17 := R17["0xE8A61E6E"]
521 [-]: GETUPVAL  R18 U2       ; R18 := U2
522 [-]: GETTABLE  R19 R2 K4    ; R19 := R2["mCardIndex"]
523 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
524 [-]: CALL      R17 2 2      ; R17 := R17(R18)
525 [-]: SETTABLE  R2 K59 R17   ; R2["SearchCache"] := R17
526 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
527 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mCardIndex"]
528 [-]: LT        0 K23 R17    ; if 0 >= R17 then PC := 543
529 [-]: JMP       543          ; PC := 543
530 [-]: GETUPVAL  R17 U2       ; R17 := U2
531 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
532 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mCardIndex"]
533 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
534 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
535 [-]: SETTABLE  R17 K58 R18  ; R17["mElement"] := R18
536 [-]: GETUPVAL  R17 U12      ; R17 := U12
537 [-]: GETUPVAL  R18 U2       ; R18 := U2
538 [-]: GETTABLE  R19 R1 K2    ; R19 := R1["element"]
539 [-]: GETTABLE  R19 R19 K4   ; R19 := R19["mCardIndex"]
540 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
541 [-]: CALL      R17 2 1      ; R17(R18)
542 [-]: JMP       548          ; PC := 548
543 [-]: GETUPVAL  R17 U1       ; R17 := U1
544 [-]: EQ        0 R0 R17     ; if R0 ~= R17 then PC := 548
545 [-]: JMP       548          ; PC := 548
546 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
547 [-]: SETTABLE  R17 K59 K61  ; R17["SearchCache"] := ""
548 [-]: GETUPVAL  R17 U1       ; R17 := U1
549 [-]: EQ        0 R0 R17     ; if R0 ~= R17 then PC := 577
550 [-]: JMP       577          ; PC := 577
551 [-]: GETUPVAL  R17 U13      ; R17 := U13
552 [-]: GETTABLE  R17 R17 K62  ; R17 := R17["0x8616778F"]
553 [-]: GETUPVAL  R18 U2       ; R18 := U2
554 [-]: GETTABLE  R19 R2 K4    ; R19 := R2["mCardIndex"]
555 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
556 [-]: CALL      R17 2 2      ; R17 := R17(R18)
557 [-]: TEST      R17 0        ; if not R17 then PC := 577
558 [-]: JMP       577          ; PC := 577
559 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
560 [-]: GETGLOBAL R18 K14      ; R18 := _T
561 [-]: GETTABLE  R18 R18 K63  ; R18 := R18["OnOmegaEvent"]
562 [-]: CALL      R17 2 2      ; R17 := R17(R18)
563 [-]: TEST      R17 1        ; if R17 then PC := 577
564 [-]: JMP       577          ; PC := 577
565 [-]: GETGLOBAL R17 K14      ; R17 := _T
566 [-]: GETTABLE  R17 R17 K64  ; R17 := R17["0x135B8DDA"]
567 [-]: GETUPVAL  R18 U3       ; R18 := U3
568 [-]: GETTABLE  R18 R18 K40  ; R18 := R18["0xF81722A2"]
569 [-]: GETUPVAL  R19 U2       ; R19 := U2
570 [-]: GETTABLE  R20 R2 K4    ; R20 := R2["mCardIndex"]
571 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
572 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["mIdentified"]
573 [-]: LOADK     R20 K66      ; R20 := "InstallIdentified"
574 [-]: LOADK     R21 K67      ; R21 := "InstallUnidentified"
575 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
576 [-]: CALL      R17 0 1      ; R17(R18,...)
577 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
578 [-]: EQ        1 R2 R17     ; if R2 == R17 then PC := 597
579 [-]: JMP       597          ; PC := 597
580 [-]: GETUPVAL  R17 U1       ; R17 := U1
581 [-]: EQ        1 R0 R17     ; if R0 == R17 then PC := 587
582 [-]: JMP       587          ; PC := 587
583 [-]: GETTABLE  R17 R1 K42   ; R17 := R1["grid"]
584 [-]: GETUPVAL  R18 U1       ; R18 := U1
585 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 597
586 [-]: JMP       597          ; PC := 597
587 [-]: MOVE      R17 R1       ; R17 := R1
588 [-]: MOVE      R17 R14      ; R17 := R14
589 [-]: TEST      R3 1         ; if R3 then PC := 597
590 [-]: JMP       597          ; PC := 597
591 [-]: GETUPVAL  R17 U15      ; R17 := U15
592 [-]: MOVE      R18 R2       ; R18 := R2
593 [-]: CALL      R17 2 1      ; R17(R18)
594 [-]: GETUPVAL  R17 U15      ; R17 := U15
595 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
596 [-]: CALL      R17 2 1      ; R17(R18)
597 [-]: GETTABLE  R17 R2 K50   ; R17 := R2["mClipName"]
598 [-]: EQ        1 R17 K51    ; if R17 == nil then PC := 612
599 [-]: JMP       612          ; PC := 612
600 [-]: GETTABLE  R17 R0 K53   ; R17 := R0["0xA372F64A"]
601 [-]: MOVE      R18 R2       ; R18 := R2
602 [-]: CALL      R17 2 1      ; R17(R18)
603 [-]: GETUPVAL  R17 U16      ; R17 := U16
604 [-]: SELF      R17 R17 K68  ; R18 := R17; R17 := R17["0xB1627322"]
605 [-]: CALL      R17 2 2      ; R17 := R17(R18)
606 [-]: TEST      R17 0        ; if not R17 then PC := 612
607 [-]: JMP       612          ; PC := 612
608 [-]: GETTABLE  R17 R0 K69   ; R17 := R0["0xCAB0A8A1"]
609 [-]: MOVE      R18 R2       ; R18 := R2
610 [-]: MOVE      R19 R1       ; R19 := R1
611 [-]: CALL      R17 3 1      ; R17(R18,R19)
612 [-]: GETTABLE  R17 R1 K2    ; R17 := R1["element"]
613 [-]: GETTABLE  R17 R17 K50  ; R17 := R17["mClipName"]
614 [-]: EQ        1 R17 K51    ; if R17 == nil then PC := 620
615 [-]: JMP       620          ; PC := 620
616 [-]: GETTABLE  R17 R1 K42   ; R17 := R1["grid"]
617 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["0xA372F64A"]
618 [-]: GETTABLE  R18 R1 K2    ; R18 := R1["element"]
619 [-]: CALL      R17 2 1      ; R17(R18)
620 [-]: GETUPVAL  R17 U14      ; R17 := U14
621 [-]: TEST      R17 0        ; if not R17 then PC := 707
622 [-]: JMP       707          ; PC := 707
623 [-]: TEST      R6 1         ; if R6 then PC := 707
624 [-]: JMP       707          ; PC := 707
625 [-]: GETUPVAL  R17 U17      ; R17 := U17
626 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
627 [-]: GETTABLE  R19 R2 K38   ; R19 := R2["mModSet"]
628 [-]: CALL      R18 2 2      ; R18 := R18(R19)
629 [-]: TEST      R18 0        ; if not R18 then PC := 637
630 [-]: JMP       637          ; PC := 637
631 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
632 [-]: GETTABLE  R19 R12 K38  ; R19 := R12["mModSet"]
633 [-]: CALL      R18 2 2      ; R18 := R18(R19)
634 [-]: MOVE      R18 R18      ; R18 := R18
635 [-]: JMP       638          ; PC := 638
636 [-]: MOVE      R18 R0       ; R18 := R0
637 [-]: MOVE      R18 R1       ; R18 := R1
638 [-]: CALL      R17 2 1      ; R17(R18)
639 [-]: LOADNIL   R17 R17      ; R17 := nil
640 [-]: GETUPVAL  R18 U1       ; R18 := U1
641 [-]: EQ        0 R0 R18     ; if R0 ~= R18 then PC := 648
642 [-]: JMP       648          ; PC := 648
643 [-]: GETTABLE  R18 R2 K4    ; R18 := R2["mCardIndex"]
644 [-]: EQ        1 R18 K5     ; if R18 == -1 then PC := 648
645 [-]: JMP       648          ; PC := 648
646 [-]: MOVE      R17 R2       ; R17 := R2
647 [-]: JMP       655          ; PC := 655
648 [-]: GETUPVAL  R18 U5       ; R18 := U5
649 [-]: EQ        0 R0 R18     ; if R0 ~= R18 then PC := 655
650 [-]: JMP       655          ; PC := 655
651 [-]: GETTABLE  R18 R12 K4   ; R18 := R12["mCardIndex"]
652 [-]: EQ        1 R18 K5     ; if R18 == -1 then PC := 655
653 [-]: JMP       655          ; PC := 655
654 [-]: MOVE      R17 R12      ; R17 := R12
655 [-]: TEST      R17 0        ; if not R17 then PC := 707
656 [-]: JMP       707          ; PC := 707
657 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
658 [-]: GETTABLE  R19 R17 K38  ; R19 := R17["mModSet"]
659 [-]: CALL      R18 2 2      ; R18 := R18(R19)
660 [-]: TEST      R18 1        ; if R18 then PC := 675
661 [-]: JMP       675          ; PC := 675
662 [-]: GETTABLE  R18 R17 K38  ; R18 := R17["mModSet"]
663 [-]: SELF      R18 R18 K70  ; R19 := R18; R18 := R18["0xA8B65288"]
664 [-]: CALL      R18 2 2      ; R18 := R18(R19)
665 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
666 [-]: MOVE      R20 R18      ; R20 := R18
667 [-]: CALL      R19 2 2      ; R19 := R19(R20)
668 [-]: TEST      R19 1        ; if R19 then PC := 707
669 [-]: JMP       707          ; PC := 707
670 [-]: GETUPVAL  R19 U3       ; R19 := U3
671 [-]: GETTABLE  R19 R19 K54  ; R19 := R19["0x25992394"]
672 [-]: MOVE      R20 R18      ; R20 := R18
673 [-]: CALL      R19 2 1      ; R19(R20)
674 [-]: JMP       707          ; PC := 707
675 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
676 [-]: GETUPVAL  R20 U2       ; R20 := U2
677 [-]: GETTABLE  R21 R17 K4   ; R21 := R17["mCardIndex"]
678 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
679 [-]: CALL      R19 2 2      ; R19 := R19(R20)
680 [-]: TEST      R19 1        ; if R19 then PC := 707
681 [-]: JMP       707          ; PC := 707
682 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
683 [-]: GETUPVAL  R20 U2       ; R20 := U2
684 [-]: GETTABLE  R21 R17 K4   ; R21 := R17["mCardIndex"]
685 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
686 [-]: GETTABLE  R20 R20 K71  ; R20 := R20["mUpgradeItemType"]
687 [-]: CALL      R19 2 2      ; R19 := R19(R20)
688 [-]: TEST      R19 1        ; if R19 then PC := 707
689 [-]: JMP       707          ; PC := 707
690 [-]: GETGLOBAL R19 K72      ; R19 := 0x7C282057
691 [-]: GETUPVAL  R20 U2       ; R20 := U2
692 [-]: GETTABLE  R21 R17 K4   ; R21 := R17["mCardIndex"]
693 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
694 [-]: GETTABLE  R20 R20 K71  ; R20 := R20["mUpgradeItemType"]
695 [-]: CALL      R19 2 2      ; R19 := R19(R20)
696 [-]: SELF      R20 R19 K70  ; R21 := R19; R20 := R19["0xA8B65288"]
697 [-]: CALL      R20 2 2      ; R20 := R20(R21)
698 [-]: GETGLOBAL R21 K0       ; R21 := 0x400E7765
699 [-]: MOVE      R22 R20      ; R22 := R20
700 [-]: CALL      R21 2 2      ; R21 := R21(R22)
701 [-]: TEST      R21 1        ; if R21 then PC := 707
702 [-]: JMP       707          ; PC := 707
703 [-]: GETUPVAL  R21 U3       ; R21 := U3
704 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["0x25992394"]
705 [-]: MOVE      R22 R20      ; R22 := R20
706 [-]: CALL      R21 2 1      ; R21(R22)
707 [-]: MOVE      R21 R1       ; R21 := R1
708 [-]: RETURN    R21 2        ; return R21
709 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1705
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "_color"
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0xF81722A2"]
  7 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mInstalled"]
  8 [-]: LOADK     R7 K6        ; R7 := 5592405
  9 [-]: LOADK     R8 K7        ; R8 := 16777215
 10 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x880196A7"]
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 15 [-]: LOADK     R4 K9        ; R4 := "Card.UsageCounter"
 16 [-]: LOADK     R5 K10       ; R5 := "_visible"
 17 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mInstalled"]
 18 [-]: TEST      R6 1         ; if R6 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["Selected"]
 21 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 22 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["Selected"]
 23 [-]: TEST      R1 0         ; if not R1 then PC := 47
 24 [-]: JMP       47           ; PC := 47
 25 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 26 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x26581636"]
 27 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 28 [-]: LOADK     R4 K13       ; R4 := ".Card.UsageCounter.UseCounterBacker"
 29 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 30 [-]: GETGLOBAL R4 K14       ; R4 := useCounterBacker
 31 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 32 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 33 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x880196A7"]
 34 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 35 [-]: LOADK     R4 K15       ; R4 := "Card.UsageCounter.UseCounterBacker"
 36 [-]: LOADK     R5 K16       ; R5 := "_xscale"
 37 [-]: LOADK     R6 K17       ; R6 := 100
 38 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 39 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 40 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x880196A7"]
 41 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 42 [-]: LOADK     R4 K15       ; R4 := "Card.UsageCounter.UseCounterBacker"
 43 [-]: LOADK     R5 K18       ; R5 := "_yscale"
 44 [-]: LOADK     R6 K17       ; R6 := 100
 45 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 46 [-]: JMP       92           ; PC := 92
 47 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["mInstalled"]
 48 [-]: TEST      R1 0         ; if not R1 then PC := 92
 49 [-]: JMP       92           ; PC := 92
 50 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 51 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1["0xD6A79FE9"]
 52 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 53 [-]: LOADK     R4 K20       ; R4 := ".Card.UsageCounter.Count"
 54 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 55 [-]: LOADK     R4 K21       ; R4 := "text"
 56 [-]: LOADK     R5 K22       ; R5 := ""
 57 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 58 [-]: GETTABLE  R1 R0 K23    ; R1 := R0["mInstalledLoadOutType"]
 59 [-]: GETGLOBAL R2 K24       ; R2 := Lotus_Game
 60 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["LOT_SENTINEL"]
 61 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 71
 62 [-]: JMP       71           ; PC := 71
 63 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 64 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x26581636"]
 65 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 66 [-]: LOADK     R4 K13       ; R4 := ".Card.UsageCounter.UseCounterBacker"
 67 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 68 [-]: GETGLOBAL R4 K26       ; R4 := installedSentinelIcon
 69 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 70 [-]: JMP       78           ; PC := 78
 71 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 72 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x26581636"]
 73 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 74 [-]: LOADK     R4 K13       ; R4 := ".Card.UsageCounter.UseCounterBacker"
 75 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 76 [-]: GETGLOBAL R4 K27       ; R4 := installedWarframeIcon
 77 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 78 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 79 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x880196A7"]
 80 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 81 [-]: LOADK     R4 K15       ; R4 := "Card.UsageCounter.UseCounterBacker"
 82 [-]: LOADK     R5 K16       ; R5 := "_xscale"
 83 [-]: LOADK     R6 K28       ; R6 := 70
 84 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 85 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 86 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x880196A7"]
 87 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 88 [-]: LOADK     R4 K15       ; R4 := "Card.UsageCounter.UseCounterBacker"
 89 [-]: LOADK     R5 K18       ; R5 := "_yscale"
 90 [-]: LOADK     R6 K28       ; R6 := 70
 91 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 92 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1725
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xEBC98450"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["0x25992394"]
 11 [-]: GETGLOBAL R4 K3        ; R4 := _G
 12 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UISound_Select"]
 13 [-]: CALL      R3 2 1       ; R3(R4)
 14 [-]: GETUPVAL  R3 U2        ; R3 := U2
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x2DB1272F"]
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1734
; #Upvalues:       26
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := -272
  2 [-]: LOADK     R1 K1        ; R1 := -150
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x329BDC44
  4 [-]: LOADK     R3 K3        ; R3 := "EE.Interface.Components.Grid"
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: EQ        1 R3 K4      ; if R3 == nil then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0xAE27EC9B"]
 11 [-]: CALL      R3 2 1       ; R3(R4)
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: CALL      R3 1 2       ; R3 := R3()
 14 [-]: GETUPVAL  R4 U4        ; R4 := U4
 15 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xB19223CD"]
 16 [-]: GETGLOBAL R5 K7        ; R5 := _T
 17 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["upgradeItemCategory"]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: GETGLOBAL R7 K7        ; R7 := _T
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["upgradeItemLot"]
 21 [-]: CALL      R4 4 3       ; R4,R5 := R4(R5,R6,R7)
 22 [-]: MOVE      R5 R3        ; R5 := R3
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["0x9A7B3F36"]
 25 [-]: GETGLOBAL R5 K11       ; R5 := mMovie
 26 [-]: LOADK     R6 K12       ; R6 := "Installed.Card1"
 27 [-]: LOADNIL   R7 R7        ; R7 := nil
 28 [-]: GETUPVAL  R8 U3        ; R8 := U3
 29 [-]: GETUPVAL  R9 U2        ; R9 := U2
 30 [-]: CALL      R4 6 2       ; R4 := R4(R5,R6,R7,R8,R9)
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: GETGLOBAL R4 K13       ; R4 := 0x8C64AFA9
 33 [-]: GETGLOBAL R5 K11       ; R5 := mMovie
 34 [-]: LOADK     R6 K14       ; R6 := "Installed.Card1.swapDepths"
 35 [-]: GETUPVAL  R7 U0        ; R7 := U0
 36 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["mInitialDepth"]
 37 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 38 [-]: GETUPVAL  R4 U5        ; R4 := U5
 39 [-]: EQ        0 R4 K4      ; if R4 ~= nil then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mInitialX"]
 43 [-]: MOVE      R4 R5        ; R4 := R5
 44 [-]: GETUPVAL  R4 U6        ; R4 := U6
 45 [-]: EQ        0 R4 K4      ; if R4 ~= nil then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETUPVAL  R4 U0        ; R4 := U0
 48 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mInitialY"]
 49 [-]: MOVE      R4 R6        ; R4 := R6
 50 [-]: GETGLOBAL R4 K18       ; R4 := 0x400E7765
 51 [-]: MOVE      R5 R3        ; R5 := R3
 52 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 53 [-]: TEST      R4 1         ; if R4 then PC := 145
 54 [-]: JMP       145          ; PC := 145
 55 [-]: GETUPVAL  R4 U7        ; R4 := U7
 56 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["Slots"]
 57 [-]: LT        1 K20 R4     ; if 0 < R4 then PC := 77
 58 [-]: JMP       77           ; PC := 77
 59 [-]: GETGLOBAL R4 K7        ; R4 := _T
 60 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
 61 [-]: GETGLOBAL R5 K21       ; R5 := Engine
 62 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["Item_Suits"]
 63 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 77
 64 [-]: JMP       77           ; PC := 77
 65 [-]: GETGLOBAL R4 K7        ; R4 := _T
 66 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
 67 [-]: GETGLOBAL R5 K21       ; R5 := Engine
 68 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Item_LongGuns"]
 69 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETGLOBAL R4 K7        ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
 73 [-]: GETGLOBAL R5 K21       ; R5 := Engine
 74 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Item_Pistols"]
 75 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: GETUPVAL  R4 U0        ; R4 := U0
 78 [-]: GETUPVAL  R5 U5        ; R5 := U5
 79 [-]: MUL       R6 R0 K25    ; R6 := R0 * 0.5
 80 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 81 [-]: SETTABLE  R4 K16 R5    ; R4["mInitialX"] := R5
 82 [-]: JMP       105          ; PC := 105
 83 [-]: SELF      R4 R3 K26    ; R5 := R3; R4 := R3["0x8B598ED4"]
 84 [-]: GETGLOBAL R6 K27       ; R6 := gSentinelPowerSuitType
 85 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 86 [-]: TEST      R4 0         ; if not R4 then PC := 94
 87 [-]: JMP       94           ; PC := 94
 88 [-]: GETUPVAL  R4 U0        ; R4 := U0
 89 [-]: GETUPVAL  R5 U5        ; R5 := U5
 90 [-]: MUL       R6 R0 K28    ; R6 := R0 * -0.5
 91 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 92 [-]: SETTABLE  R4 K16 R5    ; R4["mInitialX"] := R5
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETGLOBAL R4 K7        ; R4 := _T
 95 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["upgradeItemLot"]
 96 [-]: GETGLOBAL R5 K29       ; R5 := Lotus_Game
 97 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["LOT_DATAKNIFE"]
 98 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 105
 99 [-]: JMP       105          ; PC := 105
100 [-]: GETUPVAL  R4 U0        ; R4 := U0
101 [-]: GETUPVAL  R5 U5        ; R5 := U5
102 [-]: MUL       R6 R0 K25    ; R6 := R0 * 0.5
103 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
104 [-]: SETTABLE  R4 K16 R5    ; R4["mInitialX"] := R5
105 [-]: SELF      R4 R3 K26    ; R5 := R3; R4 := R3["0x8B598ED4"]
106 [-]: GETGLOBAL R6 K27       ; R6 := gSentinelPowerSuitType
107 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
108 [-]: TEST      R4 1         ; if R4 then PC := 126
109 [-]: JMP       126          ; PC := 126
110 [-]: GETUPVAL  R4 U8        ; R4 := U8
111 [-]: GETUPVAL  R5 U9        ; R5 := U9
112 [-]: LE        1 R4 R5      ; if R4 <= R5 then PC := 126
113 [-]: JMP       126          ; PC := 126
114 [-]: GETGLOBAL R4 K7        ; R4 := _T
115 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
116 [-]: GETGLOBAL R5 K21       ; R5 := Engine
117 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Item_LongGuns"]
118 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 126
119 [-]: JMP       126          ; PC := 126
120 [-]: GETGLOBAL R4 K7        ; R4 := _T
121 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
122 [-]: GETGLOBAL R5 K21       ; R5 := Engine
123 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["Item_Pistols"]
124 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 145
125 [-]: JMP       145          ; PC := 145
126 [-]: GETGLOBAL R4 K7        ; R4 := _T
127 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["upgradeItemLot"]
128 [-]: GETGLOBAL R5 K29       ; R5 := Lotus_Game
129 [-]: GETTABLE  R5 R5 K30    ; R5 := R5["LOT_DATAKNIFE"]
130 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 140
131 [-]: JMP       140          ; PC := 140
132 [-]: GETUPVAL  R4 U8        ; R4 := U8
133 [-]: EQ        0 R4 K31     ; if R4 ~= 3 then PC := 140
134 [-]: JMP       140          ; PC := 140
135 [-]: GETUPVAL  R4 U0        ; R4 := U0
136 [-]: GETUPVAL  R5 U6        ; R5 := U6
137 [-]: ADD       R5 R5 R1     ; R5 := R5 + R1
138 [-]: SETTABLE  R4 K17 R5    ; R4["mInitialY"] := R5
139 [-]: JMP       145          ; PC := 145
140 [-]: GETUPVAL  R4 U0        ; R4 := U0
141 [-]: GETUPVAL  R5 U6        ; R5 := U6
142 [-]: MUL       R6 R1 K28    ; R6 := R1 * -0.5
143 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
144 [-]: SETTABLE  R4 K17 R5    ; R4["mInitialY"] := R5
145 [-]: GETUPVAL  R4 U0        ; R4 := U0
146 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0xE13A565"]
147 [-]: LOADK     R6 K33       ; R6 := "Selected"
148 [-]: LOADK     R7 K34       ; R7 := "Focused"
149 [-]: LOADK     R8 K35       ; R8 := "Unfocused"
150 [-]: LOADK     R9 K36       ; R9 := "Pressed"
151 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
152 [-]: GETUPVAL  R4 U0        ; R4 := U0
153 [-]: SETTABLE  R4 K37 K38   ; R4["mElementDelayTime"] := 0.0099999997764826
154 [-]: GETUPVAL  R4 U0        ; R4 := U0
155 [-]: SETTABLE  R4 K39 K40   ; R4["mElementTransitionTime"] := 0.050000000745058
156 [-]: GETUPVAL  R4 U0        ; R4 := U0
157 [-]: SETTABLE  R4 K41 R0    ; R4["mColumnSeparation"] := R0
158 [-]: GETUPVAL  R4 U0        ; R4 := U0
159 [-]: SETTABLE  R4 K42 R1    ; R4["mRowSeparation"] := R1
160 [-]: GETUPVAL  R4 U0        ; R4 := U0
161 [-]: CLOSURE   R5 0         ; R5 := closure(Function #49.1)
162 [-]: GETUPVAL  R0 U10       ; R0 := U10
163 [-]: GETUPVAL  R0 U11       ; R0 := U11
164 [-]: GETUPVAL  R0 U12       ; R0 := U12
165 [-]: GETUPVAL  R0 U13       ; R0 := U13
166 [-]: GETUPVAL  R0 U14       ; R0 := U14
167 [-]: GETUPVAL  R0 U15       ; R0 := U15
168 [-]: SETTABLE  R4 K43 R5    ; R4["mOnFocusedCallback"] := R5
169 [-]: GETUPVAL  R4 U0        ; R4 := U0
170 [-]: CLOSURE   R5 1         ; R5 := closure(Function #49.2)
171 [-]: GETUPVAL  R0 U10       ; R0 := U10
172 [-]: GETUPVAL  R0 U11       ; R0 := U11
173 [-]: GETUPVAL  R0 U12       ; R0 := U12
174 [-]: GETUPVAL  R0 U15       ; R0 := U15
175 [-]: SETTABLE  R4 K44 R5    ; R4["mOnUnfocusedCallback"] := R5
176 [-]: GETUPVAL  R4 U0        ; R4 := U0
177 [-]: CLOSURE   R5 2         ; R5 := closure(Function #49.3)
178 [-]: GETUPVAL  R0 U11       ; R0 := U11
179 [-]: GETUPVAL  R0 U16       ; R0 := U16
180 [-]: GETUPVAL  R0 U0        ; R0 := U0
181 [-]: GETUPVAL  R0 U14       ; R0 := U14
182 [-]: GETUPVAL  R0 U17       ; R0 := U17
183 [-]: GETUPVAL  R0 U15       ; R0 := U15
184 [-]: SETTABLE  R4 K45 R5    ; R4["mOnPressedCallback"] := R5
185 [-]: GETUPVAL  R4 U0        ; R4 := U0
186 [-]: CLOSURE   R5 3         ; R5 := closure(Function #49.4)
187 [-]: GETUPVAL  R0 U10       ; R0 := U10
188 [-]: GETUPVAL  R0 U11       ; R0 := U11
189 [-]: GETUPVAL  R0 U16       ; R0 := U16
190 [-]: GETUPVAL  R0 U0        ; R0 := U0
191 [-]: GETUPVAL  R0 U14       ; R0 := U14
192 [-]: GETUPVAL  R0 U4        ; R0 := U4
193 [-]: GETUPVAL  R0 U18       ; R0 := U18
194 [-]: GETUPVAL  R0 U19       ; R0 := U19
195 [-]: GETUPVAL  R0 U20       ; R0 := U20
196 [-]: SETTABLE  R4 K46 R5    ; R4["mOnSelectedCallback"] := R5
197 [-]: GETUPVAL  R4 U0        ; R4 := U0
198 [-]: CLOSURE   R5 4         ; R5 := closure(Function #49.5)
199 [-]: GETUPVAL  R0 U0        ; R0 := U0
200 [-]: GETUPVAL  R0 U15       ; R0 := U15
201 [-]: GETUPVAL  R0 U21       ; R0 := U21
202 [-]: GETUPVAL  R0 U22       ; R0 := U22
203 [-]: GETUPVAL  R0 U23       ; R0 := U23
204 [-]: GETUPVAL  R0 U24       ; R0 := U24
205 [-]: GETUPVAL  R0 U25       ; R0 := U25
206 [-]: GETUPVAL  R0 U4        ; R0 := U4
207 [-]: GETUPVAL  R0 U18       ; R0 := U18
208 [-]: SETTABLE  R4 K47 R5    ; R4["mElementDrawCallback"] := R5
209 [-]: RETURN    R0 1         ; return 


; Function #49.1:
;
; Name:            
; Defined at line: 1781
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0xB1627322"]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: TEST      R1 1         ; if R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: CALL      R2 1 1       ; R2()
 14 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mCardIndex"]
 15 [-]: LT        0 R2 K2      ; if R2 >= 1 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0x8C64AFA9
 19 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 20 [-]: LOADK     R4 K5        ; R4 := "Installed.swapDepths"
 21 [-]: LOADK     R5 K6        ; R5 := 1200
 22 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 23 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["Id"]
 24 [-]: MOVE      R2 R3        ; R2 := R3
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x25992394"]
 27 [-]: GETGLOBAL R3 K9        ; R3 := _G
 28 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UISound_Focus"]
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: GETUPVAL  R2 U5        ; R2 := U5
 31 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0x697262FB"]
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mClipName"]
 34 [-]: LOADK     R5 K13       ; R5 := ".Card"
 35 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 36 [-]: MOVE      R5 R1        ; R5 := R1
 37 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 38 [-]: GETGLOBAL R2 K3        ; R2 := 0x8C64AFA9
 39 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 40 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mClipName"]
 41 [-]: LOADK     R5 K14       ; R5 := ".swapDepths"
 42 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 43 [-]: LOADK     R5 K6        ; R5 := 1200
 44 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 45 [-]: GETGLOBAL R2 K15       ; R2 := _T
 46 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mClipName"]
 47 [-]: SETTABLE  R2 K16 R3    ; R2["FocusedCard"] := R3
 48 [-]: RETURN    R0 1         ; return 


; Function #49.2:
;
; Name:            
; Defined at line: 1808
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xB1627322"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: GETGLOBAL R1 K1        ; R1 := _T
 14 [-]: SETTABLE  R1 K2 K3     ; R1["gToolTip"] := nil
 15 [-]: GETUPVAL  R1 U3        ; R1 := U3
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x697262FB"]
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
 19 [-]: LOADK     R4 K6        ; R4 := ".Card"
 20 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: RETURN    R0 1         ; return 


; Function #49.3:
;
; Name:            
; Defined at line: 1819
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mCardLocked"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0xB1627322"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R1 3 1       ; R1(R2,R3)
 14 [-]: GETUPVAL  R1 U3        ; R1 := U3
 15 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x25992394"]
 16 [-]: GETGLOBAL R2 K3        ; R2 := _G
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UISound_ButtonSelect"]
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: JMP       134          ; PC := 134
 20 [-]: GETUPVAL  R1 U4        ; R1 := U4
 21 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mCardIndex"]
 22 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 23 [-]: GETGLOBAL R2 K6        ; R2 := 0x400E7765
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 134
 27 [-]: JMP       134          ; PC := 134
 28 [-]: GETUPVAL  R2 U3        ; R2 := U3
 29 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x25992394"]
 30 [-]: GETGLOBAL R3 K3        ; R3 := _G
 31 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["UISound_Select"]
 32 [-]: CALL      R2 2 1       ; R2(R3)
 33 [-]: GETTABLE  R2 R1 K8     ; R2 := R1["mIcon"]
 34 [-]: GETUPVAL  R3 U2        ; R3 := U2
 35 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x2176B11E"]
 36 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["Id"]
 37 [-]: CALL      R3 3 1       ; R3(R4,R5)
 38 [-]: GETUPVAL  R3 U5        ; R3 := U5
 39 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0xB151CC5A"]
 40 [-]: MOVE      R4 R1        ; R4 := R1
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: TEST      R3 0         ; if not R3 then PC := 79
 43 [-]: JMP       79           ; PC := 79
 44 [-]: GETGLOBAL R3 K12       ; R3 := mMovie
 45 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 46 [-]: LOADK     R5 K14       ; R5 := "DragImage"
 47 [-]: GETGLOBAL R6 K3        ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["UIMaterial_Mods"]
 49 [-]: GETTABLE  R6 R6 K16    ; R6 := R6[2]
 50 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["ImmortalIcon"]
 51 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 52 [-]: GETGLOBAL R3 K12       ; R3 := mMovie
 53 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0xE953BC1F"]
 54 [-]: LOADK     R5 K14       ; R5 := "DragImage"
 55 [-]: GETGLOBAL R6 K19       ; R6 := 0xEC274B1A
 56 [-]: LOADK     R7 K20       ; R7 := "DetailMap"
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: GETTABLE  R7 R1 K21    ; R7 := R1["mGlowIcon"]
 59 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 60 [-]: GETGLOBAL R3 K12       ; R3 := mMovie
 61 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x302AAB2F"]
 62 [-]: LOADK     R5 K14       ; R5 := "DragImage"
 63 [-]: LOADK     R6 K23       ; R6 := "DetailMapTint"
 64 [-]: LOADK     R7 K24       ; R7 := 0.63529998064041
 65 [-]: LOADK     R8 K25       ; R8 := 0
 66 [-]: LOADK     R9 K26       ; R9 := 0.18039999902248
 67 [-]: LOADK     R10 K27      ; R10 := 1
 68 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 69 [-]: GETGLOBAL R3 K12       ; R3 := mMovie
 70 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x302AAB2F"]
 71 [-]: LOADK     R5 K14       ; R5 := "DragImage"
 72 [-]: LOADK     R6 K28       ; R6 := "DetailMapParams"
 73 [-]: LOADK     R7 K27       ; R7 := 1
 74 [-]: LOADK     R8 K27       ; R8 := 1
 75 [-]: LOADK     R9 K27       ; R9 := 1
 76 [-]: LOADK     R10 K27      ; R10 := 1
 77 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 78 [-]: JMP       122          ; PC := 122
 79 [-]: GETGLOBAL R3 K12       ; R3 := mMovie
 80 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 81 [-]: LOADK     R5 K14       ; R5 := "DragImage"
 82 [-]: GETGLOBAL R6 K3        ; R6 := _G
 83 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["UIMaterial_Mods"]
 84 [-]: GETTABLE  R6 R6 K16    ; R6 := R6[2]
 85 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["Icon"]
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: GETGLOBAL R3 K3        ; R3 := _G
 88 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["UIMaterial_Mods"]
 89 [-]: GETTABLE  R3 R3 K16    ; R3 := R3[2]
 90 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["Icon"]
 91 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3["0x8D835A25"]
 92 [-]: GETGLOBAL R5 K19       ; R5 := 0xEC274B1A
 93 [-]: LOADK     R6 K20       ; R6 := "DetailMap"
 94 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 95 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 96 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
 97 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0xE953BC1F"]
 98 [-]: LOADK     R6 K14       ; R6 := "DragImage"
 99 [-]: GETGLOBAL R7 K19       ; R7 := 0xEC274B1A
100 [-]: LOADK     R8 K20       ; R8 := "DetailMap"
101 [-]: CALL      R7 2 2       ; R7 := R7(R8)
102 [-]: MOVE      R8 R3        ; R8 := R3
103 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
104 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
105 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4["0x302AAB2F"]
106 [-]: LOADK     R6 K14       ; R6 := "DragImage"
107 [-]: LOADK     R7 K23       ; R7 := "DetailMapTint"
108 [-]: LOADK     R8 K27       ; R8 := 1
109 [-]: LOADK     R9 K27       ; R9 := 1
110 [-]: LOADK     R10 K27      ; R10 := 1
111 [-]: LOADK     R11 K25      ; R11 := 0
112 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
113 [-]: GETGLOBAL R4 K12       ; R4 := mMovie
114 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4["0x302AAB2F"]
115 [-]: LOADK     R6 K14       ; R6 := "DragImage"
116 [-]: LOADK     R7 K28       ; R7 := "DetailMapParams"
117 [-]: LOADK     R8 K25       ; R8 := 0
118 [-]: LOADK     R9 K25       ; R9 := 0
119 [-]: LOADK     R10 K27      ; R10 := 1
120 [-]: LOADK     R11 K27      ; R11 := 1
121 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
122 [-]: GETUPVAL  R4 U0        ; R4 := U0
123 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0xC5E91BA6"]
124 [-]: LOADK     R6 K14       ; R6 := "DragImage"
125 [-]: MOVE      R7 R2        ; R7 := R2
126 [-]: NEWTABLE  R8 0 3       ; R8 := {}
127 [-]: SETTABLE  R8 K32 R1    ; R8["item"] := R1
128 [-]: GETUPVAL  R9 U2        ; R9 := U2
129 [-]: SETTABLE  R8 K33 R9    ; R8["grid"] := R9
130 [-]: SETTABLE  R8 K34 R0    ; R8["element"] := R0
131 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
132 [-]: GETGLOBAL R4 K35       ; R4 := _T
133 [-]: SETTABLE  R4 K36 K37   ; R4["gToolTip"] := nil
134 [-]: RETURN    R0 1         ; return 


; Function #49.4:
;
; Name:            
; Defined at line: 1852
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xB1627322"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: GETGLOBAL R1 K1        ; R1 := Engine
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x9490FE70"]
 12 [-]: CALL      R1 1 2       ; R1 := R1()
 13 [-]: TEST      R1 1         ; if R1 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: GETUPVAL  R1 U4        ; R1 := U4
 20 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 21 [-]: GETGLOBAL R2 K4        ; R2 := _G
 22 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_ItemTipSection"]
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: JMP       45           ; PC := 45
 25 [-]: GETUPVAL  R1 U5        ; R1 := U5
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xEC4D1B6F"]
 27 [-]: GETUPVAL  R2 U6        ; R2 := U6
 28 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["type"]
 29 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["Id"]
 30 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 31 [-]: TEST      R1 0         ; if not R1 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R1 R0 K9     ; R1 := R0["Locked"]
 34 [-]: TEST      R1 0         ; if not R1 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R1 K10       ; R1 := 0x400E7765
 37 [-]: GETUPVAL  R2 U7        ; R2 := U7
 38 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 39 [-]: TEST      R1 0         ; if not R1 then PC := 45
 40 [-]: JMP       45           ; PC := 45
 41 [-]: GETUPVAL  R1 U8        ; R1 := U8
 42 [-]: GETGLOBAL R2 K11       ; R2 := Lotus_Game
 43 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["WF_UTILITY_UNLOCKED"]
 44 [-]: CALL      R1 2 1       ; R1(R2)
 45 [-]: RETURN    R0 1         ; return 


; Function #49.5:
;
; Name:            
; Defined at line: 1868
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x3B1D5FB4"]
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Id"]
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCurrentElementIndex"]
  7 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCurrentElementIndex"]
 11 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 16 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x880196A7"]
 17 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 18 [-]: LOADK     R6 K7        ; R6 := "Btn"
 19 [-]: LOADK     R7 K8        ; R7 := "trackAsMenu"
 20 [-]: MOVE      R8 R1        ; R8 := R1
 21 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 22 [-]: GETUPVAL  R3 U1        ; R3 := U1
 23 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["0xA7A7B88"]
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R3 2 1       ; R3(R4)
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x697262FB"]
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 30 [-]: LOADK     R6 K11       ; R6 := ".Card"
 31 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 32 [-]: MOVE      R6 R2        ; R6 := R2
 33 [-]: LOADK     R7 K12       ; R7 := 0
 34 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 35 [-]: GETUPVAL  R3 U2        ; R3 := U2
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Id"]
 39 [-]: GETUPVAL  R4 U3        ; R4 := U3
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 41 [-]: JMP       71           ; PC := 71
 42 [-]: GETGLOBAL R3 K13       ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["upgradeItemCategory"]
 44 [-]: GETGLOBAL R4 K15       ; R4 := Engine
 45 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["Item_Suits"]
 46 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 47 [-]: JMP       71           ; PC := 71
 48 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 49 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x26581636"]
 50 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 51 [-]: LOADK     R6 K18       ; R6 := ".SocketType"
 52 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 53 [-]: GETGLOBAL R6 K19       ; R6 := _G
 54 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["UICategoryIcon_AuraOn"]
 55 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 56 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 57 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x880196A7"]
 58 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 59 [-]: LOADK     R6 K21       ; R6 := "SocketType"
 60 [-]: LOADK     R7 K22       ; R7 := "_visible"
 61 [-]: MOVE      R8 R1        ; R8 := R1
 62 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 63 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 64 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x880196A7"]
 65 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 66 [-]: LOADK     R6 K23       ; R6 := "SocketTypeBacker"
 67 [-]: LOADK     R7 K22       ; R7 := "_visible"
 68 [-]: MOVE      R8 R1        ; R8 := R1
 69 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 70 [-]: JMP       101          ; PC := 101
 71 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Id"]
 72 [-]: GETUPVAL  R4 U4        ; R4 := U4
 73 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 101
 74 [-]: JMP       101          ; PC := 101
 75 [-]: GETUPVAL  R3 U5        ; R3 := U5
 76 [-]: CALL      R3 1 2       ; R3 := R3()
 77 [-]: TEST      R3 0         ; if not R3 then PC := 101
 78 [-]: JMP       101          ; PC := 101
 79 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 80 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x26581636"]
 81 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 82 [-]: LOADK     R6 K18       ; R6 := ".SocketType"
 83 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 84 [-]: GETGLOBAL R6 K19       ; R6 := _G
 85 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["UICategoryIcon_StanceOn"]
 86 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 87 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 88 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x880196A7"]
 89 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 90 [-]: LOADK     R6 K21       ; R6 := "SocketType"
 91 [-]: LOADK     R7 K22       ; R7 := "_visible"
 92 [-]: MOVE      R8 R1        ; R8 := R1
 93 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 94 [-]: GETGLOBAL R3 K4        ; R3 := mMovie
 95 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x880196A7"]
 96 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mClipName"]
 97 [-]: LOADK     R6 K23       ; R6 := "SocketTypeBacker"
 98 [-]: LOADK     R7 K22       ; R7 := "_visible"
 99 [-]: MOVE      R8 R1        ; R8 := R1
100 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
101 [-]: LOADK     R3 K25       ; R3 := "Installed.Brackets"
102 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Id"]
103 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
104 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
105 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4["0x6B7B470B"]
106 [-]: MOVE      R6 R3        ; R6 := R3
107 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
108 [-]: GETGLOBAL R5 K27       ; R5 := 0x400E7765
109 [-]: MOVE      R6 R4        ; R6 := R4
110 [-]: CALL      R5 2 2       ; R5 := R5(R6)
111 [-]: TEST      R5 1         ; if R5 then PC := 118
112 [-]: JMP       118          ; PC := 118
113 [-]: GETGLOBAL R5 K28       ; R5 := 0x9FAED6BC
114 [-]: MOVE      R6 R4        ; R6 := R4
115 [-]: CALL      R5 2 2       ; R5 := R5(R6)
116 [-]: EQ        0 R5 K29     ; if R5 ~= "undefined" then PC := 131
117 [-]: JMP       131          ; PC := 131
118 [-]: GETGLOBAL R5 K30       ; R5 := 0xD1E7609B
119 [-]: LOADK     R6 K31       ; R6 := "."
120 [-]: MOVE      R7 R3        ; R7 := R3
121 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
122 [-]: GETGLOBAL R6 K32       ; R6 := 0x8C64AFA9
123 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
124 [-]: LOADK     R8 K33       ; R8 := "Installed.Brackets1.duplicateMovieClip"
125 [-]: LEN       R9 R5        ; R9 := # R5
126 [-]: GETTABLE  R9 R5 R9     ; R9 := R5[R9]
127 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["Id"]
128 [-]: ADD       R10 K34 R10  ; R10 := -1000 + R10
129 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
130 [-]: JMP       139          ; PC := 139
131 [-]: GETGLOBAL R6 K32       ; R6 := 0x8C64AFA9
132 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
133 [-]: MOVE      R8 R3        ; R8 := R3
134 [-]: LOADK     R9 K35       ; R9 := ".swapDepths"
135 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
136 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Id"]
137 [-]: ADD       R9 K34 R9    ; R9 := -1000 + R9
138 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
139 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
140 [-]: SELF      R6 R6 K36    ; R7 := R6; R6 := R6["0x1C19D966"]
141 [-]: MOVE      R8 R3        ; R8 := R3
142 [-]: LOADK     R9 K37       ; R9 := "_x"
143 [-]: GETUPVAL  R10 U0       ; R10 := U0
144 [-]: SELF      R10 R10 K38  ; R11 := R10; R10 := R10["0x1C692998"]
145 [-]: MOVE      R12 R0       ; R12 := R0
146 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
147 [-]: CALL      R6 0 1       ; R6(R7,...)
148 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
149 [-]: SELF      R6 R6 K36    ; R7 := R6; R6 := R6["0x1C19D966"]
150 [-]: MOVE      R8 R3        ; R8 := R3
151 [-]: LOADK     R9 K39       ; R9 := "_y"
152 [-]: GETUPVAL  R10 U0       ; R10 := U0
153 [-]: SELF      R10 R10 K40  ; R11 := R10; R10 := R10["0xF68300E4"]
154 [-]: MOVE      R12 R0       ; R12 := R0
155 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
156 [-]: CALL      R6 0 1       ; R6(R7,...)
157 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
158 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x880196A7"]
159 [-]: MOVE      R8 R3        ; R8 := R3
160 [-]: LOADK     R9 K41       ; R9 := "Border"
161 [-]: LOADK     R10 K22      ; R10 := "_visible"
162 [-]: GETTABLE  R11 R0 K42   ; R11 := R0["Locked"]
163 [-]: MOVE      R11 R11      ; R11 := R11
164 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
165 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
166 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x880196A7"]
167 [-]: MOVE      R8 R3        ; R8 := R3
168 [-]: LOADK     R9 K42       ; R9 := "Locked"
169 [-]: LOADK     R10 K22      ; R10 := "_visible"
170 [-]: GETTABLE  R11 R0 K42   ; R11 := R0["Locked"]
171 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
172 [-]: LOADK     R6 K43       ; R6 := 8
173 [-]: GETGLOBAL R7 K13       ; R7 := _T
174 [-]: GETTABLE  R7 R7 K44    ; R7 := R7["upgradeItemLot"]
175 [-]: GETGLOBAL R8 K45       ; R8 := Lotus_Game
176 [-]: GETTABLE  R8 R8 K46    ; R8 := R8["LOT_DATAKNIFE"]
177 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 207
178 [-]: JMP       207          ; PC := 207
179 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["Id"]
180 [-]: GETUPVAL  R8 U6        ; R8 := U6
181 [-]: LE        0 R8 R7      ; if R8 > R7 then PC := 207
182 [-]: JMP       207          ; PC := 207
183 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
184 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7["0x26581636"]
185 [-]: MOVE      R9 R3        ; R9 := R3
186 [-]: LOADK     R10 K47      ; R10 := ".Icon"
187 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
188 [-]: GETGLOBAL R10 K19      ; R10 := _G
189 [-]: GETTABLE  R10 R10 K48  ; R10 := R10["UICategoryIcon_ImmortalOn"]
190 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
191 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
192 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x880196A7"]
193 [-]: MOVE      R9 R3        ; R9 := R3
194 [-]: LOADK     R10 K49      ; R10 := "Icon"
195 [-]: LOADK     R11 K50      ; R11 := "_alpha"
196 [-]: LOADK     R12 K51      ; R12 := 20
197 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
198 [-]: GETGLOBAL R7 K32       ; R7 := 0x8C64AFA9
199 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
200 [-]: MOVE      R9 R3        ; R9 := R3
201 [-]: LOADK     R10 K52      ; R10 := ".Border.gotoAndStop"
202 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
203 [-]: LOADK     R10 K53      ; R10 := "Immortal"
204 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
205 [-]: LOADK     R6 K12       ; R6 := 0
206 [-]: JMP       252          ; PC := 252
207 [-]: GETUPVAL  R7 U7        ; R7 := U7
208 [-]: GETTABLE  R7 R7 K54    ; R7 := R7["0xEC4D1B6F"]
209 [-]: GETUPVAL  R8 U8        ; R8 := U8
210 [-]: GETTABLE  R8 R8 K55    ; R8 := R8["type"]
211 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Id"]
212 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
213 [-]: TEST      R7 0         ; if not R7 then PC := 238
214 [-]: JMP       238          ; PC := 238
215 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
216 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7["0x26581636"]
217 [-]: MOVE      R9 R3        ; R9 := R3
218 [-]: LOADK     R10 K47      ; R10 := ".Icon"
219 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
220 [-]: GETGLOBAL R10 K19      ; R10 := _G
221 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["UICategoryIcon_UtilityOn"]
222 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
223 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
224 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x880196A7"]
225 [-]: MOVE      R9 R3        ; R9 := R3
226 [-]: LOADK     R10 K49      ; R10 := "Icon"
227 [-]: LOADK     R11 K50      ; R11 := "_alpha"
228 [-]: LOADK     R12 K51      ; R12 := 20
229 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
230 [-]: GETGLOBAL R7 K32       ; R7 := 0x8C64AFA9
231 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
232 [-]: MOVE      R9 R3        ; R9 := R3
233 [-]: LOADK     R10 K52      ; R10 := ".Border.gotoAndStop"
234 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
235 [-]: LOADK     R10 K57      ; R10 := "Normal"
236 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
237 [-]: JMP       252          ; PC := 252
238 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
239 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x880196A7"]
240 [-]: MOVE      R9 R3        ; R9 := R3
241 [-]: LOADK     R10 K49      ; R10 := "Icon"
242 [-]: LOADK     R11 K50      ; R11 := "_alpha"
243 [-]: LOADK     R12 K12      ; R12 := 0
244 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
245 [-]: GETGLOBAL R7 K32       ; R7 := 0x8C64AFA9
246 [-]: GETGLOBAL R8 K4        ; R8 := mMovie
247 [-]: MOVE      R9 R3        ; R9 := R3
248 [-]: LOADK     R10 K52      ; R10 := ".Border.gotoAndStop"
249 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
250 [-]: LOADK     R10 K57      ; R10 := "Normal"
251 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
252 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
253 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0x880196A7"]
254 [-]: MOVE      R9 R3        ; R9 := R3
255 [-]: LOADK     R10 K49      ; R10 := "Icon"
256 [-]: LOADK     R11 K39      ; R11 := "_y"
257 [-]: MOVE      R12 R6       ; R12 := R6
258 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
259 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1918
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7CF71D03"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: GETUPVAL  R0 U2        ; R0 := U2
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["info"]
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mItemId"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mId"]
 10 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 12 [-]: LOADK     R3 K6        ; R3 := "<MOD_SELECTOR>"
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 15 [-]: LOADK     R2 K7        ; R2 := 1
 16 [-]: GETUPVAL  R3 U3        ; R3 := U3
 17 [-]: LOADK     R4 K7        ; R4 := 1
 18 [-]: FORPREP   R2 58        ; R2 -= R4; PC := 58
 19 [-]: MOVE      R6 R0        ; R6 := R0
 20 [-]: GETUPVAL  R7 U4        ; R7 := U4
 21 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0xEC4D1B6F"]
 22 [-]: GETUPVAL  R8 U2        ; R8 := U2
 23 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["type"]
 24 [-]: MOVE      R9 R5        ; R9 := R5
 25 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 26 [-]: TEST      R7 0         ; if not R7 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: GETUPVAL  R7 U2        ; R7 := U2
 29 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["info"]
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x17D2B78C"]
 31 [-]: GETGLOBAL R9 K11       ; R9 := Lotus_Game
 32 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["WF_UTILITY_UNLOCKED"]
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: MOVE      R6 R7        ; R6 := R7
 35 [-]: NEWTABLE  R7 0 5       ; R7 := {}
 36 [-]: SETTABLE  R7 K13 K14   ; R7["mCardIndex"] := -1
 37 [-]: GETUPVAL  R8 U5        ; R8 := U5
 38 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 39 [-]: SETTABLE  R7 K15 R8    ; R7["mPolarity"] := R8
 40 [-]: SETTABLE  R7 K16 K17   ; R7["mHasSlot"] := "0x1"
 41 [-]: SETTABLE  R7 K18 R1    ; R7["mSelectionText"] := R1
 42 [-]: SETTABLE  R7 K19 R6    ; R7["Locked"] := R6
 43 [-]: GETGLOBAL R8 K20       ; R8 := _T
 44 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["upgradeItemLot"]
 45 [-]: GETGLOBAL R9 K11       ; R9 := Lotus_Game
 46 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["LOT_DATAKNIFE"]
 47 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: GETUPVAL  R8 U6        ; R8 := U6
 50 [-]: LE        0 R8 R5      ; if R8 > R5 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: SETTABLE  R7 K23 K24   ; R7["mSlotType"] := "Immortal"
 53 [-]: GETUPVAL  R8 U1        ; R8 := U1
 54 [-]: SELF      R8 R8 K25    ; R9 := R8; R8 := R8["0xA77DA8EE"]
 55 [-]: MOVE      R10 R7       ; R10 := R7
 56 [-]: MOVE      R11 R1       ; R11 := R1
 57 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 58 [-]: FORLOOP   R2 19        ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
 59 [-]: GETUPVAL  R8 U7        ; R8 := U7
 60 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8["0x6F2E05FD"]
 61 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 62 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 63 [-]: LOADK     R10 K27      ; R10 := 0
 64 [-]: GETGLOBAL R11 K11      ; R11 := Lotus_Game
 65 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["MAX_LoadOutType"]
 66 [-]: SUB       R11 R11 K7   ; R11 := R11 - 1
 67 [-]: LOADK     R12 K7       ; R12 := 1
 68 [-]: FORPREP   R10 76       ; R10 -= R12; PC := 76
 69 [-]: SELF      R14 R8 K29   ; R15 := R8; R14 := R8["0x5A67CD40"]
 70 [-]: MOVE      R16 R13      ; R16 := R13
 71 [-]: SELF      R17 R8 K30   ; R18 := R8; R17 := R8["0x413E14F1"]
 72 [-]: MOVE      R19 R13      ; R19 := R13
 73 [-]: CALL      R17 3 0      ; R17,... := R17(R18,R19)
 74 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 75 [-]: SETTABLE  R9 R13 R14   ; R9[R13] := R14
 76 [-]: FORLOOP   R10 69       ; R10 += R12; if R10 <= R11 then begin PC := 69; R13 := R10 end
 77 [-]: LOADK     R14 K7       ; R14 := 1
 78 [-]: GETUPVAL  R15 U8       ; R15 := U8
 79 [-]: LEN       R15 R15      ; R15 := # R15
 80 [-]: LOADK     R16 K7       ; R16 := 1
 81 [-]: FORPREP   R14 126      ; R14 -= R16; PC := 126
 82 [-]: GETUPVAL  R18 U8       ; R18 := U8
 83 [-]: GETTABLE  R18 R18 R17  ; R18 := R18[R17]
 84 [-]: GETTABLE  R19 R18 K31  ; R19 := R18["mInstalled"]
 85 [-]: GETTABLE  R19 R19 R0   ; R19 := R19[R0]
 86 [-]: EQ        1 R19 K32    ; if R19 == nil then PC := 126
 87 [-]: JMP       126          ; PC := 126
 88 [-]: GETUPVAL  R19 U1       ; R19 := U1
 89 [-]: SELF      R19 R19 K33  ; R20 := R19; R19 := R19["0xF61F409A"]
 90 [-]: GETTABLE  R21 R18 K31  ; R21 := R18["mInstalled"]
 91 [-]: GETTABLE  R21 R21 R0   ; R21 := R21[R0]
 92 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 93 [-]: GETGLOBAL R20 K34      ; R20 := 0x400E7765
 94 [-]: MOVE      R21 R19      ; R21 := R19
 95 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 96 [-]: TEST      R20 1        ; if R20 then PC := 124
 97 [-]: JMP       124          ; PC := 124
 98 [-]: SETTABLE  R18 K35 R19  ; R18["mElement"] := R19
 99 [-]: SETTABLE  R19 K13 R17  ; R19["mCardIndex"] := R17
100 [-]: GETUPVAL  R20 U9       ; R20 := U9
101 [-]: MOVE      R21 R18      ; R21 := R18
102 [-]: MOVE      R22 R9       ; R22 := R9
103 [-]: CALL      R20 3 5      ; R20,R21,R22,R23 := R20(R21,R22)
104 [-]: GETTABLE  R24 R18 K36  ; R24 := R18["mName"]
105 [-]: SETTABLE  R19 K36 R24  ; R19["mName"] := R24
106 [-]: SETTABLE  R19 K31 R20  ; R19["mInstalled"] := R20
107 [-]: SETTABLE  R19 K37 R21  ; R19["mInstalledLoadOutType"] := R21
108 [-]: SETTABLE  R19 K38 R22  ; R19["mInstalledType"] := R22
109 [-]: SETTABLE  R19 K39 R23  ; R19["mInstalledName"] := R23
110 [-]: GETTABLE  R24 R18 K40  ; R24 := R18["mModSet"]
111 [-]: SETTABLE  R19 K40 R24  ; R19["mModSet"] := R24
112 [-]: GETUPVAL  R24 U10      ; R24 := U10
113 [-]: GETTABLE  R24 R24 K41  ; R24 := R24["0x8616778F"]
114 [-]: MOVE      R25 R18      ; R25 := R18
115 [-]: CALL      R24 2 2      ; R24 := R24(R25)
116 [-]: TEST      R24 0        ; if not R24 then PC := 126
117 [-]: JMP       126          ; PC := 126
118 [-]: GETUPVAL  R24 U11      ; R24 := U11
119 [-]: GETTABLE  R25 R18 K42  ; R25 := R18["mUpgrade"]
120 [-]: GETTABLE  R25 R25 K43  ; R25 := R25["mItemCount"]
121 [-]: ADD       R24 R24 R25  ; R24 := R24 + R25
122 [-]: MOVE      R24 R11      ; R24 := R11
123 [-]: JMP       126          ; PC := 126
124 [-]: GETTABLE  R24 R18 K31  ; R24 := R18["mInstalled"]
125 [-]: SETTABLE  R24 R0 K32   ; R24[R0] := nil
126 [-]: FORLOOP   R14 82       ; R14 += R16; if R14 <= R15 then begin PC := 82; R17 := R14 end
127 [-]: GETUPVAL  R24 U4       ; R24 := U4
128 [-]: GETTABLE  R24 R24 K44  ; R24 := R24["0x14F2E21D"]
129 [-]: GETUPVAL  R25 U1       ; R25 := U1
130 [-]: GETGLOBAL R26 K20      ; R26 := _T
131 [-]: GETTABLE  R26 R26 K45  ; R26 := R26["upgradeItemCategory"]
132 [-]: GETGLOBAL R27 K20      ; R27 := _T
133 [-]: GETTABLE  R27 R27 K46  ; R27 := R27["upgradeItemSlot"]
134 [-]: GETUPVAL  R28 U2       ; R28 := U2
135 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
136 [-]: GETUPVAL  R24 U4       ; R24 := U4
137 [-]: GETTABLE  R24 R24 K47  ; R24 := R24["0xBE2B3302"]
138 [-]: GETUPVAL  R25 U1       ; R25 := U1
139 [-]: GETGLOBAL R26 K20      ; R26 := _T
140 [-]: GETTABLE  R26 R26 K45  ; R26 := R26["upgradeItemCategory"]
141 [-]: GETGLOBAL R27 K20      ; R27 := _T
142 [-]: GETTABLE  R27 R27 K46  ; R27 := R27["upgradeItemSlot"]
143 [-]: GETUPVAL  R28 U2       ; R28 := U2
144 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
145 [-]: GETUPVAL  R24 U12      ; R24 := U12
146 [-]: CALL      R24 1 2      ; R24 := R24()
147 [-]: TEST      R24 0        ; if not R24 then PC := 178
148 [-]: JMP       178          ; PC := 178
149 [-]: GETUPVAL  R24 U1       ; R24 := U1
150 [-]: SELF      R24 R24 K48  ; R25 := R24; R24 := R24["0xD75E681A"]
151 [-]: GETUPVAL  R26 U13      ; R26 := U13
152 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
153 [-]: GETGLOBAL R25 K34      ; R25 := 0x400E7765
154 [-]: MOVE      R26 R24      ; R26 := R24
155 [-]: CALL      R25 2 2      ; R25 := R25(R26)
156 [-]: TEST      R25 1        ; if R25 then PC := 178
157 [-]: JMP       178          ; PC := 178
158 [-]: GETGLOBAL R25 K4       ; R25 := mMovie
159 [-]: SELF      R25 R25 K49  ; R26 := R25; R25 := R25["0x1C19D966"]
160 [-]: LOADK     R27 K50      ; R27 := "Installed.ComboBtn"
161 [-]: LOADK     R28 K51      ; R28 := "_x"
162 [-]: GETUPVAL  R29 U1       ; R29 := U1
163 [-]: SELF      R29 R29 K52  ; R30 := R29; R29 := R29["0x1C692998"]
164 [-]: MOVE      R31 R24      ; R31 := R24
165 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
166 [-]: SUB       R29 R29 K53  ; R29 := R29 - -150
167 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
168 [-]: GETGLOBAL R25 K4       ; R25 := mMovie
169 [-]: SELF      R25 R25 K49  ; R26 := R25; R25 := R25["0x1C19D966"]
170 [-]: LOADK     R27 K50      ; R27 := "Installed.ComboBtn"
171 [-]: LOADK     R28 K54      ; R28 := "_y"
172 [-]: GETUPVAL  R29 U1       ; R29 := U1
173 [-]: SELF      R29 R29 K55  ; R30 := R29; R29 := R29["0xF68300E4"]
174 [-]: MOVE      R31 R24      ; R31 := R24
175 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
176 [-]: SUB       R29 R29 K56  ; R29 := R29 - -5
177 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
178 [-]: GETUPVAL  R25 U1       ; R25 := U1
179 [-]: SELF      R25 R25 K57  ; R26 := R25; R25 := R25["0x6470BAF4"]
180 [-]: CALL      R25 2 1      ; R25(R26)
181 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1983
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1989
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1995
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 17 [-]: GETGLOBAL R2 K4        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_ItemTipSection"]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2002
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: TEST      R1 1         ; if R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8BA455B"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 17 [-]: GETGLOBAL R2 K4        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_ButtonSelect"]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2009
; #Upvalues:       7
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x9D2060CB"]
  3 [-]: CLOSURE   R4 0         ; R4 := closure(Function #55.1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: GETUPVAL  R0 U4        ; R0 := U4
 10 [-]: GETUPVAL  R0 U5        ; R0 := U5
 11 [-]: GETUPVAL  R0 U6        ; R0 := U6
 12 [-]: CALL      R2 3 1       ; R2(R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #55.1:
;
; Name:            
; Defined at line: 2011
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mPolarity"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mPolarity"]
  5 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R1 R0        ; R1 := R0
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: GETGLOBAL R2 K3        ; R2 := _G
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIColor_White"]
 11 [-]: LOADK     R3 K5        ; R3 := 45
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: TEST      R4 0         ; if not R4 then PC := 102
 14 [-]: JMP       102          ; PC := 102
 15 [-]: GETUPVAL  R4 U1        ; R4 := U1
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF81722A2"]
 17 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mPolarity"]
 18 [-]: GETUPVAL  R6 U2        ; R6 := U2
 19 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["mPolarity"]
 20 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mPolarity"]
 23 [-]: GETGLOBAL R6 K7        ; R6 := Lotus_Game
 24 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["AP_ANY"]
 25 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: GETGLOBAL R6 K3        ; R6 := _G
 30 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["UIColor_Green"]
 31 [-]: GETGLOBAL R7 K3        ; R7 := _G
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["UIColor_Red"]
 33 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 34 [-]: MOVE      R2 R4        ; R2 := R4
 35 [-]: LOADK     R3 K11       ; R3 := 100
 36 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["Id"]
 37 [-]: GETUPVAL  R5 U3        ; R5 := U3
 38 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETUPVAL  R4 U4        ; R4 := U4
 41 [-]: CALL      R4 1 2       ; R4 := R4()
 42 [-]: JMP       45           ; PC := 45
 43 [-]: MOVE      R4 R0        ; R4 := R0
 44 [-]: MOVE      R4 R1        ; R4 := R1
 45 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["Id"]
 46 [-]: GETUPVAL  R6 U5        ; R6 := U5
 47 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R5 K13       ; R5 := _T
 50 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["upgradeItemCategory"]
 51 [-]: GETGLOBAL R6 K15       ; R6 := Engine
 52 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["Item_Suits"]
 53 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: MOVE      R5 R0        ; R5 := R0
 56 [-]: MOVE      R5 R1        ; R5 := R1
 57 [-]: GETUPVAL  R6 U6        ; R6 := U6
 58 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["0xEC4D1B6F"]
 59 [-]: GETUPVAL  R7 U7        ; R7 := U7
 60 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["type"]
 61 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["Id"]
 62 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 63 [-]: GETUPVAL  R7 U2        ; R7 := U2
 64 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mIsStance"]
 65 [-]: TEST      R7 0         ; if not R7 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: TEST      R1 0         ; if not R1 then PC := 70
 68 [-]: JMP       70           ; PC := 70
 69 [-]: MOVE      R1 R4        ; R1 := R4
 70 [-]: JMP       102          ; PC := 102
 71 [-]: GETUPVAL  R7 U2        ; R7 := U2
 72 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["mType"]
 73 [-]: EQ        0 R7 K21     ; if R7 ~= "AURA" then PC := 79
 74 [-]: JMP       79           ; PC := 79
 75 [-]: TEST      R1 0         ; if not R1 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R1 R5        ; R1 := R5
 78 [-]: JMP       102          ; PC := 102
 79 [-]: GETUPVAL  R7 U2        ; R7 := U2
 80 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["mIsUtility"]
 81 [-]: TEST      R7 0         ; if not R7 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: TEST      R1 0         ; if not R1 then PC := 91
 84 [-]: JMP       91           ; PC := 91
 85 [-]: TEST      R5 1         ; if R5 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: MOVE      R1 R4        ; R1 := R4
 88 [-]: JMP       102          ; PC := 102
 89 [-]: MOVE      R1 R0        ; R1 := R0
 90 [-]: MOVE      R1 R1        ; R1 := R1
 91 [-]: JMP       102          ; PC := 102
 92 [-]: TEST      R1 0         ; if not R1 then PC := 102
 93 [-]: JMP       102          ; PC := 102
 94 [-]: TEST      R5 1         ; if R5 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: TEST      R4 1         ; if R4 then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: MOVE      R1 R6        ; R1 := R6
 99 [-]: JMP       102          ; PC := 102
100 [-]: MOVE      R1 R0        ; R1 := R0
101 [-]: MOVE      R1 R1        ; R1 := R1
102 [-]: TEST      R1 0         ; if not R1 then PC := 132
103 [-]: JMP       132          ; PC := 132
104 [-]: GETGLOBAL R7 K23       ; R7 := mMovie
105 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x880196A7"]
106 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mClipName"]
107 [-]: LOADK     R10 K26      ; R10 := "SocketPolarity"
108 [-]: LOADK     R11 K27      ; R11 := "textColor"
109 [-]: MOVE      R12 R2       ; R12 := R2
110 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
111 [-]: GETGLOBAL R7 K23       ; R7 := mMovie
112 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x880196A7"]
113 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mClipName"]
114 [-]: LOADK     R10 K28      ; R10 := "SocketPolarityBacker"
115 [-]: LOADK     R11 K29      ; R11 := "_color"
116 [-]: MOVE      R12 R2       ; R12 := R2
117 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
118 [-]: GETGLOBAL R7 K23       ; R7 := mMovie
119 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x880196A7"]
120 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mClipName"]
121 [-]: LOADK     R10 K26      ; R10 := "SocketPolarity"
122 [-]: LOADK     R11 K30      ; R11 := "_alpha"
123 [-]: MOVE      R12 R3       ; R12 := R3
124 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
125 [-]: GETGLOBAL R7 K23       ; R7 := mMovie
126 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7["0x880196A7"]
127 [-]: GETTABLE  R9 R0 K25    ; R9 := R0["mClipName"]
128 [-]: LOADK     R10 K28      ; R10 := "SocketPolarityBacker"
129 [-]: LOADK     R11 K30      ; R11 := "_alpha"
130 [-]: MOVE      R12 R3       ; R12 := R3
131 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
132 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2043
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "DragImage"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: NEWTABLE  R0 0 11      ; R0 := {}
  8 [-]: SETTABLE  R0 K4 K5     ; R0["mClipName"] := ""
  9 [-]: SETTABLE  R0 K6 K7     ; R0["mX"] := 0
 10 [-]: SETTABLE  R0 K8 K7     ; R0["mY"] := 0
 11 [-]: SETTABLE  R0 K9 K10    ; R0["mIcon"] := nil
 12 [-]: SETTABLE  R0 K11 K12   ; R0["mIsEnabled"] := "0x0"
 13 [-]: SETTABLE  R0 K13 K10   ; R0["mUserData"] := nil
 14 [-]: CLOSURE   R1 0         ; R1 := closure(Function #56.1)
 15 [-]: SETTABLE  R0 K14 R1    ; R0["IsEnabled"] := R1
 16 [-]: CLOSURE   R1 1         ; R1 := closure(Function #56.2)
 17 [-]: SETTABLE  R0 K15 R1    ; R0["GetUserData"] := R1
 18 [-]: CLOSURE   R1 2         ; R1 := closure(Function #56.3)
 19 [-]: SETTABLE  R0 K16 R1    ; R0["Update"] := R1
 20 [-]: CLOSURE   R1 3         ; R1 := closure(Function #56.4)
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: SETTABLE  R0 K17 R1    ; R0["Enable"] := R1
 23 [-]: CLOSURE   R1 4         ; R1 := closure(Function #56.5)
 24 [-]: GETUPVAL  R0 U0        ; R0 := U0
 25 [-]: SETTABLE  R0 K18 R1    ; R0["Disable"] := R1
 26 [-]: RETURN    R0 2         ; return R0
 27 [-]: RETURN    R0 1         ; return 


; Function #56.1:
;
; Name:            
; Defined at line: 2054
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsEnabled"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #56.2:
;
; Name:            
; Defined at line: 2058
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mUserData"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #56.3:
;
; Name:            
; Defined at line: 2062
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsEnabled"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
  7 [-]: LOADK     R3 K4        ; R3 := "_root"
  8 [-]: LOADK     R4 K5        ; R4 := "_xmouse"
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: SETTABLE  R0 K1 R1     ; R0["mX"] := R1
 11 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
 13 [-]: LOADK     R3 K4        ; R3 := "_root"
 14 [-]: LOADK     R4 K7        ; R4 := "_ymouse"
 15 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 16 [-]: SETTABLE  R0 K6 R1     ; R0["mY"] := R1
 17 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x1C19D966"]
 19 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K10       ; R4 := "_x"
 21 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mX"]
 22 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 23 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x1C19D966"]
 25 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 26 [-]: LOADK     R4 K11       ; R4 := "_y"
 27 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mY"]
 28 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 29 [-]: GETGLOBAL R1 K12       ; R1 := 0x8C64AFA9
 30 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 31 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mClipName"]
 32 [-]: LOADK     R4 K13       ; R4 := ".swapDepths"
 33 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 34 [-]: LOADK     R4 K14       ; R4 := 1500
 35 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 36 [-]: RETURN    R0 1         ; return 


; Function #56.4:
;
; Name:            
; Defined at line: 2074
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: GETTABLE  R6 R3 K1     ; R6 := R3["item"]
 10 [-]: CALL      R4 3 1       ; R4(R5,R6)
 11 [-]: SETTABLE  R0 K2 K3     ; R0["mIsEnabled"] := "0x1"
 12 [-]: SETTABLE  R0 K4 R1     ; R0["mClipName"] := R1
 13 [-]: SETTABLE  R0 K5 R2     ; R0["mIcon"] := R2
 14 [-]: SETTABLE  R0 K6 R3     ; R0["mUserData"] := R3
 15 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x1C19D966"]
 17 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mClipName"]
 18 [-]: LOADK     R7 K9        ; R7 := "_visible"
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 21 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 22 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x26581636"]
 23 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mClipName"]
 24 [-]: MOVE      R7 R2        ; R7 := R2
 25 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 26 [-]: SELF      R4 R0 K11    ; R5 := R0; R4 := R0["0x8C7099E9"]
 27 [-]: CALL      R4 2 1       ; R4(R5)
 28 [-]: RETURN    R0 1         ; return 


; Function #56.5:
;
; Name:            
; Defined at line: 2088
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsEnabled"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: SETTABLE  R0 K0 K1     ; R0["mIsEnabled"] := "0x0"
  9 [-]: SETTABLE  R0 K2 K3     ; R0["mUserData"] := nil
 10 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x1C19D966"]
 12 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mClipName"]
 13 [-]: LOADK     R4 K7        ; R4 := "_visible"
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2102
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  26

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 574
  3 [-]: JMP       574          ; PC := 574
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x329BDC44
  5 [-]: LOADK     R1 K2        ; R1 := "Lotus.Interface.Components.CategorizedGrid"
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["0xA5504EDF"]
  8 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
  9 [-]: LOADK     R3 K5        ; R3 := "Available.Card1"
 10 [-]: LOADK     R4 K6        ; R4 := 2
 11 [-]: LOADK     R5 K7        ; R5 := 7
 12 [-]: LOADK     R6 K8        ; R6 := "MiddleMenu.Category"
 13 [-]: LOADK     R7 K9        ; R7 := "Available.SortMenu"
 14 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 15 [-]: MOVE      R10 R1       ; R10 := R1
 16 [-]: CALL      R1 10 2      ; R1 := R1(R2,R3,R4,R5,R6,R7,R8,R9,R10)
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xE13A565"]
 20 [-]: LOADK     R3 K11       ; R3 := "ModItemSelected"
 21 [-]: LOADK     R4 K12       ; R4 := "ModItemFocused"
 22 [-]: LOADK     R5 K13       ; R5 := "ModItemUnfocused"
 23 [-]: LOADK     R6 K14       ; R6 := "ModItemPressed"
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SETTABLE  R1 K15 K16   ; R1["mInitialDepth"] := 2000
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: SETTABLE  R1 K17 K18   ; R1["mAddFillerElements"] := "0x0"
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: SETTABLE  R1 K19 K20   ; R1["mColumnSeparation"] := 139
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: SETTABLE  R1 K21 K22   ; R1["mRowSeparation"] := 272
 33 [-]: GETUPVAL  R1 U0        ; R1 := U0
 34 [-]: CLOSURE   R2 0         ; R2 := closure(Function #57.1)
 35 [-]: SETTABLE  R1 K23 R2    ; R1["CalculateScrollBarHeight"] := R2
 36 [-]: GETUPVAL  R1 U0        ; R1 := U0
 37 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1["0x3DB61F37"]
 38 [-]: LOADK     R3 K25       ; R3 := "Available.ScrollBar"
 39 [-]: LOADK     R4 K26       ; R4 := -45
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETUPVAL  R1 U0        ; R1 := U0
 42 [-]: SETTABLE  R1 K27 K28   ; R1["mSelectedScale"] := 100
 43 [-]: GETUPVAL  R1 U0        ; R1 := U0
 44 [-]: SETTABLE  R1 K29 K18   ; R1["mSelectElementsOnFocus"] := "0x0"
 45 [-]: GETUPVAL  R1 U0        ; R1 := U0
 46 [-]: SETTABLE  R1 K30 K0    ; R1["mSortMenuHorizontalOffset"] := nil
 47 [-]: GETUPVAL  R1 U0        ; R1 := U0
 48 [-]: SETTABLE  R1 K31 K0    ; R1["mSortMenuVerticalOffset"] := nil
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: SETTABLE  R1 K32 K0    ; R1["mScrollBarHorizontalOffset"] := nil
 51 [-]: GETUPVAL  R1 U0        ; R1 := U0
 52 [-]: SETTABLE  R1 K33 K34   ; R1["mElementDelayTime"] := 0.0099999997764826
 53 [-]: GETUPVAL  R1 U0        ; R1 := U0
 54 [-]: SETTABLE  R1 K35 K36   ; R1["mSmoothScrollExtraSpace"] := 0
 55 [-]: GETUPVAL  R1 U0        ; R1 := U0
 56 [-]: SETTABLE  R1 K37 K38   ; R1["mSkipRefocusOnScrollRedraw"] := "0x1"
 57 [-]: GETUPVAL  R1 U0        ; R1 := U0
 58 [-]: SELF      R1 R1 K39    ; R2 := R1; R1 := R1["0xF9C18536"]
 59 [-]: CALL      R1 2 1       ; R1(R2)
 60 [-]: GETUPVAL  R1 U0        ; R1 := U0
 61 [-]: SETTABLE  R1 K40 K38   ; R1["mMuteGridOpenSound"] := "0x1"
 62 [-]: GETUPVAL  R1 U0        ; R1 := U0
 63 [-]: SETTABLE  R1 K41 K6    ; R1["mLowerBoundBuffer"] := 2
 64 [-]: GETUPVAL  R1 U0        ; R1 := U0
 65 [-]: SETTABLE  R1 K42 K43   ; R1["mExtraRowScroll"] := 1
 66 [-]: GETUPVAL  R1 U0        ; R1 := U0
 67 [-]: GETTABLE  R1 R1 K44    ; R1 := R1["mCategoryMenu"]
 68 [-]: SETTABLE  R1 K45 K38   ; R1["mHideEmptyCategories"] := "0x1"
 69 [-]: GETUPVAL  R1 U0        ; R1 := U0
 70 [-]: CLOSURE   R2 1         ; R2 := closure(Function #57.2)
 71 [-]: SETTABLE  R1 K46 R2    ; R1["RepositionButton"] := R2
 72 [-]: GETUPVAL  R1 U0        ; R1 := U0
 73 [-]: CLOSURE   R2 2         ; R2 := closure(Function #57.3)
 74 [-]: SETTABLE  R1 K47 R2    ; R1["SetupPreInterpolationValues"] := R2
 75 [-]: GETUPVAL  R1 U0        ; R1 := U0
 76 [-]: CLOSURE   R2 3         ; R2 := closure(Function #57.4)
 77 [-]: SETTABLE  R1 K48 R2    ; R1["GetInterpolationProperties"] := R2
 78 [-]: GETUPVAL  R1 U0        ; R1 := U0
 79 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1["0xAEA6E3C3"]
 80 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 81 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 82 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 83 [-]: LOADK     R6 K52       ; R6 := "/Lotus/Language/Menu/SortName"
 84 [-]: MOVE      R7 R0        ; R7 := R0
 85 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 86 [-]: SETTABLE  R3 K50 R4    ; R3["Name"] := R4
 87 [-]: SETTABLE  R3 K53 K54   ; R3["SortId"] := "NAME"
 88 [-]: CLOSURE   R4 4         ; R4 := closure(Function #57.5)
 89 [-]: GETUPVAL  R0 U1        ; R0 := U1
 90 [-]: GETUPVAL  R0 U0        ; R0 := U0
 91 [-]: SETTABLE  R3 K55 R4    ; R3["Attribute"] := R4
 92 [-]: CALL      R1 3 1       ; R1(R2,R3)
 93 [-]: GETUPVAL  R1 U0        ; R1 := U0
 94 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1["0xAEA6E3C3"]
 95 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 96 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 97 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 98 [-]: LOADK     R6 K56       ; R6 := "/Lotus/Language/Menu/Arsenal_Rank"
 99 [-]: MOVE      R7 R0        ; R7 := R0
100 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
101 [-]: SETTABLE  R3 K50 R4    ; R3["Name"] := R4
102 [-]: SETTABLE  R3 K53 K57   ; R3["SortId"] := "LEVEL"
103 [-]: CLOSURE   R4 5         ; R4 := closure(Function #57.6)
104 [-]: GETUPVAL  R0 U1        ; R0 := U1
105 [-]: GETUPVAL  R0 U0        ; R0 := U0
106 [-]: SETTABLE  R3 K55 R4    ; R3["Attribute"] := R4
107 [-]: CALL      R1 3 1       ; R1(R2,R3)
108 [-]: GETUPVAL  R1 U0        ; R1 := U0
109 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1["0xAEA6E3C3"]
110 [-]: NEWTABLE  R3 0 3       ; R3 := {}
111 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
112 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4["0x5DB0BD4"]
113 [-]: LOADK     R6 K58       ; R6 := "/Lotus/Language/Menu/SortBy_CapacityRequirement"
114 [-]: MOVE      R7 R0        ; R7 := R0
115 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
116 [-]: SETTABLE  R3 K50 R4    ; R3["Name"] := R4
117 [-]: SETTABLE  R3 K53 K59   ; R3["SortId"] := "CAPACITY"
118 [-]: CLOSURE   R4 6         ; R4 := closure(Function #57.7)
119 [-]: GETUPVAL  R0 U1        ; R0 := U1
120 [-]: GETUPVAL  R0 U0        ; R0 := U0
121 [-]: SETTABLE  R3 K55 R4    ; R3["Attribute"] := R4
122 [-]: CALL      R1 3 1       ; R1(R2,R3)
123 [-]: GETUPVAL  R1 U0        ; R1 := U0
124 [-]: SELF      R1 R1 K49    ; R2 := R1; R1 := R1["0xAEA6E3C3"]
125 [-]: NEWTABLE  R3 0 3       ; R3 := {}
126 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
127 [-]: SELF      R4 R4 K51    ; R5 := R4; R4 := R4["0x5DB0BD4"]
128 [-]: LOADK     R6 K60       ; R6 := "/Lotus/Language/Menu/SortBy_Polarity"
129 [-]: MOVE      R7 R0        ; R7 := R0
130 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
131 [-]: SETTABLE  R3 K50 R4    ; R3["Name"] := R4
132 [-]: SETTABLE  R3 K53 K61   ; R3["SortId"] := "POLARITY"
133 [-]: CLOSURE   R4 7         ; R4 := closure(Function #57.8)
134 [-]: GETUPVAL  R0 U1        ; R0 := U1
135 [-]: GETUPVAL  R0 U0        ; R0 := U0
136 [-]: SETTABLE  R3 K55 R4    ; R3["Attribute"] := R4
137 [-]: CALL      R1 3 1       ; R1(R2,R3)
138 [-]: GETUPVAL  R1 U0        ; R1 := U0
139 [-]: CLOSURE   R2 8         ; R2 := closure(Function #57.9)
140 [-]: GETUPVAL  R0 U0        ; R0 := U0
141 [-]: GETUPVAL  R0 U2        ; R0 := U2
142 [-]: GETUPVAL  R0 U3        ; R0 := U3
143 [-]: GETUPVAL  R0 U4        ; R0 := U4
144 [-]: GETUPVAL  R0 U5        ; R0 := U5
145 [-]: SETTABLE  R1 K62 R2    ; R1["mOnFocusedCallback"] := R2
146 [-]: GETUPVAL  R1 U0        ; R1 := U0
147 [-]: CLOSURE   R2 9         ; R2 := closure(Function #57.10)
148 [-]: GETUPVAL  R0 U5        ; R0 := U5
149 [-]: SETTABLE  R1 K63 R2    ; R1["mOnUnfocusedCallback"] := R2
150 [-]: GETUPVAL  R1 U0        ; R1 := U0
151 [-]: CLOSURE   R2 10        ; R2 := closure(Function #57.11)
152 [-]: GETUPVAL  R0 U6        ; R0 := U6
153 [-]: GETUPVAL  R0 U0        ; R0 := U0
154 [-]: SETTABLE  R1 K64 R2    ; R1["mOnSelectedCallback"] := R2
155 [-]: GETUPVAL  R1 U0        ; R1 := U0
156 [-]: CLOSURE   R2 11        ; R2 := closure(Function #57.12)
157 [-]: GETUPVAL  R0 U4        ; R0 := U4
158 [-]: GETUPVAL  R0 U2        ; R0 := U2
159 [-]: GETUPVAL  R0 U6        ; R0 := U6
160 [-]: GETUPVAL  R0 U0        ; R0 := U0
161 [-]: GETUPVAL  R0 U1        ; R0 := U1
162 [-]: GETUPVAL  R0 U5        ; R0 := U5
163 [-]: SETTABLE  R1 K65 R2    ; R1["mOnPressedCallback"] := R2
164 [-]: GETUPVAL  R1 U0        ; R1 := U0
165 [-]: CLOSURE   R2 12        ; R2 := closure(Function #57.13)
166 [-]: GETUPVAL  R0 U0        ; R0 := U0
167 [-]: GETUPVAL  R0 U5        ; R0 := U5
168 [-]: GETUPVAL  R0 U7        ; R0 := U7
169 [-]: SETTABLE  R1 K66 R2    ; R1["mElementDrawCallback"] := R2
170 [-]: GETUPVAL  R1 U0        ; R1 := U0
171 [-]: GETUPVAL  R2 U0        ; R2 := U0
172 [-]: GETTABLE  R2 R2 K68    ; R2 := R2["Redraw"]
173 [-]: SETTABLE  R1 K67 R2    ; R1["_CollectionGrid_Redraw"] := R2
174 [-]: GETUPVAL  R1 U0        ; R1 := U0
175 [-]: CLOSURE   R2 13        ; R2 := closure(Function #57.14)
176 [-]: GETUPVAL  R0 U0        ; R0 := U0
177 [-]: SETTABLE  R1 K68 R2    ; R1["Redraw"] := R2
178 [-]: GETUPVAL  R1 U0        ; R1 := U0
179 [-]: GETUPVAL  R2 U0        ; R2 := U0
180 [-]: GETTABLE  R2 R2 K70    ; R2 := R2["SetCategory_Internal"]
181 [-]: SETTABLE  R1 K69 R2    ; R1["_CollectionGrid_SetCategory_Internal"] := R2
182 [-]: GETUPVAL  R1 U0        ; R1 := U0
183 [-]: CLOSURE   R2 14        ; R2 := closure(Function #57.15)
184 [-]: GETUPVAL  R0 U8        ; R0 := U8
185 [-]: SETTABLE  R1 K70 R2    ; R1["SetCategory_Internal"] := R2
186 [-]: GETUPVAL  R1 U0        ; R1 := U0
187 [-]: CLOSURE   R2 15        ; R2 := closure(Function #57.16)
188 [-]: SETTABLE  R1 K71 R2    ; R1["CalculateX"] := R2
189 [-]: GETUPVAL  R1 U0        ; R1 := U0
190 [-]: CLOSURE   R2 16        ; R2 := closure(Function #57.17)
191 [-]: SETTABLE  R1 K72 R2    ; R1["CalculateY"] := R2
192 [-]: GETUPVAL  R1 U0        ; R1 := U0
193 [-]: CLOSURE   R2 17        ; R2 := closure(Function #57.18)
194 [-]: GETUPVAL  R0 U9        ; R0 := U9
195 [-]: SETTABLE  R1 K73 R2    ; R1["AdditionalFilterFunction"] := R2
196 [-]: NEWTABLE  R1 9 0       ; R1 := {}
197 [-]: LOADK     R2 K74       ; R2 := "ATTACK"
198 [-]: LOADK     R3 K75       ; R3 := "DEFENSE"
199 [-]: LOADK     R4 K76       ; R4 := "TACTIC"
200 [-]: LOADK     R5 K77       ; R5 := "POWER"
201 [-]: LOADK     R6 K78       ; R6 := "WARD"
202 [-]: LOADK     R7 K79       ; R7 := "PRECEPT"
203 [-]: LOADK     R8 K80       ; R8 := "FUSION"
204 [-]: LOADK     R9 K81       ; R9 := "UMBRA"
205 [-]: LOADK     R10 K82      ; R10 := "ANY"
206 [-]: SETLIST   R1 9 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 9
207 [-]: NEWTABLE  R2 0 0       ; R2 := {}
208 [-]: GETGLOBAL R3 K83       ; R3 := table
209 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
210 [-]: MOVE      R4 R2        ; R4 := R2
211 [-]: NEWTABLE  R5 0 3       ; R5 := {}
212 [-]: GETUPVAL  R6 U5        ; R6 := U5
213 [-]: GETTABLE  R6 R6 K86    ; R6 := R6["CategoryId_ALL"]
214 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
215 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
216 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
217 [-]: LOADK     R8 K87       ; R8 := "/Lotus/Language/Menu/CategoryAll"
218 [-]: MOVE      R9 R0        ; R9 := R0
219 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
220 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
221 [-]: GETGLOBAL R6 K89       ; R6 := _G
222 [-]: GETTABLE  R6 R6 K90    ; R6 := R6["UICategoryIcon_AllOn"]
223 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
224 [-]: CALL      R3 3 1       ; R3(R4,R5)
225 [-]: GETGLOBAL R3 K91       ; R3 := _T
226 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
227 [-]: GETGLOBAL R4 K93       ; R4 := Engine
228 [-]: GETTABLE  R4 R4 K94    ; R4 := R4["Item_Suits"]
229 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 243
230 [-]: JMP       243          ; PC := 243
231 [-]: GETGLOBAL R3 K91       ; R3 := _T
232 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
233 [-]: GETGLOBAL R4 K93       ; R4 := Engine
234 [-]: GETTABLE  R4 R4 K95    ; R4 := R4["Item_LongGuns"]
235 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 243
236 [-]: JMP       243          ; PC := 243
237 [-]: GETGLOBAL R3 K91       ; R3 := _T
238 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
239 [-]: GETGLOBAL R4 K93       ; R4 := Engine
240 [-]: GETTABLE  R4 R4 K96    ; R4 := R4["Item_Pistols"]
241 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 301
242 [-]: JMP       301          ; PC := 301
243 [-]: GETGLOBAL R3 K91       ; R3 := _T
244 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
245 [-]: GETGLOBAL R4 K93       ; R4 := Engine
246 [-]: GETTABLE  R4 R4 K94    ; R4 := R4["Item_Suits"]
247 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 283
248 [-]: JMP       283          ; PC := 283
249 [-]: GETGLOBAL R3 K83       ; R3 := table
250 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
251 [-]: MOVE      R4 R2        ; R4 := R2
252 [-]: NEWTABLE  R5 0 3       ; R5 := {}
253 [-]: GETUPVAL  R6 U5        ; R6 := U5
254 [-]: GETTABLE  R6 R6 K97    ; R6 := R6["CategoryId_AURA"]
255 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
256 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
257 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
258 [-]: LOADK     R8 K98       ; R8 := "/Lotus/Language/Menu/CategoryAura"
259 [-]: MOVE      R9 R0        ; R9 := R0
260 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
261 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
262 [-]: GETGLOBAL R6 K89       ; R6 := _G
263 [-]: GETTABLE  R6 R6 K99    ; R6 := R6["UICategoryIcon_AuraOn"]
264 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
265 [-]: CALL      R3 3 1       ; R3(R4,R5)
266 [-]: GETGLOBAL R3 K83       ; R3 := table
267 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
268 [-]: MOVE      R4 R2        ; R4 := R2
269 [-]: NEWTABLE  R5 0 3       ; R5 := {}
270 [-]: GETUPVAL  R6 U5        ; R6 := U5
271 [-]: GETTABLE  R6 R6 K100   ; R6 := R6["CategoryId_AUGMENT"]
272 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
273 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
274 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
275 [-]: LOADK     R8 K101      ; R8 := "/Lotus/Language/Menu/CategoryAugment"
276 [-]: MOVE      R9 R0        ; R9 := R0
277 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
278 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
279 [-]: GETGLOBAL R6 K89       ; R6 := _G
280 [-]: GETTABLE  R6 R6 K102   ; R6 := R6["UICategoryIcon_AugmentOn"]
281 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
282 [-]: CALL      R3 3 1       ; R3(R4,R5)
283 [-]: GETGLOBAL R3 K83       ; R3 := table
284 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
285 [-]: MOVE      R4 R2        ; R4 := R2
286 [-]: NEWTABLE  R5 0 3       ; R5 := {}
287 [-]: GETUPVAL  R6 U5        ; R6 := U5
288 [-]: GETTABLE  R6 R6 K103   ; R6 := R6["CategoryId_UTILITY"]
289 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
290 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
291 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
292 [-]: LOADK     R8 K104      ; R8 := "/Lotus/Language/Menu/CategoryUtility"
293 [-]: MOVE      R9 R0        ; R9 := R0
294 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
295 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
296 [-]: GETGLOBAL R6 K89       ; R6 := _G
297 [-]: GETTABLE  R6 R6 K105   ; R6 := R6["UICategoryIcon_UtilityOn"]
298 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
299 [-]: CALL      R3 3 1       ; R3(R4,R5)
300 [-]: JMP       415          ; PC := 415
301 [-]: GETGLOBAL R3 K91       ; R3 := _T
302 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
303 [-]: GETGLOBAL R4 K93       ; R4 := Engine
304 [-]: GETTABLE  R4 R4 K106   ; R4 := R4["Item_SpaceSuits"]
305 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 325
306 [-]: JMP       325          ; PC := 325
307 [-]: GETGLOBAL R3 K83       ; R3 := table
308 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
309 [-]: MOVE      R4 R2        ; R4 := R2
310 [-]: NEWTABLE  R5 0 3       ; R5 := {}
311 [-]: GETUPVAL  R6 U5        ; R6 := U5
312 [-]: GETTABLE  R6 R6 K100   ; R6 := R6["CategoryId_AUGMENT"]
313 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
314 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
315 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
316 [-]: LOADK     R8 K101      ; R8 := "/Lotus/Language/Menu/CategoryAugment"
317 [-]: MOVE      R9 R0        ; R9 := R0
318 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
319 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
320 [-]: GETGLOBAL R6 K89       ; R6 := _G
321 [-]: GETTABLE  R6 R6 K102   ; R6 := R6["UICategoryIcon_AugmentOn"]
322 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
323 [-]: CALL      R3 3 1       ; R3(R4,R5)
324 [-]: JMP       415          ; PC := 415
325 [-]: GETGLOBAL R3 K91       ; R3 := _T
326 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
327 [-]: GETGLOBAL R4 K93       ; R4 := Engine
328 [-]: GETTABLE  R4 R4 K107   ; R4 := R4["Item_Melee"]
329 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 349
330 [-]: JMP       349          ; PC := 349
331 [-]: GETGLOBAL R3 K83       ; R3 := table
332 [-]: GETTABLE  R3 R3 K84    ; R3 := R3["0xE6450C9D"]
333 [-]: MOVE      R4 R2        ; R4 := R2
334 [-]: NEWTABLE  R5 0 3       ; R5 := {}
335 [-]: GETUPVAL  R6 U5        ; R6 := U5
336 [-]: GETTABLE  R6 R6 K108   ; R6 := R6["CategoryId_STANCE"]
337 [-]: SETTABLE  R5 K85 R6    ; R5["Category"] := R6
338 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
339 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5DB0BD4"]
340 [-]: LOADK     R8 K109      ; R8 := "/Lotus/Language/Menu/CategoryMeleeStance"
341 [-]: MOVE      R9 R0        ; R9 := R0
342 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
343 [-]: SETTABLE  R5 K50 R6    ; R5["Name"] := R6
344 [-]: GETGLOBAL R6 K89       ; R6 := _G
345 [-]: GETTABLE  R6 R6 K110   ; R6 := R6["UICategoryIcon_StanceOn"]
346 [-]: SETTABLE  R5 K88 R6    ; R5["Icon"] := R6
347 [-]: CALL      R3 3 1       ; R3(R4,R5)
348 [-]: JMP       415          ; PC := 415
349 [-]: GETGLOBAL R3 K91       ; R3 := _T
350 [-]: GETTABLE  R3 R3 K92    ; R3 := R3["upgradeItemCategory"]
351 [-]: GETGLOBAL R4 K93       ; R4 := Engine
352 [-]: GETTABLE  R4 R4 K111   ; R4 := R4["Item_SpecialItems"]
353 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 392
354 [-]: JMP       392          ; PC := 392
355 [-]: GETUPVAL  R3 U10       ; R3 := U10
356 [-]: CALL      R3 1 2       ; R3 := R3()
357 [-]: GETGLOBAL R4 K112      ; R4 := 0x400E7765
358 [-]: MOVE      R5 R3        ; R5 := R3
359 [-]: CALL      R4 2 2       ; R4 := R4(R5)
360 [-]: TEST      R4 1         ; if R4 then PC := 415
361 [-]: JMP       415          ; PC := 415
362 [-]: SELF      R4 R3 K113   ; R5 := R3; R4 := R3["0x8B598ED4"]
363 [-]: GETGLOBAL R6 K114      ; R6 := gLotusMeleeWeaponType
364 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
365 [-]: TEST      R4 0         ; if not R4 then PC := 415
366 [-]: JMP       415          ; PC := 415
367 [-]: SELF      R4 R3 K115   ; R5 := R3; R4 := R3["0x8E5E18C5"]
368 [-]: GETGLOBAL R6 K116      ; R6 := 0xEC274B1A
369 [-]: LOADK     R7 K117      ; R7 := "POWER_WEAPON"
370 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
371 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
372 [-]: TEST      R4 1         ; if R4 then PC := 415
373 [-]: JMP       415          ; PC := 415
374 [-]: GETGLOBAL R4 K83       ; R4 := table
375 [-]: GETTABLE  R4 R4 K84    ; R4 := R4["0xE6450C9D"]
376 [-]: MOVE      R5 R2        ; R5 := R2
377 [-]: NEWTABLE  R6 0 3       ; R6 := {}
378 [-]: GETUPVAL  R7 U5        ; R7 := U5
379 [-]: GETTABLE  R7 R7 K108   ; R7 := R7["CategoryId_STANCE"]
380 [-]: SETTABLE  R6 K85 R7    ; R6["Category"] := R7
381 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
382 [-]: SELF      R7 R7 K51    ; R8 := R7; R7 := R7["0x5DB0BD4"]
383 [-]: LOADK     R9 K109      ; R9 := "/Lotus/Language/Menu/CategoryMeleeStance"
384 [-]: MOVE      R10 R0       ; R10 := R0
385 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
386 [-]: SETTABLE  R6 K50 R7    ; R6["Name"] := R7
387 [-]: GETGLOBAL R7 K89       ; R7 := _G
388 [-]: GETTABLE  R7 R7 K110   ; R7 := R7["UICategoryIcon_StanceOn"]
389 [-]: SETTABLE  R6 K88 R7    ; R6["Icon"] := R7
390 [-]: CALL      R4 3 1       ; R4(R5,R6)
391 [-]: JMP       415          ; PC := 415
392 [-]: GETGLOBAL R4 K91       ; R4 := _T
393 [-]: GETTABLE  R4 R4 K92    ; R4 := R4["upgradeItemCategory"]
394 [-]: GETGLOBAL R5 K93       ; R5 := Engine
395 [-]: GETTABLE  R5 R5 K118   ; R5 := R5["Item_DataKnives"]
396 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 415
397 [-]: JMP       415          ; PC := 415
398 [-]: GETGLOBAL R4 K83       ; R4 := table
399 [-]: GETTABLE  R4 R4 K84    ; R4 := R4["0xE6450C9D"]
400 [-]: MOVE      R5 R2        ; R5 := R2
401 [-]: NEWTABLE  R6 0 3       ; R6 := {}
402 [-]: GETUPVAL  R7 U5        ; R7 := U5
403 [-]: GETTABLE  R7 R7 K119   ; R7 := R7["CategoryId_IMMORTAL"]
404 [-]: SETTABLE  R6 K85 R7    ; R6["Category"] := R7
405 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
406 [-]: SELF      R7 R7 K51    ; R8 := R7; R7 := R7["0x5DB0BD4"]
407 [-]: LOADK     R9 K120      ; R9 := "/Lotus/Language/Menu/ProjectionManager_TierDesc5"
408 [-]: MOVE      R10 R0       ; R10 := R0
409 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
410 [-]: SETTABLE  R6 K50 R7    ; R6["Name"] := R7
411 [-]: GETGLOBAL R7 K89       ; R7 := _G
412 [-]: GETTABLE  R7 R7 K121   ; R7 := R7["UICategoryIcon_ImmortalOn"]
413 [-]: SETTABLE  R6 K88 R7    ; R6["Icon"] := R7
414 [-]: CALL      R4 3 1       ; R4(R5,R6)
415 [-]: LOADNIL   R4 R6        ; R4 := R5 := R6 := nil
416 [-]: GETGLOBAL R7 K122      ; R7 := 0x63B09107
417 [-]: MOVE      R8 R1        ; R8 := R1
418 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
419 [-]: JMP       456          ; PC := 456
420 [-]: GETGLOBAL R12 K123     ; R12 := Lotus_Game
421 [-]: LOADK     R13 K124     ; R13 := "AP_"
422 [-]: MOVE      R14 R11      ; R14 := R11
423 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
424 [-]: GETTABLE  R4 R12 R13   ; R4 := R12[R13]
425 [-]: GETGLOBAL R12 K4       ; R12 := mMovie
426 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12["0x5DB0BD4"]
427 [-]: LOADK     R14 K125     ; R14 := "/Lotus/Language/Menu/AP_"
428 [-]: MOVE      R15 R11      ; R15 := R11
429 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
430 [-]: MOVE      R15 R0       ; R15 := R0
431 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
432 [-]: MOVE      R5 R12       ; R5 := R12
433 [-]: GETGLOBAL R12 K126     ; R12 := string
434 [-]: GETTABLE  R12 R12 K127 ; R12 := R12["0xDE44F664"]
435 [-]: MOVE      R13 R5       ; R13 := R5
436 [-]: LOADK     R14 K128     ; R14 := ">"
437 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
438 [-]: MOVE      R6 R12       ; R6 := R12
439 [-]: GETGLOBAL R12 K126     ; R12 := string
440 [-]: GETTABLE  R12 R12 K129 ; R12 := R12["0x7B782033"]
441 [-]: MOVE      R13 R5       ; R13 := R5
442 [-]: ADD       R14 R6 K43   ; R14 := R6 + 1
443 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
444 [-]: MOVE      R5 R12       ; R5 := R12
445 [-]: GETGLOBAL R12 K83      ; R12 := table
446 [-]: GETTABLE  R12 R12 K84  ; R12 := R12["0xE6450C9D"]
447 [-]: MOVE      R13 R2       ; R13 := R2
448 [-]: NEWTABLE  R14 0 3      ; R14 := {}
449 [-]: ADD       R15 K28 R4   ; R15 := 100 + R4
450 [-]: SETTABLE  R14 K85 R15  ; R14["Category"] := R15
451 [-]: SETTABLE  R14 K50 R5   ; R14["Name"] := R5
452 [-]: GETGLOBAL R15 K130     ; R15 := polarityIcons
453 [-]: GETTABLE  R15 R15 R4   ; R15 := R15[R4]
454 [-]: SETTABLE  R14 K88 R15  ; R14["Icon"] := R15
455 [-]: CALL      R12 3 1      ; R12(R13,R14)
456 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 420; R9 := R10 end
457 [-]: JMP       420          ; PC := 420
458 [-]: LOADK     R12 K43      ; R12 := 1
459 [-]: LEN       R13 R2       ; R13 := # R2
460 [-]: LOADK     R14 K43      ; R14 := 1
461 [-]: FORPREP   R12 466      ; R12 -= R14; PC := 466
462 [-]: GETUPVAL  R16 U0       ; R16 := U0
463 [-]: SELF      R16 R16 K131 ; R17 := R16; R16 := R16["0x2F2AD0EF"]
464 [-]: GETTABLE  R18 R2 R15   ; R18 := R2[R15]
465 [-]: CALL      R16 3 1      ; R16(R17,R18)
466 [-]: FORLOOP   R12 462      ; R12 += R14; if R12 <= R13 then begin PC := 462; R15 := R12 end
467 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
468 [-]: SELF      R16 R16 K132 ; R17 := R16; R16 := R16["0x1C19D966"]
469 [-]: LOADK     R18 K133     ; R18 := "TopMenu.LeftBumper"
470 [-]: LOADK     R19 K134     ; R19 := "_visible"
471 [-]: GETGLOBAL R20 K93      ; R20 := Engine
472 [-]: GETTABLE  R20 R20 K135 ; R20 := R20["0x9490FE70"]
473 [-]: CALL      R20 1 2      ; R20 := R20()
474 [-]: TEST      R20 0        ; if not R20 then PC := 481
475 [-]: JMP       481          ; PC := 481
476 [-]: LEN       R20 R2       ; R20 := # R2
477 [-]: LT        1 K43 R20    ; if 1 < R20 then PC := 480
478 [-]: JMP       480          ; PC := 480
479 [-]: MOVE      R20 R0       ; R20 := R0
480 [-]: MOVE      R20 R1       ; R20 := R1
481 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
482 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
483 [-]: SELF      R16 R16 K132 ; R17 := R16; R16 := R16["0x1C19D966"]
484 [-]: LOADK     R18 K136     ; R18 := "TopMenu.RightBumper"
485 [-]: LOADK     R19 K134     ; R19 := "_visible"
486 [-]: GETGLOBAL R20 K93      ; R20 := Engine
487 [-]: GETTABLE  R20 R20 K135 ; R20 := R20["0x9490FE70"]
488 [-]: CALL      R20 1 2      ; R20 := R20()
489 [-]: TEST      R20 0        ; if not R20 then PC := 496
490 [-]: JMP       496          ; PC := 496
491 [-]: LEN       R20 R2       ; R20 := # R2
492 [-]: LT        1 K43 R20    ; if 1 < R20 then PC := 495
493 [-]: JMP       495          ; PC := 495
494 [-]: MOVE      R20 R0       ; R20 := R0
495 [-]: MOVE      R20 R1       ; R20 := R1
496 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
497 [-]: GETGLOBAL R16 K4       ; R16 := mMovie
498 [-]: SELF      R16 R16 K137 ; R17 := R16; R16 := R16["0x851AD845"]
499 [-]: CALL      R16 2 2      ; R16 := R16(R17)
500 [-]: GETGLOBAL R17 K112     ; R17 := 0x400E7765
501 [-]: GETGLOBAL R18 K138     ; R18 := gGameData
502 [-]: CALL      R17 2 2      ; R17 := R17(R18)
503 [-]: TEST      R17 1        ; if R17 then PC := 516
504 [-]: JMP       516          ; PC := 516
505 [-]: GETGLOBAL R17 K138     ; R17 := gGameData
506 [-]: SELF      R17 R17 K139 ; R18 := R17; R17 := R17["0x30BDB36"]
507 [-]: MOVE      R19 R16      ; R19 := R16
508 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
509 [-]: EQ        0 R17 K140   ; if R17 ~= "" then PC := 512
510 [-]: JMP       512          ; PC := 512
511 [-]: LOADK     R17 K61      ; R17 := "POLARITY"
512 [-]: GETUPVAL  R18 U0       ; R18 := U0
513 [-]: SELF      R18 R18 K141 ; R19 := R18; R18 := R18["0xA4DF28A"]
514 [-]: MOVE      R20 R17      ; R20 := R17
515 [-]: CALL      R18 3 1      ; R18(R19,R20)
516 [-]: MOVE      R1 R11       ; R1 := R11
517 [-]: LOADK     R18 K43      ; R18 := 1
518 [-]: GETUPVAL  R19 U11      ; R19 := U11
519 [-]: LEN       R19 R19      ; R19 := # R19
520 [-]: LOADK     R20 K43      ; R20 := 1
521 [-]: FORPREP   R18 531      ; R18 -= R20; PC := 531
522 [-]: GETUPVAL  R22 U11      ; R22 := U11
523 [-]: GETGLOBAL R23 K123     ; R23 := Lotus_Game
524 [-]: LOADK     R24 K124     ; R24 := "AP_"
525 [-]: GETUPVAL  R25 U11      ; R25 := U11
526 [-]: GETTABLE  R25 R25 R21  ; R25 := R25[R21]
527 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
528 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
529 [-]: ADD       R23 K28 R23  ; R23 := 100 + R23
530 [-]: SETTABLE  R22 R21 R23  ; R22[R21] := R23
531 [-]: FORLOOP   R18 522      ; R18 += R20; if R18 <= R19 then begin PC := 522; R21 := R18 end
532 [-]: GETGLOBAL R22 K83      ; R22 := table
533 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
534 [-]: GETUPVAL  R23 U11      ; R23 := U11
535 [-]: GETUPVAL  R24 U5       ; R24 := U5
536 [-]: GETTABLE  R24 R24 K86  ; R24 := R24["CategoryId_ALL"]
537 [-]: CALL      R22 3 1      ; R22(R23,R24)
538 [-]: GETGLOBAL R22 K83      ; R22 := table
539 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
540 [-]: GETUPVAL  R23 U11      ; R23 := U11
541 [-]: GETUPVAL  R24 U5       ; R24 := U5
542 [-]: GETTABLE  R24 R24 K108 ; R24 := R24["CategoryId_STANCE"]
543 [-]: CALL      R22 3 1      ; R22(R23,R24)
544 [-]: GETGLOBAL R22 K83      ; R22 := table
545 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
546 [-]: GETUPVAL  R23 U11      ; R23 := U11
547 [-]: GETUPVAL  R24 U5       ; R24 := U5
548 [-]: GETTABLE  R24 R24 K97  ; R24 := R24["CategoryId_AURA"]
549 [-]: CALL      R22 3 1      ; R22(R23,R24)
550 [-]: GETGLOBAL R22 K83      ; R22 := table
551 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
552 [-]: GETUPVAL  R23 U11      ; R23 := U11
553 [-]: GETUPVAL  R24 U5       ; R24 := U5
554 [-]: GETTABLE  R24 R24 K100 ; R24 := R24["CategoryId_AUGMENT"]
555 [-]: CALL      R22 3 1      ; R22(R23,R24)
556 [-]: GETGLOBAL R22 K83      ; R22 := table
557 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
558 [-]: GETUPVAL  R23 U11      ; R23 := U11
559 [-]: GETUPVAL  R24 U5       ; R24 := U5
560 [-]: GETTABLE  R24 R24 K103 ; R24 := R24["CategoryId_UTILITY"]
561 [-]: CALL      R22 3 1      ; R22(R23,R24)
562 [-]: GETGLOBAL R22 K83      ; R22 := table
563 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
564 [-]: GETUPVAL  R23 U11      ; R23 := U11
565 [-]: GETUPVAL  R24 U5       ; R24 := U5
566 [-]: GETTABLE  R24 R24 K142 ; R24 := R24["CategoryId_OMEGA"]
567 [-]: CALL      R22 3 1      ; R22(R23,R24)
568 [-]: GETGLOBAL R22 K83      ; R22 := table
569 [-]: GETTABLE  R22 R22 K84  ; R22 := R22["0xE6450C9D"]
570 [-]: GETUPVAL  R23 U11      ; R23 := U11
571 [-]: GETUPVAL  R24 U5       ; R24 := U5
572 [-]: GETTABLE  R24 R24 K119 ; R24 := R24["CategoryId_IMMORTAL"]
573 [-]: CALL      R22 3 1      ; R22(R23,R24)
574 [-]: GETUPVAL  R22 U0       ; R22 := U0
575 [-]: SELF      R22 R22 K143 ; R23 := R22; R22 := R22["0x7CF71D03"]
576 [-]: MOVE      R24 R1       ; R24 := R1
577 [-]: MOVE      R25 R1       ; R25 := R1
578 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
579 [-]: GETGLOBAL R22 K4       ; R22 := mMovie
580 [-]: SELF      R22 R22 K51  ; R23 := R22; R22 := R22["0x5DB0BD4"]
581 [-]: LOADK     R24 K144     ; R24 := "<MOD_SELECTOR>"
582 [-]: MOVE      R25 R1       ; R25 := R1
583 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
584 [-]: GETUPVAL  R23 U12      ; R23 := U12
585 [-]: CALL      R23 1 1      ; R23()
586 [-]: GETUPVAL  R23 U0       ; R23 := U0
587 [-]: SETTABLE  R23 K145 K18 ; R23["mHasDoneFirstRedraw"] := "0x0"
588 [-]: GETUPVAL  R23 U0       ; R23 := U0
589 [-]: SELF      R23 R23 K146 ; R24 := R23; R23 := R23["0x6470BAF4"]
590 [-]: CALL      R23 2 1      ; R23(R24)
591 [-]: GETUPVAL  R23 U0       ; R23 := U0
592 [-]: GETTABLE  R23 R23 K147 ; R23 := R23["mScrollBar"]
593 [-]: SETTABLE  R23 K148 K36 ; R23["mInitialY"] := 0
594 [-]: GETUPVAL  R23 U0       ; R23 := U0
595 [-]: GETTABLE  R23 R23 K147 ; R23 := R23["mScrollBar"]
596 [-]: SELF      R23 R23 K149 ; R24 := R23; R23 := R23["0x1B721C34"]
597 [-]: LOADK     R25 K36      ; R25 := 0
598 [-]: CALL      R23 3 1      ; R23(R24,R25)
599 [-]: GETUPVAL  R23 U0       ; R23 := U0
600 [-]: GETTABLE  R23 R23 K147 ; R23 := R23["mScrollBar"]
601 [-]: SELF      R23 R23 K150 ; R24 := R23; R23 := R23["0x3B8EF1F4"]
602 [-]: CALL      R23 2 1      ; R23(R24)
603 [-]: RETURN    R0 1         ; return 


; Function #57.1:
;
; Name:            
; Defined at line: 2113
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LOADK     R2 K0        ; R2 := 1720
  2 [-]: RETURN    R2 2         ; return R2
  3 [-]: RETURN    R0 1         ; return 


; Function #57.2:
;
; Name:            
; Defined at line: 2131
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 
  2 [-]: RETURN    R0 1         ; return 


; Function #57.3:
;
; Name:            
; Defined at line: 2135
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mClipName"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mMovie"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x1C19D966"]
  9 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mClipName"]
 10 [-]: LOADK     R5 K4        ; R5 := "_alpha"
 11 [-]: LOADK     R6 K5        ; R6 := 0
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: RETURN    R0 1         ; return 


; Function #57.4:
;
; Name:            
; Defined at line: 2142
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: NEWTABLE  R2 1 0       ; R2 := {}
  2 [-]: LOADK     R3 K0        ; R3 := "_alpha"
  3 [-]: SETLIST   R2 1 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 1
  4 [-]: NEWTABLE  R3 1 0       ; R3 := {}
  5 [-]: LOADK     R4 K1        ; R4 := 100
  6 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
  7 [-]: RETURN    R2 3         ; return R2,R3
  8 [-]: RETURN    R0 1         ; return 


; Function #57.5:
;
; Name:            
; Defined at line: 2147
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCardIndex"]
  6 [-]: GETTABLE  R0 R2 R3     ; R0 := R2[R3]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["mCardIndex"]
  9 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
 10 [-]: EQ        0 R0 K3      ; if R0 ~= nil then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       62           ; PC := 62
 15 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: JMP       62           ; PC := 62
 20 [-]: GETUPVAL  R2 U1        ; R2 := U1
 21 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mHasDoneFirstRedraw"]
 22 [-]: TEST      R2 1         ; if R2 then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mIsNew"]
 25 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mIsNew"]
 26 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mIsNew"]
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: JMP       62           ; PC := 62
 31 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mName"]
 32 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["mName"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mName"]
 36 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["mName"]
 37 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R2 R0        ; R2 := R0
 40 [-]: MOVE      R2 R1        ; R2 := R1
 41 [-]: RETURN    R2 2         ; return R2
 42 [-]: JMP       62           ; PC := 62
 43 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mUpgradeType"]
 44 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["mUpgradeType"]
 45 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 55
 46 [-]: JMP       55           ; PC := 55
 47 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mUpgradeType"]
 48 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["mUpgradeType"]
 49 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: MOVE      R2 R0        ; R2 := R0
 52 [-]: MOVE      R2 R1        ; R2 := R1
 53 [-]: RETURN    R2 2         ; return R2
 54 [-]: JMP       62           ; PC := 62
 55 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["mLevel"]
 56 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["mLevel"]
 57 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R2 R0        ; R2 := R0
 60 [-]: MOVE      R2 R1        ; R2 := R1
 61 [-]: RETURN    R2 2         ; return R2
 62 [-]: RETURN    R0 1         ; return 


; Function #57.6:
;
; Name:            
; Defined at line: 2166
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mCardIndex"]
  3 [-]: GETTABLE  R0 R2 R3     ; R0 := R2[R3]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mCardIndex"]
  6 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: JMP       47           ; PC := 47
 12 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: JMP       47           ; PC := 47
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mHasDoneFirstRedraw"]
 19 [-]: TEST      R2 1         ; if R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 22 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mIsNew"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: JMP       47           ; PC := 47
 28 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mLevel"]
 29 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mLevel"]
 30 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mLevel"]
 33 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mLevel"]
 34 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: MOVE      R2 R1        ; R2 := R1
 38 [-]: RETURN    R2 2         ; return R2
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 41 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 42 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: MOVE      R2 R0        ; R2 := R0
 45 [-]: MOVE      R2 R1        ; R2 := R1
 46 [-]: RETURN    R2 2         ; return R2
 47 [-]: RETURN    R0 1         ; return 


; Function #57.7:
;
; Name:            
; Defined at line: 2182
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mCardIndex"]
  3 [-]: GETTABLE  R0 R2 R3     ; R0 := R2[R3]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mCardIndex"]
  6 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: JMP       77           ; PC := 77
 12 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: JMP       77           ; PC := 77
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mHasDoneFirstRedraw"]
 19 [-]: TEST      R2 1         ; if R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 22 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mIsNew"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: JMP       77           ; PC := 77
 28 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mDrain"]
 29 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mDrain"]
 30 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R2 K5        ; R2 := math
 33 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xF93F7CC8"]
 34 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mDrain"]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: GETGLOBAL R3 K5        ; R3 := math
 37 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xF93F7CC8"]
 38 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["mDrain"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: MOVE      R2 R1        ; R2 := R1
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       77           ; PC := 77
 46 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mName"]
 47 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["mName"]
 48 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 58
 49 [-]: JMP       58           ; PC := 58
 50 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mName"]
 51 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["mName"]
 52 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R2 R0        ; R2 := R0
 55 [-]: MOVE      R2 R1        ; R2 := R1
 56 [-]: RETURN    R2 2         ; return R2
 57 [-]: JMP       77           ; PC := 77
 58 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["mUpgradeType"]
 59 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["mUpgradeType"]
 60 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["mUpgradeType"]
 63 [-]: GETTABLE  R3 R1 K8     ; R3 := R1["mUpgradeType"]
 64 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: MOVE      R2 R1        ; R2 := R1
 68 [-]: RETURN    R2 2         ; return R2
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["mLevel"]
 71 [-]: GETTABLE  R3 R1 K9     ; R3 := R1["mLevel"]
 72 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: MOVE      R2 R1        ; R2 := R1
 76 [-]: RETURN    R2 2         ; return R2
 77 [-]: RETURN    R0 1         ; return 


; Function #57.8:
;
; Name:            
; Defined at line: 2202
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mCardIndex"]
  3 [-]: GETTABLE  R0 R2 R3     ; R0 := R2[R3]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["mCardIndex"]
  6 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: JMP       71           ; PC := 71
 12 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: JMP       71           ; PC := 71
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mHasDoneFirstRedraw"]
 19 [-]: TEST      R2 1         ; if R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 22 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mIsNew"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mIsNew"]
 26 [-]: RETURN    R2 2         ; return R2
 27 [-]: JMP       71           ; PC := 71
 28 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mPolarity"]
 29 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mPolarity"]
 30 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mPolarity"]
 33 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mPolarity"]
 34 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: MOVE      R2 R1        ; R2 := R1
 38 [-]: RETURN    R2 2         ; return R2
 39 [-]: JMP       71           ; PC := 71
 40 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 41 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 42 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 52
 43 [-]: JMP       52           ; PC := 52
 44 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 45 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 46 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: MOVE      R2 R0        ; R2 := R0
 49 [-]: MOVE      R2 R1        ; R2 := R1
 50 [-]: RETURN    R2 2         ; return R2
 51 [-]: JMP       71           ; PC := 71
 52 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mUpgradeType"]
 53 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["mUpgradeType"]
 54 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 64
 55 [-]: JMP       64           ; PC := 64
 56 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mUpgradeType"]
 57 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["mUpgradeType"]
 58 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: MOVE      R2 R1        ; R2 := R1
 62 [-]: RETURN    R2 2         ; return R2
 63 [-]: JMP       71           ; PC := 71
 64 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mLevel"]
 65 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["mLevel"]
 66 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: MOVE      R2 R0        ; R2 := R0
 69 [-]: MOVE      R2 R1        ; R2 := R1
 70 [-]: RETURN    R2 2         ; return R2
 71 [-]: RETURN    R0 1         ; return 


; Function #57.9:
;
; Name:            
; Defined at line: 2222
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mClipName"]
  2 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCardIndex"]
  5 [-]: EQ        0 R2 K3      ; if R2 ~= -1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mOrigDepth"]
  9 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 35
 10 [-]: JMP       35           ; PC := 35
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0xF595ADDE
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x8C64AFA9
 13 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 14 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 15 [-]: LOADK     R6 K8        ; R6 := ".getDepth"
 16 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 17 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 18 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 19 [-]: SETTABLE  R0 K4 R2     ; R0["mOrigDepth"] := R2
 20 [-]: GETGLOBAL R2 K6        ; R2 := 0x8C64AFA9
 21 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 22 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 23 [-]: LOADK     R5 K9        ; R5 := ".swapDepths"
 24 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mInitialDepth"]
 27 [-]: GETUPVAL  R6 U0        ; R6 := U0
 28 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["mTopClipIndexUsed"]
 29 [-]: ADD       R6 R6 K12    ; R6 := R6 + 1
 30 [-]: GETUPVAL  R7 U0        ; R7 := U0
 31 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["mDepthDirection"]
 32 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 33 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 34 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 35 [-]: GETUPVAL  R2 U1        ; R2 := U1
 36 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0xB1627322"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: TEST      R2 0         ; if not R2 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: RETURN    R0 1         ; return 
 41 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["Id"]
 42 [-]: MOVE      R2 R2        ; R2 := R2
 43 [-]: GETUPVAL  R2 U3        ; R2 := U3
 44 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0x25992394"]
 45 [-]: GETGLOBAL R3 K17       ; R3 := _G
 46 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UISound_Focus"]
 47 [-]: CALL      R2 2 1       ; R2(R3)
 48 [-]: GETGLOBAL R2 K6        ; R2 := 0x8C64AFA9
 49 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 50 [-]: LOADK     R4 K19       ; R4 := "Available.swapDepths"
 51 [-]: LOADK     R5 K20       ; R5 := 1200
 52 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 53 [-]: TEST      R1 1         ; if R1 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mClipName"]
 56 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETUPVAL  R2 U4        ; R2 := U4
 59 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["0x697262FB"]
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 62 [-]: LOADK     R5 K22       ; R5 := ".Card"
 63 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 64 [-]: MOVE      R5 R1        ; R5 := R1
 65 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 66 [-]: RETURN    R0 1         ; return 


; Function #57.10:
;
; Name:            
; Defined at line: 2248
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x697262FB"]
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K3        ; R4 := ".Card"
  9 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mOrigDepth"]
 13 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x8C64AFA9
 16 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 17 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 18 [-]: LOADK     R4 K7        ; R4 := ".swapDepths"
 19 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 20 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mOrigDepth"]
 21 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 22 [-]: SETTABLE  R0 K4 K1     ; R0["mOrigDepth"] := nil
 23 [-]: GETGLOBAL R1 K8        ; R1 := _T
 24 [-]: SETTABLE  R1 K9 K1     ; R1["gToolTip"] := nil
 25 [-]: RETURN    R0 1         ; return 


; Function #57.11:
;
; Name:            
; Defined at line: 2260
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x9490FE70"]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #57.12:
;
; Name:            
; Defined at line: 2267
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x25992394"]
  3 [-]: GETGLOBAL R2 K1        ; R2 := _G
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UISound_Select"]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  7 [-]: GETGLOBAL R2 K4        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["ContextMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K4        ; R1 := _T
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["ContextMenu"]
 14 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x4D8B7CE8"]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 0         ; if not R1 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETTABLE  R1 R0 K7     ; R1 := R0["mInstalled"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 38
 21 [-]: JMP       38           ; PC := 38
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0x38ECFE60"]
 24 [-]: GETGLOBAL R2 K9        ; R2 := mMovie
 25 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 26 [-]: LOADK     R4 K11       ; R4 := "/Lotus/Language/Menu/Loadout_ModAlreadyInstalled"
 27 [-]: MOVE      R5 R1        ; R5 := R1
 28 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 29 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mName"]
 30 [-]: SETTABLE  R6 K12 R7    ; R6["MOD"] := R7
 31 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mInstalledName"]
 32 [-]: SETTABLE  R6 K14 R7    ; R6["WEAPON"] := R7
 33 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 34 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: GETUPVAL  R1 U1        ; R1 := U1
 39 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0xB1627322"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: TEST      R1 0         ; if not R1 then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: GETUPVAL  R1 U2        ; R1 := U2
 44 [-]: GETUPVAL  R2 U3        ; R2 := U3
 45 [-]: MOVE      R3 R0        ; R3 := R0
 46 [-]: CALL      R1 3 1       ; R1(R2,R3)
 47 [-]: JMP       157          ; PC := 157
 48 [-]: GETUPVAL  R1 U4        ; R1 := U4
 49 [-]: GETTABLE  R2 R0 K17    ; R2 := R0["mCardIndex"]
 50 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 51 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
 52 [-]: MOVE      R3 R1        ; R3 := R1
 53 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 54 [-]: TEST      R2 1         ; if R2 then PC := 157
 55 [-]: JMP       157          ; PC := 157
 56 [-]: GETTABLE  R2 R1 K18    ; R2 := R1["mIcon"]
 57 [-]: GETUPVAL  R3 U5        ; R3 := U5
 58 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0xB151CC5A"]
 59 [-]: MOVE      R4 R1        ; R4 := R1
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: TEST      R3 0         ; if not R3 then PC := 98
 62 [-]: JMP       98           ; PC := 98
 63 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 64 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 65 [-]: LOADK     R5 K21       ; R5 := "DragImage"
 66 [-]: GETGLOBAL R6 K1        ; R6 := _G
 67 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["UIMaterial_Mods"]
 68 [-]: GETTABLE  R6 R6 K23    ; R6 := R6[2]
 69 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["ImmortalIcon"]
 70 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 71 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 72 [-]: SELF      R3 R3 K25    ; R4 := R3; R3 := R3["0xE953BC1F"]
 73 [-]: LOADK     R5 K21       ; R5 := "DragImage"
 74 [-]: GETGLOBAL R6 K26       ; R6 := 0xEC274B1A
 75 [-]: LOADK     R7 K27       ; R7 := "DetailMap"
 76 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 77 [-]: GETTABLE  R7 R1 K28    ; R7 := R1["mGlowIcon"]
 78 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 79 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 80 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x302AAB2F"]
 81 [-]: LOADK     R5 K21       ; R5 := "DragImage"
 82 [-]: LOADK     R6 K30       ; R6 := "DetailMapTint"
 83 [-]: LOADK     R7 K31       ; R7 := 0.63529998064041
 84 [-]: LOADK     R8 K32       ; R8 := 0
 85 [-]: LOADK     R9 K33       ; R9 := 0.18039999902248
 86 [-]: LOADK     R10 K34      ; R10 := 1
 87 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 88 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 89 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x302AAB2F"]
 90 [-]: LOADK     R5 K21       ; R5 := "DragImage"
 91 [-]: LOADK     R6 K35       ; R6 := "DetailMapParams"
 92 [-]: LOADK     R7 K34       ; R7 := 1
 93 [-]: LOADK     R8 K34       ; R8 := 1
 94 [-]: LOADK     R9 K34       ; R9 := 1
 95 [-]: LOADK     R10 K34      ; R10 := 1
 96 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 97 [-]: JMP       141          ; PC := 141
 98 [-]: GETGLOBAL R3 K9        ; R3 := mMovie
 99 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0x7E1F26D7"]
100 [-]: LOADK     R5 K21       ; R5 := "DragImage"
101 [-]: GETGLOBAL R6 K1        ; R6 := _G
102 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["UIMaterial_Mods"]
103 [-]: GETTABLE  R6 R6 K23    ; R6 := R6[2]
104 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["Icon"]
105 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
106 [-]: GETGLOBAL R3 K1        ; R3 := _G
107 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["UIMaterial_Mods"]
108 [-]: GETTABLE  R3 R3 K23    ; R3 := R3[2]
109 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["Icon"]
110 [-]: SELF      R3 R3 K37    ; R4 := R3; R3 := R3["0x8D835A25"]
111 [-]: GETGLOBAL R5 K26       ; R5 := 0xEC274B1A
112 [-]: LOADK     R6 K27       ; R6 := "DetailMap"
113 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
114 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
115 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
116 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4["0xE953BC1F"]
117 [-]: LOADK     R6 K21       ; R6 := "DragImage"
118 [-]: GETGLOBAL R7 K26       ; R7 := 0xEC274B1A
119 [-]: LOADK     R8 K27       ; R8 := "DetailMap"
120 [-]: CALL      R7 2 2       ; R7 := R7(R8)
121 [-]: MOVE      R8 R3        ; R8 := R3
122 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
123 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
124 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0x302AAB2F"]
125 [-]: LOADK     R6 K21       ; R6 := "DragImage"
126 [-]: LOADK     R7 K30       ; R7 := "DetailMapTint"
127 [-]: LOADK     R8 K34       ; R8 := 1
128 [-]: LOADK     R9 K34       ; R9 := 1
129 [-]: LOADK     R10 K34      ; R10 := 1
130 [-]: LOADK     R11 K32      ; R11 := 0
131 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
132 [-]: GETGLOBAL R4 K9        ; R4 := mMovie
133 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0x302AAB2F"]
134 [-]: LOADK     R6 K21       ; R6 := "DragImage"
135 [-]: LOADK     R7 K35       ; R7 := "DetailMapParams"
136 [-]: LOADK     R8 K32       ; R8 := 0
137 [-]: LOADK     R9 K32       ; R9 := 0
138 [-]: LOADK     R10 K34      ; R10 := 1
139 [-]: LOADK     R11 K34      ; R11 := 1
140 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
141 [-]: GETUPVAL  R4 U1        ; R4 := U1
142 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4["0xC5E91BA6"]
143 [-]: LOADK     R6 K21       ; R6 := "DragImage"
144 [-]: MOVE      R7 R2        ; R7 := R2
145 [-]: NEWTABLE  R8 0 3       ; R8 := {}
146 [-]: SETTABLE  R8 K39 R1    ; R8["item"] := R1
147 [-]: GETUPVAL  R9 U3        ; R9 := U3
148 [-]: SETTABLE  R8 K40 R9    ; R8["grid"] := R9
149 [-]: SETTABLE  R8 K41 R0    ; R8["element"] := R0
150 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
151 [-]: GETGLOBAL R4 K4        ; R4 := _T
152 [-]: SETTABLE  R4 K42 K43   ; R4["gToolTip"] := nil
153 [-]: GETUPVAL  R4 U3        ; R4 := U3
154 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4["0x2176B11E"]
155 [-]: GETTABLE  R6 R0 K45    ; R6 := R0["Id"]
156 [-]: CALL      R4 3 1       ; R4(R5,R6)
157 [-]: RETURN    R0 1         ; return 


; Function #57.13:
;
; Name:            
; Defined at line: 2303
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x97B489B5"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["Id"]
 16 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["Id"]
 17 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: MOVE      R2 R1        ; R2 := R1
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xA7A7B88"]
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R3 2 1       ; R3(R4)
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x697262FB"]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 29 [-]: LOADK     R6 K6        ; R6 := ".Card"
 30 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: LOADK     R7 K7        ; R7 := 0
 33 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 34 [-]: GETUPVAL  R3 U2        ; R3 := U2
 35 [-]: MOVE      R4 R0        ; R4 := R0
 36 [-]: CALL      R3 2 1       ; R3(R4)
 37 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 38 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 39 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 40 [-]: LOADK     R6 K10       ; R6 := "Btn"
 41 [-]: LOADK     R7 K11       ; R7 := "trackAsMenu"
 42 [-]: MOVE      R8 R1        ; R8 := R1
 43 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 44 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 45 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 46 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 47 [-]: LOADK     R6 K12       ; R6 := "Lock"
 48 [-]: LOADK     R7 K13       ; R7 := "_visible"
 49 [-]: MOVE      R8 R0        ; R8 := R0
 50 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 51 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 52 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x1C19D966"]
 53 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 54 [-]: LOADK     R6 K15       ; R6 := "Type"
 55 [-]: LOADK     R7 K7        ; R7 := 0
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 58 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x1C19D966"]
 59 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mClipName"]
 60 [-]: LOADK     R6 K3        ; R6 := "Id"
 61 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["Id"]
 62 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 63 [-]: RETURN    R0 1         ; return 


; Function #57.14:
;
; Name:            
; Defined at line: 2324
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0["0x97B489B5"]
  2 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
  4 [-]: MOVE      R7 R5        ; R7 := R5
  5 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  6 [-]: TEST      R6 1         ; if R6 then PC := 22
  7 [-]: JMP       22           ; PC := 22
  8 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mClipName"]
  9 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 22
 10 [-]: JMP       22           ; PC := 22
 11 [-]: GETTABLE  R6 R5 K4     ; R6 := R5["mOrigDepth"]
 12 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETGLOBAL R6 K5        ; R6 := 0x8C64AFA9
 15 [-]: GETGLOBAL R7 K6        ; R7 := mMovie
 16 [-]: GETTABLE  R8 R5 K2     ; R8 := R5["mClipName"]
 17 [-]: LOADK     R9 K7        ; R9 := ".swapDepths"
 18 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 19 [-]: GETTABLE  R9 R5 K4     ; R9 := R5["mOrigDepth"]
 20 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 21 [-]: SETTABLE  R5 K4 K3     ; R5["mOrigDepth"] := nil
 22 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0["0x2F8DF1C6"]
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: MOVE      R9 R2        ; R9 := R2
 25 [-]: MOVE      R10 R3       ; R10 := R3
 26 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 27 [-]: SETTABLE  R0 K9 K10    ; R0["mHasDoneFirstRedraw"] := "0x1"
 28 [-]: SELF      R6 R0 K0     ; R7 := R0; R6 := R0["0x97B489B5"]
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: MOVE      R5 R6        ; R5 := R6
 31 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 32 [-]: MOVE      R7 R5        ; R7 := R5
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 66
 35 [-]: JMP       66           ; PC := 66
 36 [-]: GETTABLE  R6 R5 K2     ; R6 := R5["mClipName"]
 37 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 66
 38 [-]: JMP       66           ; PC := 66
 39 [-]: GETTABLE  R6 R5 K4     ; R6 := R5["mOrigDepth"]
 40 [-]: EQ        0 R6 K3      ; if R6 ~= nil then PC := 66
 41 [-]: JMP       66           ; PC := 66
 42 [-]: GETGLOBAL R6 K11       ; R6 := 0xF595ADDE
 43 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 44 [-]: GETGLOBAL R8 K6        ; R8 := mMovie
 45 [-]: GETTABLE  R9 R5 K2     ; R9 := R5["mClipName"]
 46 [-]: LOADK     R10 K12      ; R10 := ".getDepth"
 47 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 48 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 49 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 50 [-]: SETTABLE  R5 K4 R6     ; R5["mOrigDepth"] := R6
 51 [-]: GETGLOBAL R6 K5        ; R6 := 0x8C64AFA9
 52 [-]: GETGLOBAL R7 K6        ; R7 := mMovie
 53 [-]: GETTABLE  R8 R5 K2     ; R8 := R5["mClipName"]
 54 [-]: LOADK     R9 K7        ; R9 := ".swapDepths"
 55 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 56 [-]: GETUPVAL  R9 U0        ; R9 := U0
 57 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["mInitialDepth"]
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["mTopClipIndexUsed"]
 60 [-]: ADD       R10 R10 K15  ; R10 := R10 + 1
 61 [-]: GETUPVAL  R11 U0       ; R11 := U0
 62 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["mDepthDirection"]
 63 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
 64 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
 65 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 66 [-]: RETURN    R0 1         ; return 


; Function #57.15:
;
; Name:            
; Defined at line: 2343
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mFilterBy"]
  4 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: CLOSURE   R2 0         ; R2 := closure(Function #57.15.1)
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0["0x6BD5E87E"]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: MOVE      R7 R2        ; R7 := R2
 13 [-]: MOVE      R8 R3        ; R8 := R3
 14 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 15 [-]: RETURN    R0 1         ; return 


; Function #57.15.1:
;
; Name:            
; Defined at line: 2347
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #57.16:
;
; Name:            
; Defined at line: 2353
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0xAE699060"]
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: SUB       R3 R3 K2     ; R3 := R3 - 1
  6 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mRowSeparation"]
  7 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
  8 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
  9 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mSmoothScroll"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0["0x591EC043"]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: MOD       R3 R3 K2     ; R3 := R3 % 1
 15 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mRowSeparation"]
 16 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 17 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #57.17:
;
; Name:            
; Defined at line: 2361
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialY"]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0["0x9FDF9DDA"]
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: SUB       R3 R3 K2     ; R3 := R3 - 1
  6 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mColumnSeparation"]
  7 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
  8 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: RETURN    R0 1         ; return 


; Function #57.18:
;
; Name:            
; Defined at line: 2366
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLowerSearchTerm"]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mLowerSearchTerm"]
 12 [-]: EQ        0 R1 K3      ; if R1 ~= "" then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: MOVE      R1 R0        ; R1 := R0
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["SearchCache"]
 18 [-]: EQ        1 R1 K3      ; if R1 == "" then PC := 31
 19 [-]: JMP       31           ; PC := 31
 20 [-]: GETGLOBAL R1 K5        ; R1 := string
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xDE44F664"]
 22 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["SearchCache"]
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mLowerSearchTerm"]
 25 [-]: LOADK     R4 K7        ; R4 := 1
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 28 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R1 R0        ; R1 := R0
 31 [-]: MOVE      R1 R1        ; R1 := R1
 32 [-]: MOVE      R2 R1        ; R2 := R1
 33 [-]: RETURN    R2 2         ; return R2
 34 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2457
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K2        ; R1 := 0
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6F2E05FD"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x3329FBFF"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: LOADK     R3 K2        ; R3 := 0
 14 [-]: LOADK     R4 K5        ; R4 := 1
 15 [-]: LEN       R5 R2        ; R5 := # R2
 16 [-]: LOADK     R6 K5        ; R6 := 1
 17 [-]: FORPREP   R4 33        ; R4 -= R6; PC := 33
 18 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 19 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mItemType"]
 20 [-]: GETGLOBAL R9 K0        ; R9 := 0x400E7765
 21 [-]: MOVE      R10 R8       ; R10 := R8
 22 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 23 [-]: TEST      R9 1         ; if R9 then PC := 33
 24 [-]: JMP       33           ; PC := 33
 25 [-]: SELF      R9 R8 K7     ; R10 := R8; R9 := R8["0x8B598ED4"]
 26 [-]: MOVE      R11 R0       ; R11 := R0
 27 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 28 [-]: TEST      R9 0         ; if not R9 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R9 R2 R7     ; R9 := R2[R7]
 31 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mItemCount"]
 32 [-]: ADD       R3 R3 R9     ; R3 := R3 + R9
 33 [-]: FORLOOP   R4 18        ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
 34 [-]: RETURN    R3 2         ; return R3
 35 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2475
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: NEWTABLE  R1 3 0       ; R1 := {}
  7 [-]: LOADK     R2 K1        ; R2 := 1
  8 [-]: LOADK     R3 K1        ; R3 := 1
  9 [-]: LOADNIL   R4 R4        ; R4 := nil
 10 [-]: SETLIST   R1 3 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 3
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: NEWTABLE  R1 3 0       ; R1 := {}
 13 [-]: LOADK     R2 K1        ; R2 := 1
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: MOVE      R4 R0        ; R4 := R0
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: SETLIST   R1 3 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 3
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2482
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalState"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ARSENAL_STATE_PVP"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["item"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R0 K6        ; R0 := mMovie
 19 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x1C19D966"]
 20 [-]: LOADK     R2 K8        ; R2 := "LevelUpgrades"
 21 [-]: LOADK     R3 K9        ; R3 := "_visible"
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["info"]
 27 [-]: GETGLOBAL R1 K11       ; R1 := gGameConfig
 28 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x6BA57B8E"]
 29 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["mItemType"]
 30 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mPolarized"]
 31 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 32 [-]: GETGLOBAL R2 K15       ; R2 := math
 33 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["0x65F9712A"]
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: GETGLOBAL R4 K11       ; R4 := gGameConfig
 36 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4["0x9E8E66BA"]
 37 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mXP"]
 38 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mItemType"]
 39 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 40 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 41 [-]: GETUPVAL  R3 U0        ; R3 := U0
 42 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["item"]
 43 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x8B598ED4"]
 44 [-]: GETGLOBAL R5 K20       ; R5 := 0x2C00D429
 45 [-]: LOADK     R6 K21       ; R6 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
 46 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 47 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 48 [-]: TEST      R3 1         ; if R3 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: LT        1 K22 R2     ; if 30 < R2 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R3 R0        ; R3 := R0
 53 [-]: MOVE      R3 R1        ; R3 := R1
 54 [-]: EQ        1 R2 K23     ; if R2 == 0 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: TEST      R3 1         ; if R3 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: GETGLOBAL R4 K6        ; R4 := mMovie
 59 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4["0x1C19D966"]
 60 [-]: LOADK     R6 K8        ; R6 := "LevelUpgrades"
 61 [-]: LOADK     R7 K9        ; R7 := "_visible"
 62 [-]: MOVE      R8 R0        ; R8 := R0
 63 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 64 [-]: RETURN    R0 1         ; return 
 65 [-]: GETGLOBAL R4 K24       ; R4 := 0xEC274B1A
 66 [-]: LOADK     R5 K25       ; R5 := "Sentient"
 67 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 68 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 69 [-]: GETUPVAL  R6 U0        ; R6 := U0
 70 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["item"]
 71 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6["0xD3F0A159"]
 72 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 73 [-]: LOADK     R7 K27       ; R7 := 1
 74 [-]: GETGLOBAL R8 K15       ; R8 := math
 75 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["0x65F9712A"]
 76 [-]: ADD       R9 R2 K27    ; R9 := R2 + 1
 77 [-]: LEN       R10 R6       ; R10 := # R6
 78 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 79 [-]: LOADK     R9 K27       ; R9 := 1
 80 [-]: FORPREP   R7 220       ; R7 -= R9; PC := 220
 81 [-]: MOVE      R11 R0       ; R11 := R0
 82 [-]: GETTABLE  R12 R6 R10   ; R12 := R6[R10]
 83 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12["0xE5DB9C52"]
 84 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 85 [-]: LOADK     R13 K27      ; R13 := 1
 86 [-]: LEN       R14 R5       ; R14 := # R5
 87 [-]: LOADK     R15 K27      ; R15 := 1
 88 [-]: FORPREP   R13 103      ; R13 -= R15; PC := 103
 89 [-]: GETTABLE  R17 R5 R16   ; R17 := R5[R16]
 90 [-]: GETTABLE  R17 R17 K29  ; R17 := R17["Type"]
 91 [-]: EQ        0 R12 R17    ; if R12 ~= R17 then PC := 103
 92 [-]: JMP       103          ; PC := 103
 93 [-]: GETTABLE  R17 R5 R16   ; R17 := R5[R16]
 94 [-]: GETTABLE  R18 R5 R16   ; R18 := R5[R16]
 95 [-]: GETTABLE  R18 R18 K30  ; R18 := R18["Value"]
 96 [-]: GETTABLE  R19 R6 R10   ; R19 := R6[R10]
 97 [-]: SELF      R19 R19 K31  ; R20 := R19; R19 := R19["0xADD560BB"]
 98 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 99 [-]: ADD       R18 R18 R19  ; R18 := R18 + R19
100 [-]: SETTABLE  R17 K30 R18  ; R17["Value"] := R18
101 [-]: MOVE      R11 R1       ; R11 := R1
102 [-]: JMP       104          ; PC := 104
103 [-]: FORLOOP   R13 89       ; R13 += R15; if R13 <= R14 then begin PC := 89; R16 := R13 end
104 [-]: TEST      R11 1        ; if R11 then PC := 220
105 [-]: JMP       220          ; PC := 220
106 [-]: GETGLOBAL R17 K32      ; R17 := Game
107 [-]: GETTABLE  R17 R17 K33  ; R17 := R17["NONE"]
108 [-]: EQ        1 R12 R17    ; if R12 == R17 then PC := 220
109 [-]: JMP       220          ; PC := 220
110 [-]: NEWTABLE  R17 0 4      ; R17 := {}
111 [-]: SETTABLE  R17 K34 K35  ; R17["Name"] := ""
112 [-]: SETTABLE  R17 K29 R12  ; R17["Type"] := R12
113 [-]: GETTABLE  R18 R6 R10   ; R18 := R6[R10]
114 [-]: SELF      R18 R18 K37  ; R19 := R18; R18 := R18["0xC7184869"]
115 [-]: CALL      R18 2 2      ; R18 := R18(R19)
116 [-]: SETTABLE  R17 K36 R18  ; R17["OpType"] := R18
117 [-]: GETTABLE  R18 R6 R10   ; R18 := R6[R10]
118 [-]: SELF      R18 R18 K31  ; R19 := R18; R18 := R18["0xADD560BB"]
119 [-]: CALL      R18 2 2      ; R18 := R18(R19)
120 [-]: SETTABLE  R17 K30 R18  ; R17["Value"] := R18
121 [-]: GETGLOBAL R18 K32      ; R18 := Game
122 [-]: GETTABLE  R18 R18 K38  ; R18 := R18["AVATAR_HEALTH_MAX"]
123 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 132
124 [-]: JMP       132          ; PC := 132
125 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
126 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
127 [-]: LOADK     R20 K40      ; R20 := "/Game/AVATAR_HEALTH_MAX"
128 [-]: MOVE      R21 R0       ; R21 := R0
129 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
130 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
131 [-]: JMP       215          ; PC := 215
132 [-]: GETGLOBAL R18 K32      ; R18 := Game
133 [-]: GETTABLE  R18 R18 K41  ; R18 := R18["AVATAR_SHIELD_MAX"]
134 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 143
135 [-]: JMP       143          ; PC := 143
136 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
137 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
138 [-]: LOADK     R20 K42      ; R20 := "/Game/AVATAR_SHIELD"
139 [-]: MOVE      R21 R0       ; R21 := R0
140 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
141 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
142 [-]: JMP       215          ; PC := 215
143 [-]: GETGLOBAL R18 K32      ; R18 := Game
144 [-]: GETTABLE  R18 R18 K43  ; R18 := R18["AVATAR_POWER_MAX"]
145 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 154
146 [-]: JMP       154          ; PC := 154
147 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
148 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
149 [-]: LOADK     R20 K44      ; R20 := "/Game/AVATAR_POWER_MAX"
150 [-]: MOVE      R21 R0       ; R21 := R0
151 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
152 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
153 [-]: JMP       215          ; PC := 215
154 [-]: GETGLOBAL R18 K32      ; R18 := Game
155 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["AVATAR_HEAL_RATE"]
156 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 165
157 [-]: JMP       165          ; PC := 165
158 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
159 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
160 [-]: LOADK     R20 K46      ; R20 := "/Game/AVATAR_HEAL_RATE"
161 [-]: MOVE      R21 R0       ; R21 := R0
162 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
163 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
164 [-]: JMP       215          ; PC := 215
165 [-]: GETGLOBAL R18 K32      ; R18 := Game
166 [-]: GETTABLE  R18 R18 K47  ; R18 := R18["AVATAR_ARMOUR"]
167 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 176
168 [-]: JMP       176          ; PC := 176
169 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
170 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
171 [-]: LOADK     R20 K48      ; R20 := "/Game/AVATAR_ARMOUR"
172 [-]: MOVE      R21 R0       ; R21 := R0
173 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
174 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
175 [-]: JMP       215          ; PC := 215
176 [-]: GETGLOBAL R18 K32      ; R18 := Game
177 [-]: GETTABLE  R18 R18 K49  ; R18 := R18["AVATAR_ABILITY_STRENGTH"]
178 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 187
179 [-]: JMP       187          ; PC := 187
180 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
181 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
182 [-]: LOADK     R20 K50      ; R20 := "/Game/AVATAR_ABILITY_STRENGTH"
183 [-]: MOVE      R21 R0       ; R21 := R0
184 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
185 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
186 [-]: JMP       215          ; PC := 215
187 [-]: GETGLOBAL R18 K32      ; R18 := Game
188 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["GAMEPLAY_FACTION_DAMAGE"]
189 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 198
190 [-]: JMP       198          ; PC := 198
191 [-]: GETTABLE  R18 R6 R10   ; R18 := R6[R10]
192 [-]: SELF      R18 R18 K52  ; R19 := R18; R18 := R18["0xEF1124B1"]
193 [-]: CALL      R18 2 2      ; R18 := R18(R19)
194 [-]: EQ        0 R18 R4     ; if R18 ~= R4 then PC := 198
195 [-]: JMP       198          ; PC := 198
196 [-]: SETTABLE  R17 K34 K53  ; R17["Name"] := "/Lotus/Language/Upgrades/WeaponFactionDamageSentientsDesc"
197 [-]: JMP       215          ; PC := 215
198 [-]: GETGLOBAL R18 K32      ; R18 := Game
199 [-]: GETTABLE  R18 R18 K54  ; R18 := R18["WEAPON_FORCED_PROC_CHANCE"]
200 [-]: EQ        0 R12 R18    ; if R12 ~= R18 then PC := 215
201 [-]: JMP       215          ; PC := 215
202 [-]: GETTABLE  R18 R6 R10   ; R18 := R6[R10]
203 [-]: SELF      R18 R18 K55  ; R19 := R18; R18 := R18["0xD1DDAF23"]
204 [-]: GETGLOBAL R20 K32      ; R20 := Game
205 [-]: GETTABLE  R20 R20 K56  ; R20 := R20["PT_VOID"]
206 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
207 [-]: TEST      R18 0        ; if not R18 then PC := 215
208 [-]: JMP       215          ; PC := 215
209 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
210 [-]: SELF      R18 R18 K39  ; R19 := R18; R18 := R18["0x5DB0BD4"]
211 [-]: LOADK     R20 K57      ; R20 := "/Lotus/Language/Upgrades/PT_VOID"
212 [-]: MOVE      R21 R0       ; R21 := R0
213 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
214 [-]: SETTABLE  R17 K34 R18  ; R17["Name"] := R18
215 [-]: GETGLOBAL R18 K58      ; R18 := table
216 [-]: GETTABLE  R18 R18 K59  ; R18 := R18["0xE6450C9D"]
217 [-]: MOVE      R19 R5       ; R19 := R5
218 [-]: MOVE      R20 R17      ; R20 := R17
219 [-]: CALL      R18 3 1      ; R18(R19,R20)
220 [-]: FORLOOP   R7 81        ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
221 [-]: LEN       R18 R5       ; R18 := # R5
222 [-]: EQ        0 R18 K23    ; if R18 ~= 0 then PC := 231
223 [-]: JMP       231          ; PC := 231
224 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
225 [-]: SELF      R18 R18 K7   ; R19 := R18; R18 := R18["0x1C19D966"]
226 [-]: LOADK     R20 K8       ; R20 := "LevelUpgrades"
227 [-]: LOADK     R21 K9       ; R21 := "_visible"
228 [-]: MOVE      R22 R0       ; R22 := R0
229 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
230 [-]: RETURN    R0 1         ; return 
231 [-]: GETGLOBAL R18 K6       ; R18 := mMovie
232 [-]: SELF      R18 R18 K60  ; R19 := R18; R18 := R18["0x17028E8F"]
233 [-]: LOADK     R20 K61      ; R20 := "LevelUpgrades.Title.text"
234 [-]: LOADK     R21 K62      ; R21 := "/Lotus/Language/Menu/Upgrade_LvlUpgrades"
235 [-]: CALL      R18 4 1      ; R18(R19,R20,R21)
236 [-]: GETGLOBAL R18 K58      ; R18 := table
237 [-]: GETTABLE  R18 R18 K63  ; R18 := R18["0xA5C58010"]
238 [-]: MOVE      R19 R5       ; R19 := R5
239 [-]: CLOSURE   R20 0        ; R20 := closure(Function #60.1)
240 [-]: CALL      R18 3 1      ; R18(R19,R20)
241 [-]: GETGLOBAL R18 K4       ; R18 := 0x400E7765
242 [-]: GETUPVAL  R19 U1       ; R19 := U1
243 [-]: CALL      R18 2 2      ; R18 := R18(R19)
244 [-]: TEST      R18 0        ; if not R18 then PC := 262
245 [-]: JMP       262          ; PC := 262
246 [-]: GETGLOBAL R18 K64      ; R18 := 0x329BDC44
247 [-]: LOADK     R19 K65      ; R19 := "EE.Interface.Components.List"
248 [-]: CALL      R18 2 2      ; R18 := R18(R19)
249 [-]: GETTABLE  R19 R18 K66  ; R19 := R18["0xB40DEC3F"]
250 [-]: GETGLOBAL R20 K6       ; R20 := mMovie
251 [-]: LOADK     R21 K67      ; R21 := "LevelUpgrades.Upgrade"
252 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
253 [-]: MOVE      R19 R1       ; R19 := R1
254 [-]: GETUPVAL  R19 U1       ; R19 := U1
255 [-]: SETTABLE  R19 K68 K23  ; R19["mForcedHorizontalSeparation"] := 0
256 [-]: GETUPVAL  R19 U1       ; R19 := U1
257 [-]: SETTABLE  R19 K69 K70  ; R19["mForcedVerticalSeparation"] := 20
258 [-]: GETUPVAL  R19 U1       ; R19 := U1
259 [-]: CLOSURE   R20 1        ; R20 := closure(Function #60.2)
260 [-]: GETUPVAL  R0 U2        ; R0 := U2
261 [-]: SETTABLE  R19 K71 R20  ; R19["mElementDrawCallback"] := R20
262 [-]: GETUPVAL  R19 U1       ; R19 := U1
263 [-]: SELF      R19 R19 K72  ; R20 := R19; R19 := R19["0x7CF71D03"]
264 [-]: MOVE      R21 R1       ; R21 := R1
265 [-]: MOVE      R22 R1       ; R22 := R1
266 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
267 [-]: LOADK     R19 K27      ; R19 := 1
268 [-]: LEN       R20 R5       ; R20 := # R5
269 [-]: LOADK     R21 K27      ; R21 := 1
270 [-]: FORPREP   R19 288      ; R19 -= R21; PC := 288
271 [-]: GETUPVAL  R23 U1       ; R23 := U1
272 [-]: SELF      R23 R23 K73  ; R24 := R23; R23 := R23["0xA77DA8EE"]
273 [-]: NEWTABLE  R25 0 4      ; R25 := {}
274 [-]: GETTABLE  R26 R5 R22   ; R26 := R5[R22]
275 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["Name"]
276 [-]: SETTABLE  R25 K34 R26  ; R25["Name"] := R26
277 [-]: GETTABLE  R26 R5 R22   ; R26 := R5[R22]
278 [-]: GETTABLE  R26 R26 K36  ; R26 := R26["OpType"]
279 [-]: SETTABLE  R25 K36 R26  ; R25["OpType"] := R26
280 [-]: GETTABLE  R26 R5 R22   ; R26 := R5[R22]
281 [-]: GETTABLE  R26 R26 K30  ; R26 := R26["Value"]
282 [-]: SETTABLE  R25 K30 R26  ; R25["Value"] := R26
283 [-]: GETTABLE  R26 R5 R22   ; R26 := R5[R22]
284 [-]: GETTABLE  R26 R26 K29  ; R26 := R26["Type"]
285 [-]: SETTABLE  R25 K29 R26  ; R25["Type"] := R26
286 [-]: MOVE      R26 R1       ; R26 := R1
287 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
288 [-]: FORLOOP   R19 271      ; R19 += R21; if R19 <= R20 then begin PC := 271; R22 := R19 end
289 [-]: GETUPVAL  R23 U1       ; R23 := U1
290 [-]: SELF      R23 R23 K74  ; R24 := R23; R23 := R23["0x6470BAF4"]
291 [-]: LOADNIL   R25 R26      ; R25 := R26 := nil
292 [-]: MOVE      R27 R1       ; R27 := R1
293 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
294 [-]: RETURN    R0 1         ; return 


; Function #60.1:
;
; Name:            
; Defined at line: 2548
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Name"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Name"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #60.2:
;
; Name:            
; Defined at line: 2558
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
  3 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Value"]
  4 [-]: LT        1 K2 R2      ; if 0 < R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: LOADK     R3 K3        ; R3 := "+"
  9 [-]: LOADK     R4 K4        ; R4 := "-"
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x7E197415"]
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["Value"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["OpType"]
 16 [-]: GETGLOBAL R4 K7        ; R4 := Game
 17 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["STACKING_MULTIPLY"]
 18 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["0x7E197415"]
 22 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Value"]
 23 [-]: MUL       R4 R4 K9     ; R4 := R4 * 100
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: MOVE      R2 R3        ; R2 := R3
 26 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["Type"]
 27 [-]: GETGLOBAL R4 K7        ; R4 := Game
 28 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["GAMEPLAY_FACTION_DAMAGE"]
 29 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: LOADK     R4 K12       ; R4 := " "
 33 [-]: GETGLOBAL R5 K13       ; R5 := mMovie
 34 [-]: SELF      R5 R5 K14    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 35 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["Name"]
 36 [-]: MOVE      R8 R0        ; R8 := R0
 37 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 38 [-]: SETTABLE  R9 K16 R2    ; R9["val"] := R2
 39 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 40 [-]: CONCAT    R1 R3 R5     ; R1 := R3 .. R4 .. R5
 41 [-]: JMP       54           ; PC := 54
 42 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["Type"]
 43 [-]: GETGLOBAL R4 K7        ; R4 := Game
 44 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["WEAPON_FORCED_PROC_CHANCE"]
 45 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: GETTABLE  R1 R0 K15    ; R1 := R0["Name"]
 48 [-]: JMP       54           ; PC := 54
 49 [-]: MOVE      R3 R1        ; R3 := R1
 50 [-]: MOVE      R4 R2        ; R4 := R2
 51 [-]: LOADK     R5 K18       ; R5 := "% "
 52 [-]: GETTABLE  R6 R0 K15    ; R6 := R0["Name"]
 53 [-]: CONCAT    R1 R3 R6     ; R1 := R3 .. R4 .. R5 .. R6
 54 [-]: GETGLOBAL R3 K13       ; R3 := mMovie
 55 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x880196A7"]
 56 [-]: GETTABLE  R5 R0 K20    ; R5 := R0["mClipName"]
 57 [-]: LOADK     R6 K21       ; R6 := "Label"
 58 [-]: LOADK     R7 K22       ; R7 := "text"
 59 [-]: MOVE      R8 R1        ; R8 := R1
 60 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 61 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2587
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: LOADK     R1 K0        ; R1 := 0
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: CALL      R1 1 1       ; R1()
  7 [-]: GETUPVAL  R1 U3        ; R1 := U3
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: TEST      R0 0         ; if not R0 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R1 U4        ; R1 := U4
 12 [-]: GETUPVAL  R2 U5        ; R2 := U5
 13 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["SELECTING_CARD"]
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2598
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5DB0BD4"]
  3 [-]: LOADK     R2 K2        ; R2 := "/Lotus/Language/Menu/Loadout_UpgradeSystemTitleRanked"
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: LOADK     R1 K4        ; R1 := ""
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["info"]
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mItemName"]
 16 [-]: EQ        1 R2 K4      ; if R2 == "" then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: GETGLOBAL R2 K7        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x639C642A"]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["info"]
 22 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mItemName"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: MOVE      R1 R2        ; R1 := R2
 25 [-]: JMP       40           ; PC := 40
 26 [-]: GETGLOBAL R2 K7        ; R2 := string
 27 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x639C642A"]
 28 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 29 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 30 [-]: GETGLOBAL R5 K9        ; R5 := 0x9FAED6BC
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["storeItem"]
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0x616C74B6"]
 34 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 35 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 36 [-]: MOVE      R6 R1        ; R6 := R1
 37 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 38 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 39 [-]: MOVE      R1 R2        ; R1 := R2
 40 [-]: GETGLOBAL R2 K12       ; R2 := gGameConfig
 41 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x6BA57B8E"]
 42 [-]: GETUPVAL  R4 U0        ; R4 := U0
 43 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["info"]
 44 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mItemType"]
 45 [-]: GETUPVAL  R5 U0        ; R5 := U0
 46 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["info"]
 47 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mPolarized"]
 48 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 49 [-]: GETGLOBAL R3 K16       ; R3 := math
 50 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["0x65F9712A"]
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: GETGLOBAL R5 K12       ; R5 := gGameConfig
 53 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5["0x9E8E66BA"]
 54 [-]: GETUPVAL  R7 U0        ; R7 := U0
 55 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["info"]
 56 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mXP"]
 57 [-]: GETUPVAL  R8 U0        ; R8 := U0
 58 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["info"]
 59 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mItemType"]
 60 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 61 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 62 [-]: GETGLOBAL R4 K20       ; R4 := _T
 63 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["upgradeItemLot"]
 64 [-]: GETGLOBAL R5 K22       ; R5 := Lotus_Game
 65 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["LOT_DATAKNIFE"]
 66 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 77
 67 [-]: JMP       77           ; PC := 77
 68 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 69 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 70 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/Menu/Loadout_UpgradeSystemTitleNoRank"
 71 [-]: MOVE      R7 R0        ; R7 := R0
 72 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 73 [-]: SETTABLE  R8 K25 R1    ; R8["ITEM"] := R1
 74 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 75 [-]: MOVE      R0 R4        ; R0 := R4
 76 [-]: JMP       139          ; PC := 139
 77 [-]: EQ        0 R3 K26     ; if R3 ~= 0 then PC := 94
 78 [-]: JMP       94           ; PC := 94
 79 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 80 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 81 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Language/Ranks/Rank0"
 82 [-]: MOVE      R7 R0        ; R7 := R0
 83 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 84 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 85 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 86 [-]: LOADK     R7 K28       ; R7 := "/Lotus/Language/Menu/Loadout_UpgradeSystemTitleUnranked"
 87 [-]: MOVE      R8 R0        ; R8 := R0
 88 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 89 [-]: SETTABLE  R9 K25 R1    ; R9["ITEM"] := R1
 90 [-]: SETTABLE  R9 K29 R4    ; R9["RANK"] := R4
 91 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 92 [-]: MOVE      R0 R5        ; R0 := R5
 93 [-]: JMP       139          ; PC := 139
 94 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 95 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 96 [-]: LOADK     R7 K30       ; R7 := "/Lotus/Language/Menu/Loadout_UpgradeSFormattedRank"
 97 [-]: MOVE      R8 R0        ; R8 := R0
 98 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 99 [-]: SETTABLE  R9 K29 R3    ; R9["RANK"] := R3
100 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
101 [-]: GETGLOBAL R6 K12       ; R6 := gGameConfig
102 [-]: SELF      R6 R6 K31    ; R7 := R6; R6 := R6["0x3070974D"]
103 [-]: GETUPVAL  R8 U0        ; R8 := U0
104 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["info"]
105 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mItemType"]
106 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
107 [-]: EQ        0 R3 R6      ; if R3 ~= R6 then PC := 130
108 [-]: JMP       130          ; PC := 130
109 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
110 [-]: GETUPVAL  R7 U0        ; R7 := U0
111 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["info"]
112 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mFocusLens"]
113 [-]: CALL      R6 2 2       ; R6 := R6(R7)
114 [-]: TEST      R6 1         ; if R6 then PC := 130
115 [-]: JMP       130          ; PC := 130
116 [-]: GETUPVAL  R6 U1        ; R6 := U1
117 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["0xC919C32B"]
118 [-]: GETUPVAL  R7 U0        ; R7 := U0
119 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["info"]
120 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["mFocusLens"]
121 [-]: CALL      R6 2 2       ; R6 := R6(R7)
122 [-]: MOVE      R7 R5        ; R7 := R5
123 [-]: LOADK     R8 K34       ; R8 := " "
124 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
125 [-]: SELF      R9 R9 K1     ; R10 := R9; R9 := R9["0x5DB0BD4"]
126 [-]: GETTABLE  R11 R6 K35   ; R11 := R6["LensTag"]
127 [-]: MOVE      R12 R1       ; R12 := R1
128 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
129 [-]: CONCAT    R5 R7 R9     ; R5 := R7 .. R8 .. R9
130 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
131 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7["0x5DB0BD4"]
132 [-]: LOADK     R9 K2        ; R9 := "/Lotus/Language/Menu/Loadout_UpgradeSystemTitleRanked"
133 [-]: MOVE      R10 R0       ; R10 := R0
134 [-]: NEWTABLE  R11 0 2      ; R11 := {}
135 [-]: SETTABLE  R11 K25 R1   ; R11["ITEM"] := R1
136 [-]: SETTABLE  R11 K29 R5   ; R11["RANK"] := R5
137 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
138 [-]: MOVE      R0 R7        ; R0 := R7
139 [-]: GETGLOBAL R7 K20       ; R7 := _T
140 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["ArsenalState"]
141 [-]: GETGLOBAL R8 K22       ; R8 := Lotus_Game
142 [-]: GETTABLE  R8 R8 K37    ; R8 := R8["ARSENAL_STATE_PVP"]
143 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: MOVE      R7 R0        ; R7 := R0
146 [-]: MOVE      R7 R1        ; R7 := R1
147 [-]: TEST      R7 0         ; if not R7 then PC := 158
148 [-]: JMP       158          ; PC := 158
149 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
150 [-]: SELF      R8 R8 K1     ; R9 := R8; R8 := R8["0x5DB0BD4"]
151 [-]: LOADK     R10 K38      ; R10 := "<CONCLAVE>"
152 [-]: MOVE      R11 R1       ; R11 := R1
153 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
154 [-]: LOADK     R9 K34       ; R9 := " "
155 [-]: MOVE      R10 R0       ; R10 := R0
156 [-]: LOADK     R11 K34      ; R11 := " "
157 [-]: CONCAT    R0 R8 R11    ; R0 := R8 .. R9 .. R10 .. R11
158 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
159 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x1C19D966"]
160 [-]: LOADK     R10 K40      ; R10 := "ScreenTitle.Tf"
161 [-]: LOADK     R11 K41      ; R11 := "verticalAlignment"
162 [-]: LOADK     R12 K42      ; R12 := "center"
163 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
164 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
165 [-]: SELF      R8 R8 K43    ; R9 := R8; R8 := R8["0xD6A79FE9"]
166 [-]: LOADK     R10 K40      ; R10 := "ScreenTitle.Tf"
167 [-]: LOADK     R11 K44      ; R11 := "text"
168 [-]: MOVE      R12 R0       ; R12 := R0
169 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
170 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
171 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x1C19D966"]
172 [-]: LOADK     R10 K40      ; R10 := "ScreenTitle.Tf"
173 [-]: LOADK     R11 K45      ; R11 := "tintIcons"
174 [-]: MOVE      R12 R1       ; R12 := R1
175 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
176 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
177 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x1C19D966"]
178 [-]: LOADK     R10 K40      ; R10 := "ScreenTitle.Tf"
179 [-]: LOADK     R11 K46      ; R11 := "textColor"
180 [-]: GETUPVAL  R12 U2       ; R12 := U2
181 [-]: GETTABLE  R12 R12 K47  ; R12 := R12["0xF81722A2"]
182 [-]: MOVE      R13 R7       ; R13 := R7
183 [-]: GETUPVAL  R14 U3       ; R14 := U3
184 [-]: GETGLOBAL R15 K48      ; R15 := _G
185 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["UIColor_White"]
186 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
187 [-]: CALL      R8 0 1       ; R8(R9,...)
188 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
189 [-]: SELF      R8 R8 K39    ; R9 := R8; R8 := R8["0x1C19D966"]
190 [-]: LOADK     R10 K50      ; R10 := "ScreenTitle.LevelStatus"
191 [-]: LOADK     R11 K51      ; R11 := "_color"
192 [-]: GETUPVAL  R12 U2       ; R12 := U2
193 [-]: GETTABLE  R12 R12 K47  ; R12 := R12["0xF81722A2"]
194 [-]: MOVE      R13 R7       ; R13 := R7
195 [-]: GETUPVAL  R14 U3       ; R14 := U3
196 [-]: GETGLOBAL R15 K48      ; R15 := _G
197 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["UIColor_White"]
198 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
199 [-]: CALL      R8 0 1       ; R8(R9,...)
200 [-]: GETGLOBAL R8 K12       ; R8 := gGameConfig
201 [-]: SELF      R8 R8 K31    ; R9 := R8; R8 := R8["0x3070974D"]
202 [-]: LOADNIL   R10 R10      ; R10 := nil
203 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
204 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 210
205 [-]: JMP       210          ; PC := 210
206 [-]: GETUPVAL  R8 U4        ; R8 := U4
207 [-]: LT        1 K26 R8     ; if 0 < R8 then PC := 210
208 [-]: JMP       210          ; PC := 210
209 [-]: MOVE      R8 R0        ; R8 := R0
210 [-]: MOVE      R8 R1        ; R8 := R1
211 [-]: GETGLOBAL R9 K0        ; R9 := mMovie
212 [-]: SELF      R9 R9 K39    ; R10 := R9; R9 := R9["0x1C19D966"]
213 [-]: LOADK     R11 K50      ; R11 := "ScreenTitle.LevelStatus"
214 [-]: LOADK     R12 K52      ; R12 := "_visible"
215 [-]: MOVE      R13 R8       ; R13 := R8
216 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
217 [-]: TEST      R8 0         ; if not R8 then PC := 253
218 [-]: JMP       253          ; PC := 253
219 [-]: GETGLOBAL R9 K53       ; R9 := 0x8C64AFA9
220 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
221 [-]: LOADK     R11 K54      ; R11 := "ScreenTitle.LevelStatus.gotoAndStop"
222 [-]: GETUPVAL  R12 U2       ; R12 := U2
223 [-]: GETTABLE  R12 R12 K47  ; R12 := R12["0xF81722A2"]
224 [-]: GETUPVAL  R13 U4       ; R13 := U4
225 [-]: LT        1 K26 R13    ; if 0 < R13 then PC := 228
226 [-]: JMP       228          ; PC := 228
227 [-]: MOVE      R13 R0       ; R13 := R0
228 [-]: MOVE      R13 R1       ; R13 := R1
229 [-]: LOADK     R14 K55      ; R14 := "Forma"
230 [-]: LOADK     R15 K56      ; R15 := "Max"
231 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
232 [-]: CALL      R9 0 1       ; R9(R10,...)
233 [-]: GETGLOBAL R9 K57       ; R9 := 0xF595ADDE
234 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
235 [-]: SELF      R10 R10 K58  ; R11 := R10; R10 := R10["0x6B7B470B"]
236 [-]: LOADK     R12 K40      ; R12 := "ScreenTitle.Tf"
237 [-]: LOADK     R13 K59      ; R13 := "textWidth"
238 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
239 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
240 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
241 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10["0x1C19D966"]
242 [-]: LOADK     R12 K50      ; R12 := "ScreenTitle.LevelStatus"
243 [-]: LOADK     R13 K60      ; R13 := "_x"
244 [-]: DIV       R14 R9 K61   ; R14 := R9 / 2
245 [-]: ADD       R14 R14 K62  ; R14 := R14 + 10
246 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
247 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
248 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10["0x1C19D966"]
249 [-]: LOADK     R12 K63      ; R12 := "ScreenTitle.LevelStatus.FormaCount"
250 [-]: LOADK     R13 K44      ; R13 := "text"
251 [-]: GETUPVAL  R14 U4       ; R14 := U4
252 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
253 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
254 [-]: SELF      R10 R10 K64  ; R11 := R10; R10 := R10["0x17028E8F"]
255 [-]: LOADK     R12 K65      ; R12 := "TopMenu.ConfigLeft.Tf.text"
256 [-]: LOADK     R13 K66      ; R13 := "<MENU_LTRIGGER2>"
257 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
258 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
259 [-]: SELF      R10 R10 K64  ; R11 := R10; R10 := R10["0x17028E8F"]
260 [-]: LOADK     R12 K67      ; R12 := "TopMenu.ConfigRight.Tf.text"
261 [-]: LOADK     R13 K68      ; R13 := "<MENU_RTRIGGER2>"
262 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
263 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
264 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10["0x1C19D966"]
265 [-]: LOADK     R12 K69      ; R12 := "TopMenu.ConfigLeft"
266 [-]: LOADK     R13 K52      ; R13 := "_visible"
267 [-]: GETGLOBAL R14 K70      ; R14 := Engine
268 [-]: GETTABLE  R14 R14 K71  ; R14 := R14["0x9490FE70"]
269 [-]: CALL      R14 1 2      ; R14 := R14()
270 [-]: TEST      R14 1        ; if R14 then PC := 275
271 [-]: JMP       275          ; PC := 275
272 [-]: GETGLOBAL R14 K70      ; R14 := Engine
273 [-]: GETTABLE  R14 R14 K72  ; R14 := R14["0x212137BC"]
274 [-]: CALL      R14 1 2      ; R14 := R14()
275 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
276 [-]: GETGLOBAL R10 K0       ; R10 := mMovie
277 [-]: SELF      R10 R10 K39  ; R11 := R10; R10 := R10["0x1C19D966"]
278 [-]: LOADK     R12 K73      ; R12 := "TopMenu.ConfigRight"
279 [-]: LOADK     R13 K52      ; R13 := "_visible"
280 [-]: GETGLOBAL R14 K70      ; R14 := Engine
281 [-]: GETTABLE  R14 R14 K71  ; R14 := R14["0x9490FE70"]
282 [-]: CALL      R14 1 2      ; R14 := R14()
283 [-]: TEST      R14 1        ; if R14 then PC := 288
284 [-]: JMP       288          ; PC := 288
285 [-]: GETGLOBAL R14 K70      ; R14 := Engine
286 [-]: GETTABLE  R14 R14 K72  ; R14 := R14["0x212137BC"]
287 [-]: CALL      R14 1 2      ; R14 := R14()
288 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
289 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2662
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mUpgradeType"]
  2 [-]: GETGLOBAL R3 K1        ; R3 := Game
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mUpgradeType"]
  7 [-]: GETGLOBAL R3 K1        ; R3 := Game
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
  9 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 29
 10 [-]: JMP       29           ; PC := 29
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mUpgradeValue"]
 12 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mUpgradeValue"]
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mDrain"]
 16 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mDrain"]
 17 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: MOVE      R2 R1        ; R2 := R1
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mUpgradeValue"]
 23 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mUpgradeValue"]
 24 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: MOVE      R2 R1        ; R2 := R1
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mUpgradeType"]
 30 [-]: GETGLOBAL R3 K1        ; R3 := Game
 31 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
 32 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mUpgradeType"]
 35 [-]: GETGLOBAL R3 K1        ; R3 := Game
 36 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
 37 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R2 R1        ; R2 := R1
 40 [-]: RETURN    R2 2         ; return R2
 41 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mUpgradeType"]
 42 [-]: GETGLOBAL R3 K1        ; R3 := Game
 43 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
 44 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 53
 45 [-]: JMP       53           ; PC := 53
 46 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mUpgradeType"]
 47 [-]: GETGLOBAL R3 K1        ; R3 := Game
 48 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AVATAR_ABILITY"]
 49 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R2 R0        ; R2 := R0
 52 [-]: RETURN    R2 2         ; return R2
 53 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 54 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 55 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: MOVE      R2 R0        ; R2 := R0
 58 [-]: MOVE      R2 R1        ; R2 := R1
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2679
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  66

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["item"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["item"]
 14 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x2CE62326"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: MOVE      R1 R2        ; R1 := R2
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 0         ; if not R2 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R1 R2 K1     ; R1 := R2["item"]
 24 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETUPVAL  R2 U1        ; R2 := U1
 31 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6F2E05FD"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 34 [-]: MOVE      R3 R2        ; R3 := R2
 35 [-]: GETGLOBAL R3 K4        ; R3 := _T
 36 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["ArsenalState"]
 37 [-]: GETGLOBAL R4 K6        ; R4 := Lotus_Game
 38 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["ARSENAL_STATE_PVP"]
 39 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R3 R0        ; R3 := R0
 42 [-]: MOVE      R3 R1        ; R3 := R1
 43 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2["0xDD769EA5"]
 44 [-]: GETGLOBAL R6 K4        ; R6 := _T
 45 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["ArsenalState"]
 46 [-]: GETGLOBAL R7 K4        ; R7 := _T
 47 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["upgradeItemCategory"]
 48 [-]: MOVE      R8 R1        ; R8 := R1
 49 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 50 [-]: LOADK     R5 K10       ; R5 := 1
 51 [-]: LEN       R6 R4        ; R6 := # R4
 52 [-]: LOADK     R7 K10       ; R7 := 1
 53 [-]: FORPREP   R5 103       ; R5 -= R7; PC := 103
 54 [-]: GETUPVAL  R9 U3        ; R9 := U3
 55 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["0x8383A1DC"]
 56 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 57 [-]: GETUPVAL  R11 U2       ; R11 := U2
 58 [-]: LEN       R11 R11      ; R11 := # R11
 59 [-]: ADD       R11 R11 K10  ; R11 := R11 + 1
 60 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 61 [-]: GETUPVAL  R10 U3       ; R10 := U3
 62 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["0x8616778F"]
 63 [-]: MOVE      R11 R9       ; R11 := R9
 64 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 65 [-]: TEST      R10 0        ; if not R10 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R10 U3       ; R10 := U3
 68 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["0x4C5DD2F4"]
 69 [-]: MOVE      R11 R9       ; R11 := R9
 70 [-]: GETUPVAL  R12 U0       ; R12 := U0
 71 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["type"]
 72 [-]: CALL      R10 3 1      ; R10(R11,R12)
 73 [-]: GETTABLE  R10 R9 K15   ; R10 := R9["mIsHidden"]
 74 [-]: TEST      R10 1        ; if R10 then PC := 103
 75 [-]: JMP       103          ; PC := 103
 76 [-]: GETUPVAL  R10 U4       ; R10 := U4
 77 [-]: EQ        0 R10 K16    ; if R10 ~= nil then PC := 89
 78 [-]: JMP       89           ; PC := 89
 79 [-]: GETUPVAL  R10 U3       ; R10 := U3
 80 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["0x9513F43A"]
 81 [-]: MOVE      R11 R2       ; R11 := R2
 82 [-]: GETUPVAL  R12 U0       ; R12 := U0
 83 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["info"]
 84 [-]: MOVE      R13 R9       ; R13 := R9
 85 [-]: LOADK     R14 K19      ; R14 := 0
 86 [-]: MOVE      R15 R3       ; R15 := R3
 87 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 88 [-]: JMP       98           ; PC := 98
 89 [-]: GETUPVAL  R10 U3       ; R10 := U3
 90 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["0x9513F43A"]
 91 [-]: MOVE      R11 R2       ; R11 := R2
 92 [-]: GETUPVAL  R12 U0       ; R12 := U0
 93 [-]: GETTABLE  R12 R12 K18  ; R12 := R12["info"]
 94 [-]: MOVE      R13 R9       ; R13 := R9
 95 [-]: GETUPVAL  R14 U4       ; R14 := U4
 96 [-]: MOVE      R15 R3       ; R15 := R3
 97 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 98 [-]: GETGLOBAL R10 K20      ; R10 := table
 99 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["0xE6450C9D"]
100 [-]: GETUPVAL  R11 U2       ; R11 := U2
101 [-]: MOVE      R12 R9       ; R12 := R9
102 [-]: CALL      R10 3 1      ; R10(R11,R12)
103 [-]: FORLOOP   R5 54        ; R5 += R7; if R5 <= R6 then begin PC := 54; R8 := R5 end
104 [-]: SELF      R10 R2 K22   ; R11 := R2; R10 := R2["0xF5141AC"]
105 [-]: GETGLOBAL R12 K4       ; R12 := _T
106 [-]: GETTABLE  R12 R12 K5   ; R12 := R12["ArsenalState"]
107 [-]: GETGLOBAL R13 K4       ; R13 := _T
108 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["upgradeItemCategory"]
109 [-]: MOVE      R14 R1       ; R14 := R1
110 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
111 [-]: LOADK     R11 K10      ; R11 := 1
112 [-]: LEN       R12 R10      ; R12 := # R10
113 [-]: LOADK     R13 K10      ; R13 := 1
114 [-]: FORPREP   R11 152      ; R11 -= R13; PC := 152
115 [-]: GETUPVAL  R15 U3       ; R15 := U3
116 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["0x8383A1DC"]
117 [-]: GETTABLE  R16 R10 R14  ; R16 := R10[R14]
118 [-]: GETUPVAL  R17 U2       ; R17 := U2
119 [-]: LEN       R17 R17      ; R17 := # R17
120 [-]: ADD       R17 R17 K10  ; R17 := R17 + 1
121 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
122 [-]: GETTABLE  R16 R15 K15  ; R16 := R15["mIsHidden"]
123 [-]: TEST      R16 1        ; if R16 then PC := 152
124 [-]: JMP       152          ; PC := 152
125 [-]: GETUPVAL  R16 U4       ; R16 := U4
126 [-]: EQ        0 R16 K16    ; if R16 ~= nil then PC := 138
127 [-]: JMP       138          ; PC := 138
128 [-]: GETUPVAL  R16 U3       ; R16 := U3
129 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["0x9513F43A"]
130 [-]: MOVE      R17 R2       ; R17 := R2
131 [-]: GETUPVAL  R18 U0       ; R18 := U0
132 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["info"]
133 [-]: MOVE      R19 R15      ; R19 := R15
134 [-]: LOADK     R20 K19      ; R20 := 0
135 [-]: MOVE      R21 R3       ; R21 := R3
136 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
137 [-]: JMP       147          ; PC := 147
138 [-]: GETUPVAL  R16 U3       ; R16 := U3
139 [-]: GETTABLE  R16 R16 K17  ; R16 := R16["0x9513F43A"]
140 [-]: MOVE      R17 R2       ; R17 := R2
141 [-]: GETUPVAL  R18 U0       ; R18 := U0
142 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["info"]
143 [-]: MOVE      R19 R15      ; R19 := R15
144 [-]: GETUPVAL  R20 U4       ; R20 := U4
145 [-]: MOVE      R21 R3       ; R21 := R3
146 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
147 [-]: GETGLOBAL R16 K20      ; R16 := table
148 [-]: GETTABLE  R16 R16 K21  ; R16 := R16["0xE6450C9D"]
149 [-]: GETUPVAL  R17 U2       ; R17 := U2
150 [-]: MOVE      R18 R15      ; R18 := R15
151 [-]: CALL      R16 3 1      ; R16(R17,R18)
152 [-]: FORLOOP   R11 115      ; R11 += R13; if R11 <= R12 then begin PC := 115; R14 := R11 end
153 [-]: LOADNIL   R16 R16      ; R16 := nil
154 [-]: GETUPVAL  R17 U5       ; R17 := U5
155 [-]: CALL      R17 1 2      ; R17 := R17()
156 [-]: TEST      R17 0        ; if not R17 then PC := 231
157 [-]: JMP       231          ; PC := 231
158 [-]: GETUPVAL  R17 U0       ; R17 := U0
159 [-]: GETTABLE  R17 R17 K1   ; R17 := R17["item"]
160 [-]: SELF      R17 R17 K23  ; R18 := R17; R17 := R17["0x8E5E18C5"]
161 [-]: GETGLOBAL R19 K24      ; R19 := 0xEC274B1A
162 [-]: LOADK     R20 K25      ; R20 := "POWER_WEAPON"
163 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
164 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
165 [-]: TEST      R17 0        ; if not R17 then PC := 231
166 [-]: JMP       231          ; PC := 231
167 [-]: GETUPVAL  R17 U0       ; R17 := U0
168 [-]: GETTABLE  R17 R17 K1   ; R17 := R17["item"]
169 [-]: SELF      R17 R17 K26  ; R18 := R17; R17 := R17["0x98CC31EA"]
170 [-]: CALL      R17 2 2      ; R17 := R17(R18)
171 [-]: GETGLOBAL R18 K6       ; R18 := Lotus_Game
172 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["0xA9D5605B"]
173 [-]: CALL      R18 1 2      ; R18 := R18()
174 [-]: SELF      R19 R17 K29  ; R20 := R17; R19 := R17["0xE2B32C65"]
175 [-]: CALL      R19 2 2      ; R19 := R19(R20)
176 [-]: SETTABLE  R18 K28 R19  ; R18["mItemType"] := R19
177 [-]: SETTABLE  R18 K30 K10  ; R18["mItemCount"] := 1
178 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
179 [-]: GETGLOBAL R20 K4       ; R20 := _T
180 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["MenuSuitAvatar"]
181 [-]: CALL      R19 2 2      ; R19 := R19(R20)
182 [-]: TEST      R19 1        ; if R19 then PC := 218
183 [-]: JMP       218          ; PC := 218
184 [-]: GETGLOBAL R19 K4       ; R19 := _T
185 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["MenuSuitAvatar"]
186 [-]: SELF      R19 R19 K32  ; R20 := R19; R19 := R19["0x8DB5D01F"]
187 [-]: CALL      R19 2 2      ; R19 := R19(R20)
188 [-]: SELF      R19 R19 K33  ; R20 := R19; R19 := R19["0x6978AC59"]
189 [-]: CALL      R19 2 2      ; R19 := R19(R20)
190 [-]: GETGLOBAL R20 K0       ; R20 := 0x400E7765
191 [-]: MOVE      R21 R19      ; R21 := R19
192 [-]: CALL      R20 2 2      ; R20 := R20(R21)
193 [-]: TEST      R20 1        ; if R20 then PC := 218
194 [-]: JMP       218          ; PC := 218
195 [-]: SELF      R20 R19 K34  ; R21 := R19; R20 := R19["0x6A927D5C"]
196 [-]: GETGLOBAL R22 K4       ; R22 := _T
197 [-]: GETTABLE  R22 R22 K35  ; R22 := R22["upgradeItemSlot"]
198 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
199 [-]: GETTABLE  R21 R20 K28  ; R21 := R20["mItemType"]
200 [-]: GETUPVAL  R22 U0       ; R22 := U0
201 [-]: GETTABLE  R22 R22 K14  ; R22 := R22["type"]
202 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 218
203 [-]: JMP       218          ; PC := 218
204 [-]: GETTABLE  R21 R20 K36  ; R21 := R20["mAbilityIndex"]
205 [-]: SELF      R22 R19 K37  ; R23 := R19; R22 := R19["0x4320AD3D"]
206 [-]: CALL      R22 2 2      ; R22 := R22(R23)
207 [-]: LT        0 R21 R22    ; if R21 >= R22 then PC := 218
208 [-]: JMP       218          ; PC := 218
209 [-]: SELF      R21 R19 K38  ; R22 := R19; R21 := R19["0x1498C3B6"]
210 [-]: GETTABLE  R23 R20 K36  ; R23 := R20["mAbilityIndex"]
211 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
212 [-]: LT        0 K10 R21    ; if 1 >= R21 then PC := 218
213 [-]: JMP       218          ; PC := 218
214 [-]: SELF      R22 R17 K40  ; R23 := R17; R22 := R17["0xF59A737B"]
215 [-]: SUB       R24 R21 K10  ; R24 := R21 - 1
216 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
217 [-]: SETTABLE  R18 K39 R22  ; R18["mUpgradeFingerprint"] := R22
218 [-]: GETUPVAL  R22 U3       ; R22 := U3
219 [-]: GETTABLE  R22 R22 K11  ; R22 := R22["0x8383A1DC"]
220 [-]: MOVE      R23 R18      ; R23 := R18
221 [-]: GETUPVAL  R24 U2       ; R24 := U2
222 [-]: LEN       R24 R24      ; R24 := # R24
223 [-]: ADD       R24 R24 K10  ; R24 := R24 + 1
224 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
225 [-]: MOVE      R16 R22      ; R16 := R22
226 [-]: GETGLOBAL R22 K20      ; R22 := table
227 [-]: GETTABLE  R22 R22 K21  ; R22 := R22["0xE6450C9D"]
228 [-]: GETUPVAL  R23 U2       ; R23 := U2
229 [-]: MOVE      R24 R16      ; R24 := R16
230 [-]: CALL      R22 3 1      ; R22(R23,R24)
231 [-]: GETUPVAL  R22 U0       ; R22 := U0
232 [-]: GETTABLE  R22 R22 K18  ; R22 := R22["info"]
233 [-]: GETTABLE  R22 R22 K41  ; R22 := R22["mItemId"]
234 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["mId"]
235 [-]: NEWTABLE  R23 0 0      ; R23 := {}
236 [-]: LOADK     R24 K10      ; R24 := 1
237 [-]: GETUPVAL  R25 U2       ; R25 := U2
238 [-]: LEN       R25 R25      ; R25 := # R25
239 [-]: LOADK     R26 K10      ; R26 := 1
240 [-]: FORPREP   R24 252      ; R24 -= R26; PC := 252
241 [-]: GETUPVAL  R28 U2       ; R28 := U2
242 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
243 [-]: GETTABLE  R29 R28 K43  ; R29 := R28["mInstalled"]
244 [-]: GETTABLE  R29 R29 R22  ; R29 := R29[R22]
245 [-]: EQ        1 R29 K16    ; if R29 == nil then PC := 252
246 [-]: JMP       252          ; PC := 252
247 [-]: GETGLOBAL R29 K20      ; R29 := table
248 [-]: GETTABLE  R29 R29 K21  ; R29 := R29["0xE6450C9D"]
249 [-]: MOVE      R30 R23      ; R30 := R23
250 [-]: MOVE      R31 R28      ; R31 := R28
251 [-]: CALL      R29 3 1      ; R29(R30,R31)
252 [-]: FORLOOP   R24 241      ; R24 += R26; if R24 <= R25 then begin PC := 241; R27 := R24 end
253 [-]: NEWTABLE  R29 0 0      ; R29 := {}
254 [-]: MOVE      R29 R6       ; R29 := R6
255 [-]: NEWTABLE  R29 0 0      ; R29 := {}
256 [-]: MOVE      R29 R7       ; R29 := R7
257 [-]: LOADK     R29 K10      ; R29 := 1
258 [-]: LEN       R30 R23      ; R30 := # R23
259 [-]: LOADK     R31 K10      ; R31 := 1
260 [-]: FORPREP   R29 336      ; R29 -= R31; PC := 336
261 [-]: GETTABLE  R33 R23 R32  ; R33 := R23[R32]
262 [-]: ADD       R34 R32 K10  ; R34 := R32 + 1
263 [-]: LEN       R35 R23      ; R35 := # R23
264 [-]: LOADK     R36 K10      ; R36 := 1
265 [-]: FORPREP   R34 335      ; R34 -= R36; PC := 335
266 [-]: GETGLOBAL R38 K44      ; R38 := 0x1BF588C6
267 [-]: LOADK     R39 K19      ; R39 := 0
268 [-]: CALL      R38 2 1      ; R38(R39)
269 [-]: GETTABLE  R38 R23 R37  ; R38 := R23[R37]
270 [-]: GETTABLE  R39 R33 K45  ; R39 := R33["mUpgrade"]
271 [-]: GETTABLE  R39 R39 K28  ; R39 := R39["mItemType"]
272 [-]: GETTABLE  R40 R38 K45  ; R40 := R38["mUpgrade"]
273 [-]: GETTABLE  R40 R40 K28  ; R40 := R40["mItemType"]
274 [-]: EQ        1 R39 R40    ; if R39 == R40 then PC := 277
275 [-]: JMP       277          ; PC := 277
276 [-]: MOVE      R39 R0       ; R39 := R0
277 [-]: MOVE      R39 R1       ; R39 := R1
278 [-]: GETTABLE  R40 R33 K43  ; R40 := R33["mInstalled"]
279 [-]: GETTABLE  R40 R40 R22  ; R40 := R40[R22]
280 [-]: GETTABLE  R41 R38 K43  ; R41 := R38["mInstalled"]
281 [-]: GETTABLE  R41 R41 R22  ; R41 := R41[R22]
282 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 285
283 [-]: JMP       285          ; PC := 285
284 [-]: MOVE      R40 R0       ; R40 := R0
285 [-]: MOVE      R40 R1       ; R40 := R1
286 [-]: GETTABLE  R41 R38 K43  ; R41 := R38["mInstalled"]
287 [-]: GETTABLE  R41 R41 R22  ; R41 := R41[R22]
288 [-]: EQ        1 R41 K16    ; if R41 == nil then PC := 335
289 [-]: JMP       335          ; PC := 335
290 [-]: TEST      R39 1        ; if R39 then PC := 294
291 [-]: JMP       294          ; PC := 294
292 [-]: TEST      R40 0        ; if not R40 then PC := 335
293 [-]: JMP       335          ; PC := 335
294 [-]: TEST      R39 0        ; if not R39 then PC := 310
295 [-]: JMP       310          ; PC := 310
296 [-]: GETGLOBAL R41 K46      ; R41 := 0x93B1256B
297 [-]: LOADK     R42 K47      ; R42 := "DOUBLE INSTALL: "
298 [-]: GETTABLE  R43 R38 K45  ; R43 := R38["mUpgrade"]
299 [-]: GETTABLE  R43 R43 K28  ; R43 := R43["mItemType"]
300 [-]: SELF      R43 R43 K48  ; R44 := R43; R43 := R43["0x1B252E3C"]
301 [-]: CALL      R43 2 2      ; R43 := R43(R44)
302 [-]: LOADK     R44 K49      ; R44 := " "
303 [-]: GETTABLE  R45 R38 K45  ; R45 := R38["mUpgrade"]
304 [-]: GETTABLE  R45 R45 K41  ; R45 := R45["mItemId"]
305 [-]: SELF      R45 R45 K50  ; R46 := R45; R45 := R45["0x4CC9B24B"]
306 [-]: CALL      R45 2 2      ; R45 := R45(R46)
307 [-]: CONCAT    R42 R42 R45  ; R42 := R42 .. R43 .. R44 .. R45
308 [-]: CALL      R41 2 1      ; R41(R42)
309 [-]: JMP       328          ; PC := 328
310 [-]: TEST      R40 0        ; if not R40 then PC := 328
311 [-]: JMP       328          ; PC := 328
312 [-]: GETGLOBAL R41 K46      ; R41 := 0x93B1256B
313 [-]: LOADK     R42 K51      ; R42 := "TWO CARDS ONE SLOT @ "
314 [-]: GETTABLE  R43 R33 K43  ; R43 := R33["mInstalled"]
315 [-]: GETTABLE  R43 R43 R22  ; R43 := R43[R22]
316 [-]: LOADK     R44 K52      ; R44 := ": "
317 [-]: GETTABLE  R45 R33 K45  ; R45 := R33["mUpgrade"]
318 [-]: GETTABLE  R45 R45 K41  ; R45 := R45["mItemId"]
319 [-]: SELF      R45 R45 K50  ; R46 := R45; R45 := R45["0x4CC9B24B"]
320 [-]: CALL      R45 2 2      ; R45 := R45(R46)
321 [-]: LOADK     R46 K53      ; R46 := " and "
322 [-]: GETTABLE  R47 R38 K45  ; R47 := R38["mUpgrade"]
323 [-]: GETTABLE  R47 R47 K41  ; R47 := R47["mItemId"]
324 [-]: SELF      R47 R47 K50  ; R48 := R47; R47 := R47["0x4CC9B24B"]
325 [-]: CALL      R47 2 2      ; R47 := R47(R48)
326 [-]: CONCAT    R42 R42 R47  ; R42 := R42 .. R43 .. R44 .. R45 .. R46 .. R47
327 [-]: CALL      R41 2 1      ; R41(R42)
328 [-]: MOVE      R41 R1       ; R41 := R1
329 [-]: MOVE      R41 R8       ; R41 := R8
330 [-]: GETUPVAL  R41 U9       ; R41 := U9
331 [-]: GETTABLE  R42 R38 K45  ; R42 := R38["mUpgrade"]
332 [-]: CALL      R41 2 1      ; R41(R42)
333 [-]: GETTABLE  R41 R38 K43  ; R41 := R38["mInstalled"]
334 [-]: SETTABLE  R41 R22 K16  ; R41[R22] := nil
335 [-]: FORLOOP   R34 266      ; R34 += R36; if R34 <= R35 then begin PC := 266; R37 := R34 end
336 [-]: FORLOOP   R29 261      ; R29 += R31; if R29 <= R30 then begin PC := 261; R32 := R29 end
337 [-]: MOVE      R41 R0       ; R41 := R0
338 [-]: GETGLOBAL R42 K20      ; R42 := table
339 [-]: GETTABLE  R42 R42 K54  ; R42 := R42["0xA5C58010"]
340 [-]: GETUPVAL  R43 U2       ; R43 := U2
341 [-]: GETUPVAL  R44 U10      ; R44 := U10
342 [-]: CALL      R42 3 1      ; R42(R43,R44)
343 [-]: GETGLOBAL R42 K55      ; R42 := 0x63B09107
344 [-]: GETUPVAL  R43 U2       ; R43 := U2
345 [-]: CALL      R42 2 4      ; R42,R43,R44 := R42(R43)
346 [-]: JMP       393          ; PC := 393
347 [-]: GETTABLE  R47 R46 K45  ; R47 := R46["mUpgrade"]
348 [-]: GETTABLE  R48 R46 K45  ; R48 := R46["mUpgrade"]
349 [-]: GETTABLE  R48 R48 K28  ; R48 := R48["mItemType"]
350 [-]: GETTABLE  R49 R47 K41  ; R49 := R47["mItemId"]
351 [-]: GETTABLE  R49 R49 K42  ; R49 := R49["mId"]
352 [-]: GETGLOBAL R50 K0       ; R50 := 0x400E7765
353 [-]: MOVE      R51 R48      ; R51 := R48
354 [-]: CALL      R50 2 2      ; R50 := R50(R51)
355 [-]: MOVE      R50 R50      ; R50 := R50
356 [-]: TEST      R41 1        ; if R41 then PC := 367
357 [-]: JMP       367          ; PC := 367
358 [-]: TEST      R50 0        ; if not R50 then PC := 367
359 [-]: JMP       367          ; PC := 367
360 [-]: GETUPVAL  R51 U3       ; R51 := U3
361 [-]: GETTABLE  R51 R51 K56  ; R51 := R51["0xB151CC5A"]
362 [-]: MOVE      R52 R46      ; R52 := R46
363 [-]: CALL      R51 2 2      ; R51 := R51(R52)
364 [-]: TEST      R51 0        ; if not R51 then PC := 367
365 [-]: JMP       367          ; PC := 367
366 [-]: MOVE      R41 R1       ; R41 := R1
367 [-]: LEN       R51 R49      ; R51 := # R49
368 [-]: LT        0 K19 R51    ; if 0 >= R51 then PC := 373
369 [-]: JMP       373          ; PC := 373
370 [-]: GETUPVAL  R51 U11      ; R51 := U11
371 [-]: SETTABLE  R51 R49 R45  ; R51[R49] := R45
372 [-]: JMP       393          ; PC := 393
373 [-]: TEST      R50 0        ; if not R50 then PC := 393
374 [-]: JMP       393          ; PC := 393
375 [-]: GETUPVAL  R51 U12      ; R51 := U12
376 [-]: SELF      R52 R48 K48  ; R53 := R48; R52 := R48["0x1B252E3C"]
377 [-]: CALL      R52 2 2      ; R52 := R52(R53)
378 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
379 [-]: EQ        0 R51 K16    ; if R51 ~= nil then PC := 386
380 [-]: JMP       386          ; PC := 386
381 [-]: GETUPVAL  R51 U12      ; R51 := U12
382 [-]: SELF      R52 R48 K48  ; R53 := R48; R52 := R48["0x1B252E3C"]
383 [-]: CALL      R52 2 2      ; R52 := R52(R53)
384 [-]: SETTABLE  R51 R52 R45  ; R51[R52] := R45
385 [-]: JMP       393          ; PC := 393
386 [-]: GETGLOBAL R51 K46      ; R51 := 0x93B1256B
387 [-]: LOADK     R52 K57      ; R52 := "Multiple cards of type "
388 [-]: SELF      R53 R48 K48  ; R54 := R48; R53 := R48["0x1B252E3C"]
389 [-]: CALL      R53 2 2      ; R53 := R53(R54)
390 [-]: LOADK     R54 K58      ; R54 := " with the same ID."
391 [-]: CONCAT    R52 R52 R54  ; R52 := R52 .. R53 .. R54
392 [-]: CALL      R51 2 1      ; R51(R52)
393 [-]: TFORLOOP  R42 2        ; R45,R46 :=  R42(R43,R44); if R45 ~= nil then begin PC = 347; R44 := R45 end
394 [-]: JMP       347          ; PC := 347
395 [-]: TEST      R41 1        ; if R41 then PC := 405
396 [-]: JMP       405          ; PC := 405
397 [-]: GETGLOBAL R51 K4       ; R51 := _T
398 [-]: GETTABLE  R51 R51 K59  ; R51 := R51["upgradeItemLot"]
399 [-]: GETGLOBAL R52 K6       ; R52 := Lotus_Game
400 [-]: GETTABLE  R52 R52 K60  ; R52 := R52["LOT_DATAKNIFE"]
401 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 405
402 [-]: JMP       405          ; PC := 405
403 [-]: LOADK     R51 K61      ; R51 := 3
404 [-]: MOVE      R51 R13      ; R51 := R13
405 [-]: GETUPVAL  R51 U14      ; R51 := U14
406 [-]: MOVE      R52 R0       ; R52 := R0
407 [-]: CALL      R51 2 1      ; R51(R52)
408 [-]: GETUPVAL  R51 U15      ; R51 := U15
409 [-]: CALL      R51 1 1      ; R51()
410 [-]: GETUPVAL  R51 U16      ; R51 := U16
411 [-]: CALL      R51 1 1      ; R51()
412 [-]: EQ        1 R16 K16    ; if R16 == nil then PC := 457
413 [-]: JMP       457          ; PC := 457
414 [-]: GETUPVAL  R51 U17      ; R51 := U17
415 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["mElements"]
416 [-]: LEN       R51 R51      ; R51 := # R51
417 [-]: LOADK     R52 K10      ; R52 := 1
418 [-]: LOADK     R53 K63      ; R53 := -1
419 [-]: FORPREP   R51 456      ; R51 -= R53; PC := 456
420 [-]: GETUPVAL  R55 U17      ; R55 := U17
421 [-]: GETTABLE  R55 R55 K62  ; R55 := R55["mElements"]
422 [-]: GETTABLE  R55 R55 R54  ; R55 := R55[R54]
423 [-]: GETTABLE  R56 R55 K64  ; R56 := R55["mCardIndex"]
424 [-]: TEST      R56 0        ; if not R56 then PC := 456
425 [-]: JMP       456          ; PC := 456
426 [-]: GETTABLE  R56 R55 K64  ; R56 := R55["mCardIndex"]
427 [-]: EQ        1 R56 K63    ; if R56 == -1 then PC := 456
428 [-]: JMP       456          ; PC := 456
429 [-]: GETUPVAL  R56 U2       ; R56 := U2
430 [-]: GETTABLE  R57 R55 K64  ; R57 := R55["mCardIndex"]
431 [-]: GETTABLE  R56 R56 R57  ; R56 := R56[R57]
432 [-]: GETTABLE  R56 R56 K42  ; R56 := R56["mId"]
433 [-]: GETTABLE  R57 R16 K42  ; R57 := R16["mId"]
434 [-]: EQ        0 R56 R57    ; if R56 ~= R57 then PC := 456
435 [-]: JMP       456          ; PC := 456
436 [-]: NEWTABLE  R56 0 3      ; R56 := {}
437 [-]: SETTABLE  R56 K1 R16   ; R56["item"] := R16
438 [-]: GETUPVAL  R57 U17      ; R57 := U17
439 [-]: SETTABLE  R56 K65 R57  ; R56["grid"] := R57
440 [-]: SETTABLE  R56 K66 R55  ; R56["element"] := R55
441 [-]: GETUPVAL  R57 U18      ; R57 := U18
442 [-]: SELF      R57 R57 K67  ; R58 := R57; R57 := R57["0xD75E681A"]
443 [-]: GETUPVAL  R59 U19      ; R59 := U19
444 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
445 [-]: GETUPVAL  R58 U20      ; R58 := U20
446 [-]: GETUPVAL  R59 U18      ; R59 := U18
447 [-]: MOVE      R60 R56      ; R60 := R56
448 [-]: MOVE      R61 R57      ; R61 := R57
449 [-]: MOVE      R62 R1       ; R62 := R1
450 [-]: MOVE      R63 R1       ; R63 := R1
451 [-]: MOVE      R64 R1       ; R64 := R1
452 [-]: MOVE      R65 R1       ; R65 := R1
453 [-]: CALL      R58 8 1      ; R58(R59,R60,R61,R62,R63,R64,R65)
454 [-]: SETTABLE  R57 K68 K69  ; R57["mCardLocked"] := "0x1"
455 [-]: JMP       457          ; PC := 457
456 [-]: FORLOOP   R51 420      ; R51 += R53; if R51 <= R52 then begin PC := 420; R54 := R51 end
457 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2833
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x93B1256B
  2 [-]: LOADK     R1 K1        ; R1 := "!!"
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2837
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R0 K0        ; R0 := gGameStatsMgr
  6 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 22
  7 [-]: JMP       22           ; PC := 22
  8 [-]: GETGLOBAL R0 K0        ; R0 := gGameStatsMgr
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x47B87262"]
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0xEC274B1A
 11 [-]: LOADK     R3 K4        ; R3 := "IN_SHIP_VIEW_TIME"
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: LOADK     R3 K5        ; R3 := "EQUIPMENT_ARSENAL_MOD"
 14 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 15 [-]: GETGLOBAL R0 K0        ; R0 := gGameStatsMgr
 16 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xCFF953A5"]
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0xEC274B1A
 18 [-]: LOADK     R3 K4        ; R3 := "IN_SHIP_VIEW_TIME"
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: LOADK     R3 K7        ; R3 := "EQUIPMENT_ARSENAL_MAIN"
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: GETGLOBAL R0 K8        ; R0 := _T
 23 [-]: SETTABLE  R0 K9 K1     ; R0["gToolTip"] := nil
 24 [-]: GETGLOBAL R0 K8        ; R0 := _T
 25 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0xB92B95FB"]
 26 [-]: CALL      R0 1 1       ; R0()
 27 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2854
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2858
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mElements"]
  3 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  4 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 71
  5 [-]: JMP       71           ; PC := 71
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mElements"]
  8 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  9 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mCardIndex"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 71
 11 [-]: JMP       71           ; PC := 71
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mElements"]
 14 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 15 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mCardIndex"]
 16 [-]: EQ        1 R3 K3      ; if R3 == -1 then PC := 71
 17 [-]: JMP       71           ; PC := 71
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 19 [-]: GETUPVAL  R4 U1        ; R4 := U1
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 71
 22 [-]: JMP       71           ; PC := 71
 23 [-]: LOADK     R3 K5        ; R3 := 1
 24 [-]: GETUPVAL  R4 U2        ; R4 := U2
 25 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mElements"]
 26 [-]: LEN       R4 R4        ; R4 := # R4
 27 [-]: LOADK     R5 K5        ; R5 := 1
 28 [-]: FORPREP   R3 70        ; R3 -= R5; PC := 70
 29 [-]: GETGLOBAL R7 K6        ; R7 := 0x1BF588C6
 30 [-]: LOADK     R8 K7        ; R8 := 0
 31 [-]: CALL      R7 2 1       ; R7(R8)
 32 [-]: GETUPVAL  R7 U2        ; R7 := U2
 33 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["mElements"]
 34 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 35 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mCardIndex"]
 36 [-]: TEST      R7 0         ; if not R7 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETUPVAL  R7 U2        ; R7 := U2
 39 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["mElements"]
 40 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 41 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mCardIndex"]
 42 [-]: EQ        0 R7 K3      ; if R7 ~= -1 then PC := 70
 43 [-]: JMP       70           ; PC := 70
 44 [-]: GETUPVAL  R7 U3        ; R7 := U3
 45 [-]: GETUPVAL  R8 U0        ; R8 := U0
 46 [-]: GETTABLE  R8 R8 K0     ; R8 := R8["mElements"]
 47 [-]: GETTABLE  R8 R8 R0     ; R8 := R8[R0]
 48 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mCardIndex"]
 49 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 50 [-]: NEWTABLE  R8 0 3       ; R8 := {}
 51 [-]: SETTABLE  R8 K8 R7     ; R8["item"] := R7
 52 [-]: GETUPVAL  R9 U0        ; R9 := U0
 53 [-]: SETTABLE  R8 K9 R9     ; R8["grid"] := R9
 54 [-]: GETUPVAL  R9 U0        ; R9 := U0
 55 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["mElements"]
 56 [-]: GETTABLE  R9 R9 R0     ; R9 := R9[R0]
 57 [-]: SETTABLE  R8 K10 R9    ; R8["element"] := R9
 58 [-]: GETUPVAL  R9 U4        ; R9 := U4
 59 [-]: GETUPVAL  R10 U2       ; R10 := U2
 60 [-]: MOVE      R11 R8       ; R11 := R8
 61 [-]: GETUPVAL  R12 U2       ; R12 := U2
 62 [-]: GETTABLE  R12 R12 K0   ; R12 := R12["mElements"]
 63 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
 64 [-]: MOVE      R13 R1       ; R13 := R1
 65 [-]: MOVE      R14 R0       ; R14 := R0
 66 [-]: MOVE      R15 R0       ; R15 := R0
 67 [-]: MOVE      R16 R2       ; R16 := R2
 68 [-]: CALL      R9 8 1       ; R9(R10,R11,R12,R13,R14,R15,R16)
 69 [-]: JMP       71           ; PC := 71
 70 [-]: FORLOOP   R3 29        ; R3 += R5; if R3 <= R4 then begin PC := 29; R6 := R3 end
 71 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2873
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mElements"]
  4 [-]: LEN       R2 R2        ; R2 := # R2
  5 [-]: LOADK     R3 K0        ; R3 := 1
  6 [-]: FORPREP   R1 12        ; R1 -= R3; PC := 12
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: MOVE      R6 R4        ; R6 := R4
  9 [-]: MOVE      R7 R1        ; R7 := R1
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 12 [-]: FORLOOP   R1 7         ; R1 += R3; if R1 <= R2 then begin PC := 7; R4 := R1 end
 13 [-]: TEST      R0 1         ; if R0 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R5 U2        ; R5 := U2
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R5 2 1       ; R5(R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2883
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2889
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xD75E681A"]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K1        ; R2 := table
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xA5C58010"]
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CLOSURE   R4 0         ; R4 := closure(Function #71.1)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0[1]
 12 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 13 [-]: GETUPVAL  R4 U2        ; R4 := U2
 14 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["mCollectionIndex"]
 15 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 16 [-]: SETTABLE  R3 K4 R4     ; R3["item"] := R4
 17 [-]: GETUPVAL  R4 U3        ; R4 := U3
 18 [-]: SETTABLE  R3 K6 R4     ; R3["grid"] := R4
 19 [-]: GETUPVAL  R4 U3        ; R4 := U3
 20 [-]: SELF      R4 R4 K0     ; R5 := R4; R4 := R4["0xD75E681A"]
 21 [-]: GETTABLE  R6 R2 K5     ; R6 := R2["mCollectionIndex"]
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: SETTABLE  R3 K7 R4     ; R3["element"] := R4
 24 [-]: GETUPVAL  R4 U4        ; R4 := U4
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: MOVE      R6 R3        ; R6 := R3
 27 [-]: MOVE      R7 R1        ; R7 := R1
 28 [-]: MOVE      R8 R1        ; R8 := R1
 29 [-]: MOVE      R9 R0        ; R9 := R0
 30 [-]: MOVE      R10 R0       ; R10 := R0
 31 [-]: MOVE      R11 R1       ; R11 := R1
 32 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x490928C6"]
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R4 2 1       ; R4(R5)
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: RETURN    R4 2         ; return R4
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: RETURN    R4 2         ; return R4
 43 [-]: RETURN    R0 1         ; return 


; Function #71.1:
;
; Name:            
; Defined at line: 2892
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: JMP       62           ; PC := 62
 14 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 22 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: RETURN    R2 2         ; return R2
 26 [-]: JMP       62           ; PC := 62
 27 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 28 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 29 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 30 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 45
 31 [-]: JMP       45           ; PC := 45
 32 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 33 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 34 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 35 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 45
 36 [-]: JMP       45           ; PC := 45
 37 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 40 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: RETURN    R2 2         ; return R2
 44 [-]: JMP       62           ; PC := 62
 45 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 46 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 47 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 48 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 51 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 52 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 53 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 62
 54 [-]: JMP       62           ; PC := 62
 55 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 56 [-]: GETUPVAL  R3 U0        ; R3 := U0
 57 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 58 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: RETURN    R2 2         ; return R2
 62 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRating"]
 63 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRating"]
 64 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 84
 65 [-]: JMP       84           ; PC := 84
 66 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mRarity"]
 67 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mRarity"]
 68 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 77
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 71 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 72 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: MOVE      R2 R1        ; R2 := R1
 76 [-]: RETURN    R2 2         ; return R2
 77 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mRarity"]
 78 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mRarity"]
 79 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: MOVE      R2 R0        ; R2 := R0
 82 [-]: MOVE      R2 R1        ; R2 := R1
 83 [-]: RETURN    R2 2         ; return R2
 84 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRating"]
 85 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRating"]
 86 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: MOVE      R2 R0        ; R2 := R0
 89 [-]: MOVE      R2 R1        ; R2 := R1
 90 [-]: RETURN    R2 2         ; return R2
 91 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2925
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xD75E681A"]
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K1        ; R2 := table
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0xA5C58010"]
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CLOSURE   R4 0         ; R4 := closure(Function #72.1)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: GETTABLE  R2 R0 K3     ; R2 := R0[1]
 12 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 13 [-]: GETUPVAL  R4 U2        ; R4 := U2
 14 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["mCollectionIndex"]
 15 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 16 [-]: SETTABLE  R3 K4 R4     ; R3["item"] := R4
 17 [-]: GETUPVAL  R4 U3        ; R4 := U3
 18 [-]: SETTABLE  R3 K6 R4     ; R3["grid"] := R4
 19 [-]: GETUPVAL  R4 U3        ; R4 := U3
 20 [-]: SELF      R4 R4 K0     ; R5 := R4; R4 := R4["0xD75E681A"]
 21 [-]: GETTABLE  R6 R2 K5     ; R6 := R2["mCollectionIndex"]
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: SETTABLE  R3 K7 R4     ; R3["element"] := R4
 24 [-]: GETUPVAL  R4 U4        ; R4 := U4
 25 [-]: GETUPVAL  R5 U0        ; R5 := U0
 26 [-]: MOVE      R6 R3        ; R6 := R3
 27 [-]: MOVE      R7 R1        ; R7 := R1
 28 [-]: MOVE      R8 R1        ; R8 := R1
 29 [-]: MOVE      R9 R0        ; R9 := R0
 30 [-]: MOVE      R10 R0       ; R10 := R0
 31 [-]: MOVE      R11 R1       ; R11 := R1
 32 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0x490928C6"]
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R4 2 1       ; R4(R5)
 39 [-]: MOVE      R4 R1        ; R4 := R1
 40 [-]: RETURN    R4 2         ; return R4
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: RETURN    R4 2         ; return R4
 43 [-]: RETURN    R0 1         ; return 


; Function #72.1:
;
; Name:            
; Defined at line: 2928
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
  4 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: MOVE      R2 R1        ; R2 := R1
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: JMP       62           ; PC := 62
 14 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 22 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: MOVE      R2 R0        ; R2 := R0
 25 [-]: RETURN    R2 2         ; return R2
 26 [-]: JMP       62           ; PC := 62
 27 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 28 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 29 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 30 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 45
 31 [-]: JMP       45           ; PC := 45
 32 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 33 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 34 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 35 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 45
 36 [-]: JMP       45           ; PC := 45
 37 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 40 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: MOVE      R2 R1        ; R2 := R1
 43 [-]: RETURN    R2 2         ; return R2
 44 [-]: JMP       62           ; PC := 62
 45 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mPolarity"]
 46 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 47 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 48 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 51 [-]: GETGLOBAL R3 K1        ; R3 := Lotus_Game
 52 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AP_UNIVERSAL"]
 53 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 62
 54 [-]: JMP       62           ; PC := 62
 55 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mPolarity"]
 56 [-]: GETUPVAL  R3 U0        ; R3 := U0
 57 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mPolarity"]
 58 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: RETURN    R2 2         ; return R2
 62 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRating"]
 63 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRating"]
 64 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 84
 65 [-]: JMP       84           ; PC := 84
 66 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mRarity"]
 67 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mRarity"]
 68 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 77
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mName"]
 71 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["mName"]
 72 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: MOVE      R2 R1        ; R2 := R1
 76 [-]: RETURN    R2 2         ; return R2
 77 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mRarity"]
 78 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mRarity"]
 79 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: MOVE      R2 R0        ; R2 := R0
 82 [-]: MOVE      R2 R1        ; R2 := R1
 83 [-]: RETURN    R2 2         ; return R2
 84 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mRating"]
 85 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mRating"]
 86 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: MOVE      R2 R0        ; R2 := R0
 89 [-]: MOVE      R2 R1        ; R2 := R1
 90 [-]: RETURN    R2 2         ; return R2
 91 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2961
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: LOADK     R3 K0        ; R3 := 1
  3 [-]: LOADK     R4 K1        ; R4 := -1
  4 [-]: FORPREP   R2 74        ; R2 -= R4; PC := 74
  5 [-]: GETUPVAL  R6 U1        ; R6 := U1
  6 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 14
  7 [-]: JMP       14           ; PC := 14
  8 [-]: GETGLOBAL R6 K2        ; R6 := _T
  9 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["upgradeItemCategory"]
 10 [-]: GETGLOBAL R7 K4        ; R7 := Engine
 11 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["Item_Suits"]
 12 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: GETUPVAL  R7 U2        ; R7 := U2
 17 [-]: EQ        0 R5 R7      ; if R5 ~= R7 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETUPVAL  R7 U3        ; R7 := U3
 20 [-]: CALL      R7 1 2       ; R7 := R7()
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R7 R0        ; R7 := R0
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: GETUPVAL  R8 U4        ; R8 := U4
 25 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["0xEC4D1B6F"]
 26 [-]: GETUPVAL  R9 U5        ; R9 := U5
 27 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["type"]
 28 [-]: MOVE      R10 R5       ; R10 := R5
 29 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 30 [-]: GETUPVAL  R9 U6        ; R9 := U6
 31 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xD75E681A"]
 32 [-]: MOVE      R11 R5       ; R11 := R5
 33 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 34 [-]: GETTABLE  R10 R9 K9    ; R10 := R9["mCardIndex"]
 35 [-]: EQ        0 R10 K1     ; if R10 ~= -1 then PC := 74
 36 [-]: JMP       74           ; PC := 74
 37 [-]: TEST      R6 1         ; if R6 then PC := 74
 38 [-]: JMP       74           ; PC := 74
 39 [-]: TEST      R7 1         ; if R7 then PC := 74
 40 [-]: JMP       74           ; PC := 74
 41 [-]: TEST      R8 0         ; if not R8 then PC := 54
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETUPVAL  R10 U5       ; R10 := U5
 44 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["info"]
 45 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x17D2B78C"]
 46 [-]: GETGLOBAL R12 K12      ; R12 := Lotus_Game
 47 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["WF_UTILITY_UNLOCKED"]
 48 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 49 [-]: TEST      R10 0        ; if not R10 then PC := 74
 50 [-]: JMP       74           ; PC := 74
 51 [-]: GETTABLE  R10 R0 K14   ; R10 := R0["mIsUtility"]
 52 [-]: TEST      R10 0        ; if not R10 then PC := 74
 53 [-]: JMP       74           ; PC := 74
 54 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["mPolarity"]
 55 [-]: GETTABLE  R11 R9 K15   ; R11 := R9["mPolarity"]
 56 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: MOVE      R1 R9        ; R1 := R9
 59 [-]: JMP       75           ; PC := 75
 60 [-]: JMP       74           ; PC := 74
 61 [-]: EQ        1 R1 K16     ; if R1 == nil then PC := 73
 62 [-]: JMP       73           ; PC := 73
 63 [-]: GETTABLE  R10 R9 K15   ; R10 := R9["mPolarity"]
 64 [-]: GETGLOBAL R11 K12      ; R11 := Lotus_Game
 65 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["AP_UNIVERSAL"]
 66 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETTABLE  R10 R1 K15   ; R10 := R1["mPolarity"]
 69 [-]: GETGLOBAL R11 K12      ; R11 := Lotus_Game
 70 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["AP_UNIVERSAL"]
 71 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: MOVE      R1 R9        ; R1 := R9
 74 [-]: FORLOOP   R2 5         ; R2 += R4; if R2 <= R3 then begin PC := 5; R5 := R2 end
 75 [-]: RETURN    R1 2         ; return R1
 76 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2982
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 4       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["DT_FIRE"]
  4 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "0x1"
  5 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["DT_FREEZE"]
  7 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "0x1"
  8 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["DT_ELECTRICITY"]
 10 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "0x1"
 11 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["DT_POISON"]
 13 [-]: SETTABLE  R1 R2 K2     ; R1[R2] := "0x1"
 14 [-]: GETTABLE  R2 R1 R0     ; R2 := R1[R0]
 15 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETTABLE  R2 R1 R0     ; R2 := R1[R0]
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: JMP       22           ; PC := 22
 20 [-]: MOVE      R2 R0        ; R2 := R0
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2991
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  3 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1["0x14DB097E"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: SELF      R5 R1 K2     ; R6 := R1; R5 := R1["0x1CA37266"]
  6 [-]: LOADK     R7 K0        ; R7 := 0
  7 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  8 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["criticalChance"]
  9 [-]: GETTABLE  R7 R4 K4     ; R7 := R4["baseProcChance"]
 10 [-]: SELF      R8 R5 K5     ; R9 := R5; R8 := R5["0x8B598ED4"]
 11 [-]: GETGLOBAL R10 K6       ; R10 := gLotusWeaponProjectileFireBehaviorType
 12 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 13 [-]: TEST      R8 0         ; if not R8 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: SELF      R8 R5 K7     ; R9 := R5; R8 := R5["0xEC4CB966"]
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: MOVE      R6 R8        ; R6 := R8
 18 [-]: SELF      R8 R5 K8     ; R9 := R5; R8 := R5["0xC706F9BA"]
 19 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 20 [-]: MOVE      R7 R8        ; R7 := R8
 21 [-]: GETGLOBAL R8 K9        ; R8 := 0x6374FD98
 22 [-]: DIV       R9 R6 R7     ; R9 := R6 / R7
 23 [-]: LOADK     R10 K0       ; R10 := 0
 24 [-]: LOADK     R11 K10      ; R11 := 5
 25 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 26 [-]: GETGLOBAL R9 K9        ; R9 := 0x6374FD98
 27 [-]: DIV       R10 K11 R8   ; R10 := 1 / R8
 28 [-]: LOADK     R11 K0       ; R11 := 0
 29 [-]: LOADK     R12 K10      ; R12 := 5
 30 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 31 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 32 [-]: GETGLOBAL R11 K12      ; R11 := Game
 33 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["WEAPON_DAMAGE_AMOUNT"]
 34 [-]: SETTABLE  R3 R11 K14   ; R3[R11] := 10
 35 [-]: GETGLOBAL R11 K12      ; R11 := Game
 36 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["WEAPON_FIRE_ITERATIONS"]
 37 [-]: SETTABLE  R3 R11 K14   ; R3[R11] := 10
 38 [-]: GETGLOBAL R11 K12      ; R11 := Game
 39 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["WEAPON_MELEE_DAMAGE"]
 40 [-]: SETTABLE  R3 R11 K14   ; R3[R11] := 10
 41 [-]: GETGLOBAL R11 K12      ; R11 := Game
 42 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["WEAPON_CRIT_CHANCE"]
 43 [-]: SETTABLE  R3 R11 R8    ; R3[R11] := R8
 44 [-]: GETGLOBAL R11 K12      ; R11 := Game
 45 [-]: GETTABLE  R11 R11 K18  ; R11 := R11["WEAPON_CRIT_DAMAGE"]
 46 [-]: SETTABLE  R3 R11 R8    ; R3[R11] := R8
 47 [-]: GETGLOBAL R11 K12      ; R11 := Game
 48 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["WEAPON_MELEE_COMBO_CRIT_CHANCE"]
 49 [-]: SETTABLE  R3 R11 R8    ; R3[R11] := R8
 50 [-]: GETGLOBAL R11 K12      ; R11 := Game
 51 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["WEAPON_MELEE_COMBO_MULTIPLIER_CRIT_CHANCE"]
 52 [-]: SETTABLE  R3 R11 R8    ; R3[R11] := R8
 53 [-]: GETGLOBAL R11 K12      ; R11 := Game
 54 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["WEAPON_MELEE_COMBO_DURATION_BONUS"]
 55 [-]: DIV       R12 R8 K22   ; R12 := R8 / 20
 56 [-]: SETTABLE  R3 R11 R12   ; R3[R11] := R12
 57 [-]: GETGLOBAL R11 K12      ; R11 := Game
 58 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["WEAPON_CRIT_FIRE_RATE_BONUS"]
 59 [-]: MUL       R12 R8 K10   ; R12 := R8 * 5
 60 [-]: SETTABLE  R3 R11 R12   ; R3[R11] := R12
 61 [-]: GETGLOBAL R11 K12      ; R11 := Game
 62 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["WEAPON_MELEE_COMBO_MULTIPLIER_PROC_CHANCE"]
 63 [-]: SETTABLE  R3 R11 R9    ; R3[R11] := R9
 64 [-]: GETGLOBAL R11 K12      ; R11 := Game
 65 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["WEAPON_MELEE_COMBO_PROC_CHANCE"]
 66 [-]: SETTABLE  R3 R11 R9    ; R3[R11] := R9
 67 [-]: GETGLOBAL R11 K12      ; R11 := Game
 68 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["WEAPON_PROC_CHANCE"]
 69 [-]: GETGLOBAL R12 K9       ; R12 := 0x6374FD98
 70 [-]: MUL       R13 R9 R9    ; R13 := R9 * R9
 71 [-]: LOADK     R14 K0       ; R14 := 0
 72 [-]: LOADK     R15 K10      ; R15 := 5
 73 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 74 [-]: SETTABLE  R3 R11 R12   ; R3[R11] := R12
 75 [-]: GETGLOBAL R11 K12      ; R11 := Game
 76 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["WEAPON_PERCENT_BASE_DAMAGE_ADDED"]
 77 [-]: SETTABLE  R3 R11 K11   ; R3[R11] := 1
 78 [-]: GETGLOBAL R11 K12      ; R11 := Game
 79 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["WEAPON_FIRE_RATE"]
 80 [-]: SETTABLE  R3 R11 K29   ; R3[R11] := 1.5
 81 [-]: SELF      R11 R4 K30   ; R12 := R4; R11 := R4["0xB72FF033"]
 82 [-]: GETGLOBAL R13 K31      ; R13 := Engine
 83 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["DT_SLASH"]
 84 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 85 [-]: SELF      R12 R4 K30   ; R13 := R4; R12 := R4["0xB72FF033"]
 86 [-]: GETGLOBAL R14 K31      ; R14 := Engine
 87 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["DT_IMPACT"]
 88 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 89 [-]: SELF      R13 R4 K30   ; R14 := R4; R13 := R4["0xB72FF033"]
 90 [-]: GETGLOBAL R15 K31      ; R15 := Engine
 91 [-]: GETTABLE  R15 R15 K34  ; R15 := R15["DT_PUNCTURE"]
 92 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 93 [-]: GETGLOBAL R14 K31      ; R14 := Engine
 94 [-]: GETTABLE  R14 R14 K32  ; R14 := R14["DT_SLASH"]
 95 [-]: GETUPVAL  R15 U0       ; R15 := U0
 96 [-]: GETTABLE  R15 R15 K35  ; R15 := R15["0xF81722A2"]
 97 [-]: LT        1 K36 R11    ; if 0.5 < R11 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: MOVE      R16 R0       ; R16 := R0
100 [-]: MOVE      R16 R1       ; R16 := R1
101 [-]: LOADK     R17 K11      ; R17 := 1
102 [-]: LOADK     R18 K0       ; R18 := 0
103 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
104 [-]: SETTABLE  R10 R14 R15  ; R10[R14] := R15
105 [-]: GETGLOBAL R14 K31      ; R14 := Engine
106 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["DT_IMPACT"]
107 [-]: GETUPVAL  R15 U0       ; R15 := U0
108 [-]: GETTABLE  R15 R15 K35  ; R15 := R15["0xF81722A2"]
109 [-]: LT        1 K36 R12    ; if 0.5 < R12 then PC := 112
110 [-]: JMP       112          ; PC := 112
111 [-]: MOVE      R16 R0       ; R16 := R0
112 [-]: MOVE      R16 R1       ; R16 := R1
113 [-]: LOADK     R17 K11      ; R17 := 1
114 [-]: LOADK     R18 K0       ; R18 := 0
115 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
116 [-]: SETTABLE  R10 R14 R15  ; R10[R14] := R15
117 [-]: GETGLOBAL R14 K31      ; R14 := Engine
118 [-]: GETTABLE  R14 R14 K34  ; R14 := R14["DT_PUNCTURE"]
119 [-]: GETUPVAL  R15 U0       ; R15 := U0
120 [-]: GETTABLE  R15 R15 K35  ; R15 := R15["0xF81722A2"]
121 [-]: LT        1 K36 R13    ; if 0.5 < R13 then PC := 124
122 [-]: JMP       124          ; PC := 124
123 [-]: MOVE      R16 R0       ; R16 := R0
124 [-]: MOVE      R16 R1       ; R16 := R1
125 [-]: LOADK     R17 K11      ; R17 := 1
126 [-]: LOADK     R18 K0       ; R18 := 0
127 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
128 [-]: SETTABLE  R10 R14 R15  ; R10[R14] := R15
129 [-]: GETTABLE  R14 R0 K37   ; R14 := R0["mUpgrade"]
130 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["mInstance"]
131 [-]: SELF      R15 R14 K39  ; R16 := R14; R15 := R14["0x1C867F99"]
132 [-]: GETTABLE  R17 R0 K37   ; R17 := R0["mUpgrade"]
133 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["mUpgradeFingerprint"]
134 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
135 [-]: LOADK     R16 K11      ; R16 := 1
136 [-]: SELF      R17 R14 K41  ; R18 := R14; R17 := R14["0x3061149"]
137 [-]: CALL      R17 2 2      ; R17 := R17(R18)
138 [-]: LOADK     R18 K11      ; R18 := 1
139 [-]: FORPREP   R16 199      ; R16 -= R18; PC := 199
140 [-]: GETTABLE  R20 R15 R19  ; R20 := R15[R19]
141 [-]: SELF      R20 R20 K42  ; R21 := R20; R20 := R20["0xE5DB9C52"]
142 [-]: CALL      R20 2 2      ; R20 := R20(R21)
143 [-]: GETTABLE  R20 R3 R20   ; R20 := R3[R20]
144 [-]: EQ        1 R20 K43    ; if R20 == nil then PC := 199
145 [-]: JMP       199          ; PC := 199
146 [-]: GETTABLE  R20 R15 R19  ; R20 := R15[R19]
147 [-]: SELF      R20 R20 K44  ; R21 := R20; R20 := R20["0xADD560BB"]
148 [-]: CALL      R20 2 2      ; R20 := R20(R21)
149 [-]: LT        0 R20 K0     ; if R20 >= 0 then PC := 159
150 [-]: JMP       159          ; PC := 159
151 [-]: GETTABLE  R21 R15 R19  ; R21 := R15[R19]
152 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21["0xE5DB9C52"]
153 [-]: CALL      R21 2 2      ; R21 := R21(R22)
154 [-]: GETTABLE  R21 R3 R21   ; R21 := R3[R21]
155 [-]: MUL       R21 R21 K45  ; R21 := R21 * 4
156 [-]: MUL       R21 R21 R20  ; R21 := R21 * R20
157 [-]: ADD       R2 R2 R21    ; R2 := R2 + R21
158 [-]: JMP       199          ; PC := 199
159 [-]: GETTABLE  R21 R15 R19  ; R21 := R15[R19]
160 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21["0xE5DB9C52"]
161 [-]: CALL      R21 2 2      ; R21 := R21(R22)
162 [-]: GETGLOBAL R22 K12      ; R22 := Game
163 [-]: GETTABLE  R22 R22 K27  ; R22 := R22["WEAPON_PERCENT_BASE_DAMAGE_ADDED"]
164 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 193
165 [-]: JMP       193          ; PC := 193
166 [-]: GETUPVAL  R21 U1       ; R21 := U1
167 [-]: GETTABLE  R22 R15 R19  ; R22 := R15[R19]
168 [-]: SELF      R22 R22 K46  ; R23 := R22; R22 := R22["0x9648AA68"]
169 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
170 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
171 [-]: TEST      R21 0        ; if not R21 then PC := 181
172 [-]: JMP       181          ; PC := 181
173 [-]: GETTABLE  R21 R15 R19  ; R21 := R15[R19]
174 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21["0xE5DB9C52"]
175 [-]: CALL      R21 2 2      ; R21 := R21(R22)
176 [-]: GETTABLE  R21 R3 R21   ; R21 := R3[R21]
177 [-]: MUL       R21 R21 R20  ; R21 := R21 * R20
178 [-]: MUL       R21 R21 R9   ; R21 := R21 * R9
179 [-]: ADD       R2 R2 R21    ; R2 := R2 + R21
180 [-]: JMP       199          ; PC := 199
181 [-]: GETTABLE  R21 R15 R19  ; R21 := R15[R19]
182 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21["0xE5DB9C52"]
183 [-]: CALL      R21 2 2      ; R21 := R21(R22)
184 [-]: GETTABLE  R21 R3 R21   ; R21 := R3[R21]
185 [-]: GETTABLE  R22 R15 R19  ; R22 := R15[R19]
186 [-]: SELF      R22 R22 K46  ; R23 := R22; R22 := R22["0x9648AA68"]
187 [-]: CALL      R22 2 2      ; R22 := R22(R23)
188 [-]: GETTABLE  R22 R10 R22  ; R22 := R10[R22]
189 [-]: MUL       R21 R21 R22  ; R21 := R21 * R22
190 [-]: MUL       R21 R21 R20  ; R21 := R21 * R20
191 [-]: ADD       R2 R2 R21    ; R2 := R2 + R21
192 [-]: JMP       199          ; PC := 199
193 [-]: GETTABLE  R21 R15 R19  ; R21 := R15[R19]
194 [-]: SELF      R21 R21 K42  ; R22 := R21; R21 := R21["0xE5DB9C52"]
195 [-]: CALL      R21 2 2      ; R21 := R21(R22)
196 [-]: GETTABLE  R21 R3 R21   ; R21 := R3[R21]
197 [-]: MUL       R21 R21 R20  ; R21 := R21 * R20
198 [-]: ADD       R2 R2 R21    ; R2 := R2 + R21
199 [-]: FORLOOP   R16 140      ; R16 += R18; if R16 <= R17 then begin PC := 140; R19 := R16 end
200 [-]: RETURN    R2 2         ; return R2
201 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3058
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MenuSuitAvatar"]
  4 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xA3F6069B"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETGLOBAL R4 K4        ; R4 := 0x6374FD98
  7 [-]: SELF      R5 R3 K5     ; R6 := R3; R5 := R3["0x2E68420C"]
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 10 [-]: DIV       R5 R5 K6     ; R5 := R5 / 100
 11 [-]: LOADK     R6 K0        ; R6 := 0
 12 [-]: LOADK     R7 K7        ; R7 := 1
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: GETGLOBAL R5 K4        ; R5 := 0x6374FD98
 15 [-]: SELF      R6 R3 K8     ; R7 := R3; R6 := R3["0xBE1E45B1"]
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: MUL       R6 K9 R6     ; R6 := 3 * R6
 18 [-]: SELF      R7 R2 K10    ; R8 := R2; R7 := R2["0x385BD2FE"]
 19 [-]: MOVE      R9 R0        ; R9 := R0
 20 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 21 [-]: DIV       R6 R6 R7     ; R6 := R6 / R7
 22 [-]: LOADK     R7 K0        ; R7 := 0
 23 [-]: LOADK     R8 K7        ; R8 := 1
 24 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0xF81722A2"]
 27 [-]: SELF      R7 R2 K10    ; R8 := R2; R7 := R2["0x385BD2FE"]
 28 [-]: MOVE      R9 R0        ; R9 := R0
 29 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 30 [-]: MUL       R7 K12 R7    ; R7 := 5 * R7
 31 [-]: SELF      R8 R3 K8     ; R9 := R3; R8 := R3["0xBE1E45B1"]
 32 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 33 [-]: LT        1 R8 R7      ; if R8 < R7 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: MOVE      R7 R0        ; R7 := R0
 36 [-]: MOVE      R7 R1        ; R7 := R1
 37 [-]: LOADK     R8 K7        ; R8 := 1
 38 [-]: LOADK     R9 K0        ; R9 := 0
 39 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 40 [-]: GETGLOBAL R7 K4        ; R7 := 0x6374FD98
 41 [-]: SELF      R8 R2 K13    ; R9 := R2; R8 := R2["0x8DB5D01F"]
 42 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 43 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8["0x63D63C30"]
 44 [-]: GETGLOBAL R10 K15      ; R10 := Engine
 45 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["SLOT_4"]
 46 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 47 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8["0xAD6ACAD3"]
 48 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 49 [-]: LOADK     R9 K0        ; R9 := 0
 50 [-]: LOADK     R10 K7       ; R10 := 1
 51 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 52 [-]: NEWTABLE  R8 0 9       ; R8 := {}
 53 [-]: GETGLOBAL R9 K18       ; R9 := Game
 54 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["AVATAR_HEALTH_MAX"]
 55 [-]: SETTABLE  R8 R9 K9     ; R8[R9] := 3
 56 [-]: GETGLOBAL R9 K18       ; R9 := Game
 57 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["AVATAR_ARMOUR"]
 58 [-]: SETTABLE  R8 R9 K9     ; R8[R9] := 3
 59 [-]: GETGLOBAL R9 K18       ; R9 := Game
 60 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["AVATAR_SHIELD_MAX"]
 61 [-]: SETTABLE  R8 R9 K9     ; R8[R9] := 3
 62 [-]: GETGLOBAL R9 K18       ; R9 := Game
 63 [-]: GETTABLE  R9 R9 K22    ; R9 := R9["AVATAR_POWER_MAX"]
 64 [-]: SETTABLE  R8 R9 K23    ; R8[R9] := 2
 65 [-]: GETGLOBAL R9 K18       ; R9 := Game
 66 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["AVATAR_ABILITY_EFFICIENCY"]
 67 [-]: SETTABLE  R8 R9 K25    ; R8[R9] := 1.5
 68 [-]: GETGLOBAL R9 K18       ; R9 := Game
 69 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["AVATAR_ABILITY_STRENGTH"]
 70 [-]: SETTABLE  R8 R9 K25    ; R8[R9] := 1.5
 71 [-]: GETGLOBAL R9 K18       ; R9 := Game
 72 [-]: GETTABLE  R9 R9 K27    ; R9 := R9["AVATAR_ABILITY_RANGE"]
 73 [-]: SETTABLE  R8 R9 K7     ; R8[R9] := 1
 74 [-]: GETGLOBAL R9 K18       ; R9 := Game
 75 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["AVATAR_ABILITY_DURATION"]
 76 [-]: SETTABLE  R8 R9 K7     ; R8[R9] := 1
 77 [-]: GETGLOBAL R9 K18       ; R9 := Game
 78 [-]: GETTABLE  R9 R9 K29    ; R9 := R9["AVATAR_DAMAGE_RESISTANCE"]
 79 [-]: SETTABLE  R8 R9 K30    ; R8[R9] := 0.10000000149012
 80 [-]: GETTABLE  R9 R0 K31    ; R9 := R0["mUpgrade"]
 81 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["mInstance"]
 82 [-]: SELF      R10 R9 K33   ; R11 := R9; R10 := R9["0x1C867F99"]
 83 [-]: GETTABLE  R12 R0 K31   ; R12 := R0["mUpgrade"]
 84 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["mUpgradeFingerprint"]
 85 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 86 [-]: LOADK     R11 K7       ; R11 := 1
 87 [-]: SELF      R12 R9 K35   ; R13 := R9; R12 := R9["0x3061149"]
 88 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 89 [-]: LOADK     R13 K7       ; R13 := 1
 90 [-]: FORPREP   R11 146      ; R11 -= R13; PC := 146
 91 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 92 [-]: SELF      R15 R15 K36  ; R16 := R15; R15 := R15["0xE5DB9C52"]
 93 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 94 [-]: GETTABLE  R16 R8 R15   ; R16 := R8[R15]
 95 [-]: EQ        1 R16 K37    ; if R16 == nil then PC := 146
 96 [-]: JMP       146          ; PC := 146
 97 [-]: GETTABLE  R16 R10 R14  ; R16 := R10[R14]
 98 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16["0xADD560BB"]
 99 [-]: CALL      R16 2 2      ; R16 := R16(R17)
100 [-]: LT        0 R16 K0     ; if R16 >= 0 then PC := 107
101 [-]: JMP       107          ; PC := 107
102 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
103 [-]: MUL       R17 R17 K39  ; R17 := R17 * 4
104 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
105 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
106 [-]: JMP       146          ; PC := 146
107 [-]: GETGLOBAL R17 K18      ; R17 := Game
108 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["AVATAR_ARMOUR"]
109 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 116
110 [-]: JMP       116          ; PC := 116
111 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
112 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
113 [-]: MUL       R17 R17 R4   ; R17 := R17 * R4
114 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
115 [-]: JMP       146          ; PC := 146
116 [-]: GETGLOBAL R17 K18      ; R17 := Game
117 [-]: GETTABLE  R17 R17 K19  ; R17 := R17["AVATAR_HEALTH_MAX"]
118 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 125
119 [-]: JMP       125          ; PC := 125
120 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
121 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
122 [-]: MUL       R17 R17 R6   ; R17 := R17 * R6
123 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
124 [-]: JMP       146          ; PC := 146
125 [-]: GETGLOBAL R17 K18      ; R17 := Game
126 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["AVATAR_SHIELD_MAX"]
127 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 134
128 [-]: JMP       134          ; PC := 134
129 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
130 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
131 [-]: MUL       R17 R17 R5   ; R17 := R17 * R5
132 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
133 [-]: JMP       146          ; PC := 146
134 [-]: GETGLOBAL R17 K18      ; R17 := Game
135 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["AVATAR_POWER_MAX"]
136 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 143
137 [-]: JMP       143          ; PC := 143
138 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
139 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
140 [-]: MUL       R17 R17 R7   ; R17 := R17 * R7
141 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
142 [-]: JMP       146          ; PC := 146
143 [-]: GETTABLE  R17 R8 R15   ; R17 := R8[R15]
144 [-]: MUL       R17 R17 R16  ; R17 := R17 * R16
145 [-]: ADD       R1 R1 R17    ; R1 := R1 + R17
146 [-]: FORLOOP   R11 91       ; R11 += R13; if R11 <= R12 then begin PC := 91; R14 := R11 end
147 [-]: RETURN    R1 2         ; return R1
148 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3094
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["upgradeItemSlot"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["LONG_GUN_SLOT"]
  5 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["upgradeItemSlot"]
  9 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["PISTOL_SLOT"]
 11 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R2 K0        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["upgradeItemSlot"]
 15 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["MELEE_SLOT"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 23 [-]: RETURN    R2 0         ; return R2,...
 24 [-]: JMP       44           ; PC := 44
 25 [-]: GETGLOBAL R2 K0        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["upgradeItemSlot"]
 27 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 28 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["SUIT_SLOT"]
 29 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: GETGLOBAL R2 K0        ; R2 := _T
 32 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["upgradeItemLot"]
 33 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
 34 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["LOT_NORMAL"]
 35 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETUPVAL  R2 U1        ; R2 := U1
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 40 [-]: RETURN    R2 0         ; return R2,...
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADK     R2 K9        ; R2 := 0
 43 [-]: RETURN    R2 2         ; return R2
 44 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3106
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 58
  6 [-]: JMP       58           ; PC := 58
  7 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mPvpValue"]
  8 [-]: GETTABLE  R5 R1 K0     ; R5 := R1["mPvpValue"]
  9 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 51
 10 [-]: JMP       51           ; PC := 51
 11 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mRating"]
 12 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mRating"]
 13 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 44
 14 [-]: JMP       44           ; PC := 44
 15 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mLevel"]
 16 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mLevel"]
 17 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 37
 18 [-]: JMP       37           ; PC := 37
 19 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mLevelLimit"]
 20 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["mLevelLimit"]
 21 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mName"]
 24 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["mName"]
 25 [-]: LT        1 R4 R5      ; if R4 < R5 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: RETURN    R4 2         ; return R4
 30 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mLevelLimit"]
 31 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["mLevelLimit"]
 32 [-]: LT        1 R5 R4      ; if R5 < R4 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: MOVE      R4 R1        ; R4 := R1
 36 [-]: RETURN    R4 2         ; return R4
 37 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mLevel"]
 38 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mLevel"]
 39 [-]: LT        1 R5 R4      ; if R5 < R4 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: MOVE      R4 R1        ; R4 := R1
 43 [-]: RETURN    R4 2         ; return R4
 44 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mRating"]
 45 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mRating"]
 46 [-]: LT        1 R5 R4      ; if R5 < R4 then PC := 49
 47 [-]: JMP       49           ; PC := 49
 48 [-]: MOVE      R4 R0        ; R4 := R0
 49 [-]: MOVE      R4 R1        ; R4 := R1
 50 [-]: RETURN    R4 2         ; return R4
 51 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mPvpValue"]
 52 [-]: GETTABLE  R5 R1 K0     ; R5 := R1["mPvpValue"]
 53 [-]: LT        1 R5 R4      ; if R5 < R4 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: MOVE      R4 R0        ; R4 := R0
 56 [-]: MOVE      R4 R1        ; R4 := R1
 57 [-]: RETURN    R4 2         ; return R4
 58 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R4 R0        ; R4 := R0
 61 [-]: MOVE      R4 R1        ; R4 := R1
 62 [-]: RETURN    R4 2         ; return R4
 63 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3127
; #Upvalues:       19
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  5 [-]: LOADK     R1 K0        ; R1 := 1
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: LOADK     R3 K0        ; R3 := 1
  8 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  9 [-]: LOADK     R5 K0        ; R5 := 1
 10 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 11 [-]: GETGLOBAL R8 K1        ; R8 := _T
 12 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["upgradeItemLot"]
 13 [-]: GETGLOBAL R9 K1        ; R9 := _T
 14 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["upgradeItemSlot"]
 15 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 33
 16 [-]: JMP       33           ; PC := 33
 17 [-]: EQ        1 R9 K4      ; if R9 == nil then PC := 33
 18 [-]: JMP       33           ; PC := 33
 19 [-]: GETGLOBAL R10 K5       ; R10 := Lotus_Game
 20 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["LOT_SENTINEL"]
 21 [-]: EQ        0 R8 R10     ; if R8 ~= R10 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: GETGLOBAL R10 K1       ; R10 := _T
 24 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["MenuSuitAvatar"]
 25 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0x8DB5D01F"]
 26 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 27 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x30DABA98"]
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: MOVE      R7 R10       ; R7 := R10
 30 [-]: JMP       33           ; PC := 33
 31 [-]: GETGLOBAL R10 K1       ; R10 := _T
 32 [-]: GETTABLE  R7 R10 K7    ; R7 := R10["MenuSuitAvatar"]
 33 [-]: GETGLOBAL R10 K5       ; R10 := Lotus_Game
 34 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["LONG_GUN_SLOT"]
 35 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 77
 36 [-]: JMP       77           ; PC := 77
 37 [-]: GETGLOBAL R10 K1       ; R10 := _T
 38 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["MenuSuitAvatar"]
 39 [-]: EQ        0 R7 R10     ; if R7 ~= R10 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 42 [-]: SELF      R11 R7 K8    ; R12 := R7; R11 := R7["0x8DB5D01F"]
 43 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 44 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x63D63C30"]
 45 [-]: GETGLOBAL R13 K13      ; R13 := Engine
 46 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["SLOT_2"]
 47 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 48 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0xE2B32C65"]
 49 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 50 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1B252E3C"]
 51 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 52 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 53 [-]: MOVE      R6 R10       ; R6 := R10
 54 [-]: JMP       112          ; PC := 112
 55 [-]: GETGLOBAL R10 K1       ; R10 := _T
 56 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["MenuSuitAvatar"]
 57 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10["0x8DB5D01F"]
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10["0x30DABA98"]
 60 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 61 [-]: EQ        0 R7 R10     ; if R7 ~= R10 then PC := 112
 62 [-]: JMP       112          ; PC := 112
 63 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 64 [-]: SELF      R11 R7 K8    ; R12 := R7; R11 := R7["0x8DB5D01F"]
 65 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 66 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x63D63C30"]
 67 [-]: GETGLOBAL R13 K13      ; R13 := Engine
 68 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["SLOT_1"]
 69 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 70 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0xE2B32C65"]
 71 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 72 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1B252E3C"]
 73 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 74 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 75 [-]: MOVE      R6 R10       ; R6 := R10
 76 [-]: JMP       112          ; PC := 112
 77 [-]: GETGLOBAL R10 K5       ; R10 := Lotus_Game
 78 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["PISTOL_SLOT"]
 79 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 95
 80 [-]: JMP       95           ; PC := 95
 81 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
 82 [-]: SELF      R11 R7 K8    ; R12 := R7; R11 := R7["0x8DB5D01F"]
 83 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 84 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x63D63C30"]
 85 [-]: GETGLOBAL R13 K13      ; R13 := Engine
 86 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["SLOT_1"]
 87 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 88 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0xE2B32C65"]
 89 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 90 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1B252E3C"]
 91 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 92 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 93 [-]: MOVE      R6 R10       ; R6 := R10
 94 [-]: JMP       112          ; PC := 112
 95 [-]: GETGLOBAL R10 K5       ; R10 := Lotus_Game
 96 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["MELEE_SLOT"]
 97 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 112
 98 [-]: JMP       112          ; PC := 112
 99 [-]: GETGLOBAL R10 K11      ; R10 := 0x7C282057
100 [-]: SELF      R11 R7 K8    ; R12 := R7; R11 := R7["0x8DB5D01F"]
101 [-]: CALL      R11 2 2      ; R11 := R11(R12)
102 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x63D63C30"]
103 [-]: GETGLOBAL R13 K13      ; R13 := Engine
104 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["SLOT_6"]
105 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
106 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0xE2B32C65"]
107 [-]: CALL      R11 2 2      ; R11 := R11(R12)
108 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x1B252E3C"]
109 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
110 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
111 [-]: MOVE      R6 R10       ; R6 := R10
112 [-]: LOADK     R10 K0       ; R10 := 1
113 [-]: GETUPVAL  R11 U1       ; R11 := U1
114 [-]: SELF      R11 R11 K21  ; R12 := R11; R11 := R11["0xC51A5C9D"]
115 [-]: CALL      R11 2 2      ; R11 := R11(R12)
116 [-]: LOADK     R12 K0       ; R12 := 1
117 [-]: FORPREP   R10 154      ; R10 -= R12; PC := 154
118 [-]: GETUPVAL  R14 U1       ; R14 := U1
119 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0xD75E681A"]
120 [-]: MOVE      R16 R13      ; R16 := R13
121 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
122 [-]: GETTABLE  R15 R14 K23  ; R15 := R14["mCardIndex"]
123 [-]: EQ        1 R15 K24    ; if R15 == -1 then PC := 154
124 [-]: JMP       154          ; PC := 154
125 [-]: GETUPVAL  R15 U2       ; R15 := U2
126 [-]: GETTABLE  R16 R14 K23  ; R16 := R14["mCardIndex"]
127 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
128 [-]: GETTABLE  R16 R15 K25  ; R16 := R15["mType"]
129 [-]: EQ        0 R16 K26    ; if R16 ~= "AURA" then PC := 136
130 [-]: JMP       136          ; PC := 136
131 [-]: SETTABLE  R0 R1 R15    ; R0[R1] := R15
132 [-]: GETTABLE  R16 R0 R1    ; R16 := R0[R1]
133 [-]: SETTABLE  R16 K27 R13  ; R16["mCollectionIndex"] := R13
134 [-]: ADD       R1 R1 K0     ; R1 := R1 + 1
135 [-]: JMP       154          ; PC := 154
136 [-]: GETTABLE  R16 R15 K28  ; R16 := R15["mIsStance"]
137 [-]: TEST      R16 0        ; if not R16 then PC := 144
138 [-]: JMP       144          ; PC := 144
139 [-]: SETTABLE  R2 R3 R15    ; R2[R3] := R15
140 [-]: GETTABLE  R16 R2 R3    ; R16 := R2[R3]
141 [-]: SETTABLE  R16 K27 R13  ; R16["mCollectionIndex"] := R13
142 [-]: ADD       R3 R3 K0     ; R3 := R3 + 1
143 [-]: JMP       154          ; PC := 154
144 [-]: SETTABLE  R4 R5 R15    ; R4[R5] := R15
145 [-]: GETTABLE  R16 R4 R5    ; R16 := R4[R5]
146 [-]: SETTABLE  R16 K27 R13  ; R16["mCollectionIndex"] := R13
147 [-]: GETUPVAL  R16 U3       ; R16 := U3
148 [-]: GETUPVAL  R17 U4       ; R17 := U4
149 [-]: MOVE      R18 R15      ; R18 := R15
150 [-]: MOVE      R19 R6       ; R19 := R6
151 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
152 [-]: SETTABLE  R16 R15 R17  ; R16[R15] := R17
153 [-]: ADD       R5 R5 K0     ; R5 := R5 + 1
154 [-]: FORLOOP   R10 118      ; R10 += R12; if R10 <= R11 then begin PC := 118; R13 := R10 end
155 [-]: GETGLOBAL R16 K29      ; R16 := table
156 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["0xA5C58010"]
157 [-]: MOVE      R17 R4       ; R17 := R4
158 [-]: GETUPVAL  R18 U5       ; R18 := U5
159 [-]: CALL      R16 3 1      ; R16(R17,R18)
160 [-]: LOADK     R16 K31      ; R16 := 0
161 [-]: LEN       R17 R0       ; R17 := # R0
162 [-]: LT        0 K31 R17    ; if 0 >= R17 then PC := 174
163 [-]: JMP       174          ; PC := 174
164 [-]: GETUPVAL  R17 U6       ; R17 := U6
165 [-]: GETUPVAL  R18 U7       ; R18 := U7
166 [-]: LE        0 R18 R17    ; if R18 > R17 then PC := 174
167 [-]: JMP       174          ; PC := 174
168 [-]: GETUPVAL  R17 U8       ; R17 := U8
169 [-]: MOVE      R18 R0       ; R18 := R0
170 [-]: CALL      R17 2 2      ; R17 := R17(R18)
171 [-]: TEST      R17 0        ; if not R17 then PC := 174
172 [-]: JMP       174          ; PC := 174
173 [-]: ADD       R16 R16 K0   ; R16 := R16 + 1
174 [-]: LEN       R17 R2       ; R17 := # R2
175 [-]: LT        0 K31 R17    ; if 0 >= R17 then PC := 187
176 [-]: JMP       187          ; PC := 187
177 [-]: GETUPVAL  R17 U9       ; R17 := U9
178 [-]: CALL      R17 1 2      ; R17 := R17()
179 [-]: TEST      R17 0        ; if not R17 then PC := 187
180 [-]: JMP       187          ; PC := 187
181 [-]: GETUPVAL  R17 U10      ; R17 := U10
182 [-]: MOVE      R18 R2       ; R18 := R2
183 [-]: CALL      R17 2 2      ; R17 := R17(R18)
184 [-]: TEST      R17 0        ; if not R17 then PC := 187
185 [-]: JMP       187          ; PC := 187
186 [-]: ADD       R16 R16 K0   ; R16 := R16 + 1
187 [-]: GETGLOBAL R17 K1       ; R17 := _T
188 [-]: GETTABLE  R17 R17 K3   ; R17 := R17["upgradeItemSlot"]
189 [-]: GETGLOBAL R18 K5       ; R18 := Lotus_Game
190 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["LONG_GUN_SLOT"]
191 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 205
192 [-]: JMP       205          ; PC := 205
193 [-]: GETGLOBAL R17 K1       ; R17 := _T
194 [-]: GETTABLE  R17 R17 K3   ; R17 := R17["upgradeItemSlot"]
195 [-]: GETGLOBAL R18 K5       ; R18 := Lotus_Game
196 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["PISTOL_SLOT"]
197 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 205
198 [-]: JMP       205          ; PC := 205
199 [-]: GETGLOBAL R17 K1       ; R17 := _T
200 [-]: GETTABLE  R17 R17 K3   ; R17 := R17["upgradeItemSlot"]
201 [-]: GETGLOBAL R18 K5       ; R18 := Lotus_Game
202 [-]: GETTABLE  R18 R18 K19  ; R18 := R18["MELEE_SLOT"]
203 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 221
204 [-]: JMP       221          ; PC := 221
205 [-]: GETGLOBAL R17 K1       ; R17 := _T
206 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["upgradeItemLot"]
207 [-]: GETGLOBAL R18 K5       ; R18 := Lotus_Game
208 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["LOT_NORMAL"]
209 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 217
210 [-]: JMP       217          ; PC := 217
211 [-]: GETGLOBAL R17 K1       ; R17 := _T
212 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["upgradeItemLot"]
213 [-]: GETGLOBAL R18 K5       ; R18 := Lotus_Game
214 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["LOT_SENTINEL"]
215 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 221
216 [-]: JMP       221          ; PC := 221
217 [-]: GETUPVAL  R17 U11      ; R17 := U11
218 [-]: MOVE      R18 R4       ; R18 := R4
219 [-]: MOVE      R19 R1       ; R19 := R1
220 [-]: CALL      R17 3 1      ; R17(R18,R19)
221 [-]: NEWTABLE  R17 0 0      ; R17 := {}
222 [-]: LOADK     R18 K0       ; R18 := 1
223 [-]: LEN       R19 R4       ; R19 := # R4
224 [-]: LOADK     R20 K0       ; R20 := 1
225 [-]: FORPREP   R18 310      ; R18 -= R20; PC := 310
226 [-]: GETGLOBAL R22 K33      ; R22 := 0x1BF588C6
227 [-]: LOADK     R23 K31      ; R23 := 0
228 [-]: CALL      R22 2 1      ; R22(R23)
229 [-]: GETTABLE  R22 R4 R21   ; R22 := R4[R21]
230 [-]: MOVE      R23 R1       ; R23 := R1
231 [-]: LOADK     R24 K0       ; R24 := 1
232 [-]: LEN       R25 R17      ; R25 := # R17
233 [-]: LOADK     R26 K0       ; R26 := 1
234 [-]: FORPREP   R24 242      ; R24 -= R26; PC := 242
235 [-]: GETTABLE  R28 R17 R27  ; R28 := R17[R27]
236 [-]: GETTABLE  R28 R28 K34  ; R28 := R28["mName"]
237 [-]: GETTABLE  R29 R22 K34  ; R29 := R22["mName"]
238 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 242
239 [-]: JMP       242          ; PC := 242
240 [-]: MOVE      R23 R0       ; R23 := R0
241 [-]: JMP       243          ; PC := 243
242 [-]: FORLOOP   R24 235      ; R24 += R26; if R24 <= R25 then begin PC := 235; R27 := R24 end
243 [-]: TEST      R23 0        ; if not R23 then PC := 310
244 [-]: JMP       310          ; PC := 310
245 [-]: GETUPVAL  R28 U12      ; R28 := U12
246 [-]: MOVE      R29 R22      ; R29 := R22
247 [-]: CALL      R28 2 2      ; R28 := R28(R29)
248 [-]: EQ        1 R28 K4     ; if R28 == nil then PC := 261
249 [-]: JMP       261          ; PC := 261
250 [-]: GETTABLE  R29 R22 K35  ; R29 := R22["mPolarity"]
251 [-]: GETGLOBAL R30 K5       ; R30 := Lotus_Game
252 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["AP_UMBRA"]
253 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 261
254 [-]: JMP       261          ; PC := 261
255 [-]: GETTABLE  R29 R28 K35  ; R29 := R28["mPolarity"]
256 [-]: GETGLOBAL R30 K5       ; R30 := Lotus_Game
257 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["AP_UMBRA"]
258 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 261
259 [-]: JMP       261          ; PC := 261
260 [-]: LOADNIL   R28 R28      ; R28 := nil
261 [-]: EQ        1 R28 K4     ; if R28 == nil then PC := 310
262 [-]: JMP       310          ; PC := 310
263 [-]: GETUPVAL  R29 U13      ; R29 := U13
264 [-]: GETTABLE  R29 R29 K37  ; R29 := R29["0xB32132B3"]
265 [-]: MOVE      R30 R28      ; R30 := R28
266 [-]: MOVE      R31 R22      ; R31 := R22
267 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
268 [-]: GETUPVAL  R30 U14      ; R30 := U14
269 [-]: ADD       R29 R29 R30  ; R29 := R29 + R30
270 [-]: GETUPVAL  R30 U15      ; R30 := U15
271 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 310
272 [-]: JMP       310          ; PC := 310
273 [-]: NEWTABLE  R29 0 3      ; R29 := {}
274 [-]: GETUPVAL  R30 U2       ; R30 := U2
275 [-]: GETTABLE  R31 R22 K27  ; R31 := R22["mCollectionIndex"]
276 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
277 [-]: SETTABLE  R29 K38 R30  ; R29["item"] := R30
278 [-]: GETUPVAL  R30 U1       ; R30 := U1
279 [-]: SETTABLE  R29 K39 R30  ; R29["grid"] := R30
280 [-]: GETUPVAL  R30 U1       ; R30 := U1
281 [-]: SELF      R30 R30 K22  ; R31 := R30; R30 := R30["0xD75E681A"]
282 [-]: GETTABLE  R32 R22 K27  ; R32 := R22["mCollectionIndex"]
283 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
284 [-]: SETTABLE  R29 K40 R30  ; R29["element"] := R30
285 [-]: GETUPVAL  R30 U16      ; R30 := U16
286 [-]: GETUPVAL  R31 U17      ; R31 := U17
287 [-]: MOVE      R32 R29      ; R32 := R29
288 [-]: MOVE      R33 R28      ; R33 := R28
289 [-]: MOVE      R34 R0       ; R34 := R0
290 [-]: MOVE      R35 R1       ; R35 := R1
291 [-]: MOVE      R36 R1       ; R36 := R1
292 [-]: MOVE      R37 R1       ; R37 := R1
293 [-]: CALL      R30 8 2      ; R30 := R30(R31,R32,R33,R34,R35,R36,R37)
294 [-]: TEST      R30 0        ; if not R30 then PC := 306
295 [-]: JMP       306          ; PC := 306
296 [-]: GETUPVAL  R30 U17      ; R30 := U17
297 [-]: GETTABLE  R30 R30 K41  ; R30 := R30["0x490928C6"]
298 [-]: MOVE      R31 R28      ; R31 := R28
299 [-]: CALL      R30 2 1      ; R30(R31)
300 [-]: ADD       R16 R16 K0   ; R16 := R16 + 1
301 [-]: GETGLOBAL R30 K29      ; R30 := table
302 [-]: GETTABLE  R30 R30 K42  ; R30 := R30["0xE6450C9D"]
303 [-]: MOVE      R31 R17      ; R31 := R17
304 [-]: MOVE      R32 R22      ; R32 := R22
305 [-]: CALL      R30 3 1      ; R30(R31,R32)
306 [-]: GETUPVAL  R30 U6       ; R30 := U6
307 [-]: LE        0 R30 R16    ; if R30 > R16 then PC := 310
308 [-]: JMP       310          ; PC := 310
309 [-]: JMP       311          ; PC := 311
310 [-]: FORLOOP   R18 226      ; R18 += R20; if R18 <= R19 then begin PC := 226; R21 := R18 end
311 [-]: GETUPVAL  R30 U18      ; R30 := U18
312 [-]: MOVE      R31 R1       ; R31 := R1
313 [-]: CALL      R30 2 1      ; R30(R31)
314 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3237
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R1 1 1       ; R1()
 10 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3243
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3251
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3255
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gGameData
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x6F2E05FD"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 49
  9 [-]: JMP       49           ; PC := 49
 10 [-]: GETGLOBAL R2 K3        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["upgradeItemCategory"]
 12 [-]: GETGLOBAL R3 K5        ; R3 := Engine
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Item_LongGuns"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x1D216770"]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: MOVE      R0 R2        ; R0 := R2
 19 [-]: JMP       49           ; PC := 49
 20 [-]: GETGLOBAL R2 K3        ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["upgradeItemCategory"]
 22 [-]: GETGLOBAL R3 K5        ; R3 := Engine
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Item_Pistols"]
 24 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1["0xB5D66AE"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: MOVE      R0 R2        ; R0 := R2
 29 [-]: JMP       49           ; PC := 49
 30 [-]: GETGLOBAL R2 K3        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["upgradeItemCategory"]
 32 [-]: GETGLOBAL R3 K5        ; R3 := Engine
 33 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["Item_Melee"]
 34 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R2 R1 K11    ; R3 := R1; R2 := R1["0xA82A3D30"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: MOVE      R0 R2        ; R0 := R2
 39 [-]: JMP       49           ; PC := 49
 40 [-]: GETGLOBAL R2 K3        ; R2 := _T
 41 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["upgradeItemCategory"]
 42 [-]: GETGLOBAL R3 K5        ; R3 := Engine
 43 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["Item_SpaceGuns"]
 44 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: SELF      R2 R1 K13    ; R3 := R1; R2 := R1["0x213E1D36"]
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: MOVE      R0 R2        ; R0 := R2
 49 [-]: RETURN    R0 2         ; return R0
 50 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3274
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := actionsMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xA58BB96C"]
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
 16 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x5FF274BB"]
 17 [-]: GETGLOBAL R2 K1        ; R2 := actionsMovie
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 1         ; if R0 then PC := 56
 24 [-]: JMP       56           ; PC := 56
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x458F27A9"]
 27 [-]: LOADK     R2 K6        ; R2 := "SetTitle"
 28 [-]: LOADK     R3 K7        ; R3 := "/Lotus/Language/Menu/ArtifactCards_ActionsTitle"
 29 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 30 [-]: GETGLOBAL R0 K8        ; R0 := _T
 31 [-]: CLOSURE   R1 0         ; R1 := closure(Function #84.1)
 32 [-]: SETTABLE  R0 K9 R1     ; R0["ActionSelectionDone"] := R1
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x458F27A9"]
 35 [-]: LOADK     R2 K10       ; R2 := "SetCallback"
 36 [-]: LOADK     R3 K9        ; R3 := "ActionSelectionDone"
 37 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 38 [-]: GETGLOBAL R0 K8        ; R0 := _T
 39 [-]: CLOSURE   R1 1         ; R1 := closure(Function #84.2)
 40 [-]: GETUPVAL  R0 U1        ; R0 := U1
 41 [-]: GETUPVAL  R0 U2        ; R0 := U2
 42 [-]: GETUPVAL  R0 U3        ; R0 := U3
 43 [-]: GETUPVAL  R0 U4        ; R0 := U4
 44 [-]: GETUPVAL  R0 U5        ; R0 := U5
 45 [-]: GETUPVAL  R0 U6        ; R0 := U6
 46 [-]: GETUPVAL  R0 U7        ; R0 := U7
 47 [-]: GETUPVAL  R0 U8        ; R0 := U8
 48 [-]: GETUPVAL  R0 U9        ; R0 := U9
 49 [-]: GETUPVAL  R0 U10       ; R0 := U10
 50 [-]: SETTABLE  R0 K11 R1    ; R0["GetActionsInfo"] := R1
 51 [-]: GETUPVAL  R0 U0        ; R0 := U0
 52 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x458F27A9"]
 53 [-]: LOADK     R2 K12       ; R2 := "SetActionsInfoFunction"
 54 [-]: LOADK     R3 K11       ; R3 := "GetActionsInfo"
 55 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 56 [-]: RETURN    R0 1         ; return 


; Function #84.1:
;
; Name:            
; Defined at line: 3288
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ActionSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetActionsInfo"] := nil
  5 [-]: GETGLOBAL R1 K4        ; R1 := mMovie
  6 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0x458F27A9"]
  7 [-]: LOADK     R3 K6        ; R3 := "ActionSelected"
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #84.2:
;
; Name:            
; Defined at line: 3297
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  48

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 15 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 17 [-]: GETGLOBAL R4 K3        ; R4 := 0x9FAED6BC
 18 [-]: GETUPVAL  R5 U1        ; R5 := U1
 19 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["storeItem"]
 20 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x616C74B6"]
 21 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 22 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 25 [-]: GETGLOBAL R3 K6        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["upgradeItemLot"]
 27 [-]: GETGLOBAL R4 K8        ; R4 := Lotus_Game
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["LOT_KDRIVE"]
 29 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0["0x3180ADE8"]
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 0         ; if not R3 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: SELF      R3 R0 K11    ; R4 := R0; R3 := R0["0xB48D2120"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: MOVE      R3 R3        ; R3 := R3
 38 [-]: JMP       41           ; PC := 41
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: MOVE      R3 R1        ; R3 := R1
 41 [-]: LOADK     R4 K12       ; R4 := ""
 42 [-]: GETGLOBAL R5 K6        ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["upgradeItemLot"]
 44 [-]: GETGLOBAL R6 K8        ; R6 := Lotus_Game
 45 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["LOT_SENTINEL"]
 46 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: LOADK     R4 K14       ; R4 := "/Lotus/Language/SolarisVenus/MoaPet_Singular"
 49 [-]: JMP       71           ; PC := 71
 50 [-]: GETGLOBAL R5 K6        ; R5 := _T
 51 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["upgradeItemSlot"]
 52 [-]: GETGLOBAL R6 K8        ; R6 := Lotus_Game
 53 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["MELEE_SLOT"]
 54 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: LOADK     R4 K17       ; R4 := "/Lotus/Language/OstronCrafting/Zaw_Singular"
 57 [-]: JMP       71           ; PC := 71
 58 [-]: GETGLOBAL R5 K6        ; R5 := _T
 59 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["upgradeItemSlot"]
 60 [-]: GETGLOBAL R6 K8        ; R6 := Lotus_Game
 61 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["LONG_GUN_SLOT"]
 62 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETGLOBAL R5 K6        ; R5 := _T
 65 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["upgradeItemSlot"]
 66 [-]: GETGLOBAL R6 K8        ; R6 := Lotus_Game
 67 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["PISTOL_SLOT"]
 68 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADK     R4 K20       ; R4 := "/Lotus/Language/SolarisVenus/Kitgun_Singular"
 71 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 72 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 73 [-]: MOVE      R7 R4        ; R7 := R4
 74 [-]: MOVE      R8 R0        ; R8 := R0
 75 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 76 [-]: MOVE      R4 R5        ; R4 := R5
 77 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 78 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 79 [-]: LOADK     R7 K21       ; R7 := "/Lotus/Language/Menu/Loadout_Polarize_UnGildedModular"
 80 [-]: MOVE      R8 R0        ; R8 := R0
 81 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 82 [-]: GETGLOBAL R10 K23      ; R10 := string
 83 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["0x639C642A"]
 84 [-]: MOVE      R11 R4       ; R11 := R4
 85 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 86 [-]: SETTABLE  R9 K22 R10   ; R9["TYPE"] := R10
 87 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 88 [-]: GETGLOBAL R6 K25       ; R6 := table
 89 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0xE6450C9D"]
 90 [-]: MOVE      R7 R1        ; R7 := R1
 91 [-]: NEWTABLE  R8 0 6       ; R8 := {}
 92 [-]: SETTABLE  R8 K27 K28   ; R8["Enabled"] := "0x1"
 93 [-]: SETTABLE  R8 K29 K30   ; R8["Choice"] := "AUTO"
 94 [-]: SETTABLE  R8 K31 K32   ; R8["Title"] := "/Lotus/Language/Menu/Loadout_Auto_Install"
 95 [-]: SETTABLE  R8 K33 K34   ; R8["Desc"] := "/Lotus/Language/Menu/Loadout_AutoInstall_Desc"
 96 [-]: SETTABLE  R8 K35 K36   ; R8["BtnDesc"] := "/Lotus/Language/Menu/Loadout_AutoInstall_Apply"
 97 [-]: GETGLOBAL R9 K38       ; R9 := upgradeActionsIcons
 98 [-]: GETTABLE  R9 R9 K39    ; R9 := R9[1]
 99 [-]: SETTABLE  R8 K37 R9    ; R8["Image"] := R9
100 [-]: CALL      R6 3 1       ; R6(R7,R8)
101 [-]: GETUPVAL  R6 U1        ; R6 := U1
102 [-]: GETTABLE  R6 R6 K40    ; R6 := R6["info"]
103 [-]: SELF      R6 R6 K41    ; R7 := R6; R6 := R6["0x17D2B78C"]
104 [-]: GETGLOBAL R8 K8        ; R8 := Lotus_Game
105 [-]: GETTABLE  R8 R8 K42    ; R8 := R8["WF_ENERGY_UNLOCKED"]
106 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
107 [-]: GETUPVAL  R7 U1        ; R7 := U1
108 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["info"]
109 [-]: SELF      R7 R7 K41    ; R8 := R7; R7 := R7["0x17D2B78C"]
110 [-]: GETGLOBAL R9 K8        ; R9 := Lotus_Game
111 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["WF_HEAVY_UNLOCKED"]
112 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
113 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
114 [-]: TESTSET   R10 R6 0     ; if not R6 then PC := 117 else R10 := R6
115 [-]: JMP       117          ; PC := 117
116 [-]: MOVE      R10 R7       ; R10 := R7
117 [-]: TEST      R6 1         ; if R6 then PC := 125
118 [-]: JMP       125          ; PC := 125
119 [-]: SELF      R11 R0 K44   ; R12 := R0; R11 := R0["0xD37D3C2"]
120 [-]: GETGLOBAL R13 K8       ; R13 := Lotus_Game
121 [-]: GETTABLE  R13 R13 K42  ; R13 := R13["WF_ENERGY_UNLOCKED"]
122 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
123 [-]: MOVE      R8 R11       ; R8 := R11
124 [-]: JMP       143          ; PC := 143
125 [-]: TEST      R7 1         ; if R7 then PC := 138
126 [-]: JMP       138          ; PC := 138
127 [-]: SELF      R11 R0 K44   ; R12 := R0; R11 := R0["0xD37D3C2"]
128 [-]: GETGLOBAL R13 K8       ; R13 := Lotus_Game
129 [-]: GETTABLE  R13 R13 K42  ; R13 := R13["WF_ENERGY_UNLOCKED"]
130 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
131 [-]: MOVE      R9 R11       ; R9 := R11
132 [-]: SELF      R11 R0 K44   ; R12 := R0; R11 := R0["0xD37D3C2"]
133 [-]: GETGLOBAL R13 K8       ; R13 := Lotus_Game
134 [-]: GETTABLE  R13 R13 K43  ; R13 := R13["WF_HEAVY_UNLOCKED"]
135 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
136 [-]: MOVE      R8 R11       ; R8 := R11
137 [-]: JMP       143          ; PC := 143
138 [-]: SELF      R11 R0 K44   ; R12 := R0; R11 := R0["0xD37D3C2"]
139 [-]: GETGLOBAL R13 K8       ; R13 := Lotus_Game
140 [-]: GETTABLE  R13 R13 K43  ; R13 := R13["WF_HEAVY_UNLOCKED"]
141 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
142 [-]: MOVE      R9 R11       ; R9 := R11
143 [-]: GETUPVAL  R11 U2       ; R11 := U2
144 [-]: SELF      R11 R11 K45  ; R12 := R11; R11 := R11["0xFED851F6"]
145 [-]: MOVE      R13 R8       ; R13 := R8
146 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
147 [-]: GETUPVAL  R12 U2       ; R12 := U2
148 [-]: SELF      R12 R12 K45  ; R13 := R12; R12 := R12["0xFED851F6"]
149 [-]: MOVE      R14 R9       ; R14 := R9
150 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
151 [-]: GETUPVAL  R13 U3       ; R13 := U3
152 [-]: MOVE      R14 R8       ; R14 := R8
153 [-]: CALL      R13 2 2      ; R13 := R13(R14)
154 [-]: GETTABLE  R14 R13 K46  ; R14 := R13[2]
155 [-]: GETTABLE  R15 R13 K39  ; R15 := R13[1]
156 [-]: LE        1 R15 R14    ; if R15 <= R14 then PC := 159
157 [-]: JMP       159          ; PC := 159
158 [-]: MOVE      R14 R0       ; R14 := R0
159 [-]: MOVE      R14 R1       ; R14 := R1
160 [-]: LOADNIL   R15 R15      ; R15 := nil
161 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
162 [-]: MOVE      R17 R8       ; R17 := R8
163 [-]: CALL      R16 2 2      ; R16 := R16(R17)
164 [-]: TEST      R16 1        ; if R16 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETUPVAL  R16 U4       ; R16 := U4
167 [-]: GETTABLE  R16 R16 K47  ; R16 := R16["0x1B75557F"]
168 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
169 [-]: MOVE      R18 R11      ; R18 := R11
170 [-]: NEWTABLE  R19 0 1      ; R19 := {}
171 [-]: GETUPVAL  R20 U5       ; R20 := U5
172 [-]: SETTABLE  R19 K48 R20  ; R19["GameData"] := R20
173 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
174 [-]: MOVE      R15 R16      ; R15 := R16
175 [-]: JMP       190          ; PC := 190
176 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
177 [-]: MOVE      R17 R9       ; R17 := R9
178 [-]: CALL      R16 2 2      ; R16 := R16(R17)
179 [-]: TEST      R16 1        ; if R16 then PC := 190
180 [-]: JMP       190          ; PC := 190
181 [-]: GETUPVAL  R16 U4       ; R16 := U4
182 [-]: GETTABLE  R16 R16 K47  ; R16 := R16["0x1B75557F"]
183 [-]: GETGLOBAL R17 K1       ; R17 := mMovie
184 [-]: MOVE      R18 R12      ; R18 := R12
185 [-]: NEWTABLE  R19 0 1      ; R19 := {}
186 [-]: GETUPVAL  R20 U5       ; R20 := U5
187 [-]: SETTABLE  R19 K48 R20  ; R19["GameData"] := R20
188 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
189 [-]: MOVE      R15 R16      ; R15 := R16
190 [-]: EQ        0 R15 K49    ; if R15 ~= nil then PC := 215
191 [-]: JMP       215          ; PC := 215
192 [-]: NEWTABLE  R16 0 6      ; R16 := {}
193 [-]: SETTABLE  R16 K27 K50  ; R16["Enabled"] := "0x0"
194 [-]: GETUPVAL  R17 U6       ; R17 := U6
195 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["0xF81722A2"]
196 [-]: MOVE      R18 R10      ; R18 := R10
197 [-]: LOADK     R19 K52      ; R19 := "UPGRADE_HEAVY"
198 [-]: LOADK     R20 K53      ; R20 := "UPGRADE"
199 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
200 [-]: SETTABLE  R16 K29 R17  ; R16["Choice"] := R17
201 [-]: SETTABLE  R16 K31 K54  ; R16["Title"] := "/Lotus/Language/Menu/Loadout_UpgradeSystemInstall"
202 [-]: SETTABLE  R16 K33 K55  ; R16["Desc"] := "/Lotus/Language/Menu/Loadout_Upgrade_Desc"
203 [-]: GETUPVAL  R17 U6       ; R17 := U6
204 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["0xF81722A2"]
205 [-]: MOVE      R18 R10      ; R18 := R10
206 [-]: GETGLOBAL R19 K38      ; R19 := upgradeActionsIcons
207 [-]: GETTABLE  R19 R19 K56  ; R19 := R19[6]
208 [-]: GETGLOBAL R20 K38      ; R20 := upgradeActionsIcons
209 [-]: GETTABLE  R20 R20 K46  ; R20 := R20[2]
210 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
211 [-]: SETTABLE  R16 K37 R17  ; R16["Image"] := R17
212 [-]: SETTABLE  R16 K35 K57  ; R16["BtnDesc"] := "[HC] MISSING STORE ITEM"
213 [-]: MOVE      R15 R16      ; R15 := R16
214 [-]: JMP       375          ; PC := 375
215 [-]: GETUPVAL  R16 U6       ; R16 := U6
216 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["0xF81722A2"]
217 [-]: MOVE      R17 R10      ; R17 := R10
218 [-]: LOADK     R18 K52      ; R18 := "UPGRADE_HEAVY"
219 [-]: LOADK     R19 K53      ; R19 := "UPGRADE"
220 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
221 [-]: SETTABLE  R15 K29 R16  ; R15["Choice"] := R16
222 [-]: SETTABLE  R15 K31 K54  ; R15["Title"] := "/Lotus/Language/Menu/Loadout_UpgradeSystemInstall"
223 [-]: GETUPVAL  R16 U6       ; R16 := U6
224 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["0xF81722A2"]
225 [-]: MOVE      R17 R10      ; R17 := R10
226 [-]: LOADK     R18 K58      ; R18 := "/Lotus/Language/Menu/Loadout_HeavyUpgrade_Desc"
227 [-]: LOADK     R19 K55      ; R19 := "/Lotus/Language/Menu/Loadout_Upgrade_Desc"
228 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
229 [-]: SETTABLE  R15 K33 R16  ; R15["Desc"] := R16
230 [-]: GETUPVAL  R16 U6       ; R16 := U6
231 [-]: GETTABLE  R16 R16 K51  ; R16 := R16["0xF81722A2"]
232 [-]: MOVE      R17 R10      ; R17 := R10
233 [-]: GETGLOBAL R18 K38      ; R18 := upgradeActionsIcons
234 [-]: GETTABLE  R18 R18 K56  ; R18 := R18[6]
235 [-]: GETGLOBAL R19 K38      ; R19 := upgradeActionsIcons
236 [-]: GETTABLE  R19 R19 K46  ; R19 := R19[2]
237 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
238 [-]: SETTABLE  R15 K37 R16  ; R15["Image"] := R16
239 [-]: SETTABLE  R15 K27 K28  ; R15["Enabled"] := "0x1"
240 [-]: GETTABLE  R16 R15 K27  ; R16 := R15["Enabled"]
241 [-]: SETTABLE  R15 K59 R16  ; R15["BtnCountMode"] := R16
242 [-]: GETTABLE  R16 R13 K46  ; R16 := R13[2]
243 [-]: LOADK     R17 K61      ; R17 := "/"
244 [-]: GETUPVAL  R18 U6       ; R18 := U6
245 [-]: GETTABLE  R18 R18 K62  ; R18 := R18["0x7E197415"]
246 [-]: GETTABLE  R19 R13 K39  ; R19 := R13[1]
247 [-]: CALL      R18 2 2      ; R18 := R18(R19)
248 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
249 [-]: SETTABLE  R15 K60 R16  ; R15["BtnCount"] := R16
250 [-]: SETTABLE  R15 K63 R14  ; R15["BtnCheck"] := R14
251 [-]: GETGLOBAL R16 K65      ; R16 := _G
252 [-]: GETTABLE  R16 R16 K66  ; R16 := R16["UIColor_MediumGrey"]
253 [-]: SETTABLE  R15 K64 R16  ; R15["BtnDescColor"] := R16
254 [-]: SETTABLE  R15 K67 K68  ; R15["BtnCountAlpha"] := 50
255 [-]: TEST      R3 0         ; if not R3 then PC := 267
256 [-]: JMP       267          ; PC := 267
257 [-]: SETTABLE  R15 K35 R5   ; R15["BtnDesc"] := R5
258 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
259 [-]: SELF      R16 R16 K2   ; R17 := R16; R16 := R16["0x5DB0BD4"]
260 [-]: LOADK     R18 K70      ; R18 := "/Lotus/Language/Menu/Loadout_Upgrade_UnGildedModularDesc"
261 [-]: MOVE      R19 R0       ; R19 := R0
262 [-]: NEWTABLE  R20 0 1      ; R20 := {}
263 [-]: SETTABLE  R20 K22 R4   ; R20["TYPE"] := R4
264 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
265 [-]: SETTABLE  R15 K69 R16  ; R15["ErrorMsg"] := R16
266 [-]: JMP       375          ; PC := 375
267 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
268 [-]: MOVE      R17 R8       ; R17 := R8
269 [-]: CALL      R16 2 2      ; R16 := R16(R17)
270 [-]: TEST      R16 0        ; if not R16 then PC := 308
271 [-]: JMP       308          ; PC := 308
272 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
273 [-]: MOVE      R17 R12      ; R17 := R12
274 [-]: CALL      R16 2 2      ; R16 := R16(R17)
275 [-]: TEST      R16 1        ; if R16 then PC := 305
276 [-]: JMP       305          ; PC := 305
277 [-]: SETTABLE  R15 K27 K50  ; R15["Enabled"] := "0x0"
278 [-]: SETTABLE  R15 K59 K50  ; R15["BtnCountMode"] := "0x0"
279 [-]: SETTABLE  R15 K31 K71  ; R15["Title"] := "/Lotus/Language/Menu/Loadout_Upgrade_TitleInstalled"
280 [-]: SETTABLE  R15 K33 K72  ; R15["Desc"] := "/Lotus/Language/Menu/Loadout_Upgrade_DescInstalled"
281 [-]: SETTABLE  R15 K73 K28  ; R15["IconAsImage"] := "0x1"
282 [-]: SETTABLE  R15 K74 K75  ; R15["ImageWidth"] := 285
283 [-]: SETTABLE  R15 K76 K77  ; R15["ImageHeight"] := 225
284 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
285 [-]: SELF      R16 R16 K2   ; R17 := R16; R16 := R16["0x5DB0BD4"]
286 [-]: LOADK     R18 K78      ; R18 := "/Lotus/Language/Menu/Loadout_Upgrade_AlreadyInstalled"
287 [-]: MOVE      R19 R1       ; R19 := R1
288 [-]: NEWTABLE  R20 0 1      ; R20 := {}
289 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
290 [-]: SELF      R21 R21 K2   ; R22 := R21; R21 := R21["0x5DB0BD4"]
291 [-]: SELF      R23 R12 K5   ; R24 := R12; R23 := R12["0x616C74B6"]
292 [-]: CALL      R23 2 2      ; R23 := R23(R24)
293 [-]: SELF      R23 R23 K79  ; R24 := R23; R23 := R23["0x5EC7A3D2"]
294 [-]: CALL      R23 2 2      ; R23 := R23(R24)
295 [-]: MOVE      R24 R0       ; R24 := R0
296 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
297 [-]: SETTABLE  R20 K22 R21  ; R20["TYPE"] := R21
298 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
299 [-]: SETTABLE  R15 K35 R16  ; R15["BtnDesc"] := R16
300 [-]: GETGLOBAL R16 K65      ; R16 := _G
301 [-]: GETTABLE  R16 R16 K80  ; R16 := R16["UIColor_White"]
302 [-]: SETTABLE  R15 K64 R16  ; R15["BtnDescColor"] := R16
303 [-]: SETTABLE  R15 K81 K82  ; R15["BtnDescAlpha"] := 75
304 [-]: JMP       375          ; PC := 375
305 [-]: SETTABLE  R15 K27 K50  ; R15["Enabled"] := "0x0"
306 [-]: SETTABLE  R15 K35 K57  ; R15["BtnDesc"] := "[HC] MISSING STORE ITEM"
307 [-]: JMP       375          ; PC := 375
308 [-]: TEST      R14 0        ; if not R14 then PC := 314
309 [-]: JMP       314          ; PC := 314
310 [-]: SETTABLE  R15 K35 K54  ; R15["BtnDesc"] := "/Lotus/Language/Menu/Loadout_UpgradeSystemInstall"
311 [-]: SETTABLE  R15 K64 K49  ; R15["BtnDescColor"] := nil
312 [-]: SETTABLE  R15 K67 K49  ; R15["BtnCountAlpha"] := nil
313 [-]: JMP       375          ; PC := 375
314 [-]: GETUPVAL  R16 U7       ; R16 := U7
315 [-]: GETTABLE  R16 R16 K83  ; R16 := R16["0xC5BE56F"]
316 [-]: MOVE      R17 R11      ; R17 := R11
317 [-]: LOADNIL   R18 R18      ; R18 := nil
318 [-]: MOVE      R19 R1       ; R19 := R1
319 [-]: CALL      R16 4 3      ; R16,R17 := R16(R17,R18,R19)
320 [-]: EQ        1 R17 K84    ; if R17 == 0 then PC := 343
321 [-]: JMP       343          ; PC := 343
322 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
323 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x5DB0BD4"]
324 [-]: LOADK     R20 K85      ; R20 := "/Lotus/Language/Menu/Loadout_Upgrade_CatalystRequired"
325 [-]: MOVE      R21 R1       ; R21 := R1
326 [-]: NEWTABLE  R22 0 2      ; R22 := {}
327 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
328 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x5DB0BD4"]
329 [-]: SELF      R25 R11 K5   ; R26 := R11; R25 := R11["0x616C74B6"]
330 [-]: CALL      R25 2 2      ; R25 := R25(R26)
331 [-]: SELF      R25 R25 K79  ; R26 := R25; R25 := R25["0x5EC7A3D2"]
332 [-]: CALL      R25 2 2      ; R25 := R25(R26)
333 [-]: MOVE      R26 R0       ; R26 := R0
334 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
335 [-]: SETTABLE  R22 K22 R23  ; R22["TYPE"] := R23
336 [-]: GETGLOBAL R23 K3       ; R23 := 0x9FAED6BC
337 [-]: MOVE      R24 R17      ; R24 := R17
338 [-]: CALL      R23 2 2      ; R23 := R23(R24)
339 [-]: SETTABLE  R22 K86 R23  ; R22["COST"] := R23
340 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
341 [-]: SETTABLE  R15 K35 R18  ; R15["BtnDesc"] := R18
342 [-]: JMP       375          ; PC := 375
343 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
344 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x5DB0BD4"]
345 [-]: LOADK     R20 K87      ; R20 := "/Lotus/Language/Menu/Item_CannotPurchaseMissingPrerequisite"
346 [-]: MOVE      R21 R1       ; R21 := R1
347 [-]: NEWTABLE  R22 0 1      ; R22 := {}
348 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
349 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x5DB0BD4"]
350 [-]: SELF      R25 R11 K5   ; R26 := R11; R25 := R11["0x616C74B6"]
351 [-]: CALL      R25 2 2      ; R25 := R25(R26)
352 [-]: SELF      R25 R25 K79  ; R26 := R25; R25 := R25["0x5EC7A3D2"]
353 [-]: CALL      R25 2 2      ; R25 := R25(R26)
354 [-]: MOVE      R26 R0       ; R26 := R0
355 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
356 [-]: SETTABLE  R22 K88 R23  ; R22["NAME"] := R23
357 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
358 [-]: SETTABLE  R15 K35 R18  ; R15["BtnDesc"] := R18
359 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
360 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18["0x5DB0BD4"]
361 [-]: LOADK     R20 K89      ; R20 := "/Lotus/Language/Menu/UpgradeMissingReq"
362 [-]: MOVE      R21 R1       ; R21 := R1
363 [-]: NEWTABLE  R22 0 1      ; R22 := {}
364 [-]: GETGLOBAL R23 K1       ; R23 := mMovie
365 [-]: SELF      R23 R23 K2   ; R24 := R23; R23 := R23["0x5DB0BD4"]
366 [-]: SELF      R25 R11 K5   ; R26 := R11; R25 := R11["0x616C74B6"]
367 [-]: CALL      R25 2 2      ; R25 := R25(R26)
368 [-]: SELF      R25 R25 K79  ; R26 := R25; R25 := R25["0x5EC7A3D2"]
369 [-]: CALL      R25 2 2      ; R25 := R25(R26)
370 [-]: MOVE      R26 R0       ; R26 := R0
371 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
372 [-]: SETTABLE  R22 K90 R23  ; R22["REQ"] := R23
373 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
374 [-]: SETTABLE  R15 K69 R18  ; R15["ErrorMsg"] := R18
375 [-]: GETGLOBAL R18 K25      ; R18 := table
376 [-]: GETTABLE  R18 R18 K26  ; R18 := R18["0xE6450C9D"]
377 [-]: MOVE      R19 R1       ; R19 := R1
378 [-]: MOVE      R20 R15      ; R20 := R15
379 [-]: CALL      R18 3 1      ; R18(R19,R20)
380 [-]: GETUPVAL  R18 U2       ; R18 := U2
381 [-]: SELF      R18 R18 K45  ; R19 := R18; R18 := R18["0xFED851F6"]
382 [-]: GETGLOBAL R20 K91      ; R20 := purchaseableFormas
383 [-]: GETTABLE  R20 R20 K39  ; R20 := R20[1]
384 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
385 [-]: MOVE      R12 R18      ; R12 := R18
386 [-]: GETGLOBAL R18 K92      ; R18 := gGameConfig
387 [-]: SELF      R18 R18 K93  ; R19 := R18; R18 := R18["0x6BA57B8E"]
388 [-]: GETUPVAL  R20 U1       ; R20 := U1
389 [-]: GETTABLE  R20 R20 K40  ; R20 := R20["info"]
390 [-]: GETTABLE  R20 R20 K94  ; R20 := R20["mItemType"]
391 [-]: GETUPVAL  R21 U1       ; R21 := U1
392 [-]: GETTABLE  R21 R21 K40  ; R21 := R21["info"]
393 [-]: GETTABLE  R21 R21 K95  ; R21 := R21["mPolarized"]
394 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
395 [-]: GETGLOBAL R19 K96      ; R19 := math
396 [-]: GETTABLE  R19 R19 K97  ; R19 := R19["0x65F9712A"]
397 [-]: MOVE      R20 R18      ; R20 := R18
398 [-]: GETGLOBAL R21 K92      ; R21 := gGameConfig
399 [-]: SELF      R21 R21 K98  ; R22 := R21; R21 := R21["0x9E8E66BA"]
400 [-]: GETUPVAL  R23 U1       ; R23 := U1
401 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["info"]
402 [-]: GETTABLE  R23 R23 K99  ; R23 := R23["mXP"]
403 [-]: GETUPVAL  R24 U1       ; R24 := U1
404 [-]: GETTABLE  R24 R24 K40  ; R24 := R24["info"]
405 [-]: GETTABLE  R24 R24 K94  ; R24 := R24["mItemType"]
406 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
407 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
408 [-]: GETUPVAL  R20 U4       ; R20 := U4
409 [-]: GETTABLE  R20 R20 K47  ; R20 := R20["0x1B75557F"]
410 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
411 [-]: MOVE      R22 R12      ; R22 := R12
412 [-]: NEWTABLE  R23 0 1      ; R23 := {}
413 [-]: GETUPVAL  R24 U5       ; R24 := U5
414 [-]: SETTABLE  R23 K48 R24  ; R23["GameData"] := R24
415 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
416 [-]: EQ        1 R20 K49    ; if R20 == nil then PC := 581
417 [-]: JMP       581          ; PC := 581
418 [-]: SETTABLE  R20 K27 K28  ; R20["Enabled"] := "0x1"
419 [-]: SETTABLE  R20 K29 K100 ; R20["Choice"] := "FORMA"
420 [-]: SETTABLE  R20 K31 K101 ; R20["Title"] := "/Lotus/Language/Menu/Loadout_Polarize_Title"
421 [-]: SETTABLE  R20 K33 K102 ; R20["Desc"] := "/Lotus/Language/Menu/Loadout_Polarize_Desc"
422 [-]: SETTABLE  R20 K35 K103 ; R20["BtnDesc"] := "/Lotus/Language/Menu/Loadout_Polarize"
423 [-]: GETGLOBAL R21 K38      ; R21 := upgradeActionsIcons
424 [-]: GETTABLE  R21 R21 K104 ; R21 := R21[3]
425 [-]: SETTABLE  R20 K37 R21  ; R20["Image"] := R21
426 [-]: GETUPVAL  R21 U3       ; R21 := U3
427 [-]: GETGLOBAL R22 K91      ; R22 := purchaseableFormas
428 [-]: GETTABLE  R22 R22 K39  ; R22 := R22[1]
429 [-]: CALL      R21 2 2      ; R21 := R21(R22)
430 [-]: MOVE      R13 R21      ; R13 := R21
431 [-]: GETUPVAL  R21 U3       ; R21 := U3
432 [-]: GETGLOBAL R22 K91      ; R22 := purchaseableFormas
433 [-]: GETTABLE  R22 R22 K46  ; R22 := R22[2]
434 [-]: CALL      R21 2 2      ; R21 := R21(R22)
435 [-]: GETTABLE  R21 R21 K46  ; R21 := R21[2]
436 [-]: GETUPVAL  R22 U3       ; R22 := U3
437 [-]: GETGLOBAL R23 K91      ; R23 := purchaseableFormas
438 [-]: GETTABLE  R23 R23 K105 ; R23 := R23[5]
439 [-]: CALL      R22 2 2      ; R22 := R22(R23)
440 [-]: GETTABLE  R22 R22 K46  ; R22 := R22[2]
441 [-]: GETUPVAL  R23 U1       ; R23 := U1
442 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["info"]
443 [-]: GETTABLE  R23 R23 K94  ; R23 := R23["mItemType"]
444 [-]: SELF      R23 R23 K106 ; R24 := R23; R23 := R23["0x8B598ED4"]
445 [-]: GETGLOBAL R25 K107     ; R25 := gPowerSuitType
446 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
447 [-]: TEST      R23 0        ; if not R23 then PC := 465
448 [-]: JMP       465          ; PC := 465
449 [-]: GETUPVAL  R23 U1       ; R23 := U1
450 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["info"]
451 [-]: GETTABLE  R23 R23 K94  ; R23 := R23["mItemType"]
452 [-]: SELF      R23 R23 K106 ; R24 := R23; R23 := R23["0x8B598ED4"]
453 [-]: GETGLOBAL R25 K108     ; R25 := gSentinelPowerSuitType
454 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
455 [-]: TEST      R23 1        ; if R23 then PC := 466
456 [-]: JMP       466          ; PC := 466
457 [-]: GETUPVAL  R23 U1       ; R23 := U1
458 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["info"]
459 [-]: GETTABLE  R23 R23 K94  ; R23 := R23["mItemType"]
460 [-]: SELF      R23 R23 K106 ; R24 := R23; R23 := R23["0x8B598ED4"]
461 [-]: GETGLOBAL R25 K109     ; R25 := gFlightJetPackItemType
462 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
463 [-]: JMP       466          ; PC := 466
464 [-]: MOVE      R23 R0       ; R23 := R0
465 [-]: MOVE      R23 R1       ; R23 := R1
466 [-]: TEST      R23 0        ; if not R23 then PC := 472
467 [-]: JMP       472          ; PC := 472
468 [-]: GETTABLE  R24 R13 K46  ; R24 := R13[2]
469 [-]: SUB       R24 R24 R21  ; R24 := R24 - R21
470 [-]: SUB       R24 R24 R22  ; R24 := R24 - R22
471 [-]: SETTABLE  R13 K46 R24  ; R13[2] := R24
472 [-]: GETTABLE  R24 R13 K46  ; R24 := R13[2]
473 [-]: GETTABLE  R25 R13 K39  ; R25 := R13[1]
474 [-]: LE        1 R25 R24    ; if R25 <= R24 then PC := 482
475 [-]: JMP       482          ; PC := 482
476 [-]: TEST      R23 1        ; if R23 then PC := 481
477 [-]: JMP       481          ; PC := 481
478 [-]: GETTABLE  R24 R13 K39  ; R24 := R13[1]
479 [-]: LE        1 R24 R21    ; if R24 <= R21 then PC := 482
480 [-]: JMP       482          ; PC := 482
481 [-]: MOVE      R14 R0       ; R14 := R0
482 [-]: MOVE      R14 R1       ; R14 := R1
483 [-]: LE        0 R18 R19    ; if R18 > R19 then PC := 487
484 [-]: JMP       487          ; PC := 487
485 [-]: MOVE      R24 R3       ; R24 := R3
486 [-]: JMP       489          ; PC := 489
487 [-]: MOVE      R24 R0       ; R24 := R0
488 [-]: MOVE      R24 R1       ; R24 := R1
489 [-]: SETTABLE  R20 K59 R24  ; R20["BtnCountMode"] := R24
490 [-]: GETTABLE  R24 R13 K46  ; R24 := R13[2]
491 [-]: LOADK     R25 K61      ; R25 := "/"
492 [-]: GETUPVAL  R26 U6       ; R26 := U6
493 [-]: GETTABLE  R26 R26 K62  ; R26 := R26["0x7E197415"]
494 [-]: GETTABLE  R27 R13 K39  ; R27 := R13[1]
495 [-]: CALL      R26 2 2      ; R26 := R26(R27)
496 [-]: CONCAT    R24 R24 R26  ; R24 := R24 .. R25 .. R26
497 [-]: SETTABLE  R20 K60 R24  ; R20["BtnCount"] := R24
498 [-]: SETTABLE  R20 K63 R14  ; R20["BtnCheck"] := R14
499 [-]: GETUPVAL  R24 U8       ; R24 := U8
500 [-]: TEST      R24 0        ; if not R24 then PC := 515
501 [-]: JMP       515          ; PC := 515
502 [-]: GETGLOBAL R24 K65      ; R24 := _G
503 [-]: GETTABLE  R24 R24 K66  ; R24 := R24["UIColor_MediumGrey"]
504 [-]: SETTABLE  R20 K64 R24  ; R20["BtnDescColor"] := R24
505 [-]: SETTABLE  R20 K67 K84  ; R20["BtnCountAlpha"] := 0
506 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
507 [-]: SELF      R24 R24 K2   ; R25 := R24; R24 := R24["0x5DB0BD4"]
508 [-]: LOADK     R26 K110     ; R26 := "/Lotus/Language/Menu/Loadout_Polarize_WillExpireTitle"
509 [-]: MOVE      R27 R1       ; R27 := R1
510 [-]: NEWTABLE  R28 0 1      ; R28 := {}
511 [-]: SETTABLE  R28 K111 R2  ; R28["ITEM"] := R2
512 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
513 [-]: SETTABLE  R20 K35 R24  ; R20["BtnDesc"] := R24
514 [-]: JMP       576          ; PC := 576
515 [-]: GETTABLE  R24 R20 K59  ; R24 := R20["BtnCountMode"]
516 [-]: TEST      R24 0        ; if not R24 then PC := 520
517 [-]: JMP       520          ; PC := 520
518 [-]: TEST      R14 1        ; if R14 then PC := 576
519 [-]: JMP       576          ; PC := 576
520 [-]: GETGLOBAL R24 K65      ; R24 := _G
521 [-]: GETTABLE  R24 R24 K66  ; R24 := R24["UIColor_MediumGrey"]
522 [-]: SETTABLE  R20 K64 R24  ; R20["BtnDescColor"] := R24
523 [-]: SETTABLE  R20 K67 K82  ; R20["BtnCountAlpha"] := 75
524 [-]: TEST      R3 0         ; if not R3 then PC := 536
525 [-]: JMP       536          ; PC := 536
526 [-]: SETTABLE  R20 K35 R5   ; R20["BtnDesc"] := R5
527 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
528 [-]: SELF      R24 R24 K2   ; R25 := R24; R24 := R24["0x5DB0BD4"]
529 [-]: LOADK     R26 K112     ; R26 := "/Lotus/Language/Menu/Loadout_Polarize_UnGildedModularDesc"
530 [-]: MOVE      R27 R0       ; R27 := R0
531 [-]: NEWTABLE  R28 0 1      ; R28 := {}
532 [-]: SETTABLE  R28 K22 R4   ; R28["TYPE"] := R4
533 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
534 [-]: SETTABLE  R20 K69 R24  ; R20["ErrorMsg"] := R24
535 [-]: JMP       576          ; PC := 576
536 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
537 [-]: SELF      R24 R24 K2   ; R25 := R24; R24 := R24["0x5DB0BD4"]
538 [-]: LOADK     R26 K113     ; R26 := "/Lotus/Language/Menu/Loadout_Polarize_TooLowLevel"
539 [-]: MOVE      R27 R1       ; R27 := R1
540 [-]: NEWTABLE  R28 0 1      ; R28 := {}
541 [-]: SETTABLE  R28 K111 R2  ; R28["ITEM"] := R2
542 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
543 [-]: SETTABLE  R20 K35 R24  ; R20["BtnDesc"] := R24
544 [-]: GETTABLE  R24 R20 K59  ; R24 := R20["BtnCountMode"]
545 [-]: TEST      R24 0        ; if not R24 then PC := 574
546 [-]: JMP       574          ; PC := 574
547 [-]: GETUPVAL  R24 U7       ; R24 := U7
548 [-]: GETTABLE  R24 R24 K83  ; R24 := R24["0xC5BE56F"]
549 [-]: MOVE      R25 R12      ; R25 := R12
550 [-]: LOADNIL   R26 R26      ; R26 := nil
551 [-]: MOVE      R27 R1       ; R27 := R1
552 [-]: CALL      R24 4 3      ; R24,R25 := R24(R25,R26,R27)
553 [-]: GETGLOBAL R26 K1       ; R26 := mMovie
554 [-]: SELF      R26 R26 K2   ; R27 := R26; R26 := R26["0x5DB0BD4"]
555 [-]: LOADK     R28 K85      ; R28 := "/Lotus/Language/Menu/Loadout_Upgrade_CatalystRequired"
556 [-]: MOVE      R29 R1       ; R29 := R1
557 [-]: NEWTABLE  R30 0 2      ; R30 := {}
558 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
559 [-]: SELF      R31 R31 K2   ; R32 := R31; R31 := R31["0x5DB0BD4"]
560 [-]: SELF      R33 R12 K5   ; R34 := R12; R33 := R12["0x616C74B6"]
561 [-]: CALL      R33 2 2      ; R33 := R33(R34)
562 [-]: SELF      R33 R33 K79  ; R34 := R33; R33 := R33["0x5EC7A3D2"]
563 [-]: CALL      R33 2 2      ; R33 := R33(R34)
564 [-]: MOVE      R34 R0       ; R34 := R0
565 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
566 [-]: SETTABLE  R30 K22 R31  ; R30["TYPE"] := R31
567 [-]: GETGLOBAL R31 K3       ; R31 := 0x9FAED6BC
568 [-]: MOVE      R32 R25      ; R32 := R25
569 [-]: CALL      R31 2 2      ; R31 := R31(R32)
570 [-]: SETTABLE  R30 K86 R31  ; R30["COST"] := R31
571 [-]: CALL      R26 5 2      ; R26 := R26(R27,R28,R29,R30)
572 [-]: SETTABLE  R20 K35 R26  ; R20["BtnDesc"] := R26
573 [-]: JMP       576          ; PC := 576
574 [-]: GETTABLE  R26 R20 K35  ; R26 := R20["BtnDesc"]
575 [-]: SETTABLE  R20 K69 R26  ; R20["ErrorMsg"] := R26
576 [-]: GETGLOBAL R26 K25      ; R26 := table
577 [-]: GETTABLE  R26 R26 K26  ; R26 := R26["0xE6450C9D"]
578 [-]: MOVE      R27 R1       ; R27 := R1
579 [-]: MOVE      R28 R20      ; R28 := R20
580 [-]: CALL      R26 3 1      ; R26(R27,R28)
581 [-]: NEWTABLE  R26 0 5      ; R26 := {}
582 [-]: SETTABLE  R26 K27 K28  ; R26["Enabled"] := "0x1"
583 [-]: SETTABLE  R26 K29 K114 ; R26["Choice"] := "SWAP"
584 [-]: SETTABLE  R26 K31 K115 ; R26["Title"] := "/Lotus/Language/Menu/Loadout_SwapPolarity_Title"
585 [-]: SETTABLE  R26 K33 K116 ; R26["Desc"] := "/Lotus/Language/Menu/Loadout_SwapPolarity_Desc"
586 [-]: GETGLOBAL R27 K38      ; R27 := upgradeActionsIcons
587 [-]: GETTABLE  R27 R27 K117 ; R27 := R27[4]
588 [-]: SETTABLE  R26 K37 R27  ; R26["Image"] := R27
589 [-]: GETUPVAL  R27 U1       ; R27 := U1
590 [-]: GETTABLE  R27 R27 K40  ; R27 := R27["info"]
591 [-]: GETTABLE  R27 R27 K95  ; R27 := R27["mPolarized"]
592 [-]: LT        1 K84 R27    ; if 0 < R27 then PC := 595
593 [-]: JMP       595          ; PC := 595
594 [-]: MOVE      R27 R0       ; R27 := R0
595 [-]: MOVE      R27 R1       ; R27 := R1
596 [-]: GETUPVAL  R28 U6       ; R28 := U6
597 [-]: GETTABLE  R28 R28 K51  ; R28 := R28["0xF81722A2"]
598 [-]: MOVE      R29 R27      ; R29 := R27
599 [-]: GETTABLE  R30 R26 K31  ; R30 := R26["Title"]
600 [-]: LOADK     R31 K118     ; R31 := "/Lotus/Language/Menu/Loadout_SwapPolarity_ItemNotPolarized"
601 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
602 [-]: SETTABLE  R26 K35 R28  ; R26["BtnDesc"] := R28
603 [-]: GETUPVAL  R28 U8       ; R28 := U8
604 [-]: TEST      R28 0        ; if not R28 then PC := 618
605 [-]: JMP       618          ; PC := 618
606 [-]: GETGLOBAL R28 K65      ; R28 := _G
607 [-]: GETTABLE  R28 R28 K66  ; R28 := R28["UIColor_MediumGrey"]
608 [-]: SETTABLE  R26 K64 R28  ; R26["BtnDescColor"] := R28
609 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
610 [-]: SELF      R28 R28 K2   ; R29 := R28; R28 := R28["0x5DB0BD4"]
611 [-]: LOADK     R30 K110     ; R30 := "/Lotus/Language/Menu/Loadout_Polarize_WillExpireTitle"
612 [-]: MOVE      R31 R1       ; R31 := R1
613 [-]: NEWTABLE  R32 0 1      ; R32 := {}
614 [-]: SETTABLE  R32 K111 R2  ; R32["ITEM"] := R2
615 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
616 [-]: SETTABLE  R26 K35 R28  ; R26["BtnDesc"] := R28
617 [-]: JMP       631          ; PC := 631
618 [-]: TEST      R27 1        ; if R27 then PC := 631
619 [-]: JMP       631          ; PC := 631
620 [-]: GETGLOBAL R28 K65      ; R28 := _G
621 [-]: GETTABLE  R28 R28 K66  ; R28 := R28["UIColor_MediumGrey"]
622 [-]: SETTABLE  R26 K64 R28  ; R26["BtnDescColor"] := R28
623 [-]: GETGLOBAL R28 K1       ; R28 := mMovie
624 [-]: SELF      R28 R28 K2   ; R29 := R28; R28 := R28["0x5DB0BD4"]
625 [-]: LOADK     R30 K119     ; R30 := "/Lotus/Language/Menu/Loadout_SwapPolarity_NotPolarizedErrorMsg"
626 [-]: MOVE      R31 R1       ; R31 := R1
627 [-]: NEWTABLE  R32 0 1      ; R32 := {}
628 [-]: SETTABLE  R32 K111 R2  ; R32["ITEM"] := R2
629 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
630 [-]: SETTABLE  R26 K69 R28  ; R26["ErrorMsg"] := R28
631 [-]: GETGLOBAL R28 K25      ; R28 := table
632 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["0xE6450C9D"]
633 [-]: MOVE      R29 R1       ; R29 := R1
634 [-]: MOVE      R30 R26      ; R30 := R26
635 [-]: CALL      R28 3 1      ; R28(R29,R30)
636 [-]: GETUPVAL  R28 U7       ; R28 := U7
637 [-]: GETTABLE  R28 R28 K120 ; R28 := R28["0x2AAC7A8C"]
638 [-]: GETGLOBAL R29 K121     ; R29 := secondDreamQuest
639 [-]: CALL      R28 2 2      ; R28 := R28(R29)
640 [-]: TEST      R28 0        ; if not R28 then PC := 674
641 [-]: JMP       674          ; PC := 674
642 [-]: GETGLOBAL R28 K6       ; R28 := _T
643 [-]: GETTABLE  R28 R28 K122 ; R28 := R28["upgradeItemCategory"]
644 [-]: GETGLOBAL R29 K123     ; R29 := Engine
645 [-]: GETTABLE  R29 R29 K124 ; R29 := R29["Item_KubrowPets"]
646 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 672
647 [-]: JMP       672          ; PC := 672
648 [-]: GETGLOBAL R28 K6       ; R28 := _T
649 [-]: GETTABLE  R28 R28 K122 ; R28 := R28["upgradeItemCategory"]
650 [-]: GETGLOBAL R29 K123     ; R29 := Engine
651 [-]: GETTABLE  R29 R29 K125 ; R29 := R29["Item_MoaPets"]
652 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 672
653 [-]: JMP       672          ; PC := 672
654 [-]: GETGLOBAL R28 K6       ; R28 := _T
655 [-]: GETTABLE  R28 R28 K122 ; R28 := R28["upgradeItemCategory"]
656 [-]: GETGLOBAL R29 K123     ; R29 := Engine
657 [-]: GETTABLE  R29 R29 K126 ; R29 := R29["Item_Sentinels"]
658 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 672
659 [-]: JMP       672          ; PC := 672
660 [-]: GETGLOBAL R28 K6       ; R28 := _T
661 [-]: GETTABLE  R28 R28 K122 ; R28 := R28["upgradeItemCategory"]
662 [-]: GETGLOBAL R29 K123     ; R29 := Engine
663 [-]: GETTABLE  R29 R29 K127 ; R29 := R29["Item_SentinelWeapons"]
664 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 672
665 [-]: JMP       672          ; PC := 672
666 [-]: GETGLOBAL R28 K6       ; R28 := _T
667 [-]: GETTABLE  R28 R28 K122 ; R28 := R28["upgradeItemCategory"]
668 [-]: GETGLOBAL R29 K123     ; R29 := Engine
669 [-]: GETTABLE  R29 R29 K128 ; R29 := R29["Item_SpecialItems"]
670 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 673
671 [-]: JMP       673          ; PC := 673
672 [-]: MOVE      R28 R0       ; R28 := R0
673 [-]: MOVE      R28 R1       ; R28 := R1
674 [-]: TEST      R28 0        ; if not R28 then PC := 824
675 [-]: JMP       824          ; PC := 824
676 [-]: NEWTABLE  R29 0 5      ; R29 := {}
677 [-]: SETTABLE  R29 K27 K28  ; R29["Enabled"] := "0x1"
678 [-]: SETTABLE  R29 K29 K129 ; R29["Choice"] := "LENS"
679 [-]: SETTABLE  R29 K31 K130 ; R29["Title"] := "/Lotus/Language/Menu/Loadout_Lens"
680 [-]: SETTABLE  R29 K33 K131 ; R29["Desc"] := "/Lotus/Language/Menu/Loadout_Lens_Desc"
681 [-]: GETGLOBAL R30 K38      ; R30 := upgradeActionsIcons
682 [-]: GETTABLE  R30 R30 K105 ; R30 := R30[5]
683 [-]: SETTABLE  R29 K37 R30  ; R29["Image"] := R30
684 [-]: GETUPVAL  R30 U3       ; R30 := U3
685 [-]: GETGLOBAL R31 K132     ; R31 := gFocusLensType
686 [-]: CALL      R30 2 2      ; R30 := R30(R31)
687 [-]: MOVE      R13 R30      ; R13 := R30
688 [-]: GETTABLE  R30 R13 K46  ; R30 := R13[2]
689 [-]: LT        1 K84 R30    ; if 0 < R30 then PC := 692
690 [-]: JMP       692          ; PC := 692
691 [-]: MOVE      R14 R0       ; R14 := R0
692 [-]: MOVE      R14 R1       ; R14 := R1
693 [-]: GETGLOBAL R30 K0       ; R30 := 0x400E7765
694 [-]: GETUPVAL  R31 U1       ; R31 := U1
695 [-]: GETTABLE  R31 R31 K40  ; R31 := R31["info"]
696 [-]: GETTABLE  R31 R31 K133 ; R31 := R31["mFocusLens"]
697 [-]: CALL      R30 2 2      ; R30 := R30(R31)
698 [-]: TEST      R30 1        ; if R30 then PC := 756
699 [-]: JMP       756          ; PC := 756
700 [-]: GETUPVAL  R30 U2       ; R30 := U2
701 [-]: SELF      R30 R30 K134 ; R31 := R30; R30 := R30["0x62FBC1B8"]
702 [-]: GETUPVAL  R32 U1       ; R32 := U1
703 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["info"]
704 [-]: GETTABLE  R32 R32 K133 ; R32 := R32["mFocusLens"]
705 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
706 [-]: GETGLOBAL R31 K0       ; R31 := 0x400E7765
707 [-]: MOVE      R32 R30      ; R32 := R30
708 [-]: CALL      R31 2 2      ; R31 := R31(R32)
709 [-]: TEST      R31 1        ; if R31 then PC := 735
710 [-]: JMP       735          ; PC := 735
711 [-]: GETUPVAL  R31 U4       ; R31 := U4
712 [-]: GETTABLE  R31 R31 K47  ; R31 := R31["0x1B75557F"]
713 [-]: GETGLOBAL R32 K1       ; R32 := mMovie
714 [-]: MOVE      R33 R30      ; R33 := R30
715 [-]: NEWTABLE  R34 0 1      ; R34 := {}
716 [-]: GETUPVAL  R35 U5       ; R35 := U5
717 [-]: SETTABLE  R34 K48 R35  ; R34["GameData"] := R35
718 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
719 [-]: MOVE      R29 R31      ; R29 := R31
720 [-]: SETTABLE  R29 K27 K28  ; R29["Enabled"] := "0x1"
721 [-]: SETTABLE  R29 K29 K129 ; R29["Choice"] := "LENS"
722 [-]: SELF      R31 R30 K5   ; R32 := R30; R31 := R30["0x616C74B6"]
723 [-]: CALL      R31 2 2      ; R31 := R31(R32)
724 [-]: SELF      R31 R31 K79  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
725 [-]: CALL      R31 2 2      ; R31 := R31(R32)
726 [-]: SETTABLE  R29 K31 R31  ; R29["Title"] := R31
727 [-]: SELF      R31 R30 K135 ; R32 := R30; R31 := R30["0x42300EB5"]
728 [-]: CALL      R31 2 2      ; R31 := R31(R32)
729 [-]: SELF      R31 R31 K79  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
730 [-]: CALL      R31 2 2      ; R31 := R31(R32)
731 [-]: SETTABLE  R29 K33 R31  ; R29["Desc"] := R31
732 [-]: SETTABLE  R29 K73 K28  ; R29["IconAsImage"] := "0x1"
733 [-]: SETTABLE  R29 K74 K136 ; R29["ImageWidth"] := 240
734 [-]: SETTABLE  R29 K76 K137 ; R29["ImageHeight"] := 160
735 [-]: SETTABLE  R29 K35 K138 ; R29["BtnDesc"] := "/Lotus/Language/Menu/Loadout_LensReplace"
736 [-]: GETGLOBAL R31 K92      ; R31 := gGameConfig
737 [-]: SELF      R31 R31 K139 ; R32 := R31; R31 := R31["0x3070974D"]
738 [-]: GETUPVAL  R33 U1       ; R33 := U1
739 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["info"]
740 [-]: GETTABLE  R33 R33 K94  ; R33 := R33["mItemType"]
741 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
742 [-]: EQ        1 R19 R31    ; if R19 == R31 then PC := 819
743 [-]: JMP       819          ; PC := 819
744 [-]: GETGLOBAL R31 K65      ; R31 := _G
745 [-]: GETTABLE  R31 R31 K66  ; R31 := R31["UIColor_MediumGrey"]
746 [-]: SETTABLE  R29 K64 R31  ; R29["BtnDescColor"] := R31
747 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
748 [-]: SELF      R31 R31 K2   ; R32 := R31; R31 := R31["0x5DB0BD4"]
749 [-]: LOADK     R33 K140     ; R33 := "/Lotus/Language/Menu/Loadout_LensErrorItemNotMaxRank"
750 [-]: MOVE      R34 R1       ; R34 := R1
751 [-]: NEWTABLE  R35 0 1      ; R35 := {}
752 [-]: SETTABLE  R35 K111 R2  ; R35["ITEM"] := R2
753 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
754 [-]: SETTABLE  R29 K69 R31  ; R29["ErrorMsg"] := R31
755 [-]: JMP       819          ; PC := 819
756 [-]: GETGLOBAL R31 K92      ; R31 := gGameConfig
757 [-]: SELF      R31 R31 K139 ; R32 := R31; R31 := R31["0x3070974D"]
758 [-]: GETUPVAL  R33 U1       ; R33 := U1
759 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["info"]
760 [-]: GETTABLE  R33 R33 K94  ; R33 := R33["mItemType"]
761 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
762 [-]: EQ        1 R19 R31    ; if R19 == R31 then PC := 765
763 [-]: JMP       765          ; PC := 765
764 [-]: MOVE      R31 R0       ; R31 := R0
765 [-]: MOVE      R31 R1       ; R31 := R1
766 [-]: SETTABLE  R29 K59 R31  ; R29["BtnCountMode"] := R31
767 [-]: GETGLOBAL R31 K142     ; R31 := genericFocusIcon
768 [-]: SETTABLE  R29 K141 R31 ; R29["Icon"] := R31
769 [-]: SETTABLE  R29 K143 K144; R29["BtnImgHeight"] := 30
770 [-]: SETTABLE  R29 K145 K144; R29["BtnImgWidth"] := 30
771 [-]: GETGLOBAL R31 K65      ; R31 := _G
772 [-]: GETTABLE  R31 R31 K147 ; R31 := R31["UIColor_DarkGrey"]
773 [-]: SETTABLE  R29 K146 R31 ; R29["BtnImgTint"] := R31
774 [-]: GETTABLE  R31 R13 K46  ; R31 := R13[2]
775 [-]: LOADK     R32 K148     ; R32 := "/1"
776 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
777 [-]: SETTABLE  R29 K60 R31  ; R29["BtnCount"] := R31
778 [-]: SETTABLE  R29 K63 R14  ; R29["BtnCheck"] := R14
779 [-]: SETTABLE  R29 K74 K149 ; R29["ImageWidth"] := 150
780 [-]: SETTABLE  R29 K76 K149 ; R29["ImageHeight"] := 150
781 [-]: SETTABLE  R29 K35 K150 ; R29["BtnDesc"] := "/Lotus/Language/Menu/Loadout_Select_Lens"
782 [-]: GETTABLE  R31 R29 K59  ; R31 := R29["BtnCountMode"]
783 [-]: TEST      R31 0        ; if not R31 then PC := 787
784 [-]: JMP       787          ; PC := 787
785 [-]: TEST      R3 0         ; if not R3 then PC := 819
786 [-]: JMP       819          ; PC := 819
787 [-]: TEST      R3 0         ; if not R3 then PC := 799
788 [-]: JMP       799          ; PC := 799
789 [-]: SETTABLE  R29 K35 R5   ; R29["BtnDesc"] := R5
790 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
791 [-]: SELF      R31 R31 K2   ; R32 := R31; R31 := R31["0x5DB0BD4"]
792 [-]: LOADK     R33 K151     ; R33 := "/Lotus/Language/Menu/Loadout_FocusLens_UnGildedModularDesc"
793 [-]: MOVE      R34 R0       ; R34 := R0
794 [-]: NEWTABLE  R35 0 1      ; R35 := {}
795 [-]: SETTABLE  R35 K22 R4   ; R35["TYPE"] := R4
796 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
797 [-]: SETTABLE  R29 K69 R31  ; R29["ErrorMsg"] := R31
798 [-]: JMP       815          ; PC := 815
799 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
800 [-]: SELF      R31 R31 K2   ; R32 := R31; R31 := R31["0x5DB0BD4"]
801 [-]: LOADK     R33 K140     ; R33 := "/Lotus/Language/Menu/Loadout_LensErrorItemNotMaxRank"
802 [-]: MOVE      R34 R1       ; R34 := R1
803 [-]: NEWTABLE  R35 0 1      ; R35 := {}
804 [-]: SETTABLE  R35 K111 R2  ; R35["ITEM"] := R2
805 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
806 [-]: SETTABLE  R29 K35 R31  ; R29["BtnDesc"] := R31
807 [-]: GETGLOBAL R31 K1       ; R31 := mMovie
808 [-]: SELF      R31 R31 K2   ; R32 := R31; R31 := R31["0x5DB0BD4"]
809 [-]: LOADK     R33 K140     ; R33 := "/Lotus/Language/Menu/Loadout_LensErrorItemNotMaxRank"
810 [-]: MOVE      R34 R1       ; R34 := R1
811 [-]: NEWTABLE  R35 0 1      ; R35 := {}
812 [-]: SETTABLE  R35 K111 R2  ; R35["ITEM"] := R2
813 [-]: CALL      R31 5 2      ; R31 := R31(R32,R33,R34,R35)
814 [-]: SETTABLE  R29 K69 R31  ; R29["ErrorMsg"] := R31
815 [-]: SETTABLE  R29 K67 K68  ; R29["BtnCountAlpha"] := 50
816 [-]: GETGLOBAL R31 K65      ; R31 := _G
817 [-]: GETTABLE  R31 R31 K66  ; R31 := R31["UIColor_MediumGrey"]
818 [-]: SETTABLE  R29 K64 R31  ; R29["BtnDescColor"] := R31
819 [-]: GETGLOBAL R31 K25      ; R31 := table
820 [-]: GETTABLE  R31 R31 K26  ; R31 := R31["0xE6450C9D"]
821 [-]: MOVE      R32 R1       ; R32 := R1
822 [-]: MOVE      R33 R29      ; R33 := R29
823 [-]: CALL      R31 3 1      ; R31(R32,R33)
824 [-]: MOVE      R31 R0       ; R31 := R0
825 [-]: GETGLOBAL R32 K0       ; R32 := 0x400E7765
826 [-]: GETUPVAL  R33 U1       ; R33 := U1
827 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["info"]
828 [-]: GETTABLE  R33 R33 K152 ; R33 := R33["mUpgradeType"]
829 [-]: CALL      R32 2 2      ; R32 := R32(R33)
830 [-]: TEST      R32 1        ; if R32 then PC := 833
831 [-]: JMP       833          ; PC := 833
832 [-]: MOVE      R31 R1       ; R31 := R1
833 [-]: TEST      R31 0        ; if not R31 then PC := 933
834 [-]: JMP       933          ; PC := 933
835 [-]: MOVE      R32 R0       ; R32 := R0
836 [-]: GETUPVAL  R33 U9       ; R33 := U9
837 [-]: CALL      R33 1 2      ; R33 := R33()
838 [-]: GETUPVAL  R34 U1       ; R34 := U1
839 [-]: GETTABLE  R34 R34 K40  ; R34 := R34["info"]
840 [-]: GETTABLE  R34 R34 K94  ; R34 := R34["mItemType"]
841 [-]: LOADK     R35 K39      ; R35 := 1
842 [-]: LEN       R36 R33      ; R36 := # R33
843 [-]: LOADK     R37 K39      ; R37 := 1
844 [-]: FORPREP   R35 870      ; R35 -= R37; PC := 870
845 [-]: GETTABLE  R39 R33 R38  ; R39 := R33[R38]
846 [-]: GETTABLE  R40 R39 K94  ; R40 := R39["mItemType"]
847 [-]: EQ        0 R40 R34    ; if R40 ~= R34 then PC := 870
848 [-]: JMP       870          ; PC := 870
849 [-]: GETGLOBAL R40 K153     ; R40 := gGameData
850 [-]: SELF      R40 R40 K154 ; R41 := R40; R40 := R40["0x1FBC4F24"]
851 [-]: GETTABLE  R42 R39 K155 ; R42 := R39["mItemId"]
852 [-]: GETTABLE  R42 R42 K156 ; R42 := R42["mId"]
853 [-]: GETGLOBAL R43 K6       ; R43 := _T
854 [-]: GETTABLE  R43 R43 K7   ; R43 := R43["upgradeItemLot"]
855 [-]: GETGLOBAL R44 K6       ; R44 := _T
856 [-]: GETTABLE  R44 R44 K15  ; R44 := R44["upgradeItemSlot"]
857 [-]: CALL      R40 5 2      ; R40 := R40(R41,R42,R43,R44)
858 [-]: TEST      R40 1        ; if R40 then PC := 870
859 [-]: JMP       870          ; PC := 870
860 [-]: GETTABLE  R40 R39 K155 ; R40 := R39["mItemId"]
861 [-]: GETTABLE  R40 R40 K156 ; R40 := R40["mId"]
862 [-]: GETUPVAL  R41 U1       ; R41 := U1
863 [-]: GETTABLE  R41 R41 K40  ; R41 := R41["info"]
864 [-]: GETTABLE  R41 R41 K155 ; R41 := R41["mItemId"]
865 [-]: GETTABLE  R41 R41 K156 ; R41 := R41["mId"]
866 [-]: EQ        1 R40 R41    ; if R40 == R41 then PC := 870
867 [-]: JMP       870          ; PC := 870
868 [-]: MOVE      R32 R1       ; R32 := R1
869 [-]: JMP       871          ; PC := 871
870 [-]: FORLOOP   R35 845      ; R35 += R37; if R35 <= R36 then begin PC := 845; R38 := R35 end
871 [-]: GETGLOBAL R40 K153     ; R40 := gGameData
872 [-]: SELF      R40 R40 K154 ; R41 := R40; R40 := R40["0x1FBC4F24"]
873 [-]: GETUPVAL  R42 U1       ; R42 := U1
874 [-]: GETTABLE  R42 R42 K40  ; R42 := R42["info"]
875 [-]: GETTABLE  R42 R42 K155 ; R42 := R42["mItemId"]
876 [-]: GETTABLE  R42 R42 K156 ; R42 := R42["mId"]
877 [-]: GETGLOBAL R43 K6       ; R43 := _T
878 [-]: GETTABLE  R43 R43 K7   ; R43 := R43["upgradeItemLot"]
879 [-]: GETGLOBAL R44 K6       ; R44 := _T
880 [-]: GETTABLE  R44 R44 K15  ; R44 := R44["upgradeItemSlot"]
881 [-]: CALL      R40 5 2      ; R40 := R40(R41,R42,R43,R44)
882 [-]: NEWTABLE  R41 0 5      ; R41 := {}
883 [-]: SETTABLE  R41 K27 K28  ; R41["Enabled"] := "0x1"
884 [-]: SETTABLE  R41 K29 K157 ; R41["Choice"] := "FUSE"
885 [-]: SETTABLE  R41 K31 K158 ; R41["Title"] := "/Lotus/Language/Kingpins/FuseName"
886 [-]: SETTABLE  R41 K33 K159 ; R41["Desc"] := "/Lotus/Language/Kingpins/FuseDesc"
887 [-]: GETGLOBAL R42 K38      ; R42 := upgradeActionsIcons
888 [-]: GETTABLE  R42 R42 K160 ; R42 := R42[7]
889 [-]: SETTABLE  R41 K37 R42  ; R41["Image"] := R42
890 [-]: SETTABLE  R41 K35 K161 ; R41["BtnDesc"] := "/Lotus/Language/Kingpins/FuseBtnDesc"
891 [-]: TEST      R40 1        ; if R40 then PC := 895
892 [-]: JMP       895          ; PC := 895
893 [-]: TEST      R32 1        ; if R32 then PC := 928
894 [-]: JMP       928          ; PC := 928
895 [-]: TEST      R40 0        ; if not R40 then PC := 900
896 [-]: JMP       900          ; PC := 900
897 [-]: SETTABLE  R41 K35 K162 ; R41["BtnDesc"] := "/Lotus/Language/Kingpins/FuseErrorLockedWeapon"
898 [-]: SETTABLE  R41 K69 K162 ; R41["ErrorMsg"] := "/Lotus/Language/Kingpins/FuseErrorLockedWeapon"
899 [-]: JMP       924          ; PC := 924
900 [-]: TEST      R32 1        ; if R32 then PC := 924
901 [-]: JMP       924          ; PC := 924
902 [-]: GETGLOBAL R42 K23      ; R42 := string
903 [-]: GETTABLE  R42 R42 K24  ; R42 := R42["0x639C642A"]
904 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
905 [-]: SELF      R43 R43 K2   ; R44 := R43; R43 := R43["0x5DB0BD4"]
906 [-]: GETGLOBAL R45 K3       ; R45 := 0x9FAED6BC
907 [-]: GETUPVAL  R46 U1       ; R46 := U1
908 [-]: GETTABLE  R46 R46 K4   ; R46 := R46["storeItem"]
909 [-]: SELF      R46 R46 K5   ; R47 := R46; R46 := R46["0x616C74B6"]
910 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
911 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
912 [-]: MOVE      R46 R1       ; R46 := R1
913 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
914 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
915 [-]: GETGLOBAL R43 K1       ; R43 := mMovie
916 [-]: SELF      R43 R43 K2   ; R44 := R43; R43 := R43["0x5DB0BD4"]
917 [-]: LOADK     R45 K163     ; R45 := "/Lotus/Language/Kingpins/FuseErrorNoCompatWeapons"
918 [-]: MOVE      R46 R0       ; R46 := R0
919 [-]: NEWTABLE  R47 0 1      ; R47 := {}
920 [-]: SETTABLE  R47 K164 R42 ; R47["WEAPON"] := R42
921 [-]: CALL      R43 5 2      ; R43 := R43(R44,R45,R46,R47)
922 [-]: SETTABLE  R41 K35 R43  ; R41["BtnDesc"] := R43
923 [-]: SETTABLE  R41 K69 R43  ; R41["ErrorMsg"] := R43
924 [-]: SETTABLE  R41 K67 K68  ; R41["BtnCountAlpha"] := 50
925 [-]: GETGLOBAL R44 K65      ; R44 := _G
926 [-]: GETTABLE  R44 R44 K66  ; R44 := R44["UIColor_MediumGrey"]
927 [-]: SETTABLE  R41 K64 R44  ; R41["BtnDescColor"] := R44
928 [-]: GETGLOBAL R44 K25      ; R44 := table
929 [-]: GETTABLE  R44 R44 K26  ; R44 := R44["0xE6450C9D"]
930 [-]: MOVE      R45 R1       ; R45 := R1
931 [-]: MOVE      R46 R41      ; R46 := R41
932 [-]: CALL      R44 3 1      ; R44(R45,R46)
933 [-]: RETURN    R1 2         ; return R1
934 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3576
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MenuSuitAvatar"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6DA72501"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: MOVE      R0 R1        ; R0 := R1
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x1BDE0F53"]
 14 [-]: LOADK     R2 K5        ; R2 := "Mods"
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 51
 21 [-]: JMP       51           ; PC := 51
 22 [-]: MOVE      R2 R1        ; R2 := R1
 23 [-]: MOVE      R2 R1        ; R2 := R1
 24 [-]: GETGLOBAL R2 K1        ; R2 := _T
 25 [-]: SETTABLE  R2 K6 K5     ; R2["triggeredConsoleTag"] := "Mods"
 26 [-]: GETGLOBAL R2 K1        ; R2 := _T
 27 [-]: SETTABLE  R2 K7 K8     ; R2["previousConsoleTag"] := "Arsenal"
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["0x84DCC428"]
 30 [-]: CALL      R2 1 2       ; R2 := R2()
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x1BDE0F53"]
 37 [-]: LOADK     R3 K11       ; R3 := "ConsoleActivate"
 38 [-]: MOVE      R4 R0        ; R4 := R0
 39 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 40 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xDA085F65"]
 41 [-]: CALL      R2 2 1       ; R2(R3)
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETUPVAL  R2 U0        ; R2 := U0
 44 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x930EC5CF"]
 45 [-]: LOADK     R3 K14       ; R3 := "ConsoleTeleportAndActivate"
 46 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 47 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xDA085F65"]
 48 [-]: CALL      R2 2 1       ; R2(R3)
 49 [-]: GETUPVAL  R2 U3        ; R2 := U3
 50 [-]: CALL      R2 1 1       ; R2()
 51 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3595
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x97B489B5"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 23
 11 [-]: JMP       23           ; PC := 23
 12 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mCardIndex"]
 13 [-]: EQ        1 R1 K4      ; if R1 == -1 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["Id"]
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CALL      R1 3 1       ; R1(R2,R3)
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xCAB0A8A1"]
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3607
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3611
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["BackgroundMovie"]
  3 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
  4 [-]: LOADK     R2 K3        ; R2 := "ShowBlockingMessage"
  5 [-]: LOADK     R3 K4        ; R3 := "0"
  6 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 1       ; R0()
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETGLOBAL R1 K5        ; R1 := mMovie
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETUPVAL  R0 U3        ; R0 := U3
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K6 K7     ; R0["ArsenalUpgradeOpen"] := "0x1"
 19 [-]: GETUPVAL  R0 U4        ; R0 := U4
 20 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["0xB4BBB185"]
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: CALL      R0 2 1       ; R0(R1)
 23 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3625
; #Upvalues:       23
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: TEST      R0 0         ; if not R0 then PC := 34
  9 [-]: JMP       34           ; PC := 34
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6F2E05FD"]
 18 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
 19 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 20 [-]: TEST      R0 1         ; if R0 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x6F2E05FD"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x4E4AB1F0"]
 26 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 27 [-]: MOVE      R0 R0        ; R0 := R0
 28 [-]: GETUPVAL  R0 U0        ; R0 := U0
 29 [-]: TEST      R0 1         ; if R0 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: GETUPVAL  R0 U2        ; R0 := U2
 32 [-]: CALL      R0 1 1       ; R0()
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: GETUPVAL  R0 U3        ; R0 := U3
 35 [-]: TEST      R0 0         ; if not R0 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 38 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xA58BB96C"]
 39 [-]: CALL      R0 2 1       ; R0(R1)
 40 [-]: RETURN    R0 1         ; return 
 41 [-]: GETGLOBAL R0 K5        ; R0 := 0x6306558E
 42 [-]: CALL      R0 1 2       ; R0 := R0()
 43 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 44 [-]: GETUPVAL  R2 U4        ; R2 := U4
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: TEST      R1 1         ; if R1 then PC := 52
 47 [-]: JMP       52           ; PC := 52
 48 [-]: GETUPVAL  R1 U4        ; R1 := U4
 49 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8C7099E9"]
 50 [-]: MOVE      R3 R0        ; R3 := R0
 51 [-]: CALL      R1 3 1       ; R1(R2,R3)
 52 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 53 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x80D6B1A"]
 54 [-]: MOVE      R3 R0        ; R3 := R0
 55 [-]: CALL      R1 3 1       ; R1(R2,R3)
 56 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 57 [-]: GETUPVAL  R2 U5        ; R2 := U5
 58 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 59 [-]: TEST      R1 1         ; if R1 then PC := 65
 60 [-]: JMP       65           ; PC := 65
 61 [-]: GETUPVAL  R1 U5        ; R1 := U5
 62 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8C7099E9"]
 63 [-]: MOVE      R3 R0        ; R3 := R0
 64 [-]: CALL      R1 3 1       ; R1(R2,R3)
 65 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 66 [-]: GETUPVAL  R2 U6        ; R2 := U6
 67 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 68 [-]: TEST      R1 1         ; if R1 then PC := 74
 69 [-]: JMP       74           ; PC := 74
 70 [-]: GETUPVAL  R1 U6        ; R1 := U6
 71 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8C7099E9"]
 72 [-]: MOVE      R3 R0        ; R3 := R0
 73 [-]: CALL      R1 3 1       ; R1(R2,R3)
 74 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 75 [-]: GETGLOBAL R2 K8        ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["FusedUpgrade"]
 77 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 78 [-]: TEST      R1 1         ; if R1 then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETUPVAL  R1 U7        ; R1 := U7
 81 [-]: CALL      R1 1 1       ; R1()
 82 [-]: GETGLOBAL R1 K8        ; R1 := _T
 83 [-]: SETTABLE  R1 K9 K10    ; R1["FusedUpgrade"] := nil
 84 [-]: GETUPVAL  R1 U8        ; R1 := U8
 85 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 109
 86 [-]: JMP       109          ; PC := 109
 87 [-]: GETUPVAL  R1 U8        ; R1 := U8
 88 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x8C7099E9"]
 89 [-]: CALL      R1 2 1       ; R1(R2)
 90 [-]: GETUPVAL  R1 U8        ; R1 := U8
 91 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mShiftX"]
 92 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 93 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0xF3E132E0"]
 94 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 95 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 96 [-]: ADD       R1 K13 R1    ; R1 := 0.5 + R1
 97 [-]: GETGLOBAL R2 K14       ; R2 := backerMaterial
 98 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x94FB2E1A"]
 99 [-]: GETGLOBAL R4 K16       ; R4 := Lotus_Game
100 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["VISIBILITY_CENTER"]
101 [-]: MOVE      R5 R1        ; R5 := R1
102 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
103 [-]: GETGLOBAL R2 K18       ; R2 := gridTileMaterial
104 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x94FB2E1A"]
105 [-]: GETGLOBAL R4 K16       ; R4 := Lotus_Game
106 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["VISIBILITY_CENTER"]
107 [-]: MOVE      R5 R1        ; R5 := R1
108 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
109 [-]: GETGLOBAL R2 K19       ; R2 := 0xECFDD17
110 [-]: GETUPVAL  R3 U9        ; R3 := U9
111 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
112 [-]: JMP       130          ; PC := 130
113 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
114 [-]: GETTABLE  R8 R6 K20    ; R8 := R6["mInstance"]
115 [-]: CALL      R7 2 2       ; R7 := R7(R8)
116 [-]: TEST      R7 0         ; if not R7 then PC := 121
117 [-]: JMP       121          ; PC := 121
118 [-]: GETUPVAL  R7 U9        ; R7 := U9
119 [-]: SETTABLE  R7 R5 K10    ; R7[R5] := nil
120 [-]: JMP       130          ; PC := 130
121 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
122 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7["0x8C1ACCEF"]
123 [-]: CALL      R7 2 2       ; R7 := R7(R8)
124 [-]: SELF      R8 R6 K22    ; R9 := R6; R8 := R6["0x7DBDDA0B"]
125 [-]: MOVE      R10 R7       ; R10 := R7
126 [-]: CALL      R8 3 1       ; R8(R9,R10)
127 [-]: SELF      R8 R6 K6     ; R9 := R6; R8 := R6["0x8C7099E9"]
128 [-]: MOVE      R10 R0       ; R10 := R0
129 [-]: CALL      R8 3 1       ; R8(R9,R10)
130 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 113; R4 := R5 end
131 [-]: JMP       113          ; PC := 113
132 [-]: GETGLOBAL R8 K0        ; R8 := 0x400E7765
133 [-]: GETUPVAL  R9 U10       ; R9 := U10
134 [-]: CALL      R8 2 2       ; R8 := R8(R9)
135 [-]: TEST      R8 1         ; if R8 then PC := 140
136 [-]: JMP       140          ; PC := 140
137 [-]: GETUPVAL  R8 U10       ; R8 := U10
138 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8["0x8C7099E9"]
139 [-]: CALL      R8 2 1       ; R8(R9)
140 [-]: GETUPVAL  R8 U11       ; R8 := U11
141 [-]: TEST      R8 0         ; if not R8 then PC := 204
142 [-]: JMP       204          ; PC := 204
143 [-]: GETUPVAL  R8 U11       ; R8 := U11
144 [-]: GETUPVAL  R9 U11       ; R9 := U11
145 [-]: GETTABLE  R9 R9 K23    ; R9 := R9[1]
146 [-]: GETGLOBAL R10 K24      ; R10 := 0x4CDEF9FF
147 [-]: CALL      R10 1 2      ; R10 := R10()
148 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
149 [-]: SETTABLE  R8 K23 R9    ; R8[1] := R9
150 [-]: GETUPVAL  R8 U11       ; R8 := U11
151 [-]: GETGLOBAL R9 K25       ; R9 := math
152 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["0x8B011038"]
153 [-]: LOADK     R10 K27      ; R10 := 0
154 [-]: GETUPVAL  R11 U11      ; R11 := U11
155 [-]: GETTABLE  R11 R11 K23  ; R11 := R11[1]
156 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
157 [-]: SETTABLE  R8 K23 R9    ; R8[1] := R9
158 [-]: GETGLOBAL R8 K28       ; R8 := 0xB5A59043
159 [-]: LOADK     R9 K29       ; R9 := 255
160 [-]: LOADK     R10 K27      ; R10 := 0
161 [-]: LOADK     R11 K27      ; R11 := 0
162 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
163 [-]: GETGLOBAL R9 K28       ; R9 := 0xB5A59043
164 [-]: LOADK     R10 K29      ; R10 := 255
165 [-]: LOADK     R11 K29      ; R11 := 255
166 [-]: LOADK     R12 K29      ; R12 := 255
167 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
168 [-]: GETGLOBAL R10 K25      ; R10 := math
169 [-]: GETTABLE  R10 R10 K30  ; R10 := R10["0xF93F7CC8"]
170 [-]: GETGLOBAL R11 K31      ; R11 := 0xA1FD035F
171 [-]: GETUPVAL  R12 U11      ; R12 := U11
172 [-]: GETTABLE  R12 R12 K23  ; R12 := R12[1]
173 [-]: MUL       R12 R12 K32  ; R12 := R12 * 3
174 [-]: CALL      R11 2 2      ; R11 := R11(R12)
175 [-]: MUL       R11 R11 K33  ; R11 := R11 * 2
176 [-]: SUB       R11 R11 K23  ; R11 := R11 - 1
177 [-]: CALL      R10 2 2      ; R10 := R10(R11)
178 [-]: SELF      R11 R8 K34   ; R12 := R8; R11 := R8["0x93034B55"]
179 [-]: MOVE      R13 R9       ; R13 := R9
180 [-]: MOVE      R14 R10      ; R14 := R10
181 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
182 [-]: MOVE      R8 R11       ; R8 := R11
183 [-]: LOADK     R11 K33      ; R11 := 2
184 [-]: GETUPVAL  R12 U11      ; R12 := U11
185 [-]: LEN       R12 R12      ; R12 := # R12
186 [-]: LOADK     R13 K23      ; R13 := 1
187 [-]: FORPREP   R11 197      ; R11 -= R13; PC := 197
188 [-]: GETUPVAL  R15 U11      ; R15 := U11
189 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
190 [-]: GETGLOBAL R16 K1       ; R16 := mMovie
191 [-]: SELF      R16 R16 K35  ; R17 := R16; R16 := R16["0x1C19D966"]
192 [-]: MOVE      R18 R15      ; R18 := R15
193 [-]: LOADK     R19 K36      ; R19 := "_color"
194 [-]: SELF      R20 R8 K37   ; R21 := R8; R20 := R8["0x479E62B4"]
195 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
196 [-]: CALL      R16 0 1      ; R16(R17,...)
197 [-]: FORLOOP   R11 188      ; R11 += R13; if R11 <= R12 then begin PC := 188; R14 := R11 end
198 [-]: GETUPVAL  R16 U11      ; R16 := U11
199 [-]: GETTABLE  R16 R16 K23  ; R16 := R16[1]
200 [-]: LE        0 R16 K27    ; if R16 > 0 then PC := 204
201 [-]: JMP       204          ; PC := 204
202 [-]: LOADNIL   R16 R16      ; R16 := nil
203 [-]: MOVE      R16 R11      ; R16 := R11
204 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
205 [-]: GETUPVAL  R17 U12      ; R17 := U12
206 [-]: CALL      R16 2 2      ; R16 := R16(R17)
207 [-]: TEST      R16 1        ; if R16 then PC := 221
208 [-]: JMP       221          ; PC := 221
209 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
210 [-]: GETUPVAL  R17 U12      ; R17 := U12
211 [-]: GETTABLE  R17 R17 K38  ; R17 := R17["mScrollBar"]
212 [-]: CALL      R16 2 2      ; R16 := R16(R17)
213 [-]: TEST      R16 1        ; if R16 then PC := 221
214 [-]: JMP       221          ; PC := 221
215 [-]: GETUPVAL  R16 U12      ; R16 := U12
216 [-]: GETTABLE  R16 R16 K38  ; R16 := R16["mScrollBar"]
217 [-]: SELF      R16 R16 K6   ; R17 := R16; R16 := R16["0x8C7099E9"]
218 [-]: GETGLOBAL R18 K24      ; R18 := 0x4CDEF9FF
219 [-]: CALL      R18 1 0      ; R18,... := R18()
220 [-]: CALL      R16 0 1      ; R16(R17,...)
221 [-]: GETUPVAL  R16 U12      ; R16 := U12
222 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16["0x51396186"]
223 [-]: CLOSURE   R18 0        ; R18 := closure(Function #89.1)
224 [-]: GETUPVAL  R0 U13       ; R0 := U13
225 [-]: CALL      R16 3 1      ; R16(R17,R18)
226 [-]: GETUPVAL  R16 U14      ; R16 := U14
227 [-]: SELF      R16 R16 K39  ; R17 := R16; R16 := R16["0x51396186"]
228 [-]: CLOSURE   R18 1        ; R18 := closure(Function #89.2)
229 [-]: GETUPVAL  R0 U13       ; R0 := U13
230 [-]: CALL      R16 3 1      ; R16(R17,R18)
231 [-]: GETGLOBAL R16 K0       ; R16 := 0x400E7765
232 [-]: GETGLOBAL R17 K8       ; R17 := _T
233 [-]: GETTABLE  R17 R17 K40  ; R17 := R17["MenuSuitAvatar"]
234 [-]: CALL      R16 2 2      ; R16 := R16(R17)
235 [-]: TEST      R16 1        ; if R16 then PC := 257
236 [-]: JMP       257          ; PC := 257
237 [-]: GETGLOBAL R16 K8       ; R16 := _T
238 [-]: GETTABLE  R16 R16 K40  ; R16 := R16["MenuSuitAvatar"]
239 [-]: SELF      R16 R16 K41  ; R17 := R16; R16 := R16["0xDE5882DD"]
240 [-]: CALL      R16 2 2      ; R16 := R16(R17)
241 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
242 [-]: MOVE      R18 R16      ; R18 := R16
243 [-]: CALL      R17 2 2      ; R17 := R17(R18)
244 [-]: TEST      R17 0        ; if not R17 then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: GETGLOBAL R17 K42      ; R17 := gRegion
247 [-]: SELF      R17 R17 K43  ; R18 := R17; R17 := R17["0x372CB914"]
248 [-]: CALL      R17 2 2      ; R17 := R17(R18)
249 [-]: MOVE      R16 R17      ; R16 := R17
250 [-]: GETGLOBAL R17 K0       ; R17 := 0x400E7765
251 [-]: MOVE      R18 R16      ; R18 := R16
252 [-]: CALL      R17 2 2      ; R17 := R17(R18)
253 [-]: TEST      R17 1        ; if R17 then PC := 257
254 [-]: JMP       257          ; PC := 257
255 [-]: SELF      R17 R16 K44  ; R18 := R16; R17 := R16["0x3039CE95"]
256 [-]: CALL      R17 2 1      ; R17(R18)
257 [-]: GETUPVAL  R17 U15      ; R17 := U15
258 [-]: EQ        1 R17 K10    ; if R17 == nil then PC := 334
259 [-]: JMP       334          ; PC := 334
260 [-]: GETUPVAL  R17 U15      ; R17 := U15
261 [-]: GETTABLE  R17 R17 K45  ; R17 := R17["mEnabled"]
262 [-]: TEST      R17 0        ; if not R17 then PC := 334
263 [-]: JMP       334          ; PC := 334
264 [-]: GETGLOBAL R17 K46      ; R17 := 0xF595ADDE
265 [-]: GETGLOBAL R18 K1       ; R18 := mMovie
266 [-]: SELF      R18 R18 K47  ; R19 := R18; R18 := R18["0x6B7B470B"]
267 [-]: LOADK     R20 K48      ; R20 := "_root"
268 [-]: LOADK     R21 K49      ; R21 := "_xmouse"
269 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
270 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
271 [-]: GETGLOBAL R18 K46      ; R18 := 0xF595ADDE
272 [-]: GETGLOBAL R19 K1       ; R19 := mMovie
273 [-]: SELF      R19 R19 K47  ; R20 := R19; R19 := R19["0x6B7B470B"]
274 [-]: LOADK     R21 K48      ; R21 := "_root"
275 [-]: LOADK     R22 K50      ; R22 := "_ymouse"
276 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
277 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
278 [-]: GETUPVAL  R19 U15      ; R19 := U15
279 [-]: GETTABLE  R19 R19 K51  ; R19 := R19["mActiveX"]
280 [-]: LT        0 R17 R19    ; if R17 >= R19 then PC := 286
281 [-]: JMP       286          ; PC := 286
282 [-]: GETUPVAL  R19 U15      ; R19 := U15
283 [-]: GETTABLE  R19 R19 K52  ; R19 := R19["mActiveY"]
284 [-]: LT        1 R18 R19    ; if R18 < R19 then PC := 287
285 [-]: JMP       287          ; PC := 287
286 [-]: MOVE      R19 R0       ; R19 := R0
287 [-]: MOVE      R19 R1       ; R19 := R1
288 [-]: GETUPVAL  R20 U15      ; R20 := U15
289 [-]: GETTABLE  R20 R20 K53  ; R20 := R20["mActive"]
290 [-]: EQ        1 R20 R19    ; if R20 == R19 then PC := 334
291 [-]: JMP       334          ; PC := 334
292 [-]: GETUPVAL  R20 U16      ; R20 := U16
293 [-]: GETTABLE  R20 R20 K54  ; R20 := R20["0xF81722A2"]
294 [-]: GETUPVAL  R21 U15      ; R21 := U15
295 [-]: GETTABLE  R21 R21 K53  ; R21 := R21["mActive"]
296 [-]: EQ        1 R21 K10    ; if R21 == nil then PC := 299
297 [-]: JMP       299          ; PC := 299
298 [-]: MOVE      R21 R0       ; R21 := R0
299 [-]: MOVE      R21 R1       ; R21 := R1
300 [-]: LOADK     R22 K27      ; R22 := 0
301 [-]: LOADK     R23 K55      ; R23 := 0.20000000298023
302 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
303 [-]: GETUPVAL  R21 U15      ; R21 := U15
304 [-]: SETTABLE  R21 K53 R19  ; R21["mActive"] := R19
305 [-]: GETUPVAL  R21 U16      ; R21 := U16
306 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["0xF81722A2"]
307 [-]: GETUPVAL  R22 U15      ; R22 := U15
308 [-]: GETTABLE  R22 R22 K53  ; R22 := R22["mActive"]
309 [-]: LOADK     R23 K56      ; R23 := 100
310 [-]: LOADK     R24 K57      ; R24 := 50
311 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
312 [-]: GETUPVAL  R22 U16      ; R22 := U16
313 [-]: GETTABLE  R22 R22 K54  ; R22 := R22["0xF81722A2"]
314 [-]: GETUPVAL  R23 U15      ; R23 := U15
315 [-]: GETTABLE  R23 R23 K53  ; R23 := R23["mActive"]
316 [-]: LOADK     R24 K56      ; R24 := 100
317 [-]: LOADK     R25 K58      ; R25 := 30
318 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
319 [-]: GETGLOBAL R23 K59      ; R23 := 0x52E17A90
320 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
321 [-]: LOADK     R25 K60      ; R25 := "ScrollBarContainer"
322 [-]: GETGLOBAL R26 K61      ; R26 := UISys
323 [-]: GETTABLE  R26 R26 K62  ; R26 := R26["FlashInstance_SMOOTH_STEP"]
324 [-]: NEWTABLE  R27 2 0      ; R27 := {}
325 [-]: LOADK     R28 K63      ; R28 := "_alpha"
326 [-]: LOADK     R29 K64      ; R29 := "_xscale"
327 [-]: SETLIST   R27 2 1      ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
328 [-]: NEWTABLE  R28 2 0      ; R28 := {}
329 [-]: MOVE      R29 R21      ; R29 := R21
330 [-]: MOVE      R30 R22      ; R30 := R22
331 [-]: SETLIST   R28 2 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
332 [-]: MOVE      R29 R20      ; R29 := R20
333 [-]: CALL      R23 7 1      ; R23(R24,R25,R26,R27,R28,R29)
334 [-]: GETUPVAL  R23 U17      ; R23 := U17
335 [-]: TEST      R23 0        ; if not R23 then PC := 375
336 [-]: JMP       375          ; PC := 375
337 [-]: GETUPVAL  R23 U18      ; R23 := U18
338 [-]: SELF      R23 R23 K65  ; R24 := R23; R23 := R23["0xAFDDC504"]
339 [-]: CALL      R23 2 2      ; R23 := R23(R24)
340 [-]: TEST      R23 0        ; if not R23 then PC := 375
341 [-]: JMP       375          ; PC := 375
342 [-]: MOVE      R23 R0       ; R23 := R0
343 [-]: MOVE      R23 R17      ; R23 := R17
344 [-]: GETUPVAL  R23 U19      ; R23 := U19
345 [-]: CALL      R23 1 1      ; R23()
346 [-]: GETUPVAL  R23 U20      ; R23 := U20
347 [-]: CALL      R23 1 1      ; R23()
348 [-]: GETUPVAL  R23 U21      ; R23 := U21
349 [-]: MOVE      R24 R1       ; R24 := R1
350 [-]: CALL      R23 2 1      ; R23(R24)
351 [-]: GETUPVAL  R23 U14      ; R23 := U14
352 [-]: SELF      R23 R23 K66  ; R24 := R23; R23 := R23["0x6470BAF4"]
353 [-]: LOADNIL   R25 R25      ; R25 := nil
354 [-]: MOVE      R26 R1       ; R26 := R1
355 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
356 [-]: GETUPVAL  R23 U12      ; R23 := U12
357 [-]: SELF      R23 R23 K66  ; R24 := R23; R23 := R23["0x6470BAF4"]
358 [-]: LOADNIL   R25 R25      ; R25 := nil
359 [-]: MOVE      R26 R1       ; R26 := R1
360 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
361 [-]: GETGLOBAL R23 K0       ; R23 := 0x400E7765
362 [-]: GETGLOBAL R24 K8       ; R24 := _T
363 [-]: GETTABLE  R24 R24 K67  ; R24 := R24["BackgroundMovie"]
364 [-]: CALL      R23 2 2      ; R23 := R23(R24)
365 [-]: TEST      R23 1        ; if R23 then PC := 373
366 [-]: JMP       373          ; PC := 373
367 [-]: GETGLOBAL R23 K8       ; R23 := _T
368 [-]: GETTABLE  R23 R23 K67  ; R23 := R23["BackgroundMovie"]
369 [-]: SELF      R23 R23 K68  ; R24 := R23; R23 := R23["0x458F27A9"]
370 [-]: LOADK     R25 K69      ; R25 := "ShowBlockingMessage"
371 [-]: LOADK     R26 K70      ; R26 := "0"
372 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
373 [-]: MOVE      R23 R0       ; R23 := R0
374 [-]: MOVE      R23 R22      ; R23 := R22
375 [-]: RETURN    R0 1         ; return 


; Function #89.1:
;
; Name:            
; Defined at line: 3710
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x8C7099E9"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x4CDEF9FF
  5 [-]: CALL      R3 1 0       ; R3,... := R3()
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #89.2:
;
; Name:            
; Defined at line: 3715
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x8C7099E9"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x4CDEF9FF
  5 [-]: CALL      R3 1 0       ; R3,... := R3()
  6 [-]: CALL      R1 0 1       ; R1(R2,...)
  7 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3761
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xD853E536"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: JMP       25           ; PC := 25
 11 [-]: GETGLOBAL R0 K2        ; R0 := Engine
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0x9490FE70"]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: TEST      R0 0         ; if not R0 then PC := 25
 15 [-]: JMP       25           ; PC := 25
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0xB1627322"]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x2DB1272F"]
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R0 U2        ; R0 := U2
 26 [-]: CALL      R0 1 1       ; R0()
 27 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3773
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["OnArcaneSelected"] := nil
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SelectedSlot"]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: CALL      R3 1 1       ; R3()
  7 [-]: TEST      R0 0         ; if not R0 then PC := 26
  8 [-]: JMP       26           ; PC := 26
  9 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Arcanes"]
 18 [-]: GETGLOBAL R4 K6        ; R4 := Lotus_Game
 19 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0xA9D5605B"]
 20 [-]: CALL      R4 1 2       ; R4 := R4()
 21 [-]: SETTABLE  R3 R2 R4     ; R3[R2] := R4
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETUPVAL  R3 U0        ; R3 := U0
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Arcanes"]
 25 [-]: SETTABLE  R3 R2 R1     ; R3[R2] := R1
 26 [-]: LOADK     R3 K8        ; R3 := 1
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Slots"]
 29 [-]: LOADK     R5 K8        ; R5 := 1
 30 [-]: FORPREP   R3 35        ; R3 -= R5; PC := 35
 31 [-]: GETUPVAL  R7 U2        ; R7 := U2
 32 [-]: MOVE      R8 R6        ; R8 := R6
 33 [-]: MOVE      R9 R0        ; R9 := R0
 34 [-]: CALL      R7 3 1       ; R7(R8,R9)
 35 [-]: FORLOOP   R3 31        ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
 36 [-]: GETUPVAL  R7 U3        ; R7 := U3
 37 [-]: CALL      R7 1 1       ; R7()
 38 [-]: GETUPVAL  R7 U4        ; R7 := U4
 39 [-]: CALL      R7 1 1       ; R7()
 40 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3794
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := string
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xDE44F664"]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := "MOUSE_B1"
  5 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  6 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 25
  7 [-]: JMP       25           ; PC := 25
  8 [-]: EQ        0 R2 K4      ; if R2 ~= "0" then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["FocusedSlot"]
 12 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 23
 13 [-]: JMP       23           ; PC := 23
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["FocusedSlot"]
 17 [-]: SETTABLE  R3 K6 R4     ; R3["SelectedSlot"] := R4
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: LOADNIL   R5 R5        ; R5 := nil
 21 [-]: CALL      R3 3 1       ; R3(R4,R5)
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: CALL      R3 1 1       ; R3()
 25 [-]: GETGLOBAL R3 K0        ; R3 := string
 26 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xDE44F664"]
 27 [-]: MOVE      R4 R1        ; R4 := R1
 28 [-]: LOADK     R5 K7        ; R5 := "MOUSE_B0"
 29 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 30 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 56
 31 [-]: JMP       56           ; PC := 56
 32 [-]: EQ        0 R2 K4      ; if R2 ~= "0" then PC := 56
 33 [-]: JMP       56           ; PC := 56
 34 [-]: GETUPVAL  R3 U3        ; R3 := U3
 35 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 56
 36 [-]: JMP       56           ; PC := 56
 37 [-]: GETUPVAL  R3 U4        ; R3 := U4
 38 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 56
 39 [-]: JMP       56           ; PC := 56
 40 [-]: GETUPVAL  R3 U5        ; R3 := U5
 41 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 56
 42 [-]: JMP       56           ; PC := 56
 43 [-]: GETUPVAL  R3 U4        ; R3 := U4
 44 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x97B489B5"]
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: GETUPVAL  R4 U5        ; R4 := U5
 47 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x97B489B5"]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 56
 50 [-]: JMP       56           ; PC := 56
 51 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: GETUPVAL  R5 U3        ; R5 := U3
 54 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x2DB1272F"]
 55 [-]: CALL      R5 2 1       ; R5(R6)
 56 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3812
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCategoryMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCategoryMenu"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3818
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCategoryMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCategoryMenu"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3824
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCategoryMenu"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCategoryMenu"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3830
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mSortMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3836
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mSortMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
 14 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x2176B11E"]
 15 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3842
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mSortMenu"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
 17 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x3BC31182"]
 18 [-]: GETGLOBAL R3 K3        ; R3 := 0xF595ADDE
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3848
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x97B489B5"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mElements"]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mElements"]
 13 [-]: LEN       R3 R3        ; R3 := # R3
 14 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
 15 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x6B7B470B"]
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mElements"]
 19 [-]: GETTABLE  R5 R1 K5     ; R5 := R1["Id"]
 20 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 21 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mClipName"]
 22 [-]: LOADK     R5 K7        ; R5 := "_x"
 23 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 24 [-]: GETGLOBAL R3 K3        ; R3 := mMovie
 25 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x6B7B470B"]
 26 [-]: GETUPVAL  R5 U0        ; R5 := U0
 27 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mElements"]
 28 [-]: GETTABLE  R6 R1 K5     ; R6 := R1["Id"]
 29 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 30 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mClipName"]
 31 [-]: LOADK     R6 K8        ; R6 := "_y"
 32 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 33 [-]: GETGLOBAL R4 K9        ; R4 := 0x221C9700
 34 [-]: MOVE      R5 R2        ; R5 := R2
 35 [-]: MOVE      R6 R3        ; R6 := R3
 36 [-]: LOADK     R7 K10       ; R7 := 0
 37 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 38 [-]: GETUPVAL  R5 U0        ; R5 := U0
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mCurrentElementIndex"]
 40 [-]: LOADK     R6 K10       ; R6 := 0
 41 [-]: LOADK     R7 K12       ; R7 := 1
 42 [-]: GETUPVAL  R8 U0        ; R8 := U0
 43 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mElements"]
 44 [-]: LEN       R8 R8        ; R8 := # R8
 45 [-]: LOADK     R9 K12       ; R9 := 1
 46 [-]: FORPREP   R7 89        ; R7 -= R9; PC := 89
 47 [-]: GETTABLE  R11 R1 K5    ; R11 := R1["Id"]
 48 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 89
 49 [-]: JMP       89           ; PC := 89
 50 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 51 [-]: SELF      R11 R11 K4   ; R12 := R11; R11 := R11["0x6B7B470B"]
 52 [-]: GETUPVAL  R13 U0       ; R13 := U0
 53 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["mElements"]
 54 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 55 [-]: GETTABLE  R13 R13 K6   ; R13 := R13["mClipName"]
 56 [-]: LOADK     R14 K7       ; R14 := "_x"
 57 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 58 [-]: GETGLOBAL R12 K3       ; R12 := mMovie
 59 [-]: SELF      R12 R12 K4   ; R13 := R12; R12 := R12["0x6B7B470B"]
 60 [-]: GETUPVAL  R14 U0       ; R14 := U0
 61 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["mElements"]
 62 [-]: GETTABLE  R14 R14 R10  ; R14 := R14[R10]
 63 [-]: GETTABLE  R14 R14 K6   ; R14 := R14["mClipName"]
 64 [-]: LOADK     R15 K8       ; R15 := "_y"
 65 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 66 [-]: GETGLOBAL R13 K9       ; R13 := 0x221C9700
 67 [-]: MOVE      R14 R11      ; R14 := R11
 68 [-]: MOVE      R15 R12      ; R15 := R12
 69 [-]: LOADK     R16 K10      ; R16 := 0
 70 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 71 [-]: GETGLOBAL R14 K13      ; R14 := 0xB09F286F
 72 [-]: MOVE      R15 R4       ; R15 := R4
 73 [-]: MOVE      R16 R13      ; R16 := R13
 74 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 75 [-]: DIV       R14 K12 R14  ; R14 := 1 / R14
 76 [-]: SUB       R15 R13 R4   ; R15 := R13 - R4
 77 [-]: GETGLOBAL R16 K14      ; R16 := 0x458357BC
 78 [-]: MOVE      R17 R15      ; R17 := R15
 79 [-]: CALL      R16 2 1      ; R16(R17)
 80 [-]: GETGLOBAL R16 K15      ; R16 := 0xDBA27FAF
 81 [-]: MOVE      R17 R15      ; R17 := R15
 82 [-]: MOVE      R18 R0       ; R18 := R0
 83 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 84 [-]: MUL       R17 R16 R14  ; R17 := R16 * R14
 85 [-]: LT        0 R6 R17     ; if R6 >= R17 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: MOVE      R5 R10       ; R5 := R10
 88 [-]: MUL       R6 R16 R14   ; R6 := R16 * R14
 89 [-]: FORLOOP   R7 47        ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
 90 [-]: GETTABLE  R17 R1 K5    ; R17 := R1["Id"]
 91 [-]: EQ        1 R5 R17     ; if R5 == R17 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETUPVAL  R17 U0       ; R17 := U0
 94 [-]: SELF      R17 R17 K16  ; R18 := R17; R17 := R17["0x8ABD6CC8"]
 95 [-]: MOVE      R19 R5       ; R19 := R5
 96 [-]: CALL      R17 3 1      ; R17(R18,R19)
 97 [-]: MOVE      R17 R1       ; R17 := R1
 98 [-]: RETURN    R17 2        ; return R17
 99 [-]: MOVE      R17 R0       ; R17 := R0
100 [-]: RETURN    R17 2        ; return R17
101 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3884
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mScrollBar"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mScrollBar"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 3890
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mScrollBar"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mScrollBar"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xD963824A"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 3896
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mScrollBar"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mScrollBar"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xA133F1D5"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 3902
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSortMenu"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xEB434F36"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 3908
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSortMenu"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9FFA2C4F"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 3914
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSortMenu"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mSortMenu"]
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x8A2AB94F"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 3920
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SELECTING_CARD"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mSortMenu"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mSortMenu"]
 14 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xEB434F36"]
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: CALL      R0 3 1       ; R0(R1,R2)
 17 [-]: JMP       39           ; PC := 39
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
 19 [-]: GETUPVAL  R1 U3        ; R1 := U3
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETUPVAL  R0 U3        ; R0 := U3
 24 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x97B489B5"]
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 27 [-]: MOVE      R2 R0        ; R2 := R0
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["mCardIndex"]
 32 [-]: EQ        1 R1 K6      ; if R1 == -1 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETUPVAL  R1 U4        ; R1 := U4
 35 [-]: CALL      R1 1 1       ; R1()
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETUPVAL  R1 U5        ; R1 := U5
 38 [-]: CALL      R1 1 1       ; R1()
 39 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 3933
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := _G
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UISound_Focus"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 3937
; #Upvalues:       17
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  59

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: TEST      R1 1         ; if R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R2 U2        ; R2 := U2
 11 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2["0x2DB1272F"]
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 14 [-]: GETGLOBAL R3 K1        ; R3 := 0xECFDD17
 15 [-]: GETUPVAL  R4 U3        ; R4 := U3
 16 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mUnfilteredElements"]
 17 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 18 [-]: JMP       30           ; PC := 30
 19 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["mCardIndex"]
 20 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R8 R7 K3     ; R8 := R7["mCardIndex"]
 23 [-]: LT        0 R8 K5      ; if R8 >= 0 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R8 K6        ; R8 := table
 26 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 27 [-]: MOVE      R9 R2        ; R9 := R2
 28 [-]: MOVE      R10 R7       ; R10 := R7
 29 [-]: CALL      R8 3 1       ; R8(R9,R10)
 30 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 19; R5 := R6 end
 31 [-]: JMP       19           ; PC := 19
 32 [-]: GETUPVAL  R8 U4        ; R8 := U4
 33 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["info"]
 34 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mItemId"]
 35 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["mId"]
 36 [-]: GETGLOBAL R9 K11       ; R9 := 0x63B09107
 37 [-]: GETUPVAL  R10 U5       ; R10 := U5
 38 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["mElements"]
 39 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 40 [-]: JMP       105          ; PC := 105
 41 [-]: GETTABLE  R14 R13 K3   ; R14 := R13["mCardIndex"]
 42 [-]: EQ        1 R14 K4     ; if R14 == nil then PC := 105
 43 [-]: JMP       105          ; PC := 105
 44 [-]: GETTABLE  R14 R13 K3   ; R14 := R13["mCardIndex"]
 45 [-]: LE        0 K5 R14     ; if 0 > R14 then PC := 105
 46 [-]: JMP       105          ; PC := 105
 47 [-]: GETTABLE  R14 R13 K13  ; R14 := R13["mCardLocked"]
 48 [-]: TEST      R14 1        ; if R14 then PC := 105
 49 [-]: JMP       105          ; PC := 105
 50 [-]: LOADNIL   R14 R14      ; R14 := nil
 51 [-]: GETGLOBAL R15 K1       ; R15 := 0xECFDD17
 52 [-]: MOVE      R16 R2       ; R16 := R2
 53 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 54 [-]: JMP       58           ; PC := 58
 55 [-]: MOVE      R14 R19      ; R14 := R19
 56 [-]: SETTABLE  R2 R18 K4    ; R2[R18] := nil
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 55; R17 := R18 end
 59 [-]: JMP       55           ; PC := 55
 60 [-]: EQ        0 R14 K4     ; if R14 ~= nil then PC := 66
 61 [-]: JMP       66           ; PC := 66
 62 [-]: GETGLOBAL R20 K14      ; R20 := 0x93B1256B
 63 [-]: LOADK     R21 K15      ; R21 := "Failed to get an empty card."
 64 [-]: CALL      R20 2 1      ; R20(R21)
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETTABLE  R20 R13 K3   ; R20 := R13["mCardIndex"]
 67 [-]: SETTABLE  R14 K3 R20   ; R14["mCardIndex"] := R20
 68 [-]: GETTABLE  R20 R13 K16  ; R20 := R13["mName"]
 69 [-]: SETTABLE  R14 K16 R20  ; R14["mName"] := R20
 70 [-]: GETTABLE  R20 R13 K17  ; R20 := R13["mInstalled"]
 71 [-]: SETTABLE  R14 K17 R20  ; R14["mInstalled"] := R20
 72 [-]: GETTABLE  R20 R13 K18  ; R20 := R13["mInstalledLoadOutType"]
 73 [-]: SETTABLE  R14 K18 R20  ; R14["mInstalledLoadOutType"] := R20
 74 [-]: GETTABLE  R20 R13 K19  ; R20 := R13["mInstalledType"]
 75 [-]: SETTABLE  R14 K19 R20  ; R14["mInstalledType"] := R20
 76 [-]: GETTABLE  R20 R13 K20  ; R20 := R13["mInstalledName"]
 77 [-]: SETTABLE  R14 K20 R20  ; R14["mInstalledName"] := R20
 78 [-]: GETTABLE  R20 R13 K21  ; R20 := R13["mModSet"]
 79 [-]: SETTABLE  R14 K21 R20  ; R14["mModSet"] := R20
 80 [-]: GETUPVAL  R20 U6       ; R20 := U6
 81 [-]: GETTABLE  R21 R14 K3   ; R21 := R14["mCardIndex"]
 82 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
 83 [-]: SETTABLE  R20 K22 R14  ; R20["mElement"] := R14
 84 [-]: GETTABLE  R21 R20 K17  ; R21 := R20["mInstalled"]
 85 [-]: SETTABLE  R21 R8 K4    ; R21[R8] := nil
 86 [-]: GETUPVAL  R21 U7       ; R21 := U7
 87 [-]: MOVE      R22 R20      ; R22 := R20
 88 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 89 [-]: SETTABLE  R14 K23 R21  ; R14["Categories"] := R21
 90 [-]: GETUPVAL  R21 U8       ; R21 := U8
 91 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["0xE8A61E6E"]
 92 [-]: MOVE      R22 R20      ; R22 := R20
 93 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 94 [-]: SETTABLE  R14 K24 R21  ; R14["SearchCache"] := R21
 95 [-]: SETTABLE  R13 K3 K26   ; R13["mCardIndex"] := -1
 96 [-]: SETTABLE  R13 K16 K4   ; R13["mName"] := nil
 97 [-]: SETTABLE  R13 K17 K4   ; R13["mInstalled"] := nil
 98 [-]: SETTABLE  R13 K18 K4   ; R13["mInstalledLoadOutType"] := nil
 99 [-]: SETTABLE  R13 K19 K4   ; R13["mInstalledType"] := nil
100 [-]: SETTABLE  R13 K20 K4   ; R13["mInstalledName"] := nil
101 [-]: SETTABLE  R13 K21 K4   ; R13["mModSet"] := nil
102 [-]: SETTABLE  R13 K24 K4   ; R13["SearchCache"] := nil
103 [-]: GETUPVAL  R21 U9       ; R21 := U9
104 [-]: SETTABLE  R13 K23 R21  ; R13["Categories"] := R21
105 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 41; R11 := R12 end
106 [-]: JMP       41           ; PC := 41
107 [-]: GETGLOBAL R21 K27      ; R21 := _T
108 [-]: GETTABLE  R21 R21 K28  ; R21 := R21["ArsenalState"]
109 [-]: GETGLOBAL R22 K29      ; R22 := Lotus_Game
110 [-]: GETTABLE  R22 R22 K30  ; R22 := R22["ARSENAL_STATE_PVP"]
111 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: MOVE      R21 R0       ; R21 := R0
114 [-]: MOVE      R21 R1       ; R21 := R1
115 [-]: GETUPVAL  R22 U10      ; R22 := U10
116 [-]: SELF      R22 R22 K31  ; R23 := R22; R22 := R22["0x6F2E05FD"]
117 [-]: CALL      R22 2 2      ; R22 := R22(R23)
118 [-]: SELF      R23 R22 K32  ; R24 := R22; R23 := R22["0x177B1956"]
119 [-]: GETUPVAL  R25 U4       ; R25 := U4
120 [-]: GETTABLE  R25 R25 K8   ; R25 := R25["info"]
121 [-]: GETUPVAL  R26 U0       ; R26 := U0
122 [-]: MOVE      R27 R21      ; R27 := R21
123 [-]: MOVE      R28 R0       ; R28 := R0
124 [-]: CALL      R23 6 2      ; R23 := R23(R24,R25,R26,R27,R28)
125 [-]: NEWTABLE  R24 0 0      ; R24 := {}
126 [-]: GETGLOBAL R25 K11      ; R25 := 0x63B09107
127 [-]: MOVE      R26 R23      ; R26 := R23
128 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
129 [-]: JMP       150          ; PC := 150
130 [-]: GETTABLE  R30 R29 K9   ; R30 := R29["mItemId"]
131 [-]: GETTABLE  R30 R30 K10  ; R30 := R30["mId"]
132 [-]: LEN       R31 R30      ; R31 := # R30
133 [-]: LT        0 K5 R31     ; if 0 >= R31 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: GETUPVAL  R31 U11      ; R31 := U11
136 [-]: GETTABLE  R31 R31 R30  ; R31 := R31[R30]
137 [-]: SETTABLE  R24 R28 R31  ; R24[R28] := R31
138 [-]: JMP       150          ; PC := 150
139 [-]: GETGLOBAL R31 K33      ; R31 := 0x400E7765
140 [-]: GETTABLE  R32 R29 K34  ; R32 := R29["mItemType"]
141 [-]: CALL      R31 2 2      ; R31 := R31(R32)
142 [-]: TEST      R31 1        ; if R31 then PC := 150
143 [-]: JMP       150          ; PC := 150
144 [-]: GETUPVAL  R31 U12      ; R31 := U12
145 [-]: GETTABLE  R32 R29 K34  ; R32 := R29["mItemType"]
146 [-]: SELF      R32 R32 K35  ; R33 := R32; R32 := R32["0x1B252E3C"]
147 [-]: CALL      R32 2 2      ; R32 := R32(R33)
148 [-]: GETTABLE  R31 R31 R32  ; R31 := R31[R32]
149 [-]: SETTABLE  R24 R28 R31  ; R24[R28] := R31
150 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 130; R27 := R28 end
151 [-]: JMP       130          ; PC := 130
152 [-]: NEWTABLE  R31 0 0      ; R31 := {}
153 [-]: LOADK     R32 K5       ; R32 := 0
154 [-]: GETGLOBAL R33 K29      ; R33 := Lotus_Game
155 [-]: GETTABLE  R33 R33 K36  ; R33 := R33["MAX_LoadOutType"]
156 [-]: SUB       R33 R33 K37  ; R33 := R33 - 1
157 [-]: LOADK     R34 K37      ; R34 := 1
158 [-]: FORPREP   R32 166      ; R32 -= R34; PC := 166
159 [-]: SELF      R36 R22 K38  ; R37 := R22; R36 := R22["0x5A67CD40"]
160 [-]: MOVE      R38 R35      ; R38 := R35
161 [-]: SELF      R39 R22 K39  ; R40 := R22; R39 := R22["0x413E14F1"]
162 [-]: MOVE      R41 R35      ; R41 := R35
163 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
164 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
165 [-]: SETTABLE  R31 R35 R36  ; R31[R35] := R36
166 [-]: FORLOOP   R32 159      ; R32 += R34; if R32 <= R33 then begin PC := 159; R35 := R32 end
167 [-]: GETGLOBAL R36 K1       ; R36 := 0xECFDD17
168 [-]: MOVE      R37 R24      ; R37 := R24
169 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
170 [-]: JMP       221          ; PC := 221
171 [-]: GETUPVAL  R41 U5       ; R41 := U5
172 [-]: SELF      R41 R41 K40  ; R42 := R41; R41 := R41["0xF61F409A"]
173 [-]: MOVE      R43 R39      ; R43 := R39
174 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
175 [-]: GETGLOBAL R42 K33      ; R42 := 0x400E7765
176 [-]: MOVE      R43 R41      ; R43 := R41
177 [-]: CALL      R42 2 2      ; R42 := R42(R43)
178 [-]: TEST      R42 1        ; if R42 then PC := 221
179 [-]: JMP       221          ; PC := 221
180 [-]: GETUPVAL  R42 U6       ; R42 := U6
181 [-]: GETTABLE  R42 R42 R40  ; R42 := R42[R40]
182 [-]: GETTABLE  R43 R42 K22  ; R43 := R42["mElement"]
183 [-]: SETTABLE  R42 K22 R41  ; R42["mElement"] := R41
184 [-]: EQ        0 R43 K4     ; if R43 ~= nil then PC := 195
185 [-]: JMP       195          ; PC := 195
186 [-]: GETGLOBAL R44 K14      ; R44 := 0x93B1256B
187 [-]: LOADK     R45 K41      ; R45 := "Install Failed: "
188 [-]: GETTABLE  R46 R42 K16  ; R46 := R42["mName"]
189 [-]: LOADK     R47 K42      ; R47 := " NULL=>"
190 [-]: GETGLOBAL R48 K43      ; R48 := 0x9FAED6BC
191 [-]: GETTABLE  R49 R41 K44  ; R49 := R41["Id"]
192 [-]: CALL      R48 2 2      ; R48 := R48(R49)
193 [-]: CONCAT    R45 R45 R48  ; R45 := R45 .. R46 .. R47 .. R48
194 [-]: CALL      R44 2 1      ; R44(R45)
195 [-]: SETTABLE  R41 K3 R40   ; R41["mCardIndex"] := R40
196 [-]: GETUPVAL  R44 U13      ; R44 := U13
197 [-]: MOVE      R45 R42      ; R45 := R42
198 [-]: MOVE      R46 R31      ; R46 := R31
199 [-]: CALL      R44 3 5      ; R44,R45,R46,R47 := R44(R45,R46)
200 [-]: GETTABLE  R48 R42 K16  ; R48 := R42["mName"]
201 [-]: SETTABLE  R41 K16 R48  ; R41["mName"] := R48
202 [-]: SETTABLE  R41 K17 R44  ; R41["mInstalled"] := R44
203 [-]: SETTABLE  R41 K18 R45  ; R41["mInstalledLoadOutType"] := R45
204 [-]: SETTABLE  R41 K19 R46  ; R41["mInstalledType"] := R46
205 [-]: SETTABLE  R41 K20 R47  ; R41["mInstalledName"] := R47
206 [-]: GETTABLE  R48 R42 K21  ; R48 := R42["mModSet"]
207 [-]: SETTABLE  R41 K21 R48  ; R41["mModSet"] := R48
208 [-]: EQ        1 R43 K4     ; if R43 == nil then PC := 219
209 [-]: JMP       219          ; PC := 219
210 [-]: SETTABLE  R43 K3 K26   ; R43["mCardIndex"] := -1
211 [-]: SETTABLE  R43 K16 K4   ; R43["mName"] := nil
212 [-]: SETTABLE  R43 K17 K4   ; R43["mInstalled"] := nil
213 [-]: SETTABLE  R43 K18 K4   ; R43["mInstalledLoadOutType"] := nil
214 [-]: SETTABLE  R43 K19 K4   ; R43["mInstalledType"] := nil
215 [-]: SETTABLE  R43 K20 K4   ; R43["mInstalledName"] := nil
216 [-]: SETTABLE  R43 K21 K4   ; R43["mModSet"] := nil
217 [-]: GETUPVAL  R48 U9       ; R48 := U9
218 [-]: SETTABLE  R43 K23 R48  ; R43["Categories"] := R48
219 [-]: GETTABLE  R48 R42 K17  ; R48 := R42["mInstalled"]
220 [-]: SETTABLE  R48 R8 R39   ; R48[R8] := R39
221 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 171; R38 := R39 end
222 [-]: JMP       171          ; PC := 171
223 [-]: NEWTABLE  R48 0 0      ; R48 := {}
224 [-]: GETGLOBAL R49 K1       ; R49 := 0xECFDD17
225 [-]: MOVE      R50 R24      ; R50 := R24
226 [-]: CALL      R49 2 4      ; R49,R50,R51 := R49(R50)
227 [-]: JMP       237          ; PC := 237
228 [-]: GETUPVAL  R54 U6       ; R54 := U6
229 [-]: GETTABLE  R54 R54 R53  ; R54 := R54[R53]
230 [-]: GETGLOBAL R55 K6       ; R55 := table
231 [-]: GETTABLE  R55 R55 K7   ; R55 := R55["0xE6450C9D"]
232 [-]: MOVE      R56 R48      ; R56 := R48
233 [-]: GETTABLE  R57 R54 K45  ; R57 := R54["mUpgradeItemType"]
234 [-]: SELF      R57 R57 K35  ; R58 := R57; R57 := R57["0x1B252E3C"]
235 [-]: CALL      R57 2 0      ; R57,... := R57(R58)
236 [-]: CALL      R55 0 1      ; R55(R56,...)
237 [-]: TFORLOOP  R49 2        ; R52,R53 :=  R49(R50,R51); if R52 ~= nil then begin PC = 228; R51 := R52 end
238 [-]: JMP       228          ; PC := 228
239 [-]: GETGLOBAL R55 K46      ; R55 := UISys
240 [-]: GETTABLE  R55 R55 K47  ; R55 := R55["0x449B53E0"]
241 [-]: MOVE      R56 R48      ; R56 := R48
242 [-]: MOVE      R57 R1       ; R57 := R1
243 [-]: CALL      R55 3 2      ; R55 := R55(R56,R57)
244 [-]: MOVE      R55 R14      ; R55 := R14
245 [-]: MOVE      R55 R1       ; R55 := R1
246 [-]: MOVE      R55 R15      ; R55 := R15
247 [-]: GETGLOBAL R55 K33      ; R55 := 0x400E7765
248 [-]: GETGLOBAL R56 K27      ; R56 := _T
249 [-]: GETTABLE  R56 R56 K48  ; R56 := R56["BackgroundMovie"]
250 [-]: CALL      R55 2 2      ; R55 := R55(R56)
251 [-]: TEST      R55 1        ; if R55 then PC := 259
252 [-]: JMP       259          ; PC := 259
253 [-]: GETGLOBAL R55 K27      ; R55 := _T
254 [-]: GETTABLE  R55 R55 K48  ; R55 := R55["BackgroundMovie"]
255 [-]: SELF      R55 R55 K49  ; R56 := R55; R55 := R55["0x458F27A9"]
256 [-]: LOADK     R57 K50      ; R57 := "ShowBlockingMessage"
257 [-]: LOADK     R58 K51      ; R58 := "2"
258 [-]: CALL      R55 4 1      ; R55(R56,R57,R58)
259 [-]: MOVE      R55 R1       ; R55 := R1
260 [-]: MOVE      R55 R16      ; R55 := R16
261 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4071
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: ADD       R1 R1 R0     ; R1 := R1 + R0
 11 [-]: LT        0 K2 R1      ; if 2 >= R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K3        ; R1 := 0
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LT        0 R1 K3      ; if R1 >= 0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R1 K2        ; R1 := 2
 18 [-]: GETUPVAL  R2 U1        ; R2 := U1
 19 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x3BC31182"]
 20 [-]: MOVE      R4 R1        ; R4 := R1
 21 [-]: CALL      R2 3 1       ; R2(R3,R4)
 22 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4084
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 33
  3 [-]: JMP       33           ; PC := 33
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 33
  8 [-]: JMP       33           ; PC := 33
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 10 [-]: GETUPVAL  R3 U2        ; R3 := U2
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 33
 13 [-]: JMP       33           ; PC := 33
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mScrollBar"]
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mActive"]
 18 [-]: TEST      R3 0         ; if not R3 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: GETUPVAL  R2 U2        ; R2 := U2
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0x9F50FF89"]
 27 [-]: GETGLOBAL R5 K4        ; R5 := 0xF595ADDE
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETGLOBAL R6 K5        ; R6 := _G
 31 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UISound_Scroll"]
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4096
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: LOADK     R2 K2        ; R2 := "_ymouse"
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SELECTING_CARD"]
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SELECTING_SLOT"]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: JMP       36           ; PC := 36
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SELECTING_SLOT"]
 24 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: LE        0 R1 R0      ; if R1 > R0 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R1 U3        ; R1 := U3
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["SELECTING_CARD"]
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4105
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x212137BC"]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4110
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R2 K0        ; R2 := Engine
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0x212137BC"]
  3 [-]: CALL      R2 1 2       ; R2 := R2()
  4 [-]: TEST      R2 0         ; if not R2 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4116
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x212137BC"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4122
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x212137BC"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4129
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x212137BC"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4135
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x212137BC"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R0        ; R0 := R0
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4142
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 44
  3 [-]: JMP       44           ; PC := 44
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SELECTING_SLOT"]
  7 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETUPVAL  R0 U3        ; R0 := U3
 10 [-]: LOADK     R1 K1        ; R1 := "TopMenu.ConfigLeft"
 11 [-]: GETGLOBAL R2 K2        ; R2 := _G
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIFx_LeftBumperPress3d"]
 13 [-]: LOADK     R3 K4        ; R3 := 0
 14 [-]: LOADK     R4 K4        ; R4 := 0
 15 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 16 [-]: GETUPVAL  R0 U4        ; R0 := U4
 17 [-]: LOADK     R1 K5        ; R1 := -1
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: JMP       44           ; PC := 44
 20 [-]: GETGLOBAL R0 K6        ; R0 := 0x400E7765
 21 [-]: GETUPVAL  R1 U5        ; R1 := U5
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 1         ; if R0 then PC := 44
 24 [-]: JMP       44           ; PC := 44
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["mCategoryMenu"]
 27 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xC51A5C9D"]
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: LT        0 K9 R0      ; if 1 >= R0 then PC := 44
 30 [-]: JMP       44           ; PC := 44
 31 [-]: GETUPVAL  R0 U5        ; R0 := U5
 32 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0["0x26D94321"]
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 1         ; if R1 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETGLOBAL R1 K11       ; R1 := table
 40 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["0xE6450C9D"]
 41 [-]: GETUPVAL  R2 U6        ; R2 := U6
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: CALL      R1 3 1       ; R1(R2,R3)
 44 [-]: MOVE      R1 R1        ; R1 := R1
 45 [-]: RETURN    R1 2         ; return R1
 46 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4157
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 44
  3 [-]: JMP       44           ; PC := 44
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["SELECTING_SLOT"]
  7 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETUPVAL  R0 U3        ; R0 := U3
 10 [-]: LOADK     R1 K1        ; R1 := 1
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: GETUPVAL  R0 U4        ; R0 := U4
 13 [-]: LOADK     R1 K2        ; R1 := "TopMenu.ConfigRight"
 14 [-]: GETGLOBAL R2 K3        ; R2 := _G
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UIFx_RightBumperPress3d"]
 16 [-]: LOADK     R3 K5        ; R3 := 0
 17 [-]: LOADK     R4 K5        ; R4 := 0
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: JMP       44           ; PC := 44
 20 [-]: GETGLOBAL R0 K6        ; R0 := 0x400E7765
 21 [-]: GETUPVAL  R1 U5        ; R1 := U5
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 1         ; if R0 then PC := 44
 24 [-]: JMP       44           ; PC := 44
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["mCategoryMenu"]
 27 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0xC51A5C9D"]
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: LT        0 K1 R0      ; if 1 >= R0 then PC := 44
 30 [-]: JMP       44           ; PC := 44
 31 [-]: GETUPVAL  R0 U5        ; R0 := U5
 32 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x55B302C0"]
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: GETGLOBAL R1 K6        ; R1 := 0x400E7765
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: TEST      R1 1         ; if R1 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETGLOBAL R1 K10       ; R1 := table
 40 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["0xE6450C9D"]
 41 [-]: GETUPVAL  R2 U6        ; R2 := U6
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: CALL      R1 3 1       ; R1(R2,R3)
 44 [-]: MOVE      R1 R1        ; R1 := R1
 45 [-]: RETURN    R1 2         ; return R1
 46 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 4172
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 4176
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 4179
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 1         ; if R0 then PC := 3
  2 [-]: JMP       3            ; PC := 3
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x7E7C6700"]
  5 [-]: LOADK     R3 K1        ; R3 := "OnUpdateSessionSettings"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R2 K3        ; R2 := _T
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 1       ; R2(R3)
 15 [-]: LOADNIL   R2 R2        ; R2 := nil
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 4192
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 4196
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 38
  7 [-]: JMP       38           ; PC := 38
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x84DCC428"]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
 13 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0x41EE5D76"]
 17 [-]: CALL      R1 1 1       ; R1()
 18 [-]: GETGLOBAL R1 K6        ; R1 := _T
 19 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["LoadoutSaveRequired"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETGLOBAL R1 K6        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["loadoutInProgress"]
 24 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: GETUPVAL  R1 U1        ; R1 := U1
 27 [-]: CALL      R1 1 1       ; R1()
 28 [-]: JMP       46           ; PC := 46
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R1 K6        ; R1 := _T
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 35 [-]: MOVE      R2 R1        ; R2 := R1
 36 [-]: CALL      R1 2 1       ; R1(R2)
 37 [-]: JMP       46           ; PC := 46
 38 [-]: GETUPVAL  R1 U2        ; R1 := U2
 39 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETGLOBAL R1 K6        ; R1 := _T
 42 [-]: GETUPVAL  R2 U2        ; R2 := U2
 43 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 44 [-]: MOVE      R2 R0        ; R2 := R0
 45 [-]: CALL      R1 2 1       ; R1(R2)
 46 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 4213
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: TEST      R1 0         ; if not R1 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETUPVAL  R1 U2        ; R1 := U2
  6 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x5AE6E363"]
  7 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/ConfirmUpgradeCancel"
  8 [-]: LOADK     R3 K2        ; R3 := "ConfirmLeaveScreen"
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: MOVE      R1 R1        ; R1 := R1
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: JMP       25           ; PC := 25
 13 [-]: GETGLOBAL R1 K3        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LoadoutSaveRequired"]
 15 [-]: TEST      R1 0         ; if not R1 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R1 K3        ; R1 := _T
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["loadoutInProgress"]
 19 [-]: EQ        1 R1 K6      ; if R1 == nil then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U3        ; R1 := U3
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: MOVE      R1 R1        ; R1 := R1
 24 [-]: RETURN    R1 2         ; return R1
 25 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 4226
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["mTrigger"] := R0
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x1BDE0F53"]
  5 [-]: LOADK     R2 K3        ; R2 := "Arsenal"
  6 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0["0x6DA72501"]
  7 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  8 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  9 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1["0xDE4E4AF5"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 0         ; if not R2 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x32D3BF8E"]
 19 [-]: LOADNIL   R4 R4        ; R4 := nil
 20 [-]: CALL      R2 3 1       ; R2(R3,R4)
 21 [-]: GETGLOBAL R2 K0        ; R2 := _T
 22 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xF45387D1"]
 23 [-]: LOADK     R3 K9        ; R3 := "UpgradeCards"
 24 [-]: CALL      R2 2 1       ; R2(R3)
 25 [-]: GETGLOBAL R2 K0        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0x305E2FCA"]
 27 [-]: LOADK     R3 K9        ; R3 := "UpgradeCards"
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: MOVE      R2 R1        ; R2 := R1
 30 [-]: RETURN    R2 2         ; return R2
 31 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 4240
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["QuickSelectTutorialName"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K0        ; R0 := _T
  7 [-]: SETTABLE  R0 K1 K3     ; R0["QuickSelectTutorialName"] := "ModsTraining"
  8 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0xA58BB96C"]
 15 [-]: CALL      R0 2 1       ; R0(R1)
 16 [-]: GETGLOBAL R0 K0        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x10F7E690"]
 18 [-]: LOADK     R1 K7        ; R1 := "Intel"
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: MOVE      R0 R0        ; R0 := R0
 21 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 4252
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  5 [-]: LOADK     R3 K3        ; R3 := "/Lotus/Language/Menu/Loadout_InvalidName"
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
  8 [-]: RETURN    R1 0         ; return R1,...
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xF0310667"]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x6882AC87"]
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: LOADK     R3 K6        ; R3 := " "
 16 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 17 [-]: GETGLOBAL R2 K7        ; R2 := 0x86466050
 18 [-]: CALL      R2 1 2       ; R2 := R2()
 19 [-]: TEST      R2 0         ; if not R2 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: MOVE      R2 R1        ; R2 := R1
 22 [-]: GETUPVAL  R3 U0        ; R3 := U0
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x1F392ACD"]
 24 [-]: CALL      R3 1 2       ; R3 := R3()
 25 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 26 [-]: GETGLOBAL R2 K9        ; R2 := 0xEF492469
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: MOVE      R4 R1        ; R4 := R1
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: LT        0 K10 R2     ; if 0 >= R2 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 33 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 34 [-]: LOADK     R5 K11       ; R5 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
 35 [-]: MOVE      R6 R0        ; R6 := R0
 36 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 37 [-]: GETGLOBAL R4 K12       ; R4 := 0x6CB58CD6
 38 [-]: MOVE      R5 R0        ; R5 := R0
 39 [-]: MOVE      R6 R2        ; R6 := R2
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: GETGLOBAL R3 K13       ; R3 := string
 45 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["0xC6772A8A"]
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: LT        0 K15 R3     ; if 32 >= R3 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 51 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 52 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Menu/SocialOverlay_TooLong"
 53 [-]: MOVE      R6 R0        ; R6 := R0
 54 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
 55 [-]: RETURN    R3 0         ; return R3,...
 56 [-]: GETGLOBAL R3 K17       ; R3 := 0x48AB3E19
 57 [-]: MOVE      R4 R0        ; R4 := R0
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: GETGLOBAL R4 K7        ; R4 := 0x86466050
 60 [-]: CALL      R4 1 2       ; R4 := R4()
 61 [-]: TEST      R4 0         ; if not R4 then PC := 76
 62 [-]: JMP       76           ; PC := 76
 63 [-]: GETGLOBAL R4 K18       ; R4 := 0xF5BEE61A
 64 [-]: MOVE      R5 R3        ; R5 := R3
 65 [-]: GETGLOBAL R6 K19       ; R6 := Script
 66 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["TSC_NAME"]
 67 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 68 [-]: EQ        1 R4 R3      ; if R4 == R3 then PC := 76
 69 [-]: JMP       76           ; PC := 76
 70 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 71 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 72 [-]: LOADK     R7 K21       ; R7 := "/Lotus/Language/Menu/Generic_Name_CENSORED"
 73 [-]: MOVE      R8 R0        ; R8 := R0
 74 [-]: TAILCALL  R5 4 0       ; R5,... := R5(R6,R7,R8)
 75 [-]: RETURN    R5 0         ; return R5,...
 76 [-]: LOADNIL   R5 R5        ; R5 := nil
 77 [-]: MOVE      R6 R3        ; R6 := R3
 78 [-]: RETURN    R5 3         ; return R5,R6
 79 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 4283
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
  4 [-]: EQ        1 R2 K0      ; if R2 == nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: GETGLOBAL R4 K1        ; R4 := _T
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["ArsenalState"]
  9 [-]: GETGLOBAL R5 K3        ; R5 := Lotus_Game
 10 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["ARSENAL_STATE_PVP"]
 11 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: GETUPVAL  R5 U1        ; R5 := U1
 16 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0xF61F409A"]
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 19 [-]: EQ        0 R3 K6      ; if R3 ~= "" then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 22 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 23 [-]: LOADK     R8 K10       ; R8 := "/Lotus/Language/Menu/Loadout_Config"
 24 [-]: MOVE      R9 R0        ; R9 := R0
 25 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 26 [-]: GETUPVAL  R11 U2       ; R11 := U2
 27 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["CONFIG_TYPES"]
 28 [-]: ADD       R12 R1 K13   ; R12 := R1 + 1
 29 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 30 [-]: SETTABLE  R10 K11 R11  ; R10["TYPE"] := R11
 31 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 32 [-]: SETTABLE  R5 K7 R6     ; R5["Name"] := R6
 33 [-]: JMP       35           ; PC := 35
 34 [-]: SETTABLE  R5 K7 R3     ; R5["Name"] := R3
 35 [-]: GETUPVAL  R6 U1        ; R6 := U1
 36 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6["0x35243DA6"]
 37 [-]: MOVE      R8 R5        ; R8 := R5
 38 [-]: MOVE      R9 R1        ; R9 := R1
 39 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 40 [-]: GETUPVAL  R6 U1        ; R6 := U1
 41 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0xF09FAAA4"]
 42 [-]: CALL      R6 2 1       ; R6(R7)
 43 [-]: GETUPVAL  R6 U3        ; R6 := U3
 44 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["info"]
 45 [-]: SELF      R6 R6 K17    ; R7 := R6; R6 := R6["0xEAF41190"]
 46 [-]: MOVE      R8 R3        ; R8 := R3
 47 [-]: MOVE      R9 R1        ; R9 := R1
 48 [-]: MOVE      R10 R4       ; R10 := R4
 49 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 50 [-]: GETUPVAL  R6 U4        ; R6 := U4
 51 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x6F2E05FD"]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: SELF      R7 R6 K17    ; R8 := R6; R7 := R6["0xEAF41190"]
 54 [-]: GETUPVAL  R9 U3        ; R9 := U3
 55 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["info"]
 56 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["mItemId"]
 57 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mId"]
 58 [-]: MOVE      R10 R1       ; R10 := R1
 59 [-]: MOVE      R11 R4       ; R11 := R4
 60 [-]: MOVE      R12 R3       ; R12 := R3
 61 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 62 [-]: LOADNIL   R7 R7        ; R7 := nil
 63 [-]: RETURN    R7 2         ; return R7
 64 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 4308
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := genericSettingsMovie
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xA58BB96C"]
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: GETGLOBAL R0 K3        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0x10F7E690"]
 17 [-]: LOADK     R1 K5        ; R1 := "GenericSettings"
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x458F27A9"]
 22 [-]: LOADK     R2 K7        ; R2 := "SetTitle"
 23 [-]: GETGLOBAL R3 K8        ; R3 := mMovie
 24 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 25 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/RenameConfigs"
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 28 [-]: CALL      R0 0 1       ; R0(R1,...)
 29 [-]: GETUPVAL  R0 U1        ; R0 := U1
 30 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["info"]
 31 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0["0x233259BB"]
 32 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 33 [-]: GETGLOBAL R1 K3        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["ArsenalState"]
 35 [-]: GETGLOBAL R2 K14       ; R2 := Lotus_Game
 36 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["ARSENAL_STATE_PVP"]
 37 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: MOVE      R1 R0        ; R1 := R0
 40 [-]: MOVE      R1 R1        ; R1 := R1
 41 [-]: GETGLOBAL R2 K3        ; R2 := _T
 42 [-]: CLOSURE   R3 0         ; R3 := closure(Function #130.1)
 43 [-]: GETUPVAL  R0 U2        ; R0 := U2
 44 [-]: SETTABLE  R2 K16 R3    ; R2["RenamesDone"] := R3
 45 [-]: GETUPVAL  R2 U0        ; R2 := U0
 46 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x458F27A9"]
 47 [-]: LOADK     R4 K17       ; R4 := "SetCallBack"
 48 [-]: LOADK     R5 K16       ; R5 := "RenamesDone"
 49 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 50 [-]: GETGLOBAL R2 K3        ; R2 := _T
 51 [-]: CLOSURE   R3 1         ; R3 := closure(Function #130.2)
 52 [-]: MOVE      R0 R0        ; R0 := R0
 53 [-]: GETUPVAL  R0 U3        ; R0 := U3
 54 [-]: GETUPVAL  R0 U4        ; R0 := U4
 55 [-]: GETUPVAL  R0 U1        ; R0 := U1
 56 [-]: MOVE      R0 R1        ; R0 := R1
 57 [-]: GETUPVAL  R0 U5        ; R0 := U5
 58 [-]: SETTABLE  R2 K18 R3    ; R2["GetConfigNames"] := R3
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x458F27A9"]
 61 [-]: LOADK     R4 K19       ; R4 := "SetElementsFunction"
 62 [-]: LOADK     R5 K18       ; R5 := "GetConfigNames"
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: RETURN    R0 1         ; return 


; Function #130.1:
;
; Name:            
; Defined at line: 4325
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["RenamesDone"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["GetConfigNames"] := nil
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: LOADK     R2 K5        ; R2 := ""
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: GETGLOBAL R4 K6        ; R4 := 0x63B09107
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 16 [-]: JMP       35           ; PC := 35
 17 [-]: GETTABLE  R9 R8 K7     ; R9 := R8["mChanged"]
 18 [-]: TEST      R9 0         ; if not R9 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["0x218E445B"]
 21 [-]: GETTABLE  R10 R8 K9    ; R10 := R8["mContent"]
 22 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 23 [-]: GETGLOBAL R10 K4       ; R10 := 0x400E7765
 24 [-]: MOVE      R11 R9       ; R11 := R9
 25 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 26 [-]: TEST      R10 1        ; if R10 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: MOVE      R10 R2       ; R10 := R2
 30 [-]: GETTABLE  R11 R8 K10   ; R11 := R8["mLabel"]
 31 [-]: LOADK     R12 K11      ; R12 := ":\r\n"
 32 [-]: MOVE      R13 R9       ; R13 := R9
 33 [-]: LOADK     R14 K12      ; R14 := "\r\n\r\n"
 34 [-]: CONCAT    R2 R10 R14   ; R2 := R10 .. R11 .. R12 .. R13 .. R14
 35 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 17; R6 := R7 end
 36 [-]: JMP       17           ; PC := 17
 37 [-]: TEST      R3 0         ; if not R3 then PC := 49
 38 [-]: JMP       49           ; PC := 49
 39 [-]: GETUPVAL  R10 U0       ; R10 := U0
 40 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["0xB11F032"]
 41 [-]: GETGLOBAL R11 K14      ; R11 := mMovie
 42 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 43 [-]: LOADK     R13 K16      ; R13 := "/Lotus/Language/Menu/Loadout_ConfigRenameErrorList"
 44 [-]: MOVE      R14 R0       ; R14 := R0
 45 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 46 [-]: SETTABLE  R15 K17 R2   ; R15["ERRORLIST"] := R2
 47 [-]: CALL      R11 5 0      ; R11,... := R11(R12,R13,R14,R15)
 48 [-]: CALL      R10 0 1      ; R10(R11,...)
 49 [-]: RETURN    R0 1         ; return 


; Function #130.2:
;
; Name:            
; Defined at line: 4354
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: LOADK     R1 K0        ; R1 := 0
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SUB       R2 R2 K1     ; R2 := R2 - 1
  5 [-]: LOADK     R3 K1        ; R3 := 1
  6 [-]: FORPREP   R1 46        ; R1 -= R3; PC := 46
  7 [-]: NEWTABLE  R5 0 4       ; R5 := {}
  8 [-]: SETTABLE  R5 K2 R4     ; R5["mConfigId"] := R4
  9 [-]: GETGLOBAL R6 K4        ; R6 := mMovie
 10 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 11 [-]: LOADK     R8 K6        ; R8 := "/Lotus/Language/Menu/Loadout_Config"
 12 [-]: MOVE      R9 R0        ; R9 := R0
 13 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 14 [-]: GETUPVAL  R11 U1       ; R11 := U1
 15 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["CONFIG_TYPES"]
 16 [-]: ADD       R12 R4 K1    ; R12 := R4 + 1
 17 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 18 [-]: SETTABLE  R10 K7 R11   ; R10["TYPE"] := R11
 19 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 20 [-]: SETTABLE  R5 K3 R6     ; R5["mLabel"] := R6
 21 [-]: GETUPVAL  R6 U2        ; R6 := U2
 22 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["INPUTBOX"]
 23 [-]: SETTABLE  R5 K9 R6     ; R5["mType"] := R6
 24 [-]: SETTABLE  R5 K11 K12   ; R5["mMaxChars"] := 16
 25 [-]: GETUPVAL  R6 U3        ; R6 := U3
 26 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["info"]
 27 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x785D9F90"]
 28 [-]: MOVE      R8 R4        ; R8 := R4
 29 [-]: GETUPVAL  R9 U4        ; R9 := U4
 30 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 31 [-]: SETTABLE  R5 K13 R6    ; R5["mContent"] := R6
 32 [-]: GETTABLE  R6 R5 K13    ; R6 := R5["mContent"]
 33 [-]: SETTABLE  R5 K16 R6    ; R5["mOrigContent"] := R6
 34 [-]: SETTABLE  R5 K17 K18   ; R5["mWidth"] := 400
 35 [-]: SETTABLE  R5 K19 K20   ; R5["mMultiLine"] := "0x0"
 36 [-]: CLOSURE   R6 0         ; R6 := closure(Function #130.2.1)
 37 [-]: MOVE      R0 R5        ; R0 := R5
 38 [-]: GETUPVAL  R0 U5        ; R0 := U5
 39 [-]: SETTABLE  R5 K21 R6    ; R5["mCallback"] := R6
 40 [-]: GETGLOBAL R6 K22       ; R6 := table
 41 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["0xE6450C9D"]
 42 [-]: MOVE      R7 R0        ; R7 := R0
 43 [-]: MOVE      R8 R5        ; R8 := R5
 44 [-]: CALL      R6 3 1       ; R6(R7,R8)
 45 [-]: CLOSE     R5           ; SAVE R5,...
 46 [-]: FORLOOP   R1 7         ; R1 += R3; if R1 <= R2 then begin PC := 7; R4 := R1 end
 47 [-]: RETURN    R0 2         ; return R0
 48 [-]: RETURN    R0 1         ; return 


; Function #130.2.1:
;
; Name:            
; Defined at line: 4365
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mOrigContent"]
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mConfigId"]
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 4383
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8ABD6CC8"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 4389
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x2176B11E"]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 1       ; R1(R2,...)
 12 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 4395
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x8BA455B"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 4401
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 20
  3 [-]: JMP       20           ; PC := 20
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 20
  8 [-]: JMP       20           ; PC := 20
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x3BC31182"]
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0xF595ADDE
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 14 [-]: CALL      R1 0 1       ; R1(R2,...)
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 17 [-]: GETGLOBAL R2 K4        ; R2 := _G
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_DialogOpen"]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 4408
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x7CF71D03"]
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETGLOBAL R0 K1        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["ArsenalState"]
  8 [-]: GETGLOBAL R1 K3        ; R1 := Lotus_Game
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ARSENAL_STATE_PVP"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: MOVE      R0 R1        ; R0 := R1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["info"]
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x233259BB"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: LOADK     R2 K7        ; R2 := 0
 19 [-]: SUB       R3 R1 K8     ; R3 := R1 - 1
 20 [-]: LOADK     R4 K8        ; R4 := 1
 21 [-]: FORPREP   R2 49        ; R2 -= R4; PC := 49
 22 [-]: GETUPVAL  R6 U1        ; R6 := U1
 23 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["info"]
 24 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x785D9F90"]
 25 [-]: MOVE      R8 R5        ; R8 := R5
 26 [-]: MOVE      R9 R0        ; R9 := R0
 27 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 28 [-]: EQ        0 R6 K10     ; if R6 ~= "" then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R7 K11       ; R7 := mMovie
 31 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 32 [-]: LOADK     R9 K13       ; R9 := "/Lotus/Language/Menu/Loadout_Config"
 33 [-]: MOVE      R10 R0       ; R10 := R0
 34 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 35 [-]: GETUPVAL  R12 U2       ; R12 := U2
 36 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["CONFIG_TYPES"]
 37 [-]: ADD       R13 R5 K8    ; R13 := R5 + 1
 38 [-]: GETTABLE  R12 R12 R13  ; R12 := R12[R13]
 39 [-]: SETTABLE  R11 K14 R12  ; R11["TYPE"] := R12
 40 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 41 [-]: MOVE      R6 R7        ; R6 := R7
 42 [-]: GETUPVAL  R7 U0        ; R7 := U0
 43 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7["0xA77DA8EE"]
 44 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 45 [-]: SETTABLE  R9 K17 R6    ; R9["Name"] := R6
 46 [-]: SETTABLE  R9 K18 R5    ; R9["Id"] := R5
 47 [-]: MOVE      R10 R1       ; R10 := R1
 48 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 49 [-]: FORLOOP   R2 22        ; R2 += R4; if R2 <= R3 then begin PC := 22; R5 := R2 end
 50 [-]: GETGLOBAL R7 K19       ; R7 := gGameData
 51 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0x3155222A"]
 52 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 53 [-]: LE        0 K21 R7     ; if 10 > R7 then PC := 75
 54 [-]: JMP       75           ; PC := 75
 55 [-]: GETGLOBAL R8 K3        ; R8 := Lotus_Game
 56 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["WeaponInfo_DEFAULT_NUM_SLOTS"]
 57 [-]: GETGLOBAL R9 K3        ; R9 := Lotus_Game
 58 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["WeaponInfo_MAX_SLOT_PURCHASES"]
 59 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 60 [-]: LT        0 R1 R8      ; if R1 >= R8 then PC := 75
 61 [-]: JMP       75           ; PC := 75
 62 [-]: GETUPVAL  R8 U0        ; R8 := U0
 63 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8["0xA77DA8EE"]
 64 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 65 [-]: GETGLOBAL R11 K11      ; R11 := mMovie
 66 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 67 [-]: LOADK     R13 K24      ; R13 := "<PLUS>"
 68 [-]: MOVE      R14 R1       ; R14 := R1
 69 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 70 [-]: SETTABLE  R10 K17 R11  ; R10["Name"] := R11
 71 [-]: SETTABLE  R10 K25 K26  ; R10["IsAdd"] := "0x1"
 72 [-]: SETTABLE  R10 K27 K26  ; R10["DisableDrag"] := "0x1"
 73 [-]: MOVE      R11 R1       ; R11 := R1
 74 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 75 [-]: GETGLOBAL R8 K11       ; R8 := mMovie
 76 [-]: SELF      R8 R8 K28    ; R9 := R8; R8 := R8["0x1C19D966"]
 77 [-]: LOADK     R10 K29      ; R10 := "TopMenu.SwapLabel"
 78 [-]: LOADK     R11 K30      ; R11 := "text"
 79 [-]: LOADK     R12 K10      ; R12 := ""
 80 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 81 [-]: GETUPVAL  R8 U0        ; R8 := U0
 82 [-]: SELF      R8 R8 K31    ; R9 := R8; R8 := R8["0x6470BAF4"]
 83 [-]: LOADNIL   R10 R10      ; R10 := nil
 84 [-]: MOVE      R11 R0       ; R11 := R0
 85 [-]: MOVE      R12 R1       ; R12 := R1
 86 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 87 [-]: GETUPVAL  R8 U0        ; R8 := U0
 88 [-]: SELF      R8 R8 K32    ; R9 := R8; R8 := R8["0xF09FAAA4"]
 89 [-]: CALL      R8 2 1       ; R8(R9)
 90 [-]: GETUPVAL  R8 U0        ; R8 := U0
 91 [-]: SELF      R8 R8 K33    ; R9 := R8; R8 := R8["0x3BC31182"]
 92 [-]: GETUPVAL  R10 U3       ; R10 := U3
 93 [-]: CALL      R8 3 1       ; R8(R9,R10)
 94 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 4433
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "EE.Interface.Components.List"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["0xB40DEC3F"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  6 [-]: LOADK     R3 K4        ; R3 := "TopMenu.ConfigMenu.Entry"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: SETTABLE  R1 K5 K6     ; R1["mForcedHorizontalSeparation"] := 150
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SETTABLE  R1 K7 K8     ; R1["mForcedVerticalSeparation"] := 0
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xE13A565"]
 15 [-]: LOADK     R3 K10       ; R3 := "ConfigSelected"
 16 [-]: LOADK     R4 K11       ; R4 := "ConfigFocused"
 17 [-]: LOADK     R5 K12       ; R5 := "ConfigUnfocused"
 18 [-]: LOADK     R6 K13       ; R6 := "ConfigPressed"
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SETTABLE  R1 K14 K15   ; R1["mCurrSelectedClipName"] := nil
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: SETTABLE  R1 K16 K15   ; R1["mCurrSelectedId"] := nil
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1["0x5EF4FB05"]
 26 [-]: CALL      R1 2 1       ; R1(R2)
 27 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 28 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1["0x1C19D966"]
 29 [-]: LOADK     R3 K19       ; R3 := "TopMenu.Highlight"
 30 [-]: LOADK     R4 K20       ; R4 := "_alpha"
 31 [-]: LOADK     R5 K8        ; R5 := 0
 32 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 33 [-]: GETUPVAL  R1 U0        ; R1 := U0
 34 [-]: CLOSURE   R2 0         ; R2 := closure(Function #136.1)
 35 [-]: GETUPVAL  R0 U0        ; R0 := U0
 36 [-]: GETUPVAL  R0 U1        ; R0 := U1
 37 [-]: GETUPVAL  R0 U2        ; R0 := U2
 38 [-]: SETTABLE  R1 K21 R2    ; R1["mElementDrawCallback"] := R2
 39 [-]: GETUPVAL  R1 U0        ; R1 := U0
 40 [-]: CLOSURE   R2 1         ; R2 := closure(Function #136.2)
 41 [-]: GETUPVAL  R0 U0        ; R0 := U0
 42 [-]: GETUPVAL  R0 U2        ; R0 := U2
 43 [-]: GETUPVAL  R0 U3        ; R0 := U3
 44 [-]: SETTABLE  R1 K22 R2    ; R1["mOnFocusedCallback"] := R2
 45 [-]: GETUPVAL  R1 U0        ; R1 := U0
 46 [-]: CLOSURE   R2 2         ; R2 := closure(Function #136.3)
 47 [-]: GETUPVAL  R0 U0        ; R0 := U0
 48 [-]: SETTABLE  R1 K23 R2    ; R1["mOnUnfocusedCallback"] := R2
 49 [-]: GETUPVAL  R1 U0        ; R1 := U0
 50 [-]: CLOSURE   R2 3         ; R2 := closure(Function #136.4)
 51 [-]: GETUPVAL  R0 U0        ; R0 := U0
 52 [-]: GETUPVAL  R0 U4        ; R0 := U4
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: SETTABLE  R1 K24 R2    ; R1["mOnSelectedCallback"] := R2
 55 [-]: GETUPVAL  R1 U0        ; R1 := U0
 56 [-]: CLOSURE   R2 4         ; R2 := closure(Function #136.5)
 57 [-]: GETUPVAL  R0 U0        ; R0 := U0
 58 [-]: SETTABLE  R1 K25 R2    ; R1["RepositionElements"] := R2
 59 [-]: GETUPVAL  R1 U0        ; R1 := U0
 60 [-]: CLOSURE   R2 5         ; R2 := closure(Function #136.6)
 61 [-]: GETUPVAL  R0 U0        ; R0 := U0
 62 [-]: SETTABLE  R1 K26 R2    ; R1["mOnDragFocusedCallback"] := R2
 63 [-]: GETUPVAL  R1 U0        ; R1 := U0
 64 [-]: CLOSURE   R2 6         ; R2 := closure(Function #136.7)
 65 [-]: SETTABLE  R1 K27 R2    ; R1["mOnDragUnfocusedCallback"] := R2
 66 [-]: GETUPVAL  R1 U0        ; R1 := U0
 67 [-]: CLOSURE   R2 7         ; R2 := closure(Function #136.8)
 68 [-]: GETUPVAL  R0 U0        ; R0 := U0
 69 [-]: GETUPVAL  R0 U2        ; R0 := U2
 70 [-]: GETUPVAL  R0 U6        ; R0 := U6
 71 [-]: GETUPVAL  R0 U7        ; R0 := U7
 72 [-]: GETUPVAL  R0 U5        ; R0 := U5
 73 [-]: SETTABLE  R1 K28 R2    ; R1["mOnDraggedCallback"] := R2
 74 [-]: GETUPVAL  R1 U8        ; R1 := U8
 75 [-]: CALL      R1 1 1       ; R1()
 76 [-]: RETURN    R0 1         ; return 


; Function #136.1:
;
; Name:            
; Defined at line: 4445
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x97B489B5"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["Id"]
 10 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["Id"]
 11 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: GETGLOBAL R3 K1        ; R3 := 0x400E7765
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mSelectedElement"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["Id"]
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mSelectedElement"]
 24 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Id"]
 25 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: GETUPVAL  R4 U1        ; R4 := U1
 30 [-]: TEST      R4 0         ; if not R4 then PC := 39
 31 [-]: JMP       39           ; PC := 39
 32 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 33 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 34 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 35 [-]: LOADK     R7 K7        ; R7 := "Label"
 36 [-]: LOADK     R8 K8        ; R8 := "fontName"
 37 [-]: LOADK     R9 K9        ; R9 := "Arial Unicode MS"
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 40 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x17028E8F"]
 41 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 K11       ; R7 := ".Label.text"
 43 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 44 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["Name"]
 45 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 46 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 47 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 48 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 49 [-]: LOADK     R7 K7        ; R7 := "Label"
 50 [-]: LOADK     R8 K13       ; R8 := "textColor"
 51 [-]: GETGLOBAL R9 K14       ; R9 := _G
 52 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["UIColor_White"]
 53 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 54 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 55 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 56 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 57 [-]: LOADK     R7 K7        ; R7 := "Label"
 58 [-]: LOADK     R8 K16       ; R8 := "_alpha"
 59 [-]: GETUPVAL  R9 U2        ; R9 := U2
 60 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["0xF81722A2"]
 61 [-]: TEST      R2 1         ; if R2 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: GETTABLE  R10 R0 K18   ; R10 := R0["IsAdd"]
 64 [-]: JMP       67           ; PC := 67
 65 [-]: MOVE      R10 R0       ; R10 := R0
 66 [-]: MOVE      R10 R1       ; R10 := R1
 67 [-]: LOADK     R11 K19      ; R11 := 50
 68 [-]: LOADK     R12 K20      ; R12 := 100
 69 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 70 [-]: CALL      R4 0 1       ; R4(R5,...)
 71 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 72 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x7E1F26D7"]
 73 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 74 [-]: LOADK     R7 K22       ; R7 := ".Bg.Back"
 75 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 76 [-]: GETGLOBAL R7 K14       ; R7 := _G
 77 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["UIMaterial_SmoothEdge"]
 78 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 79 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 80 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4["0x7E1F26D7"]
 81 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 82 [-]: LOADK     R7 K24       ; R7 := ".Bg.SubLine"
 83 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 84 [-]: GETGLOBAL R7 K14       ; R7 := _G
 85 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["UIMaterial_SmoothEdge"]
 86 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 87 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
 88 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
 89 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
 90 [-]: LOADK     R7 K25       ; R7 := "Bg"
 91 [-]: LOADK     R8 K16       ; R8 := "_alpha"
 92 [-]: GETUPVAL  R9 U2        ; R9 := U2
 93 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["0xF81722A2"]
 94 [-]: MOVE      R10 R3       ; R10 := R3
 95 [-]: LOADK     R11 K20      ; R11 := 100
 96 [-]: LOADK     R12 K26      ; R12 := 0
 97 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 98 [-]: CALL      R4 0 1       ; R4(R5,...)
 99 [-]: GETGLOBAL R4 K4        ; R4 := mMovie
100 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4["0x880196A7"]
101 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mClipName"]
102 [-]: LOADK     R7 K27       ; R7 := "Bg.SubLine"
103 [-]: LOADK     R8 K28       ; R8 := "_height"
104 [-]: GETUPVAL  R9 U2        ; R9 := U2
105 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["0xF81722A2"]
106 [-]: MOVE      R10 R3       ; R10 := R3
107 [-]: LOADK     R11 K29      ; R11 := 4
108 [-]: LOADK     R12 K30      ; R12 := 0.0099999997764826
109 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
110 [-]: CALL      R4 0 1       ; R4(R5,...)
111 [-]: RETURN    R0 1         ; return 


; Function #136.2:
;
; Name:            
; Defined at line: 4465
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCurrSelectedClipName"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCurrSelectedClipName"]
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mClipName"]
 10 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 61
 11 [-]: JMP       61           ; PC := 61
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x25992394"]
 14 [-]: GETGLOBAL R2 K4        ; R2 := _G
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UISound_Focus"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K6        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x880196A7"]
 19 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K8        ; R4 := "Label"
 21 [-]: LOADK     R5 K9        ; R5 := "textColor"
 22 [-]: GETGLOBAL R6 K4        ; R6 := _G
 23 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["UIColor_Yellow"]
 24 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 25 [-]: GETTABLE  R1 R0 K11    ; R1 := R0["IsAdd"]
 26 [-]: TEST      R1 0         ; if not R1 then PC := 61
 27 [-]: JMP       61           ; PC := 61
 28 [-]: GETGLOBAL R1 K6        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x880196A7"]
 30 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 31 [-]: LOADK     R4 K8        ; R4 := "Label"
 32 [-]: LOADK     R5 K12       ; R5 := "_alpha"
 33 [-]: LOADK     R6 K13       ; R6 := 100
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 36 [-]: SETTABLE  R1 K14 K15   ; R1["CustomEntry"] := "0x1"
 37 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 38 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 39 [-]: LOADK     R4 K18       ; R4 := "/Lotus/Language/Items/SlotUnlockerGeneric"
 40 [-]: MOVE      R5 R0        ; R5 := R0
 41 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 42 [-]: SETTABLE  R1 K16 R2    ; R1["Name"] := R2
 43 [-]: SETTABLE  R1 K19 K20   ; R1["Description"] := "/Lotus/Language/Items/ModSlotUnlockerDesc"
 44 [-]: GETUPVAL  R2 U2        ; R2 := U2
 45 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["0xB102F9B3"]
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["LABEL_TYPE_PLATINUM"]
 48 [-]: LOADK     R4 K23       ; R4 := "10"
 49 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 50 [-]: NEWTABLE  R3 1 0       ; R3 := {}
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: SETLIST   R3 1 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
 53 [-]: SETTABLE  R1 K24 R3    ; R1["Tags"] := R3
 54 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 55 [-]: SETTABLE  R3 K26 K15   ; R3["UseCursor"] := "0x1"
 56 [-]: SETTABLE  R3 K27 K28   ; R3["W"] := 20
 57 [-]: SETTABLE  R3 K29 K30   ; R3["H"] := 30
 58 [-]: SETTABLE  R1 K25 R3    ; R1["Rect"] := R3
 59 [-]: GETGLOBAL R3 K31       ; R3 := _T
 60 [-]: SETTABLE  R3 K32 R1    ; R3["InfoPopup_Data"] := R1
 61 [-]: RETURN    R0 1         ; return 


; Function #136.3:
;
; Name:            
; Defined at line: 4487
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mCurrSelectedClipName"]
  3 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mClipName"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K4        ; R4 := "Label"
 10 [-]: LOADK     R5 K5        ; R5 := "textColor"
 11 [-]: GETGLOBAL R6 K6        ; R6 := _G
 12 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["UIColor_White"]
 13 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 14 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["IsAdd"]
 15 [-]: TEST      R1 0         ; if not R1 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x880196A7"]
 19 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 20 [-]: LOADK     R4 K4        ; R4 := "Label"
 21 [-]: LOADK     R5 K9        ; R5 := "_alpha"
 22 [-]: LOADK     R6 K10       ; R6 := 50
 23 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 24 [-]: GETGLOBAL R1 K11       ; R1 := _T
 25 [-]: SETTABLE  R1 K12 K13   ; R1["InfoPopup_Data"] := nil
 26 [-]: RETURN    R0 1         ; return 


; Function #136.4:
;
; Name:            
; Defined at line: 4497
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["IsAdd"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mCurrSelectedId"]
  6 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xF61F409A"]
 11 [-]: GETUPVAL  R4 U0        ; R4 := U0
 12 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mCurrSelectedId"]
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: SETTABLE  R1 K3 R2     ; R1["mSelectedElement"] := R2
 15 [-]: JMP       18           ; PC := 18
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K3 K2     ; R1["mSelectedElement"] := nil
 18 [-]: GETUPVAL  R1 U1        ; R1 := U1
 19 [-]: GETGLOBAL R2 K5        ; R2 := Lotus_Game
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["WF_MODCONFIG_UNLOCKED"]
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mCurrSelectedClipName"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 61
 28 [-]: JMP       61           ; PC := 61
 29 [-]: GETGLOBAL R1 K9        ; R1 := 0x52E17A90
 30 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCurrSelectedClipName"]
 33 [-]: LOADK     R4 K11       ; R4 := ".Bg"
 34 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 35 [-]: GETGLOBAL R4 K12       ; R4 := UISys
 36 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 37 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 38 [-]: LOADK     R6 K14       ; R6 := "_alpha"
 39 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 40 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 41 [-]: LOADK     R7 K15       ; R7 := 0
 42 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 43 [-]: LOADK     R7 K16       ; R7 := 0.15000000596046
 44 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 45 [-]: GETGLOBAL R1 K9        ; R1 := 0x52E17A90
 46 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 47 [-]: GETUPVAL  R3 U0        ; R3 := U0
 48 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCurrSelectedClipName"]
 49 [-]: LOADK     R4 K17       ; R4 := ".Bg.SubLine"
 50 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 51 [-]: GETGLOBAL R4 K12       ; R4 := UISys
 52 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 53 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 54 [-]: LOADK     R6 K18       ; R6 := "_height"
 55 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 56 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 57 [-]: LOADK     R7 K19       ; R7 := 0.0099999997764826
 58 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 59 [-]: LOADK     R7 K16       ; R7 := 0.15000000596046
 60 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 61 [-]: GETUPVAL  R1 U0        ; R1 := U0
 62 [-]: GETTABLE  R2 R0 K20    ; R2 := R0["Id"]
 63 [-]: SETTABLE  R1 K1 R2     ; R1["mCurrSelectedId"] := R2
 64 [-]: GETUPVAL  R1 U0        ; R1 := U0
 65 [-]: GETTABLE  R2 R0 K21    ; R2 := R0["mClipName"]
 66 [-]: SETTABLE  R1 K8 R2     ; R1["mCurrSelectedClipName"] := R2
 67 [-]: GETGLOBAL R1 K10       ; R1 := mMovie
 68 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1["0x880196A7"]
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCurrSelectedClipName"]
 71 [-]: LOADK     R4 K23       ; R4 := "Label"
 72 [-]: LOADK     R5 K24       ; R5 := "textColor"
 73 [-]: GETGLOBAL R6 K25       ; R6 := _G
 74 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["UIColor_White"]
 75 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 76 [-]: GETGLOBAL R1 K9        ; R1 := 0x52E17A90
 77 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 78 [-]: GETUPVAL  R3 U0        ; R3 := U0
 79 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCurrSelectedClipName"]
 80 [-]: LOADK     R4 K11       ; R4 := ".Bg"
 81 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 82 [-]: GETGLOBAL R4 K12       ; R4 := UISys
 83 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 84 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 85 [-]: LOADK     R6 K14       ; R6 := "_alpha"
 86 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 87 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 88 [-]: LOADK     R7 K27       ; R7 := 100
 89 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 90 [-]: LOADK     R7 K28       ; R7 := 0.25
 91 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 92 [-]: GETGLOBAL R1 K9        ; R1 := 0x52E17A90
 93 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 94 [-]: GETUPVAL  R3 U0        ; R3 := U0
 95 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mCurrSelectedClipName"]
 96 [-]: LOADK     R4 K17       ; R4 := ".Bg.SubLine"
 97 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 98 [-]: GETGLOBAL R4 K12       ; R4 := UISys
 99 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["FlashInstance_SMOOTH_STEP"]
100 [-]: NEWTABLE  R5 1 0       ; R5 := {}
101 [-]: LOADK     R6 K18       ; R6 := "_height"
102 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
103 [-]: NEWTABLE  R6 1 0       ; R6 := {}
104 [-]: LOADK     R7 K29       ; R7 := 4
105 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
106 [-]: LOADK     R7 K28       ; R7 := 0.25
107 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
108 [-]: GETUPVAL  R1 U2        ; R1 := U2
109 [-]: GETTABLE  R2 R0 K20    ; R2 := R0["Id"]
110 [-]: CALL      R1 2 1       ; R1(R2)
111 [-]: RETURN    R0 1         ; return 


; Function #136.5:
;
; Name:            
; Defined at line: 4525
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: LOADK     R1 K0        ; R1 := 0
  2 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0["0xC51A5C9D"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: LOADK     R3 K2        ; R3 := 20
  5 [-]: LOADK     R4 K3        ; R4 := 1
  6 [-]: MOVE      R5 R2        ; R5 := R2
  7 [-]: LOADK     R6 K3        ; R6 := 1
  8 [-]: FORPREP   R4 42        ; R4 -= R6; PC := 42
  9 [-]: SELF      R8 R0 K4     ; R9 := R0; R8 := R0["0xD75E681A"]
 10 [-]: MOVE      R10 R7       ; R10 := R7
 11 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 12 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mClipName"]
 13 [-]: SETTABLE  R8 K6 R1     ; R8["NewX"] := R1
 14 [-]: GETGLOBAL R10 K8       ; R10 := 0xF595ADDE
 15 [-]: GETGLOBAL R11 K9       ; R11 := mMovie
 16 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11["0x6B7B470B"]
 17 [-]: MOVE      R13 R9       ; R13 := R9
 18 [-]: LOADK     R14 K11      ; R14 := ".Label"
 19 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 20 [-]: LOADK     R14 K12      ; R14 := "textWidth"
 21 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 22 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 23 [-]: ADD       R10 R10 K2   ; R10 := R10 + 20
 24 [-]: SETTABLE  R8 K7 R10    ; R8["BgWidth"] := R10
 25 [-]: GETTABLE  R10 R8 K7    ; R10 := R8["BgWidth"]
 26 [-]: ADD       R10 R1 R10   ; R10 := R1 + R10
 27 [-]: ADD       R1 R10 R3    ; R1 := R10 + R3
 28 [-]: GETGLOBAL R10 K9       ; R10 := mMovie
 29 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x880196A7"]
 30 [-]: MOVE      R12 R9       ; R12 := R9
 31 [-]: LOADK     R13 K14      ; R13 := "Btn"
 32 [-]: LOADK     R14 K15      ; R14 := "_width"
 33 [-]: GETTABLE  R15 R8 K7    ; R15 := R8["BgWidth"]
 34 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 35 [-]: GETGLOBAL R10 K9       ; R10 := mMovie
 36 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x880196A7"]
 37 [-]: MOVE      R12 R9       ; R12 := R9
 38 [-]: LOADK     R13 K16      ; R13 := "Bg"
 39 [-]: LOADK     R14 K15      ; R14 := "_width"
 40 [-]: GETTABLE  R15 R8 K7    ; R15 := R8["BgWidth"]
 41 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 42 [-]: FORLOOP   R4 9         ; R4 += R6; if R4 <= R5 then begin PC := 9; R7 := R4 end
 43 [-]: GETUPVAL  R10 U0       ; R10 := U0
 44 [-]: GETTABLE  R10 R10 K17  ; R10 := R10["mInitialX"]
 45 [-]: DIV       R11 R1 K18   ; R11 := R1 / 2
 46 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
 47 [-]: LOADK     R11 K3       ; R11 := 1
 48 [-]: MOVE      R12 R2       ; R12 := R2
 49 [-]: LOADK     R13 K3       ; R13 := 1
 50 [-]: FORPREP   R11 62       ; R11 -= R13; PC := 62
 51 [-]: SELF      R15 R0 K4    ; R16 := R0; R15 := R0["0xD75E681A"]
 52 [-]: MOVE      R17 R14      ; R17 := R14
 53 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 54 [-]: GETTABLE  R16 R15 K5   ; R16 := R15["mClipName"]
 55 [-]: GETGLOBAL R17 K9       ; R17 := mMovie
 56 [-]: SELF      R17 R17 K19  ; R18 := R17; R17 := R17["0x1C19D966"]
 57 [-]: MOVE      R19 R16      ; R19 := R16
 58 [-]: LOADK     R20 K20      ; R20 := "_x"
 59 [-]: GETTABLE  R21 R15 K6   ; R21 := R15["NewX"]
 60 [-]: ADD       R21 R10 R21  ; R21 := R10 + R21
 61 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
 62 [-]: FORLOOP   R11 51       ; R11 += R13; if R11 <= R12 then begin PC := 51; R14 := R11 end
 63 [-]: GETGLOBAL R17 K9       ; R17 := mMovie
 64 [-]: SELF      R17 R17 K19  ; R18 := R17; R17 := R17["0x1C19D966"]
 65 [-]: LOADK     R19 K21      ; R19 := "TopMenu.ConfigLeft"
 66 [-]: LOADK     R20 K20      ; R20 := "_x"
 67 [-]: SUB       R21 R10 K22  ; R21 := R10 - 50
 68 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
 69 [-]: SELF      R17 R0 K4    ; R18 := R0; R17 := R0["0xD75E681A"]
 70 [-]: MOVE      R19 R2       ; R19 := R2
 71 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 72 [-]: GETGLOBAL R18 K9       ; R18 := mMovie
 73 [-]: SELF      R18 R18 K19  ; R19 := R18; R18 := R18["0x1C19D966"]
 74 [-]: LOADK     R20 K23      ; R20 := "TopMenu.ConfigRight"
 75 [-]: LOADK     R21 K20      ; R21 := "_x"
 76 [-]: GETTABLE  R22 R17 K6   ; R22 := R17["NewX"]
 77 [-]: ADD       R22 R10 R22  ; R22 := R10 + R22
 78 [-]: GETTABLE  R23 R17 K7   ; R23 := R17["BgWidth"]
 79 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
 80 [-]: ADD       R22 R22 K22  ; R22 := R22 + 50
 81 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
 82 [-]: RETURN    R0 1         ; return 


; Function #136.6:
;
; Name:            
; Defined at line: 4550
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0xF61F409A"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mClickDrag"]
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["DragId"]
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["IsAdd"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 11 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x17028E8F"]
 12 [-]: LOADK     R4 K6        ; R4 := "TopMenu.SwapLabel.text"
 13 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Language/Menu/Arsenal_ConfigSwapError"
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: JMP       30           ; PC := 30
 16 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x17028E8F"]
 18 [-]: LOADK     R4 K6        ; R4 := "TopMenu.SwapLabel.text"
 19 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/Menu/Arsenal_ConfigSwap"
 20 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 21 [-]: LOADK     R7 K10       ; R7 := " "
 22 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["Name"]
 23 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 24 [-]: SETTABLE  R6 K9 R7     ; R6["FIRST"] := R7
 25 [-]: LOADK     R7 K10       ; R7 := " "
 26 [-]: GETTABLE  R8 R1 K11    ; R8 := R1["Name"]
 27 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 28 [-]: SETTABLE  R6 K12 R7    ; R6["SECOND"] := R7
 29 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 30 [-]: RETURN    R0 1         ; return 


; Function #136.7:
;
; Name:            
; Defined at line: 4559
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "TopMenu.SwapLabel"
  4 [-]: LOADK     R4 K3        ; R4 := "text"
  5 [-]: LOADK     R5 K4        ; R5 := ""
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: RETURN    R0 1         ; return 


; Function #136.8:
;
; Name:            
; Defined at line: 4563
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "TopMenu.SwapLabel"
  4 [-]: LOADK     R4 K3        ; R4 := "text"
  5 [-]: LOADK     R5 K4        ; R5 := ""
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xD75E681A"]
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mClickDrag"]
 11 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["DragIndex"]
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0xD75E681A"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mClickDrag"]
 17 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["FocusedIndex"]
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: GETTABLE  R3 R1 K9     ; R3 := R1["IsAdd"]
 20 [-]: TEST      R3 1         ; if R3 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R3 R2 K9     ; R3 := R2["IsAdd"]
 23 [-]: TEST      R3 0         ; if not R3 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x25992394"]
 27 [-]: GETGLOBAL R4 K11       ; R4 := _G
 28 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["UISound_Error"]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 32 [-]: GETGLOBAL R4 K14       ; R4 := gGameData
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 1         ; if R3 then PC := 97
 35 [-]: JMP       97           ; PC := 97
 36 [-]: GETGLOBAL R3 K14       ; R3 := gGameData
 37 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3["0x6F2E05FD"]
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["info"]
 41 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mItemId"]
 42 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["mId"]
 43 [-]: SELF      R5 R3 K19    ; R6 := R3; R5 := R3["0xE21863E9"]
 44 [-]: MOVE      R7 R4        ; R7 := R4
 45 [-]: GETTABLE  R8 R1 K20    ; R8 := R1["Id"]
 46 [-]: GETTABLE  R9 R2 K20    ; R9 := R2["Id"]
 47 [-]: MOVE      R10 R1       ; R10 := R1
 48 [-]: GETGLOBAL R11 K21      ; R11 := _T
 49 [-]: GETTABLE  R11 R11 K22  ; R11 := R11["ArsenalState"]
 50 [-]: GETGLOBAL R12 K23      ; R12 := Lotus_Game
 51 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["ARSENAL_STATE_PVP"]
 52 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R11 R0       ; R11 := R0
 55 [-]: MOVE      R11 R1       ; R11 := R1
 56 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 57 [-]: GETUPVAL  R5 U3        ; R5 := U3
 58 [-]: CALL      R5 1 1       ; R5()
 59 [-]: GETTABLE  R5 R1 K25    ; R5 := R1["Name"]
 60 [-]: GETTABLE  R6 R2 K25    ; R6 := R2["Name"]
 61 [-]: SETTABLE  R1 K25 R6    ; R1["Name"] := R6
 62 [-]: SETTABLE  R2 K25 R5    ; R2["Name"] := R5
 63 [-]: GETUPVAL  R6 U0        ; R6 := U0
 64 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0xA372F64A"]
 65 [-]: MOVE      R7 R1        ; R7 := R1
 66 [-]: CALL      R6 2 1       ; R6(R7)
 67 [-]: GETUPVAL  R6 U0        ; R6 := U0
 68 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0xA372F64A"]
 69 [-]: MOVE      R7 R2        ; R7 := R2
 70 [-]: CALL      R6 2 1       ; R6(R7)
 71 [-]: GETUPVAL  R6 U0        ; R6 := U0
 72 [-]: SELF      R6 R6 K27    ; R7 := R6; R6 := R6["0xF09FAAA4"]
 73 [-]: CALL      R6 2 1       ; R6(R7)
 74 [-]: GETUPVAL  R6 U0        ; R6 := U0
 75 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["mSelectedElement"]
 76 [-]: EQ        1 R6 K29     ; if R6 == nil then PC := 84
 77 [-]: JMP       84           ; PC := 84
 78 [-]: GETTABLE  R6 R2 K20    ; R6 := R2["Id"]
 79 [-]: GETUPVAL  R7 U0        ; R7 := U0
 80 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mSelectedElement"]
 81 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["Id"]
 82 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 91
 83 [-]: JMP       91           ; PC := 91
 84 [-]: GETUPVAL  R6 U0        ; R6 := U0
 85 [-]: SELF      R6 R6 K30    ; R7 := R6; R6 := R6["0x6F328455"]
 86 [-]: GETUPVAL  R8 U0        ; R8 := U0
 87 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mClickDrag"]
 88 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["FocusedIndex"]
 89 [-]: CALL      R6 3 1       ; R6(R7,R8)
 90 [-]: JMP       97           ; PC := 97
 91 [-]: GETUPVAL  R6 U4        ; R6 := U4
 92 [-]: GETUPVAL  R7 U0        ; R7 := U0
 93 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mSelectedElement"]
 94 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["Id"]
 95 [-]: MOVE      R8 R1        ; R8 := R1
 96 [-]: CALL      R6 3 1       ; R6(R7,R8)
 97 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 4601
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MenuSuitAvatar"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6DA72501"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: MOVE      R0 R1        ; R0 := R1
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0x1BDE0F53"]
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 17 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K5        ; R3 := cameraSpot
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 142
 21 [-]: JMP       142          ; PC := 142
 22 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 23 [-]: GETGLOBAL R3 K1        ; R3 := _T
 24 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["MenuSuitAvatar"]
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 142
 27 [-]: JMP       142          ; PC := 142
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: CALL      R2 1 2       ; R2 := R2()
 30 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 33 [-]: TEST      R3 1         ; if R3 then PC := 142
 34 [-]: JMP       142          ; PC := 142
 35 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0xD425D6BD"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: MOVE      R3 R3        ; R3 := R3
 38 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 39 [-]: GETUPVAL  R4 U3        ; R4 := U3
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: TEST      R3 1         ; if R3 then PC := 47
 42 [-]: JMP       47           ; PC := 47
 43 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2["0x5134D43C"]
 44 [-]: LOADNIL   R5 R5        ; R5 := nil
 45 [-]: LOADK     R6 K8        ; R6 := 0
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: GETUPVAL  R3 U4        ; R3 := U4
 48 [-]: TEST      R3 1         ; if R3 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETGLOBAL R3 K1        ; R3 := _T
 51 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["ArsenalState"]
 52 [-]: GETGLOBAL R4 K10       ; R4 := Lotus_Game
 53 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["ARSENAL_STATE_VEHICLES"]
 54 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: MOVE      R3 R0        ; R3 := R0
 57 [-]: MOVE      R3 R1        ; R3 := R1
 58 [-]: GETUPVAL  R4 U0        ; R4 := U0
 59 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0xF81722A2"]
 60 [-]: MOVE      R5 R3        ; R5 := R3
 61 [-]: GETGLOBAL R6 K13       ; R6 := 0x221C9700
 62 [-]: LOADK     R7 K8        ; R7 := 0
 63 [-]: LOADK     R8 K14       ; R8 := 3
 64 [-]: LOADK     R9 K15       ; R9 := -2
 65 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 66 [-]: GETGLOBAL R7 K13       ; R7 := 0x221C9700
 67 [-]: LOADK     R8 K16       ; R8 := 1.5
 68 [-]: LOADK     R9 K17       ; R9 := 1.6499999761581
 69 [-]: LOADK     R10 K18      ; R10 := -0.99000000953674
 70 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 71 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 72 [-]: GETUPVAL  R5 U0        ; R5 := U0
 73 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["0xF81722A2"]
 74 [-]: MOVE      R6 R3        ; R6 := R3
 75 [-]: GETGLOBAL R7 K19       ; R7 := 0x1E4F6281
 76 [-]: CALL      R7 1 2       ; R7 := R7()
 77 [-]: GETGLOBAL R8 K19       ; R8 := 0x1E4F6281
 78 [-]: LOADK     R9 K20       ; R9 := -23
 79 [-]: LOADK     R10 K8       ; R10 := 0
 80 [-]: LOADK     R11 K8       ; R11 := 0
 81 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 82 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 83 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 84 [-]: MOVE      R7 R1        ; R7 := R1
 85 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 86 [-]: TEST      R6 1         ; if R6 then PC := 116
 87 [-]: JMP       116          ; PC := 116
 88 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 89 [-]: GETGLOBAL R7 K1        ; R7 := _T
 90 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["KDriveAvatar"]
 91 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 92 [-]: TEST      R6 1         ; if R6 then PC := 106
 93 [-]: JMP       106          ; PC := 106
 94 [-]: GETGLOBAL R6 K1        ; R6 := _T
 95 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["KDriveAvatar"]
 96 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6["0x8C1ACCEF"]
 97 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 98 [-]: TEST      R6 0         ; if not R6 then PC := 106
 99 [-]: JMP       106          ; PC := 106
100 [-]: GETGLOBAL R6 K13       ; R6 := 0x221C9700
101 [-]: LOADK     R7 K8        ; R7 := 0
102 [-]: LOADK     R8 K23       ; R8 := 0.050000000745058
103 [-]: LOADK     R9 K8        ; R9 := 0
104 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
105 [-]: ADD       R4 R4 R6     ; R4 := R4 + R6
106 [-]: SELF      R6 R1 K24    ; R7 := R1; R6 := R1["0xAB436EF2"]
107 [-]: GETGLOBAL R8 K5        ; R8 := cameraSpot
108 [-]: GETGLOBAL R9 K25       ; R9 := 0xEC274B1A
109 [-]: LOADK     R10 K26      ; R10 := "GAME_C1_ROOT"
110 [-]: CALL      R9 2 2       ; R9 := R9(R10)
111 [-]: MOVE      R10 R4       ; R10 := R4
112 [-]: MOVE      R11 R5       ; R11 := R5
113 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
114 [-]: MOVE      R6 R5        ; R6 := R5
115 [-]: JMP       133          ; PC := 133
116 [-]: GETGLOBAL R6 K13       ; R6 := 0x221C9700
117 [-]: LOADK     R7 K23       ; R7 := 0.050000000745058
118 [-]: LOADK     R8 K27       ; R8 := -0.25
119 [-]: LOADK     R9 K8        ; R9 := 0
120 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
121 [-]: ADD       R4 R4 R6     ; R4 := R4 + R6
122 [-]: GETGLOBAL R6 K1        ; R6 := _T
123 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["MenuSuitAvatar"]
124 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6["0xAB436EF2"]
125 [-]: GETGLOBAL R8 K5        ; R8 := cameraSpot
126 [-]: GETGLOBAL R9 K25       ; R9 := 0xEC274B1A
127 [-]: LOADK     R10 K26      ; R10 := "GAME_C1_ROOT"
128 [-]: CALL      R9 2 2       ; R9 := R9(R10)
129 [-]: MOVE      R10 R4       ; R10 := R4
130 [-]: MOVE      R11 R5       ; R11 := R5
131 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
132 [-]: MOVE      R6 R5        ; R6 := R5
133 [-]: SELF      R6 R2 K7     ; R7 := R2; R6 := R2["0x5134D43C"]
134 [-]: GETUPVAL  R8 U5        ; R8 := U5
135 [-]: LOADK     R9 K28       ; R9 := 0.15000000596046
136 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
137 [-]: GETUPVAL  R6 U6        ; R6 := U6
138 [-]: EQ        1 R6 K29     ; if R6 == nil then PC := 142
139 [-]: JMP       142          ; PC := 142
140 [-]: GETUPVAL  R6 U6        ; R6 := U6
141 [-]: SETTABLE  R6 K30 K29   ; R6["mCameraSpot"] := nil
142 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 4639
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: CLOSURE   R2 0         ; R2 := closure(Function #138.1)
  3 [-]: MOVE      R0 R1        ; R0 := R1
  4 [-]: GETGLOBAL R3 K0        ; R3 := _T
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["upgradeItemSlot"]
  6 [-]: GETGLOBAL R4 K0        ; R4 := _T
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["upgradeItemLot"]
  8 [-]: MOVE      R5 R2        ; R5 := R2
  9 [-]: LOADK     R6 K3        ; R6 := "/Lotus/Language/Menu/InstallingExplanation_Windows"
 10 [-]: CALL      R5 2 1       ; R5(R6)
 11 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LOT_DATAKNIFE"]
 13 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: MOVE      R5 R2        ; R5 := R2
 16 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/GameTips/Upgrades_ElementalDamageCombinations"
 17 [-]: CALL      R5 2 1       ; R5(R6)
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/GameTips/Upgrades_MatchPolarity"
 20 [-]: CALL      R5 2 1       ; R5(R6)
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/GameTips/Upgrades_CapacityMath"
 23 [-]: CALL      R5 2 1       ; R5(R6)
 24 [-]: GETGLOBAL R5 K9        ; R5 := Engine
 25 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x9490FE70"]
 26 [-]: CALL      R5 1 2       ; R5 := R5()
 27 [-]: TEST      R5 0         ; if not R5 then PC := 32
 28 [-]: JMP       32           ; PC := 32
 29 [-]: MOVE      R5 R2        ; R5 := R2
 30 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/GameTips/Upgrades_ModTutorial"
 31 [-]: CALL      R5 2 1       ; R5(R6)
 32 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 33 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["LOT_SENTINEL"]
 34 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 37 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["SUIT_SLOT"]
 38 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: LOADK     R6 K14       ; R6 := "/Lotus/Language/GameTips/Upgrades_OrderOfPrecepts"
 42 [-]: CALL      R5 2 1       ; R5(R6)
 43 [-]: JMP       137          ; PC := 137
 44 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 45 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["LOT_DATAKNIFE"]
 46 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 86
 47 [-]: JMP       86           ; PC := 86
 48 [-]: GETGLOBAL R5 K15       ; R5 := 0x400E7765
 49 [-]: GETUPVAL  R6 U0        ; R6 := U0
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 76
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mCategoriesCount"]
 55 [-]: GETUPVAL  R6 U1        ; R6 := U1
 56 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["CategoryId_IMMORTAL"]
 57 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 58 [-]: EQ        1 R5 K18     ; if R5 == nil then PC := 76
 59 [-]: JMP       76           ; PC := 76
 60 [-]: GETUPVAL  R5 U0        ; R5 := U0
 61 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["mCategoriesCount"]
 62 [-]: GETUPVAL  R6 U1        ; R6 := U1
 63 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["CategoryId_IMMORTAL"]
 64 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 65 [-]: LT        0 K19 R5     ; if 0 >= R5 then PC := 76
 66 [-]: JMP       76           ; PC := 76
 67 [-]: MOVE      R5 R2        ; R5 := R2
 68 [-]: LOADK     R6 K20       ; R6 := "/Lotus/Language/GameTips/Upgrades_ImmortalSlot"
 69 [-]: CALL      R5 2 1       ; R5(R6)
 70 [-]: MOVE      R5 R2        ; R5 := R2
 71 [-]: LOADK     R6 K21       ; R6 := "/Lotus/Language/GameTips/Upgrades_ImmortalCode"
 72 [-]: CALL      R5 2 1       ; R5(R6)
 73 [-]: MOVE      R5 R2        ; R5 := R2
 74 [-]: LOADK     R6 K22       ; R6 := "/Lotus/Language/GameTips/Upgrades_ImmortalDamage"
 75 [-]: CALL      R5 2 1       ; R5(R6)
 76 [-]: MOVE      R5 R2        ; R5 := R2
 77 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/GameTips/Upgrades_KnifePurpose"
 78 [-]: CALL      R5 2 1       ; R5(R6)
 79 [-]: MOVE      R5 R2        ; R5 := R2
 80 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/GameTips/Upgrades_KnifeMercy"
 81 [-]: CALL      R5 2 1       ; R5(R6)
 82 [-]: MOVE      R5 R2        ; R5 := R2
 83 [-]: LOADK     R6 K25       ; R6 := "/Lotus/Language/GameTips/Upgrades_KnifeHack"
 84 [-]: CALL      R5 2 1       ; R5(R6)
 85 [-]: JMP       137          ; PC := 137
 86 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 87 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["SUIT_SLOT"]
 88 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: MOVE      R5 R2        ; R5 := R2
 91 [-]: LOADK     R6 K26       ; R6 := "/Lotus/Language/GameTips/Upgrades_AurasAddCapacity"
 92 [-]: CALL      R5 2 1       ; R5(R6)
 93 [-]: JMP       137          ; PC := 137
 94 [-]: GETGLOBAL R5 K4        ; R5 := Lotus_Game
 95 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["MELEE_SLOT"]
 96 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 104
 97 [-]: JMP       104          ; PC := 104
 98 [-]: MOVE      R5 R2        ; R5 := R2
 99 [-]: LOADK     R6 K28       ; R6 := "/Lotus/Language/GameTips/Upgrades_StanceAddCapacity"
100 [-]: CALL      R5 2 1       ; R5(R6)
101 [-]: MOVE      R5 R2        ; R5 := R2
102 [-]: LOADK     R6 K29       ; R6 := "/Lotus/Language/GameTips/Upgrades_Stance"
103 [-]: CALL      R5 2 1       ; R5(R6)
104 [-]: MOVE      R5 R2        ; R5 := R2
105 [-]: LOADK     R6 K30       ; R6 := "/Lotus/Language/GameTips/Upgrades_DifferentDamageDifferentEnemies"
106 [-]: CALL      R5 2 1       ; R5(R6)
107 [-]: MOVE      R5 R2        ; R5 := R2
108 [-]: LOADK     R6 K31       ; R6 := "/Lotus/Language/GameTips/Upgrades_FireDamage"
109 [-]: CALL      R5 2 1       ; R5(R6)
110 [-]: MOVE      R5 R2        ; R5 := R2
111 [-]: LOADK     R6 K32       ; R6 := "/Lotus/Language/GameTips/Upgrades_Electricity"
112 [-]: CALL      R5 2 1       ; R5(R6)
113 [-]: MOVE      R5 R2        ; R5 := R2
114 [-]: LOADK     R6 K33       ; R6 := "/Lotus/Language/GameTips/Upgrades_ColdDamage"
115 [-]: CALL      R5 2 1       ; R5(R6)
116 [-]: MOVE      R5 R2        ; R5 := R2
117 [-]: LOADK     R6 K34       ; R6 := "/Lotus/Language/GameTips/Upgrades_oxinDamage"
118 [-]: CALL      R5 2 1       ; R5(R6)
119 [-]: MOVE      R5 R2        ; R5 := R2
120 [-]: LOADK     R6 K35       ; R6 := "/Lotus/Language/GameTips/Upgrades_BlastCombination"
121 [-]: CALL      R5 2 1       ; R5(R6)
122 [-]: MOVE      R5 R2        ; R5 := R2
123 [-]: LOADK     R6 K36       ; R6 := "/Lotus/Language/GameTips/Upgrades_RadiationCombination"
124 [-]: CALL      R5 2 1       ; R5(R6)
125 [-]: MOVE      R5 R2        ; R5 := R2
126 [-]: LOADK     R6 K37       ; R6 := "/Lotus/Language/GameTips/Upgrades_GasCombination"
127 [-]: CALL      R5 2 1       ; R5(R6)
128 [-]: MOVE      R5 R2        ; R5 := R2
129 [-]: LOADK     R6 K38       ; R6 := "/Lotus/Language/GameTips/Upgrades_MagneticCombination"
130 [-]: CALL      R5 2 1       ; R5(R6)
131 [-]: MOVE      R5 R2        ; R5 := R2
132 [-]: LOADK     R6 K39       ; R6 := "/Lotus/Language/GameTips/Upgrades_ViralCombination"
133 [-]: CALL      R5 2 1       ; R5(R6)
134 [-]: MOVE      R5 R2        ; R5 := R2
135 [-]: LOADK     R6 K40       ; R6 := "/Lotus/Language/GameTips/Upgrades_CorrosiveCombination"
136 [-]: CALL      R5 2 1       ; R5(R6)
137 [-]: GETGLOBAL R5 K41       ; R5 := table
138 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["0xE6450C9D"]
139 [-]: MOVE      R6 R0        ; R6 := R0
140 [-]: NEWTABLE  R7 0 3       ; R7 := {}
141 [-]: GETGLOBAL R8 K44       ; R8 := mMovie
142 [-]: SELF      R8 R8 K45    ; R9 := R8; R8 := R8["0x5DB0BD4"]
143 [-]: LOADK     R10 K46      ; R10 := "<WARNING>"
144 [-]: MOVE      R11 R1       ; R11 := R1
145 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
146 [-]: SETTABLE  R7 K43 R8    ; R7["Label"] := R8
147 [-]: SETTABLE  R7 K47 R1    ; R7["Tips"] := R1
148 [-]: SETTABLE  R7 K48 K49   ; R7["Padding"] := -10
149 [-]: CALL      R5 3 1       ; R5(R6,R7)
150 [-]: RETURN    R0 1         ; return 


; Function #138.1:
;
; Name:            
; Defined at line: 4643
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := table
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
  5 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3["0x5DB0BD4"]
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 4697
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x329BDC44
  2 [-]: LOADK     R1 K1        ; R1 := "Lotus.Interface.Components.SearchBox"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["0x46FF1A3C"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  6 [-]: LOADK     R3 K4        ; R3 := "MiddleMenu.SearchBox"
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: MOVE      R1 R0        ; R1 := R0
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETGLOBAL R2 K6        ; R2 := _G
 11 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UIMaterial_Rectangle"]
 12 [-]: SETTABLE  R1 K5 R2     ; R1["mBgMaterial"] := R2
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: CLOSURE   R2 0         ; R2 := closure(Function #139.1)
 15 [-]: GETUPVAL  R0 U1        ; R0 := U1
 16 [-]: SETTABLE  R1 K8 R2     ; R1["OnSearchChanged"] := R2
 17 [-]: GETUPVAL  R1 U0        ; R1 := U0
 18 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x62648036"]
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: RETURN    R0 1         ; return 


; Function #139.1:
;
; Name:            
; Defined at line: 4702
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 18
  3 [-]: JMP       18           ; PC := 18
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mSavedScroll"]
  6 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: SETTABLE  R1 K2 K3     ; R1["mMuteGridOpenSound"] := "0x1"
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6470BAF4"]
 12 [-]: LOADNIL   R3 R3        ; R3 := nil
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: SETTABLE  R1 K2 K5     ; R1["mMuteGridOpenSound"] := "0x0"
 18 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 4712
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["item"]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: MOVE      R3 R3        ; R3 := R3
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: TEST      R3 0         ; if not R3 then PC := 46
 15 [-]: JMP       46           ; PC := 46
 16 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["item"]
 19 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5["0x281E6004"]
 20 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 21 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 22 [-]: TEST      R4 1         ; if R4 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: EQ        0 R0 K3      ; if R0 ~= 1 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["item"]
 28 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x17D2B78C"]
 29 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 30 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["WF_ARCANE_SLOT_0"]
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: TEST      R4 0         ; if not R4 then PC := 44
 33 [-]: JMP       44           ; PC := 44
 34 [-]: EQ        0 R0 K7      ; if R0 ~= 2 then PC := 46
 35 [-]: JMP       46           ; PC := 46
 36 [-]: GETUPVAL  R4 U0        ; R4 := U0
 37 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["item"]
 38 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x17D2B78C"]
 39 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 40 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["WF_ARCANE_SLOT_1"]
 41 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 42 [-]: TEST      R4 1         ; if R4 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: LOADK     R2 K9        ; R2 := "/Lotus/Language/Menu/ArcaneSlot_RequiresAperture"
 45 [-]: JMP       156          ; PC := 156
 46 [-]: TEST      R3 0         ; if not R3 then PC := 85
 47 [-]: JMP       85           ; PC := 85
 48 [-]: GETUPVAL  R4 U0        ; R4 := U0
 49 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["item"]
 50 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4["0x3180ADE8"]
 51 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 52 [-]: TEST      R4 0         ; if not R4 then PC := 85
 53 [-]: JMP       85           ; PC := 85
 54 [-]: GETUPVAL  R4 U0        ; R4 := U0
 55 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["item"]
 56 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xB48D2120"]
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: TEST      R4 1         ; if R4 then PC := 85
 59 [-]: JMP       85           ; PC := 85
 60 [-]: LOADK     R2 K12       ; R2 := "/Lotus/Language/Menu/ArcaneSlot_UngildedZaw"
 61 [-]: LOADK     R4 K13       ; R4 := ""
 62 [-]: GETGLOBAL R5 K14       ; R5 := _T
 63 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["upgradeItemSlot"]
 64 [-]: GETGLOBAL R6 K5        ; R6 := Lotus_Game
 65 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["MELEE_SLOT"]
 66 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: LOADK     R4 K17       ; R4 := "/Lotus/Language/OstronCrafting/Zaw_Singular"
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADK     R4 K18       ; R4 := "/Lotus/Language/SolarisVenus/Kitgun_Singular"
 71 [-]: GETGLOBAL R5 K19       ; R5 := mMovie
 72 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0x5DB0BD4"]
 73 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Language/Menu/ArcaneSlot_UngildedZaw"
 74 [-]: MOVE      R8 R0        ; R8 := R0
 75 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 76 [-]: GETGLOBAL R10 K19      ; R10 := mMovie
 77 [-]: SELF      R10 R10 K20  ; R11 := R10; R10 := R10["0x5DB0BD4"]
 78 [-]: MOVE      R12 R4       ; R12 := R4
 79 [-]: MOVE      R13 R0       ; R13 := R0
 80 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 81 [-]: SETTABLE  R9 K21 R10   ; R9["TYPE"] := R10
 82 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 83 [-]: MOVE      R2 R5        ; R2 := R5
 84 [-]: JMP       156          ; PC := 156
 85 [-]: GETUPVAL  R5 U1        ; R5 := U1
 86 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["HasValidArcane"]
 87 [-]: TEST      R5 1         ; if R5 then PC := 147
 88 [-]: JMP       147          ; PC := 147
 89 [-]: TEST      R1 0         ; if not R1 then PC := 93
 90 [-]: JMP       93           ; PC := 93
 91 [-]: LOADK     R2 K23       ; R2 := "/Lotus/Language/Menu/NoAmps"
 92 [-]: JMP       156          ; PC := 156
 93 [-]: LOADK     R5 K13       ; R5 := ""
 94 [-]: TEST      R3 0         ; if not R3 then PC := 134
 95 [-]: JMP       134          ; PC := 134
 96 [-]: GETUPVAL  R6 U0        ; R6 := U0
 97 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["item"]
 98 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6["0x3180ADE8"]
 99 [-]: CALL      R6 2 2       ; R6 := R6(R7)
100 [-]: TEST      R6 1         ; if R6 then PC := 134
101 [-]: JMP       134          ; PC := 134
102 [-]: GETGLOBAL R6 K14       ; R6 := _T
103 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
104 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
105 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["SUIT_SLOT"]
106 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: LOADK     R5 K25       ; R5 := "NoAmpSuit"
109 [-]: JMP       143          ; PC := 143
110 [-]: GETGLOBAL R6 K14       ; R6 := _T
111 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
112 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
113 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["MELEE_SLOT"]
114 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 118
115 [-]: JMP       118          ; PC := 118
116 [-]: LOADK     R5 K26       ; R5 := "NoMeleeArcane"
117 [-]: JMP       143          ; PC := 143
118 [-]: GETGLOBAL R6 K14       ; R6 := _T
119 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
120 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
121 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["LONG_GUN_SLOT"]
122 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 126
123 [-]: JMP       126          ; PC := 126
124 [-]: LOADK     R5 K28       ; R5 := "NoRifleArcane"
125 [-]: JMP       143          ; PC := 143
126 [-]: GETGLOBAL R6 K14       ; R6 := _T
127 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
128 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
129 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["PISTOL_SLOT"]
130 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 143
131 [-]: JMP       143          ; PC := 143
132 [-]: LOADK     R5 K30       ; R5 := "NoPistolArcane"
133 [-]: JMP       143          ; PC := 143
134 [-]: GETGLOBAL R6 K14       ; R6 := _T
135 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["upgradeItemSlot"]
136 [-]: GETGLOBAL R7 K5        ; R7 := Lotus_Game
137 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["MELEE_SLOT"]
138 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 142
139 [-]: JMP       142          ; PC := 142
140 [-]: LOADK     R5 K31       ; R5 := "NoAmpZaw"
141 [-]: JMP       143          ; PC := 143
142 [-]: LOADK     R5 K32       ; R5 := "NoAmpKitgun"
143 [-]: LOADK     R6 K33       ; R6 := "/Lotus/Language/Menu/"
144 [-]: MOVE      R7 R5        ; R7 := R5
145 [-]: CONCAT    R2 R6 R7     ; R2 := R6 .. R7
146 [-]: JMP       156          ; PC := 156
147 [-]: GETUPVAL  R6 U1        ; R6 := U1
148 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["HasArcaneHelmet"]
149 [-]: TEST      R6 0         ; if not R6 then PC := 156
150 [-]: JMP       156          ; PC := 156
151 [-]: EQ        0 R0 K7      ; if R0 ~= 2 then PC := 156
152 [-]: JMP       156          ; PC := 156
153 [-]: TEST      R1 0         ; if not R1 then PC := 156
154 [-]: JMP       156          ; PC := 156
155 [-]: LOADK     R2 K35       ; R2 := "/Lotus/Language/Menu/ArcaneSlot_EquipError_Short"
156 [-]: RETURN    R2 2         ; return R2
157 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 4765
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SETTABLE  R2 K1 R0     ; R2["FocusedSlot"] := R0
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FocusedSlot"]
 11 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SETTABLE  R2 K1 K0     ; R2["FocusedSlot"] := nil
 15 [-]: LOADK     R2 K2        ; R2 := "Installed.ArcaneSlot"
 16 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Arcanes"]
 22 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 23 [-]: GETGLOBAL R4 K5        ; R4 := 0x400E7765
 24 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mItemType"]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: LOADNIL   R5 R5        ; R5 := nil
 27 [-]: LOADK     R6 K7        ; R6 := ""
 28 [-]: GETUPVAL  R7 U1        ; R7 := U1
 29 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0xF81722A2"]
 30 [-]: MOVE      R8 R4        ; R8 := R4
 31 [-]: LOADK     R9 K9        ; R9 := 50
 32 [-]: LOADK     R10 K10      ; R10 := 100
 33 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 34 [-]: TEST      R4 0         ; if not R4 then PC := 61
 35 [-]: JMP       61           ; PC := 61
 36 [-]: GETGLOBAL R8 K11       ; R8 := mMovie
 37 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8["0x4443A5E7"]
 38 [-]: MOVE      R10 R2       ; R10 := R2
 39 [-]: LOADK     R11 K13      ; R11 := ".Image"
 40 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 41 [-]: GETGLOBAL R11 K14      ; R11 := arcaneSlotBg
 42 [-]: LOADNIL   R12 R12      ; R12 := nil
 43 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 44 [-]: GETUPVAL  R8 U1        ; R8 := U1
 45 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["0xF81722A2"]
 46 [-]: MOVE      R9 R1        ; R9 := R1
 47 [-]: GETGLOBAL R10 K15      ; R10 := arcaneHoverIcons
 48 [-]: GETTABLE  R10 R10 K16  ; R10 := R10[1]
 49 [-]: LOADNIL   R11 R11      ; R11 := nil
 50 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 51 [-]: MOVE      R5 R8        ; R5 := R8
 52 [-]: LOADK     R8 K17       ; R8 := "<font color=\"#FFFFFF\"><b>"
 53 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 54 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 55 [-]: LOADK     R11 K19      ; R11 := "/Lotus/Language/Menu/ArcaneManager_EmptySlot"
 56 [-]: MOVE      R12 R0       ; R12 := R0
 57 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 58 [-]: LOADK     R10 K20      ; R10 := "</b></font>"
 59 [-]: CONCAT    R6 R8 R10    ; R6 := R8 .. R9 .. R10
 60 [-]: JMP       113          ; PC := 113
 61 [-]: GETUPVAL  R8 U2        ; R8 := U2
 62 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8["0x62FBC1B8"]
 63 [-]: GETTABLE  R10 R3 K6    ; R10 := R3["mItemType"]
 64 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 65 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 66 [-]: MOVE      R10 R8       ; R10 := R8
 67 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 68 [-]: TEST      R9 1         ; if R9 then PC := 113
 69 [-]: JMP       113          ; PC := 113
 70 [-]: TEST      R1 0         ; if not R1 then PC := 78
 71 [-]: JMP       78           ; PC := 78
 72 [-]: GETTABLE  R9 R3 K22    ; R9 := R3["mInstance"]
 73 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9["0x17B9C4FF"]
 74 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 75 [-]: ADD       R9 R9 K24    ; R9 := R9 + 2
 76 [-]: GETGLOBAL R10 K15      ; R10 := arcaneHoverIcons
 77 [-]: GETTABLE  R5 R10 R9    ; R5 := R10[R9]
 78 [-]: GETGLOBAL R10 K11      ; R10 := mMovie
 79 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10["0x5DB0BD4"]
 80 [-]: SELF      R12 R8 K25   ; R13 := R8; R12 := R8["0x616C74B6"]
 81 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 82 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12["0x5EC7A3D2"]
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: MOVE      R13 R0       ; R13 := R0
 85 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 86 [-]: GETTABLE  R11 R3 K22   ; R11 := R3["mInstance"]
 87 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11["0x6F399EDE"]
 88 [-]: GETTABLE  R13 R3 K28   ; R13 := R3["mUpgradeFingerprint"]
 89 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 90 [-]: LOADK     R12 K17      ; R12 := "<font color=\"#FFFFFF\"><b>"
 91 [-]: GETUPVAL  R13 U3       ; R13 := U3
 92 [-]: GETTABLE  R13 R13 K29  ; R13 := R13["0x77A1FEE9"]
 93 [-]: MOVE      R14 R10      ; R14 := R10
 94 [-]: MOVE      R15 R11      ; R15 := R11
 95 [-]: GETGLOBAL R16 K11      ; R16 := mMovie
 96 [-]: NEWTABLE  R17 0 0      ; R17 := {}
 97 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 98 [-]: LOADK     R14 K20      ; R14 := "</b></font>"
 99 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
100 [-]: GETUPVAL  R12 U4       ; R12 := U4
101 [-]: GETTABLE  R12 R12 K30  ; R12 := R12["0x1B75557F"]
102 [-]: GETGLOBAL R13 K11      ; R13 := mMovie
103 [-]: MOVE      R14 R8       ; R14 := R8
104 [-]: NEWTABLE  R15 0 1      ; R15 := {}
105 [-]: SETTABLE  R15 K31 R3   ; R15["ItemInfo"] := R3
106 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
107 [-]: GETUPVAL  R13 U4       ; R13 := U4
108 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["0x323C4EEF"]
109 [-]: GETGLOBAL R14 K11      ; R14 := mMovie
110 [-]: MOVE      R15 R2       ; R15 := R2
111 [-]: MOVE      R16 R12      ; R16 := R12
112 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
113 [-]: GETUPVAL  R13 U5       ; R13 := U5
114 [-]: MOVE      R14 R0       ; R14 := R0
115 [-]: MOVE      R15 R1       ; R15 := R1
116 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
117 [-]: GETGLOBAL R14 K11      ; R14 := mMovie
118 [-]: SELF      R14 R14 K33  ; R15 := R14; R14 := R14["0x880196A7"]
119 [-]: MOVE      R16 R2       ; R16 := R2
120 [-]: LOADK     R17 K34      ; R17 := "Lock"
121 [-]: LOADK     R18 K35      ; R18 := "_visible"
122 [-]: EQ        0 R13 K0     ; if R13 ~= nil then PC := 125
123 [-]: JMP       125          ; PC := 125
124 [-]: MOVE      R19 R0       ; R19 := R0
125 [-]: MOVE      R19 R1       ; R19 := R1
126 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
127 [-]: EQ        1 R13 K0     ; if R13 == nil then PC := 146
128 [-]: JMP       146          ; PC := 146
129 [-]: GETGLOBAL R14 K11      ; R14 := mMovie
130 [-]: SELF      R14 R14 K18  ; R15 := R14; R14 := R14["0x5DB0BD4"]
131 [-]: LOADK     R16 K36      ; R16 := "/Lotus/Language/Menu/FocusLocked"
132 [-]: MOVE      R17 R0       ; R17 := R0
133 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
134 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
135 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15["0x5DB0BD4"]
136 [-]: MOVE      R17 R13      ; R17 := R13
137 [-]: MOVE      R18 R0       ; R18 := R0
138 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
139 [-]: MOVE      R13 R15      ; R13 := R15
140 [-]: LOADK     R15 K17      ; R15 := "<font color=\"#FFFFFF\"><b>"
141 [-]: MOVE      R16 R14      ; R16 := R14
142 [-]: LOADK     R17 K37      ; R17 := "</b><br>"
143 [-]: MOVE      R18 R13      ; R18 := R13
144 [-]: LOADK     R19 K38      ; R19 := "</font>"
145 [-]: CONCAT    R6 R15 R19   ; R6 := R15 .. R16 .. R17 .. R18 .. R19
146 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
147 [-]: SELF      R15 R15 K33  ; R16 := R15; R15 := R15["0x880196A7"]
148 [-]: MOVE      R17 R2       ; R17 := R2
149 [-]: LOADK     R18 K39      ; R18 := "Bg"
150 [-]: LOADK     R19 K35      ; R19 := "_visible"
151 [-]: GETGLOBAL R20 K5       ; R20 := 0x400E7765
152 [-]: MOVE      R21 R5       ; R21 := R5
153 [-]: CALL      R20 2 2      ; R20 := R20(R21)
154 [-]: MOVE      R20 R20      ; R20 := R20
155 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
156 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
157 [-]: SELF      R15 R15 K40  ; R16 := R15; R15 := R15["0x26581636"]
158 [-]: MOVE      R17 R2       ; R17 := R2
159 [-]: LOADK     R18 K41      ; R18 := ".Bg"
160 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
161 [-]: MOVE      R18 R5       ; R18 := R5
162 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
163 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
164 [-]: SELF      R15 R15 K33  ; R16 := R15; R15 := R15["0x880196A7"]
165 [-]: MOVE      R17 R2       ; R17 := R2
166 [-]: LOADK     R18 K42      ; R18 := "Label"
167 [-]: LOADK     R19 K43      ; R19 := "text"
168 [-]: LOADK     R20 K44      ; R20 := "<p>"
169 [-]: MOVE      R21 R6       ; R21 := R6
170 [-]: LOADK     R22 K45      ; R22 := "</p>"
171 [-]: CONCAT    R20 R20 R22  ; R20 := R20 .. R21 .. R22
172 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
173 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
174 [-]: SELF      R15 R15 K33  ; R16 := R15; R15 := R15["0x880196A7"]
175 [-]: MOVE      R17 R2       ; R17 := R2
176 [-]: LOADK     R18 K42      ; R18 := "Label"
177 [-]: LOADK     R19 K46      ; R19 := "_alpha"
178 [-]: MOVE      R20 R7       ; R20 := R7
179 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
180 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
181 [-]: SELF      R15 R15 K33  ; R16 := R15; R15 := R15["0x880196A7"]
182 [-]: MOVE      R17 R2       ; R17 := R2
183 [-]: LOADK     R18 K42      ; R18 := "Label"
184 [-]: LOADK     R19 K47      ; R19 := "_y"
185 [-]: LOADK     R20 K48      ; R20 := 40
186 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
187 [-]: GETGLOBAL R15 K11      ; R15 := mMovie
188 [-]: SELF      R15 R15 K49  ; R16 := R15; R15 := R15["0x1C19D966"]
189 [-]: MOVE      R17 R2       ; R17 := R2
190 [-]: LOADK     R18 K46      ; R18 := "_alpha"
191 [-]: GETUPVAL  R19 U1       ; R19 := U1
192 [-]: GETTABLE  R19 R19 K8   ; R19 := R19["0xF81722A2"]
193 [-]: GETUPVAL  R20 U0       ; R20 := U0
194 [-]: GETTABLE  R20 R20 K50  ; R20 := R20["HasArcaneHelmet"]
195 [-]: TEST      R20 0        ; if not R20 then PC := 201
196 [-]: JMP       201          ; PC := 201
197 [-]: EQ        1 R0 K24     ; if R0 == 2 then PC := 200
198 [-]: JMP       200          ; PC := 200
199 [-]: MOVE      R20 R0       ; R20 := R0
200 [-]: MOVE      R20 R1       ; R20 := R1
201 [-]: LOADK     R21 K9       ; R21 := 50
202 [-]: LOADK     R22 K10      ; R22 := 100
203 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
204 [-]: CALL      R15 0 1      ; R15(R16,...)
205 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 4820
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x6F2E05FD"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ArsenalState"]
  6 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
  7 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ARSENAL_STATE_PVP"]
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R1 R0        ; R1 := R0
 11 [-]: MOVE      R1 R1        ; R1 := R1
 12 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0["0x177B1956"]
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["info"]
 15 [-]: GETUPVAL  R5 U2        ; R5 := U2
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 18 [-]: GETUPVAL  R3 U3        ; R3 := U3
 19 [-]: GETGLOBAL R4 K1        ; R4 := _T
 20 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["upgradeItemCategory"]
 21 [-]: GETGLOBAL R5 K8        ; R5 := Engine
 22 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["Item_LongGuns"]
 23 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 32
 24 [-]: JMP       32           ; PC := 32
 25 [-]: GETGLOBAL R4 K1        ; R4 := _T
 26 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["upgradeItemCategory"]
 27 [-]: GETGLOBAL R5 K8        ; R5 := Engine
 28 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["Item_Pistols"]
 29 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: GETUPVAL  R5 U4        ; R5 := U4
 34 [-]: SETTABLE  R5 K11 K12   ; R5["SelectedSlot"] := nil
 35 [-]: GETUPVAL  R5 U4        ; R5 := U4
 36 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["Slots"]
 37 [-]: LT        0 K14 R5     ; if 0 >= R5 then PC := 88
 38 [-]: JMP       88           ; PC := 88
 39 [-]: GETGLOBAL R5 K1        ; R5 := _T
 40 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["upgradeItemSlot"]
 41 [-]: GETGLOBAL R6 K3        ; R6 := Lotus_Game
 42 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["SUIT_SLOT"]
 43 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 88
 44 [-]: JMP       88           ; PC := 88
 45 [-]: GETGLOBAL R5 K17       ; R5 := 0x400E7765
 46 [-]: GETUPVAL  R6 U1        ; R6 := U1
 47 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 48 [-]: TEST      R5 1         ; if R5 then PC := 88
 49 [-]: JMP       88           ; PC := 88
 50 [-]: GETGLOBAL R5 K17       ; R5 := 0x400E7765
 51 [-]: GETUPVAL  R6 U1        ; R6 := U1
 52 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["item"]
 53 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 54 [-]: TEST      R5 1         ; if R5 then PC := 88
 55 [-]: JMP       88           ; PC := 88
 56 [-]: GETUPVAL  R5 U1        ; R5 := U1
 57 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["item"]
 58 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5["0xAFA67B2D"]
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: GETGLOBAL R6 K17       ; R6 := 0x400E7765
 61 [-]: MOVE      R7 R5        ; R7 := R5
 62 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 63 [-]: TEST      R6 1         ; if R6 then PC := 88
 64 [-]: JMP       88           ; PC := 88
 65 [-]: SELF      R6 R5 K20    ; R7 := R5; R6 := R5["0x6AAD2DA"]
 66 [-]: GETGLOBAL R8 K3        ; R8 := Lotus_Game
 67 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["Helmet"]
 68 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 69 [-]: GETGLOBAL R7 K17       ; R7 := 0x400E7765
 70 [-]: MOVE      R8 R6        ; R8 := R6
 71 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 72 [-]: TEST      R7 1         ; if R7 then PC := 88
 73 [-]: JMP       88           ; PC := 88
 74 [-]: GETGLOBAL R7 K17       ; R7 := 0x400E7765
 75 [-]: GETTABLE  R8 R6 K22    ; R8 := R6["mInstance"]
 76 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 77 [-]: TEST      R7 1         ; if R7 then PC := 88
 78 [-]: JMP       88           ; PC := 88
 79 [-]: GETUPVAL  R7 U4        ; R7 := U4
 80 [-]: GETTABLE  R8 R6 K22    ; R8 := R6["mInstance"]
 81 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8["0x3061149"]
 82 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 83 [-]: LT        1 K14 R8     ; if 0 < R8 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MOVE      R8 R0        ; R8 := R0
 86 [-]: MOVE      R8 R1        ; R8 := R1
 87 [-]: SETTABLE  R7 K23 R8    ; R7["HasArcaneHelmet"] := R8
 88 [-]: LOADK     R7 K14       ; R7 := 0
 89 [-]: LOADK     R8 K25       ; R8 := 1
 90 [-]: LOADK     R9 K26       ; R9 := 2
 91 [-]: LOADK     R10 K25      ; R10 := 1
 92 [-]: FORPREP   R8 172       ; R8 -= R10; PC := 172
 93 [-]: LOADK     R12 K27      ; R12 := "Installed.ArcaneSlot"
 94 [-]: GETGLOBAL R13 K28      ; R13 := 0x9FAED6BC
 95 [-]: MOVE      R14 R11      ; R14 := R11
 96 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 97 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 98 [-]: GETUPVAL  R13 U4       ; R13 := U4
 99 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["Slots"]
100 [-]: LE        1 R11 R13    ; if R11 <= R13 then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: MOVE      R13 R0       ; R13 := R0
103 [-]: MOVE      R13 R1       ; R13 := R1
104 [-]: GETGLOBAL R14 K29      ; R14 := mMovie
105 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0x1C19D966"]
106 [-]: MOVE      R16 R12      ; R16 := R12
107 [-]: LOADK     R17 K31      ; R17 := "_visible"
108 [-]: MOVE      R18 R13      ; R18 := R13
109 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
110 [-]: TEST      R13 0        ; if not R13 then PC := 172
111 [-]: JMP       172          ; PC := 172
112 [-]: GETGLOBAL R14 K29      ; R14 := mMovie
113 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0x1C19D966"]
114 [-]: MOVE      R16 R12      ; R16 := R12
115 [-]: LOADK     R17 K32      ; R17 := "Id"
116 [-]: MOVE      R18 R11      ; R18 := R11
117 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
118 [-]: TEST      R4 0         ; if not R4 then PC := 134
119 [-]: JMP       134          ; PC := 134
120 [-]: GETGLOBAL R14 K29      ; R14 := mMovie
121 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0x1C19D966"]
122 [-]: MOVE      R16 R12      ; R16 := R12
123 [-]: LOADK     R17 K33      ; R17 := "_x"
124 [-]: LOADK     R18 K34      ; R18 := 135
125 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
126 [-]: GETGLOBAL R14 K29      ; R14 := mMovie
127 [-]: SELF      R14 R14 K30  ; R15 := R14; R14 := R14["0x1C19D966"]
128 [-]: MOVE      R16 R12      ; R16 := R12
129 [-]: LOADK     R17 K35      ; R17 := "_y"
130 [-]: SUB       R18 R11 K25  ; R18 := R11 - 1
131 [-]: MUL       R18 R18 K36  ; R18 := R18 * 200
132 [-]: ADD       R18 K37 R18  ; R18 := -300 + R18
133 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
134 [-]: GETGLOBAL R14 K3       ; R14 := Lotus_Game
135 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["0xA9D5605B"]
136 [-]: CALL      R14 1 2      ; R14 := R14()
137 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
138 [-]: MOVE      R16 R2       ; R16 := R2
139 [-]: CALL      R15 2 2      ; R15 := R15(R16)
140 [-]: TEST      R15 1        ; if R15 then PC := 169
141 [-]: JMP       169          ; PC := 169
142 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
143 [-]: ADD       R16 R3 R11   ; R16 := R3 + R11
144 [-]: GETTABLE  R16 R2 R16   ; R16 := R2[R16]
145 [-]: CALL      R15 2 2      ; R15 := R15(R16)
146 [-]: TEST      R15 1        ; if R15 then PC := 169
147 [-]: JMP       169          ; PC := 169
148 [-]: ADD       R15 R3 R11   ; R15 := R3 + R11
149 [-]: GETTABLE  R15 R2 R15   ; R15 := R2[R15]
150 [-]: GETTABLE  R16 R15 K39  ; R16 := R15["mItemType"]
151 [-]: SETTABLE  R14 K39 R16  ; R14["mItemType"] := R16
152 [-]: GETGLOBAL R16 K41      ; R16 := 0x3DD9379B
153 [-]: GETTABLE  R17 R15 K40  ; R17 := R15["mItemId"]
154 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["mId"]
155 [-]: CALL      R16 2 2      ; R16 := R16(R17)
156 [-]: SETTABLE  R14 K40 R16  ; R14["mItemId"] := R16
157 [-]: GETTABLE  R16 R15 K43  ; R16 := R15["mUpgradeFingerprint"]
158 [-]: SETTABLE  R14 K43 R16  ; R14["mUpgradeFingerprint"] := R16
159 [-]: GETGLOBAL R16 K17      ; R16 := 0x400E7765
160 [-]: GETTABLE  R17 R14 K39  ; R17 := R14["mItemType"]
161 [-]: CALL      R16 2 2      ; R16 := R16(R17)
162 [-]: TEST      R16 0        ; if not R16 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETTABLE  R16 R14 K40  ; R16 := R14["mItemId"]
165 [-]: GETTABLE  R16 R16 K42  ; R16 := R16["mId"]
166 [-]: EQ        1 R16 K44    ; if R16 == "" then PC := 169
167 [-]: JMP       169          ; PC := 169
168 [-]: ADD       R7 R7 K25    ; R7 := R7 + 1
169 [-]: GETUPVAL  R16 U4       ; R16 := U4
170 [-]: GETTABLE  R16 R16 K45  ; R16 := R16["Arcanes"]
171 [-]: SETTABLE  R16 R11 R14  ; R16[R11] := R14
172 [-]: FORLOOP   R8 93        ; R8 += R10; if R8 <= R9 then begin PC := 93; R11 := R8 end
173 [-]: LOADK     R16 K25      ; R16 := 1
174 [-]: GETUPVAL  R17 U4       ; R17 := U4
175 [-]: GETTABLE  R17 R17 K13  ; R17 := R17["Slots"]
176 [-]: LOADK     R18 K25      ; R18 := 1
177 [-]: FORPREP   R16 182      ; R16 -= R18; PC := 182
178 [-]: GETUPVAL  R20 U5       ; R20 := U5
179 [-]: MOVE      R21 R19      ; R21 := R19
180 [-]: MOVE      R22 R0       ; R22 := R0
181 [-]: CALL      R20 3 1      ; R20(R21,R22)
182 [-]: FORLOOP   R16 178      ; R16 += R18; if R16 <= R17 then begin PC := 178; R19 := R16 end
183 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 4875
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x930EC5CF"]
  3 [-]: LOADK     R1 K1        ; R1 := "Arsenal"
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0xDE4E4AF5"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x96ACBA91"]
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K5        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MenuSuitAvatar"]
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 70
 22 [-]: JMP       70           ; PC := 70
 23 [-]: GETGLOBAL R2 K7        ; R2 := gRegion
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x90391273"]
 25 [-]: GETUPVAL  R4 U1        ; R4 := U1
 26 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 27 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
 28 [-]: MOVE      R4 R2        ; R4 := R2
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 1         ; if R3 then PC := 70
 31 [-]: JMP       70           ; PC := 70
 32 [-]: GETGLOBAL R3 K5        ; R3 := _T
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["suitTable"]
 34 [-]: GETUPVAL  R4 U2        ; R4 := U2
 35 [-]: SETTABLE  R3 K10 R4    ; R3["desiredRot"] := R4
 36 [-]: GETGLOBAL R3 K5        ; R3 := _T
 37 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["suitTable"]
 38 [-]: GETGLOBAL R4 K5        ; R4 := _T
 39 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["suitTable"]
 40 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["desiredRot"]
 41 [-]: SETTABLE  R3 K11 R4    ; R3["lerpRot"] := R4
 42 [-]: GETGLOBAL R3 K5        ; R3 := _T
 43 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["suitTable"]
 44 [-]: GETGLOBAL R4 K13       ; R4 := 0x1E4F6281
 45 [-]: CALL      R4 1 2       ; R4 := R4()
 46 [-]: SETTABLE  R3 K12 R4    ; R3["lerpHead"] := R4
 47 [-]: SELF      R3 R1 K14    ; R4 := R1; R3 := R1["0xDBEF0FB6"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K5        ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["suitTable"]
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["positions"]
 52 [-]: EQ        0 R4 K16     ; if R4 ~= nil then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETGLOBAL R4 K5        ; R4 := _T
 55 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["suitTable"]
 56 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 57 [-]: SETTABLE  R4 K15 R5    ; R4["positions"] := R5
 58 [-]: GETGLOBAL R4 K5        ; R4 := _T
 59 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["suitTable"]
 60 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["positions"]
 61 [-]: SELF      R5 R2 K17    ; R6 := R2; R5 := R2["0x6DA72501"]
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: SETTABLE  R4 R3 R5     ; R4[R3] := R5
 64 [-]: GETUPVAL  R4 U3        ; R4 := U3
 65 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["0x535B496D"]
 66 [-]: GETGLOBAL R5 K19       ; R5 := mMovie
 67 [-]: MOVE      R6 R1        ; R6 := R1
 68 [-]: MOVE      R7 R0        ; R7 := R0
 69 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 70 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 4902
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U2        ; R0 := U2
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["info"]
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x90FB7069"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: GETUPVAL  R0 U3        ; R0 := U3
  9 [-]: CALL      R0 1 2       ; R0 := R0()
 10 [-]: TEST      R0 0         ; if not R0 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: LEN       R0 R0        ; R0 := # R0
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R0 K2        ; R0 := table
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xE6450C9D"]
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: LOADK     R2 K4        ; R2 := 0
 21 [-]: CALL      R0 3 1       ; R0(R1,R2)
 22 [-]: GETUPVAL  R0 U2        ; R0 := U2
 23 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["info"]
 24 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mPolarized"]
 25 [-]: MOVE      R0 R5        ; R0 := R5
 26 [-]: GETGLOBAL R0 K6        ; R0 := gGameConfig
 27 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0x6BA57B8E"]
 28 [-]: GETUPVAL  R2 U2        ; R2 := U2
 29 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["info"]
 30 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mItemType"]
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["info"]
 33 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mPolarized"]
 34 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 35 [-]: MOVE      R0 R6        ; R0 := R6
 36 [-]: GETGLOBAL R0 K9        ; R0 := math
 37 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x65F9712A"]
 38 [-]: GETUPVAL  R1 U6        ; R1 := U6
 39 [-]: GETGLOBAL R2 K6        ; R2 := gGameConfig
 40 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x9E8E66BA"]
 41 [-]: GETUPVAL  R4 U2        ; R4 := U2
 42 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["info"]
 43 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mXP"]
 44 [-]: GETUPVAL  R5 U2        ; R5 := U2
 45 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["info"]
 46 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mItemType"]
 47 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 48 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 49 [-]: MOVE      R0 R7        ; R0 := R7
 50 [-]: GETGLOBAL R0 K9        ; R0 := math
 51 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["0x8B011038"]
 52 [-]: GETUPVAL  R1 U7        ; R1 := U7
 53 [-]: GETUPVAL  R2 U9        ; R2 := U9
 54 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x3155222A"]
 55 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 56 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 57 [-]: MOVE      R0 R8        ; R0 := R8
 58 [-]: GETUPVAL  R0 U2        ; R0 := U2
 59 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["info"]
 60 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0["0x17D2B78C"]
 61 [-]: GETGLOBAL R2 K16       ; R2 := Lotus_Game
 62 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["WF_ENERGY_UNLOCKED"]
 63 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 64 [-]: TEST      R0 0         ; if not R0 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETUPVAL  R0 U8        ; R0 := U8
 67 [-]: MUL       R0 R0 K18    ; R0 := R0 * 2
 68 [-]: MOVE      R0 R8        ; R0 := R8
 69 [-]: GETUPVAL  R0 U10       ; R0 := U10
 70 [-]: SELF      R0 R0 K19    ; R1 := R0; R0 := R0["0x9D2060CB"]
 71 [-]: CLOSURE   R2 0         ; R2 := closure(Function #144.1)
 72 [-]: GETUPVAL  R0 U1        ; R0 := U1
 73 [-]: GETUPVAL  R0 U10       ; R0 := U10
 74 [-]: CALL      R0 3 1       ; R0(R1,R2)
 75 [-]: GETUPVAL  R0 U11       ; R0 := U11
 76 [-]: CALL      R0 1 1       ; R0()
 77 [-]: GETUPVAL  R0 U12       ; R0 := U12
 78 [-]: MOVE      R1 R1        ; R1 := R1
 79 [-]: CALL      R0 2 1       ; R0(R1)
 80 [-]: RETURN    R0 1         ; return 


; Function #144.1:
;
; Name:            
; Defined at line: 4917
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Id"]
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: SETTABLE  R0 K0 R1     ; R0["mPolarity"] := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 4926
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x6F2E05FD"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x640AA7E"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x85D4CA1C"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: NEWTABLE  R3 2 0       ; R3 := {}
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
 18 [-]: LOADK     R4 K4        ; R4 := 1
 19 [-]: LEN       R5 R3        ; R5 := # R3
 20 [-]: LOADK     R6 K4        ; R6 := 1
 21 [-]: FORPREP   R4 50        ; R4 -= R6; PC := 50
 22 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 23 [-]: GETGLOBAL R9 K5        ; R9 := 0xECFDD17
 24 [-]: MOVE      R10 R8       ; R10 := R8
 25 [-]: CALL      R9 2 4       ; R9,R10,R11 := R9(R10)
 26 [-]: JMP       48           ; PC := 48
 27 [-]: GETTABLE  R14 R13 K6   ; R14 := R13["mItemType"]
 28 [-]: SELF      R14 R14 K7   ; R15 := R14; R14 := R14["0x8B598ED4"]
 29 [-]: GETUPVAL  R16 U1       ; R16 := U1
 30 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 31 [-]: TEST      R14 0        ; if not R14 then PC := 48
 32 [-]: JMP       48           ; PC := 48
 33 [-]: GETGLOBAL R14 K1       ; R14 := 0x400E7765
 34 [-]: GETTABLE  R15 R13 K8   ; R15 := R13["mInstance"]
 35 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 36 [-]: TEST      R14 1        ; if R14 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETTABLE  R14 R13 K8   ; R14 := R13["mInstance"]
 39 [-]: SELF      R14 R14 K9   ; R15 := R14; R14 := R14["0x921A9EBC"]
 40 [-]: GETTABLE  R16 R13 K10  ; R16 := R13["mUpgradeFingerprint"]
 41 [-]: GETUPVAL  R17 U2       ; R17 := U2
 42 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["item"]
 43 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 44 [-]: TEST      R14 0        ; if not R14 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: MOVE      R14 R1       ; R14 := R1
 47 [-]: RETURN    R14 2        ; return R14
 48 [-]: TFORLOOP  R9 2         ; R12,R13 :=  R9(R10,R11); if R12 ~= nil then begin PC = 27; R11 := R12 end
 49 [-]: JMP       27           ; PC := 27
 50 [-]: FORLOOP   R4 22        ; R4 += R6; if R4 <= R5 then begin PC := 22; R7 := R4 end
 51 [-]: MOVE      R14 R0       ; R14 := R0
 52 [-]: RETURN    R14 2        ; return R14
 53 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 4947
; #Upvalues:       40
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalState"]
  3 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
  4 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ARSENAL_STATE_VEHICLES"]
  5 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["upgradeItemSlot"]
  9 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["upgradeItemSlot"]
 13 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["HEAVY_GUN_SLOT"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R0 R0        ; R0 := R0
 18 [-]: MOVE      R0 R1        ; R0 := R1
 19 [-]: MOVE      R0 R0        ; R0 := R0
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: TEST      R0 1         ; if R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K0        ; R0 := _T
 24 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalState"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := Lotus_Game
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ARSENAL_STATE_VEHICLES"]
 27 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R0 R0        ; R0 := R0
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: GETUPVAL  R1 U2        ; R1 := U2
 32 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0xF81722A2"]
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: LOADK     R3 K8        ; R3 := "ArsenalSpace"
 35 [-]: LOADK     R4 K9        ; R4 := "ArsenalDevice"
 36 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 37 [-]: MOVE      R1 R1        ; R1 := R1
 38 [-]: LOADNIL   R1 R1        ; R1 := nil
 39 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 40 [-]: GETGLOBAL R3 K0        ; R3 := _T
 41 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["MenuSuitAvatar"]
 42 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 43 [-]: TEST      R2 1         ; if R2 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETGLOBAL R2 K0        ; R2 := _T
 46 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["MenuSuitAvatar"]
 47 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x6DA72501"]
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: MOVE      R1 R2        ; R1 := R2
 50 [-]: GETUPVAL  R2 U2        ; R2 := U2
 51 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["0x1BDE0F53"]
 52 [-]: LOADK     R3 K14       ; R3 := "Arsenal"
 53 [-]: MOVE      R4 R1        ; R4 := R1
 54 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 55 [-]: GETGLOBAL R3 K10       ; R3 := 0x400E7765
 56 [-]: MOVE      R4 R2        ; R4 := R2
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: TEST      R3 1         ; if R3 then PC := 72
 59 [-]: JMP       72           ; PC := 72
 60 [-]: SELF      R3 R2 K15    ; R4 := R2; R3 := R2["0xDE4E4AF5"]
 61 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 62 [-]: TEST      R3 0         ; if not R3 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: GETGLOBAL R3 K10       ; R3 := 0x400E7765
 65 [-]: GETGLOBAL R4 K16       ; R4 := arsenalMovie
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 1         ; if R3 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: SELF      R3 R2 K17    ; R4 := R2; R3 := R2["0xEC336D7"]
 70 [-]: GETGLOBAL R5 K16       ; R5 := arsenalMovie
 71 [-]: CALL      R3 3 1       ; R3(R4,R5)
 72 [-]: GETGLOBAL R3 K0        ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["ArsenalState"]
 74 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
 75 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["ARSENAL_STATE_PVP"]
 76 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: MOVE      R3 R0        ; R3 := R0
 79 [-]: MOVE      R3 R1        ; R3 := R1
 80 [-]: GETGLOBAL R4 K19       ; R4 := gGameRules
 81 [-]: TEST      R4 0         ; if not R4 then PC := 87
 82 [-]: JMP       87           ; PC := 87
 83 [-]: GETGLOBAL R4 K19       ; R4 := gGameRules
 84 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0x18CB0E08"]
 85 [-]: MOVE      R6 R3        ; R6 := R3
 86 [-]: CALL      R4 3 1       ; R4(R5,R6)
 87 [-]: GETGLOBAL R4 K21       ; R4 := Engine
 88 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["0xE35E176B"]
 89 [-]: CALL      R4 1 2       ; R4 := R4()
 90 [-]: MOVE      R4 R3        ; R4 := R3
 91 [-]: GETGLOBAL R4 K23       ; R4 := mMovie
 92 [-]: SELF      R4 R4 K24    ; R5 := R4; R4 := R4["0x6B7B470B"]
 93 [-]: LOADK     R6 K25       ; R6 := "MiddleMenu"
 94 [-]: LOADK     R7 K26       ; R7 := "_y"
 95 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 96 [-]: MOVE      R4 R4        ; R4 := R4
 97 [-]: GETGLOBAL R4 K23       ; R4 := mMovie
 98 [-]: SELF      R4 R4 K27    ; R5 := R4; R4 := R4["0x1C19D966"]
 99 [-]: LOADK     R6 K28       ; R6 := "AbilityList"
100 [-]: LOADK     R7 K29       ; R7 := "_visible"
101 [-]: MOVE      R8 R0        ; R8 := R0
102 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
103 [-]: GETGLOBAL R4 K0        ; R4 := _T
104 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["mSentinelMode"]
105 [-]: MOVE      R4 R5        ; R4 := R5
106 [-]: GETGLOBAL R4 K0        ; R4 := _T
107 [-]: GETTABLE  R4 R4 K31    ; R4 := R4["mSpecialSuitMode"]
108 [-]: MOVE      R4 R6        ; R4 := R6
109 [-]: GETGLOBAL R4 K0        ; R4 := _T
110 [-]: SETTABLE  R4 K30 K32   ; R4["mSentinelMode"] := "0x0"
111 [-]: GETGLOBAL R4 K0        ; R4 := _T
112 [-]: SETTABLE  R4 K31 K5    ; R4["mSpecialSuitMode"] := nil
113 [-]: GETUPVAL  R4 U6        ; R4 := U6
114 [-]: TEST      R4 0         ; if not R4 then PC := 132
115 [-]: JMP       132          ; PC := 132
116 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
117 [-]: GETGLOBAL R5 K0        ; R5 := _T
118 [-]: GETTABLE  R5 R5 K33    ; R5 := R5["SpecialSuitAvatar"]
119 [-]: CALL      R4 2 2       ; R4 := R4(R5)
120 [-]: TEST      R4 1         ; if R4 then PC := 132
121 [-]: JMP       132          ; PC := 132
122 [-]: GETGLOBAL R4 K0        ; R4 := _T
123 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["MenuSuitAvatar"]
124 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0xE4AB095E"]
125 [-]: MOVE      R6 R1        ; R6 := R1
126 [-]: CALL      R4 3 1       ; R4(R5,R6)
127 [-]: GETGLOBAL R4 K0        ; R4 := _T
128 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["SpecialSuitAvatar"]
129 [-]: SELF      R4 R4 K34    ; R5 := R4; R4 := R4["0xE4AB095E"]
130 [-]: MOVE      R6 R0        ; R6 := R0
131 [-]: CALL      R4 3 1       ; R4(R5,R6)
132 [-]: GETGLOBAL R4 K0        ; R4 := _T
133 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["ArsenalState"]
134 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
135 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["ARSENAL_STATE_VEHICLES"]
136 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 166
137 [-]: JMP       166          ; PC := 166
138 [-]: GETGLOBAL R4 K0        ; R4 := _T
139 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["OpenedFromModScreen"]
140 [-]: EQ        0 R4 K36     ; if R4 ~= "0x1" then PC := 166
141 [-]: JMP       166          ; PC := 166
142 [-]: GETUPVAL  R4 U7        ; R4 := U7
143 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["0x84DCC428"]
144 [-]: CALL      R4 1 2       ; R4 := R4()
145 [-]: GETUPVAL  R5 U7        ; R5 := U7
146 [-]: GETTABLE  R5 R5 K38    ; R5 := R5["UI_MODE_IN_SPACE_SHIP"]
147 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 166
148 [-]: JMP       166          ; PC := 166
149 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
150 [-]: MOVE      R5 R2        ; R5 := R2
151 [-]: CALL      R4 2 2       ; R4 := R4(R5)
152 [-]: TEST      R4 1         ; if R4 then PC := 166
153 [-]: JMP       166          ; PC := 166
154 [-]: SELF      R4 R2 K12    ; R5 := R2; R4 := R2["0x6DA72501"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: GETTABLE  R5 R4 K39    ; R5 := R4["y"]
157 [-]: SUB       R5 R5 K40    ; R5 := R5 - 0.6700000166893
158 [-]: SETTABLE  R4 K39 R5    ; R4["y"] := R5
159 [-]: GETGLOBAL R5 K0        ; R5 := _T
160 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["MenuSuitAvatar"]
161 [-]: SELF      R5 R5 K41    ; R6 := R5; R5 := R5["0x39D7F449"]
162 [-]: MOVE      R7 R4        ; R7 := R4
163 [-]: GETGLOBAL R8 K42       ; R8 := 0x1E4F6281
164 [-]: CALL      R8 1 0       ; R8,... := R8()
165 [-]: CALL      R5 0 1       ; R5(R6,...)
166 [-]: GETUPVAL  R5 U2        ; R5 := U2
167 [-]: GETTABLE  R5 R5 K43    ; R5 := R5["0x930EC5CF"]
168 [-]: LOADK     R6 K44       ; R6 := "RampMover"
169 [-]: CALL      R5 2 2       ; R5 := R5(R6)
170 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
171 [-]: MOVE      R7 R5        ; R7 := R5
172 [-]: CALL      R6 2 2       ; R6 := R6(R7)
173 [-]: TEST      R6 1         ; if R6 then PC := 181
174 [-]: JMP       181          ; PC := 181
175 [-]: SELF      R6 R5 K45    ; R7 := R5; R6 := R5["0x8D5886B7"]
176 [-]: LOADK     R8 K46       ; R8 := "StartBackward"
177 [-]: CALL      R6 3 1       ; R6(R7,R8)
178 [-]: SELF      R6 R5 K47    ; R7 := R5; R6 := R5["0x9D43FB1C"]
179 [-]: LOADK     R8 K48       ; R8 := 0.10000000149012
180 [-]: CALL      R6 3 1       ; R6(R7,R8)
181 [-]: GETUPVAL  R6 U8        ; R6 := U8
182 [-]: MOVE      R7 R0        ; R7 := R0
183 [-]: CALL      R6 2 1       ; R6(R7)
184 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
185 [-]: GETGLOBAL R7 K0        ; R7 := _T
186 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["KDriveAvatar"]
187 [-]: CALL      R6 2 2       ; R6 := R6(R7)
188 [-]: TEST      R6 1         ; if R6 then PC := 202
189 [-]: JMP       202          ; PC := 202
190 [-]: GETGLOBAL R6 K0        ; R6 := _T
191 [-]: GETTABLE  R6 R6 K49    ; R6 := R6["KDriveAvatar"]
192 [-]: SELF      R6 R6 K50    ; R7 := R6; R6 := R6["0x24AE62CF"]
193 [-]: GETGLOBAL R8 K0        ; R8 := _T
194 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["ArsenalState"]
195 [-]: GETGLOBAL R9 K2        ; R9 := Lotus_Game
196 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["ARSENAL_STATE_VEHICLES"]
197 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 200
198 [-]: JMP       200          ; PC := 200
199 [-]: MOVE      R8 R0        ; R8 := R0
200 [-]: MOVE      R8 R1        ; R8 := R1
201 [-]: CALL      R6 3 1       ; R6(R7,R8)
202 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
203 [-]: GETGLOBAL R7 K0        ; R7 := _T
204 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["MenuSuitAvatar"]
205 [-]: CALL      R6 2 2       ; R6 := R6(R7)
206 [-]: TEST      R6 1         ; if R6 then PC := 248
207 [-]: JMP       248          ; PC := 248
208 [-]: GETGLOBAL R6 K0        ; R6 := _T
209 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MenuSuitAvatar"]
210 [-]: SELF      R6 R6 K50    ; R7 := R6; R6 := R6["0x24AE62CF"]
211 [-]: GETGLOBAL R8 K0        ; R8 := _T
212 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["ArsenalState"]
213 [-]: GETGLOBAL R9 K2        ; R9 := Lotus_Game
214 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["ARSENAL_STATE_VEHICLES"]
215 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 218
216 [-]: JMP       218          ; PC := 218
217 [-]: MOVE      R8 R0        ; R8 := R0
218 [-]: MOVE      R8 R1        ; R8 := R1
219 [-]: CALL      R6 3 1       ; R6(R7,R8)
220 [-]: GETGLOBAL R6 K10       ; R6 := 0x400E7765
221 [-]: GETGLOBAL R7 K51       ; R7 := avatarAnimation
222 [-]: CALL      R6 2 2       ; R6 := R6(R7)
223 [-]: TEST      R6 1         ; if R6 then PC := 241
224 [-]: JMP       241          ; PC := 241
225 [-]: GETGLOBAL R6 K0        ; R6 := _T
226 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["ArsenalState"]
227 [-]: GETGLOBAL R7 K2        ; R7 := Lotus_Game
228 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["ARSENAL_STATE_VEHICLES"]
229 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 241
230 [-]: JMP       241          ; PC := 241
231 [-]: GETGLOBAL R6 K0        ; R6 := _T
232 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MenuSuitAvatar"]
233 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x868E646A"]
234 [-]: GETGLOBAL R8 K51       ; R8 := avatarAnimation
235 [-]: MOVE      R9 R0        ; R9 := R0
236 [-]: GETGLOBAL R10 K21      ; R10 := Engine
237 [-]: GETTABLE  R10 R10 K53  ; R10 := R10["ATMM_PHYSICS_DRIVEN"]
238 [-]: GETGLOBAL R11 K21      ; R11 := Engine
239 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["PRT_LOOP"]
240 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
241 [-]: GETGLOBAL R6 K0        ; R6 := _T
242 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["MenuSuitAvatar"]
243 [-]: SELF      R6 R6 K55    ; R7 := R6; R6 := R6["0x8DB5D01F"]
244 [-]: CALL      R6 2 2       ; R6 := R6(R7)
245 [-]: SELF      R6 R6 K56    ; R7 := R6; R6 := R6["0x59E4B5CD"]
246 [-]: MOVE      R8 R0        ; R8 := R0
247 [-]: CALL      R6 3 1       ; R6(R7,R8)
248 [-]: GETGLOBAL R6 K57       ; R6 := 0x329BDC44
249 [-]: LOADK     R7 K58       ; R7 := "Lotus.Interface.Libs.TimerMgr"
250 [-]: CALL      R6 2 2       ; R6 := R6(R7)
251 [-]: GETTABLE  R7 R6 K59    ; R7 := R6["0xC2A7FAC0"]
252 [-]: CALL      R7 1 2       ; R7 := R7()
253 [-]: MOVE      R7 R9        ; R7 := R9
254 [-]: GETUPVAL  R7 U2        ; R7 := U2
255 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["0x1BDE0F53"]
256 [-]: GETUPVAL  R8 U1        ; R8 := U1
257 [-]: MOVE      R9 R1        ; R9 := R1
258 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
259 [-]: GETGLOBAL R8 K10       ; R8 := 0x400E7765
260 [-]: MOVE      R9 R7        ; R9 := R7
261 [-]: CALL      R8 2 2       ; R8 := R8(R9)
262 [-]: TEST      R8 1         ; if R8 then PC := 304
263 [-]: JMP       304          ; PC := 304
264 [-]: GETUPVAL  R8 U2        ; R8 := U2
265 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xF81722A2"]
266 [-]: MOVE      R9 R0        ; R9 := R0
267 [-]: GETGLOBAL R10 K60      ; R10 := 0x221C9700
268 [-]: LOADK     R11 K61      ; R11 := -0.019999999552965
269 [-]: LOADK     R12 K62      ; R12 := 5.0700001716614
270 [-]: LOADK     R13 K63      ; R13 := -0.5
271 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
272 [-]: GETGLOBAL R11 K60      ; R11 := 0x221C9700
273 [-]: LOADK     R12 K64      ; R12 := 1.6000000238419
274 [-]: LOADK     R13 K65      ; R13 := 2.7999999523163
275 [-]: LOADK     R14 K66      ; R14 := 0.5
276 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
277 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
278 [-]: GETUPVAL  R9 U2        ; R9 := U2
279 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xF81722A2"]
280 [-]: MOVE      R10 R0       ; R10 := R0
281 [-]: GETGLOBAL R11 K42      ; R11 := 0x1E4F6281
282 [-]: LOADK     R12 K67      ; R12 := 3
283 [-]: LOADK     R13 K68      ; R13 := 0
284 [-]: LOADK     R14 K68      ; R14 := 0
285 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
286 [-]: GETGLOBAL R12 K42      ; R12 := 0x1E4F6281
287 [-]: LOADK     R13 K69      ; R13 := -20
288 [-]: LOADK     R14 K68      ; R14 := 0
289 [-]: LOADK     R15 K68      ; R15 := 0
290 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
291 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
292 [-]: GETGLOBAL R10 K23      ; R10 := mMovie
293 [-]: SELF      R10 R10 K70  ; R11 := R10; R10 := R10["0x619FE9B4"]
294 [-]: MOVE      R12 R7       ; R12 := R7
295 [-]: MOVE      R13 R8       ; R13 := R8
296 [-]: MOVE      R14 R9       ; R14 := R9
297 [-]: GETGLOBAL R15 K60      ; R15 := 0x221C9700
298 [-]: LOADK     R16 K71      ; R16 := 0.60000002384186
299 [-]: LOADK     R17 K71      ; R17 := 0.60000002384186
300 [-]: LOADK     R18 K71      ; R18 := 0.60000002384186
301 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
302 [-]: CALL      R10 0 1      ; R10(R11,...)
303 [-]: JMP       350          ; PC := 350
304 [-]: GETGLOBAL R10 K10      ; R10 := 0x400E7765
305 [-]: GETGLOBAL R11 K0       ; R11 := _T
306 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["MenuSuitAvatar"]
307 [-]: CALL      R10 2 2      ; R10 := R10(R11)
308 [-]: TEST      R10 1        ; if R10 then PC := 350
309 [-]: JMP       350          ; PC := 350
310 [-]: GETUPVAL  R10 U2       ; R10 := U2
311 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["0xF81722A2"]
312 [-]: MOVE      R11 R0       ; R11 := R0
313 [-]: GETGLOBAL R12 K60      ; R12 := 0x221C9700
314 [-]: LOADK     R13 K61      ; R13 := -0.019999999552965
315 [-]: LOADK     R14 K72      ; R14 := 4.5700001716614
316 [-]: LOADK     R15 K63      ; R15 := -0.5
317 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
318 [-]: GETGLOBAL R13 K60      ; R13 := 0x221C9700
319 [-]: LOADK     R14 K73      ; R14 := 1.6499999761581
320 [-]: LOADK     R15 K74      ; R15 := 2.4000000953674
321 [-]: LOADK     R16 K66      ; R16 := 0.5
322 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
323 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
324 [-]: GETUPVAL  R11 U2       ; R11 := U2
325 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0xF81722A2"]
326 [-]: MOVE      R12 R0       ; R12 := R0
327 [-]: GETGLOBAL R13 K42      ; R13 := 0x1E4F6281
328 [-]: LOADK     R14 K67      ; R14 := 3
329 [-]: LOADK     R15 K68      ; R15 := 0
330 [-]: LOADK     R16 K68      ; R16 := 0
331 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
332 [-]: GETGLOBAL R14 K42      ; R14 := 0x1E4F6281
333 [-]: LOADK     R15 K69      ; R15 := -20
334 [-]: LOADK     R16 K68      ; R16 := 0
335 [-]: LOADK     R17 K68      ; R17 := 0
336 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
337 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
338 [-]: GETGLOBAL R12 K23      ; R12 := mMovie
339 [-]: SELF      R12 R12 K70  ; R13 := R12; R12 := R12["0x619FE9B4"]
340 [-]: GETGLOBAL R14 K0       ; R14 := _T
341 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["MenuSuitAvatar"]
342 [-]: MOVE      R15 R10      ; R15 := R10
343 [-]: MOVE      R16 R11      ; R16 := R11
344 [-]: GETGLOBAL R17 K60      ; R17 := 0x221C9700
345 [-]: LOADK     R18 K71      ; R18 := 0.60000002384186
346 [-]: LOADK     R19 K71      ; R19 := 0.60000002384186
347 [-]: LOADK     R20 K71      ; R20 := 0.60000002384186
348 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
349 [-]: CALL      R12 0 1      ; R12(R13,...)
350 [-]: GETUPVAL  R12 U2       ; R12 := U2
351 [-]: GETTABLE  R12 R12 K75  ; R12 := R12["0x25992394"]
352 [-]: GETGLOBAL R13 K76      ; R13 := _G
353 [-]: GETTABLE  R13 R13 K77  ; R13 := R13["UISound_GridOpen"]
354 [-]: CALL      R12 2 1      ; R12(R13)
355 [-]: GETGLOBAL R12 K23      ; R12 := mMovie
356 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12["0x1C19D966"]
357 [-]: LOADK     R14 K78      ; R14 := "Card1"
358 [-]: LOADK     R15 K29      ; R15 := "_visible"
359 [-]: MOVE      R16 R0       ; R16 := R0
360 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
361 [-]: GETGLOBAL R12 K19      ; R12 := gGameRules
362 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
363 [-]: MOVE      R14 R12      ; R14 := R12
364 [-]: CALL      R13 2 2      ; R13 := R13(R14)
365 [-]: TEST      R13 1        ; if R13 then PC := 370
366 [-]: JMP       370          ; PC := 370
367 [-]: SELF      R13 R12 K79  ; R14 := R12; R13 := R12["0x6EF24057"]
368 [-]: MOVE      R15 R1       ; R15 := R1
369 [-]: CALL      R13 3 1      ; R13(R14,R15)
370 [-]: GETGLOBAL R13 K0       ; R13 := _T
371 [-]: SETTABLE  R13 K80 K5   ; R13["gToolTip"] := nil
372 [-]: GETGLOBAL R13 K81      ; R13 := gPlayerProfileMgr
373 [-]: SELF      R13 R13 K82  ; R14 := R13; R13 := R13["0x21EF7B1A"]
374 [-]: LOADK     R15 K68      ; R15 := 0
375 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
376 [-]: MOVE      R13 R10      ; R13 := R10
377 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
378 [-]: GETUPVAL  R14 U10      ; R14 := U10
379 [-]: CALL      R13 2 2      ; R13 := R13(R14)
380 [-]: TEST      R13 0        ; if not R13 then PC := 389
381 [-]: JMP       389          ; PC := 389
382 [-]: GETGLOBAL R13 K83      ; R13 := 0x93B1256B
383 [-]: LOADK     R14 K84      ; R14 := "NULL PLAYER PROFILE WHAT TO DO"
384 [-]: CALL      R13 2 1      ; R13(R14)
385 [-]: GETGLOBAL R13 K0       ; R13 := _T
386 [-]: GETTABLE  R13 R13 K85  ; R13 := R13["0xB92B95FB"]
387 [-]: CALL      R13 1 1      ; R13()
388 [-]: RETURN    R0 1         ; return 
389 [-]: GETUPVAL  R13 U10      ; R13 := U10
390 [-]: SELF      R13 R13 K86  ; R14 := R13; R13 := R13["0x654F1092"]
391 [-]: CALL      R13 2 2      ; R13 := R13(R14)
392 [-]: MOVE      R13 R11      ; R13 := R11
393 [-]: GETGLOBAL R13 K87      ; R13 := 0x12F3CEFA
394 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
395 [-]: GETUPVAL  R15 U11      ; R15 := U11
396 [-]: CALL      R14 2 2      ; R14 := R14(R15)
397 [-]: MOVE      R14 R14      ; R14 := R14
398 [-]: CALL      R13 2 1      ; R13(R14)
399 [-]: GETGLOBAL R13 K57      ; R13 := 0x329BDC44
400 [-]: LOADK     R14 K88      ; R14 := "Lotus.Interface.Components.DiegeticHelper"
401 [-]: CALL      R13 2 2      ; R13 := R13(R14)
402 [-]: GETTABLE  R14 R13 K89  ; R14 := R13["0x4500E6FA"]
403 [-]: GETGLOBAL R15 K23      ; R15 := mMovie
404 [-]: CALL      R14 2 2      ; R14 := R14(R15)
405 [-]: MOVE      R14 R12      ; R14 := R12
406 [-]: GETUPVAL  R14 U12      ; R14 := U12
407 [-]: SETTABLE  R14 K90 K68  ; R14["mMinShiftX"] := 0
408 [-]: GETUPVAL  R14 U12      ; R14 := U12
409 [-]: SETTABLE  R14 K91 K92  ; R14["mMaxShiftX"] := 120
410 [-]: GETGLOBAL R14 K23      ; R14 := mMovie
411 [-]: SELF      R14 R14 K93  ; R15 := R14; R14 := R14["0x6B4C9862"]
412 [-]: MOVE      R16 R1       ; R16 := R1
413 [-]: CALL      R14 3 1      ; R14(R15,R16)
414 [-]: LOADK     R14 K94      ; R14 := 1
415 [-]: MOVE      R14 R13      ; R14 := R13
416 [-]: LOADK     R14 K68      ; R14 := 0
417 [-]: MOVE      R14 R14      ; R14 := R14
418 [-]: LOADK     R14 K95      ; R14 := 30
419 [-]: MOVE      R14 R15      ; R14 := R15
420 [-]: LOADK     R14 K68      ; R14 := 0
421 [-]: MOVE      R14 R16      ; R14 := R16
422 [-]: GETGLOBAL R14 K10      ; R14 := 0x400E7765
423 [-]: GETGLOBAL R15 K0       ; R15 := _T
424 [-]: GETTABLE  R15 R15 K96  ; R15 := R15["upgradeItem"]
425 [-]: CALL      R14 2 2      ; R14 := R14(R15)
426 [-]: TEST      R14 1        ; if R14 then PC := 641
427 [-]: JMP       641          ; PC := 641
428 [-]: GETGLOBAL R14 K0       ; R14 := _T
429 [-]: GETTABLE  R14 R14 K96  ; R14 := R14["upgradeItem"]
430 [-]: MOVE      R14 R17      ; R14 := R17
431 [-]: GETUPVAL  R14 U17      ; R14 := U17
432 [-]: GETGLOBAL R15 K98      ; R15 := 0x33D97CD3
433 [-]: CALL      R15 1 2      ; R15 := R15()
434 [-]: SETTABLE  R14 K97 R15  ; R14["uid"] := R15
435 [-]: GETUPVAL  R14 U17      ; R14 := U17
436 [-]: GETTABLE  R14 R14 K97  ; R14 := R14["uid"]
437 [-]: SELF      R14 R14 K99  ; R15 := R14; R14 := R14["0xA1AE44F2"]
438 [-]: GETUPVAL  R16 U17      ; R16 := U17
439 [-]: GETTABLE  R16 R16 K100 ; R16 := R16["info"]
440 [-]: GETTABLE  R16 R16 K101 ; R16 := R16["mItemId"]
441 [-]: GETTABLE  R16 R16 K102 ; R16 := R16["mId"]
442 [-]: CALL      R14 3 1      ; R14(R15,R16)
443 [-]: GETUPVAL  R14 U17      ; R14 := U17
444 [-]: GETTABLE  R14 R14 K103 ; R14 := R14["configSlot"]
445 [-]: MOVE      R14 R18      ; R14 := R18
446 [-]: GETUPVAL  R14 U17      ; R14 := U17
447 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["info"]
448 [-]: SELF      R14 R14 K104 ; R15 := R14; R14 := R14["0x90FB7069"]
449 [-]: CALL      R14 2 2      ; R14 := R14(R15)
450 [-]: MOVE      R14 R19      ; R14 := R19
451 [-]: GETUPVAL  R14 U17      ; R14 := U17
452 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["info"]
453 [-]: GETTABLE  R14 R14 K105 ; R14 := R14["mPolarized"]
454 [-]: MOVE      R14 R16      ; R14 := R16
455 [-]: GETGLOBAL R14 K106     ; R14 := gGameConfig
456 [-]: SELF      R14 R14 K107 ; R15 := R14; R14 := R14["0x6BA57B8E"]
457 [-]: GETUPVAL  R16 U17      ; R16 := U17
458 [-]: GETTABLE  R16 R16 K100 ; R16 := R16["info"]
459 [-]: GETTABLE  R16 R16 K108 ; R16 := R16["mItemType"]
460 [-]: GETUPVAL  R17 U17      ; R17 := U17
461 [-]: GETTABLE  R17 R17 K100 ; R17 := R17["info"]
462 [-]: GETTABLE  R17 R17 K105 ; R17 := R17["mPolarized"]
463 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
464 [-]: MOVE      R14 R15      ; R14 := R15
465 [-]: GETGLOBAL R14 K109     ; R14 := math
466 [-]: GETTABLE  R14 R14 K110 ; R14 := R14["0x65F9712A"]
467 [-]: GETUPVAL  R15 U15      ; R15 := U15
468 [-]: GETGLOBAL R16 K106     ; R16 := gGameConfig
469 [-]: SELF      R16 R16 K111 ; R17 := R16; R16 := R16["0x9E8E66BA"]
470 [-]: GETUPVAL  R18 U17      ; R18 := U17
471 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["info"]
472 [-]: GETTABLE  R18 R18 K112 ; R18 := R18["mXP"]
473 [-]: GETUPVAL  R19 U17      ; R19 := U17
474 [-]: GETTABLE  R19 R19 K100 ; R19 := R19["info"]
475 [-]: GETTABLE  R19 R19 K108 ; R19 := R19["mItemType"]
476 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
477 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
478 [-]: MOVE      R14 R14      ; R14 := R14
479 [-]: GETUPVAL  R14 U17      ; R14 := U17
480 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["info"]
481 [-]: SELF      R14 R14 K113 ; R15 := R14; R14 := R14["0x228EBE57"]
482 [-]: CALL      R14 2 2      ; R14 := R14(R15)
483 [-]: MOVE      R14 R20      ; R14 := R20
484 [-]: GETGLOBAL R14 K109     ; R14 := math
485 [-]: GETTABLE  R14 R14 K114 ; R14 := R14["0x8B011038"]
486 [-]: GETUPVAL  R15 U14      ; R15 := U14
487 [-]: GETUPVAL  R16 U11      ; R16 := U11
488 [-]: SELF      R16 R16 K115 ; R17 := R16; R16 := R16["0x3155222A"]
489 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
490 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
491 [-]: MOVE      R14 R13      ; R14 := R13
492 [-]: GETUPVAL  R14 U17      ; R14 := U17
493 [-]: GETTABLE  R14 R14 K100 ; R14 := R14["info"]
494 [-]: SELF      R14 R14 K116 ; R15 := R14; R14 := R14["0x17D2B78C"]
495 [-]: GETGLOBAL R16 K2       ; R16 := Lotus_Game
496 [-]: GETTABLE  R16 R16 K117 ; R16 := R16["WF_ENERGY_UNLOCKED"]
497 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
498 [-]: TEST      R14 0        ; if not R14 then PC := 503
499 [-]: JMP       503          ; PC := 503
500 [-]: GETUPVAL  R14 U13      ; R14 := U13
501 [-]: MUL       R14 R14 K118 ; R14 := R14 * 2
502 [-]: MOVE      R14 R13      ; R14 := R13
503 [-]: GETGLOBAL R14 K0       ; R14 := _T
504 [-]: GETTABLE  R14 R14 K119 ; R14 := R14["upgradeItemLot"]
505 [-]: GETGLOBAL R15 K0       ; R15 := _T
506 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["upgradeItemSlot"]
507 [-]: LOADK     R16 K68      ; R16 := 0
508 [-]: EQ        1 R14 K5     ; if R14 == nil then PC := 609
509 [-]: JMP       609          ; PC := 609
510 [-]: EQ        1 R15 K5     ; if R15 == nil then PC := 609
511 [-]: JMP       609          ; PC := 609
512 [-]: GETUPVAL  R17 U21      ; R17 := U21
513 [-]: GETUPVAL  R18 U22      ; R18 := U22
514 [-]: CALL      R18 1 2      ; R18 := R18()
515 [-]: SETTABLE  R17 K120 R18 ; R17["HasValidArcane"] := R18
516 [-]: GETGLOBAL R17 K2       ; R17 := Lotus_Game
517 [-]: GETTABLE  R17 R17 K121 ; R17 := R17["LOT_NORMAL"]
518 [-]: EQ        1 R14 R17    ; if R14 == R17 then PC := 524
519 [-]: JMP       524          ; PC := 524
520 [-]: GETGLOBAL R17 K2       ; R17 := Lotus_Game
521 [-]: GETTABLE  R17 R17 K122 ; R17 := R17["LOT_NORMAL_PVP"]
522 [-]: EQ        0 R14 R17    ; if R14 ~= R17 then PC := 609
523 [-]: JMP       609          ; PC := 609
524 [-]: GETGLOBAL R17 K2       ; R17 := Lotus_Game
525 [-]: GETTABLE  R17 R17 K123 ; R17 := R17["LONG_GUN_SLOT"]
526 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 532
527 [-]: JMP       532          ; PC := 532
528 [-]: GETGLOBAL R17 K2       ; R17 := Lotus_Game
529 [-]: GETTABLE  R17 R17 K124 ; R17 := R17["PISTOL_SLOT"]
530 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 535
531 [-]: JMP       535          ; PC := 535
532 [-]: GETUPVAL  R17 U24      ; R17 := U24
533 [-]: ADD       R17 R17 K94  ; R17 := R17 + 1
534 [-]: MOVE      R17 R23      ; R17 := R23
535 [-]: GETGLOBAL R17 K2       ; R17 := Lotus_Game
536 [-]: GETTABLE  R17 R17 K125 ; R17 := R17["SUIT_SLOT"]
537 [-]: EQ        0 R15 R17    ; if R15 ~= R17 then PC := 554
538 [-]: JMP       554          ; PC := 554
539 [-]: LOADK     R16 K118     ; R16 := 2
540 [-]: TEST      R3 1         ; if R3 then PC := 609
541 [-]: JMP       609          ; PC := 609
542 [-]: GETUPVAL  R17 U21      ; R17 := U21
543 [-]: GETTABLE  R17 R17 K120 ; R17 := R17["HasValidArcane"]
544 [-]: TEST      R17 1        ; if R17 then PC := 551
545 [-]: JMP       551          ; PC := 551
546 [-]: GETUPVAL  R17 U11      ; R17 := U11
547 [-]: SELF      R17 R17 K115 ; R18 := R17; R17 := R17["0x3155222A"]
548 [-]: CALL      R17 2 2      ; R17 := R17(R18)
549 [-]: LE        0 K126 R17   ; if 5 > R17 then PC := 609
550 [-]: JMP       609          ; PC := 609
551 [-]: GETUPVAL  R17 U21      ; R17 := U21
552 [-]: SETTABLE  R17 K127 K118; R17["Slots"] := 2
553 [-]: JMP       609          ; PC := 609
554 [-]: GETGLOBAL R17 K10      ; R17 := 0x400E7765
555 [-]: GETUPVAL  R18 U17      ; R18 := U17
556 [-]: GETTABLE  R18 R18 K128 ; R18 := R18["item"]
557 [-]: CALL      R17 2 2      ; R17 := R17(R18)
558 [-]: TEST      R17 1        ; if R17 then PC := 609
559 [-]: JMP       609          ; PC := 609
560 [-]: GETUPVAL  R17 U17      ; R17 := U17
561 [-]: GETTABLE  R17 R17 K128 ; R17 := R17["item"]
562 [-]: SELF      R17 R17 K129 ; R18 := R17; R17 := R17["0x3180ADE8"]
563 [-]: CALL      R17 2 2      ; R17 := R17(R18)
564 [-]: TEST      R17 0        ; if not R17 then PC := 572
565 [-]: JMP       572          ; PC := 572
566 [-]: TEST      R3 1         ; if R3 then PC := 570
567 [-]: JMP       570          ; PC := 570
568 [-]: GETUPVAL  R17 U21      ; R17 := U21
569 [-]: SETTABLE  R17 K127 K94 ; R17["Slots"] := 1
570 [-]: LOADK     R16 K94      ; R16 := 1
571 [-]: JMP       595          ; PC := 595
572 [-]: TEST      R3 1         ; if R3 then PC := 595
573 [-]: JMP       595          ; PC := 595
574 [-]: GETUPVAL  R17 U17      ; R17 := U17
575 [-]: GETTABLE  R17 R17 K128 ; R17 := R17["item"]
576 [-]: SELF      R17 R17 K116 ; R18 := R17; R17 := R17["0x17D2B78C"]
577 [-]: GETGLOBAL R19 K2       ; R19 := Lotus_Game
578 [-]: GETTABLE  R19 R19 K130 ; R19 := R19["WF_ARCANE_SLOT_1"]
579 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
580 [-]: TEST      R17 0        ; if not R17 then PC := 585
581 [-]: JMP       585          ; PC := 585
582 [-]: GETUPVAL  R17 U21      ; R17 := U21
583 [-]: SETTABLE  R17 K127 K118; R17["Slots"] := 2
584 [-]: JMP       595          ; PC := 595
585 [-]: GETUPVAL  R17 U17      ; R17 := U17
586 [-]: GETTABLE  R17 R17 K128 ; R17 := R17["item"]
587 [-]: SELF      R17 R17 K116 ; R18 := R17; R17 := R17["0x17D2B78C"]
588 [-]: GETGLOBAL R19 K2       ; R19 := Lotus_Game
589 [-]: GETTABLE  R19 R19 K131 ; R19 := R19["WF_ARCANE_SLOT_0"]
590 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
591 [-]: TEST      R17 0        ; if not R17 then PC := 595
592 [-]: JMP       595          ; PC := 595
593 [-]: GETUPVAL  R17 U21      ; R17 := U21
594 [-]: SETTABLE  R17 K127 K94 ; R17["Slots"] := 1
595 [-]: GETUPVAL  R17 U25      ; R17 := U25
596 [-]: CALL      R17 1 2      ; R17 := R17()
597 [-]: TEST      R17 0        ; if not R17 then PC := 609
598 [-]: JMP       609          ; PC := 609
599 [-]: GETUPVAL  R17 U19      ; R17 := U19
600 [-]: LEN       R17 R17      ; R17 := # R17
601 [-]: GETUPVAL  R18 U26      ; R18 := U26
602 [-]: LT        0 R17 R18    ; if R17 >= R18 then PC := 609
603 [-]: JMP       609          ; PC := 609
604 [-]: GETGLOBAL R17 K132     ; R17 := table
605 [-]: GETTABLE  R17 R17 K133 ; R17 := R17["0xE6450C9D"]
606 [-]: GETUPVAL  R18 U19      ; R18 := U19
607 [-]: LOADK     R19 K68      ; R19 := 0
608 [-]: CALL      R17 3 1      ; R17(R18,R19)
609 [-]: GETUPVAL  R17 U19      ; R17 := U19
610 [-]: LEN       R17 R17      ; R17 := # R17
611 [-]: SUB       R17 R17 R16  ; R17 := R17 - R16
612 [-]: MOVE      R17 R27      ; R17 := R27
613 [-]: GETGLOBAL R17 K10      ; R17 := 0x400E7765
614 [-]: GETUPVAL  R18 U17      ; R18 := U17
615 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["info"]
616 [-]: CALL      R17 2 2      ; R17 := R17(R18)
617 [-]: TEST      R17 1        ; if R17 then PC := 636
618 [-]: JMP       636          ; PC := 636
619 [-]: LOADK     R17 K68      ; R17 := 0
620 [-]: LOADK     R18 K94      ; R18 := 1
621 [-]: LOADK     R19 K94      ; R19 := 1
622 [-]: FORPREP   R17 635      ; R17 -= R19; PC := 635
623 [-]: LOADK     R21 K68      ; R21 := 0
624 [-]: LOADK     R22 K118     ; R22 := 2
625 [-]: LOADK     R23 K94      ; R23 := 1
626 [-]: FORPREP   R21 634      ; R21 -= R23; PC := 634
627 [-]: GETUPVAL  R25 U28      ; R25 := U28
628 [-]: MOVE      R26 R24      ; R26 := R24
629 [-]: EQ        1 R20 K94    ; if R20 == 1 then PC := 632
630 [-]: JMP       632          ; PC := 632
631 [-]: MOVE      R27 R0       ; R27 := R0
632 [-]: MOVE      R27 R1       ; R27 := R1
633 [-]: CALL      R25 3 1      ; R25(R26,R27)
634 [-]: FORLOOP   R21 627      ; R21 += R23; if R21 <= R22 then begin PC := 627; R24 := R21 end
635 [-]: FORLOOP   R17 623      ; R17 += R19; if R17 <= R18 then begin PC := 623; R20 := R17 end
636 [-]: GETUPVAL  R25 U29      ; R25 := U29
637 [-]: CALL      R25 1 1      ; R25()
638 [-]: GETUPVAL  R25 U30      ; R25 := U30
639 [-]: CALL      R25 1 1      ; R25()
640 [-]: JMP       647          ; PC := 647
641 [-]: GETGLOBAL R25 K0       ; R25 := _T
642 [-]: GETTABLE  R25 R25 K85  ; R25 := R25["0xB92B95FB"]
643 [-]: CALL      R25 1 1      ; R25()
644 [-]: MOVE      R25 R1       ; R25 := R1
645 [-]: MOVE      R25 R31      ; R25 := R31
646 [-]: RETURN    R0 1         ; return 
647 [-]: GETUPVAL  R25 U32      ; R25 := U32
648 [-]: CALL      R25 1 1      ; R25()
649 [-]: GETUPVAL  R25 U33      ; R25 := U33
650 [-]: CALL      R25 1 1      ; R25()
651 [-]: GETGLOBAL R25 K10      ; R25 := 0x400E7765
652 [-]: GETGLOBAL R26 K134     ; R26 := renameConfigsIcon
653 [-]: CALL      R25 2 2      ; R25 := R25(R26)
654 [-]: TEST      R25 1        ; if R25 then PC := 661
655 [-]: JMP       661          ; PC := 661
656 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
657 [-]: SELF      R25 R25 K135 ; R26 := R25; R25 := R25["0x26581636"]
658 [-]: LOADK     R27 K136     ; R27 := "TopMenu.RenameIcon"
659 [-]: GETGLOBAL R28 K134     ; R28 := renameConfigsIcon
660 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
661 [-]: GETGLOBAL R25 K10      ; R25 := 0x400E7765
662 [-]: GETGLOBAL R26 K137     ; R26 := linkConfigIcon
663 [-]: CALL      R25 2 2      ; R25 := R25(R26)
664 [-]: TEST      R25 1        ; if R25 then PC := 671
665 [-]: JMP       671          ; PC := 671
666 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
667 [-]: SELF      R25 R25 K135 ; R26 := R25; R25 := R25["0x26581636"]
668 [-]: LOADK     R27 K138     ; R27 := "TopMenu.LinkIcon"
669 [-]: GETGLOBAL R28 K137     ; R28 := linkConfigIcon
670 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
671 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
672 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
673 [-]: LOADK     R27 K138     ; R27 := "TopMenu.LinkIcon"
674 [-]: LOADK     R28 K29      ; R28 := "_visible"
675 [-]: MOVE      R29 R3       ; R29 := R3
676 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
677 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
678 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
679 [-]: LOADK     R27 K139     ; R27 := "InstallMenu.FocusCallout"
680 [-]: LOADK     R28 K29      ; R28 := "_visible"
681 [-]: MOVE      R29 R0       ; R29 := R0
682 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
683 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
684 [-]: SELF      R25 R25 K140 ; R26 := R25; R25 := R25["0x17028E8F"]
685 [-]: LOADK     R27 K141     ; R27 := "InstallMenu.FocusCallout.Tf.text"
686 [-]: LOADK     R28 K142     ; R28 := ""
687 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
688 [-]: GETGLOBAL R25 K0       ; R25 := _T
689 [-]: GETTABLE  R25 R25 K119 ; R25 := R25["upgradeItemLot"]
690 [-]: GETGLOBAL R26 K2       ; R26 := Lotus_Game
691 [-]: GETTABLE  R26 R26 K143 ; R26 := R26["LOT_DATAKNIFE"]
692 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 731
693 [-]: JMP       731          ; PC := 731
694 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
695 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
696 [-]: LOADK     R27 K144     ; R27 := "DataGraphic"
697 [-]: LOADK     R28 K145     ; R28 := "_alpha"
698 [-]: LOADK     R29 K146     ; R29 := 100
699 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
700 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
701 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
702 [-]: LOADK     R27 K147     ; R27 := "TopMenu.Bg.StatCompareBg"
703 [-]: LOADK     R28 K145     ; R28 := "_alpha"
704 [-]: LOADK     R29 K68      ; R29 := 0
705 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
706 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
707 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
708 [-]: LOADK     R27 K148     ; R27 := "TopMenu.Bg.CapacityBg"
709 [-]: LOADK     R28 K149     ; R28 := "_height"
710 [-]: LOADK     R29 K150     ; R29 := 775
711 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
712 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
713 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
714 [-]: LOADK     R27 K151     ; R27 := "Capacity"
715 [-]: LOADK     R28 K29      ; R28 := "_visible"
716 [-]: MOVE      R29 R0       ; R29 := R0
717 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
718 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
719 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
720 [-]: LOADK     R27 K152     ; R27 := "CapacityLabel"
721 [-]: LOADK     R28 K29      ; R28 := "_visible"
722 [-]: MOVE      R29 R0       ; R29 := R0
723 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
724 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
725 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
726 [-]: LOADK     R27 K153     ; R27 := "CapacityNumber"
727 [-]: LOADK     R28 K29      ; R28 := "_visible"
728 [-]: MOVE      R29 R0       ; R29 := R0
729 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
730 [-]: JMP       756          ; PC := 756
731 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
732 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
733 [-]: LOADK     R27 K154     ; R27 := "Capacity.Bg"
734 [-]: LOADK     R28 K155     ; R28 := "_color"
735 [-]: GETGLOBAL R29 K76      ; R29 := _G
736 [-]: GETTABLE  R29 R29 K156 ; R29 := R29["UIColor_MediumGrey"]
737 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
738 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
739 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
740 [-]: LOADK     R27 K154     ; R27 := "Capacity.Bg"
741 [-]: LOADK     R28 K145     ; R28 := "_alpha"
742 [-]: LOADK     R29 K157     ; R29 := 50
743 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
744 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
745 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
746 [-]: LOADK     R27 K154     ; R27 := "Capacity.Bg"
747 [-]: GETGLOBAL R28 K76      ; R28 := _G
748 [-]: GETTABLE  R28 R28 K159 ; R28 := R28["UIMaterial_SmoothEdge"]
749 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
750 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
751 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
752 [-]: LOADK     R27 K160     ; R27 := "Capacity.Bar"
753 [-]: GETGLOBAL R28 K76      ; R28 := _G
754 [-]: GETTABLE  R28 R28 K159 ; R28 := R28["UIMaterial_SmoothEdge"]
755 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
756 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
757 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
758 [-]: LOADK     R27 K161     ; R27 := "Tile"
759 [-]: GETGLOBAL R28 K162     ; R28 := gridTileMaterial
760 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
761 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
762 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
763 [-]: LOADK     R27 K163     ; R27 := "Blacker"
764 [-]: GETGLOBAL R28 K164     ; R28 := blackBackerMaterial
765 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
766 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
767 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
768 [-]: LOADK     R27 K165     ; R27 := "TopMenu.Bg"
769 [-]: GETGLOBAL R28 K166     ; R28 := backerMaterial
770 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
771 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
772 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
773 [-]: LOADK     R27 K148     ; R27 := "TopMenu.Bg.CapacityBg"
774 [-]: GETGLOBAL R28 K76      ; R28 := _G
775 [-]: GETTABLE  R28 R28 K159 ; R28 := R28["UIMaterial_SmoothEdge"]
776 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
777 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
778 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
779 [-]: LOADK     R27 K147     ; R27 := "TopMenu.Bg.StatCompareBg"
780 [-]: GETGLOBAL R28 K76      ; R28 := _G
781 [-]: GETTABLE  R28 R28 K159 ; R28 := R28["UIMaterial_SmoothEdge"]
782 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
783 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
784 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
785 [-]: LOADK     R27 K167     ; R27 := "TopMenu.Bg.AbilitiesBg"
786 [-]: GETGLOBAL R28 K76      ; R28 := _G
787 [-]: GETTABLE  R28 R28 K159 ; R28 := R28["UIMaterial_SmoothEdge"]
788 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
789 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
790 [-]: SELF      R25 R25 K158 ; R26 := R25; R25 := R25["0x7E1F26D7"]
791 [-]: LOADK     R27 K168     ; R27 := "MiddleMenu.Bg"
792 [-]: GETGLOBAL R28 K166     ; R28 := backerMaterial
793 [-]: CALL      R25 4 1      ; R25(R26,R27,R28)
794 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
795 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
796 [-]: LOADK     R27 K161     ; R27 := "Tile"
797 [-]: LOADK     R28 K145     ; R28 := "_alpha"
798 [-]: LOADK     R29 K68      ; R29 := 0
799 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
800 [-]: GETGLOBAL R25 K23      ; R25 := mMovie
801 [-]: SELF      R25 R25 K27  ; R26 := R25; R25 := R25["0x1C19D966"]
802 [-]: LOADK     R27 K163     ; R27 := "Blacker"
803 [-]: LOADK     R28 K145     ; R28 := "_alpha"
804 [-]: LOADK     R29 K68      ; R29 := 0
805 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
806 [-]: GETGLOBAL R25 K169     ; R25 := 0x52E17A90
807 [-]: GETGLOBAL R26 K23      ; R26 := mMovie
808 [-]: LOADK     R27 K163     ; R27 := "Blacker"
809 [-]: GETGLOBAL R28 K170     ; R28 := UISys
810 [-]: GETTABLE  R28 R28 K171 ; R28 := R28["FlashInstance_LINEAR"]
811 [-]: NEWTABLE  R29 1 0      ; R29 := {}
812 [-]: LOADK     R30 K145     ; R30 := "_alpha"
813 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
814 [-]: NEWTABLE  R30 1 0      ; R30 := {}
815 [-]: LOADK     R31 K172     ; R31 := 75
816 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
817 [-]: LOADK     R31 K173     ; R31 := 0.40000000596046
818 [-]: LOADK     R32 K174     ; R32 := 0.20000000298023
819 [-]: CALL      R25 8 1      ; R25(R26,R27,R28,R29,R30,R31,R32)
820 [-]: GETGLOBAL R25 K169     ; R25 := 0x52E17A90
821 [-]: GETGLOBAL R26 K23      ; R26 := mMovie
822 [-]: LOADK     R27 K161     ; R27 := "Tile"
823 [-]: GETGLOBAL R28 K170     ; R28 := UISys
824 [-]: GETTABLE  R28 R28 K171 ; R28 := R28["FlashInstance_LINEAR"]
825 [-]: NEWTABLE  R29 1 0      ; R29 := {}
826 [-]: LOADK     R30 K145     ; R30 := "_alpha"
827 [-]: SETLIST   R29 1 1      ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
828 [-]: NEWTABLE  R30 1 0      ; R30 := {}
829 [-]: LOADK     R31 K146     ; R31 := 100
830 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
831 [-]: LOADK     R31 K173     ; R31 := 0.40000000596046
832 [-]: LOADK     R32 K174     ; R32 := 0.20000000298023
833 [-]: CALL      R25 8 1      ; R25(R26,R27,R28,R29,R30,R31,R32)
834 [-]: GETUPVAL  R25 U35      ; R25 := U35
835 [-]: CALL      R25 1 2      ; R25 := R25()
836 [-]: MOVE      R25 R34      ; R25 := R34
837 [-]: GETGLOBAL R25 K57      ; R25 := 0x329BDC44
838 [-]: LOADK     R26 K175     ; R26 := "Lotus.Interface.Components.Button"
839 [-]: CALL      R25 2 2      ; R25 := R25(R26)
840 [-]: GETTABLE  R26 R25 K176 ; R26 := R25["0xF232C660"]
841 [-]: GETGLOBAL R27 K23      ; R27 := mMovie
842 [-]: LOADK     R28 K177     ; R28 := "Installed.ComboBtn"
843 [-]: LOADK     R29 K178     ; R29 := "/Lotus/Language/Menu/Combos"
844 [-]: LOADK     R30 K179     ; R30 := "ShowMeleeCombos"
845 [-]: LOADK     R31 K142     ; R31 := ""
846 [-]: LOADNIL   R32 R33      ; R32 := R33 := nil
847 [-]: MOVE      R34 R1       ; R34 := R1
848 [-]: CALL      R26 9 2      ; R26 := R26(R27,R28,R29,R30,R31,R32,R33,R34)
849 [-]: MOVE      R26 R36      ; R26 := R36
850 [-]: GETUPVAL  R26 U36      ; R26 := U36
851 [-]: SETTABLE  R26 K180 K181; R26["mAlignment"] := "center"
852 [-]: GETUPVAL  R26 U36      ; R26 := U36
853 [-]: SETTABLE  R26 K182 K183; R26["mWidth"] := 254
854 [-]: GETUPVAL  R26 U36      ; R26 := U36
855 [-]: SELF      R26 R26 K184 ; R27 := R26; R26 := R26["0x6470BAF4"]
856 [-]: CALL      R26 2 1      ; R26(R27)
857 [-]: GETGLOBAL R26 K23      ; R26 := mMovie
858 [-]: SELF      R26 R26 K27  ; R27 := R26; R26 := R26["0x1C19D966"]
859 [-]: LOADK     R28 K185     ; R28 := "_root"
860 [-]: LOADK     R29 K145     ; R29 := "_alpha"
861 [-]: LOADK     R30 K68      ; R30 := 0
862 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
863 [-]: GETGLOBAL R26 K0       ; R26 := _T
864 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["OpenedFromModScreen"]
865 [-]: EQ        1 R26 K5     ; if R26 == nil then PC := 871
866 [-]: JMP       871          ; PC := 871
867 [-]: GETGLOBAL R26 K0       ; R26 := _T
868 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["OpenedFromModScreen"]
869 [-]: EQ        0 R26 K32    ; if R26 ~= "0x0" then PC := 888
870 [-]: JMP       888          ; PC := 888
871 [-]: GETUPVAL  R26 U37      ; R26 := U37
872 [-]: CALL      R26 1 1      ; R26()
873 [-]: GETGLOBAL R26 K169     ; R26 := 0x52E17A90
874 [-]: GETGLOBAL R27 K23      ; R27 := mMovie
875 [-]: LOADK     R28 K185     ; R28 := "_root"
876 [-]: GETGLOBAL R29 K170     ; R29 := UISys
877 [-]: GETTABLE  R29 R29 K186 ; R29 := R29["FlashInstance_EASE_IN_OUT_BACK"]
878 [-]: NEWTABLE  R30 1 0      ; R30 := {}
879 [-]: LOADK     R31 K145     ; R31 := "_alpha"
880 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
881 [-]: NEWTABLE  R31 1 0      ; R31 := {}
882 [-]: LOADK     R32 K146     ; R32 := 100
883 [-]: SETLIST   R31 1 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 1
884 [-]: LOADK     R32 K187     ; R32 := 0.25
885 [-]: LOADK     R33 K68      ; R33 := 0
886 [-]: CALL      R26 8 1      ; R26(R27,R28,R29,R30,R31,R32,R33)
887 [-]: JMP       907          ; PC := 907
888 [-]: GETGLOBAL R26 K169     ; R26 := 0x52E17A90
889 [-]: GETGLOBAL R27 K23      ; R27 := mMovie
890 [-]: LOADK     R28 K185     ; R28 := "_root"
891 [-]: GETGLOBAL R29 K170     ; R29 := UISys
892 [-]: GETTABLE  R29 R29 K186 ; R29 := R29["FlashInstance_EASE_IN_OUT_BACK"]
893 [-]: NEWTABLE  R30 1 0      ; R30 := {}
894 [-]: LOADK     R31 K145     ; R31 := "_alpha"
895 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
896 [-]: NEWTABLE  R31 1 0      ; R31 := {}
897 [-]: LOADK     R32 K146     ; R32 := 100
898 [-]: SETLIST   R31 1 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 1
899 [-]: LOADK     R32 K66      ; R32 := 0.5
900 [-]: LOADK     R33 K68      ; R33 := 0
901 [-]: GETUPVAL  R34 U37      ; R34 := U37
902 [-]: CALL      R26 9 1      ; R26(R27,R28,R29,R30,R31,R32,R33,R34)
903 [-]: TEST      R0 0         ; if not R0 then PC := 907
904 [-]: JMP       907          ; PC := 907
905 [-]: GETUPVAL  R26 U38      ; R26 := U38
906 [-]: CALL      R26 1 1      ; R26()
907 [-]: GETGLOBAL R26 K0       ; R26 := _T
908 [-]: SETTABLE  R26 K35 K5   ; R26["OpenedFromModScreen"] := nil
909 [-]: GETGLOBAL R26 K23      ; R26 := mMovie
910 [-]: SELF      R26 R26 K158 ; R27 := R26; R26 := R26["0x7E1F26D7"]
911 [-]: LOADK     R28 K188     ; R28 := "DragImage"
912 [-]: GETGLOBAL R29 K76      ; R29 := _G
913 [-]: GETTABLE  R29 R29 K189 ; R29 := R29["UIMaterial_Mods"]
914 [-]: GETTABLE  R29 R29 K118 ; R29 := R29[2]
915 [-]: GETTABLE  R29 R29 K190 ; R29 := R29["Icon"]
916 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
917 [-]: GETGLOBAL R26 K23      ; R26 := mMovie
918 [-]: SELF      R26 R26 K191 ; R27 := R26; R26 := R26["0x302AAB2F"]
919 [-]: LOADK     R28 K188     ; R28 := "DragImage"
920 [-]: LOADK     R29 K192     ; R29 := "DetailMapParams"
921 [-]: LOADK     R30 K68      ; R30 := 0
922 [-]: LOADK     R31 K68      ; R31 := 0
923 [-]: LOADK     R32 K94      ; R32 := 1
924 [-]: LOADK     R33 K94      ; R33 := 1
925 [-]: CALL      R26 8 1      ; R26(R27,R28,R29,R30,R31,R32,R33)
926 [-]: GETGLOBAL R26 K10      ; R26 := 0x400E7765
927 [-]: GETGLOBAL R27 K193     ; R27 := gGameData
928 [-]: CALL      R26 2 2      ; R26 := R26(R27)
929 [-]: TEST      R26 1        ; if R26 then PC := 939
930 [-]: JMP       939          ; PC := 939
931 [-]: GETGLOBAL R26 K193     ; R26 := gGameData
932 [-]: SELF      R26 R26 K194 ; R27 := R26; R26 := R26["0x6F2E05FD"]
933 [-]: CALL      R26 2 2      ; R26 := R26(R27)
934 [-]: SELF      R26 R26 K195 ; R27 := R26; R26 := R26["0x4E4AB1F0"]
935 [-]: LOADK     R28 K68      ; R28 := 0
936 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
937 [-]: TEST      R26 0        ; if not R26 then PC := 951
938 [-]: JMP       951          ; PC := 951
939 [-]: GETGLOBAL R26 K10      ; R26 := 0x400E7765
940 [-]: GETGLOBAL R27 K0       ; R27 := _T
941 [-]: GETTABLE  R27 R27 K196 ; R27 := R27["BackgroundMovie"]
942 [-]: CALL      R26 2 2      ; R26 := R26(R27)
943 [-]: TEST      R26 1        ; if R26 then PC := 951
944 [-]: JMP       951          ; PC := 951
945 [-]: GETGLOBAL R26 K0       ; R26 := _T
946 [-]: GETTABLE  R26 R26 K196 ; R26 := R26["BackgroundMovie"]
947 [-]: SELF      R26 R26 K197 ; R27 := R26; R26 := R26["0x458F27A9"]
948 [-]: LOADK     R28 K198     ; R28 := "ShowBlockingMessage"
949 [-]: LOADK     R29 K199     ; R29 := "2"
950 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
951 [-]: MOVE      R26 R1       ; R26 := R1
952 [-]: MOVE      R26 R39      ; R26 := R39
953 [-]: GETGLOBAL R26 K200     ; R26 := gGameStatsMgr
954 [-]: EQ        1 R26 K5     ; if R26 == nil then PC := 963
955 [-]: JMP       963          ; PC := 963
956 [-]: GETGLOBAL R26 K200     ; R26 := gGameStatsMgr
957 [-]: SELF      R26 R26 K201 ; R27 := R26; R26 := R26["0xCFF953A5"]
958 [-]: GETGLOBAL R28 K202     ; R28 := 0xEC274B1A
959 [-]: LOADK     R29 K203     ; R29 := "IN_SHIP_VIEW_TIME"
960 [-]: CALL      R28 2 2      ; R28 := R28(R29)
961 [-]: LOADK     R29 K204     ; R29 := "EQUIPMENT_ARSENAL_MOD"
962 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
963 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 5214
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["BackgroundMovie"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R2 K1        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["BackgroundMovie"]
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x458F27A9"]
 10 [-]: LOADK     R4 K4        ; R4 := "ShowBlockingMessage"
 11 [-]: LOADK     R5 K5        ; R5 := "0"
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 0         ; if not R2 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETGLOBAL R2 K6        ; R2 := 0x93B1256B
 19 [-]: LOADK     R3 K7        ; R3 := "Unexpected call to OnUnlockFeature, missing operation."
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mOperations"]
 24 [-]: LEN       R2 R2        ; R2 := # R2
 25 [-]: EQ        1 R2 K9      ; if R2 == 1 then PC := 33
 26 [-]: JMP       33           ; PC := 33
 27 [-]: GETGLOBAL R2 K6        ; R2 := 0x93B1256B
 28 [-]: LOADK     R3 K10       ; R3 := "Unexpected number of operations on pending unlock feature operation."
 29 [-]: CALL      R2 2 1       ; R2(R3)
 30 [-]: LOADNIL   R2 R2        ; R2 := nil
 31 [-]: MOVE      R2 R0        ; R2 := R0
 32 [-]: RETURN    R0 1         ; return 
 33 [-]: TEST      R0 1         ; if R0 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETUPVAL  R2 U1        ; R2 := U1
 36 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0xB11F032"]
 37 [-]: LOADK     R3 K12       ; R3 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
 38 [-]: CALL      R2 2 1       ; R2(R3)
 39 [-]: LOADNIL   R2 R2        ; R2 := nil
 40 [-]: MOVE      R2 R0        ; R2 := R0
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: GETUPVAL  R2 U0        ; R2 := U0
 43 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mOperations"]
 44 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[1]
 45 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mOperationType"]
 46 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
 47 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["UOT_ENERGY_UNLOCK"]
 48 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 84
 49 [-]: JMP       84           ; PC := 84
 50 [-]: GETUPVAL  R3 U1        ; R3 := U1
 51 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0x25992394"]
 52 [-]: GETGLOBAL R4 K17       ; R4 := purchaseSound
 53 [-]: CALL      R3 2 1       ; R3(R4)
 54 [-]: GETUPVAL  R3 U2        ; R3 := U2
 55 [-]: CALL      R3 1 1       ; R3()
 56 [-]: GETGLOBAL R3 K18       ; R3 := math
 57 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0x8B011038"]
 58 [-]: GETUPVAL  R4 U4        ; R4 := U4
 59 [-]: GETUPVAL  R5 U5        ; R5 := U5
 60 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5["0x3155222A"]
 61 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 62 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 63 [-]: MOVE      R3 R3        ; R3 := R3
 64 [-]: GETUPVAL  R3 U6        ; R3 := U6
 65 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["info"]
 66 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3["0x17D2B78C"]
 67 [-]: GETGLOBAL R5 K14       ; R5 := Lotus_Game
 68 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["WF_ENERGY_UNLOCKED"]
 69 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 70 [-]: TEST      R3 0         ; if not R3 then PC := 75
 71 [-]: JMP       75           ; PC := 75
 72 [-]: GETUPVAL  R3 U3        ; R3 := U3
 73 [-]: MUL       R3 R3 K24    ; R3 := R3 * 2
 74 [-]: MOVE      R3 R3        ; R3 := R3
 75 [-]: GETUPVAL  R3 U7        ; R3 := U7
 76 [-]: CALL      R3 1 1       ; R3()
 77 [-]: GETUPVAL  R3 U8        ; R3 := U8
 78 [-]: LOADK     R4 K25       ; R4 := "CapacityNumber"
 79 [-]: GETGLOBAL R5 K26       ; R5 := potatoInstalledFX
 80 [-]: LOADK     R6 K27       ; R6 := -20
 81 [-]: LOADK     R7 K28       ; R7 := 15
 82 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 83 [-]: JMP       131          ; PC := 131
 84 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
 85 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["UOT_UTILITY_UNLOCK"]
 86 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 101
 87 [-]: JMP       101          ; PC := 101
 88 [-]: GETUPVAL  R3 U1        ; R3 := U1
 89 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0x25992394"]
 90 [-]: GETGLOBAL R4 K17       ; R4 := purchaseSound
 91 [-]: CALL      R3 2 1       ; R3(R4)
 92 [-]: GETUPVAL  R3 U2        ; R3 := U2
 93 [-]: CALL      R3 1 1       ; R3()
 94 [-]: GETUPVAL  R3 U9        ; R3 := U9
 95 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3["0x9D2060CB"]
 96 [-]: CLOSURE   R5 0         ; R5 := closure(Function #147.1)
 97 [-]: GETUPVAL  R0 U9        ; R0 := U9
 98 [-]: GETUPVAL  R0 U8        ; R0 := U8
 99 [-]: CALL      R3 3 1       ; R3(R4,R5)
100 [-]: JMP       131          ; PC := 131
101 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
102 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["UOT_HEAVY_UNLOCK"]
103 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 112
104 [-]: JMP       112          ; PC := 112
105 [-]: GETUPVAL  R3 U1        ; R3 := U1
106 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0x25992394"]
107 [-]: GETGLOBAL R4 K17       ; R4 := purchaseSound
108 [-]: CALL      R3 2 1       ; R3(R4)
109 [-]: GETUPVAL  R3 U2        ; R3 := U2
110 [-]: CALL      R3 1 1       ; R3()
111 [-]: JMP       131          ; PC := 131
112 [-]: GETGLOBAL R3 K14       ; R3 := Lotus_Game
113 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["UOT_MOD_SLOT"]
114 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 125
115 [-]: JMP       125          ; PC := 125
116 [-]: GETUPVAL  R3 U1        ; R3 := U1
117 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0x25992394"]
118 [-]: GETGLOBAL R4 K17       ; R4 := purchaseSound
119 [-]: CALL      R3 2 1       ; R3(R4)
120 [-]: GETUPVAL  R3 U2        ; R3 := U2
121 [-]: CALL      R3 1 1       ; R3()
122 [-]: GETUPVAL  R3 U10       ; R3 := U10
123 [-]: CALL      R3 1 1       ; R3()
124 [-]: JMP       131          ; PC := 131
125 [-]: GETGLOBAL R3 K6        ; R3 := 0x93B1256B
126 [-]: LOADK     R4 K33       ; R4 := "Unexpected operation unlock feature operation type."
127 [-]: CALL      R3 2 1       ; R3(R4)
128 [-]: LOADNIL   R3 R3        ; R3 := nil
129 [-]: MOVE      R3 R0        ; R3 := R0
130 [-]: RETURN    R0 1         ; return 
131 [-]: LOADNIL   R3 R3        ; R3 := nil
132 [-]: MOVE      R3 R0        ; R3 := R0
133 [-]: RETURN    R0 1         ; return 


; Function #147.1:
;
; Name:            
; Defined at line: 5250
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Locked"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 17
  3 [-]: JMP       17           ; PC := 17
  4 [-]: SETTABLE  R0 K0 K1     ; R0["Locked"] := "0x0"
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0xA372F64A"]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mClipName"]
 11 [-]: LOADK     R3 K4        ; R3 := ".Locked"
 12 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 13 [-]: GETGLOBAL R3 K5        ; R3 := polarityFX
 14 [-]: LOADK     R4 K6        ; R4 := 24
 15 [-]: LOADK     R5 K6        ; R5 := 24
 16 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 17 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 5273
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 36
  7 [-]: JMP       36           ; PC := 36
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 36
 17 [-]: JMP       36           ; PC := 36
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0xAD620FC"]
 20 [-]: GETUPVAL  R3 U1        ; R3 := U1
 21 [-]: LOADK     R4 K5        ; R4 := "OnUnlockFeatureWebResult"
 22 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 23 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
 24 [-]: GETGLOBAL R2 K6        ; R2 := _T
 25 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["BackgroundMovie"]
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R1 K6        ; R1 := _T
 30 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["BackgroundMovie"]
 31 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x458F27A9"]
 32 [-]: LOADK     R3 K9        ; R3 := "ShowBlockingMessage"
 33 [-]: LOADK     R4 K10       ; R4 := "1"
 34 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADNIL   R1 R1        ; R1 := nil
 37 [-]: MOVE      R1 R1        ; R1 := R1
 38 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 5284
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 12
  2 [-]: JMP       12           ; PC := 12
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  5 [-]: LOADK     R3 K3        ; R3 := "OnConfirmUnlockFeature"
  6 [-]: GETGLOBAL R4 K4        ; R4 := 0x9FAED6BC
  7 [-]: GETGLOBAL R5 K5        ; R5 := Engine
  8 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["CI_SELECT"]
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: JMP       20           ; PC := 20
 12 [-]: EQ        0 R0 K7      ; if R0 ~= "false" then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["0xB11F032"]
 16 [-]: LOADK     R2 K9        ; R2 := "/Lotus/Language/Menu/Global_PurchaseFailed"
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: LOADNIL   R1 R1        ; R1 := nil
 19 [-]: MOVE      R1 R1        ; R1 := R1
 20 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 5295
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 14 [-]: GETGLOBAL R3 K1        ; R3 := _T
 15 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["upgradeItemCategory"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: GETUPVAL  R3 U2        ; R3 := U2
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R2 K3        ; R2 := 0x93B1256B
 27 [-]: LOADK     R3 K4        ; R3 := "Failed to unlock feature, a current unlock operation is in progress."
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R2 2         ; return R2
 31 [-]: GETUPVAL  R2 U3        ; R2 := U3
 32 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x5F37CE9F"]
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["info"]
 35 [-]: MOVE      R4 R1        ; R4 := R1
 36 [-]: MOVE      R5 R0        ; R5 := R0
 37 [-]: GETGLOBAL R6 K1        ; R6 := _T
 38 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["upgradeItemCategory"]
 39 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 40 [-]: MOVE      R2 R2        ; R2 := R2
 41 [-]: GETUPVAL  R2 U3        ; R2 := U3
 42 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xAA6DD5AE"]
 43 [-]: GETUPVAL  R3 U2        ; R3 := U2
 44 [-]: LOADK     R4 K8        ; R4 := "OnConfirmUnlockFeature"
 45 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: EQ        0 R2 K10     ; if R2 ~= "0x0" then PC := 60
 48 [-]: JMP       60           ; PC := 60
 49 [-]: GETUPVAL  R3 U3        ; R3 := U3
 50 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0x7498D7B"]
 51 [-]: GETUPVAL  R4 U2        ; R4 := U2
 52 [-]: LOADK     R5 K12       ; R5 := "OnBuyFeatureItem"
 53 [-]: GETGLOBAL R6 K9        ; R6 := mMovie
 54 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 55 [-]: TEST      R3 1         ; if R3 then PC := 64
 56 [-]: JMP       64           ; PC := 64
 57 [-]: LOADNIL   R3 R3        ; R3 := nil
 58 [-]: MOVE      R3 R2        ; R3 := R2
 59 [-]: JMP       64           ; PC := 64
 60 [-]: EQ        0 R2 K13     ; if R2 ~= nil then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADNIL   R3 R3        ; R3 := nil
 63 [-]: MOVE      R3 R2        ; R3 := R2
 64 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: MOVE      R3 R3        ; R3 := R3
 68 [-]: RETURN    R3 2         ; return R3
 69 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 5318
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 5321
; #Upvalues:       10
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  34

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  3 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x458F27A9"]
  8 [-]: LOADK     R4 K4        ; R4 := "ShowBlockingMessage"
  9 [-]: LOADK     R5 K5        ; R5 := "0"
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 183
 12 [-]: JMP       183          ; PC := 183
 13 [-]: GETGLOBAL R2 K6        ; R2 := gRegion
 14 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x372CB914"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0x25992394"]
 18 [-]: GETGLOBAL R4 K9        ; R4 := _G
 19 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UISound_SweetenerTwo"]
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6F2E05FD"]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: GETUPVAL  R4 U2        ; R4 := U2
 25 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 176
 26 [-]: JMP       176          ; PC := 176
 27 [-]: GETUPVAL  R4 U2        ; R4 := U2
 28 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["info"]
 29 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 176
 30 [-]: JMP       176          ; PC := 176
 31 [-]: GETGLOBAL R4 K13       ; R4 := 0x400E7765
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 1         ; if R4 then PC := 176
 35 [-]: JMP       176          ; PC := 176
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["info"]
 38 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mItemId"]
 39 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mId"]
 40 [-]: SELF      R5 R3 K16    ; R6 := R3; R5 := R3["0xD2EADDBF"]
 41 [-]: MOVE      R7 R4        ; R7 := R4
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: GETUPVAL  R6 U3        ; R6 := U3
 44 [-]: TEST      R6 1         ; if R6 then PC := 59
 45 [-]: JMP       59           ; PC := 59
 46 [-]: GETGLOBAL R6 K17       ; R6 := gChallengeMgr
 47 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x83829B2"]
 48 [-]: MOVE      R8 R2        ; R8 := R2
 49 [-]: GETGLOBAL R9 K19       ; R9 := 0xEC274B1A
 50 [-]: LOADK     R10 K20      ; R10 := "ITEM_POLARIZED"
 51 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 52 [-]: LOADNIL   R10 R10      ; R10 := nil
 53 [-]: GETTABLE  R11 R5 K21   ; R11 := R5["mItemType"]
 54 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 55 [-]: GETGLOBAL R6 K22       ; R6 := gGameData
 56 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6["0xC5F3D29"]
 57 [-]: LOADK     R8 K24       ; R8 := "OnUploadChallengeProgress"
 58 [-]: CALL      R6 3 1       ; R6(R7,R8)
 59 [-]: GETGLOBAL R6 K25       ; R6 := math
 60 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["0x65F9712A"]
 61 [-]: GETGLOBAL R7 K27       ; R7 := gGameConfig
 62 [-]: SELF      R7 R7 K28    ; R8 := R7; R7 := R7["0x6BA57B8E"]
 63 [-]: GETTABLE  R9 R5 K21    ; R9 := R5["mItemType"]
 64 [-]: GETTABLE  R10 R5 K29   ; R10 := R5["mPolarized"]
 65 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 66 [-]: GETGLOBAL R8 K27       ; R8 := gGameConfig
 67 [-]: SELF      R8 R8 K30    ; R9 := R8; R8 := R8["0x9E8E66BA"]
 68 [-]: GETTABLE  R10 R5 K31   ; R10 := R5["mXP"]
 69 [-]: GETTABLE  R11 R5 K21   ; R11 := R5["mItemType"]
 70 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 71 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 72 [-]: GETGLOBAL R7 K25       ; R7 := math
 73 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["0x8B011038"]
 74 [-]: MOVE      R8 R6        ; R8 := R6
 75 [-]: GETUPVAL  R9 U1        ; R9 := U1
 76 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x3155222A"]
 77 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 78 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 79 [-]: SELF      R8 R5 K34    ; R9 := R5; R8 := R5["0x17D2B78C"]
 80 [-]: GETGLOBAL R10 K35      ; R10 := Lotus_Game
 81 [-]: GETTABLE  R10 R10 K36  ; R10 := R10["WF_ENERGY_UNLOCKED"]
 82 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 83 [-]: TEST      R8 0         ; if not R8 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: MUL       R7 R7 K37    ; R7 := R7 * 2
 86 [-]: SELF      R8 R5 K38    ; R9 := R5; R8 := R5["0x90FB7069"]
 87 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 88 [-]: MOVE      R8 R4        ; R8 := R4
 89 [-]: LOADK     R8 K39       ; R8 := 0
 90 [-]: LOADK     R9 K40       ; R9 := 1
 91 [-]: LOADK     R10 K40      ; R10 := 1
 92 [-]: FORPREP   R8 175       ; R8 -= R10; PC := 175
 93 [-]: GETUPVAL  R12 U0       ; R12 := U0
 94 [-]: GETTABLE  R12 R12 K41  ; R12 := R12["0xF81722A2"]
 95 [-]: EQ        1 R11 K40    ; if R11 == 1 then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: MOVE      R13 R0       ; R13 := R0
 98 [-]: MOVE      R13 R1       ; R13 := R1
 99 [-]: GETUPVAL  R14 U5       ; R14 := U5
100 [-]: GETTABLE  R14 R14 K42  ; R14 := R14["mPvp"]
101 [-]: GETUPVAL  R15 U5       ; R15 := U5
102 [-]: GETTABLE  R15 R15 K43  ; R15 := R15["mNormal"]
103 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
104 [-]: GETGLOBAL R13 K44      ; R13 := 0xECFDD17
105 [-]: MOVE      R14 R12      ; R14 := R12
106 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
107 [-]: JMP       173          ; PC := 173
108 [-]: LOADK     R18 K39      ; R18 := 0
109 [-]: NEWTABLE  R19 0 0      ; R19 := {}
110 [-]: LEN       R20 R17      ; R20 := # R17
111 [-]: LOADK     R21 K40      ; R21 := 1
112 [-]: LOADK     R22 K45      ; R22 := -1
113 [-]: FORPREP   R20 163      ; R20 -= R22; PC := 163
114 [-]: GETGLOBAL R24 K35      ; R24 := Lotus_Game
115 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["0x27FA8743"]
116 [-]: CALL      R24 1 2      ; R24 := R24()
117 [-]: GETTABLE  R25 R17 R23  ; R25 := R17[R23]
118 [-]: GETTABLE  R26 R25 K14  ; R26 := R25["mItemId"]
119 [-]: GETTABLE  R26 R26 K15  ; R26 := R26["mId"]
120 [-]: EQ        0 R26 K47    ; if R26 ~= "" then PC := 127
121 [-]: JMP       127          ; PC := 127
122 [-]: GETGLOBAL R26 K13      ; R26 := 0x400E7765
123 [-]: GETTABLE  R27 R25 K21  ; R27 := R25["mItemType"]
124 [-]: CALL      R26 2 2      ; R26 := R26(R27)
125 [-]: TEST      R26 1        ; if R26 then PC := 162
126 [-]: JMP       162          ; PC := 162
127 [-]: GETTABLE  R26 R25 K48  ; R26 := R25["mInstance"]
128 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26["0x2ADE8E61"]
129 [-]: GETTABLE  R28 R25 K50  ; R28 := R25["mUpgradeFingerprint"]
130 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
131 [-]: GETUPVAL  R27 U4       ; R27 := U4
132 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
133 [-]: EQ        1 R27 K2     ; if R27 == nil then PC := 143
134 [-]: JMP       143          ; PC := 143
135 [-]: GETTABLE  R27 R25 K48  ; R27 := R25["mInstance"]
136 [-]: SELF      R27 R27 K51  ; R28 := R27; R27 := R27["0x759B0092"]
137 [-]: MOVE      R29 R26      ; R29 := R26
138 [-]: GETUPVAL  R30 U4       ; R30 := U4
139 [-]: GETTABLE  R30 R30 R23  ; R30 := R30[R23]
140 [-]: GETTABLE  R31 R25 K50  ; R31 := R25["mUpgradeFingerprint"]
141 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
142 [-]: MOVE      R26 R27      ; R26 := R27
143 [-]: ADD       R27 R18 R26  ; R27 := R18 + R26
144 [-]: LE        0 R27 R7     ; if R27 > R7 then PC := 152
145 [-]: JMP       152          ; PC := 152
146 [-]: MOVE      R18 R27      ; R18 := R27
147 [-]: GETTABLE  R28 R25 K14  ; R28 := R25["mItemId"]
148 [-]: SETTABLE  R24 K15 R28  ; R24["mId"] := R28
149 [-]: GETTABLE  R28 R25 K21  ; R28 := R25["mItemType"]
150 [-]: SETTABLE  R24 K52 R28  ; R24["mType"] := R28
151 [-]: JMP       162          ; PC := 162
152 [-]: GETUPVAL  R28 U6       ; R28 := U6
153 [-]: EQ        1 R28 K2     ; if R28 == nil then PC := 162
154 [-]: JMP       162          ; PC := 162
155 [-]: GETUPVAL  R28 U6       ; R28 := U6
156 [-]: EQ        0 R28 R16    ; if R28 ~= R16 then PC := 162
157 [-]: JMP       162          ; PC := 162
158 [-]: GETUPVAL  R28 U7       ; R28 := U7
159 [-]: MOVE      R29 R23      ; R29 := R23
160 [-]: MOVE      R30 R1       ; R30 := R1
161 [-]: CALL      R28 3 1      ; R28(R29,R30)
162 [-]: SETTABLE  R19 R23 R24  ; R19[R23] := R24
163 [-]: FORLOOP   R20 114      ; R20 += R22; if R20 <= R21 then begin PC := 114; R23 := R20 end
164 [-]: SELF      R28 R3 K53   ; R29 := R3; R28 := R3["0x4EE28F6"]
165 [-]: MOVE      R30 R4       ; R30 := R4
166 [-]: MOVE      R31 R16      ; R31 := R16
167 [-]: EQ        1 R11 K40    ; if R11 == 1 then PC := 170
168 [-]: JMP       170          ; PC := 170
169 [-]: MOVE      R32 R0       ; R32 := R0
170 [-]: MOVE      R32 R1       ; R32 := R1
171 [-]: MOVE      R33 R19      ; R33 := R19
172 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
173 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 108; R15 := R16 end
174 [-]: JMP       108          ; PC := 108
175 [-]: FORLOOP   R8 93        ; R8 += R10; if R8 <= R9 then begin PC := 93; R11 := R8 end
176 [-]: GETUPVAL  R28 U0       ; R28 := U0
177 [-]: GETTABLE  R28 R28 K54  ; R28 := R28["0xB11F032"]
178 [-]: LOADK     R29 K55      ; R29 := "/Lotus/Language/Menu/Polarize_Success"
179 [-]: CALL      R28 2 1      ; R28(R29)
180 [-]: GETUPVAL  R28 U8       ; R28 := U8
181 [-]: CALL      R28 1 1      ; R28()
182 [-]: JMP       187          ; PC := 187
183 [-]: GETUPVAL  R28 U0       ; R28 := U0
184 [-]: GETTABLE  R28 R28 K54  ; R28 := R28["0xB11F032"]
185 [-]: LOADK     R29 K56      ; R29 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
186 [-]: CALL      R28 2 1      ; R28(R29)
187 [-]: LOADNIL   R28 R28      ; R28 := nil
188 [-]: MOVE      R28 R9       ; R28 := R9
189 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 5390
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "Yes" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R1 K1        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PolaritySwaps"]
  5 [-]: EQ        0 R1 K3      ; if R1 ~= nil then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/Loadout_PolaritySwapConfirm"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x5AE6E363"]
 11 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 12 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3["0x5DB0BD4"]
 13 [-]: MOVE      R5 R1        ; R5 := R1
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: LOADK     R4 K8        ; R4 := "ConfirmPolarizeSwaps"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 5399
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 50
  7 [-]: JMP       50           ; PC := 50
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["PolaritySwaps"]
 10 [-]: TEST      R1 0         ; if not R1 then PC := 50
 11 [-]: JMP       50           ; PC := 50
 12 [-]: GETUPVAL  R1 U1        ; R1 := U1
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xBE56ACC"]
 14 [-]: GETUPVAL  R2 U2        ; R2 := U2
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["info"]
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["item"]
 18 [-]: GETGLOBAL R4 K3        ; R4 := _T
 19 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["upgradeItemCategory"]
 20 [-]: GETGLOBAL R5 K3        ; R5 := _T
 21 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["PolaritySwaps"]
 22 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 23 [-]: MOVE      R1 R0        ; R1 := R0
 24 [-]: GETUPVAL  R1 U3        ; R1 := U3
 25 [-]: GETUPVAL  R2 U4        ; R2 := U4
 26 [-]: GETGLOBAL R3 K3        ; R3 := _T
 27 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["ArsenalState"]
 28 [-]: GETGLOBAL R4 K10       ; R4 := Lotus_Game
 29 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["ARSENAL_STATE_PVP"]
 30 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: MOVE      R3 R0        ; R3 := R0
 33 [-]: MOVE      R3 R1        ; R3 := R1
 34 [-]: CALL      R1 3 1       ; R1(R2,R3)
 35 [-]: GETUPVAL  R1 U5        ; R1 := U5
 36 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0xAD620FC"]
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: LOADK     R4 K13       ; R4 := "OnPolarityChangesApplied"
 39 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 40 [-]: GETGLOBAL R1 K3        ; R1 := _T
 41 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["BackgroundMovie"]
 42 [-]: EQ        1 R1 K15     ; if R1 == nil then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: GETGLOBAL R1 K3        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["BackgroundMovie"]
 46 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x458F27A9"]
 47 [-]: LOADK     R3 K17       ; R3 := "ShowBlockingMessage"
 48 [-]: LOADK     R4 K18       ; R4 := "1"
 49 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 50 [-]: LOADNIL   R1 R1        ; R1 := nil
 51 [-]: MOVE      R1 R0        ; R1 := R0
 52 [-]: GETGLOBAL R1 K3        ; R1 := _T
 53 [-]: SETTABLE  R1 K19 K15   ; R1["chosenForma"] := nil
 54 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 5413
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xB11F032"]
  6 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/Loadout_SwapPolarity_WillExpire"
  7 [-]: CALL      R0 2 1       ; R0(R1)
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K2        ; R0 := mMovie
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x5FF274BB"]
 11 [-]: GETGLOBAL R2 K4        ; R2 := polarizeMovie
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: MOVE      R0 R2        ; R0 := R2
 14 [-]: GETUPVAL  R0 U2        ; R0 := U2
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x458F27A9"]
 16 [-]: LOADK     R2 K6        ; R2 := "SetCallback"
 17 [-]: LOADK     R3 K7        ; R3 := "PolarizeSwapSelected"
 18 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x458F27A9"]
 21 [-]: LOADK     R2 K8        ; R2 := "SetSwapMode"
 22 [-]: LOADK     R3 K9        ; R3 := "true"
 23 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 24 [-]: MOVE      R0 R1        ; R0 := R1
 25 [-]: MOVE      R0 R3        ; R0 := R3
 26 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 5427
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 89
  7 [-]: JMP       89           ; PC := 89
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: TEST      R1 0         ; if not R1 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: LOADK     R2 K3        ; R2 := "ScreenTitle"
 13 [-]: GETGLOBAL R3 K4        ; R3 := upgradeBigFX
 14 [-]: LOADK     R4 K5        ; R4 := 0
 15 [-]: LOADK     R5 K6        ; R5 := 360
 16 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 17 [-]: MOVE      R1 R0        ; R1 := R0
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["0xB29A6E33"]
 21 [-]: GETUPVAL  R2 U3        ; R2 := U3
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 89
 27 [-]: JMP       89           ; PC := 89
 28 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 29 [-]: GETGLOBAL R3 K9        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["upgradeItemCategory"]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: TEST      R2 1         ; if R2 then PC := 89
 33 [-]: JMP       89           ; PC := 89
 34 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 35 [-]: GETGLOBAL R3 K9        ; R3 := _T
 36 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Polarized"]
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: TEST      R2 1         ; if R2 then PC := 89
 39 [-]: JMP       89           ; PC := 89
 40 [-]: GETUPVAL  R2 U2        ; R2 := U2
 41 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xF76FF1CB"]
 42 [-]: GETUPVAL  R3 U5        ; R3 := U5
 43 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["info"]
 44 [-]: GETUPVAL  R4 U5        ; R4 := U5
 45 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["item"]
 46 [-]: MOVE      R5 R1        ; R5 := R1
 47 [-]: GETGLOBAL R6 K9        ; R6 := _T
 48 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["upgradeItemCategory"]
 49 [-]: GETGLOBAL R7 K9        ; R7 := _T
 50 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["Polarized"]
 51 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["mSlotIndex"]
 52 [-]: SUB       R7 R7 K16    ; R7 := R7 - 1
 53 [-]: GETGLOBAL R8 K9        ; R8 := _T
 54 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["Polarized"]
 55 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mPolarity"]
 56 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 57 [-]: MOVE      R2 R4        ; R2 := R4
 58 [-]: GETUPVAL  R2 U6        ; R2 := U6
 59 [-]: GETUPVAL  R3 U7        ; R3 := U7
 60 [-]: GETGLOBAL R4 K9        ; R4 := _T
 61 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["ArsenalState"]
 62 [-]: GETGLOBAL R5 K19       ; R5 := Lotus_Game
 63 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["ARSENAL_STATE_PVP"]
 64 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 67
 65 [-]: JMP       67           ; PC := 67
 66 [-]: MOVE      R4 R0        ; R4 := R0
 67 [-]: MOVE      R4 R1        ; R4 := R1
 68 [-]: CALL      R2 3 1       ; R2(R3,R4)
 69 [-]: GETGLOBAL R2 K8        ; R2 := 0x400E7765
 70 [-]: GETUPVAL  R3 U4        ; R3 := U4
 71 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 72 [-]: TEST      R2 1         ; if R2 then PC := 89
 73 [-]: JMP       89           ; PC := 89
 74 [-]: GETUPVAL  R2 U8        ; R2 := U8
 75 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0xAD620FC"]
 76 [-]: GETUPVAL  R4 U4        ; R4 := U4
 77 [-]: LOADK     R5 K22       ; R5 := "OnPolarityChangesApplied"
 78 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 79 [-]: GETGLOBAL R2 K9        ; R2 := _T
 80 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["BackgroundMovie"]
 81 [-]: EQ        1 R2 K24     ; if R2 == nil then PC := 89
 82 [-]: JMP       89           ; PC := 89
 83 [-]: GETGLOBAL R2 K9        ; R2 := _T
 84 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["BackgroundMovie"]
 85 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2["0x458F27A9"]
 86 [-]: LOADK     R4 K26       ; R4 := "ShowBlockingMessage"
 87 [-]: LOADK     R5 K27       ; R5 := "1"
 88 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 89 [-]: GETGLOBAL R2 K9        ; R2 := _T
 90 [-]: SETTABLE  R2 K28 K24   ; R2["chosenForma"] := nil
 91 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 5453
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        1 R0 K0      ; if R0 == "Yes" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Language/Menu/Loadout_PolarizeConfirm"
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["info"]
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x90FB7069"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: GETGLOBAL R4 K4        ; R4 := purchaseableFormas
 11 [-]: GETTABLE  R4 R4 K5     ; R4 := R4[2]
 12 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R3 U1        ; R3 := U1
 15 [-]: GETGLOBAL R4 K4        ; R4 := purchaseableFormas
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[5]
 17 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 40
 18 [-]: JMP       40           ; PC := 40
 19 [-]: GETGLOBAL R3 K7        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Polarized"]
 21 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSlotIndex"]
 22 [-]: EQ        1 R3 K10     ; if R3 == -1 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: GETGLOBAL R3 K7        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Polarized"]
 26 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSlotIndex"]
 27 [-]: GETTABLE  R3 R2 R3     ; R3 := R2[R3]
 28 [-]: GETGLOBAL R4 K7        ; R4 := _T
 29 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["Polarized"]
 30 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mPolarity"]
 31 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETUPVAL  R3 U2        ; R3 := U2
 34 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0x38ECFE60"]
 35 [-]: LOADK     R4 K13       ; R4 := "/Lotus/Language/Menu/Loadout_MustPolarize"
 36 [-]: CALL      R3 2 1       ; R3(R4)
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADK     R1 K14       ; R1 := "/Lotus/Language/Menu/Loadout_PolarizeNoRankConfirm"
 40 [-]: GETGLOBAL R3 K7        ; R3 := _T
 41 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Polarized"]
 42 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSlotIndex"]
 43 [-]: EQ        1 R3 K10     ; if R3 == -1 then PC := 54
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETGLOBAL R3 K7        ; R3 := _T
 46 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Polarized"]
 47 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSlotIndex"]
 48 [-]: GETTABLE  R3 R2 R3     ; R3 := R2[R3]
 49 [-]: GETGLOBAL R4 K7        ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["Polarized"]
 51 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mPolarity"]
 52 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADK     R1 K15       ; R1 := "/Lotus/Language/Menu/Loadout_PolarizeConfirmNoChange"
 55 [-]: GETGLOBAL R3 K16       ; R3 := 0x7C282057
 56 [-]: GETUPVAL  R4 U1        ; R4 := U1
 57 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 58 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 59 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 60 [-]: SELF      R6 R3 K19    ; R7 := R3; R6 := R3["0x616C74B6"]
 61 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 62 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6["0x5EC7A3D2"]
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 66 [-]: GETUPVAL  R5 U2        ; R5 := U2
 67 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["0x5AE6E363"]
 68 [-]: GETGLOBAL R6 K17       ; R6 := mMovie
 69 [-]: SELF      R6 R6 K18    ; R7 := R6; R6 := R6["0x5DB0BD4"]
 70 [-]: MOVE      R8 R1        ; R8 := R1
 71 [-]: MOVE      R9 R0        ; R9 := R0
 72 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 73 [-]: SETTABLE  R10 K22 R4   ; R10["ITEM"] := R4
 74 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 75 [-]: LOADK     R7 K23       ; R7 := "ConfirmPolarizeChanges"
 76 [-]: CALL      R5 3 1       ; R5(R6,R7)
 77 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 5478
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MenuSuitAvatar"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: TEST      R0 0         ; if not R0 then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5134D43C"]
 18 [-]: GETUPVAL  R3 U0        ; R3 := U0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: GETGLOBAL R1 K1        ; R1 := _T
 21 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
 22 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x24AE62CF"]
 23 [-]: GETUPVAL  R3 U2        ; R3 := U2
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 26 [-]: GETGLOBAL R2 K1        ; R2 := _T
 27 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["KDriveAvatar"]
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 63
 30 [-]: JMP       63           ; PC := 63
 31 [-]: GETGLOBAL R1 K1        ; R1 := _T
 32 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["KDriveAvatar"]
 33 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x24AE62CF"]
 34 [-]: GETUPVAL  R3 U2        ; R3 := U2
 35 [-]: CALL      R1 3 1       ; R1(R2,R3)
 36 [-]: JMP       63           ; PC := 63
 37 [-]: GETUPVAL  R1 U1        ; R1 := U1
 38 [-]: CALL      R1 1 2       ; R1 := R1()
 39 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5134D43C"]
 40 [-]: LOADNIL   R3 R3        ; R3 := nil
 41 [-]: CALL      R1 3 1       ; R1(R2,R3)
 42 [-]: GETGLOBAL R1 K1        ; R1 := _T
 43 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
 44 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xF1508457"]
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: MOVE      R1 R2        ; R1 := R2
 47 [-]: GETGLOBAL R1 K1        ; R1 := _T
 48 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["MenuSuitAvatar"]
 49 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x24AE62CF"]
 50 [-]: MOVE      R3 R0        ; R3 := R0
 51 [-]: CALL      R1 3 1       ; R1(R2,R3)
 52 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 53 [-]: GETGLOBAL R2 K1        ; R2 := _T
 54 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["KDriveAvatar"]
 55 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 56 [-]: TEST      R1 1         ; if R1 then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETGLOBAL R1 K1        ; R1 := _T
 59 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["KDriveAvatar"]
 60 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x24AE62CF"]
 61 [-]: MOVE      R3 R0        ; R3 := R0
 62 [-]: CALL      R1 3 1       ; R1(R2,R3)
 63 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 5499
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 1         ; if R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x61494587"]
  5 [-]: LOADK     R3 K1        ; R3 := 0.0099999997764826
  6 [-]: CLOSURE   R4 0         ; R4 := closure(Function #159.1)
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5FF274BB"]
 15 [-]: GETGLOBAL R3 K4        ; R3 := _G
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMovie_ItemBrowsingMovie"]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: MOVE      R1 R3        ; R1 := R3
 19 [-]: GETUPVAL  R1 U3        ; R1 := U3
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 21 [-]: LOADK     R3 K7        ; R3 := "SetTitle"
 22 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 23 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 24 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/Loadout_Select_Forma"
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R1 0 1       ; R1(R2,...)
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 30 [-]: LOADK     R3 K10       ; R3 := "SetHideCountThreshold"
 31 [-]: LOADK     R4 K11       ; R4 := 0
 32 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 35 [-]: LOADK     R3 K12       ; R3 := "SetRequiredSelections"
 36 [-]: LOADK     R4 K13       ; R4 := 1
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: GETUPVAL  R1 U3        ; R1 := U3
 39 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 40 [-]: LOADK     R3 K14       ; R3 := "SetExitCallout"
 41 [-]: LOADK     R4 K15       ; R4 := "/Lotus/Language/Menu/Loadout_Lens_Install"
 42 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 43 [-]: GETGLOBAL R1 K16       ; R1 := _T
 44 [-]: CLOSURE   R2 1         ; R2 := closure(Function #159.2)
 45 [-]: GETUPVAL  R0 U2        ; R0 := U2
 46 [-]: GETUPVAL  R0 U4        ; R0 := U4
 47 [-]: SETTABLE  R1 K17 R2    ; R1["FormaBrowseDone"] := R2
 48 [-]: GETUPVAL  R1 U3        ; R1 := U3
 49 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 50 [-]: LOADK     R3 K18       ; R3 := "SetCallBack"
 51 [-]: LOADK     R4 K17       ; R4 := "FormaBrowseDone"
 52 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 53 [-]: GETGLOBAL R1 K16       ; R1 := _T
 54 [-]: CLOSURE   R2 2         ; R2 := closure(Function #159.3)
 55 [-]: SETTABLE  R1 K19 R2    ; R1["GetFormaSorting"] := R2
 56 [-]: GETUPVAL  R1 U3        ; R1 := U3
 57 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 58 [-]: LOADK     R3 K20       ; R3 := "SetSortByFunction"
 59 [-]: LOADK     R4 K19       ; R4 := "GetFormaSorting"
 60 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 61 [-]: GETGLOBAL R1 K16       ; R1 := _T
 62 [-]: CLOSURE   R2 3         ; R2 := closure(Function #159.4)
 63 [-]: GETUPVAL  R0 U5        ; R0 := U5
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U7        ; R0 := U7
 66 [-]: SETTABLE  R1 K21 R2    ; R1["GetForma"] := R2
 67 [-]: GETUPVAL  R1 U3        ; R1 := U3
 68 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 69 [-]: LOADK     R3 K22       ; R3 := "SetElementsFunction"
 70 [-]: LOADK     R4 K21       ; R4 := "GetForma"
 71 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 72 [-]: RETURN    R0 1         ; return 


; Function #159.1:
;
; Name:            
; Defined at line: 5504
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #159.2:
;
; Name:            
; Defined at line: 5519
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R1        ; R2 := R1
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0[1]
  7 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 24
  8 [-]: JMP       24           ; PC := 24
  9 [-]: GETTABLE  R1 R0 K1     ; R1 := R0[1]
 10 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["StoreItem"]
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3077BE70"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: GETGLOBAL R2 K4        ; R2 := _T
 17 [-]: GETUPVAL  R3 U1        ; R3 := U1
 18 [-]: SETTABLE  R2 K5 R3     ; R2["chosenForma"] := R3
 19 [-]: GETGLOBAL R2 K6        ; R2 := mMovie
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x458F27A9"]
 21 [-]: LOADK     R4 K8        ; R4 := "PolarizeItem"
 22 [-]: LOADK     R5 K9        ; R5 := ""
 23 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 24 [-]: RETURN    R0 1         ; return 


; Function #159.3:
;
; Name:            
; Defined at line: 5534
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  6 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
  8 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Menu/Store_Owned"
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 11 [-]: SETTABLE  R3 K2 R4     ; R3["Name"] := R4
 12 [-]: SETTABLE  R3 K6 K7     ; R3["SortId"] := "OWNED"
 13 [-]: CLOSURE   R4 0         ; R4 := closure(Function #159.3.1)
 14 [-]: SETTABLE  R3 K8 R4     ; R3["Attribute"] := R4
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := table
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 20 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 22 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/SortBy_Name"
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: SETTABLE  R3 K2 R4     ; R3["Name"] := R4
 26 [-]: SETTABLE  R3 K6 K10    ; R3["SortId"] := "NAME"
 27 [-]: SETTABLE  R3 K8 K2     ; R3["Attribute"] := "Name"
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: MOVE      R1 R0        ; R1 := R0
 30 [-]: LOADK     R2 K7        ; R2 := "OWNED"
 31 [-]: RETURN    R1 3         ; return R1,R2
 32 [-]: RETURN    R0 1         ; return 


; Function #159.3.1:
;
; Name:            
; Defined at line: 5537
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Count"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Count"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Count"]
  6 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Count"]
  7 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Name"]
 13 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Name"]
 14 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #159.4:
;
; Name:            
; Defined at line: 5551
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x654F1092"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: MOVE      R0 R4        ; R0 := R4
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0["0x6F2E05FD"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x3329FBFF"]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R2 R4        ; R2 := R4
 23 [-]: LOADK     R4 K4        ; R4 := 1
 24 [-]: LEN       R5 R2        ; R5 := # R2
 25 [-]: LOADK     R6 K4        ; R6 := 1
 26 [-]: FORPREP   R4 128       ; R4 -= R6; PC := 128
 27 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 28 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemType"]
 29 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x8B598ED4"]
 30 [-]: GETGLOBAL R11 K7       ; R11 := purchaseableFormas
 31 [-]: GETTABLE  R11 R11 K4   ; R11 := R11[1]
 32 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 33 [-]: TEST      R9 0         ; if not R9 then PC := 128
 34 [-]: JMP       128          ; PC := 128
 35 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["mItemCount"]
 36 [-]: LT        0 K9 R9      ; if 0 >= R9 then PC := 128
 37 [-]: JMP       128          ; PC := 128
 38 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemType"]
 39 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x8B598ED4"]
 40 [-]: GETGLOBAL R11 K7       ; R11 := purchaseableFormas
 41 [-]: GETTABLE  R11 R11 K10  ; R11 := R11[2]
 42 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 43 [-]: TEST      R9 1         ; if R9 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemType"]
 46 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x8B598ED4"]
 47 [-]: GETGLOBAL R11 K7       ; R11 := purchaseableFormas
 48 [-]: GETTABLE  R11 R11 K11  ; R11 := R11[5]
 49 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 50 [-]: GETUPVAL  R10 U1       ; R10 := U1
 51 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["info"]
 52 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["mItemType"]
 53 [-]: SELF      R10 R10 K6   ; R11 := R10; R10 := R10["0x8B598ED4"]
 54 [-]: GETGLOBAL R12 K13      ; R12 := gPowerSuitType
 55 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 56 [-]: TEST      R10 0        ; if not R10 then PC := 76
 57 [-]: JMP       76           ; PC := 76
 58 [-]: GETUPVAL  R10 U1       ; R10 := U1
 59 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["info"]
 60 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["mItemType"]
 61 [-]: SELF      R10 R10 K6   ; R11 := R10; R10 := R10["0x8B598ED4"]
 62 [-]: GETGLOBAL R12 K14      ; R12 := gSentinelPowerSuitType
 63 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 64 [-]: TEST      R10 1        ; if R10 then PC := 74
 65 [-]: JMP       74           ; PC := 74
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["info"]
 68 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["mItemType"]
 69 [-]: SELF      R10 R10 K6   ; R11 := R10; R10 := R10["0x8B598ED4"]
 70 [-]: GETGLOBAL R12 K15      ; R12 := gFlightJetPackItemType
 71 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 72 [-]: MOVE      R10 R10      ; R10 := R10
 73 [-]: JMP       76           ; PC := 76
 74 [-]: MOVE      R10 R0       ; R10 := R0
 75 [-]: MOVE      R10 R1       ; R10 := R1
 76 [-]: TEST      R9 0         ; if not R9 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: TEST      R10 0        ; if not R10 then PC := 128
 79 [-]: JMP       128          ; PC := 128
 80 [-]: GETUPVAL  R11 U2       ; R11 := U2
 81 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x62FBC1B8"]
 82 [-]: GETTABLE  R13 R8 K5    ; R13 := R8["mItemType"]
 83 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 84 [-]: GETGLOBAL R12 K0       ; R12 := 0x400E7765
 85 [-]: MOVE      R13 R11      ; R13 := R11
 86 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 87 [-]: TEST      R12 1        ; if R12 then PC := 128
 88 [-]: JMP       128          ; PC := 128
 89 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 90 [-]: SETTABLE  R12 K17 R11  ; R12["StoreItem"] := R11
 91 [-]: GETGLOBAL R13 K19      ; R13 := mMovie
 92 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5DB0BD4"]
 93 [-]: SELF      R15 R11 K21  ; R16 := R11; R15 := R11["0x616C74B6"]
 94 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 95 [-]: SELF      R15 R15 K22  ; R16 := R15; R15 := R15["0x5EC7A3D2"]
 96 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 97 [-]: MOVE      R16 R0       ; R16 := R0
 98 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 99 [-]: SETTABLE  R12 K18 R13  ; R12["Name"] := R13
100 [-]: GETGLOBAL R13 K19      ; R13 := mMovie
101 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5DB0BD4"]
102 [-]: SELF      R15 R11 K24  ; R16 := R11; R15 := R11["0x42300EB5"]
103 [-]: CALL      R15 2 2      ; R15 := R15(R16)
104 [-]: SELF      R15 R15 K22  ; R16 := R15; R15 := R15["0x5EC7A3D2"]
105 [-]: CALL      R15 2 2      ; R15 := R15(R16)
106 [-]: MOVE      R16 R0       ; R16 := R0
107 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
108 [-]: SETTABLE  R12 K23 R13  ; R12["Description"] := R13
109 [-]: SELF      R13 R11 K26  ; R14 := R11; R13 := R11["0xF1A9732E"]
110 [-]: CALL      R13 2 2      ; R13 := R13(R14)
111 [-]: SETTABLE  R12 K25 R13  ; R12["Icon"] := R13
112 [-]: GETTABLE  R13 R8 K8    ; R13 := R8["mItemCount"]
113 [-]: SETTABLE  R12 K27 R13  ; R12["Count"] := R13
114 [-]: GETGLOBAL R13 K19      ; R13 := mMovie
115 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13["0x5DB0BD4"]
116 [-]: LOADK     R15 K29      ; R15 := "/Lotus/Language/Menu/Loadout_ConfirmLensInstall"
117 [-]: MOVE      R16 R0       ; R16 := R0
118 [-]: NEWTABLE  R17 0 1      ; R17 := {}
119 [-]: GETTABLE  R18 R12 K18  ; R18 := R12["Name"]
120 [-]: SETTABLE  R17 K30 R18  ; R17["LENS"] := R18
121 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
122 [-]: SETTABLE  R12 K28 R13  ; R12["ConfirmPopupText"] := R13
123 [-]: GETGLOBAL R13 K31      ; R13 := table
124 [-]: GETTABLE  R13 R13 K32  ; R13 := R13["0xE6450C9D"]
125 [-]: MOVE      R14 R3       ; R14 := R3
126 [-]: MOVE      R15 R12      ; R15 := R12
127 [-]: CALL      R13 3 1      ; R13(R14,R15)
128 [-]: FORLOOP   R4 27        ; R4 += R6; if R4 <= R5 then begin PC := 27; R7 := R4 end
129 [-]: GETUPVAL  R13 U1       ; R13 := U1
130 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["info"]
131 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["mItemType"]
132 [-]: SELF      R13 R13 K6   ; R14 := R13; R13 := R13["0x8B598ED4"]
133 [-]: GETGLOBAL R15 K13      ; R15 := gPowerSuitType
134 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
135 [-]: TEST      R13 0        ; if not R13 then PC := 155
136 [-]: JMP       155          ; PC := 155
137 [-]: GETUPVAL  R13 U1       ; R13 := U1
138 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["info"]
139 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["mItemType"]
140 [-]: SELF      R13 R13 K6   ; R14 := R13; R13 := R13["0x8B598ED4"]
141 [-]: GETGLOBAL R15 K14      ; R15 := gSentinelPowerSuitType
142 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
143 [-]: TEST      R13 1        ; if R13 then PC := 153
144 [-]: JMP       153          ; PC := 153
145 [-]: GETUPVAL  R13 U1       ; R13 := U1
146 [-]: GETTABLE  R13 R13 K12  ; R13 := R13["info"]
147 [-]: GETTABLE  R13 R13 K5   ; R13 := R13["mItemType"]
148 [-]: SELF      R13 R13 K6   ; R14 := R13; R13 := R13["0x8B598ED4"]
149 [-]: GETGLOBAL R15 K15      ; R15 := gFlightJetPackItemType
150 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
151 [-]: MOVE      R13 R13      ; R13 := R13
152 [-]: JMP       155          ; PC := 155
153 [-]: MOVE      R13 R0       ; R13 := R0
154 [-]: MOVE      R13 R1       ; R13 := R1
155 [-]: LOADK     R14 K4       ; R14 := 1
156 [-]: GETGLOBAL R15 K7       ; R15 := purchaseableFormas
157 [-]: LEN       R15 R15      ; R15 := # R15
158 [-]: LOADK     R16 K4       ; R16 := 1
159 [-]: FORPREP   R14 238      ; R14 -= R16; PC := 238
160 [-]: EQ        0 R17 K10    ; if R17 ~= 2 then PC := 166
161 [-]: JMP       166          ; PC := 166
162 [-]: EQ        0 R17 K10    ; if R17 ~= 2 then PC := 238
163 [-]: JMP       238          ; PC := 238
164 [-]: TEST      R13 0        ; if not R13 then PC := 238
165 [-]: JMP       238          ; PC := 238
166 [-]: GETUPVAL  R18 U2       ; R18 := U2
167 [-]: SELF      R18 R18 K16  ; R19 := R18; R18 := R18["0x62FBC1B8"]
168 [-]: GETGLOBAL R20 K7       ; R20 := purchaseableFormas
169 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
170 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
171 [-]: GETGLOBAL R19 K0       ; R19 := 0x400E7765
172 [-]: MOVE      R20 R18      ; R20 := R18
173 [-]: CALL      R19 2 2      ; R19 := R19(R20)
174 [-]: TEST      R19 1        ; if R19 then PC := 238
175 [-]: JMP       238          ; PC := 238
176 [-]: MOVE      R19 R0       ; R19 := R0
177 [-]: LOADK     R20 K4       ; R20 := 1
178 [-]: LEN       R21 R3       ; R21 := # R3
179 [-]: LOADK     R22 K4       ; R22 := 1
180 [-]: FORPREP   R20 187      ; R20 -= R22; PC := 187
181 [-]: GETTABLE  R24 R3 R23   ; R24 := R3[R23]
182 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["StoreItem"]
183 [-]: EQ        0 R24 R18    ; if R24 ~= R18 then PC := 187
184 [-]: JMP       187          ; PC := 187
185 [-]: MOVE      R19 R1       ; R19 := R1
186 [-]: JMP       188          ; PC := 188
187 [-]: FORLOOP   R20 181      ; R20 += R22; if R20 <= R21 then begin PC := 181; R23 := R20 end
188 [-]: TEST      R19 1        ; if R19 then PC := 238
189 [-]: JMP       238          ; PC := 238
190 [-]: SELF      R24 R18 K33  ; R25 := R18; R24 := R18["0x7D5774ED"]
191 [-]: CALL      R24 2 2      ; R24 := R24(R25)
192 [-]: TEST      R24 0        ; if not R24 then PC := 238
193 [-]: JMP       238          ; PC := 238
194 [-]: NEWTABLE  R24 0 1      ; R24 := {}
195 [-]: SETTABLE  R24 K17 R18  ; R24["StoreItem"] := R18
196 [-]: GETGLOBAL R25 K19      ; R25 := mMovie
197 [-]: SELF      R25 R25 K20  ; R26 := R25; R25 := R25["0x5DB0BD4"]
198 [-]: SELF      R27 R18 K21  ; R28 := R18; R27 := R18["0x616C74B6"]
199 [-]: CALL      R27 2 2      ; R27 := R27(R28)
200 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x5EC7A3D2"]
201 [-]: CALL      R27 2 2      ; R27 := R27(R28)
202 [-]: MOVE      R28 R0       ; R28 := R0
203 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
204 [-]: SETTABLE  R24 K18 R25  ; R24["Name"] := R25
205 [-]: GETGLOBAL R25 K19      ; R25 := mMovie
206 [-]: SELF      R25 R25 K20  ; R26 := R25; R25 := R25["0x5DB0BD4"]
207 [-]: SELF      R27 R18 K24  ; R28 := R18; R27 := R18["0x42300EB5"]
208 [-]: CALL      R27 2 2      ; R27 := R27(R28)
209 [-]: SELF      R27 R27 K22  ; R28 := R27; R27 := R27["0x5EC7A3D2"]
210 [-]: CALL      R27 2 2      ; R27 := R27(R28)
211 [-]: MOVE      R28 R0       ; R28 := R0
212 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
213 [-]: SETTABLE  R24 K23 R25  ; R24["Description"] := R25
214 [-]: SELF      R25 R18 K26  ; R26 := R18; R25 := R18["0xF1A9732E"]
215 [-]: CALL      R25 2 2      ; R25 := R25(R26)
216 [-]: SETTABLE  R24 K25 R25  ; R24["Icon"] := R25
217 [-]: SELF      R25 R18 K35  ; R26 := R18; R25 := R18["0x41604216"]
218 [-]: CALL      R25 2 2      ; R25 := R25(R26)
219 [-]: SETTABLE  R24 K34 R25  ; R24["RegularPrice"] := R25
220 [-]: SELF      R25 R18 K37  ; R26 := R18; R25 := R18["0xE5B2203D"]
221 [-]: CALL      R25 2 2      ; R25 := R25(R26)
222 [-]: SETTABLE  R24 K36 R25  ; R24["PremiumPrice"] := R25
223 [-]: SETTABLE  R24 K27 K9   ; R24["Count"] := 0
224 [-]: GETGLOBAL R25 K19      ; R25 := mMovie
225 [-]: SELF      R25 R25 K20  ; R26 := R25; R25 := R25["0x5DB0BD4"]
226 [-]: LOADK     R27 K38      ; R27 := "/Lotus/Language/Menu/Loadout_ConfirmLensPurchaseAndInstall"
227 [-]: MOVE      R28 R0       ; R28 := R0
228 [-]: NEWTABLE  R29 0 1      ; R29 := {}
229 [-]: GETTABLE  R30 R24 K18  ; R30 := R24["Name"]
230 [-]: SETTABLE  R29 K30 R30  ; R29["LENS"] := R30
231 [-]: CALL      R25 5 2      ; R25 := R25(R26,R27,R28,R29)
232 [-]: SETTABLE  R24 K28 R25  ; R24["ConfirmPopupText"] := R25
233 [-]: GETGLOBAL R25 K31      ; R25 := table
234 [-]: GETTABLE  R25 R25 K32  ; R25 := R25["0xE6450C9D"]
235 [-]: MOVE      R26 R1       ; R26 := R1
236 [-]: MOVE      R27 R24      ; R27 := R24
237 [-]: CALL      R25 3 1      ; R25(R26,R27)
238 [-]: FORLOOP   R14 160      ; R14 += R16; if R14 <= R15 then begin PC := 160; R17 := R14 end
239 [-]: LOADK     R25 K4       ; R25 := 1
240 [-]: LEN       R26 R3       ; R26 := # R3
241 [-]: LOADK     R27 K4       ; R27 := 1
242 [-]: FORPREP   R25 248      ; R25 -= R27; PC := 248
243 [-]: GETGLOBAL R29 K31      ; R29 := table
244 [-]: GETTABLE  R29 R29 K32  ; R29 := R29["0xE6450C9D"]
245 [-]: MOVE      R30 R1       ; R30 := R1
246 [-]: GETTABLE  R31 R3 R28   ; R31 := R3[R28]
247 [-]: CALL      R29 3 1      ; R29(R30,R31)
248 [-]: FORLOOP   R25 243      ; R25 += R27; if R25 <= R26 then begin PC := 243; R28 := R25 end
249 [-]: RETURN    R1 2         ; return R1
250 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 5628
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: TEST      R1 0         ; if not R1 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R1 U3        ; R1 := U3
 10 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xB11F032"]
 11 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/Loadout_Polarize_WillExpire"
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 15 [-]: GETGLOBAL R2 K3        ; R2 := _T
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["chosenForma"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 138
 19 [-]: JMP       138          ; PC := 138
 20 [-]: GETGLOBAL R1 K5        ; R1 := purchaseableFormas
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1[1]
 22 [-]: GETUPVAL  R2 U4        ; R2 := U4
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: LOADK     R3 K7        ; R3 := 0
 26 [-]: LOADK     R4 K8        ; R4 := 2
 27 [-]: GETGLOBAL R5 K5        ; R5 := purchaseableFormas
 28 [-]: LEN       R5 R5        ; R5 := # R5
 29 [-]: LOADK     R6 K6        ; R6 := 1
 30 [-]: FORPREP   R4 37        ; R4 -= R6; PC := 37
 31 [-]: GETUPVAL  R8 U4        ; R8 := U4
 32 [-]: GETGLOBAL R9 K5        ; R9 := purchaseableFormas
 33 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
 34 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 35 [-]: GETTABLE  R8 R8 K8     ; R8 := R8[2]
 36 [-]: ADD       R3 R3 R8     ; R3 := R3 + R8
 37 [-]: FORLOOP   R4 31        ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
 38 [-]: GETTABLE  R8 R2 K8     ; R8 := R2[2]
 39 [-]: SUB       R8 R8 R3     ; R8 := R8 - R3
 40 [-]: SETTABLE  R2 K8 R8     ; R2[2] := R8
 41 [-]: GETTABLE  R8 R2 K8     ; R8 := R2[2]
 42 [-]: GETTABLE  R9 R2 K6     ; R9 := R2[1]
 43 [-]: LT        0 R8 R9      ; if R8 >= R9 then PC := 138
 44 [-]: JMP       138          ; PC := 138
 45 [-]: GETUPVAL  R8 U5        ; R8 := U5
 46 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8["0xFED851F6"]
 47 [-]: MOVE      R10 R1       ; R10 := R1
 48 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 49 [-]: GETGLOBAL R9 K10       ; R9 := 0x7C282057
 50 [-]: LOADK     R10 K11      ; R10 := "/Lotus/Types/StoreItems/Packages/FormaPack"
 51 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 52 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 53 [-]: MOVE      R11 R8       ; R11 := R8
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 1        ; if R10 then PC := 137
 56 [-]: JMP       137          ; PC := 137
 57 [-]: GETGLOBAL R10 K2       ; R10 := 0x400E7765
 58 [-]: MOVE      R11 R9       ; R11 := R9
 59 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 60 [-]: TEST      R10 1        ; if R10 then PC := 137
 61 [-]: JMP       137          ; PC := 137
 62 [-]: GETGLOBAL R10 K12      ; R10 := mMovie
 63 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10["0x5DB0BD4"]
 64 [-]: GETGLOBAL R12 K14      ; R12 := 0x9FAED6BC
 65 [-]: SELF      R13 R8 K15   ; R14 := R8; R13 := R8["0x616C74B6"]
 66 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 67 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 68 [-]: MOVE      R13 R0       ; R13 := R0
 69 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 70 [-]: GETUPVAL  R11 U6       ; R11 := U6
 71 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["0xC5BE56F"]
 72 [-]: MOVE      R12 R8       ; R12 := R8
 73 [-]: LOADNIL   R13 R13      ; R13 := nil
 74 [-]: MOVE      R14 R1       ; R14 := R1
 75 [-]: CALL      R11 4 3      ; R11,R12 := R11(R12,R13,R14)
 76 [-]: LOADK     R13 K17      ; R13 := "1 x "
 77 [-]: MOVE      R14 R10      ; R14 := R10
 78 [-]: LOADK     R15 K18      ; R15 := " <PLATINUM_CREDITS>"
 79 [-]: MOVE      R16 R12      ; R16 := R12
 80 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 81 [-]: SELF      R14 R9 K19   ; R15 := R9; R14 := R9["0xEC2A2A3C"]
 82 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 83 [-]: GETUPVAL  R15 U6       ; R15 := U6
 84 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["0xC5BE56F"]
 85 [-]: MOVE      R16 R9       ; R16 := R9
 86 [-]: LOADNIL   R17 R17      ; R17 := nil
 87 [-]: MOVE      R18 R1       ; R18 := R1
 88 [-]: CALL      R15 4 3      ; R15,R16 := R15(R16,R17,R18)
 89 [-]: GETGLOBAL R17 K12      ; R17 := mMovie
 90 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0x5DB0BD4"]
 91 [-]: GETGLOBAL R19 K14      ; R19 := 0x9FAED6BC
 92 [-]: SELF      R20 R9 K15   ; R21 := R9; R20 := R9["0x616C74B6"]
 93 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
 94 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
 95 [-]: MOVE      R20 R0       ; R20 := R0
 96 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 97 [-]: LOADK     R18 K18      ; R18 := " <PLATINUM_CREDITS>"
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
100 [-]: LEN       R18 R14      ; R18 := # R14
101 [-]: EQ        0 R18 K6     ; if R18 ~= 1 then PC := 113
102 [-]: JMP       113          ; PC := 113
103 [-]: GETTABLE  R18 R14 K6   ; R18 := R14[1]
104 [-]: GETTABLE  R19 R18 K20  ; R19 := R18["mTypeName"]
105 [-]: EQ        0 R19 R8     ; if R19 ~= R8 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETTABLE  R19 R18 K21  ; R19 := R18["mPurchaseQuantity"]
108 [-]: LOADK     R20 K22      ; R20 := " x "
109 [-]: MOVE      R21 R10      ; R21 := R10
110 [-]: LOADK     R22 K18      ; R22 := " <PLATINUM_CREDITS>"
111 [-]: MOVE      R23 R16      ; R23 := R16
112 [-]: CONCAT    R17 R19 R23  ; R17 := R19 .. R20 .. R21 .. R22 .. R23
113 [-]: GETGLOBAL R19 K23      ; R19 := Engine
114 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["0xF271473D"]
115 [-]: CALL      R19 1 2      ; R19 := R19()
116 [-]: GETGLOBAL R20 K23      ; R20 := Engine
117 [-]: GETTABLE  R20 R20 K26  ; R20 := R20["ThreeOptions"]
118 [-]: SETTABLE  R19 K25 R20  ; R19["dialogType"] := R20
119 [-]: GETGLOBAL R20 K12      ; R20 := mMovie
120 [-]: SELF      R20 R20 K13  ; R21 := R20; R20 := R20["0x5DB0BD4"]
121 [-]: LOADK     R22 K28      ; R22 := "/Lotus/Language/Menu/Global_PurchaseConfirmationSimple"
122 [-]: MOVE      R23 R1       ; R23 := R1
123 [-]: NEWTABLE  R24 0 1      ; R24 := {}
124 [-]: SETTABLE  R24 K29 R10  ; R24["ITEM"] := R10
125 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
126 [-]: SETTABLE  R19 K27 R20  ; R19["locString"] := R20
127 [-]: SETTABLE  R19 K30 R13  ; R19["firstString"] := R13
128 [-]: SETTABLE  R19 K31 R17  ; R19["secondString"] := R17
129 [-]: SETTABLE  R19 K32 K33  ; R19["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
130 [-]: SELF      R20 R19 K34  ; R21 := R19; R20 := R19["0x69A4A158"]
131 [-]: LOADK     R22 K35      ; R22 := "ConfirmPolarizeItemChoice"
132 [-]: CALL      R20 3 1      ; R20(R21,R22)
133 [-]: GETUPVAL  R20 U3       ; R20 := U3
134 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["0x82F0B112"]
135 [-]: MOVE      R21 R19      ; R21 := R19
136 [-]: CALL      R20 2 1      ; R20(R21)
137 [-]: RETURN    R0 1         ; return 
138 [-]: GETUPVAL  R20 U7       ; R20 := U7
139 [-]: GETTABLE  R20 R20 K37  ; R20 := R20["info"]
140 [-]: GETTABLE  R20 R20 K38  ; R20 := R20["mItemType"]
141 [-]: SELF      R20 R20 K39  ; R21 := R20; R20 := R20["0x8B598ED4"]
142 [-]: GETGLOBAL R22 K40      ; R22 := gPowerSuitType
143 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
144 [-]: TEST      R20 0        ; if not R20 then PC := 164
145 [-]: JMP       164          ; PC := 164
146 [-]: GETUPVAL  R20 U7       ; R20 := U7
147 [-]: GETTABLE  R20 R20 K37  ; R20 := R20["info"]
148 [-]: GETTABLE  R20 R20 K38  ; R20 := R20["mItemType"]
149 [-]: SELF      R20 R20 K39  ; R21 := R20; R20 := R20["0x8B598ED4"]
150 [-]: GETGLOBAL R22 K41      ; R22 := gSentinelPowerSuitType
151 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
152 [-]: TEST      R20 1        ; if R20 then PC := 162
153 [-]: JMP       162          ; PC := 162
154 [-]: GETUPVAL  R20 U7       ; R20 := U7
155 [-]: GETTABLE  R20 R20 K37  ; R20 := R20["info"]
156 [-]: GETTABLE  R20 R20 K38  ; R20 := R20["mItemType"]
157 [-]: SELF      R20 R20 K39  ; R21 := R20; R20 := R20["0x8B598ED4"]
158 [-]: GETGLOBAL R22 K42      ; R22 := gFlightJetPackItemType
159 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
160 [-]: MOVE      R20 R20      ; R20 := R20
161 [-]: JMP       164          ; PC := 164
162 [-]: MOVE      R20 R0       ; R20 := R0
163 [-]: MOVE      R20 R1       ; R20 := R1
164 [-]: GETGLOBAL R21 K2       ; R21 := 0x400E7765
165 [-]: GETGLOBAL R22 K3       ; R22 := _T
166 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["chosenForma"]
167 [-]: CALL      R21 2 2      ; R21 := R21(R22)
168 [-]: TEST      R21 1        ; if R21 then PC := 256
169 [-]: JMP       256          ; PC := 256
170 [-]: GETGLOBAL R21 K3       ; R21 := _T
171 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["chosenForma"]
172 [-]: GETGLOBAL R22 K5       ; R22 := purchaseableFormas
173 [-]: GETTABLE  R22 R22 K8   ; R22 := R22[2]
174 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 182
175 [-]: JMP       182          ; PC := 182
176 [-]: GETGLOBAL R21 K3       ; R21 := _T
177 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["chosenForma"]
178 [-]: GETGLOBAL R22 K5       ; R22 := purchaseableFormas
179 [-]: GETTABLE  R22 R22 K43  ; R22 := R22[5]
180 [-]: EQ        0 R21 R22    ; if R21 ~= R22 then PC := 256
181 [-]: JMP       256          ; PC := 256
182 [-]: TEST      R20 0        ; if not R20 then PC := 256
183 [-]: JMP       256          ; PC := 256
184 [-]: GETUPVAL  R21 U8       ; R21 := U8
185 [-]: GETGLOBAL R22 K3       ; R22 := _T
186 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["chosenForma"]
187 [-]: GETGLOBAL R23 K5       ; R23 := purchaseableFormas
188 [-]: GETTABLE  R23 R23 K43  ; R23 := R23[5]
189 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 192
190 [-]: JMP       192          ; PC := 192
191 [-]: GETUPVAL  R21 U9       ; R21 := U9
192 [-]: GETUPVAL  R22 U10      ; R22 := U10
193 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
194 [-]: GETGLOBAL R23 K44      ; R23 := Lotus_Game
195 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["AP_ANY"]
196 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 220
197 [-]: JMP       220          ; PC := 220
198 [-]: GETGLOBAL R22 K12      ; R22 := mMovie
199 [-]: SELF      R22 R22 K13  ; R23 := R22; R22 := R22["0x5DB0BD4"]
200 [-]: LOADK     R24 K46      ; R24 := "/Lotus/Language/Menu/Loadout_AuraAlreadyPolarized"
201 [-]: MOVE      R25 R0       ; R25 := R0
202 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
203 [-]: GETGLOBAL R23 K3       ; R23 := _T
204 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["chosenForma"]
205 [-]: GETGLOBAL R24 K5       ; R24 := purchaseableFormas
206 [-]: GETTABLE  R24 R24 K43  ; R24 := R24[5]
207 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 215
208 [-]: JMP       215          ; PC := 215
209 [-]: GETGLOBAL R23 K12      ; R23 := mMovie
210 [-]: SELF      R23 R23 K13  ; R24 := R23; R23 := R23["0x5DB0BD4"]
211 [-]: LOADK     R25 K47      ; R25 := "/Lotus/Language/Menu/Loadout_ExilusAlreadyPolarized"
212 [-]: MOVE      R26 R0       ; R26 := R0
213 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
214 [-]: MOVE      R22 R23      ; R22 := R23
215 [-]: GETUPVAL  R23 U3       ; R23 := U3
216 [-]: GETTABLE  R23 R23 K48  ; R23 := R23["0x38ECFE60"]
217 [-]: MOVE      R24 R22      ; R24 := R22
218 [-]: CALL      R23 2 1      ; R23(R24)
219 [-]: JMP       264          ; PC := 264
220 [-]: LOADK     R23 K49      ; R23 := "/Lotus/Language/Menu/Loadout_PolarizeConfirm"
221 [-]: GETUPVAL  R24 U4       ; R24 := U4
222 [-]: GETGLOBAL R25 K3       ; R25 := _T
223 [-]: GETTABLE  R25 R25 K4   ; R25 := R25["chosenForma"]
224 [-]: CALL      R24 2 2      ; R24 := R24(R25)
225 [-]: GETGLOBAL R25 K10      ; R25 := 0x7C282057
226 [-]: GETGLOBAL R26 K3       ; R26 := _T
227 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["chosenForma"]
228 [-]: CALL      R25 2 2      ; R25 := R25(R26)
229 [-]: GETGLOBAL R26 K12      ; R26 := mMovie
230 [-]: SELF      R26 R26 K13  ; R27 := R26; R26 := R26["0x5DB0BD4"]
231 [-]: SELF      R28 R25 K15  ; R29 := R25; R28 := R25["0x616C74B6"]
232 [-]: CALL      R28 2 2      ; R28 := R28(R29)
233 [-]: SELF      R28 R28 K50  ; R29 := R28; R28 := R28["0x5EC7A3D2"]
234 [-]: CALL      R28 2 2      ; R28 := R28(R29)
235 [-]: MOVE      R29 R0       ; R29 := R0
236 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
237 [-]: GETGLOBAL R27 K3       ; R27 := _T
238 [-]: NEWTABLE  R28 0 2      ; R28 := {}
239 [-]: SETTABLE  R28 K52 R21  ; R28["mSlotIndex"] := R21
240 [-]: GETGLOBAL R29 K44      ; R29 := Lotus_Game
241 [-]: GETTABLE  R29 R29 K45  ; R29 := R29["AP_ANY"]
242 [-]: SETTABLE  R28 K53 R29  ; R28["mPolarity"] := R29
243 [-]: SETTABLE  R27 K51 R28  ; R27["Polarized"] := R28
244 [-]: GETUPVAL  R27 U3       ; R27 := U3
245 [-]: GETTABLE  R27 R27 K54  ; R27 := R27["0x5AE6E363"]
246 [-]: GETGLOBAL R28 K12      ; R28 := mMovie
247 [-]: SELF      R28 R28 K13  ; R29 := R28; R28 := R28["0x5DB0BD4"]
248 [-]: MOVE      R30 R23      ; R30 := R23
249 [-]: MOVE      R31 R0       ; R31 := R0
250 [-]: NEWTABLE  R32 0 1      ; R32 := {}
251 [-]: SETTABLE  R32 K29 R26  ; R32["ITEM"] := R26
252 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
253 [-]: LOADK     R29 K55      ; R29 := "ConfirmPolarizeChanges"
254 [-]: CALL      R27 3 1      ; R27(R28,R29)
255 [-]: JMP       264          ; PC := 264
256 [-]: GETGLOBAL R27 K12      ; R27 := mMovie
257 [-]: SELF      R27 R27 K56  ; R28 := R27; R27 := R27["0x5FF274BB"]
258 [-]: GETGLOBAL R29 K57      ; R29 := polarizeMovie
259 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
260 [-]: SELF      R28 R27 K58  ; R29 := R27; R28 := R27["0x458F27A9"]
261 [-]: LOADK     R30 K59      ; R30 := "SetCallback"
262 [-]: LOADK     R31 K60      ; R31 := "PolarizeSelected"
263 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
264 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 5709
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 5713
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: JMP       19           ; PC := 19
  4 [-]: TEST      R0 0         ; if not R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R1 1 1       ; R1()
  8 [-]: GETGLOBAL R1 K1        ; R1 := _T
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: SETTABLE  R1 K2 R2     ; R1["upgradeItem"] := R2
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R1 U3        ; R1 := U3
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0xB11F032"]
 17 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Language/Menu/Global_PurchaseFailed"
 18 [-]: CALL      R1 2 1       ; R1(R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 5725
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_CANCEL"]
  5 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["CI_SELECT"]
 11 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xFED851F6"]
 15 [-]: GETGLOBAL R4 K5        ; R4 := purchaseableFormas
 16 [-]: GETTABLE  R4 R4 K6     ; R4 := R4[1]
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: MOVE      R1 R2        ; R1 := R2
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["CI_GENERIC_1"]
 22 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 28
 23 [-]: JMP       28           ; PC := 28
 24 [-]: GETGLOBAL R2 K8        ; R2 := 0x7C282057
 25 [-]: LOADK     R3 K9        ; R3 := "/Lotus/Types/StoreItems/Packages/FormaPack"
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: MOVE      R1 R2        ; R1 := R2
 28 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 1         ; if R2 then PC := 40
 32 [-]: JMP       40           ; PC := 40
 33 [-]: GETGLOBAL R2 K11       ; R2 := _T
 34 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xC2CC50E"]
 35 [-]: MOVE      R3 R1        ; R3 := R1
 36 [-]: GETUPVAL  R4 U1        ; R4 := U1
 37 [-]: LOADNIL   R5 R5        ; R5 := nil
 38 [-]: MOVE      R6 R1        ; R6 := R1
 39 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 40 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 5741
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  3 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["BackgroundMovie"]
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x458F27A9"]
  8 [-]: LOADK     R4 K4        ; R4 := "ShowBlockingMessage"
  9 [-]: LOADK     R5 K5        ; R5 := "0"
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xB11F032"]
 15 [-]: LOADK     R3 K7        ; R3 := "/Lotus/Language/Menu/Loadout_LensInstallSuccess"
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R2 1 1       ; R2()
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xB11F032"]
 24 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Menu/Loadout_ApplyFailed"
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 5756
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 43
  5 [-]: JMP       43           ; PC := 43
  6 [-]: LOADNIL   R0 R0        ; R0 := nil
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x654F1092"]
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: MOVE      R0 R1        ; R0 := R1
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0["0x25EA59F6"]
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETGLOBAL R4 K3        ; R4 := _T
 26 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["upgradeItemCategory"]
 27 [-]: GETUPVAL  R5 U2        ; R5 := U2
 28 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["info"]
 29 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mItemId"]
 30 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mId"]
 31 [-]: LOADK     R6 K8        ; R6 := "OnFocusLensInstalled"
 32 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 33 [-]: GETGLOBAL R1 K3        ; R1 := _T
 34 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["BackgroundMovie"]
 35 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R1 K3        ; R1 := _T
 38 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["BackgroundMovie"]
 39 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x458F27A9"]
 40 [-]: LOADK     R3 K12       ; R3 := "ShowBlockingMessage"
 41 [-]: LOADK     R4 K13       ; R4 := "1"
 42 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 43 [-]: LOADNIL   R1 R1        ; R1 := nil
 44 [-]: MOVE      R1 R0        ; R1 := R0
 45 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 5777
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 1         ; if R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x61494587"]
  5 [-]: LOADK     R3 K1        ; R3 := 0.0099999997764826
  6 [-]: CLOSURE   R4 0         ; R4 := closure(Function #166.1)
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 1       ; R1(R2)
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5FF274BB"]
 15 [-]: GETGLOBAL R3 K4        ; R3 := _G
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMovie_ItemBrowsingMovie"]
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: MOVE      R1 R3        ; R1 := R3
 19 [-]: GETUPVAL  R1 U3        ; R1 := U3
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 21 [-]: LOADK     R3 K7        ; R3 := "SetTitle"
 22 [-]: GETGLOBAL R4 K2        ; R4 := mMovie
 23 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 24 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/Loadout_Select_Lens"
 25 [-]: MOVE      R7 R0        ; R7 := R0
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R1 0 1       ; R1(R2,...)
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 30 [-]: LOADK     R3 K10       ; R3 := "SetHideCountThreshold"
 31 [-]: LOADK     R4 K11       ; R4 := 0
 32 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 35 [-]: LOADK     R3 K12       ; R3 := "SetRequiredSelections"
 36 [-]: LOADK     R4 K13       ; R4 := 1
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: GETUPVAL  R1 U3        ; R1 := U3
 39 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 40 [-]: LOADK     R3 K14       ; R3 := "SetExitCallout"
 41 [-]: LOADK     R4 K15       ; R4 := "/Lotus/Language/Menu/Loadout_Lens_Install"
 42 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 43 [-]: GETGLOBAL R1 K16       ; R1 := _T
 44 [-]: CLOSURE   R2 1         ; R2 := closure(Function #166.2)
 45 [-]: GETUPVAL  R0 U2        ; R0 := U2
 46 [-]: GETUPVAL  R0 U4        ; R0 := U4
 47 [-]: SETTABLE  R1 K17 R2    ; R1["LensBrowseDone"] := R2
 48 [-]: GETUPVAL  R1 U3        ; R1 := U3
 49 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 50 [-]: LOADK     R3 K18       ; R3 := "SetCallBack"
 51 [-]: LOADK     R4 K17       ; R4 := "LensBrowseDone"
 52 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 53 [-]: GETGLOBAL R1 K16       ; R1 := _T
 54 [-]: CLOSURE   R2 2         ; R2 := closure(Function #166.3)
 55 [-]: SETTABLE  R1 K19 R2    ; R1["GetLensSorting"] := R2
 56 [-]: GETUPVAL  R1 U3        ; R1 := U3
 57 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 58 [-]: LOADK     R3 K20       ; R3 := "SetSortByFunction"
 59 [-]: LOADK     R4 K19       ; R4 := "GetLensSorting"
 60 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 61 [-]: GETGLOBAL R1 K16       ; R1 := _T
 62 [-]: CLOSURE   R2 3         ; R2 := closure(Function #166.4)
 63 [-]: GETUPVAL  R0 U5        ; R0 := U5
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U7        ; R0 := U7
 66 [-]: GETUPVAL  R0 U8        ; R0 := U8
 67 [-]: SETTABLE  R1 K21 R2    ; R1["GetFocusLenses"] := R2
 68 [-]: GETUPVAL  R1 U3        ; R1 := U3
 69 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 70 [-]: LOADK     R3 K22       ; R3 := "SetElementsFunction"
 71 [-]: LOADK     R4 K21       ; R4 := "GetFocusLenses"
 72 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 73 [-]: RETURN    R0 1         ; return 


; Function #166.1:
;
; Name:            
; Defined at line: 5782
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #166.2:
;
; Name:            
; Defined at line: 5797
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R1        ; R2 := R1
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETTABLE  R1 R0 K1     ; R1 := R0[1]
  7 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 21
  8 [-]: JMP       21           ; PC := 21
  9 [-]: GETTABLE  R1 R0 K1     ; R1 := R0[1]
 10 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["StoreItem"]
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3077BE70"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: GETGLOBAL R2 K4        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x458F27A9"]
 18 [-]: LOADK     R4 K6        ; R4 := "FocusLensSelected"
 19 [-]: LOADK     R5 K7        ; R5 := ""
 20 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 21 [-]: RETURN    R0 1         ; return 


; Function #166.3:
;
; Name:            
; Defined at line: 5811
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := table
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  6 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
  8 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Menu/Store_Owned"
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 11 [-]: SETTABLE  R3 K2 R4     ; R3["Name"] := R4
 12 [-]: SETTABLE  R3 K6 K7     ; R3["SortId"] := "OWNED"
 13 [-]: CLOSURE   R4 0         ; R4 := closure(Function #166.3.1)
 14 [-]: SETTABLE  R3 K8 R4     ; R3["Attribute"] := R4
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := table
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0xE6450C9D"]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 20 [-]: GETGLOBAL R4 K3        ; R4 := mMovie
 21 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 22 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/SortBy_Name"
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: SETTABLE  R3 K2 R4     ; R3["Name"] := R4
 26 [-]: SETTABLE  R3 K6 K10    ; R3["SortId"] := "NAME"
 27 [-]: SETTABLE  R3 K8 K2     ; R3["Attribute"] := "Name"
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: MOVE      R1 R0        ; R1 := R0
 30 [-]: LOADK     R2 K7        ; R2 := "OWNED"
 31 [-]: RETURN    R1 3         ; return R1,R2
 32 [-]: RETURN    R0 1         ; return 


; Function #166.3.1:
;
; Name:            
; Defined at line: 5814
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Count"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Count"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Count"]
  6 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Count"]
  7 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Name"]
 13 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Name"]
 14 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #166.4:
;
; Name:            
; Defined at line: 5828
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4["0x654F1092"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: MOVE      R0 R4        ; R0 := R4
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0["0x6F2E05FD"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x3329FBFF"]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R2 R4        ; R2 := R4
 23 [-]: LOADK     R4 K4        ; R4 := 1
 24 [-]: LEN       R5 R2        ; R5 := # R2
 25 [-]: LOADK     R6 K4        ; R6 := 1
 26 [-]: FORPREP   R4 101       ; R4 -= R6; PC := 101
 27 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 28 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemType"]
 29 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x8B598ED4"]
 30 [-]: GETGLOBAL R11 K7       ; R11 := gFocusLensType
 31 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 32 [-]: TEST      R9 0         ; if not R9 then PC := 101
 33 [-]: JMP       101          ; PC := 101
 34 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["mItemCount"]
 35 [-]: LT        0 K9 R9      ; if 0 >= R9 then PC := 101
 36 [-]: JMP       101          ; PC := 101
 37 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemType"]
 38 [-]: GETUPVAL  R10 U1       ; R10 := U1
 39 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["info"]
 40 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mFocusLens"]
 41 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 101
 42 [-]: JMP       101          ; PC := 101
 43 [-]: GETUPVAL  R9 U2        ; R9 := U2
 44 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x62FBC1B8"]
 45 [-]: GETTABLE  R11 R8 K5    ; R11 := R8["mItemType"]
 46 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 47 [-]: GETGLOBAL R10 K0       ; R10 := 0x400E7765
 48 [-]: MOVE      R11 R9       ; R11 := R9
 49 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 50 [-]: TEST      R10 1        ; if R10 then PC := 101
 51 [-]: JMP       101          ; PC := 101
 52 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 53 [-]: SETTABLE  R10 K13 R9   ; R10["StoreItem"] := R9
 54 [-]: GETGLOBAL R11 K15      ; R11 := mMovie
 55 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 56 [-]: SELF      R13 R9 K17   ; R14 := R9; R13 := R9["0x616C74B6"]
 57 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 58 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x5EC7A3D2"]
 59 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 60 [-]: MOVE      R14 R0       ; R14 := R0
 61 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 62 [-]: SETTABLE  R10 K14 R11  ; R10["Name"] := R11
 63 [-]: GETGLOBAL R11 K15      ; R11 := mMovie
 64 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 65 [-]: SELF      R13 R9 K20   ; R14 := R9; R13 := R9["0x42300EB5"]
 66 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 67 [-]: SELF      R13 R13 K18  ; R14 := R13; R13 := R13["0x5EC7A3D2"]
 68 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 69 [-]: MOVE      R14 R0       ; R14 := R0
 70 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 71 [-]: SETTABLE  R10 K19 R11  ; R10["Description"] := R11
 72 [-]: SELF      R11 R9 K22   ; R12 := R9; R11 := R9["0xF1A9732E"]
 73 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 74 [-]: SETTABLE  R10 K21 R11  ; R10["Icon"] := R11
 75 [-]: GETTABLE  R11 R8 K8    ; R11 := R8["mItemCount"]
 76 [-]: SETTABLE  R10 K23 R11  ; R10["Count"] := R11
 77 [-]: GETGLOBAL R11 K15      ; R11 := mMovie
 78 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11["0x5DB0BD4"]
 79 [-]: GETUPVAL  R13 U3       ; R13 := U3
 80 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["0xF81722A2"]
 81 [-]: GETGLOBAL R14 K0       ; R14 := 0x400E7765
 82 [-]: GETUPVAL  R15 U1       ; R15 := U1
 83 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["info"]
 84 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["mFocusLens"]
 85 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 86 [-]: MOVE      R14 R14      ; R14 := R14
 87 [-]: LOADK     R15 K26      ; R15 := "/Lotus/Language/Menu/Loadout_Confirm_Lens_Selection"
 88 [-]: LOADK     R16 K27      ; R16 := "/Lotus/Language/Menu/Loadout_ConfirmLensInstall"
 89 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 90 [-]: MOVE      R14 R0       ; R14 := R0
 91 [-]: NEWTABLE  R15 0 1      ; R15 := {}
 92 [-]: GETTABLE  R16 R10 K14  ; R16 := R10["Name"]
 93 [-]: SETTABLE  R15 K28 R16  ; R15["LENS"] := R16
 94 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
 95 [-]: SETTABLE  R10 K24 R11  ; R10["ConfirmPopupText"] := R11
 96 [-]: GETGLOBAL R11 K29      ; R11 := table
 97 [-]: GETTABLE  R11 R11 K30  ; R11 := R11["0xE6450C9D"]
 98 [-]: MOVE      R12 R3       ; R12 := R3
 99 [-]: MOVE      R13 R10      ; R13 := R10
100 [-]: CALL      R11 3 1      ; R11(R12,R13)
101 [-]: FORLOOP   R4 27        ; R4 += R6; if R4 <= R5 then begin PC := 27; R7 := R4 end
102 [-]: GETUPVAL  R11 U2       ; R11 := U2
103 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11["0xB68BBE7C"]
104 [-]: GETGLOBAL R13 K7       ; R13 := gFocusLensType
105 [-]: MOVE      R14 R1       ; R14 := R1
106 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
107 [-]: LOADK     R12 K4       ; R12 := 1
108 [-]: LEN       R13 R11      ; R13 := # R11
109 [-]: LOADK     R14 K4       ; R14 := 1
110 [-]: FORPREP   R12 192      ; R12 -= R14; PC := 192
111 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
112 [-]: SELF      R17 R16 K32  ; R18 := R16; R17 := R16["0x3077BE70"]
113 [-]: CALL      R17 2 2      ; R17 := R17(R18)
114 [-]: GETGLOBAL R18 K0       ; R18 := 0x400E7765
115 [-]: MOVE      R19 R16      ; R19 := R16
116 [-]: CALL      R18 2 2      ; R18 := R18(R19)
117 [-]: TEST      R18 1        ; if R18 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETUPVAL  R18 U1       ; R18 := U1
120 [-]: GETTABLE  R18 R18 K10  ; R18 := R18["info"]
121 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["mFocusLens"]
122 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 192
123 [-]: JMP       192          ; PC := 192
124 [-]: MOVE      R18 R0       ; R18 := R0
125 [-]: LOADK     R19 K4       ; R19 := 1
126 [-]: LEN       R20 R3       ; R20 := # R3
127 [-]: LOADK     R21 K4       ; R21 := 1
128 [-]: FORPREP   R19 135      ; R19 -= R21; PC := 135
129 [-]: GETTABLE  R23 R3 R22   ; R23 := R3[R22]
130 [-]: GETTABLE  R23 R23 K13  ; R23 := R23["StoreItem"]
131 [-]: EQ        0 R23 R16    ; if R23 ~= R16 then PC := 135
132 [-]: JMP       135          ; PC := 135
133 [-]: MOVE      R18 R1       ; R18 := R1
134 [-]: JMP       136          ; PC := 136
135 [-]: FORLOOP   R19 129      ; R19 += R21; if R19 <= R20 then begin PC := 129; R22 := R19 end
136 [-]: TEST      R18 1        ; if R18 then PC := 192
137 [-]: JMP       192          ; PC := 192
138 [-]: NEWTABLE  R23 0 1      ; R23 := {}
139 [-]: SETTABLE  R23 K13 R16  ; R23["StoreItem"] := R16
140 [-]: GETGLOBAL R24 K15      ; R24 := mMovie
141 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0x5DB0BD4"]
142 [-]: SELF      R26 R16 K17  ; R27 := R16; R26 := R16["0x616C74B6"]
143 [-]: CALL      R26 2 2      ; R26 := R26(R27)
144 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x5EC7A3D2"]
145 [-]: CALL      R26 2 2      ; R26 := R26(R27)
146 [-]: MOVE      R27 R0       ; R27 := R0
147 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
148 [-]: SETTABLE  R23 K14 R24  ; R23["Name"] := R24
149 [-]: GETGLOBAL R24 K15      ; R24 := mMovie
150 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0x5DB0BD4"]
151 [-]: SELF      R26 R16 K20  ; R27 := R16; R26 := R16["0x42300EB5"]
152 [-]: CALL      R26 2 2      ; R26 := R26(R27)
153 [-]: SELF      R26 R26 K18  ; R27 := R26; R26 := R26["0x5EC7A3D2"]
154 [-]: CALL      R26 2 2      ; R26 := R26(R27)
155 [-]: MOVE      R27 R0       ; R27 := R0
156 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
157 [-]: SETTABLE  R23 K19 R24  ; R23["Description"] := R24
158 [-]: SELF      R24 R16 K22  ; R25 := R16; R24 := R16["0xF1A9732E"]
159 [-]: CALL      R24 2 2      ; R24 := R24(R25)
160 [-]: SETTABLE  R23 K21 R24  ; R23["Icon"] := R24
161 [-]: SELF      R24 R16 K34  ; R25 := R16; R24 := R16["0x41604216"]
162 [-]: CALL      R24 2 2      ; R24 := R24(R25)
163 [-]: SETTABLE  R23 K33 R24  ; R23["RegularPrice"] := R24
164 [-]: SELF      R24 R16 K36  ; R25 := R16; R24 := R16["0xE5B2203D"]
165 [-]: CALL      R24 2 2      ; R24 := R24(R25)
166 [-]: SETTABLE  R23 K35 R24  ; R23["PremiumPrice"] := R24
167 [-]: SETTABLE  R23 K23 K9   ; R23["Count"] := 0
168 [-]: GETGLOBAL R24 K15      ; R24 := mMovie
169 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0x5DB0BD4"]
170 [-]: GETUPVAL  R26 U3       ; R26 := U3
171 [-]: GETTABLE  R26 R26 K25  ; R26 := R26["0xF81722A2"]
172 [-]: GETGLOBAL R27 K0       ; R27 := 0x400E7765
173 [-]: GETUPVAL  R28 U1       ; R28 := U1
174 [-]: GETTABLE  R28 R28 K10  ; R28 := R28["info"]
175 [-]: GETTABLE  R28 R28 K11  ; R28 := R28["mFocusLens"]
176 [-]: CALL      R27 2 2      ; R27 := R27(R28)
177 [-]: MOVE      R27 R27      ; R27 := R27
178 [-]: LOADK     R28 K37      ; R28 := "/Lotus/Language/Menu/Loadout_Confirm_Lens_PurchaseAndSelection"
179 [-]: LOADK     R29 K38      ; R29 := "/Lotus/Language/Menu/Loadout_ConfirmLensPurchaseAndInstall"
180 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
181 [-]: MOVE      R27 R0       ; R27 := R0
182 [-]: NEWTABLE  R28 0 1      ; R28 := {}
183 [-]: GETTABLE  R29 R23 K14  ; R29 := R23["Name"]
184 [-]: SETTABLE  R28 K28 R29  ; R28["LENS"] := R29
185 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
186 [-]: SETTABLE  R23 K24 R24  ; R23["ConfirmPopupText"] := R24
187 [-]: GETGLOBAL R24 K29      ; R24 := table
188 [-]: GETTABLE  R24 R24 K30  ; R24 := R24["0xE6450C9D"]
189 [-]: MOVE      R25 R1       ; R25 := R1
190 [-]: MOVE      R26 R23      ; R26 := R23
191 [-]: CALL      R24 3 1      ; R24(R25,R26)
192 [-]: FORLOOP   R12 111      ; R12 += R14; if R12 <= R13 then begin PC := 111; R15 := R12 end
193 [-]: LOADK     R24 K4       ; R24 := 1
194 [-]: LEN       R25 R3       ; R25 := # R3
195 [-]: LOADK     R26 K4       ; R26 := 1
196 [-]: FORPREP   R24 202      ; R24 -= R26; PC := 202
197 [-]: GETGLOBAL R28 K29      ; R28 := table
198 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["0xE6450C9D"]
199 [-]: MOVE      R29 R1       ; R29 := R1
200 [-]: GETTABLE  R30 R3 R27   ; R30 := R3[R27]
201 [-]: CALL      R28 3 1      ; R28(R29,R30)
202 [-]: FORLOOP   R24 197      ; R24 += R26; if R24 <= R25 then begin PC := 197; R27 := R24 end
203 [-]: RETURN    R1 2         ; return R1
204 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 5899
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["info"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mItemType"]
 10 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x8B598ED4"]
 11 [-]: GETGLOBAL R3 K5        ; R3 := gPowerSuitType
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 32
 14 [-]: JMP       32           ; PC := 32
 15 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x8B598ED4"]
 16 [-]: GETGLOBAL R3 K6        ; R3 := gSentinelPowerSuitType
 17 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 18 [-]: TEST      R1 1         ; if R1 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x8B598ED4"]
 21 [-]: GETGLOBAL R3 K7        ; R3 := gFlightJetPackItemType
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: TEST      R1 1         ; if R1 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0x8B598ED4"]
 26 [-]: GETGLOBAL R3 K8        ; R3 := hoverboardSuitWRes
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: MOVE      R1 R1        ; R1 := R1
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R1 R0        ; R1 := R0
 31 [-]: MOVE      R1 R1        ; R1 := R1
 32 [-]: TESTSET   R2 R1 1      ; if R1 then PC := 43 else R2 := R1
 33 [-]: JMP       43           ; PC := 43
 34 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x8B598ED4"]
 35 [-]: GETGLOBAL R4 K9        ; R4 := gLotusMeleeWeaponType
 36 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 37 [-]: TEST      R2 0         ; if not R2 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0["0x8B598ED4"]
 40 [-]: GETGLOBAL R4 K10       ; R4 := archMeleeWRes
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: MOVE      R2 R2        ; R2 := R2
 43 [-]: GETGLOBAL R3 K1        ; R3 := gGameData
 44 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3["0x6F2E05FD"]
 45 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 46 [-]: SELF      R4 R3 K12    ; R5 := R3; R4 := R3["0x44AB61BF"]
 47 [-]: GETGLOBAL R6 K13       ; R6 := purchaseableFormas
 48 [-]: GETTABLE  R6 R6 K14    ; R6 := R6[1]
 49 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 50 [-]: SELF      R5 R3 K12    ; R6 := R3; R5 := R3["0x44AB61BF"]
 51 [-]: GETGLOBAL R7 K13       ; R7 := purchaseableFormas
 52 [-]: GETTABLE  R7 R7 K15    ; R7 := R7[2]
 53 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 54 [-]: TEST      R5 0         ; if not R5 then PC := 74
 55 [-]: JMP       74           ; PC := 74
 56 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 57 [-]: GETUPVAL  R6 U1        ; R6 := U1
 58 [-]: GETUPVAL  R7 U2        ; R7 := U2
 59 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 60 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 61 [-]: TEST      R5 1         ; if R5 then PC := 72
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETUPVAL  R5 U1        ; R5 := U1
 64 [-]: GETUPVAL  R6 U2        ; R6 := U2
 65 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 66 [-]: GETGLOBAL R6 K16       ; R6 := Lotus_Game
 67 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["AP_ANY"]
 68 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: MOVE      R5 R1        ; R5 := R1
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R5 R0        ; R5 := R0
 73 [-]: MOVE      R5 R1        ; R5 := R1
 74 [-]: SELF      R6 R3 K12    ; R7 := R3; R6 := R3["0x44AB61BF"]
 75 [-]: GETGLOBAL R8 K13       ; R8 := purchaseableFormas
 76 [-]: GETTABLE  R8 R8 K18    ; R8 := R8[5]
 77 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 78 [-]: TEST      R6 0         ; if not R6 then PC := 98
 79 [-]: JMP       98           ; PC := 98
 80 [-]: GETGLOBAL R6 K0        ; R6 := 0x400E7765
 81 [-]: GETUPVAL  R7 U1        ; R7 := U1
 82 [-]: GETUPVAL  R8 U3        ; R8 := U3
 83 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 84 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 85 [-]: TEST      R6 1         ; if R6 then PC := 96
 86 [-]: JMP       96           ; PC := 96
 87 [-]: GETUPVAL  R6 U1        ; R6 := U1
 88 [-]: GETUPVAL  R7 U3        ; R7 := U3
 89 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 90 [-]: GETGLOBAL R7 K16       ; R7 := Lotus_Game
 91 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["AP_ANY"]
 92 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: MOVE      R6 R1        ; R6 := R1
 95 [-]: JMP       98           ; PC := 98
 96 [-]: MOVE      R6 R0        ; R6 := R0
 97 [-]: MOVE      R6 R1        ; R6 := R1
 98 [-]: SELF      R7 R3 K12    ; R8 := R3; R7 := R3["0x44AB61BF"]
 99 [-]: GETGLOBAL R9 K13       ; R9 := purchaseableFormas
100 [-]: GETTABLE  R9 R9 K19    ; R9 := R9[4]
101 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
102 [-]: SELF      R8 R3 K12    ; R9 := R3; R8 := R3["0x44AB61BF"]
103 [-]: GETGLOBAL R10 K13      ; R10 := purchaseableFormas
104 [-]: GETTABLE  R10 R10 K20  ; R10 := R10[3]
105 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
106 [-]: TEST      R8 0         ; if not R8 then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: MOVE      R8 R2        ; R8 := R2
109 [-]: TEST      R7 1         ; if R7 then PC := 124
110 [-]: JMP       124          ; PC := 124
111 [-]: TEST      R8 1         ; if R8 then PC := 124
112 [-]: JMP       124          ; PC := 124
113 [-]: TEST      R5 1         ; if R5 then PC := 124
114 [-]: JMP       124          ; PC := 124
115 [-]: TEST      R6 1         ; if R6 then PC := 124
116 [-]: JMP       124          ; PC := 124
117 [-]: GETGLOBAL R9 K13       ; R9 := purchaseableFormas
118 [-]: GETTABLE  R9 R9 K14    ; R9 := R9[1]
119 [-]: MOVE      R9 R4        ; R9 := R4
120 [-]: GETUPVAL  R9 U5        ; R9 := U5
121 [-]: MOVE      R10 R0       ; R10 := R0
122 [-]: CALL      R9 2 1       ; R9(R10)
123 [-]: JMP       126          ; PC := 126
124 [-]: GETUPVAL  R9 U6        ; R9 := U6
125 [-]: CALL      R9 1 1       ; R9()
126 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 5922
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7C282057
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mUpgradeType"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LOADK     R2 K2        ; R2 := ""
  5 [-]: LOADK     R3 K3        ; R3 := 0
  6 [-]: LOADK     R4 K3        ; R4 := 0
  7 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
  8 [-]: MOVE      R6 R1        ; R6 := R1
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: TEST      R5 1         ; if R5 then PC := 46
 11 [-]: JMP       46           ; PC := 46
 12 [-]: SELF      R5 R1 K5     ; R6 := R1; R5 := R1["0x75FA94B7"]
 13 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mUpgradeFingerprint"]
 14 [-]: CALL      R5 3 1       ; R5(R6,R7)
 15 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1["0x3061149"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LT        0 K3 R5      ; if 0 >= R5 then PC := 46
 18 [-]: JMP       46           ; PC := 46
 19 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1["0x38F325B8"]
 20 [-]: LOADK     R7 K3        ; R7 := 0
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5["0x9648AA68"]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: MOVE      R3 R6        ; R3 := R6
 25 [-]: SELF      R6 R5 K10    ; R7 := R5; R6 := R5["0xADD560BB"]
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: MOVE      R4 R6        ; R4 := R6
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0xF02938BA"]
 30 [-]: MOVE      R7 R3        ; R7 := R3
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: GETGLOBAL R7 K12       ; R7 := mMovie
 33 [-]: SELF      R7 R7 K13    ; R8 := R7; R7 := R7["0x5DB0BD4"]
 34 [-]: LOADK     R9 K14       ; R9 := "/Lotus/Language/Game/"
 35 [-]: MOVE      R10 R6       ; R10 := R6
 36 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 37 [-]: MOVE      R10 R1       ; R10 := R1
 38 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 39 [-]: LOADK     R8 K15       ; R8 := " "
 40 [-]: GETUPVAL  R9 U1        ; R9 := U1
 41 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["0x7E197415"]
 42 [-]: MUL       R10 R4 K17   ; R10 := R4 * 100
 43 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 44 [-]: LOADK     R10 K18      ; R10 := "%"
 45 [-]: CONCAT    R2 R7 R10    ; R2 := R7 .. R8 .. R9 .. R10
 46 [-]: MOVE      R7 R2        ; R7 := R2
 47 [-]: MOVE      R8 R3        ; R8 := R3
 48 [-]: MOVE      R9 R4        ; R9 := R4
 49 [-]: RETURN    R7 4         ; return R7,R8,R9
 50 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 5942
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 1         ; if R0 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0x38ECFE60"]
  5 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/Kingpins/FuseFailed"
  6 [-]: CALL      R2 2 1       ; R2(R3)
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x25992394"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := _G
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["UISound_SweetenerTwo"]
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xB11F032"]
 15 [-]: LOADK     R3 K6        ; R3 := "/Lotus/Language/Kingpins/FuseSuccess"
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R2 1 1       ; R2()
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 5956
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  9 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 12 [-]: GETGLOBAL R2 K5        ; R2 := string
 13 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xBDD0D625"]
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K5        ; R3 := string
 17 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0xBDD0D625"]
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 42
 21 [-]: JMP       42           ; PC := 42
 22 [-]: GETGLOBAL R2 K7        ; R2 := Lotus_Game
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0xCA045D5C"]
 24 [-]: CALL      R2 1 2       ; R2 := R2()
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["uid"]
 27 [-]: SETTABLE  R2 K9 R3     ; R2["mDestWeapon"] := R3
 28 [-]: GETTABLE  R3 R2 K11    ; R3 := R2["mSourceWeapon"]
 29 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0xA1AE44F2"]
 30 [-]: GETUPVAL  R5 U1        ; R5 := U1
 31 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["UID"]
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: GETGLOBAL R3 K15       ; R3 := _T
 34 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["upgradeItemCategory"]
 35 [-]: SETTABLE  R2 K14 R3    ; R2["mCategory"] := R3
 36 [-]: GETGLOBAL R3 K1        ; R3 := gGameData
 37 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0x54CCD77A"]
 38 [-]: MOVE      R5 R2        ; R5 := R2
 39 [-]: LOADK     R6 K18       ; R6 := "OnFuseWeapon"
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETUPVAL  R3 U2        ; R3 := U2
 43 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["0x38ECFE60"]
 44 [-]: LOADK     R4 K20       ; R4 := "/Lotus/Language/Dojo/VaultContributionDecoIncorrectConfirmWord"
 45 [-]: CALL      R3 2 1       ; R3(R4)
 46 [-]: LOADNIL   R3 R3        ; R3 := nil
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 5977
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["info"]
 10 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["DamageType"]
 13 [-]: EQ        0 R1 R3      ; if R1 ~= R3 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["DamageValue"]
 17 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETUPVAL  R3 U3        ; R3 := U3
 20 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x38ECFE60"]
 21 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Kingpins/FuseErrorWorseBonus"
 22 [-]: CALL      R3 2 1       ; R3(R4)
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["Name"]
 26 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 27 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 28 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K7        ; R5 := mMovie
 32 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 33 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Kingpins/ConfirmFuseWeapon"
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: NEWTABLE  R9 0 4       ; R9 := {}
 36 [-]: SETTABLE  R9 K11 R0    ; R9["TYPE_ONE"] := R0
 37 [-]: GETUPVAL  R10 U0       ; R10 := U0
 38 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["DamageName"]
 39 [-]: SETTABLE  R9 K12 R10   ; R9["TYPE_TWO"] := R10
 40 [-]: SETTABLE  R9 K14 R3    ; R9["WEAPON"] := R3
 41 [-]: SETTABLE  R9 K15 R4    ; R9["WORD"] := R4
 42 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 43 [-]: GETGLOBAL R6 K7        ; R6 := mMovie
 44 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 45 [-]: LOADK     R8 K16       ; R8 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponShort1"
 46 [-]: MOVE      R9 R1        ; R9 := R1
 47 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 48 [-]: SETTABLE  R10 K11 R0   ; R10["TYPE_ONE"] := R0
 49 [-]: GETUPVAL  R11 U0       ; R11 := U0
 50 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["DamageName"]
 51 [-]: SETTABLE  R10 K12 R11  ; R10["TYPE_TWO"] := R11
 52 [-]: SETTABLE  R10 K14 R3   ; R10["WEAPON"] := R3
 53 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 54 [-]: GETGLOBAL R7 K7        ; R7 := mMovie
 55 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x5DB0BD4"]
 56 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponShort2"
 57 [-]: MOVE      R10 R1       ; R10 := R1
 58 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 59 [-]: SETTABLE  R11 K15 R4   ; R11["WORD"] := R4
 60 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 61 [-]: GETUPVAL  R8 U4        ; R8 := U4
 62 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["0x24966011"]
 63 [-]: GETGLOBAL R9 K7        ; R9 := mMovie
 64 [-]: GETGLOBAL R10 K19      ; R10 := string
 65 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["0xBDD0D625"]
 66 [-]: MOVE      R11 R4       ; R11 := R4
 67 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 68 [-]: MOVE      R11 R5       ; R11 := R5
 69 [-]: MOVE      R12 R6       ; R12 := R6
 70 [-]: MOVE      R13 R7       ; R13 := R7
 71 [-]: LOADK     R14 K21      ; R14 := "ConfirmFuseWeapon"
 72 [-]: CALL      R8 7 1       ; R8(R9,R10,R11,R12,R13,R14)
 73 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 5999
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  5 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x5FF274BB"]
  6 [-]: GETGLOBAL R2 K2        ; R2 := _G
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIMovie_ItemBrowsingMovie"]
  8 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: GETGLOBAL R0 K4        ; R0 := string
 11 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0x639C642A"]
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 14 [-]: GETGLOBAL R3 K7        ; R3 := 0x9FAED6BC
 15 [-]: GETUPVAL  R4 U2        ; R4 := U2
 16 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["storeItem"]
 17 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4["0x616C74B6"]
 18 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 19 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 20 [-]: MOVE      R4 R1        ; R4 := R1
 21 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 22 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K11       ; R3 := "SetTitle"
 26 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
 27 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 28 [-]: LOADK     R6 K12       ; R6 := "/Lotus/Language/Menu/SelectSpecificItemType"
 29 [-]: MOVE      R7 R0        ; R7 := R0
 30 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 31 [-]: SETTABLE  R8 K13 R0    ; R8["ITEM_NAME"] := R0
 32 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 33 [-]: CALL      R1 0 1       ; R1(R2,...)
 34 [-]: GETUPVAL  R1 U1        ; R1 := U1
 35 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 36 [-]: LOADK     R3 K14       ; R3 := "SetHideCountThreshold"
 37 [-]: LOADK     R4 K15       ; R4 := 0
 38 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 41 [-]: LOADK     R3 K16       ; R3 := "SetRequiredSelections"
 42 [-]: LOADK     R4 K17       ; R4 := 1
 43 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 46 [-]: LOADK     R3 K18       ; R3 := "SetExitCallout"
 47 [-]: LOADK     R4 K19       ; R4 := "/Lotus/Language/Kingpins/ConfirmFuseWeaponWord"
 48 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 49 [-]: GETGLOBAL R1 K20       ; R1 := _T
 50 [-]: CLOSURE   R2 0         ; R2 := closure(Function #172.1)
 51 [-]: GETUPVAL  R0 U0        ; R0 := U0
 52 [-]: GETUPVAL  R0 U3        ; R0 := U3
 53 [-]: SETTABLE  R1 K21 R2    ; R1["FuseBrowseDone"] := R2
 54 [-]: GETUPVAL  R1 U1        ; R1 := U1
 55 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 56 [-]: LOADK     R3 K22       ; R3 := "SetCallBack"
 57 [-]: LOADK     R4 K21       ; R4 := "FuseBrowseDone"
 58 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 59 [-]: GETGLOBAL R1 K20       ; R1 := _T
 60 [-]: CLOSURE   R2 1         ; R2 := closure(Function #172.2)
 61 [-]: GETUPVAL  R0 U4        ; R0 := U4
 62 [-]: GETUPVAL  R0 U2        ; R0 := U2
 63 [-]: GETUPVAL  R0 U5        ; R0 := U5
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U7        ; R0 := U7
 66 [-]: GETUPVAL  R0 U8        ; R0 := U8
 67 [-]: SETTABLE  R1 K23 R2    ; R1["GetKuvaWeapons"] := R2
 68 [-]: GETUPVAL  R1 U1        ; R1 := U1
 69 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x458F27A9"]
 70 [-]: LOADK     R3 K24       ; R3 := "SetElementsFunction"
 71 [-]: LOADK     R4 K23       ; R4 := "GetKuvaWeapons"
 72 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 73 [-]: RETURN    R0 1         ; return 


; Function #172.1:
;
; Name:            
; Defined at line: 6010
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["FuseBrowseDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetKuvaWeapons"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 20
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 14 [-]: MOVE      R1 R1        ; R1 := R1
 15 [-]: GETGLOBAL R2 K5        ; R2 := mMovie
 16 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x458F27A9"]
 17 [-]: LOADK     R4 K7        ; R4 := "FuseKuvaWeapon"
 18 [-]: LOADK     R5 K8        ; R5 := ""
 19 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 20 [-]: RETURN    R0 1         ; return 


; Function #172.2:
;
; Name:            
; Defined at line: 6026
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["info"]
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mItemType"]
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: LEN       R4 R1        ; R4 := # R1
  9 [-]: LOADK     R5 K2        ; R5 := 1
 10 [-]: FORPREP   R3 63        ; R3 -= R5; PC := 63
 11 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 12 [-]: GETTABLE  R8 R7 K1     ; R8 := R7["mItemType"]
 13 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 63
 14 [-]: JMP       63           ; PC := 63
 15 [-]: GETGLOBAL R8 K3        ; R8 := 0x400E7765
 16 [-]: GETTABLE  R9 R7 K4     ; R9 := R7["mUpgradeType"]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: TEST      R8 1         ; if R8 then PC := 63
 19 [-]: JMP       63           ; PC := 63
 20 [-]: GETTABLE  R8 R7 K5     ; R8 := R7["mItemId"]
 21 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mId"]
 22 [-]: GETUPVAL  R9 U1        ; R9 := U1
 23 [-]: GETTABLE  R9 R9 K0     ; R9 := R9["info"]
 24 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["mItemId"]
 25 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mId"]
 26 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 63
 27 [-]: JMP       63           ; PC := 63
 28 [-]: GETUPVAL  R8 U2        ; R8 := U2
 29 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0xFED851F6"]
 30 [-]: MOVE      R10 R2       ; R10 := R2
 31 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 32 [-]: GETUPVAL  R9 U3        ; R9 := U3
 33 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["0x1B75557F"]
 34 [-]: GETGLOBAL R10 K9       ; R10 := mMovie
 35 [-]: MOVE      R11 R8       ; R11 := R8
 36 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 37 [-]: SETTABLE  R12 K10 R7   ; R12["ItemInfo"] := R7
 38 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 39 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 40 [-]: GETUPVAL  R11 U4       ; R11 := U4
 41 [-]: MOVE      R12 R7       ; R12 := R7
 42 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 43 [-]: GETUPVAL  R14 U5       ; R14 := U5
 44 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0xB102F9B3"]
 45 [-]: GETUPVAL  R15 U5       ; R15 := U5
 46 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["LABEL_TYPE_UNIQUE_TEXT"]
 47 [-]: MOVE      R16 R11      ; R16 := R11
 48 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 49 [-]: GETGLOBAL R15 K13      ; R15 := table
 50 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["0xE6450C9D"]
 51 [-]: MOVE      R16 R10      ; R16 := R10
 52 [-]: MOVE      R17 R14      ; R17 := R14
 53 [-]: CALL      R15 3 1      ; R15(R16,R17)
 54 [-]: SETTABLE  R9 K15 R11   ; R9["DamageName"] := R11
 55 [-]: SETTABLE  R9 K16 R12   ; R9["DamageType"] := R12
 56 [-]: SETTABLE  R9 K17 R13   ; R9["DamageValue"] := R13
 57 [-]: SETTABLE  R9 K18 R10   ; R9["CustomTags"] := R10
 58 [-]: GETGLOBAL R15 K13      ; R15 := table
 59 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["0xE6450C9D"]
 60 [-]: MOVE      R16 R0       ; R16 := R0
 61 [-]: MOVE      R17 R9       ; R17 := R9
 62 [-]: CALL      R15 3 1      ; R15(R16,R17)
 63 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 64 [-]: RETURN    R0 2         ; return R0
 65 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 6055
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: MOVE      R1 R0        ; R1 := R0
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: EQ        0 R0 K1      ; if R0 ~= "AUTO" then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: CALL      R1 1 1       ; R1()
 10 [-]: JMP       49           ; PC := 49
 11 [-]: EQ        0 R0 K2      ; if R0 ~= "UPGRADE" then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R1 U2        ; R1 := U2
 14 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["WF_ENERGY_UNLOCKED"]
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: JMP       49           ; PC := 49
 18 [-]: EQ        0 R0 K5      ; if R0 ~= "UPGRADE_HEAVY" then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: GETGLOBAL R2 K3        ; R2 := Lotus_Game
 22 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["WF_HEAVY_UNLOCKED"]
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: JMP       49           ; PC := 49
 25 [-]: EQ        0 R0 K7      ; if R0 ~= "FORMA" then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETUPVAL  R1 U3        ; R1 := U3
 28 [-]: CALL      R1 1 1       ; R1()
 29 [-]: JMP       49           ; PC := 49
 30 [-]: EQ        0 R0 K8      ; if R0 ~= "SWAP" then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R1 U4        ; R1 := U4
 33 [-]: CALL      R1 1 1       ; R1()
 34 [-]: JMP       49           ; PC := 49
 35 [-]: EQ        0 R0 K9      ; if R0 ~= "LENS" then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETUPVAL  R1 U5        ; R1 := U5
 38 [-]: CALL      R1 1 1       ; R1()
 39 [-]: JMP       49           ; PC := 49
 40 [-]: EQ        0 R0 K10     ; if R0 ~= "RENAME" then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETUPVAL  R1 U6        ; R1 := U6
 43 [-]: CALL      R1 1 1       ; R1()
 44 [-]: JMP       49           ; PC := 49
 45 [-]: EQ        0 R0 K11     ; if R0 ~= "FUSE" then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: GETUPVAL  R1 U7        ; R1 := U7
 48 [-]: CALL      R1 1 1       ; R1()
 49 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 6080
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "TopMenu.RenameIcon"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_Yellow"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K6        ; R0 := _T
  9 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 11 [-]: LOADK     R3 K9        ; R3 := "/Lotus/Language/Menu/RenameConfigs"
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: SETTABLE  R0 K7 R1     ; R0["gToolTip"] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 6085
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "TopMenu.RenameIcon"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_White"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K6        ; R0 := _T
  9 [-]: SETTABLE  R0 K7 K8     ; R0["gToolTip"] := nil
 10 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 6090
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 6094
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "TopMenu.LinkIcon"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_Yellow"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K6        ; R0 := _T
  9 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 11 [-]: LOADK     R3 K9        ; R3 := "/Lotus/Language/Menu/LinkConfig"
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: SETTABLE  R0 K7 R1     ; R0["gToolTip"] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 6099
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "TopMenu.LinkIcon"
  4 [-]: LOADK     R3 K3        ; R3 := "_color"
  5 [-]: GETGLOBAL R4 K4        ; R4 := _G
  6 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["UIColor_White"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K6        ; R0 := _T
  9 [-]: SETTABLE  R0 K7 K8     ; R0["gToolTip"] := nil
 10 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 6104
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["upgradeItemLot"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["upgradeItemSlot"]
  5 [-]: GETGLOBAL R2 K3        ; R2 := gFlashMgr
  6 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x616DD092"]
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["0xBCEEAD81"]
  9 [-]: CALL      R4 1 0       ; R4,... := R4()
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: GETGLOBAL R3 K6        ; R3 := 0x400E7765
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 33
 15 [-]: JMP       33           ; PC := 33
 16 [-]: GETGLOBAL R3 K7        ; R3 := gGameData
 17 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0x30BDE7F"]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x6D25F92"]
 20 [-]: MOVE      R5 R0        ; R5 := R0
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 23 [-]: GETGLOBAL R4 K0        ; R4 := _T
 24 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 25 [-]: SETTABLE  R5 K11 R3    ; R5["StoredItem"] := R3
 26 [-]: SETTABLE  R5 K12 R0    ; R5["LoadOutType"] := R0
 27 [-]: SETTABLE  R5 K13 R1    ; R5["LoadOutSlot"] := R1
 28 [-]: SETTABLE  R4 K10 R5    ; R4["ModConfigStoredItem"] := R5
 29 [-]: SELF      R4 R2 K14    ; R5 := R2; R4 := R2["0x458F27A9"]
 30 [-]: LOADK     R6 K15       ; R6 := "LinkModConfig"
 31 [-]: LOADK     R7 K16       ; R7 := ""
 32 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 33 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 6116
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 6120
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 6124
; #Upvalues:       10
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := arcaneManagerMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0xF595ADDE
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 12 [-]: GETUPVAL  R2 U0        ; R2 := U0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 80
 15 [-]: JMP       80           ; PC := 80
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["item"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 80
 21 [-]: JMP       80           ; PC := 80
 22 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["item"]
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x281E6004"]
 26 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: TEST      R1 1         ; if R1 then PC := 80
 29 [-]: JMP       80           ; PC := 80
 30 [-]: EQ        0 R0 K5      ; if R0 ~= 1 then PC := 65
 31 [-]: JMP       65           ; PC := 65
 32 [-]: GETUPVAL  R1 U0        ; R1 := U0
 33 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["item"]
 34 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x17D2B78C"]
 35 [-]: GETGLOBAL R3 K7        ; R3 := Lotus_Game
 36 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["WF_ARCANE_SLOT_0"]
 37 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 38 [-]: TEST      R1 1         ; if R1 then PC := 65
 39 [-]: JMP       65           ; PC := 65
 40 [-]: GETUPVAL  R1 U1        ; R1 := U1
 41 [-]: GETGLOBAL R2 K7        ; R2 := Lotus_Game
 42 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["WF_ARCANE_SLOT_0"]
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 1         ; if R1 then PC := 63
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETUPVAL  R1 U2        ; R1 := U2
 47 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x6D926939"]
 48 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 49 [-]: GETUPVAL  R3 U0        ; R3 := U0
 50 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["item"]
 51 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 52 [-]: GETGLOBAL R2 K10       ; R2 := mMovie
 53 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x5DB0BD4"]
 54 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Language/Menu/ArcaneSlot_MissingAperture"
 55 [-]: MOVE      R5 R0        ; R5 := R0
 56 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 57 [-]: SETTABLE  R6 K13 R1    ; R6["ITEM"] := R1
 58 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["0x38ECFE60"]
 61 [-]: MOVE      R4 R2        ; R4 := R2
 62 [-]: CALL      R3 2 1       ; R3(R4)
 63 [-]: RETURN    R0 1         ; return 
 64 [-]: JMP       80           ; PC := 80
 65 [-]: EQ        0 R0 K15     ; if R0 ~= 2 then PC := 80
 66 [-]: JMP       80           ; PC := 80
 67 [-]: GETUPVAL  R3 U0        ; R3 := U0
 68 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["item"]
 69 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x17D2B78C"]
 70 [-]: GETGLOBAL R5 K7        ; R5 := Lotus_Game
 71 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["WF_ARCANE_SLOT_1"]
 72 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 73 [-]: TEST      R3 1         ; if R3 then PC := 80
 74 [-]: JMP       80           ; PC := 80
 75 [-]: GETUPVAL  R3 U3        ; R3 := U3
 76 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["0x38ECFE60"]
 77 [-]: LOADK     R4 K17       ; R4 := "ApplyArcaneAperture_1"
 78 [-]: CALL      R3 2 1       ; R3(R4)
 79 [-]: RETURN    R0 1         ; return 
 80 [-]: GETUPVAL  R3 U4        ; R3 := U4
 81 [-]: MOVE      R4 R0        ; R4 := R0
 82 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 83 [-]: EQ        1 R3 K18     ; if R3 == nil then PC := 90
 84 [-]: JMP       90           ; PC := 90
 85 [-]: GETUPVAL  R4 U3        ; R4 := U3
 86 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["0x38ECFE60"]
 87 [-]: MOVE      R5 R3        ; R5 := R3
 88 [-]: CALL      R4 2 1       ; R4(R5)
 89 [-]: RETURN    R0 1         ; return 
 90 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 91 [-]: GETUPVAL  R5 U5        ; R5 := U5
 92 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 93 [-]: TEST      R4 1         ; if R4 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETUPVAL  R4 U5        ; R4 := U5
 96 [-]: SELF      R4 R4 K19    ; R5 := R4; R4 := R4["0xA58BB96C"]
 97 [-]: CALL      R4 2 1       ; R4(R5)
 98 [-]: GETUPVAL  R4 U6        ; R4 := U6
 99 [-]: SETTABLE  R4 K20 R0    ; R4["SelectedSlot"] := R0
100 [-]: GETGLOBAL R4 K21       ; R4 := _T
101 [-]: GETUPVAL  R5 U7        ; R5 := U7
102 [-]: SETTABLE  R4 K22 R5    ; R4["OnArcaneSelected"] := R5
103 [-]: GETGLOBAL R4 K21       ; R4 := _T
104 [-]: NEWTABLE  R5 0 6       ; R5 := {}
105 [-]: GETUPVAL  R6 U8        ; R6 := U8
106 [-]: SETTABLE  R5 K24 R6    ; R5["ConfigSlot"] := R6
107 [-]: GETUPVAL  R6 U9        ; R6 := U9
108 [-]: ADD       R6 R6 R0     ; R6 := R6 + R0
109 [-]: SETTABLE  R5 K25 R6    ; R5["Slot"] := R6
110 [-]: GETUPVAL  R6 U0        ; R6 := U0
111 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["storeItem"]
112 [-]: SETTABLE  R5 K26 R6    ; R5["StoreItem"] := R6
113 [-]: GETUPVAL  R6 U0        ; R6 := U0
114 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["item"]
115 [-]: SETTABLE  R5 K28 R6    ; R5["Weapon"] := R6
116 [-]: GETUPVAL  R6 U0        ; R6 := U0
117 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["info"]
118 [-]: SETTABLE  R5 K29 R6    ; R5["Item"] := R6
119 [-]: SETTABLE  R5 K31 K22   ; R5["Callback"] := "OnArcaneSelected"
120 [-]: SETTABLE  R4 K23 R5    ; R4["ArcaneEquipInfo"] := R5
121 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
122 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0x5FF274BB"]
123 [-]: GETGLOBAL R6 K1        ; R6 := arcaneManagerMovie
124 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
125 [-]: MOVE      R4 R5        ; R4 := R5
126 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 6161
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: GETGLOBAL R2 K1        ; R2 := string
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x7B782033"]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: LOADK     R4 K3        ; R4 := 8
  6 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 47
 11 [-]: JMP       47           ; PC := 47
 12 [-]: GETUPVAL  R2 U1        ; R2 := U1
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0x4C8FC6DC"]
 14 [-]: GETGLOBAL R3 K6        ; R3 := mMovie
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 17 [-]: GETGLOBAL R5 K0        ; R5 := 0xF595ADDE
 18 [-]: GETGLOBAL R6 K6        ; R6 := mMovie
 19 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6["0x6B7B470B"]
 20 [-]: LOADK     R8 K8        ; R8 := "AbilityList.Ability"
 21 [-]: MOVE      R9 R1        ; R9 := R1
 22 [-]: LOADK     R10 K9       ; R10 := ".Btn"
 23 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 24 [-]: LOADK     R9 K10       ; R9 := "_screenX"
 25 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 26 [-]: ADD       R6 R6 K11    ; R6 := R6 + 70
 27 [-]: MUL       R7 K12 R1    ; R7 := 20 * R1
 28 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETGLOBAL R6 K0        ; R6 := 0xF595ADDE
 31 [-]: GETGLOBAL R7 K6        ; R7 := mMovie
 32 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7["0x6B7B470B"]
 33 [-]: LOADK     R9 K8        ; R9 := "AbilityList.Ability"
 34 [-]: MOVE      R10 R1       ; R10 := R1
 35 [-]: LOADK     R11 K9       ; R11 := ".Btn"
 36 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 37 [-]: LOADK     R10 K13      ; R10 := "_screenY"
 38 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 39 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 40 [-]: LOADK     R7 K14       ; R7 := 200
 41 [-]: LOADK     R8 K15       ; R8 := 100
 42 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 43 [-]: GETGLOBAL R2 K16       ; R2 := _T
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 46 [-]: SETTABLE  R2 K17 R3    ; R2["InfoPopup_Data"] := R3
 47 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 6176
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["InfoPopup_Data"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 6180
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: TEST      R0 1         ; if R0 then PC := 17
  6 [-]: JMP       17           ; PC := 17
  7 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
  9 [-]: LOADK     R3 K3        ; R3 := "TopMenu.ConfigLeft.Tf.text"
 10 [-]: LOADK     R4 K4        ; R4 := "<MENU_LTRIGGER2>"
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x17028E8F"]
 14 [-]: LOADK     R3 K5        ; R3 := "TopMenu.ConfigRight.Tf.text"
 15 [-]: LOADK     R4 K6        ; R4 := "<MENU_RTRIGGER2>"
 16 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 17 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1C19D966"]
 19 [-]: LOADK     R3 K8        ; R3 := "TopMenu.ConfigLeft"
 20 [-]: LOADK     R4 K9        ; R4 := "_visible"
 21 [-]: MOVE      R5 R0        ; R5 := R0
 22 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 23 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1C19D966"]
 25 [-]: LOADK     R3 K10       ; R3 := "TopMenu.ConfigRight"
 26 [-]: LOADK     R4 K9        ; R4 := "_visible"
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R1 U0        ; R1 := U0
 32 [-]: GETUPVAL  R2 U1        ; R2 := U1
 33 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["SELECTING_CARD"]
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: JMP       38           ; PC := 38
 36 [-]: GETUPVAL  R1 U2        ; R1 := U2
 37 [-]: CALL      R1 1 1       ; R1()
 38 [-]: GETUPVAL  R1 U3        ; R1 := U3
 39 [-]: CALL      R1 1 1       ; R1()
 40 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 6198
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 1         ; if R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R0 U2        ; R0 := U2
 11 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x9D2060CB"]
 12 [-]: CLOSURE   R2 0         ; R2 := closure(Function #186.1)
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: CALL      R0 3 1       ; R0(R1,R2)
 15 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: GETUPVAL  R0 U3        ; R0 := U3
 21 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x9D2060CB"]
 22 [-]: CLOSURE   R2 1         ; R2 := closure(Function #186.2)
 23 [-]: GETUPVAL  R0 U3        ; R0 := U3
 24 [-]: CALL      R0 3 1       ; R0(R1,R2)
 25 [-]: GETUPVAL  R0 U3        ; R0 := U3
 26 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mCategoryMenu"]
 27 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x660D3706"]
 28 [-]: CALL      R0 2 1       ; R0(R1)
 29 [-]: GETUPVAL  R0 U3        ; R0 := U3
 30 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mSortMenu"]
 31 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x5C92AF6F"]
 32 [-]: CALL      R0 2 1       ; R0(R1)
 33 [-]: GETGLOBAL R0 K6        ; R0 := Engine
 34 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["0x9490FE70"]
 35 [-]: CALL      R0 1 2       ; R0 := R0()
 36 [-]: TEST      R0 0         ; if not R0 then PC := 52
 37 [-]: JMP       52           ; PC := 52
 38 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 39 [-]: GETUPVAL  R1 U4        ; R1 := U4
 40 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 41 [-]: TEST      R0 1         ; if R0 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: GETGLOBAL R0 K8        ; R0 := mMovie
 44 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0x17028E8F"]
 45 [-]: GETUPVAL  R2 U4        ; R2 := U4
 46 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mClipName"]
 47 [-]: LOADK     R3 K11       ; R3 := ".Callout.Tf.text"
 48 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 49 [-]: GETUPVAL  R3 U4        ; R3 := U4
 50 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mCallout"]
 51 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 52 [-]: RETURN    R0 1         ; return 


; Function #186.1:
;
; Name:            
; Defined at line: 6204
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: LOADK     R3 K3        ; R3 := "<MOD_SELECTOR>"
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: SETTABLE  R0 K0 R1     ; R0["mSelectionText"] := R1
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mClipName"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xA372F64A"]
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: RETURN    R0 1         ; return 


; Function #186.2:
;
; Name:            
; Defined at line: 6215
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x5DB0BD4"]
  3 [-]: LOADK     R3 K3        ; R3 := "<MOD_SELECTOR>"
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: SETTABLE  R0 K0 R1     ; R0["mSelectionText"] := R1
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mClipName"]
  8 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0xA372F64A"]
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 1       ; R1(R2)
 14 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 6232
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["info"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mItemId"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mId"]
 11 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R1 1 1       ; R1()
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mSelectedElement"]
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["Id"]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R1 3 1       ; R1(R2,R3)
 21 [-]: RETURN    R0 1         ; return 


