code size: 1495
code size: 15
code size: 122
code size: 13
code size: 35
code size: 123
code size: 13
code size: 21
code size: 29
code size: 15
code size: 53
code size: 20
code size: 30
code size: 142
code size: 13
code size: 114
code size: 39
code size: 27
code size: 22
code size: 12
code size: 3
code size: 60
code size: 15
code size: 37
code size: 89
code size: 58
code size: 23
code size: 255
code size: 18
code size: 28
code size: 138
code size: 226
code size: 341
code size: 6
code size: 12
code size: 3
code size: 57
code size: 126
code size: 45
code size: 179
code size: 3
code size: 8
code size: 50
code size: 7
code size: 18
code size: 156
code size: 122
code size: 67
code size: 252
code size: 58
code size: 120
code size: 341
code size: 41
code size: 329
code size: 6
code size: 3
code size: 31
code size: 40
code size: 23
code size: 322
code size: 38
code size: 4
code size: 16
code size: 10
code size: 16
code size: 27
code size: 39
code size: 881
code size: 333
code size: 216
code size: 78
code size: 26
code size: 35
code size: 42
code size: 72
code size: 64
code size: 605
code size: 22
code size: 29
code size: 66
code size: 105
code size: 237
code size: 109
code size: 155
code size: 50
code size: 17
code size: 270
code size: 30
code size: 22
code size: 68
code size: 1
code size: 39
code size: 1
code size: 7
code size: 2
code size: 19
code size: 21
code size: 66
code size: 54
code size: 18
code size: 6
code size: 15
code size: 201
code size: 38
code size: 26
code size: 83
code size: 42
code size: 1
code size: 32
code size: 39
code size: 1
code size: 55
code size: 63
code size: 93
code size: 25
code size: 110
code size: 69
code size: 26
code size: 98
code size: 19
code size: 44
code size: 23
code size: 112
code size: 214
code size: 718
code size: 36
code size: 917
code size: 3
code size: 8
code size: 126
code size: 3
code size: 17
code size: 20
code size: 33
code size: 322
code size: 35
code size: 36
code size: 19
code size: 975
code size: 55
code size: 169
code size: 70
code size: 50
code size: 15
code size: 1271
code size: 33
code size: 49
code size: 40
code size: 51
code size: 939
code size: 35
code size: 3
code size: 51
code size: 5
code size: 51
code size: 5
code size: 40
code size: 73
code size: 221
code size: 14
code size: 19
code size: 2
code size: 1
code size: 17
code size: 101
code size: 5
code size: 50
code size: 14
code size: 157
code size: 126
code size: 68
code size: 8
code size: 1444
code size: 30
code size: 30
code size: 36
code size: 877
code size: 27
code size: 131
code size: 27
code size: 587
code size: 62
code size: 20
code size: 20
code size: 11
code size: 113
code size: 6
code size: 6
code size: 127
code size: 373
code size: 6
code size: 6
code size: 17
code size: 16
code size: 9
code size: 6
code size: 3
code size: 19
code size: 5
code size: 3
code size: 65
code size: 199
code size: 10
code size: 3
code size: 49
code size: 5
code size: 3
; This file has been disassembled using luadec 2.0.2 by sztupy (http://winmo.sztupy.hu)
; Command line was: -dis C:\wlua_dump\path\Lotus\Interface\MapRedux.lua 

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  249

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
  3 [-]: NEWTABLE  R8 0 0       ; R8 := {}
  4 [-]: GETGLOBAL R9 K0        ; R9 := 0x7C282057
  5 [-]: LOADK     R10 K1       ; R10 := "/Lotus/Types/Lore/PrimaryCodexManifest"
  6 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  7 [-]: GETGLOBAL R10 K2       ; R10 := 0x2C00D429
  8 [-]: LOADK     R11 K3       ; R11 := "/Lotus/Types/Keys/VeyHekKey"
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: GETGLOBAL R11 K2       ; R11 := 0x2C00D429
 11 [-]: LOADK     R12 K4       ; R12 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 12 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 13 [-]: GETGLOBAL R12 K2       ; R12 := 0x2C00D429
 14 [-]: LOADK     R13 K5       ; R13 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
 15 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 16 [-]: LOADNIL   R13 R13      ; R13 := nil
 17 [-]: NEWTABLE  R14 0 0      ; R14 := {}
 18 [-]: NEWTABLE  R15 0 5      ; R15 := {}
 19 [-]: GETGLOBAL R16 K7       ; R16 := 0x221C9700
 20 [-]: CALL      R16 1 2      ; R16 := R16()
 21 [-]: SETTABLE  R15 K6 R16   ; R15["pos"] := R16
 22 [-]: GETGLOBAL R16 K7       ; R16 := 0x221C9700
 23 [-]: CALL      R16 1 2      ; R16 := R16()
 24 [-]: SETTABLE  R15 K8 R16   ; R15["originPos"] := R16
 25 [-]: GETGLOBAL R16 K7       ; R16 := 0x221C9700
 26 [-]: CALL      R16 1 2      ; R16 := R16()
 27 [-]: SETTABLE  R15 K9 R16   ; R15["origFacing"] := R16
 28 [-]: GETGLOBAL R16 K7       ; R16 := 0x221C9700
 29 [-]: CALL      R16 1 2      ; R16 := R16()
 30 [-]: SETTABLE  R15 K10 R16  ; R15["skyOrigin"] := R16
 31 [-]: SETTABLE  R15 K11 K12  ; R15["zoomLevel"] := 0
 32 [-]: LOADNIL   R16 R16      ; R16 := nil
 33 [-]: NEWTABLE  R17 0 3      ; R17 := {}
 34 [-]: SETTABLE  R17 K13 K14  ; R17["Movie"] := nil
 35 [-]: SETTABLE  R17 K15 K16  ; R17["Open"] := "0x0"
 36 [-]: SETTABLE  R17 K17 K16  ; R17["DioOpen"] := "0x0"
 37 [-]: LOADNIL   R18 R20      ; R18 := R19 := R20 := nil
 38 [-]: MOVE      R21 R0       ; R21 := R0
 39 [-]: LOADK     R22 K18      ; R22 := -1
 40 [-]: NEWTABLE  R23 0 0      ; R23 := {}
 41 [-]: NEWTABLE  R24 0 0      ; R24 := {}
 42 [-]: NEWTABLE  R25 0 0      ; R25 := {}
 43 [-]: NEWTABLE  R26 0 0      ; R26 := {}
 44 [-]: NEWTABLE  R27 0 0      ; R27 := {}
 45 [-]: NEWTABLE  R28 0 0      ; R28 := {}
 46 [-]: NEWTABLE  R29 0 0      ; R29 := {}
 47 [-]: NEWTABLE  R30 0 4      ; R30 := {}
 48 [-]: SETTABLE  R30 K19 K20  ; R30["STARTING_ZOOM"] := -8
 49 [-]: SETTABLE  R30 K21 K22  ; R30["MAX_ZOOM"] := 4.5
 50 [-]: SETTABLE  R30 K23 K24  ; R30["MIN_ZOOM"] := -15
 51 [-]: SETTABLE  R30 K25 K20  ; R30["ZOOM_OUT_THRESHOLD"] := -8
 52 [-]: MOVE      R31 R0       ; R31 := R0
 53 [-]: LOADNIL   R32 R34      ; R32 := R33 := R34 := nil
 54 [-]: GETGLOBAL R35 K26      ; R35 := 0x70D42C02
 55 [-]: LOADK     R36 K27      ; R36 := 0.5
 56 [-]: LOADK     R37 K28      ; R37 := 0.17499999701977
 57 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
 58 [-]: GETGLOBAL R36 K26      ; R36 := 0x70D42C02
 59 [-]: LOADK     R37 K27      ; R37 := 0.5
 60 [-]: LOADK     R38 K28      ; R38 := 0.17499999701977
 61 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
 62 [-]: GETGLOBAL R37 K26      ; R37 := 0x70D42C02
 63 [-]: GETTABLE  R38 R30 K19  ; R38 := R30["STARTING_ZOOM"]
 64 [-]: LOADK     R39 K28      ; R39 := 0.17499999701977
 65 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
 66 [-]: LOADNIL   R38 R39      ; R38 := R39 := nil
 67 [-]: NEWTABLE  R40 0 0      ; R40 := {}
 68 [-]: NEWTABLE  R41 0 2      ; R41 := {}
 69 [-]: SETTABLE  R41 K29 K30  ; R41["Alpha"] := 1
 70 [-]: SETTABLE  R41 K31 K14  ; R41["Node"] := nil
 71 [-]: NEWTABLE  R42 0 2      ; R42 := {}
 72 [-]: SETTABLE  R42 K29 K30  ; R42["Alpha"] := 1
 73 [-]: SETTABLE  R42 K32 K14  ; R42["Region"] := nil
 74 [-]: LOADNIL   R43 R44      ; R43 := R44 := nil
 75 [-]: NEWTABLE  R45 0 5      ; R45 := {}
 76 [-]: SETTABLE  R45 K32 K14  ; R45["Region"] := nil
 77 [-]: SETTABLE  R45 K33 K14  ; R45["RegionLabel"] := nil
 78 [-]: SETTABLE  R45 K31 K14  ; R45["Node"] := nil
 79 [-]: SETTABLE  R45 K34 K14  ; R45["UpdateTimer"] := nil
 80 [-]: SETTABLE  R45 K35 K14  ; R45["NodeTime"] := nil
 81 [-]: LOADNIL   R46 R47      ; R46 := R47 := nil
 82 [-]: LOADK     R48 K36      ; R48 := 12
 83 [-]: LOADK     R49 K12      ; R49 := 0
 84 [-]: LOADK     R50 K37      ; R50 := 50
 85 [-]: LOADNIL   R51 R55      ; R51 := R52 := R53 := R54 := R55 := nil
 86 [-]: NEWTABLE  R56 0 2      ; R56 := {}
 87 [-]: SETTABLE  R56 K31 K14  ; R56["Node"] := nil
 88 [-]: SETTABLE  R56 K38 K14  ; R56["SectorName"] := nil
 89 [-]: LOADNIL   R57 R58      ; R57 := R58 := nil
 90 [-]: NEWTABLE  R59 0 3      ; R59 := {}
 91 [-]: SETTABLE  R59 K39 K14  ; R59["CountdownFx"] := nil
 92 [-]: NEWTABLE  R60 0 0      ; R60 := {}
 93 [-]: SETTABLE  R59 K40 R60  ; R59["PendingFx"] := R60
 94 [-]: NEWTABLE  R60 0 0      ; R60 := {}
 95 [-]: SETTABLE  R59 K41 R60  ; R59["QuestFx"] := R60
 96 [-]: NEWTABLE  R60 0 2      ; R60 := {}
 97 [-]: SETTABLE  R60 K38 K42  ; R60["SectorName"] := ""
 98 [-]: SETTABLE  R60 K43 K42  ; R60["MissionTier"] := ""
 99 [-]: NEWTABLE  R61 0 3      ; R61 := {}
100 [-]: SETTABLE  R61 K38 K42  ; R61["SectorName"] := ""
101 [-]: SETTABLE  R61 K44 K12  ; R61["Difficulty"] := 0
102 [-]: SETTABLE  R61 K45 K14  ; R61["MovieInst"] := nil
103 [-]: LOADNIL   R62 R62      ; R62 := nil
104 [-]: NEWTABLE  R63 0 4      ; R63 := {}
105 [-]: SETTABLE  R63 K46 K12  ; R63["BgWidth"] := 0
106 [-]: SETTABLE  R63 K47 K12  ; R63["BgHeight"] := 0
107 [-]: SETTABLE  R63 K48 K12  ; R63["InitLocationPicHeight"] := 0
108 [-]: SETTABLE  R63 K49 K12  ; R63["InitLocationPicYPos"] := 0
109 [-]: NEWTABLE  R64 0 0      ; R64 := {}
110 [-]: NEWTABLE  R65 0 0      ; R65 := {}
111 [-]: NEWTABLE  R66 0 0      ; R66 := {}
112 [-]: NEWTABLE  R67 0 0      ; R67 := {}
113 [-]: MOVE      R68 R0       ; R68 := R0
114 [-]: MOVE      R69 R0       ; R69 := R0
115 [-]: NEWTABLE  R70 0 1      ; R70 := {}
116 [-]: SETTABLE  R70 K50 K16  ; R70["Playing"] := "0x0"
117 [-]: LOADNIL   R71 R71      ; R71 := nil
118 [-]: MOVE      R72 R0       ; R72 := R0
119 [-]: NEWTABLE  R73 0 4      ; R73 := {}
120 [-]: SETTABLE  R73 K51 K42  ; R73["sectorName"] := ""
121 [-]: SETTABLE  R73 K52 K42  ; R73["sectorLoc"] := ""
122 [-]: SETTABLE  R73 K53 K54  ; R73["mBusyPlayerLoad"] := 0.69999998807907
123 [-]: SETTABLE  R73 K55 K56  ; R73["mAutoJoinIfNotBusy"] := "0x1"
124 [-]: MOVE      R74 R1       ; R74 := R1
125 [-]: NEWTABLE  R75 0 0      ; R75 := {}
126 [-]: NEWTABLE  R76 0 2      ; R76 := {}
127 [-]: SETTABLE  R76 K31 K14  ; R76["Node"] := nil
128 [-]: SETTABLE  R76 K57 K18  ; R76["Timer"] := -1
129 [-]: NEWTABLE  R77 0 3      ; R77 := {}
130 [-]: SETTABLE  R77 K58 K14  ; R77["Previous"] := nil
131 [-]: SETTABLE  R77 K59 K14  ; R77["Target"] := nil
132 [-]: GETGLOBAL R78 K26      ; R78 := 0x70D42C02
133 [-]: LOADK     R79 K30      ; R79 := 1
134 [-]: LOADK     R80 K61      ; R80 := 0.20000000298023
135 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
136 [-]: SETTABLE  R77 K60 R78  ; R77["Prop"] := R78
137 [-]: NEWTABLE  R78 0 0      ; R78 := {}
138 [-]: GETGLOBAL R79 K26      ; R79 := 0x70D42C02
139 [-]: LOADK     R80 K30      ; R80 := 1
140 [-]: LOADK     R81 K28      ; R81 := 0.17499999701977
141 [-]: CALL      R79 3 2      ; R79 := R79(R80,R81)
142 [-]: GETGLOBAL R80 K26      ; R80 := 0x70D42C02
143 [-]: LOADK     R81 K12      ; R81 := 0
144 [-]: LOADK     R82 K28      ; R82 := 0.17499999701977
145 [-]: CALL      R80 3 2      ; R80 := R80(R81,R82)
146 [-]: NEWTABLE  R81 0 0      ; R81 := {}
147 [-]: NEWTABLE  R82 0 0      ; R82 := {}
148 [-]: LOADK     R83 K62      ; R83 := 10
149 [-]: LOADNIL   R84 R84      ; R84 := nil
150 [-]: LOADK     R85 K42      ; R85 := ""
151 [-]: MOVE      R86 R0       ; R86 := R0
152 [-]: LOADNIL   R87 R87      ; R87 := nil
153 [-]: NEWTABLE  R88 0 3      ; R88 := {}
154 [-]: SETTABLE  R88 K63 K16  ; R88["Active"] := "0x0"
155 [-]: GETGLOBAL R89 K65      ; R89 := 0xEC274B1A
156 [-]: LOADK     R90 K66      ; R90 := "CrewShip"
157 [-]: CALL      R89 2 2      ; R89 := R89(R90)
158 [-]: SETTABLE  R88 K64 R89  ; R88["Tag"] := R89
159 [-]: SETTABLE  R88 K67 K14  ; R88["SelectionNode"] := nil
160 [-]: NEWTABLE  R89 0 18     ; R89 := {}
161 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
162 [-]: CALL      R90 1 2      ; R90 := R90()
163 [-]: SETTABLE  R89 K68 R90  ; R89["EMPTY"] := R90
164 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
165 [-]: LOADK     R91 K70      ; R91 := "AlphaAtten"
166 [-]: CALL      R90 2 2      ; R90 := R90(R91)
167 [-]: SETTABLE  R89 K69 R90  ; R89["ALPHA_ATTEN"] := R90
168 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
169 [-]: LOADK     R91 K72      ; R91 := "DESTROYED"
170 [-]: CALL      R90 2 2      ; R90 := R90(R91)
171 [-]: SETTABLE  R89 K71 R90  ; R89["DESTROYED_NODE_TAG"] := R90
172 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
173 [-]: LOADK     R91 K74      ; R91 := "RECONSTRUCTION"
174 [-]: CALL      R90 2 2      ; R90 := R90(R91)
175 [-]: SETTABLE  R89 K73 R90  ; R89["RECONSTRUCTION_NODE_TAG"] := R90
176 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
177 [-]: LOADK     R91 K76      ; R91 := "UnderConstruction"
178 [-]: CALL      R90 2 2      ; R90 := R90(R91)
179 [-]: SETTABLE  R89 K75 R90  ; R89["UNDER_CONSTRUCTION_NODE_TAG"] := R90
180 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
181 [-]: LOADK     R91 K78      ; R91 := "EarthToMoonShortcut"
182 [-]: CALL      R90 2 2      ; R90 := R90(R91)
183 [-]: SETTABLE  R89 K77 R90  ; R89["MOON_SHORTCUT_TAG"] := R90
184 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
185 [-]: LOADK     R91 K80      ; R91 := "UnlitAtten"
186 [-]: CALL      R90 2 2      ; R90 := R90(R91)
187 [-]: SETTABLE  R89 K79 R90  ; R89["UNLIT_ATTEN"] := R90
188 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
189 [-]: LOADK     R91 K82      ; R91 := "StarChartRoot"
190 [-]: CALL      R90 2 2      ; R90 := R90(R91)
191 [-]: SETTABLE  R89 K81 R90  ; R89["STAR_CHART_ROOT"] := R90
192 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
193 [-]: LOADK     R91 K84      ; R91 := "Player"
194 [-]: CALL      R90 2 2      ; R90 := R90(R91)
195 [-]: SETTABLE  R89 K83 R90  ; R89["PLAYER"] := R90
196 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
197 [-]: LOADK     R91 K86      ; R91 := "PlayerOperator"
198 [-]: CALL      R90 2 2      ; R90 := R90(R91)
199 [-]: SETTABLE  R89 K85 R90  ; R89["PLAYER_OPERATOR"] := R90
200 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
201 [-]: LOADK     R91 K88      ; R91 := "PlayerLight"
202 [-]: CALL      R90 2 2      ; R90 := R90(R91)
203 [-]: SETTABLE  R89 K87 R90  ; R89["PLAYER_LIGHT"] := R90
204 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
205 [-]: LOADK     R91 K90      ; R91 := "SkyCube"
206 [-]: CALL      R90 2 2      ; R90 := R90(R91)
207 [-]: SETTABLE  R89 K89 R90  ; R89["SKY_CUBE"] := R90
208 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
209 [-]: LOADK     R91 K92      ; R91 := "VoidT2"
210 [-]: CALL      R90 2 2      ; R90 := R90(R91)
211 [-]: SETTABLE  R89 K91 R90  ; R89["VOIDT2"] := R90
212 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
213 [-]: LOADK     R91 K94      ; R91 := "VoidT3"
214 [-]: CALL      R90 2 2      ; R90 := R90(R91)
215 [-]: SETTABLE  R89 K93 R90  ; R89["VOIDT3"] := R90
216 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
217 [-]: LOADK     R91 K96      ; R91 := "VoidT4"
218 [-]: CALL      R90 2 2      ; R90 := R90(R91)
219 [-]: SETTABLE  R89 K95 R90  ; R89["VOIDT4"] := R90
220 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
221 [-]: LOADK     R91 K98      ; R91 := "VoidT5"
222 [-]: CALL      R90 2 2      ; R90 := R90(R91)
223 [-]: SETTABLE  R89 K97 R90  ; R89["VOIDT5"] := R90
224 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
225 [-]: LOADK     R91 K99      ; R91 := "GAME_C1_HEAD1"
226 [-]: CALL      R90 2 2      ; R90 := R90(R91)
227 [-]: SETTABLE  R89 K99 R90  ; R89["GAME_C1_HEAD1"] := R90
228 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
229 [-]: LOADK     R91 K101     ; R91 := "MacheteMayhem"
230 [-]: CALL      R90 2 2      ; R90 := R90(R91)
231 [-]: SETTABLE  R89 K100 R90 ; R89["MACHETE_MAYHEM"] := R90
232 [-]: GETGLOBAL R90 K65      ; R90 := 0xEC274B1A
233 [-]: LOADK     R91 K103     ; R91 := "TennoConRelay"
234 [-]: CALL      R90 2 2      ; R90 := R90(R91)
235 [-]: SETTABLE  R89 K102 R90 ; R89["TENNOCON_RELAY"] := R90
236 [-]: NEWTABLE  R90 0 0      ; R90 := {}
237 [-]: SETTABLE  R89 K104 R90 ; R89["INFLUENCE_MAP"] := R90
238 [-]: NEWTABLE  R90 0 14     ; R90 := {}
239 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
240 [-]: LOADK     R92 K12      ; R92 := 0
241 [-]: LOADK     R93 K107     ; R93 := 8
242 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
243 [-]: SETTABLE  R90 K105 R91 ; R90["LINE_CULL_DISTANCE"] := R91
244 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
245 [-]: LOADK     R92 K12      ; R92 := 0
246 [-]: LOADK     R93 K109     ; R93 := 17
247 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
248 [-]: SETTABLE  R90 K108 R91 ; R90["SHORTCUT_CULL_DISTANCE"] := R91
249 [-]: SETTABLE  R90 K110 K111; R90["PLANET_UNIT_MULTIPLIER"] := 0.14259999990463
250 [-]: SETTABLE  R90 K112 K113; R90["INACTIVE_NODE_ALPHA"] := 100
251 [-]: SETTABLE  R90 K114 K113; R90["LABEL_ALPHA"] := 100
252 [-]: SETTABLE  R90 K115 K116; R90["DECO_SCALE_MULTIPLIER"] := 2
253 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
254 [-]: LOADK     R92 K118     ; R92 := -2
255 [-]: LOADK     R93 K12      ; R93 := 0
256 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
257 [-]: SETTABLE  R90 K117 R91 ; R90["LAYER_1_RANGE"] := R91
258 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
259 [-]: LOADK     R92 K118     ; R92 := -2
260 [-]: LOADK     R93 K116     ; R93 := 2
261 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
262 [-]: SETTABLE  R90 K119 R91 ; R90["LAYER_2_RANGE"] := R91
263 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
264 [-]: LOADK     R92 K121     ; R92 := -12
265 [-]: LOADK     R93 K12      ; R93 := 0
266 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
267 [-]: SETTABLE  R90 K120 R91 ; R90["SHORTCUT_RANGE"] := R91
268 [-]: GETGLOBAL R91 K106     ; R91 := 0x994A1A7
269 [-]: LOADK     R92 K123     ; R92 := -20
270 [-]: LOADK     R93 K12      ; R93 := 0
271 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
272 [-]: SETTABLE  R90 K122 R91 ; R90["PLANET_VIS_RANGE"] := R91
273 [-]: GETGLOBAL R91 K7       ; R91 := 0x221C9700
274 [-]: LOADK     R92 K12      ; R92 := 0
275 [-]: LOADK     R93 K27      ; R93 := 0.5
276 [-]: LOADK     R94 K12      ; R94 := 0
277 [-]: CALL      R91 4 2      ; R91 := R91(R92,R93,R94)
278 [-]: SETTABLE  R90 K124 R91 ; R90["CAMERA_OFFSET"] := R91
279 [-]: GETGLOBAL R91 K7       ; R91 := 0x221C9700
280 [-]: LOADK     R92 K12      ; R92 := 0
281 [-]: LOADK     R93 K12      ; R93 := 0
282 [-]: LOADK     R94 K30      ; R94 := 1
283 [-]: CALL      R91 4 2      ; R91 := R91(R92,R93,R94)
284 [-]: SETTABLE  R90 K125 R91 ; R90["CAMERA_FOCUS_DIR"] := R91
285 [-]: GETGLOBAL R91 K127     ; R91 := 0x1E4F6281
286 [-]: LOADK     R92 K12      ; R92 := 0
287 [-]: LOADK     R93 K128     ; R93 := 90
288 [-]: LOADK     R94 K12      ; R94 := 0
289 [-]: CALL      R91 4 2      ; R91 := R91(R92,R93,R94)
290 [-]: SETTABLE  R90 K126 R91 ; R90["RING_ROTATION"] := R91
291 [-]: SETTABLE  R90 K129 K130; R90["MAX_SHADER_INFLUENCES"] := 32
292 [-]: NEWTABLE  R91 5 0      ; R91 := {}
293 [-]: LOADK     R92 K131     ; R92 := "/Lotus/Language/Clan/Clan_Tier1"
294 [-]: LOADK     R93 K132     ; R93 := "/Lotus/Language/Clan/Clan_Tier2"
295 [-]: LOADK     R94 K133     ; R94 := "/Lotus/Language/Clan/Clan_Tier3"
296 [-]: LOADK     R95 K134     ; R95 := "/Lotus/Language/Clan/Clan_Tier4"
297 [-]: LOADK     R96 K135     ; R96 := "/Lotus/Language/Clan/Clan_Tier5"
298 [-]: SETLIST   R91 5 1      ; R91[(1-1)*FPF+i] := R(91+i), 1 <= i <= 5
299 [-]: LOADNIL   R92 R93      ; R92 := R93 := nil
300 [-]: NEWTABLE  R94 0 3      ; R94 := {}
301 [-]: SETTABLE  R94 K136 K16 ; R94["mShiftDown"] := "0x0"
302 [-]: SETTABLE  R94 K137 K16 ; R94["mControlDown"] := "0x0"
303 [-]: SETTABLE  R94 K138 K16 ; R94["mAltDown"] := "0x0"
304 [-]: MOVE      R95 R0       ; R95 := R0
305 [-]: NEWTABLE  R96 0 8      ; R96 := {}
306 [-]: SETTABLE  R96 K139 K30 ; R96["READ_ONLY"] := 1
307 [-]: SETTABLE  R96 K140 K116; R96["EDIT_NODES"] := 2
308 [-]: SETTABLE  R96 K141 K142; R96["EDIT_EDGES"] := 3
309 [-]: SETTABLE  R96 K143 K144; R96["EDIT_NODE_DECOS"] := 4
310 [-]: SETTABLE  R96 K145 K146; R96["EDIT_REGIONS"] := 5
311 [-]: SETTABLE  R96 K147 K148; R96["EDIT_REGION_FRAMING"] := 6
312 [-]: SETTABLE  R96 K149 K150; R96["EDIT_SHORTCUT_CONTROL_POINTS"] := 7
313 [-]: SETTABLE  R96 K151 K107; R96["MAX_VALUE"] := 8
314 [-]: GETTABLE  R97 R96 K139 ; R97 := R96["READ_ONLY"]
315 [-]: LOADNIL   R98 R99      ; R98 := R99 := nil
316 [-]: GETGLOBAL R100 K152    ; R100 := 0x329BDC44
317 [-]: LOADK     R101 K153    ; R101 := "EE.Interface.Utilities"
318 [-]: CALL      R100 2 2     ; R100 := R100(R101)
319 [-]: GETGLOBAL R101 K152    ; R101 := 0x329BDC44
320 [-]: LOADK     R102 K154    ; R102 := "Lotus.Interface.LotusUtilities"
321 [-]: CALL      R101 2 2     ; R101 := R101(R102)
322 [-]: GETGLOBAL R102 K152    ; R102 := 0x329BDC44
323 [-]: LOADK     R103 K155    ; R103 := "Lotus.Interface.FortressUtilities"
324 [-]: CALL      R102 2 2     ; R102 := R102(R103)
325 [-]: GETGLOBAL R103 K152    ; R103 := 0x329BDC44
326 [-]: LOADK     R104 K156    ; R104 := "Lotus.Interface.Libs.DioramaLoader"
327 [-]: CALL      R103 2 2     ; R103 := R103(R104)
328 [-]: GETGLOBAL R104 K152    ; R104 := 0x329BDC44
329 [-]: LOADK     R105 K157    ; R105 := "Lotus.Interface.LotusNetworkUtilities"
330 [-]: CALL      R104 2 2     ; R104 := R104(R105)
331 [-]: GETGLOBAL R105 K152    ; R105 := 0x329BDC44
332 [-]: LOADK     R106 K158    ; R106 := "Lotus.Interface.MissionRequirementUtilities"
333 [-]: CALL      R105 2 2     ; R105 := R105(R106)
334 [-]: GETGLOBAL R106 K152    ; R106 := 0x329BDC44
335 [-]: LOADK     R107 K159    ; R107 := "Lotus.Scripts.Nemesis.NemesisGenerator"
336 [-]: CALL      R106 2 2     ; R106 := R106(R107)
337 [-]: LOADNIL   R107 R109    ; R107 := R108 := R109 := nil
338 [-]: GETGLOBAL R110 K26     ; R110 := 0x70D42C02
339 [-]: LOADK     R111 K12     ; R111 := 0
340 [-]: LOADK     R112 K160    ; R112 := 0.15000000596046
341 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
342 [-]: GETGLOBAL R111 K26     ; R111 := 0x70D42C02
343 [-]: LOADK     R112 K12     ; R112 := 0
344 [-]: LOADK     R113 K160    ; R113 := 0.15000000596046
345 [-]: CALL      R111 3 2     ; R111 := R111(R112,R113)
346 [-]: LOADNIL   R112 R112    ; R112 := nil
347 [-]: NEWTABLE  R113 2 0     ; R113 := {}
348 [-]: GETGLOBAL R114 K26     ; R114 := 0x70D42C02
349 [-]: LOADK     R115 K12     ; R115 := 0
350 [-]: LOADK     R116 K30     ; R116 := 1
351 [-]: CALL      R114 3 2     ; R114 := R114(R115,R116)
352 [-]: GETGLOBAL R115 K26     ; R115 := 0x70D42C02
353 [-]: LOADK     R116 K12     ; R116 := 0
354 [-]: LOADK     R117 K30     ; R117 := 1
355 [-]: CALL      R115 3 2     ; R115 := R115(R116,R117)
356 [-]: GETGLOBAL R116 K26     ; R116 := 0x70D42C02
357 [-]: LOADK     R117 K12     ; R117 := 0
358 [-]: LOADK     R118 K30     ; R118 := 1
359 [-]: CALL      R116 3 0     ; R116,... := R116(R117,R118)
360 [-]: SETLIST   R113 0 1     ; R113[(1-1)*FPF+i] := R(113+i), 1 <= i <= 0
361 [-]: GETGLOBAL R114 K161    ; R114 := 0xB5A59043
362 [-]: CALL      R114 1 2     ; R114 := R114()
363 [-]: LOADNIL   R115 R116    ; R115 := R116 := nil
364 [-]: MOVE      R117 R0      ; R117 := R0
365 [-]: LOADNIL   R118 R122    ; R118 := R119 := R120 := R121 := R122 := nil
366 [-]: NEWTABLE  R123 0 0     ; R123 := {}
367 [-]: NEWTABLE  R124 0 9     ; R124 := {}
368 [-]: SETTABLE  R124 K162 K16; R124["IsVisible"] := "0x0"
369 [-]: SETTABLE  R124 K163 K12; R124["X"] := 0
370 [-]: SETTABLE  R124 K164 K12; R124["Y"] := 0
371 [-]: SETTABLE  R124 K165 K30; R124["SpeedMultiplier"] := 1
372 [-]: SETTABLE  R124 K166 K12; R124["MinX"] := 0
373 [-]: SETTABLE  R124 K167 K12; R124["MinY"] := 0
374 [-]: SETTABLE  R124 K168 K12; R124["MaxX"] := 0
375 [-]: SETTABLE  R124 K169 K12; R124["MaxY"] := 0
376 [-]: SETTABLE  R124 K170 K12; R124["MouseMoves"] := 0
377 [-]: LOADNIL   R125 R126    ; R125 := R126 := nil
378 [-]: NEWTABLE  R127 0 5     ; R127 := {}
379 [-]: SETTABLE  R127 K171 K172; R127["SpaceMultiplier"] := 0.36000001430511
380 [-]: SETTABLE  R127 K173 K174; R127["ZoomedMultiplier"] := 0.28000000119209
381 [-]: SETTABLE  R127 K175 K160; R127["SpaceHoveringMultiplier"] := 0.15000000596046
382 [-]: SETTABLE  R127 K176 K177; R127["ZoomedHoveringMultiplier"] := 0.10000000149012
383 [-]: SETTABLE  R127 K178 K30; R127["AspectRatio"] := 1
384 [-]: NEWTABLE  R128 0 10    ; R128 := {}
385 [-]: SETTABLE  R128 K179 K12; R128["Velocity"] := 0
386 [-]: SETTABLE  R128 K180 K181; R128["LoopTime"] := 192800
387 [-]: SETTABLE  R128 K64 K182; R128["Tag"] := "/Lotus/Language/Locations/Fortress"
388 [-]: SETTABLE  R128 K32 K14 ; R128["Region"] := nil
389 [-]: SETTABLE  R128 K183 K16; R128["ShowPath"] := "0x0"
390 [-]: NEWTABLE  R129 0 0     ; R129 := {}
391 [-]: SETTABLE  R128 K184 R129; R128["Splines"] := R129
392 [-]: NEWTABLE  R129 0 0     ; R129 := {}
393 [-]: SETTABLE  R128 K185 R129; R128["Sectors"] := R129
394 [-]: NEWTABLE  R129 0 0     ; R129 := {}
395 [-]: SETTABLE  R128 K186 R129; R128["Nodes"] := R129
396 [-]: SETTABLE  R128 K187 K14; R128["SubLabelIndex"] := nil
397 [-]: SETTABLE  R128 K188 K14; R128["SplinePoints"] := nil
398 [-]: MOVE      R129 R0      ; R129 := R0
399 [-]: NEWTABLE  R130 0 0     ; R130 := {}
400 [-]: CLOSURE   R131 0       ; R131 := closure(Function #1)
401 [-]: CLOSURE   R132 1       ; R132 := closure(Function #2)
402 [-]: MOVE      R0 R45       ; R0 := R45
403 [-]: MOVE      R0 R100      ; R0 := R100
404 [-]: MOVE      R0 R43       ; R0 := R43
405 [-]: MOVE      R0 R127      ; R0 := R127
406 [-]: MOVE      R0 R124      ; R0 := R124
407 [-]: MOVE      R0 R131      ; R0 := R131
408 [-]: CLOSURE   R133 2       ; R133 := closure(Function #3)
409 [-]: CLOSURE   R134 3       ; R134 := closure(Function #4)
410 [-]: MOVE      R0 R100      ; R0 := R100
411 [-]: MOVE      R0 R63       ; R0 := R63
412 [-]: CLOSURE   R135 4       ; R135 := closure(Function #5)
413 [-]: MOVE      R0 R134      ; R0 := R134
414 [-]: MOVE      R0 R124      ; R0 := R124
415 [-]: MOVE      R0 R100      ; R0 := R100
416 [-]: MOVE      R0 R133      ; R0 := R133
417 [-]: MOVE      R0 R0        ; R0 := R0
418 [-]: MOVE      R0 R127      ; R0 := R127
419 [-]: CLOSURE   R136 5       ; R136 := closure(Function #6)
420 [-]: CLOSURE   R137 6       ; R137 := closure(Function #7)
421 [-]: MOVE      R0 R128      ; R0 := R128
422 [-]: CLOSURE   R138 7       ; R138 := closure(Function #8)
423 [-]: MOVE      R0 R86       ; R0 := R86
424 [-]: MOVE      R0 R100      ; R0 := R100
425 [-]: CLOSURE   R139 8       ; R139 := closure(Function #9)
426 [-]: MOVE      R0 R100      ; R0 := R100
427 [-]: MOVE      R0 R123      ; R0 := R123
428 [-]: CLOSURE   R140 9       ; R140 := closure(Function #10)
429 [-]: MOVE      R0 R123      ; R0 := R123
430 [-]: MOVE      R0 R100      ; R0 := R100
431 [-]: CLOSURE   R141 10      ; R141 := closure(Function #11)
432 [-]: CLOSURE   R142 11      ; R142 := closure(Function #12)
433 [-]: CLOSURE   R143 12      ; R143 := closure(Function #13)
434 [-]: MOVE      R0 R97       ; R0 := R97
435 [-]: MOVE      R0 R96       ; R0 := R96
436 [-]: MOVE      R0 R98       ; R0 := R98
437 [-]: MOVE      R0 R94       ; R0 := R94
438 [-]: MOVE      R0 R85       ; R0 := R85
439 [-]: CLOSURE   R144 13      ; R144 := closure(Function #14)
440 [-]: MOVE      R0 R24       ; R0 := R24
441 [-]: MOVE      R0 R143      ; R0 := R143
442 [-]: LOADK     R145 K42     ; R145 := ""
443 [-]: CLOSURE   R146 14      ; R146 := closure(Function #15)
444 [-]: MOVE      R0 R70       ; R0 := R70
445 [-]: MOVE      R0 R145      ; R0 := R145
446 [-]: CLOSURE   R147 15      ; R147 := closure(Function #16)
447 [-]: MOVE      R0 R145      ; R0 := R145
448 [-]: MOVE      R0 R70       ; R0 := R70
449 [-]: CLOSURE   R148 16      ; R148 := closure(Function #17)
450 [-]: MOVE      R0 R100      ; R0 := R100
451 [-]: MOVE      R0 R70       ; R0 := R70
452 [-]: MOVE      R0 R101      ; R0 := R101
453 [-]: CLOSURE   R149 17      ; R149 := closure(Function #18)
454 [-]: MOVE      R0 R147      ; R0 := R147
455 [-]: SETGLOBAL R149 K189    ; OnTransmissionDone := R149
456 [-]: SETGLOBAL R149 K190    ; 0x72BF0075 := R149
457 [-]: CLOSURE   R149 18      ; R149 := closure(Function #19)
458 [-]: MOVE      R0 R71       ; R0 := R71
459 [-]: MOVE      R0 R107      ; R0 := R107
460 [-]: MOVE      R0 R45       ; R0 := R45
461 [-]: MOVE      R0 R149      ; R0 := R149
462 [-]: MOVE      R0 R16       ; R0 := R16
463 [-]: MOVE      R0 R100      ; R0 := R100
464 [-]: MOVE      R0 R146      ; R0 := R146
465 [-]: CLOSURE   R150 19      ; R150 := closure(Function #20)
466 [-]: MOVE      R0 R98       ; R0 := R98
467 [-]: CLOSURE   R151 20      ; R151 := closure(Function #21)
468 [-]: MOVE      R0 R90       ; R0 := R90
469 [-]: MOVE      R0 R97       ; R0 := R97
470 [-]: MOVE      R0 R96       ; R0 := R96
471 [-]: MOVE      R0 R2        ; R0 := R2
472 [-]: MOVE      R0 R98       ; R0 := R98
473 [-]: MOVE      R0 R150      ; R0 := R150
474 [-]: CLOSURE   R152 21      ; R152 := closure(Function #22)
475 [-]: MOVE      R0 R66       ; R0 := R66
476 [-]: MOVE      R0 R90       ; R0 := R90
477 [-]: CLOSURE   R153 22      ; R153 := closure(Function #23)
478 [-]: MOVE      R0 R97       ; R0 := R97
479 [-]: MOVE      R0 R96       ; R0 := R96
480 [-]: MOVE      R0 R152      ; R0 := R152
481 [-]: MOVE      R0 R151      ; R0 := R151
482 [-]: MOVE      R0 R144      ; R0 := R144
483 [-]: CLOSURE   R154 23      ; R154 := closure(Function #24)
484 [-]: MOVE      R0 R28       ; R0 := R28
485 [-]: MOVE      R0 R29       ; R0 := R29
486 [-]: MOVE      R0 R86       ; R0 := R86
487 [-]: MOVE      R0 R1        ; R0 := R1
488 [-]: MOVE      R0 R101      ; R0 := R101
489 [-]: MOVE      R0 R5        ; R0 := R5
490 [-]: MOVE      R0 R95       ; R0 := R95
491 [-]: MOVE      R0 R25       ; R0 := R25
492 [-]: MOVE      R0 R4        ; R0 := R4
493 [-]: MOVE      R0 R2        ; R0 := R2
494 [-]: CLOSURE   R155 24      ; R155 := closure(Function #25)
495 [-]: MOVE      R0 R22       ; R0 := R22
496 [-]: NEWTABLE  R156 0 0     ; R156 := {}
497 [-]: CLOSURE   R157 25      ; R157 := closure(Function #26)
498 [-]: MOVE      R0 R89       ; R0 := R89
499 [-]: MOVE      R0 R90       ; R0 := R90
500 [-]: MOVE      R0 R156      ; R0 := R156
501 [-]: MOVE      R0 R25       ; R0 := R25
502 [-]: MOVE      R0 R100      ; R0 := R100
503 [-]: MOVE      R0 R2        ; R0 := R2
504 [-]: MOVE      R0 R4        ; R0 := R4
505 [-]: CLOSURE   R158 26      ; R158 := closure(Function #27)
506 [-]: MOVE      R0 R100      ; R0 := R100
507 [-]: MOVE      R0 R30       ; R0 := R30
508 [-]: MOVE      R0 R37       ; R0 := R37
509 [-]: MOVE      R0 R156      ; R0 := R156
510 [-]: MOVE      R0 R90       ; R0 := R90
511 [-]: MOVE      R0 R89       ; R0 := R89
512 [-]: CLOSURE   R159 27      ; R159 := closure(Function #28)
513 [-]: MOVE      R0 R88       ; R0 := R88
514 [-]: MOVE      R0 R100      ; R0 := R100
515 [-]: MOVE      R0 R121      ; R0 := R121
516 [-]: MOVE      R0 R68       ; R0 := R68
517 [-]: MOVE      R0 R95       ; R0 := R95
518 [-]: MOVE      R0 R128      ; R0 := R128
519 [-]: MOVE      R0 R102      ; R0 := R102
520 [-]: MOVE      R0 R27       ; R0 := R27
521 [-]: MOVE      R0 R107      ; R0 := R107
522 [-]: MOVE      R0 R0        ; R0 := R0
523 [-]: MOVE      R0 R135      ; R0 := R135
524 [-]: MOVE      R0 R154      ; R0 := R154
525 [-]: MOVE      R0 R85       ; R0 := R85
526 [-]: MOVE      R0 R16       ; R0 := R16
527 [-]: MOVE      R0 R63       ; R0 := R63
528 [-]: MOVE      R0 R31       ; R0 := R31
529 [-]: MOVE      R0 R153      ; R0 := R153
530 [-]: MOVE      R0 R96       ; R0 := R96
531 [-]: MOVE      R0 R155      ; R0 := R155
532 [-]: MOVE      R0 R125      ; R0 := R125
533 [-]: CLOSURE   R160 28      ; R160 := closure(Function #29)
534 [-]: MOVE      R0 R159      ; R0 := R159
535 [-]: SETGLOBAL R160 K191    ; Initialize := R160
536 [-]: SETGLOBAL R160 K192    ; 0x62648036 := R160
537 [-]: CLOSURE   R160 29      ; R160 := closure(Function #30)
538 [-]: MOVE      R0 R101      ; R0 := R101
539 [-]: CLOSURE   R161 30      ; R161 := closure(Function #31)
540 [-]: MOVE      R0 R17       ; R0 := R17
541 [-]: MOVE      R0 R76       ; R0 := R76
542 [-]: MOVE      R0 R160      ; R0 := R160
543 [-]: MOVE      R0 R19       ; R0 := R19
544 [-]: MOVE      R0 R20       ; R0 := R20
545 [-]: MOVE      R0 R18       ; R0 := R18
546 [-]: MOVE      R0 R61       ; R0 := R61
547 [-]: MOVE      R0 R100      ; R0 := R100
548 [-]: CLOSURE   R162 31      ; R162 := closure(Function #32)
549 [-]: MOVE      R0 R88       ; R0 := R88
550 [-]: MOVE      R0 R121      ; R0 := R121
551 [-]: MOVE      R0 R161      ; R0 := R161
552 [-]: MOVE      R0 R100      ; R0 := R100
553 [-]: MOVE      R0 R159      ; R0 := R159
554 [-]: CLOSURE   R163 32      ; R163 := closure(Function #33)
555 [-]: MOVE      R0 R101      ; R0 := R101
556 [-]: MOVE      R0 R122      ; R0 := R122
557 [-]: MOVE      R0 R17       ; R0 := R17
558 [-]: MOVE      R0 R69       ; R0 := R69
559 [-]: MOVE      R0 R100      ; R0 := R100
560 [-]: MOVE      R0 R138      ; R0 := R138
561 [-]: MOVE      R0 R136      ; R0 := R136
562 [-]: MOVE      R0 R37       ; R0 := R37
563 [-]: MOVE      R0 R30       ; R0 := R30
564 [-]: MOVE      R0 R121      ; R0 := R121
565 [-]: MOVE      R0 R95       ; R0 := R95
566 [-]: MOVE      R0 R162      ; R0 := R162
567 [-]: CLOSURE   R164 33      ; R164 := closure(Function #34)
568 [-]: MOVE      R0 R163      ; R0 := R163
569 [-]: SETGLOBAL R164 K193    ; UpdateButtons := R164
570 [-]: SETGLOBAL R164 K194    ; 0xB97434A0 := R164
571 [-]: CLOSURE   R122 34      ; R122 := closure(Function #35)
572 [-]: MOVE      R0 R163      ; R0 := R163
573 [-]: CLOSURE   R164 35      ; R164 := closure(Function #36)
574 [-]: CLOSURE   R165 36      ; R165 := closure(Function #37)
575 [-]: CLOSURE   R166 37      ; R166 := closure(Function #38)
576 [-]: MOVE      R0 R87       ; R0 := R87
577 [-]: MOVE      R0 R90       ; R0 := R90
578 [-]: CLOSURE   R167 38      ; R167 := closure(Function #39)
579 [-]: MOVE      R0 R164      ; R0 := R164
580 [-]: MOVE      R0 R23       ; R0 := R23
581 [-]: MOVE      R0 R128      ; R0 := R128
582 [-]: MOVE      R0 R90       ; R0 := R90
583 [-]: CLOSURE   R168 39      ; R168 := closure(Function #40)
584 [-]: MOVE      R0 R88       ; R0 := R88
585 [-]: MOVE      R0 R68       ; R0 := R68
586 [-]: CLOSURE   R169 40      ; R169 := closure(Function #41)
587 [-]: MOVE      R0 R68       ; R0 := R68
588 [-]: MOVE      R0 R101      ; R0 := R101
589 [-]: MOVE      R0 R1        ; R0 := R1
590 [-]: CLOSURE   R170 41      ; R170 := closure(Function #42)
591 [-]: MOVE      R0 R100      ; R0 := R100
592 [-]: MOVE      R0 R101      ; R0 := R101
593 [-]: CLOSURE   R171 42      ; R171 := closure(Function #43)
594 [-]: MOVE      R0 R7        ; R0 := R7
595 [-]: CLOSURE   R172 43      ; R172 := closure(Function #44)
596 [-]: MOVE      R0 R171      ; R0 := R171
597 [-]: CLOSURE   R173 44      ; R173 := closure(Function #45)
598 [-]: MOVE      R0 R7        ; R0 := R7
599 [-]: MOVE      R0 R1        ; R0 := R1
600 [-]: MOVE      R0 R141      ; R0 := R141
601 [-]: MOVE      R0 R139      ; R0 := R139
602 [-]: MOVE      R0 R8        ; R0 := R8
603 [-]: MOVE      R0 R108      ; R0 := R108
604 [-]: MOVE      R0 R89       ; R0 := R89
605 [-]: MOVE      R0 R109      ; R0 := R109
606 [-]: MOVE      R0 R103      ; R0 := R103
607 [-]: MOVE      R0 R116      ; R0 := R116
608 [-]: MOVE      R0 R112      ; R0 := R112
609 [-]: MOVE      R0 R114      ; R0 := R114
610 [-]: MOVE      R0 R115      ; R0 := R115
611 [-]: MOVE      R0 R77       ; R0 := R77
612 [-]: MOVE      R0 R90       ; R0 := R90
613 [-]: CLOSURE   R174 45      ; R174 := closure(Function #46)
614 [-]: CLOSURE   R175 46      ; R175 := closure(Function #47)
615 [-]: MOVE      R0 R2        ; R0 := R2
616 [-]: MOVE      R0 R1        ; R0 := R1
617 [-]: MOVE      R0 R4        ; R0 := R4
618 [-]: MOVE      R0 R165      ; R0 := R165
619 [-]: MOVE      R0 R3        ; R0 := R3
620 [-]: MOVE      R0 R23       ; R0 := R23
621 [-]: MOVE      R0 R128      ; R0 := R128
622 [-]: MOVE      R0 R139      ; R0 := R139
623 [-]: MOVE      R0 R174      ; R0 := R174
624 [-]: MOVE      R0 R30       ; R0 := R30
625 [-]: MOVE      R0 R141      ; R0 := R141
626 [-]: MOVE      R0 R27       ; R0 := R27
627 [-]: MOVE      R0 R90       ; R0 := R90
628 [-]: MOVE      R0 R167      ; R0 := R167
629 [-]: CLOSURE   R176 47      ; R176 := closure(Function #48)
630 [-]: MOVE      R0 R45       ; R0 := R45
631 [-]: SETGLOBAL R176 K195    ; RollOverRegionLabel := R176
632 [-]: SETGLOBAL R176 K196    ; 0xE570BFF2 := R176
633 [-]: CLOSURE   R176 48      ; R176 := closure(Function #49)
634 [-]: MOVE      R0 R45       ; R0 := R45
635 [-]: SETGLOBAL R176 K197    ; RollOutRegionLabel := R176
636 [-]: SETGLOBAL R176 K198    ; 0xEFF9053C := R176
637 [-]: CLOSURE   R176 49      ; R176 := closure(Function #50)
638 [-]: MOVE      R0 R1        ; R0 := R1
639 [-]: MOVE      R0 R101      ; R0 := R101
640 [-]: MOVE      R0 R173      ; R0 := R173
641 [-]: MOVE      R0 R175      ; R0 := R175
642 [-]: MOVE      R0 R64       ; R0 := R64
643 [-]: MOVE      R0 R2        ; R0 := R2
644 [-]: MOVE      R0 R90       ; R0 := R90
645 [-]: CLOSURE   R177 50      ; R177 := closure(Function #51)
646 [-]: MOVE      R0 R7        ; R0 := R7
647 [-]: MOVE      R0 R8        ; R0 := R8
648 [-]: CLOSURE   R178 51      ; R178 := closure(Function #52)
649 [-]: MOVE      R0 R30       ; R0 := R30
650 [-]: MOVE      R0 R37       ; R0 := R37
651 [-]: MOVE      R0 R34       ; R0 := R34
652 [-]: CLOSURE   R179 52      ; R179 := closure(Function #53)
653 [-]: MOVE      R0 R2        ; R0 := R2
654 [-]: MOVE      R0 R75       ; R0 := R75
655 [-]: MOVE      R0 R109      ; R0 := R109
656 [-]: MOVE      R0 R115      ; R0 := R115
657 [-]: MOVE      R0 R77       ; R0 := R77
658 [-]: MOVE      R0 R83       ; R0 := R83
659 [-]: MOVE      R0 R100      ; R0 := R100
660 [-]: MOVE      R0 R87       ; R0 := R87
661 [-]: MOVE      R0 R34       ; R0 := R34
662 [-]: MOVE      R0 R30       ; R0 := R30
663 [-]: MOVE      R0 R37       ; R0 := R37
664 [-]: MOVE      R0 R66       ; R0 := R66
665 [-]: MOVE      R0 R120      ; R0 := R120
666 [-]: MOVE      R0 R107      ; R0 := R107
667 [-]: MOVE      R0 R119      ; R0 := R119
668 [-]: MOVE      R0 R118      ; R0 := R118
669 [-]: MOVE      R0 R31       ; R0 := R31
670 [-]: MOVE      R0 R163      ; R0 := R163
671 [-]: MOVE      R0 R178      ; R0 := R178
672 [-]: MOVE      R0 R23       ; R0 := R23
673 [-]: CLOSURE   R180 53      ; R180 := closure(Function #54)
674 [-]: MOVE      R0 R2        ; R0 := R2
675 [-]: MOVE      R0 R64       ; R0 := R64
676 [-]: CLOSURE   R181 54      ; R181 := closure(Function #55)
677 [-]: MOVE      R0 R88       ; R0 := R88
678 [-]: MOVE      R0 R89       ; R0 := R89
679 [-]: MOVE      R0 R27       ; R0 := R27
680 [-]: MOVE      R0 R105      ; R0 := R105
681 [-]: MOVE      R0 R68       ; R0 := R68
682 [-]: MOVE      R0 R101      ; R0 := R101
683 [-]: MOVE      R0 R12       ; R0 := R12
684 [-]: MOVE      R0 R84       ; R0 := R84
685 [-]: MOVE      R0 R1        ; R0 := R1
686 [-]: MOVE      R0 R164      ; R0 := R164
687 [-]: MOVE      R0 R24       ; R0 := R24
688 [-]: MOVE      R0 R139      ; R0 := R139
689 [-]: MOVE      R0 R90       ; R0 := R90
690 [-]: MOVE      R0 R25       ; R0 := R25
691 [-]: MOVE      R0 R180      ; R0 := R180
692 [-]: MOVE      R0 R166      ; R0 := R166
693 [-]: MOVE      R0 R29       ; R0 := R29
694 [-]: CLOSURE   R182 55      ; R182 := closure(Function #56)
695 [-]: MOVE      R0 R169      ; R0 := R169
696 [-]: MOVE      R0 R168      ; R0 := R168
697 [-]: MOVE      R0 R170      ; R0 := R170
698 [-]: MOVE      R0 R25       ; R0 := R25
699 [-]: MOVE      R0 R100      ; R0 := R100
700 [-]: MOVE      R0 R81       ; R0 := R81
701 [-]: MOVE      R0 R82       ; R0 := R82
702 [-]: MOVE      R0 R87       ; R0 := R87
703 [-]: MOVE      R0 R143      ; R0 := R143
704 [-]: CLOSURE   R183 56      ; R183 := closure(Function #57)
705 [-]: MOVE      R0 R101      ; R0 := R101
706 [-]: MOVE      R0 R25       ; R0 := R25
707 [-]: MOVE      R0 R26       ; R0 := R26
708 [-]: MOVE      R0 R1        ; R0 := R1
709 [-]: CLOSURE   R184 57      ; R184 := closure(Function #58)
710 [-]: MOVE      R0 R82       ; R0 := R82
711 [-]: MOVE      R0 R81       ; R0 := R81
712 [-]: MOVE      R0 R183      ; R0 := R183
713 [-]: MOVE      R0 R24       ; R0 := R24
714 [-]: MOVE      R0 R182      ; R0 := R182
715 [-]: MOVE      R0 R154      ; R0 := R154
716 [-]: CLOSURE   R185 58      ; R185 := closure(Function #59)
717 [-]: MOVE      R0 R100      ; R0 := R100
718 [-]: CLOSURE   R186 59      ; R186 := closure(Function #60)
719 [-]: MOVE      R0 R24       ; R0 := R24
720 [-]: MOVE      R0 R2        ; R0 := R2
721 [-]: MOVE      R0 R185      ; R0 := R185
722 [-]: GETGLOBAL R187 K65     ; R187 := 0xEC274B1A
723 [-]: LOADK     R188 K199    ; R188 := "SolNode973"
724 [-]: CALL      R187 2 2     ; R187 := R187(R188)
725 [-]: CLOSURE   R188 60      ; R188 := closure(Function #61)
726 [-]: MOVE      R0 R24       ; R0 := R24
727 [-]: MOVE      R0 R2        ; R0 := R2
728 [-]: MOVE      R0 R101      ; R0 := R101
729 [-]: MOVE      R0 R182      ; R0 := R182
730 [-]: MOVE      R0 R187      ; R0 := R187
731 [-]: CLOSURE   R189 61      ; R189 := closure(Function #62)
732 [-]: MOVE      R0 R24       ; R0 := R24
733 [-]: CLOSURE   R190 62      ; R190 := closure(Function #63)
734 [-]: MOVE      R0 R24       ; R0 := R24
735 [-]: MOVE      R0 R25       ; R0 := R25
736 [-]: MOVE      R0 R165      ; R0 := R165
737 [-]: MOVE      R0 R5        ; R0 := R5
738 [-]: MOVE      R0 R1        ; R0 := R1
739 [-]: MOVE      R0 R101      ; R0 := R101
740 [-]: MOVE      R0 R11       ; R0 := R11
741 [-]: MOVE      R0 R87       ; R0 := R87
742 [-]: MOVE      R0 R128      ; R0 := R128
743 [-]: MOVE      R0 R181      ; R0 := R181
744 [-]: MOVE      R0 R2        ; R0 := R2
745 [-]: MOVE      R0 R10       ; R0 := R10
746 [-]: MOVE      R0 R27       ; R0 := R27
747 [-]: MOVE      R0 R100      ; R0 := R100
748 [-]: MOVE      R0 R144      ; R0 := R144
749 [-]: CLOSURE   R191 63      ; R191 := closure(Function #64)
750 [-]: CLOSURE   R192 64      ; R192 := closure(Function #65)
751 [-]: CLOSURE   R193 65      ; R193 := closure(Function #66)
752 [-]: MOVE      R0 R25       ; R0 := R25
753 [-]: CLOSURE   R194 66      ; R194 := closure(Function #67)
754 [-]: MOVE      R0 R3        ; R0 := R3
755 [-]: MOVE      R0 R64       ; R0 := R64
756 [-]: MOVE      R0 R2        ; R0 := R2
757 [-]: MOVE      R0 R191      ; R0 := R191
758 [-]: MOVE      R0 R193      ; R0 := R193
759 [-]: MOVE      R0 R192      ; R0 := R192
760 [-]: CLOSURE   R195 67      ; R195 := closure(Function #68)
761 [-]: MOVE      R0 R6        ; R0 := R6
762 [-]: MOVE      R0 R1        ; R0 := R1
763 [-]: MOVE      R0 R66       ; R0 := R66
764 [-]: MOVE      R0 R67       ; R0 := R67
765 [-]: MOVE      R0 R25       ; R0 := R25
766 [-]: MOVE      R0 R88       ; R0 := R88
767 [-]: MOVE      R0 R128      ; R0 := R128
768 [-]: CLOSURE   R196 68      ; R196 := closure(Function #69)
769 [-]: MOVE      R0 R66       ; R0 := R66
770 [-]: MOVE      R0 R100      ; R0 := R100
771 [-]: MOVE      R0 R90       ; R0 := R90
772 [-]: MOVE      R0 R194      ; R0 := R194
773 [-]: CLOSURE   R197 69      ; R197 := closure(Function #70)
774 [-]: MOVE      R0 R78       ; R0 := R78
775 [-]: MOVE      R0 R66       ; R0 := R66
776 [-]: MOVE      R0 R25       ; R0 := R25
777 [-]: MOVE      R0 R100      ; R0 := R100
778 [-]: CLOSURE   R198 70      ; R198 := closure(Function #71)
779 [-]: MOVE      R0 R100      ; R0 := R100
780 [-]: MOVE      R0 R24       ; R0 := R24
781 [-]: CLOSURE   R199 71      ; R199 := closure(Function #72)
782 [-]: MOVE      R0 R84       ; R0 := R84
783 [-]: CLOSURE   R200 72      ; R200 := closure(Function #73)
784 [-]: MOVE      R0 R100      ; R0 := R100
785 [-]: MOVE      R0 R13       ; R0 := R13
786 [-]: MOVE      R0 R15       ; R0 := R15
787 [-]: MOVE      R0 R14       ; R0 := R14
788 [-]: MOVE      R0 R89       ; R0 := R89
789 [-]: MOVE      R0 R128      ; R0 := R128
790 [-]: MOVE      R0 R199      ; R0 := R199
791 [-]: MOVE      R0 R176      ; R0 := R176
792 [-]: MOVE      R0 R190      ; R0 := R190
793 [-]: MOVE      R0 R195      ; R0 := R195
794 [-]: MOVE      R0 R198      ; R0 := R198
795 [-]: MOVE      R0 R157      ; R0 := R157
796 [-]: MOVE      R0 R25       ; R0 := R25
797 [-]: MOVE      R0 R184      ; R0 := R184
798 [-]: MOVE      R0 R186      ; R0 := R186
799 [-]: MOVE      R0 R188      ; R0 := R188
800 [-]: MOVE      R0 R196      ; R0 := R196
801 [-]: MOVE      R0 R197      ; R0 := R197
802 [-]: MOVE      R0 R140      ; R0 := R140
803 [-]: MOVE      R0 R179      ; R0 := R179
804 [-]: MOVE      R0 R160      ; R0 := R160
805 [-]: CLOSURE   R201 73      ; R201 := closure(Function #74)
806 [-]: MOVE      R0 R32       ; R0 := R32
807 [-]: MOVE      R0 R33       ; R0 := R33
808 [-]: MOVE      R0 R200      ; R0 := R200
809 [-]: CLOSURE   R202 74      ; R202 := closure(Function #75)
810 [-]: MOVE      R0 R32       ; R0 := R32
811 [-]: MOVE      R0 R103      ; R0 := R103
812 [-]: CLOSURE   R203 75      ; R203 := closure(Function #76)
813 [-]: MOVE      R0 R101      ; R0 := R101
814 [-]: MOVE      R0 R33       ; R0 := R33
815 [-]: CLOSURE   R204 76      ; R204 := closure(Function #77)
816 [-]: CLOSURE   R205 77      ; R205 := closure(Function #78)
817 [-]: MOVE      R0 R34       ; R0 := R34
818 [-]: MOVE      R0 R58       ; R0 := R58
819 [-]: CLOSURE   R206 78      ; R206 := closure(Function #79)
820 [-]: MOVE      R0 R98       ; R0 := R98
821 [-]: CLOSURE   R207 79      ; R207 := closure(Function #80)
822 [-]: MOVE      R0 R94       ; R0 := R94
823 [-]: MOVE      R0 R98       ; R0 := R98
824 [-]: CLOSURE   R208 80      ; R208 := closure(Function #81)
825 [-]: MOVE      R0 R101      ; R0 := R101
826 [-]: CLOSURE   R209 81      ; R209 := closure(Function #82)
827 [-]: MOVE      R0 R101      ; R0 := R101
828 [-]: CLOSURE   R210 82      ; R210 := closure(Function #83)
829 [-]: MOVE      R0 R209      ; R0 := R209
830 [-]: SETGLOBAL R210 K200    ; AbortConfirm := R210
831 [-]: SETGLOBAL R210 K201    ; 0x575A9B5 := R210
832 [-]: CLOSURE   R210 83      ; R210 := closure(Function #84)
833 [-]: MOVE      R0 R100      ; R0 := R100
834 [-]: SETGLOBAL R210 K202    ; ShowQuestConfirm := R210
835 [-]: SETGLOBAL R210 K203    ; 0x3CC13774 := R210
836 [-]: CLOSURE   R210 84      ; R210 := closure(Function #85)
837 [-]: SETGLOBAL R210 K204    ; CanOpenRailJackMissionInCrewship := R210
838 [-]: SETGLOBAL R210 K205    ; 0xA5B49CBE := R210
839 [-]: CLOSURE   R210 85      ; R210 := closure(Function #86)
840 [-]: MOVE      R0 R88       ; R0 := R88
841 [-]: MOVE      R0 R121      ; R0 := R121
842 [-]: MOVE      R0 R100      ; R0 := R100
843 [-]: MOVE      R0 R105      ; R0 := R105
844 [-]: MOVE      R0 R101      ; R0 := R101
845 [-]: MOVE      R0 R209      ; R0 := R209
846 [-]: CLOSURE   R211 86      ; R211 := closure(Function #87)
847 [-]: MOVE      R0 R52       ; R0 := R52
848 [-]: MOVE      R0 R31       ; R0 := R31
849 [-]: CLOSURE   R212 87      ; R212 := closure(Function #88)
850 [-]: MOVE      R0 R52       ; R0 := R52
851 [-]: MOVE      R0 R31       ; R0 := R31
852 [-]: MOVE      R0 R210      ; R0 := R210
853 [-]: SETGLOBAL R212 K206    ; ConfirmInvasionFaction := R212
854 [-]: SETGLOBAL R212 K207    ; 0xFBA5AB02 := R212
855 [-]: CLOSURE   R212 88      ; R212 := closure(Function #89)
856 [-]: MOVE      R0 R53       ; R0 := R53
857 [-]: MOVE      R0 R101      ; R0 := R101
858 [-]: MOVE      R0 R60       ; R0 := R60
859 [-]: MOVE      R0 R17       ; R0 := R17
860 [-]: MOVE      R0 R31       ; R0 := R31
861 [-]: CLOSURE   R213 89      ; R213 := closure(Function #90)
862 [-]: MOVE      R0 R53       ; R0 := R53
863 [-]: MOVE      R0 R31       ; R0 := R31
864 [-]: MOVE      R0 R17       ; R0 := R17
865 [-]: MOVE      R0 R210      ; R0 := R210
866 [-]: MOVE      R0 R60       ; R0 := R60
867 [-]: MOVE      R0 R101      ; R0 := R101
868 [-]: SETGLOBAL R213 K208    ; OnVoidProjectionChosen := R213
869 [-]: SETGLOBAL R213 K209    ; 0x771EFB2E := R213
870 [-]: CLOSURE   R213 90      ; R213 := closure(Function #91)
871 [-]: SETGLOBAL R213 K210    ; ConfirmIncompatibleOnlineMode := R213
872 [-]: SETGLOBAL R213 K211    ; 0x2CA9D97 := R213
873 [-]: CLOSURE   R213 91      ; R213 := closure(Function #92)
874 [-]: MOVE      R0 R54       ; R0 := R54
875 [-]: MOVE      R0 R100      ; R0 := R100
876 [-]: MOVE      R0 R31       ; R0 := R31
877 [-]: CLOSURE   R214 92      ; R214 := closure(Function #93)
878 [-]: MOVE      R0 R54       ; R0 := R54
879 [-]: MOVE      R0 R31       ; R0 := R31
880 [-]: MOVE      R0 R101      ; R0 := R101
881 [-]: MOVE      R0 R210      ; R0 := R210
882 [-]: SETGLOBAL R214 K212    ; ConfirmNightmare := R214
883 [-]: SETGLOBAL R214 K213    ; 0xEEB0C7FF := R214
884 [-]: CLOSURE   R214 93      ; R214 := closure(Function #94)
885 [-]: SETGLOBAL R214 K214    ; ConfirmRaidSelection := R214
886 [-]: SETGLOBAL R214 K215    ; 0x1E9A77E0 := R214
887 [-]: CLOSURE   R214 94      ; R214 := closure(Function #95)
888 [-]: MOVE      R0 R61       ; R0 := R61
889 [-]: MOVE      R0 R17       ; R0 := R17
890 [-]: MOVE      R0 R31       ; R0 := R31
891 [-]: CLOSURE   R215 95      ; R215 := closure(Function #96)
892 [-]: MOVE      R0 R61       ; R0 := R61
893 [-]: MOVE      R0 R31       ; R0 := R31
894 [-]: MOVE      R0 R17       ; R0 := R17
895 [-]: MOVE      R0 R210      ; R0 := R210
896 [-]: SETGLOBAL R215 K216    ; ConfirmWagerSelection := R215
897 [-]: SETGLOBAL R215 K217    ; 0xAB823E52 := R215
898 [-]: CLOSURE   R215 96      ; R215 := closure(Function #97)
899 [-]: MOVE      R0 R31       ; R0 := R31
900 [-]: MOVE      R0 R56       ; R0 := R56
901 [-]: MOVE      R0 R101      ; R0 := R101
902 [-]: MOVE      R0 R104      ; R0 := R104
903 [-]: MOVE      R0 R100      ; R0 := R100
904 [-]: SETGLOBAL R215 K218    ; OpenSoloMission := R215
905 [-]: SETGLOBAL R215 K219    ; 0xE6723C78 := R215
906 [-]: CLOSURE   R215 97      ; R215 := closure(Function #98)
907 [-]: MOVE      R0 R55       ; R0 := R55
908 [-]: MOVE      R0 R31       ; R0 := R31
909 [-]: MOVE      R0 R56       ; R0 := R56
910 [-]: SETGLOBAL R215 K220    ; ConfirmSoloMission := R215
911 [-]: SETGLOBAL R215 K221    ; 0xCDF468C2 := R215
912 [-]: CLOSURE   R215 98      ; R215 := closure(Function #99)
913 [-]: MOVE      R0 R31       ; R0 := R31
914 [-]: MOVE      R0 R1        ; R0 := R1
915 [-]: MOVE      R0 R57       ; R0 := R57
916 [-]: MOVE      R0 R100      ; R0 := R100
917 [-]: MOVE      R0 R210      ; R0 := R210
918 [-]: MOVE      R0 R73       ; R0 := R73
919 [-]: MOVE      R0 R101      ; R0 := R101
920 [-]: SETGLOBAL R215 K222    ; GotHubInstances := R215
921 [-]: SETGLOBAL R215 K223    ; 0x924FB8E9 := R215
922 [-]: CLOSURE   R215 99      ; R215 := closure(Function #100)
923 [-]: MOVE      R0 R73       ; R0 := R73
924 [-]: MOVE      R0 R1        ; R0 := R1
925 [-]: MOVE      R0 R31       ; R0 := R31
926 [-]: CLOSURE   R216 100     ; R216 := closure(Function #101)
927 [-]: MOVE      R0 R101      ; R0 := R101
928 [-]: CLOSURE   R217 101     ; R217 := closure(Function #102)
929 [-]: MOVE      R0 R101      ; R0 := R101
930 [-]: MOVE      R0 R31       ; R0 := R31
931 [-]: MOVE      R0 R57       ; R0 := R57
932 [-]: MOVE      R0 R211      ; R0 := R211
933 [-]: MOVE      R0 R212      ; R0 := R212
934 [-]: MOVE      R0 R25       ; R0 := R25
935 [-]: MOVE      R0 R1        ; R0 := R1
936 [-]: MOVE      R0 R105      ; R0 := R105
937 [-]: MOVE      R0 R100      ; R0 := R100
938 [-]: MOVE      R0 R55       ; R0 := R55
939 [-]: MOVE      R0 R56       ; R0 := R56
940 [-]: MOVE      R0 R72       ; R0 := R72
941 [-]: MOVE      R0 R210      ; R0 := R210
942 [-]: MOVE      R0 R208      ; R0 := R208
943 [-]: MOVE      R0 R216      ; R0 := R216
944 [-]: MOVE      R0 R89       ; R0 := R89
945 [-]: CLOSURE   R218 102     ; R218 := closure(Function #103)
946 [-]: MOVE      R0 R101      ; R0 := R101
947 [-]: MOVE      R0 R100      ; R0 := R100
948 [-]: CLOSURE   R219 103     ; R219 := closure(Function #104)
949 [-]: MOVE      R0 R45       ; R0 := R45
950 [-]: MOVE      R0 R101      ; R0 := R101
951 [-]: MOVE      R0 R100      ; R0 := R100
952 [-]: MOVE      R0 R218      ; R0 := R218
953 [-]: MOVE      R0 R210      ; R0 := R210
954 [-]: MOVE      R0 R11       ; R0 := R11
955 [-]: MOVE      R0 R168      ; R0 := R168
956 [-]: MOVE      R0 R212      ; R0 := R212
957 [-]: MOVE      R0 R211      ; R0 := R211
958 [-]: MOVE      R0 R214      ; R0 := R214
959 [-]: MOVE      R0 R217      ; R0 := R217
960 [-]: MOVE      R0 R213      ; R0 := R213
961 [-]: MOVE      R0 R215      ; R0 := R215
962 [-]: MOVE      R0 R105      ; R0 := R105
963 [-]: MOVE      R0 R55       ; R0 := R55
964 [-]: MOVE      R0 R56       ; R0 := R56
965 [-]: MOVE      R0 R88       ; R0 := R88
966 [-]: CLOSURE   R220 104     ; R220 := closure(Function #105)
967 [-]: SETGLOBAL R220 K224    ; InitializeRailJackMap := R220
968 [-]: SETGLOBAL R220 K225    ; 0x6A247BFE := R220
969 [-]: CLOSURE   R220 105     ; R220 := closure(Function #106)
970 [-]: MOVE      R0 R100      ; R0 := R100
971 [-]: SETGLOBAL R220 K226    ; InitialFade := R220
972 [-]: SETGLOBAL R220 K227    ; 0x44C4C57C := R220
973 [-]: CLOSURE   R220 106     ; R220 := closure(Function #107)
974 [-]: MOVE      R0 R17       ; R0 := R17
975 [-]: MOVE      R0 R101      ; R0 := R101
976 [-]: MOVE      R0 R19       ; R0 := R19
977 [-]: MOVE      R0 R20       ; R0 := R20
978 [-]: MOVE      R0 R202      ; R0 := R202
979 [-]: MOVE      R0 R203      ; R0 := R203
980 [-]: MOVE      R0 R142      ; R0 := R142
981 [-]: MOVE      R0 R204      ; R0 := R204
982 [-]: MOVE      R0 R205      ; R0 := R205
983 [-]: MOVE      R0 R206      ; R0 := R206
984 [-]: MOVE      R0 R163      ; R0 := R163
985 [-]: SETGLOBAL R220 K228    ; InitializeMore := R220
986 [-]: SETGLOBAL R220 K229    ; 0x3479F2F3 := R220
987 [-]: CLOSURE   R220 107     ; R220 := closure(Function #108)
988 [-]: MOVE      R0 R161      ; R0 := R161
989 [-]: SETGLOBAL R220 K230    ; Shutdown := R220
990 [-]: SETGLOBAL R220 K231    ; 0x3C577FA3 := R220
991 [-]: CLOSURE   R220 108     ; R220 := closure(Function #109)
992 [-]: MOVE      R0 R13       ; R0 := R13
993 [-]: MOVE      R0 R15       ; R0 := R15
994 [-]: CLOSURE   R221 109     ; R221 := closure(Function #110)
995 [-]: CLOSURE   R222 110     ; R222 := closure(Function #111)
996 [-]: MOVE      R0 R221      ; R0 := R221
997 [-]: CLOSURE   R223 111     ; R223 := closure(Function #112)
998 [-]: MOVE      R0 R45       ; R0 := R45
999 [-]: MOVE      R0 R2        ; R0 := R2
1000 [-]: MOVE      R0 R3        ; R0 := R3
1001 [-]: MOVE      R0 R64       ; R0 := R64
1002 [-]: MOVE      R0 R124      ; R0 := R124
1003 [-]: MOVE      R0 R27       ; R0 := R27
1004 [-]: MOVE      R0 R37       ; R0 := R37
1005 [-]: MOVE      R0 R30       ; R0 := R30
1006 [-]: MOVE      R0 R90       ; R0 := R90
1007 [-]: MOVE      R0 R43       ; R0 := R43
1008 [-]: MOVE      R0 R100      ; R0 := R100
1009 [-]: MOVE      R0 R65       ; R0 := R65
1010 [-]: MOVE      R0 R23       ; R0 := R23
1011 [-]: CLOSURE   R224 112     ; R224 := closure(Function #113)
1012 [-]: MOVE      R0 R97       ; R0 := R97
1013 [-]: MOVE      R0 R96       ; R0 := R96
1014 [-]: MOVE      R0 R98       ; R0 := R98
1015 [-]: MOVE      R0 R222      ; R0 := R222
1016 [-]: MOVE      R0 R1        ; R0 := R1
1017 [-]: MOVE      R0 R24       ; R0 := R24
1018 [-]: MOVE      R0 R180      ; R0 := R180
1019 [-]: MOVE      R0 R66       ; R0 := R66
1020 [-]: MOVE      R0 R194      ; R0 := R194
1021 [-]: MOVE      R0 R223      ; R0 := R223
1022 [-]: MOVE      R0 R94       ; R0 := R94
1023 [-]: MOVE      R0 R131      ; R0 := R131
1024 [-]: MOVE      R0 R143      ; R0 := R143
1025 [-]: MOVE      R0 R191      ; R0 := R191
1026 [-]: MOVE      R0 R100      ; R0 := R100
1027 [-]: MOVE      R0 R90       ; R0 := R90
1028 [-]: MOVE      R0 R34       ; R0 := R34
1029 [-]: MOVE      R0 R35       ; R0 := R35
1030 [-]: MOVE      R0 R36       ; R0 := R36
1031 [-]: MOVE      R0 R37       ; R0 := R37
1032 [-]: MOVE      R0 R38       ; R0 := R38
1033 [-]: MOVE      R0 R178      ; R0 := R178
1034 [-]: MOVE      R0 R48       ; R0 := R48
1035 [-]: MOVE      R0 R15       ; R0 := R15
1036 [-]: MOVE      R0 R77       ; R0 := R77
1037 [-]: MOVE      R0 R43       ; R0 := R43
1038 [-]: MOVE      R0 R109      ; R0 := R109
1039 [-]: MOVE      R0 R115      ; R0 := R115
1040 [-]: MOVE      R0 R116      ; R0 := R116
1041 [-]: MOVE      R0 R2        ; R0 := R2
1042 [-]: MOVE      R0 R79       ; R0 := R79
1043 [-]: MOVE      R0 R45       ; R0 := R45
1044 [-]: MOVE      R0 R41       ; R0 := R41
1045 [-]: MOVE      R0 R89       ; R0 := R89
1046 [-]: MOVE      R0 R80       ; R0 := R80
1047 [-]: MOVE      R0 R42       ; R0 := R42
1048 [-]: MOVE      R0 R117      ; R0 := R117
1049 [-]: CLOSURE   R225 113     ; R225 := closure(Function #114)
1050 [-]: MOVE      R0 R75       ; R0 := R75
1051 [-]: MOVE      R0 R64       ; R0 := R64
1052 [-]: MOVE      R0 R100      ; R0 := R100
1053 [-]: CLOSURE   R226 114     ; R226 := closure(Function #115)
1054 [-]: MOVE      R0 R128      ; R0 := R128
1055 [-]: MOVE      R0 R1        ; R0 := R1
1056 [-]: MOVE      R0 R30       ; R0 := R30
1057 [-]: MOVE      R0 R43       ; R0 := R43
1058 [-]: MOVE      R0 R120      ; R0 := R120
1059 [-]: MOVE      R0 R34       ; R0 := R34
1060 [-]: MOVE      R0 R141      ; R0 := R141
1061 [-]: MOVE      R0 R23       ; R0 := R23
1062 [-]: MOVE      R0 R90       ; R0 := R90
1063 [-]: MOVE      R0 R67       ; R0 := R67
1064 [-]: MOVE      R0 R194      ; R0 := R194
1065 [-]: MOVE      R0 R66       ; R0 := R66
1066 [-]: CLOSURE   R227 115     ; R227 := closure(Function #116)
1067 [-]: MOVE      R0 R22       ; R0 := R22
1068 [-]: MOVE      R0 R2        ; R0 := R2
1069 [-]: CLOSURE   R228 116     ; R228 := closure(Function #117)
1070 [-]: MOVE      R0 R20       ; R0 := R20
1071 [-]: MOVE      R0 R37       ; R0 := R37
1072 [-]: MOVE      R0 R155      ; R0 := R155
1073 [-]: MOVE      R0 R2        ; R0 := R2
1074 [-]: MOVE      R0 R43       ; R0 := R43
1075 [-]: CLOSURE   R229 117     ; R229 := closure(Function #118)
1076 [-]: MOVE      R0 R100      ; R0 := R100
1077 [-]: CLOSURE   R230 118     ; R230 := closure(Function #119)
1078 [-]: MOVE      R0 R37       ; R0 := R37
1079 [-]: MOVE      R0 R39       ; R0 := R39
1080 [-]: MOVE      R0 R40       ; R0 := R40
1081 [-]: MOVE      R0 R35       ; R0 := R35
1082 [-]: MOVE      R0 R36       ; R0 := R36
1083 [-]: MOVE      R0 R46       ; R0 := R46
1084 [-]: MOVE      R0 R45       ; R0 := R45
1085 [-]: MOVE      R0 R41       ; R0 := R41
1086 [-]: MOVE      R0 R79       ; R0 := R79
1087 [-]: MOVE      R0 R42       ; R0 := R42
1088 [-]: MOVE      R0 R2        ; R0 := R2
1089 [-]: MOVE      R0 R80       ; R0 := R80
1090 [-]: MOVE      R0 R97       ; R0 := R97
1091 [-]: MOVE      R0 R96       ; R0 := R96
1092 [-]: MOVE      R0 R90       ; R0 := R90
1093 [-]: MOVE      R0 R23       ; R0 := R23
1094 [-]: MOVE      R0 R49       ; R0 := R49
1095 [-]: MOVE      R0 R50       ; R0 := R50
1096 [-]: MOVE      R0 R126      ; R0 := R126
1097 [-]: MOVE      R0 R24       ; R0 := R24
1098 [-]: MOVE      R0 R117      ; R0 := R117
1099 [-]: MOVE      R0 R3        ; R0 := R3
1100 [-]: MOVE      R0 R66       ; R0 := R66
1101 [-]: MOVE      R0 R229      ; R0 := R229
1102 [-]: MOVE      R0 R89       ; R0 := R89
1103 [-]: MOVE      R0 R8        ; R0 := R8
1104 [-]: MOVE      R0 R78       ; R0 := R78
1105 [-]: MOVE      R0 R158      ; R0 := R158
1106 [-]: MOVE      R0 R228      ; R0 := R228
1107 [-]: MOVE      R0 R128      ; R0 := R128
1108 [-]: MOVE      R0 R100      ; R0 := R100
1109 [-]: MOVE      R0 R134      ; R0 := R134
1110 [-]: MOVE      R0 R70       ; R0 := R70
1111 [-]: MOVE      R0 R148      ; R0 := R148
1112 [-]: MOVE      R0 R225      ; R0 := R225
1113 [-]: MOVE      R0 R27       ; R0 := R27
1114 [-]: MOVE      R0 R226      ; R0 := R226
1115 [-]: MOVE      R0 R77       ; R0 := R77
1116 [-]: MOVE      R0 R109      ; R0 := R109
1117 [-]: MOVE      R0 R76       ; R0 := R76
1118 [-]: GETGLOBAL R231 K7      ; R231 := 0x221C9700
1119 [-]: CALL      R231 1 2     ; R231 := R231()
1120 [-]: CLOSURE   R232 119     ; R232 := closure(Function #120)
1121 [-]: MOVE      R0 R92       ; R0 := R92
1122 [-]: MOVE      R0 R94       ; R0 := R94
1123 [-]: MOVE      R0 R8        ; R0 := R8
1124 [-]: MOVE      R0 R222      ; R0 := R222
1125 [-]: MOVE      R0 R231      ; R0 := R231
1126 [-]: CLOSURE   R125 120     ; R125 := closure(Function #121)
1127 [-]: MOVE      R0 R124      ; R0 := R124
1128 [-]: MOVE      R0 R24       ; R0 := R24
1129 [-]: MOVE      R0 R100      ; R0 := R100
1130 [-]: CLOSURE   R233 121     ; R233 := closure(Function #122)
1131 [-]: MOVE      R0 R18       ; R0 := R18
1132 [-]: MOVE      R0 R43       ; R0 := R43
1133 [-]: MOVE      R0 R100      ; R0 := R100
1134 [-]: CLOSURE   R234 122     ; R234 := closure(Function #123)
1135 [-]: MOVE      R0 R61       ; R0 := R61
1136 [-]: MOVE      R0 R24       ; R0 := R24
1137 [-]: CLOSURE   R235 123     ; R235 := closure(Function #124)
1138 [-]: MOVE      R0 R107      ; R0 := R107
1139 [-]: MOVE      R0 R14       ; R0 := R14
1140 [-]: MOVE      R0 R112      ; R0 := R112
1141 [-]: MOVE      R0 R113      ; R0 := R113
1142 [-]: MOVE      R0 R47       ; R0 := R47
1143 [-]: MOVE      R0 R20       ; R0 := R20
1144 [-]: MOVE      R0 R21       ; R0 := R21
1145 [-]: MOVE      R0 R17       ; R0 := R17
1146 [-]: MOVE      R0 R132      ; R0 := R132
1147 [-]: MOVE      R0 R31       ; R0 := R31
1148 [-]: MOVE      R0 R25       ; R0 := R25
1149 [-]: MOVE      R0 R45       ; R0 := R45
1150 [-]: MOVE      R0 R233      ; R0 := R233
1151 [-]: MOVE      R0 R219      ; R0 := R219
1152 [-]: MOVE      R0 R100      ; R0 := R100
1153 [-]: MOVE      R0 R76       ; R0 := R76
1154 [-]: MOVE      R0 R2        ; R0 := R2
1155 [-]: MOVE      R0 R27       ; R0 := R27
1156 [-]: MOVE      R0 R43       ; R0 := R43
1157 [-]: MOVE      R0 R118      ; R0 := R118
1158 [-]: MOVE      R0 R119      ; R0 := R119
1159 [-]: MOVE      R0 R105      ; R0 := R105
1160 [-]: MOVE      R0 R201      ; R0 := R201
1161 [-]: MOVE      R0 R224      ; R0 := R224
1162 [-]: MOVE      R0 R220      ; R0 := R220
1163 [-]: MOVE      R0 R230      ; R0 := R230
1164 [-]: MOVE      R0 R232      ; R0 := R232
1165 [-]: MOVE      R0 R151      ; R0 := R151
1166 [-]: MOVE      R0 R72       ; R0 := R72
1167 [-]: MOVE      R0 R55       ; R0 := R55
1168 [-]: MOVE      R0 R13       ; R0 := R13
1169 [-]: MOVE      R0 R109      ; R0 := R109
1170 [-]: MOVE      R0 R90       ; R0 := R90
1171 [-]: MOVE      R0 R89       ; R0 := R89
1172 [-]: MOVE      R0 R15       ; R0 := R15
1173 [-]: MOVE      R0 R189      ; R0 := R189
1174 [-]: MOVE      R0 R110      ; R0 := R110
1175 [-]: MOVE      R0 R111      ; R0 := R111
1176 [-]: MOVE      R0 R77       ; R0 := R77
1177 [-]: MOVE      R0 R59       ; R0 := R59
1178 [-]: MOVE      R0 R82       ; R0 := R82
1179 [-]: MOVE      R0 R81       ; R0 := R81
1180 [-]: MOVE      R0 R49       ; R0 := R49
1181 [-]: MOVE      R0 R83       ; R0 := R83
1182 [-]: MOVE      R0 R87       ; R0 := R87
1183 [-]: MOVE      R0 R101      ; R0 := R101
1184 [-]: MOVE      R0 R51       ; R0 := R51
1185 [-]: MOVE      R0 R129      ; R0 := R129
1186 [-]: MOVE      R0 R234      ; R0 := R234
1187 [-]: MOVE      R0 R69       ; R0 := R69
1188 [-]: MOVE      R0 R163      ; R0 := R163
1189 [-]: SETGLOBAL R235 K232    ; Update := R235
1190 [-]: SETGLOBAL R235 K233    ; 0x8C7099E9 := R235
1191 [-]: CLOSURE   R235 124     ; R235 := closure(Function #125)
1192 [-]: MOVE      R0 R88       ; R0 := R88
1193 [-]: MOVE      R0 R104      ; R0 := R104
1194 [-]: CLOSURE   R236 125     ; R236 := closure(Function #126)
1195 [-]: MOVE      R0 R235      ; R0 := R235
1196 [-]: MOVE      R0 R100      ; R0 := R100
1197 [-]: CLOSURE   R121 126     ; R121 := closure(Function #127)
1198 [-]: MOVE      R0 R31       ; R0 := R31
1199 [-]: MOVE      R0 R17       ; R0 := R17
1200 [-]: MOVE      R0 R20       ; R0 := R20
1201 [-]: MOVE      R0 R97       ; R0 := R97
1202 [-]: MOVE      R0 R96       ; R0 := R96
1203 [-]: MOVE      R0 R153      ; R0 := R153
1204 [-]: MOVE      R0 R37       ; R0 := R37
1205 [-]: MOVE      R0 R30       ; R0 := R30
1206 [-]: MOVE      R0 R100      ; R0 := R100
1207 [-]: MOVE      R0 R235      ; R0 := R235
1208 [-]: MOVE      R0 R34       ; R0 := R34
1209 [-]: MOVE      R0 R109      ; R0 := R109
1210 [-]: MOVE      R0 R77       ; R0 := R77
1211 [-]: MOVE      R0 R115      ; R0 := R115
1212 [-]: MOVE      R0 R236      ; R0 := R236
1213 [-]: CLOSURE   R237 127     ; R237 := closure(Function #128)
1214 [-]: MOVE      R0 R121      ; R0 := R121
1215 [-]: SETGLOBAL R237 K234    ; TransitionOut := R237
1216 [-]: SETGLOBAL R237 K235    ; 0x7097B1B4 := R237
1217 [-]: CLOSURE   R237 128     ; R237 := closure(Function #129)
1218 [-]: CLOSURE   R238 129     ; R238 := closure(Function #130)
1219 [-]: CLOSURE   R239 130     ; R239 := closure(Function #131)
1220 [-]: CLOSURE   R240 131     ; R240 := closure(Function #132)
1221 [-]: MOVE      R0 R31       ; R0 := R31
1222 [-]: MOVE      R0 R131      ; R0 := R131
1223 [-]: MOVE      R0 R100      ; R0 := R100
1224 [-]: MOVE      R0 R58       ; R0 := R58
1225 [-]: MOVE      R0 R92       ; R0 := R92
1226 [-]: MOVE      R0 R34       ; R0 := R34
1227 [-]: MOVE      R0 R97       ; R0 := R97
1228 [-]: MOVE      R0 R96       ; R0 := R96
1229 [-]: MOVE      R0 R98       ; R0 := R98
1230 [-]: SETGLOBAL R240 K236    ; onKeyUp_MENU_CLICK := R240
1231 [-]: SETGLOBAL R240 K237    ; 0x367BCD7E := R240
1232 [-]: CLOSURE   R120 132     ; R120 := closure(Function #133)
1233 [-]: CLOSURE   R240 133     ; R240 := closure(Function #134)
1234 [-]: MOVE      R0 R2        ; R0 := R2
1235 [-]: MOVE      R0 R48       ; R0 := R48
1236 [-]: CLOSURE   R241 134     ; R241 := closure(Function #135)
1237 [-]: MOVE      R0 R43       ; R0 := R43
1238 [-]: MOVE      R0 R177      ; R0 := R177
1239 [-]: MOVE      R0 R44       ; R0 := R44
1240 [-]: CLOSURE   R119 135     ; R119 := closure(Function #136)
1241 [-]: MOVE      R0 R43       ; R0 := R43
1242 [-]: MOVE      R0 R241      ; R0 := R241
1243 [-]: MOVE      R0 R120      ; R0 := R120
1244 [-]: MOVE      R0 R34       ; R0 := R34
1245 [-]: MOVE      R0 R37       ; R0 := R37
1246 [-]: MOVE      R0 R38       ; R0 := R38
1247 [-]: MOVE      R0 R83       ; R0 := R83
1248 [-]: MOVE      R0 R100      ; R0 := R100
1249 [-]: MOVE      R0 R87       ; R0 := R87
1250 [-]: MOVE      R0 R163      ; R0 := R163
1251 [-]: MOVE      R0 R113      ; R0 := R113
1252 [-]: MOVE      R0 R1        ; R0 := R1
1253 [-]: MOVE      R0 R106      ; R0 := R106
1254 [-]: CLOSURE   R118 136     ; R118 := closure(Function #137)
1255 [-]: MOVE      R0 R43       ; R0 := R43
1256 [-]: MOVE      R0 R241      ; R0 := R241
1257 [-]: MOVE      R0 R83       ; R0 := R83
1258 [-]: MOVE      R0 R100      ; R0 := R100
1259 [-]: MOVE      R0 R87       ; R0 := R87
1260 [-]: MOVE      R0 R120      ; R0 := R120
1261 [-]: MOVE      R0 R34       ; R0 := R34
1262 [-]: MOVE      R0 R37       ; R0 := R37
1263 [-]: MOVE      R0 R35       ; R0 := R35
1264 [-]: MOVE      R0 R36       ; R0 := R36
1265 [-]: MOVE      R0 R31       ; R0 := R31
1266 [-]: MOVE      R0 R113      ; R0 := R113
1267 [-]: CLOSURE   R242 137     ; R242 := closure(Function #138)
1268 [-]: MOVE      R0 R51       ; R0 := R51
1269 [-]: MOVE      R0 R101      ; R0 := R101
1270 [-]: MOVE      R0 R9        ; R0 := R9
1271 [-]: MOVE      R0 R100      ; R0 := R100
1272 [-]: MOVE      R0 R29       ; R0 := R29
1273 [-]: MOVE      R0 R45       ; R0 := R45
1274 [-]: MOVE      R0 R91       ; R0 := R91
1275 [-]: MOVE      R0 R89       ; R0 := R89
1276 [-]: CLOSURE   R243 138     ; R243 := closure(Function #139)
1277 [-]: MOVE      R0 R130      ; R0 := R130
1278 [-]: MOVE      R0 R45       ; R0 := R45
1279 [-]: SETGLOBAL R243 K238    ; OnEmblemReady := R243
1280 [-]: SETGLOBAL R243 K239    ; 0x855C37AA := R243
1281 [-]: CLOSURE   R243 139     ; R243 := closure(Function #140)
1282 [-]: MOVE      R0 R49       ; R0 := R49
1283 [-]: MOVE      R0 R50       ; R0 := R50
1284 [-]: MOVE      R0 R45       ; R0 := R45
1285 [-]: MOVE      R0 R166      ; R0 := R166
1286 [-]: MOVE      R0 R24       ; R0 := R24
1287 [-]: MOVE      R0 R47       ; R0 := R47
1288 [-]: MOVE      R0 R97       ; R0 := R97
1289 [-]: MOVE      R0 R96       ; R0 := R96
1290 [-]: MOVE      R0 R149      ; R0 := R149
1291 [-]: MOVE      R0 R100      ; R0 := R100
1292 [-]: MOVE      R0 R233      ; R0 := R233
1293 [-]: MOVE      R0 R84       ; R0 := R84
1294 [-]: MOVE      R0 R74       ; R0 := R74
1295 [-]: MOVE      R0 R1        ; R0 := R1
1296 [-]: MOVE      R0 R101      ; R0 := R101
1297 [-]: MOVE      R0 R25       ; R0 := R25
1298 [-]: MOVE      R0 R242      ; R0 := R242
1299 [-]: MOVE      R0 R63       ; R0 := R63
1300 [-]: MOVE      R0 R130      ; R0 := R130
1301 [-]: MOVE      R0 R16       ; R0 := R16
1302 [-]: MOVE      R0 R9        ; R0 := R9
1303 [-]: MOVE      R0 R70       ; R0 := R70
1304 [-]: MOVE      R0 R90       ; R0 := R90
1305 [-]: CLOSURE   R126 140     ; R126 := closure(Function #141)
1306 [-]: MOVE      R0 R49       ; R0 := R49
1307 [-]: MOVE      R0 R50       ; R0 := R50
1308 [-]: MOVE      R0 R45       ; R0 := R45
1309 [-]: MOVE      R0 R47       ; R0 := R47
1310 [-]: MOVE      R0 R24       ; R0 := R24
1311 [-]: MOVE      R0 R70       ; R0 := R70
1312 [-]: MOVE      R0 R166      ; R0 := R166
1313 [-]: MOVE      R0 R90       ; R0 := R90
1314 [-]: MOVE      R0 R18       ; R0 := R18
1315 [-]: CLOSURE   R244 141     ; R244 := closure(Function #142)
1316 [-]: MOVE      R0 R31       ; R0 := R31
1317 [-]: MOVE      R0 R17       ; R0 := R17
1318 [-]: MOVE      R0 R100      ; R0 := R100
1319 [-]: MOVE      R0 R97       ; R0 := R97
1320 [-]: MOVE      R0 R96       ; R0 := R96
1321 [-]: MOVE      R0 R45       ; R0 := R45
1322 [-]: MOVE      R0 R98       ; R0 := R98
1323 [-]: MOVE      R0 R222      ; R0 := R222
1324 [-]: MOVE      R0 R2        ; R0 := R2
1325 [-]: MOVE      R0 R24       ; R0 := R24
1326 [-]: MOVE      R0 R131      ; R0 := R131
1327 [-]: MOVE      R0 R94       ; R0 := R94
1328 [-]: MOVE      R0 R150      ; R0 := R150
1329 [-]: MOVE      R0 R34       ; R0 := R34
1330 [-]: MOVE      R0 R92       ; R0 := R92
1331 [-]: MOVE      R0 R8        ; R0 := R8
1332 [-]: MOVE      R0 R93       ; R0 := R93
1333 [-]: MOVE      R0 R239      ; R0 := R239
1334 [-]: MOVE      R0 R62       ; R0 := R62
1335 [-]: MOVE      R0 R58       ; R0 := R58
1336 [-]: MOVE      R0 R95       ; R0 := R95
1337 [-]: MOVE      R0 R118      ; R0 := R118
1338 [-]: MOVE      R0 R99       ; R0 := R99
1339 [-]: MOVE      R0 R219      ; R0 := R219
1340 [-]: MOVE      R0 R76       ; R0 := R76
1341 [-]: MOVE      R0 R119      ; R0 := R119
1342 [-]: MOVE      R0 R124      ; R0 := R124
1343 [-]: SETGLOBAL R244 K240    ; onKeyDown_MENU_CLICK := R244
1344 [-]: SETGLOBAL R244 K241    ; 0xE40A2FCA := R244
1345 [-]: CLOSURE   R244 142     ; R244 := closure(Function #143)
1346 [-]: CLOSURE   R245 143     ; R245 := closure(Function #144)
1347 [-]: CLOSURE   R246 144     ; R246 := closure(Function #145)
1348 [-]: MOVE      R0 R31       ; R0 := R31
1349 [-]: MOVE      R0 R92       ; R0 := R92
1350 [-]: MOVE      R0 R34       ; R0 := R34
1351 [-]: SETGLOBAL R246 K242    ; onKeyUp_MENU_RIGHT_CLICK := R246
1352 [-]: SETGLOBAL R246 K243    ; 0x3A763170 := R246
1353 [-]: CLOSURE   R246 145     ; R246 := closure(Function #146)
1354 [-]: MOVE      R0 R31       ; R0 := R31
1355 [-]: MOVE      R0 R17       ; R0 := R17
1356 [-]: MOVE      R0 R92       ; R0 := R92
1357 [-]: MOVE      R0 R34       ; R0 := R34
1358 [-]: MOVE      R0 R37       ; R0 := R37
1359 [-]: MOVE      R0 R30       ; R0 := R30
1360 [-]: MOVE      R0 R83       ; R0 := R83
1361 [-]: MOVE      R0 R100      ; R0 := R100
1362 [-]: MOVE      R0 R87       ; R0 := R87
1363 [-]: MOVE      R0 R43       ; R0 := R43
1364 [-]: MOVE      R0 R44       ; R0 := R44
1365 [-]: MOVE      R0 R126      ; R0 := R126
1366 [-]: MOVE      R0 R113      ; R0 := R113
1367 [-]: MOVE      R0 R114      ; R0 := R114
1368 [-]: MOVE      R0 R163      ; R0 := R163
1369 [-]: SETGLOBAL R246 K244    ; onKeyDown_MENU_RIGHT_CLICK := R246
1370 [-]: SETGLOBAL R246 K245    ; 0xA930FBF := R246
1371 [-]: CLOSURE   R246 146     ; R246 := closure(Function #147)
1372 [-]: SETGLOBAL R246 K246    ; onKeyUp_NEXT_MENU := R246
1373 [-]: SETGLOBAL R246 K247    ; 0x9D432BFE := R246
1374 [-]: CLOSURE   R246 147     ; R246 := closure(Function #148)
1375 [-]: SETGLOBAL R246 K248    ; onKeyDown_NEXT_MENU := R246
1376 [-]: SETGLOBAL R246 K249    ; 0xE25DD8CF := R246
1377 [-]: CLOSURE   R246 148     ; R246 := closure(Function #149)
1378 [-]: MOVE      R0 R31       ; R0 := R31
1379 [-]: MOVE      R0 R30       ; R0 := R30
1380 [-]: MOVE      R0 R37       ; R0 := R37
1381 [-]: MOVE      R0 R97       ; R0 := R97
1382 [-]: MOVE      R0 R96       ; R0 := R96
1383 [-]: MOVE      R0 R45       ; R0 := R45
1384 [-]: MOVE      R0 R43       ; R0 := R43
1385 [-]: MOVE      R0 R133      ; R0 := R133
1386 [-]: MOVE      R0 R100      ; R0 := R100
1387 [-]: MOVE      R0 R119      ; R0 := R119
1388 [-]: MOVE      R0 R121      ; R0 := R121
1389 [-]: SETGLOBAL R246 K250    ; onKeyDown_MENU_MOUSE_Z := R246
1390 [-]: SETGLOBAL R246 K251    ; 0x56EAD3A9 := R246
1391 [-]: CLOSURE   R246 149     ; R246 := closure(Function #150)
1392 [-]: MOVE      R0 R95       ; R0 := R95
1393 [-]: MOVE      R0 R100      ; R0 := R100
1394 [-]: MOVE      R0 R94       ; R0 := R94
1395 [-]: MOVE      R0 R97       ; R0 := R97
1396 [-]: MOVE      R0 R96       ; R0 := R96
1397 [-]: MOVE      R0 R207      ; R0 := R207
1398 [-]: MOVE      R0 R144      ; R0 := R144
1399 [-]: MOVE      R0 R153      ; R0 := R153
1400 [-]: MOVE      R0 R1        ; R0 := R1
1401 [-]: MOVE      R0 R98       ; R0 := R98
1402 [-]: MOVE      R0 R66       ; R0 := R66
1403 [-]: MOVE      R0 R6        ; R0 := R6
1404 [-]: MOVE      R0 R150      ; R0 := R150
1405 [-]: MOVE      R0 R196      ; R0 := R196
1406 [-]: MOVE      R0 R2        ; R0 := R2
1407 [-]: MOVE      R0 R119      ; R0 := R119
1408 [-]: MOVE      R0 R151      ; R0 := R151
1409 [-]: MOVE      R0 R74       ; R0 := R74
1410 [-]: MOVE      R0 R17       ; R0 := R17
1411 [-]: SETGLOBAL R246 K252    ; onRawInputEvent := R246
1412 [-]: SETGLOBAL R246 K253    ; 0x11563913 := R246
1413 [-]: CLOSURE   R246 150     ; R246 := closure(Function #151)
1414 [-]: MOVE      R0 R243      ; R0 := R243
1415 [-]: SETGLOBAL R246 K254    ; NodeRollOver := R246
1416 [-]: SETGLOBAL R246 K255    ; 0xFA36E361 := R246
1417 [-]: CLOSURE   R246 151     ; R246 := closure(Function #152)
1418 [-]: MOVE      R0 R126      ; R0 := R126
1419 [-]: SETGLOBAL R246 K256    ; NodeRollOut := R246
1420 [-]: SETGLOBAL R246 K257    ; 0xA4A3822 := R246
1421 [-]: CLOSURE   R246 152     ; R246 := closure(Function #153)
1422 [-]: MOVE      R0 R49       ; R0 := R49
1423 [-]: MOVE      R0 R50       ; R0 := R50
1424 [-]: MOVE      R0 R24       ; R0 := R24
1425 [-]: SETGLOBAL R246 K258    ; NodeSelect := R246
1426 [-]: SETGLOBAL R246 K259    ; 0x6FB07481 := R246
1427 [-]: CLOSURE   R246 153     ; R246 := closure(Function #154)
1428 [-]: MOVE      R0 R17       ; R0 := R17
1429 [-]: SETGLOBAL R246 K260    ; WorldStateWindowVisChanged := R246
1430 [-]: SETGLOBAL R246 K261    ; 0x6E3DB508 := R246
1431 [-]: CLOSURE   R246 154     ; R246 := closure(Function #155)
1432 [-]: MOVE      R0 R17       ; R0 := R17
1433 [-]: MOVE      R0 R163      ; R0 := R163
1434 [-]: SETGLOBAL R246 K262    ; WSWDioramaChanged := R246
1435 [-]: SETGLOBAL R246 K263    ; 0xE705EF6F := R246
1436 [-]: CLOSURE   R246 155     ; R246 := closure(Function #156)
1437 [-]: MOVE      R0 R135      ; R0 := R135
1438 [-]: MOVE      R0 R230      ; R0 := R230
1439 [-]: SETGLOBAL R246 K264    ; onViewportSizeChanged := R246
1440 [-]: SETGLOBAL R246 K265    ; 0x3A900427 := R246
1441 [-]: CLOSURE   R246 156     ; R246 := closure(Function #157)
1442 [-]: MOVE      R0 R31       ; R0 := R31
1443 [-]: SETGLOBAL R246 K266    ; IsInputBlocked := R246
1444 [-]: SETGLOBAL R246 K267    ; 0x6FE7E740 := R246
1445 [-]: CLOSURE   R246 157     ; R246 := closure(Function #158)
1446 [-]: SETGLOBAL R246 K268    ; OnTopMenuClosed := R246
1447 [-]: SETGLOBAL R246 K269    ; 0xF531F775 := R246
1448 [-]: CLOSURE   R246 158     ; R246 := closure(Function #159)
1449 [-]: SETGLOBAL R246 K270    ; SetTrigger := R246
1450 [-]: SETGLOBAL R246 K271    ; 0x3F956A34 := R246
1451 [-]: CLOSURE   R246 159     ; R246 := closure(Function #160)
1452 [-]: MOVE      R0 R184      ; R0 := R184
1453 [-]: SETGLOBAL R246 K272    ; OnQuestsChanged := R246
1454 [-]: SETGLOBAL R246 K273    ; 0x406548E4 := R246
1455 [-]: CLOSURE   R246 160     ; R246 := closure(Function #161)
1456 [-]: MOVE      R0 R82       ; R0 := R82
1457 [-]: MOVE      R0 R81       ; R0 := R81
1458 [-]: MOVE      R0 R25       ; R0 := R25
1459 [-]: MOVE      R0 R182      ; R0 := R182
1460 [-]: SETGLOBAL R246 K274    ; OnWorldStateChanged := R246
1461 [-]: SETGLOBAL R246 K275    ; 0xECDF5016 := R246
1462 [-]: GETGLOBAL R246 K276    ; R246 := _T
1463 [-]: LOADK     R247 K277    ; R247 := "RadialSolarMapFade"
1464 [-]: CLOSURE   R248 161     ; R248 := closure(Function #162)
1465 [-]: MOVE      R0 R76       ; R0 := R76
1466 [-]: MOVE      R0 R31       ; R0 := R31
1467 [-]: MOVE      R0 R240      ; R0 := R240
1468 [-]: MOVE      R0 R34       ; R0 := R34
1469 [-]: MOVE      R0 R37       ; R0 := R37
1470 [-]: MOVE      R0 R13       ; R0 := R13
1471 [-]: MOVE      R0 R77       ; R0 := R77
1472 [-]: MOVE      R0 R109      ; R0 := R109
1473 [-]: SETTABLE  R246 R247 R248; R246[R247] := R248
1474 [-]: CLOSURE   R246 162     ; R246 := closure(Function #163)
1475 [-]: MOVE      R0 R163      ; R0 := R163
1476 [-]: SETGLOBAL R246 K278    ; PlayersChanged := R246
1477 [-]: SETGLOBAL R246 K279    ; 0x2C9E65B5 := R246
1478 [-]: CLOSURE   R246 163     ; R246 := closure(Function #164)
1479 [-]: MOVE      R0 R129      ; R0 := R129
1480 [-]: SETGLOBAL R246 K280    ; OnSquadMissionChanged := R246
1481 [-]: SETGLOBAL R246 K281    ; 0xB5CFAF92 := R246
1482 [-]: CLOSURE   R246 164     ; R246 := closure(Function #165)
1483 [-]: MOVE      R0 R32       ; R0 := R32
1484 [-]: MOVE      R0 R100      ; R0 := R100
1485 [-]: SETGLOBAL R246 K282    ; OnLoadoutChanged := R246
1486 [-]: SETGLOBAL R246 K283    ; 0xB7028B7 := R246
1487 [-]: CLOSURE   R246 165     ; R246 := closure(Function #166)
1488 [-]: MOVE      R0 R163      ; R0 := R163
1489 [-]: MOVE      R0 R198      ; R0 := R198
1490 [-]: SETGLOBAL R246 K284    ; OnGamepadTransition := R246
1491 [-]: SETGLOBAL R246 K285    ; 0x98E4F633 := R246
1492 [-]: CLOSURE   R246 166     ; R246 := closure(Function #167)
1493 [-]: SETGLOBAL R246 K286    ; SupportsThemes := R246
1494 [-]: SETGLOBAL R246 K287    ; 0xDBE73B9E := R246
1495 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 318
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x6B7B470B"]
  4 [-]: LOADK     R3 K3        ; R3 := "_root"
  5 [-]: LOADK     R4 K4        ; R4 := "_xmouse"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K5        ; R5 := "_ymouse"
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: LOADK     R3 K6        ; R3 := 0
 13 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 322
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["Region"]
  7 [-]: EQ        0 R0 K1      ; if R0 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x221C9700
 12 [-]: CALL      R1 1 2       ; R1 := R1()
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 15 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 32
 16 [-]: JMP       32           ; PC := 32
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0x69B983D"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := mMovie
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 22 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["clipName"]
 23 [-]: CALL      R2 3 3       ; R2,R3 := R2(R3,R4)
 24 [-]: GETUPVAL  R4 U1        ; R4 := U1
 25 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x4F6BF2C8"]
 26 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 27 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 28 [-]: SETTABLE  R6 K8 R2     ; R6["x"] := R2
 29 [-]: SETTABLE  R6 K9 R3     ; R6["y"] := R3
 30 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 31 [-]: MOVE      R1 R4        ; R1 := R4
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 34 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 62
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x400E7765
 37 [-]: GETUPVAL  R5 U0        ; R5 := U0
 38 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Region"]
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["instance"]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 62
 42 [-]: JMP       62           ; PC := 62
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Region"]
 45 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["instance"]
 46 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x6DA72501"]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K5        ; R5 := mMovie
 49 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5["0xAF296C52"]
 50 [-]: MOVE      R7 R4        ; R7 := R4
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: GETUPVAL  R6 U1        ; R6 := U1
 53 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["0x4F6BF2C8"]
 54 [-]: GETGLOBAL R7 K5        ; R7 := mMovie
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R5 K8     ; R9 := R5["x"]
 57 [-]: SETTABLE  R8 K8 R9     ; R8["x"] := R9
 58 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["y"]
 59 [-]: SETTABLE  R8 K9 R9     ; R8["y"] := R9
 60 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 61 [-]: MOVE      R1 R6        ; R1 := R6
 62 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 63 [-]: SETTABLE  R6 K14 K15   ; R6["outer"] := 0.059999998658895
 64 [-]: SETTABLE  R6 K16 K17   ; R6["inner"] := 0.019999999552965
 65 [-]: LOADK     R7 K18       ; R7 := 0
 66 [-]: GETUPVAL  R8 U1        ; R8 := U1
 67 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["0xF81722A2"]
 68 [-]: GETUPVAL  R9 U2        ; R9 := U2
 69 [-]: GETUPVAL  R10 U3       ; R10 := U3
 70 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["ZoomedMultiplier"]
 71 [-]: GETUPVAL  R11 U3       ; R11 := U3
 72 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["SpaceMultiplier"]
 73 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 74 [-]: GETUPVAL  R9 U4        ; R9 := U4
 75 [-]: SETTABLE  R9 K22 R8    ; R9["SpeedMultiplier"] := R8
 76 [-]: TEST      R0 0         ; if not R0 then PC := 122
 77 [-]: JMP       122          ; PC := 122
 78 [-]: GETUPVAL  R9 U1        ; R9 := U1
 79 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["0xF81722A2"]
 80 [-]: GETUPVAL  R10 U2       ; R10 := U2
 81 [-]: GETUPVAL  R11 U3       ; R11 := U3
 82 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["ZoomedHoveringMultiplier"]
 83 [-]: GETUPVAL  R12 U3       ; R12 := U3
 84 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["SpaceHoveringMultiplier"]
 85 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 86 [-]: GETUPVAL  R10 U5       ; R10 := U5
 87 [-]: CALL      R10 1 2      ; R10 := R10()
 88 [-]: GETUPVAL  R11 U1       ; R11 := U1
 89 [-]: GETTABLE  R11 R11 K7   ; R11 := R11["0x4F6BF2C8"]
 90 [-]: GETGLOBAL R12 K5       ; R12 := mMovie
 91 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 92 [-]: GETTABLE  R14 R10 K8   ; R14 := R10["x"]
 93 [-]: SETTABLE  R13 K8 R14   ; R13["x"] := R14
 94 [-]: GETTABLE  R14 R10 K9   ; R14 := R10["y"]
 95 [-]: SETTABLE  R13 K9 R14   ; R13["y"] := R14
 96 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 97 [-]: GETGLOBAL R12 K25      ; R12 := math
 98 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["0x8B011038"]
 99 [-]: GETGLOBAL R13 K27      ; R13 := 0xB09F286F
100 [-]: MOVE      R14 R11      ; R14 := R11
101 [-]: MOVE      R15 R1       ; R15 := R1
102 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
103 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
104 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
105 [-]: MOVE      R7 R12       ; R7 := R12
106 [-]: GETTABLE  R12 R6 K14   ; R12 := R6["outer"]
107 [-]: LE        0 R7 R12     ; if R7 > R12 then PC := 122
108 [-]: JMP       122          ; PC := 122
109 [-]: GETTABLE  R12 R6 K16   ; R12 := R6["inner"]
110 [-]: SUB       R12 R7 R12   ; R12 := R7 - R12
111 [-]: GETTABLE  R13 R6 K14   ; R13 := R6["outer"]
112 [-]: GETTABLE  R14 R6 K16   ; R14 := R6["inner"]
113 [-]: SUB       R13 R13 R14  ; R13 := R13 - R14
114 [-]: DIV       R12 R12 R13  ; R12 := R12 / R13
115 [-]: GETUPVAL  R13 U4       ; R13 := U4
116 [-]: GETGLOBAL R14 K28      ; R14 := 0x93034B55
117 [-]: MOVE      R15 R8       ; R15 := R8
118 [-]: MOVE      R16 R9       ; R16 := R9
119 [-]: SUB       R17 K29 R12  ; R17 := 1 - R12
120 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
121 [-]: SETTABLE  R13 K22 R14  ; R13["SpeedMultiplier"] := R14
122 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 356
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gRegion
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x372CB914"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x2EA5AFA"]
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  8 [-]: GETGLOBAL R2 K3        ; R2 := gFlashMgr
  9 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0xE8178C52"]
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 13 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 361
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x69B983D"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := "InfoTip"
  5 [-]: CALL      R0 3 3       ; R0,R1 := R0(R1,R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["InitLocationPicYPos"]
  8 [-]: ADD       R2 R1 R2     ; R2 := R1 + R2
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0x65939576"]
 11 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 12 [-]: GETUPVAL  R5 U1        ; R5 := U1
 13 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["InitLocationPicHeight"]
 14 [-]: DIV       R5 R5 K6     ; R5 := R5 / 2
 15 [-]: SUB       R5 R2 R5     ; R5 := R2 - R5
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["0x9884F87F"]
 19 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 20 [-]: GETUPVAL  R6 U1        ; R6 := U1
 21 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["InitLocationPicHeight"]
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 24 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 25 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 26 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["VISIBILITY_CENTER"]
 27 [-]: MOVE      R8 R3        ; R8 := R3
 28 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 29 [-]: GETGLOBAL R5 K8        ; R5 := locationPicMaterial
 30 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5["0x94FB2E1A"]
 31 [-]: GETGLOBAL R7 K10       ; R7 := Lotus_Game
 32 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["VISIBILITY_SIZE"]
 33 [-]: MOVE      R8 R4        ; R8 := R4
 34 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 35 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 372
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xF3E132E0"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x68998E7D"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETGLOBAL R1 K5        ; R1 := math
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 16 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 17 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETUPVAL  R3 U1        ; R3 := U1
 20 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["MaxX"]
 21 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 22 [-]: SETTABLE  R0 K0 R1     ; R0["MaxX"] := R1
 23 [-]: GETUPVAL  R0 U1        ; R0 := U1
 24 [-]: GETGLOBAL R1 K5        ; R1 := math
 25 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["0x8B011038"]
 26 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0xEE069D65"]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["MaxY"]
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: SETTABLE  R0 K3 R1     ; R0["MaxY"] := R1
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: GETUPVAL  R1 U2        ; R1 := U2
 35 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 36 [-]: GETUPVAL  R2 U1        ; R2 := U1
 37 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["MaxX"]
 38 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 39 [-]: GETUPVAL  R4 U1        ; R4 := U1
 40 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["MinX"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 43 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: SETTABLE  R0 K9 R1     ; R0["X"] := R1
 46 [-]: GETUPVAL  R0 U1        ; R0 := U1
 47 [-]: GETUPVAL  R1 U2        ; R1 := U2
 48 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xB57E56DF"]
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
 51 [-]: GETGLOBAL R3 K11       ; R3 := 0xF595ADDE
 52 [-]: GETUPVAL  R4 U1        ; R4 := U1
 53 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["MinY"]
 54 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 55 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
 56 [-]: DIV       R2 R2 K13    ; R2 := R2 / 2
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: SETTABLE  R0 K14 R1    ; R0["Y"] := R1
 59 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 60 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 61 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 62 [-]: LOADK     R3 K18       ; R3 := "_x"
 63 [-]: GETUPVAL  R4 U1        ; R4 := U1
 64 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["X"]
 65 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 66 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 67 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 68 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 69 [-]: LOADK     R3 K19       ; R3 := "_y"
 70 [-]: GETUPVAL  R4 U1        ; R4 := U1
 71 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["Y"]
 72 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 73 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 74 [-]: SELF      R0 R0 K16    ; R1 := R0; R0 := R0["0x1C19D966"]
 75 [-]: LOADK     R2 K17       ; R2 := "Reticle"
 76 [-]: LOADK     R3 K20       ; R3 := "_visible"
 77 [-]: GETUPVAL  R4 U1        ; R4 := U1
 78 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["IsVisible"]
 79 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 80 [-]: GETUPVAL  R0 U3        ; R0 := U3
 81 [-]: GETUPVAL  R1 U1        ; R1 := U1
 82 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["X"]
 83 [-]: GETUPVAL  R2 U1        ; R2 := U1
 84 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["Y"]
 85 [-]: CALL      R0 3 1       ; R0(R1,R2)
 86 [-]: GETGLOBAL R0 K22       ; R0 := 0x400E7765
 87 [-]: GETUPVAL  R1 U4        ; R1 := U4
 88 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 89 [-]: TEST      R0 1         ; if R0 then PC := 100
 90 [-]: JMP       100          ; PC := 100
 91 [-]: GETUPVAL  R0 U4        ; R0 := U4
 92 [-]: SELF      R0 R0 K23    ; R1 := R0; R0 := R0["0x8C7099E9"]
 93 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 94 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xF595D5E1"]
 95 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 96 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 97 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEE069D65"]
 98 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 99 [-]: CALL      R0 0 1       ; R0(R1,...)
100 [-]: GETUPVAL  R0 U5        ; R0 := U5
101 [-]: GETUPVAL  R1 U1        ; R1 := U1
102 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["MaxX"]
103 [-]: GETUPVAL  R2 U1        ; R2 := U1
104 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["MaxY"]
105 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
106 [-]: SETTABLE  R0 K24 R1    ; R0["AspectRatio"] := R1
107 [-]: GETUPVAL  R0 U2        ; R0 := U2
108 [-]: GETTABLE  R0 R0 K25    ; R0 := R0["0xEA569929"]
109 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
110 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
111 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
112 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
113 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
114 [-]: LOADK     R5 K27       ; R5 := "_width"
115 [-]: MOVE      R6 R0        ; R6 := R0
116 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
117 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
118 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2["0x1C19D966"]
119 [-]: LOADK     R4 K26       ; R4 := "InfluenceMap"
120 [-]: LOADK     R5 K28       ; R5 := "_height"
121 [-]: MOVE      R6 R1        ; R6 := R1
122 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
123 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 400
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["SquadOverlay"]
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K4        ; R2 := "OpenInvite"
 11 [-]: LOADK     R3 K5        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 406
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["ShowPath"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K0 R1     ; R0["ShowPath"] := R1
  6 [-]: LOADK     R0 K1        ; R0 := 1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Splines"]
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K1        ; R2 := 1
 11 [-]: FORPREP   R0 20        ; R0 -= R2; PC := 20
 12 [-]: GETUPVAL  R4 U0        ; R4 := U0
 13 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Splines"]
 14 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 15 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x7DBDDA0B"]
 16 [-]: GETUPVAL  R6 U0        ; R6 := U0
 17 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["ShowPath"]
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 21 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 413
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 18
  4 [-]: JMP       18           ; PC := 18
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ForceAggregateSessions"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: TEST      R0 1         ; if R0 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: MOVE      R0 R1        ; R0 := R1
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: GETGLOBAL R0 K2        ; R0 := _T
 15 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xEAD7F082"]
 16 [-]: CALL      R0 1 1       ; R0()
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["0x930EC5CF"]
 20 [-]: LOADK     R1 K6        ; R1 := "SwitchLoadout"
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0["0xDA085F65"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 428
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0["0x1B252E3C"]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["0xBFFBFE5E"]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := table
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0xE6450C9D"]
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R2 3 1       ; R2(R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 435
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x63B09107
  3 [-]: GETGLOBAL R3 K1        ; R3 := decorationLoader
  4 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R7 K2        ; R7 := table
  7 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["0xE6450C9D"]
  8 [-]: MOVE      R8 R1        ; R8 := R1
  9 [-]: SELF      R9 R6 K4     ; R10 := R6; R9 := R6["0x1B252E3C"]
 10 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 11 [-]: CALL      R7 0 1       ; R7(R8,...)
 12 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 6; R4 := R5 end
 13 [-]: JMP       6            ; PC := 6
 14 [-]: LOADK     R7 K5        ; R7 := 1
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: LEN       R8 R8        ; R8 := # R8
 17 [-]: LOADK     R9 K5        ; R9 := 1
 18 [-]: FORPREP   R7 34        ; R7 -= R9; PC := 34
 19 [-]: GETUPVAL  R11 U1       ; R11 := U1
 20 [-]: GETTABLE  R11 R11 K6   ; R11 := R11["0xBFFBFE5E"]
 21 [-]: MOVE      R12 R1       ; R12 := R1
 22 [-]: GETUPVAL  R13 U0       ; R13 := U0
 23 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 24 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 25 [-]: TEST      R11 1        ; if R11 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R11 K7       ; R11 := 0x93B1256B
 28 [-]: LOADK     R12 K8       ; R12 := "ERROR: Not preloading "
 29 [-]: GETUPVAL  R13 U0       ; R13 := U0
 30 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 31 [-]: LOADK     R14 K9       ; R14 := " Add it to the decorationLoader list in MapRedux.lua"
 32 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 33 [-]: CALL      R11 2 1      ; R11(R12)
 34 [-]: FORLOOP   R7 19        ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
 35 [-]: LOADK     R11 K5       ; R11 := 1
 36 [-]: LEN       R12 R1       ; R12 := # R1
 37 [-]: LOADK     R13 K5       ; R13 := 1
 38 [-]: FORPREP   R11 52       ; R11 -= R13; PC := 52
 39 [-]: GETUPVAL  R15 U1       ; R15 := U1
 40 [-]: GETTABLE  R15 R15 K6   ; R15 := R15["0xBFFBFE5E"]
 41 [-]: GETUPVAL  R16 U0       ; R16 := U0
 42 [-]: GETTABLE  R17 R1 R14   ; R17 := R1[R14]
 43 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 44 [-]: TEST      R15 1        ; if R15 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETGLOBAL R15 K7       ; R15 := 0x93B1256B
 47 [-]: LOADK     R16 K10      ; R16 := "ERROR: Preloading unused deco "
 48 [-]: GETTABLE  R17 R1 R14   ; R17 := R1[R14]
 49 [-]: LOADK     R18 K11      ; R18 := " Remove it from decorationLoader list in MapRedux.lua"
 50 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
 51 [-]: CALL      R15 2 1      ; R15(R16)
 52 [-]: FORLOOP   R11 39       ; R11 += R13; if R11 <= R12 then begin PC := 39; R14 := R11 end
 53 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 454
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["x"]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["y"]
  4 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["z"]
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: LOADK     R2 K4        ; R2 := 1
  7 [-]: LOADK     R3 K4        ; R3 := 1
  8 [-]: LOADK     R4 K4        ; R4 := 1
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["x"]
 10 [-]: MUL       R5 R5 R4     ; R5 := R5 * R4
 11 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 12 [-]: SETTABLE  R1 K1 R5     ; R1["x"] := R5
 13 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["y"]
 14 [-]: MUL       R5 R5 R2     ; R5 := R5 * R2
 15 [-]: SETTABLE  R1 K2 R5     ; R1["y"] := R5
 16 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["z"]
 17 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 18 [-]: SETTABLE  R1 K3 R5     ; R1["z"] := R5
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 469
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mapFogTexture
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADK     R0 K2        ; R0 := 0
  8 [-]: LOADK     R1 K3        ; R1 := 63
  9 [-]: LOADK     R2 K4        ; R2 := 1
 10 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 11 [-]: LOADK     R4 K2        ; R4 := 0
 12 [-]: LOADK     R5 K3        ; R5 := 63
 13 [-]: LOADK     R6 K4        ; R6 := 1
 14 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 15 [-]: LOADK     R8 K5        ; R8 := 255
 16 [-]: GETGLOBAL R9 K1        ; R9 := mapFogTexture
 17 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9["0x9EC00F7F"]
 18 [-]: MOVE      R11 R8       ; R11 := R8
 19 [-]: MOVE      R12 R3       ; R12 := R3
 20 [-]: MOVE      R13 R7       ; R13 := R7
 21 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 22 [-]: GETGLOBAL R9 K7        ; R9 := 0x1BF588C6
 23 [-]: CALL      R9 1 1       ; R9()
 24 [-]: FORLOOP   R4 15        ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
 25 [-]: FORLOOP   R0 11        ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
 26 [-]: GETGLOBAL R9 K8        ; R9 := gFlashMgr
 27 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9["0x2E4D89AB"]
 28 [-]: GETGLOBAL R11 K1       ; R11 := mapFogTexture
 29 [-]: CALL      R9 3 1       ; R9(R10,R11)
 30 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 486
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["guildId"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 116
  4 [-]: JMP       116          ; PC := 116
  5 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["locName"]
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETUPVAL  R3 U1        ; R3 := U1
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["EDIT_NODES"]
  9 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: MOVE      R2 R1        ; R2 := R1
 17 [-]: LOADK     R3 K6        ; R3 := "\r["
 18 [-]: GETGLOBAL R4 K7        ; R4 := 0x9FAED6BC
 19 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["name"]
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: LOADK     R5 K9        ; R5 := "]"
 22 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 23 [-]: GETGLOBAL R2 K10       ; R2 := 0x400E7765
 24 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["radialSector"]
 25 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mission"]
 26 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["levelOverride"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 107
 29 [-]: JMP       107          ; PC := 107
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETUPVAL  R3 U1        ; R3 := U1
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["EDIT_EDGES"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 107
 34 [-]: JMP       107          ; PC := 107
 35 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["radialSector"]
 36 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mission"]
 37 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["levelOverride"]
 38 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2["0x1B252E3C"]
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: GETGLOBAL R3 K15       ; R3 := string
 41 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["0xAF449107"]
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: LOADK     R5 K17       ; R5 := ".*/(.*)"
 44 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 45 [-]: MOVE      R4 R1        ; R4 := R1
 46 [-]: LOADK     R5 K18       ; R5 := "\r"
 47 [-]: MOVE      R6 R3        ; R6 := R3
 48 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 49 [-]: JMP       107          ; PC := 107
 50 [-]: GETUPVAL  R4 U0        ; R4 := U0
 51 [-]: GETUPVAL  R5 U1        ; R5 := U1
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["EDIT_NODE_DECOS"]
 53 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["deco"]
 56 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 107
 57 [-]: JMP       107          ; PC := 107
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["mEditingRotation"]
 60 [-]: TEST      R4 1         ; if R4 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["mShiftDown"]
 64 [-]: TEST      R4 1         ; if R4 then PC := 70
 65 [-]: JMP       70           ; PC := 70
 66 [-]: GETUPVAL  R4 U3        ; R4 := U3
 67 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["mControlDown"]
 68 [-]: TEST      R4 0         ; if not R4 then PC := 84
 69 [-]: JMP       84           ; PC := 84
 70 [-]: MOVE      R4 R1        ; R4 := R1
 71 [-]: LOADK     R5 K18       ; R5 := "\r"
 72 [-]: GETUPVAL  R6 U2        ; R6 := U2
 73 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["mRotationAxis"]
 74 [-]: LOADK     R7 K25       ; R7 := "="
 75 [-]: GETGLOBAL R8 K7        ; R8 := 0x9FAED6BC
 76 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["deco"]
 77 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["mRotation"]
 78 [-]: GETUPVAL  R10 U2       ; R10 := U2
 79 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mRotationAxis"]
 80 [-]: GETTABLE  R9 R9 R10    ; R9 := R9[R10]
 81 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 82 [-]: CONCAT    R1 R4 R8     ; R1 := R4 .. R5 .. R6 .. R7 .. R8
 83 [-]: JMP       107          ; PC := 107
 84 [-]: GETUPVAL  R4 U2        ; R4 := U2
 85 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["mEditingScale"]
 86 [-]: TEST      R4 1         ; if R4 then PC := 92
 87 [-]: JMP       92           ; PC := 92
 88 [-]: GETUPVAL  R4 U3        ; R4 := U3
 89 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["mAltDown"]
 90 [-]: TEST      R4 0         ; if not R4 then PC := 100
 91 [-]: JMP       100          ; PC := 100
 92 [-]: MOVE      R4 R1        ; R4 := R1
 93 [-]: LOADK     R5 K29       ; R5 := "\rScale="
 94 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
 95 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
 96 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["mScale"]
 97 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 98 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
 99 [-]: JMP       107          ; PC := 107
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 K18       ; R5 := "\r"
102 [-]: GETGLOBAL R6 K7        ; R6 := 0x9FAED6BC
103 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["deco"]
104 [-]: GETTABLE  R7 R7 K31    ; R7 := R7["mOffset"]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: CONCAT    R1 R4 R6     ; R1 := R4 .. R5 .. R6
107 [-]: GETTABLE  R4 R0 K32    ; R4 := R0["locked"]
108 [-]: TEST      R4 0         ; if not R4 then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["locationEnabled"]
111 [-]: TEST      R4 0         ; if not R4 then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: GETUPVAL  R4 U4        ; R4 := U4
114 [-]: MOVE      R5 R1        ; R5 := R1
115 [-]: CONCAT    R1 R4 R5     ; R1 := R4 .. R5
116 [-]: GETGLOBAL R4 K34       ; R4 := mMovie
117 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4["0xD6A79FE9"]
118 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["clipName"]
119 [-]: LOADK     R7 K37       ; R7 := ".Name.Label"
120 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
121 [-]: LOADK     R7 K38       ; R7 := "text"
122 [-]: MOVE      R8 R1        ; R8 := R1
123 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
124 [-]: GETGLOBAL R4 K39       ; R4 := 0xF595ADDE
125 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
126 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0x6B7B470B"]
127 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
128 [-]: LOADK     R8 K37       ; R8 := ".Name.Label"
129 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
130 [-]: LOADK     R8 K41       ; R8 := "textWidth"
131 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
132 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
133 [-]: TEST      R4 0         ; if not R4 then PC := 142
134 [-]: JMP       142          ; PC := 142
135 [-]: GETGLOBAL R5 K34       ; R5 := mMovie
136 [-]: SELF      R5 R5 K42    ; R6 := R5; R5 := R5["0x880196A7"]
137 [-]: GETTABLE  R7 R0 K36    ; R7 := R0["clipName"]
138 [-]: LOADK     R8 K43       ; R8 := "Name.Bg"
139 [-]: LOADK     R9 K44       ; R9 := "_width"
140 [-]: ADD       R10 R4 K45   ; R10 := R4 + 7
141 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 521
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 12        ; R0 -= R2; PC := 12
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x1BF588C6
  7 [-]: CALL      R4 1 1       ; R4()
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 11 [-]: CALL      R4 2 1       ; R4(R5)
 12 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 13 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 530
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Playing"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: LOADK     R2 K2        ; R2 := "InfoTip.NodeTransmission"
 12 [-]: MOVE      R2 R1        ; R2 := R1
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SETTABLE  R2 K1 K3     ; R2["Playing"] := "0x1"
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: SETTABLE  R2 K4 R0     ; R2["Node"] := R0
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: SETTABLE  R2 K5 R1     ; R2["Transmission"] := R1
 19 [-]: GETGLOBAL R2 K6        ; R2 := gFlashMgr
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x616DD092"]
 21 [-]: GETGLOBAL R4 K8        ; R4 := _G
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["UIMovie_TransmissionMovie"]
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 27 [-]: TEST      R3 1         ; if R3 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETGLOBAL R3 K10       ; R3 := _T
 30 [-]: SETTABLE  R3 K11 K12   ; R3["curTransmission"] := nil
 31 [-]: GETGLOBAL R3 K10       ; R3 := _T
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 34 [-]: SELF      R3 R2 K14    ; R4 := R2; R3 := R2["0x458F27A9"]
 35 [-]: LOADK     R5 K15       ; R5 := "PreviewClose"
 36 [-]: LOADK     R6 K16       ; R6 := "true"
 37 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 38 [-]: GETGLOBAL R3 K10       ; R3 := _T
 39 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["QueuedTransmissions"]
 40 [-]: EQ        0 R3 K12     ; if R3 ~= nil then PC := 45
 41 [-]: JMP       45           ; PC := 45
 42 [-]: GETGLOBAL R3 K10       ; R3 := _T
 43 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 44 [-]: SETTABLE  R3 K13 R4    ; R3["QueuedTransmissions"] := R4
 45 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 46 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 47 [-]: GETUPVAL  R5 U1        ; R5 := U1
 48 [-]: LOADK     R6 K19       ; R6 := "_visible"
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 51 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 52 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 53 [-]: LOADK     R5 K20       ; R5 := "InfoTip.EnemyIcon"
 54 [-]: LOADK     R6 K19       ; R6 := "_visible"
 55 [-]: MOVE      R7 R0        ; R7 := R0
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K10       ; R3 := _T
 58 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
 59 [-]: SETTABLE  R3 K21 R4    ; R3["TransmissionOverrideMovie"] := R4
 60 [-]: GETGLOBAL R3 K10       ; R3 := _T
 61 [-]: GETUPVAL  R4 U1        ; R4 := U1
 62 [-]: LOADK     R5 K23       ; R5 := ".Container"
 63 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 64 [-]: SETTABLE  R3 K22 R4    ; R3["TransmissionOverrideMainClipName"] := R4
 65 [-]: GETGLOBAL R3 K10       ; R3 := _T
 66 [-]: SETTABLE  R3 K24 K12   ; R3["TransmissionOverrideY"] := nil
 67 [-]: GETGLOBAL R3 K10       ; R3 := _T
 68 [-]: SETTABLE  R3 K25 K12   ; R3["TransmissionOverrideX"] := nil
 69 [-]: GETGLOBAL R3 K26       ; R3 := table
 70 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["0xE6450C9D"]
 71 [-]: GETGLOBAL R4 K10       ; R4 := _T
 72 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["QueuedTransmissions"]
 73 [-]: MOVE      R5 R1        ; R5 := R1
 74 [-]: CALL      R3 3 1       ; R3(R4,R5)
 75 [-]: GETGLOBAL R3 K6        ; R3 := gFlashMgr
 76 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3["0x24FF386"]
 77 [-]: GETGLOBAL R5 K8        ; R5 := _G
 78 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["UIMovie_TransmissionMovie"]
 79 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 80 [-]: MOVE      R2 R3        ; R2 := R3
 81 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 82 [-]: SELF      R3 R3 K29    ; R4 := R3; R3 := R3["0x7E1F26D7"]
 83 [-]: GETUPVAL  R5 U1        ; R5 := U1
 84 [-]: LOADK     R6 K30       ; R6 := ".Container.ImageOuter.Image"
 85 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 86 [-]: GETGLOBAL R6 K31       ; R6 := infoTransmissionMaterial
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 89 [-]: GETUPVAL  R4 U0        ; R4 := U0
 90 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["Projector"]
 91 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 92 [-]: TEST      R3 0         ; if not R3 then PC := 94
 93 [-]: JMP       94           ; PC := 94
 94 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
 95 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x1C19D966"]
 96 [-]: GETUPVAL  R5 U1        ; R5 := U1
 97 [-]: LOADK     R6 K33       ; R6 := "_alpha"
 98 [-]: LOADK     R7 K34       ; R7 := 0
 99 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
100 [-]: GETGLOBAL R3 K35       ; R3 := 0x52E17A90
101 [-]: GETGLOBAL R4 K17       ; R4 := mMovie
102 [-]: GETUPVAL  R5 U1        ; R5 := U1
103 [-]: GETGLOBAL R6 K36       ; R6 := UISys
104 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["FlashInstance_EASE_OUT_ELASTIC"]
105 [-]: NEWTABLE  R7 1 0       ; R7 := {}
106 [-]: LOADK     R8 K33       ; R8 := "_alpha"
107 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
108 [-]: NEWTABLE  R8 1 0       ; R8 := {}
109 [-]: LOADK     R9 K38       ; R9 := 75
110 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
111 [-]: LOADK     R9 K39       ; R9 := 1.3500000238419
112 [-]: LOADK     R10 K34      ; R10 := 0
113 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
114 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 589
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x6B7B470B"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_alpha"
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
  8 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
  9 [-]: LOADK     R4 K5        ; R4 := "_visible"
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K4        ; R3 := "InfoTip.EnemyIcon"
 15 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 16 [-]: LOADK     R5 K6        ; R5 := 0
 17 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 18 [-]: CLOSURE   R1 0         ; R1 := closure(Function #16.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: MOVE      R0 R0        ; R0 := R0
 21 [-]: GETUPVAL  R0 U1        ; R0 := U1
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x52E17A90
 23 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETGLOBAL R5 K8        ; R5 := UISys
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["FlashInstance_LINEAR"]
 27 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 28 [-]: MOVE      R7 R1        ; R7 := R1
 29 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 30 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 31 [-]: LOADK     R8 K10       ; R8 := 1
 32 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 33 [-]: LOADK     R8 K11       ; R8 := 0.25
 34 [-]: LOADK     R9 K6        ; R9 := 0
 35 [-]: CLOSURE   R10 1        ; R10 := closure(Function #16.2)
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: CALL      R2 9 1       ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
 39 [-]: RETURN    R0 1         ; return 


; Function #16.1:
;
; Name:            
; Defined at line: 596
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LOADK     R4 K2        ; R4 := "_alpha"
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
  6 [-]: LOADK     R6 K4        ; R6 := 0
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: MOVE      R8 R0        ; R8 := R0
  9 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 10 [-]: CALL      R1 0 1       ; R1(R2,...)
 11 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 12 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
 13 [-]: LOADK     R3 K5        ; R3 := "InfoTip.EnemyIcon"
 14 [-]: LOADK     R4 K2        ; R4 := "_alpha"
 15 [-]: GETGLOBAL R5 K3        ; R5 := 0x93034B55
 16 [-]: LOADK     R6 K4        ; R6 := 0
 17 [-]: LOADK     R7 K6        ; R7 := 100
 18 [-]: MOVE      R8 R0        ; R8 := R0
 19 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["Projector"]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: TEST      R1 1         ; if R1 then PC := 27
 26 [-]: JMP       27           ; PC := 27
 27 [-]: RETURN    R0 1         ; return 


; Function #16.2:
;
; Name:            
; Defined at line: 607
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K2        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K3        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Projector"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R0 K5        ; R0 := gBackgroundRegion
 14 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0x9B0A3887"]
 15 [-]: GETUPVAL  R2 U1        ; R2 := U1
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Projector"]
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: GETUPVAL  R0 U1        ; R0 := U1
 19 [-]: SETTABLE  R0 K7 K8     ; R0["Playing"] := "0x0"
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SETTABLE  R0 K9 K10    ; R0["Node"] := nil
 22 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 619
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := transmissionInterruptedSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: SETTABLE  R0 K2 K3     ; R0["Playing"] := "0x0"
  7 [-]: GETUPVAL  R0 U2        ; R0 := U2
  8 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["0xD66C1755"]
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Transmission"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 625
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 629
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := gFlashMgr
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x616DD092"]
  3 [-]: GETGLOBAL R3 K2        ; R3 := _G
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x61494587"]
 13 [-]: LOADK     R4 K6        ; R4 := 2
 14 [-]: CLOSURE   R5 0         ; R5 := closure(Function #19.1)
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U3        ; R0 := U3
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: GETGLOBAL R2 K7        ; R2 := 0x9FAED6BC
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["name"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETGLOBAL R3 K9        ; R3 := _T
 25 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 26 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 37
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R3 K9        ; R3 := _T
 30 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["CachedInvasionInfo"]
 31 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mDefenderMissionInfo"]
 33 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["uniqueName"]
 34 [-]: EQ        0 R3 K13     ; if R3 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: LOADK     R2 K14       ; R2 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
 37 [-]: GETGLOBAL R3 K15       ; R3 := 0x63B09107
 38 [-]: GETUPVAL  R4 U4        ; R4 := U4
 39 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 40 [-]: JMP       58           ; PC := 58
 41 [-]: GETTABLE  R8 R7 K16    ; R8 := R7["BossNode"]
 42 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETUPVAL  R8 U5        ; R8 := U5
 45 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["0xF81722A2"]
 46 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 47 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: MOVE      R9 R9        ; R9 := R9
 50 [-]: GETTABLE  R10 R7 K18   ; R10 := R7["BossNodeTransmission"]
 51 [-]: GETTABLE  R11 R7 K19   ; R11 := R7["Transmission"]
 52 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 53 [-]: GETUPVAL  R9 U6        ; R9 := U6
 54 [-]: MOVE      R10 R0       ; R10 := R0
 55 [-]: MOVE      R11 R8       ; R11 := R8
 56 [-]: CALL      R9 3 1       ; R9(R10,R11)
 57 [-]: JMP       60           ; PC := 60
 58 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 41; R5 := R6 end
 59 [-]: JMP       41           ; PC := 41
 60 [-]: RETURN    R0 1         ; return 


; Function #19.1:
;
; Name:            
; Defined at line: 633
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["nodeIndex"]
  8 [-]: GETUPVAL  R1 U1        ; R1 := U1
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["nodeIndex"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 656
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mEdgeNode1"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 32
  7 [-]: JMP       32           ; PC := 32
  8 [-]: LOADK     R1 K3        ; R1 := ": "
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x9FAED6BC
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mEdgeNode1"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["radialSector"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["name"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: CONCAT    R0 R1 R2     ; R0 := R1 .. R2
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mEdgeNode2"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 32
 21 [-]: JMP       32           ; PC := 32
 22 [-]: MOVE      R1 R0        ; R1 := R0
 23 [-]: LOADK     R2 K8        ; R2 := " TO "
 24 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["mEdgeNode2"]
 27 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["radialSector"]
 28 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["name"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: LOADK     R4 K9        ; R4 := " (A)dd or (D)elete?"
 31 [-]: CONCAT    R0 R1 R4     ; R0 := R1 .. R2 .. R3 .. R4
 32 [-]: LOADK     R1 K10       ; R1 := "EDITING EDGES"
 33 [-]: MOVE      R2 R0        ; R2 := R0
 34 [-]: LOADK     R3 K11       ; R3 := "\r >CTRL=Multi-select"
 35 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 36 [-]: RETURN    R1 2         ; return R1
 37 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 668
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R1 K1 K2     ; R1["INACTIVE_NODE_ALPHA"] := 0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["EDIT_REGIONS"]
  7 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADK     R0 K4        ; R0 := "EDITING REGIONS"
 10 [-]: JMP       83           ; PC := 83
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["EDIT_REGION_FRAMING"]
 14 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 37
 15 [-]: JMP       37           ; PC := 37
 16 [-]: GETUPVAL  R1 U3        ; R1 := U3
 17 [-]: GETUPVAL  R2 U4        ; R2 := U4
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mFramingRegion"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: LOADK     R2 K7        ; R2 := "NONE"
 21 [-]: EQ        1 R1 K8      ; if R1 == nil then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R3 K9        ; R3 := string
 24 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["0x639C642A"]
 25 [-]: GETGLOBAL R4 K11       ; R4 := mMovie
 26 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5DB0BD4"]
 27 [-]: GETTABLE  R6 R1 K13    ; R6 := R1["name"]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: MOVE      R2 R3        ; R2 := R3
 32 [-]: LOADK     R3 K14       ; R3 := "EDITING REGION FRAMING ["
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: LOADK     R5 K15       ; R5 := "]\r >R=Toggle"
 35 [-]: CONCAT    R0 R3 R5     ; R0 := R3 .. R4 .. R5
 36 [-]: JMP       83           ; PC := 83
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETUPVAL  R4 U2        ; R4 := U2
 39 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["EDIT_NODES"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: LOADK     R0 K17       ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
 43 [-]: GETUPVAL  R3 U0        ; R3 := U0
 44 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 45 [-]: JMP       83           ; PC := 83
 46 [-]: GETUPVAL  R3 U1        ; R3 := U1
 47 [-]: GETUPVAL  R4 U2        ; R4 := U2
 48 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["EDIT_EDGES"]
 49 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 57
 50 [-]: JMP       57           ; PC := 57
 51 [-]: GETUPVAL  R3 U5        ; R3 := U5
 52 [-]: CALL      R3 1 2       ; R3 := R3()
 53 [-]: MOVE      R0 R3        ; R0 := R3
 54 [-]: GETUPVAL  R3 U0        ; R3 := U0
 55 [-]: SETTABLE  R3 K1 K18    ; R3["INACTIVE_NODE_ALPHA"] := 20
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETUPVAL  R3 U1        ; R3 := U1
 58 [-]: GETUPVAL  R4 U2        ; R4 := U2
 59 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["EDIT_NODE_DECOS"]
 60 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADK     R0 K21       ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETUPVAL  R3 U1        ; R3 := U1
 65 [-]: GETUPVAL  R4 U2        ; R4 := U2
 66 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
 67 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LOADK     R0 K23       ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
 70 [-]: JMP       83           ; PC := 83
 71 [-]: GETGLOBAL R3 K24       ; R3 := _T
 72 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 73 [-]: TEST      R3 0         ; if not R3 then PC := 83
 74 [-]: JMP       83           ; PC := 83
 75 [-]: GETGLOBAL R3 K24       ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 77 [-]: GETTABLE  R3 R3 K26    ; R3 := R3["StarChartLabel"]
 78 [-]: TEST      R3 0         ; if not R3 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: GETGLOBAL R3 K24       ; R3 := _T
 81 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["WareframeChallenge"]
 82 [-]: GETTABLE  R0 R3 K26    ; R0 := R3["StarChartLabel"]
 83 [-]: GETGLOBAL R3 K11       ; R3 := mMovie
 84 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3["0x1C19D966"]
 85 [-]: LOADK     R5 K28       ; R5 := "ScreenModeLabel"
 86 [-]: LOADK     R6 K29       ; R6 := "text"
 87 [-]: MOVE      R7 R0        ; R7 := R0
 88 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 89 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 697
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: LOADK     R1 K0        ; R1 := 1
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 K0        ; R3 := 1
  5 [-]: FORPREP   R1 57        ; R1 -= R3; PC := 57
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["IsShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 57
 10 [-]: JMP       57           ; PC := 57
 11 [-]: GETGLOBAL R5 K2        ; R5 := 0x63B09107
 12 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 13 [-]: GETUPVAL  R7 U0        ; R7 := U0
 14 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 15 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["controlPointA"]
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 18 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["controlPointB"]
 19 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 20 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 21 [-]: JMP       55           ; PC := 55
 22 [-]: TEST      R0 0         ; if not R0 then PC := 51
 23 [-]: JMP       51           ; PC := 51
 24 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 25 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0xBDD34CC6"]
 26 [-]: GETGLOBAL R12 K8       ; R12 := hoverRing
 27 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["position"]
 28 [-]: GETUPVAL  R14 U1       ; R14 := U1
 29 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["RING_ROTATION"]
 30 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
 31 [-]: SETTABLE  R9 K5 R10    ; R9["ringInstance"] := R10
 32 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 33 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xA20F64C0"]
 34 [-]: GETGLOBAL R12 K12      ; R12 := 0xB5A59043
 35 [-]: LOADK     R13 K13      ; R13 := 0
 36 [-]: LOADK     R14 K14      ; R14 := 255
 37 [-]: LOADK     R15 K13      ; R15 := 0
 38 [-]: LOADK     R16 K14      ; R16 := 255
 39 [-]: CALL      R12 5 0      ; R12,... := R12(R13,R14,R15,R16)
 40 [-]: CALL      R10 0 1      ; R10(R11,...)
 41 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 42 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0x9F133E77"]
 43 [-]: LOADK     R12 K16      ; R12 := 0.025000000372529
 44 [-]: LOADK     R13 K16      ; R13 := 0.025000000372529
 45 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 46 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["ringInstance"]
 47 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10["0x66A7D2"]
 48 [-]: LOADK     R12 K18      ; R12 := 0.20000000298023
 49 [-]: CALL      R10 3 1      ; R10(R11,R12)
 50 [-]: JMP       55           ; PC := 55
 51 [-]: GETGLOBAL R10 K6       ; R10 := gBackgroundRegion
 52 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10["0x9B0A3887"]
 53 [-]: GETTABLE  R12 R9 K5    ; R12 := R9["ringInstance"]
 54 [-]: CALL      R10 3 1      ; R10(R11,R12)
 55 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
 56 [-]: JMP       22           ; PC := 22
 57 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 58 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 714
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R2 U2        ; R2 := U2
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
 14 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 1       ; R2(R3)
 19 [-]: GETUPVAL  R2 U3        ; R2 := U3
 20 [-]: CALL      R2 1 1       ; R2()
 21 [-]: GETUPVAL  R2 U4        ; R2 := U4
 22 [-]: CALL      R2 1 1       ; R2()
 23 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 730
; #Upvalues:       10
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  34

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: MOVE      R0 R2        ; R0 := R2
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: NEWTABLE  R0 13 0      ; R0 := {}
 14 [-]: GETUPVAL  R1 U4        ; R1 := U4
 15 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ALERT_FLAG"]
 16 [-]: GETUPVAL  R2 U4        ; R2 := U4
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["EVENT_FLAG"]
 18 [-]: GETUPVAL  R3 U4        ; R3 := U4
 19 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["PVP_FLAG"]
 20 [-]: GETUPVAL  R4 U4        ; R4 := U4
 21 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NIGHTMARE_FLAG"]
 22 [-]: GETUPVAL  R5 U4        ; R5 := U4
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["INVASION_ATTACKER_FLAG"]
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["INVASION_DEFENDER_FLAG"]
 26 [-]: GETUPVAL  R7 U4        ; R7 := U4
 27 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["BADLAND_ATTACKER_FLAG"]
 28 [-]: GETUPVAL  R8 U4        ; R8 := U4
 29 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["BADLAND_DEFENDER_FLAG"]
 30 [-]: GETUPVAL  R9 U4        ; R9 := U4
 31 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["BADLAND_MISSION_FLAG"]
 32 [-]: GETUPVAL  R10 U4       ; R10 := U4
 33 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SORTIE_MISSION_FLAG"]
 34 [-]: GETUPVAL  R11 U4       ; R11 := U4
 35 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["SYNDICATE_MISSION_FLAG"]
 36 [-]: GETUPVAL  R12 U4       ; R12 := U4
 37 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["ACTIVE_MISSION_FLAG"]
 38 [-]: GETUPVAL  R13 U4       ; R13 := U4
 39 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["KUVA_TOWER_MISSION_FLAG"]
 40 [-]: SETLIST   R0 13 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 13
 41 [-]: CLOSURE   R1 0         ; R1 := closure(Function #24.1)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETGLOBAL R2 K14       ; R2 := gMatchingService
 44 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2["0x40DFB818"]
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: MOVE      R3 R0        ; R3 := R0
 47 [-]: TEST      R3 0         ; if not R3 then PC := 65
 48 [-]: JMP       65           ; PC := 65
 49 [-]: GETGLOBAL R3 K16       ; R3 := 0x93B1256B
 50 [-]: LOADK     R4 K17       ; R4 := "Aggregation Results:"
 51 [-]: CALL      R3 2 1       ; R3(R4)
 52 [-]: GETGLOBAL R3 K18       ; R3 := 0xECFDD17
 53 [-]: MOVE      R4 R2        ; R4 := R2
 54 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 55 [-]: JMP       63           ; PC := 63
 56 [-]: GETGLOBAL R8 K16       ; R8 := 0x93B1256B
 57 [-]: LOADK     R9 K19       ; R9 := "gameModeId="
 58 [-]: GETTABLE  R10 R7 K20   ; R10 := R7["gameModeId"]
 59 [-]: LOADK     R11 K21      ; R11 := ", count="
 60 [-]: GETTABLE  R12 R7 K22   ; R12 := R7["count"]
 61 [-]: CONCAT    R9 R9 R12    ; R9 := R9 .. R10 .. R11 .. R12
 62 [-]: CALL      R8 2 1       ; R8(R9)
 63 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 56; R5 := R6 end
 64 [-]: JMP       56           ; PC := 56
 65 [-]: LOADNIL   R8 R12       ; R8 := R9 := R10 := R11 := R12 := nil
 66 [-]: GETGLOBAL R13 K18      ; R13 := 0xECFDD17
 67 [-]: GETUPVAL  R14 U5       ; R14 := U5
 68 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 69 [-]: JMP       253          ; PC := 253
 70 [-]: GETGLOBAL R18 K23      ; R18 := 0x1BF588C6
 71 [-]: LOADK     R19 K24      ; R19 := 0
 72 [-]: CALL      R18 2 1      ; R18(R19)
 73 [-]: GETTABLE  R18 R17 K25  ; R18 := R17["nodeType"]
 74 [-]: GETGLOBAL R19 K26      ; R19 := Lotus_Game
 75 [-]: GETTABLE  R19 R19 K27  ; R19 := R19["NT_EMPTY"]
 76 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 253
 77 [-]: JMP       253          ; PC := 253
 78 [-]: GETTABLE  R18 R17 K28  ; R18 := R17["region"]
 79 [-]: ADD       R8 R18 K29   ; R8 := R18 + 1
 80 [-]: GETGLOBAL R18 K30      ; R18 := 0x9FAED6BC
 81 [-]: GETTABLE  R19 R17 K31  ; R19 := R17["name"]
 82 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 83 [-]: MOVE      R9 R18       ; R9 := R18
 84 [-]: GETUPVAL  R18 U4       ; R18 := U4
 85 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["0xE4E5932F"]
 86 [-]: MOVE      R19 R9       ; R19 := R9
 87 [-]: GETUPVAL  R20 U3       ; R20 := U3
 88 [-]: MOVE      R21 R17      ; R21 := R17
 89 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 90 [-]: MOVE      R11 R18      ; R11 := R18
 91 [-]: GETUPVAL  R18 U1       ; R18 := U1
 92 [-]: SETTABLE  R18 R11 K24  ; R18[R11] := 0
 93 [-]: GETGLOBAL R18 K18      ; R18 := 0xECFDD17
 94 [-]: MOVE      R19 R2       ; R19 := R2
 95 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
 96 [-]: JMP       143          ; PC := 143
 97 [-]: GETGLOBAL R23 K33      ; R23 := _G
 98 [-]: GETTABLE  R23 R23 K34  ; R23 := R23["StalkerMode"]
 99 [-]: TEST      R23 0        ; if not R23 then PC := 131
100 [-]: JMP       131          ; PC := 131
101 [-]: GETTABLE  R23 R22 K20  ; R23 := R22["gameModeId"]
102 [-]: EQ        1 R23 R11    ; if R23 == R11 then PC := 110
103 [-]: JMP       110          ; PC := 110
104 [-]: GETTABLE  R23 R22 K20  ; R23 := R22["gameModeId"]
105 [-]: GETUPVAL  R24 U4       ; R24 := U4
106 [-]: GETTABLE  R24 R24 K9   ; R24 := R24["BADLAND_MISSION_FLAG"]
107 [-]: ADD       R24 R11 R24  ; R24 := R11 + R24
108 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 143
109 [-]: JMP       143          ; PC := 143
110 [-]: GETTABLE  R23 R17 K25  ; R23 := R17["nodeType"]
111 [-]: GETGLOBAL R24 K26      ; R24 := Lotus_Game
112 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["NT_MISSION"]
113 [-]: EQ        1 R23 R24    ; if R23 == R24 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETTABLE  R23 R17 K25  ; R23 := R17["nodeType"]
116 [-]: GETGLOBAL R24 K26      ; R24 := Lotus_Game
117 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["NT_CLAN"]
118 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 143
119 [-]: JMP       143          ; PC := 143
120 [-]: GETTABLE  R23 R17 K37  ; R23 := R17["mission"]
121 [-]: GETTABLE  R23 R23 K38  ; R23 := R23["archwingRequired"]
122 [-]: TEST      R23 1        ; if R23 then PC := 143
123 [-]: JMP       143          ; PC := 143
124 [-]: GETUPVAL  R23 U1       ; R23 := U1
125 [-]: GETUPVAL  R24 U1       ; R24 := U1
126 [-]: GETTABLE  R24 R24 R11  ; R24 := R24[R11]
127 [-]: GETTABLE  R25 R22 K22  ; R25 := R22["count"]
128 [-]: ADD       R24 R24 R25  ; R24 := R24 + R25
129 [-]: SETTABLE  R23 R11 R24  ; R23[R11] := R24
130 [-]: JMP       143          ; PC := 143
131 [-]: MOVE      R23 R1       ; R23 := R1
132 [-]: GETTABLE  R24 R22 K20  ; R24 := R22["gameModeId"]
133 [-]: MOVE      R25 R11      ; R25 := R11
134 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
135 [-]: TEST      R23 0        ; if not R23 then PC := 143
136 [-]: JMP       143          ; PC := 143
137 [-]: GETUPVAL  R23 U1       ; R23 := U1
138 [-]: GETUPVAL  R24 U1       ; R24 := U1
139 [-]: GETTABLE  R24 R24 R11  ; R24 := R24[R11]
140 [-]: GETTABLE  R25 R22 K22  ; R25 := R22["count"]
141 [-]: ADD       R24 R24 R25  ; R24 := R24 + R25
142 [-]: SETTABLE  R23 R11 R24  ; R23[R11] := R24
143 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 97; R20 := R21 end
144 [-]: JMP       97           ; PC := 97
145 [-]: GETUPVAL  R23 U0       ; R23 := U0
146 [-]: GETTABLE  R23 R23 R8   ; R23 := R23[R8]
147 [-]: EQ        0 R23 K39    ; if R23 ~= nil then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: GETUPVAL  R23 U0       ; R23 := U0
150 [-]: SETTABLE  R23 R8 K24   ; R23[R8] := 0
151 [-]: GETUPVAL  R23 U1       ; R23 := U1
152 [-]: GETTABLE  R23 R23 R11  ; R23 := R23[R11]
153 [-]: EQ        1 R23 K39    ; if R23 == nil then PC := 162
154 [-]: JMP       162          ; PC := 162
155 [-]: GETUPVAL  R23 U0       ; R23 := U0
156 [-]: GETUPVAL  R24 U0       ; R24 := U0
157 [-]: GETTABLE  R24 R24 R8   ; R24 := R24[R8]
158 [-]: GETUPVAL  R25 U1       ; R25 := U1
159 [-]: GETTABLE  R25 R25 R11  ; R25 := R25[R11]
160 [-]: ADD       R24 R24 R25  ; R24 := R24 + R25
161 [-]: SETTABLE  R23 R8 R24   ; R23[R8] := R24
162 [-]: GETGLOBAL R23 K33      ; R23 := _G
163 [-]: GETTABLE  R23 R23 K34  ; R23 := R23["StalkerMode"]
164 [-]: TEST      R23 0        ; if not R23 then PC := 253
165 [-]: JMP       253          ; PC := 253
166 [-]: GETUPVAL  R23 U6       ; R23 := U6
167 [-]: TEST      R23 0        ; if not R23 then PC := 201
168 [-]: JMP       201          ; PC := 201
169 [-]: EQ        0 R16 K29    ; if R16 ~= 1 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R23 K16      ; R23 := 0x93B1256B
172 [-]: LOADK     R24 K40      ; R24 := "Total nodes with open squads: "
173 [-]: LEN       R25 R2       ; R25 := # R2
174 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
175 [-]: CALL      R23 2 1      ; R23(R24)
176 [-]: GETUPVAL  R23 U1       ; R23 := U1
177 [-]: GETTABLE  R23 R23 R11  ; R23 := R23[R11]
178 [-]: LT        0 K24 R23    ; if 0 >= R23 then PC := 201
179 [-]: JMP       201          ; PC := 201
180 [-]: GETGLOBAL R23 K16      ; R23 := 0x93B1256B
181 [-]: GETGLOBAL R24 K30      ; R24 := 0x9FAED6BC
182 [-]: GETTABLE  R25 R17 K31  ; R25 := R17["name"]
183 [-]: CALL      R24 2 2      ; R24 := R24(R25)
184 [-]: LOADK     R25 K41      ; R25 := " ("
185 [-]: GETGLOBAL R26 K42      ; R26 := 0xE6DC43B0
186 [-]: GETGLOBAL R27 K30      ; R27 := 0x9FAED6BC
187 [-]: GETTABLE  R28 R17 K43  ; R28 := R17["locTag"]
188 [-]: CALL      R27 2 2      ; R27 := R27(R28)
189 [-]: MOVE      R28 R0       ; R28 := R0
190 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
191 [-]: LOADK     R27 K44      ; R27 := ")"
192 [-]: LOADK     R28 K45      ; R28 := ", matchmakingName="
193 [-]: MOVE      R29 R9       ; R29 := R9
194 [-]: LOADK     R30 K46      ; R30 := ", matchMakingId="
195 [-]: MOVE      R31 R11      ; R31 := R11
196 [-]: LOADK     R32 K47      ; R32 := ", sessionsFound="
197 [-]: GETUPVAL  R33 U1       ; R33 := U1
198 [-]: GETTABLE  R33 R33 R11  ; R33 := R33[R11]
199 [-]: CONCAT    R24 R24 R33  ; R24 := R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33
200 [-]: CALL      R23 2 1      ; R23(R24)
201 [-]: GETGLOBAL R23 K0       ; R23 := 0x400E7765
202 [-]: GETGLOBAL R24 K48      ; R24 := mMovie
203 [-]: CALL      R23 2 2      ; R23 := R23(R24)
204 [-]: TEST      R23 1        ; if R23 then PC := 253
205 [-]: JMP       253          ; PC := 253
206 [-]: GETUPVAL  R23 U7       ; R23 := U7
207 [-]: TEST      R23 0        ; if not R23 then PC := 253
208 [-]: JMP       253          ; PC := 253
209 [-]: GETUPVAL  R23 U7       ; R23 := U7
210 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
211 [-]: TEST      R23 0        ; if not R23 then PC := 253
212 [-]: JMP       253          ; PC := 253
213 [-]: GETGLOBAL R23 K48      ; R23 := mMovie
214 [-]: SELF      R23 R23 K49  ; R24 := R23; R23 := R23["0x1C19D966"]
215 [-]: GETUPVAL  R25 U7       ; R25 := U7
216 [-]: GETTABLE  R25 R25 R9   ; R25 := R25[R9]
217 [-]: GETTABLE  R25 R25 K50  ; R25 := R25["clipName"]
218 [-]: LOADK     R26 K51      ; R26 := "_visible"
219 [-]: GETUPVAL  R27 U1       ; R27 := U1
220 [-]: TEST      R27 0        ; if not R27 then PC := 232
221 [-]: JMP       232          ; PC := 232
222 [-]: GETUPVAL  R27 U1       ; R27 := U1
223 [-]: GETTABLE  R27 R27 R11  ; R27 := R27[R11]
224 [-]: TEST      R27 0        ; if not R27 then PC := 232
225 [-]: JMP       232          ; PC := 232
226 [-]: GETUPVAL  R27 U1       ; R27 := U1
227 [-]: GETTABLE  R27 R27 R11  ; R27 := R27[R11]
228 [-]: LT        1 K24 R27    ; if 0 < R27 then PC := 231
229 [-]: JMP       231          ; PC := 231
230 [-]: MOVE      R27 R0       ; R27 := R0
231 [-]: MOVE      R27 R1       ; R27 := R1
232 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
233 [-]: GETGLOBAL R23 K48      ; R23 := mMovie
234 [-]: SELF      R23 R23 K52  ; R24 := R23; R23 := R23["0xD6A79FE9"]
235 [-]: GETUPVAL  R25 U8       ; R25 := U8
236 [-]: GETTABLE  R25 R25 R8   ; R25 := R25[R8]
237 [-]: LOADK     R26 K53      ; R26 := ".Name"
238 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
239 [-]: LOADK     R26 K54      ; R26 := "text"
240 [-]: GETGLOBAL R27 K42      ; R27 := 0xE6DC43B0
241 [-]: GETGLOBAL R28 K30      ; R28 := 0x9FAED6BC
242 [-]: GETUPVAL  R29 U9       ; R29 := U9
243 [-]: GETTABLE  R29 R29 R8   ; R29 := R29[R8]
244 [-]: GETTABLE  R29 R29 K31  ; R29 := R29["name"]
245 [-]: CALL      R28 2 2      ; R28 := R28(R29)
246 [-]: MOVE      R29 R0       ; R29 := R0
247 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
248 [-]: LOADK     R28 K55      ; R28 := " "
249 [-]: GETUPVAL  R29 U0       ; R29 := U0
250 [-]: GETTABLE  R29 R29 R8   ; R29 := R29[R8]
251 [-]: CONCAT    R27 R27 R29  ; R27 := R27 .. R28 .. R29
252 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
253 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 70; R15 := R16 end
254 [-]: JMP       70           ; PC := 70
255 [-]: RETURN    R0 1         ; return 


; Function #24.1:
;
; Name:            
; Defined at line: 742
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: RETURN    R2 2         ; return R2
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0xECFDD17
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  8 [-]: JMP       14           ; PC := 14
  9 [-]: ADD       R7 R1 R6     ; R7 := R1 + R6
 10 [-]: EQ        0 R0 R7      ; if R0 ~= R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 9; R4 := R5 end
 15 [-]: JMP       9            ; PC := 9
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: RETURN    R7 2         ; return R7
 18 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 819
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == "0x1" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R1 K1        ; R1 := -1
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x1C19D966"]
 10 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 11 [-]: LOADK     R4 K5        ; R4 := "_alpha"
 12 [-]: LOADK     R5 K6        ; R5 := 0
 13 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x52E17A90
 16 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 17 [-]: LOADK     R3 K4        ; R3 := "RegionInfo"
 18 [-]: GETGLOBAL R4 K8        ; R4 := UISys
 19 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["FlashInstance_SMOOTH_STEP"]
 20 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 21 [-]: LOADK     R6 K5        ; R6 := "_alpha"
 22 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 23 [-]: NEWTABLE  R6 1 0       ; R6 := {}
 24 [-]: LOADK     R7 K6        ; R7 := 0
 25 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
 26 [-]: LOADK     R7 K10       ; R7 := 0.20000000298023
 27 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 28 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 835
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x7E1F26D7"]
  3 [-]: LOADK     R2 K2        ; R2 := "InfluenceMap"
  4 [-]: GETGLOBAL R3 K3        ; R3 := influenceMapMaterial
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  8 [-]: SETTABLE  R0 K4 R1     ; R0["INFLUENCE_MAP"] := R1
  9 [-]: LOADK     R0 K5        ; R0 := 0
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["MAX_SHADER_INFLUENCES"]
 12 [-]: SUB       R1 R1 K7     ; R1 := R1 - 1
 13 [-]: LOADK     R2 K7        ; R2 := 1
 14 [-]: FORPREP   R0 25        ; R0 -= R2; PC := 25
 15 [-]: GETGLOBAL R4 K8        ; R4 := table
 16 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xE6450C9D"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["INFLUENCE_MAP"]
 19 [-]: GETGLOBAL R6 K10       ; R6 := 0xEC274B1A
 20 [-]: LOADK     R7 K11       ; R7 := "Influence"
 21 [-]: MOVE      R8 R3        ; R8 := R3
 22 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 23 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 24 [-]: CALL      R4 0 1       ; R4(R5,...)
 25 [-]: FORLOOP   R0 15        ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
 26 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 27 [-]: MOVE      R4 R2        ; R4 := R2
 28 [-]: GETGLOBAL R4 K12       ; R4 := gGameData
 29 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4["0x17358D95"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4["0xB3F0027"]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 58
 34 [-]: JMP       58           ; PC := 58
 35 [-]: GETTABLE  R5 R4 K15    ; R5 := R4["mInfluenceNodes"]
 36 [-]: LOADK     R6 K7        ; R6 := 1
 37 [-]: LEN       R7 R5        ; R7 := # R5
 38 [-]: LOADK     R8 K7        ; R8 := 1
 39 [-]: FORPREP   R6 57        ; R6 -= R8; PC := 57
 40 [-]: GETGLOBAL R10 K16      ; R10 := 0x93034B55
 41 [-]: LOADK     R11 K17      ; R11 := 0.5
 42 [-]: LOADK     R12 K18      ; R12 := 1.2000000476837
 43 [-]: GETTABLE  R13 R5 R9    ; R13 := R5[R9]
 44 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mInfluence"]
 45 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 46 [-]: GETGLOBAL R11 K8       ; R11 := table
 47 [-]: GETTABLE  R11 R11 K9   ; R11 := R11["0xE6450C9D"]
 48 [-]: GETUPVAL  R12 U2       ; R12 := U2
 49 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 50 [-]: GETTABLE  R14 R5 R9    ; R14 := R5[R9]
 51 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mNode"]
 52 [-]: SELF      R14 R14 K22  ; R15 := R14; R14 := R14["0x5EC7A3D2"]
 53 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 54 [-]: SETTABLE  R13 K20 R14  ; R13["Node"] := R14
 55 [-]: SETTABLE  R13 K11 R10  ; R13["Influence"] := R10
 56 [-]: CALL      R11 3 1      ; R11(R12,R13)
 57 [-]: FORLOOP   R6 40        ; R6 += R8; if R6 <= R7 then begin PC := 40; R9 := R6 end
 58 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 59 [-]: GETGLOBAL R12 K0       ; R12 := mMovie
 60 [-]: SELF      R12 R12 K23  ; R13 := R12; R12 := R12["0x5DB0BD4"]
 61 [-]: LOADK     R14 K24      ; R14 := "<KUVA_LICH>"
 62 [-]: MOVE      R15 R1       ; R15 := R1
 63 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 64 [-]: LOADK     R13 K7       ; R13 := 1
 65 [-]: GETUPVAL  R14 U2       ; R14 := U2
 66 [-]: LEN       R14 R14      ; R14 := # R14
 67 [-]: LOADK     R15 K7       ; R15 := 1
 68 [-]: FORPREP   R13 121      ; R13 -= R15; PC := 121
 69 [-]: GETUPVAL  R17 U3       ; R17 := U3
 70 [-]: GETUPVAL  R18 U2       ; R18 := U2
 71 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 72 [-]: GETTABLE  R18 R18 K20  ; R18 := R18["Node"]
 73 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
 74 [-]: GETUPVAL  R18 U2       ; R18 := U2
 75 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
 76 [-]: SETTABLE  R18 K25 R17  ; R18["NodeData"] := R17
 77 [-]: MOVE      R18 R12      ; R18 := R12
 78 [-]: GETTABLE  R19 R17 K26  ; R19 := R17["locName"]
 79 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 80 [-]: SETTABLE  R17 K26 R18  ; R17["locName"] := R18
 81 [-]: GETTABLE  R18 R17 K27  ; R18 := R17["radialSector"]
 82 [-]: GETTABLE  R19 R18 K28  ; R19 := R18["region"]
 83 [-]: ADD       R19 R19 K7   ; R19 := R19 + 1
 84 [-]: GETUPVAL  R20 U4       ; R20 := U4
 85 [-]: GETTABLE  R20 R20 K29  ; R20 := R20["0xBFFBFE5E"]
 86 [-]: MOVE      R21 R11      ; R21 := R11
 87 [-]: MOVE      R22 R19      ; R22 := R19
 88 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 89 [-]: TEST      R20 1        ; if R20 then PC := 121
 90 [-]: JMP       121          ; PC := 121
 91 [-]: GETGLOBAL R20 K8       ; R20 := table
 92 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["0xE6450C9D"]
 93 [-]: MOVE      R21 R11      ; R21 := R11
 94 [-]: MOVE      R22 R19      ; R22 := R19
 95 [-]: CALL      R20 3 1      ; R20(R21,R22)
 96 [-]: GETUPVAL  R20 U5       ; R20 := U5
 97 [-]: GETTABLE  R20 R20 R19  ; R20 := R20[R19]
 98 [-]: MOVE      R21 R12      ; R21 := R12
 99 [-]: GETGLOBAL R22 K31      ; R22 := string
100 [-]: GETTABLE  R22 R22 K32  ; R22 := R22["0x639C642A"]
101 [-]: GETGLOBAL R23 K33      ; R23 := 0xE6DC43B0
102 [-]: GETGLOBAL R24 K34      ; R24 := 0x9FAED6BC
103 [-]: GETUPVAL  R25 U5       ; R25 := U5
104 [-]: GETTABLE  R25 R25 R19  ; R25 := R25[R19]
105 [-]: GETTABLE  R25 R25 K30  ; R25 := R25["name"]
106 [-]: CALL      R24 2 2      ; R24 := R24(R25)
107 [-]: MOVE      R25 R0       ; R25 := R0
108 [-]: CALL      R23 3 0      ; R23,... := R23(R24,R25)
109 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
110 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
111 [-]: SETTABLE  R20 K30 R21  ; R20["name"] := R21
112 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
113 [-]: SELF      R21 R21 K35  ; R22 := R21; R21 := R21["0xD6A79FE9"]
114 [-]: GETUPVAL  R23 U6       ; R23 := U6
115 [-]: GETTABLE  R23 R23 R19  ; R23 := R23[R19]
116 [-]: LOADK     R24 K36      ; R24 := ".Name"
117 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
118 [-]: LOADK     R24 K37      ; R24 := "text"
119 [-]: GETTABLE  R25 R20 K30  ; R25 := R20["name"]
120 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
121 [-]: FORLOOP   R13 69       ; R13 += R15; if R13 <= R14 then begin PC := 69; R16 := R13 end
122 [-]: GETGLOBAL R21 K0       ; R21 := mMovie
123 [-]: SELF      R21 R21 K38  ; R22 := R21; R21 := R21["0x1C19D966"]
124 [-]: LOADK     R23 K2       ; R23 := "InfluenceMap"
125 [-]: LOADK     R24 K39      ; R24 := "_alpha"
126 [-]: GETUPVAL  R25 U4       ; R25 := U4
127 [-]: GETTABLE  R25 R25 K40  ; R25 := R25["0xF81722A2"]
128 [-]: GETUPVAL  R26 U2       ; R26 := U2
129 [-]: LEN       R26 R26      ; R26 := # R26
130 [-]: LT        1 K5 R26     ; if 0 < R26 then PC := 133
131 [-]: JMP       133          ; PC := 133
132 [-]: MOVE      R26 R0       ; R26 := R0
133 [-]: MOVE      R26 R1       ; R26 := R1
134 [-]: LOADK     R27 K41      ; R27 := 100
135 [-]: LOADK     R28 K5       ; R28 := 0
136 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
137 [-]: CALL      R21 0 1      ; R21(R22,...)
138 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 874
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  39

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xEA569929"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  5 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  6 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0xF3E132E0"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
  9 [-]: MUL       R2 R2 K3     ; R2 := R2 * 0.5
 10 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0x68998E7D"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SUB       R3 R1 R3     ; R3 := R1 - R3
 14 [-]: MUL       R3 R3 K3     ; R3 := R3 * 0.5
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x994A1A7
 16 [-]: GETUPVAL  R5 U1        ; R5 := U1
 17 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["MIN_ZOOM"]
 18 [-]: GETUPVAL  R6 U1        ; R6 := U1
 19 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MAX_ZOOM"]
 20 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x6374FD98
 22 [-]: GETUPVAL  R6 U2        ; R6 := U2
 23 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mCurVal"]
 24 [-]: GETTABLE  R7 R4 K10    ; R7 := R4["minValue"]
 25 [-]: GETTABLE  R8 R4 K11    ; R8 := R4["maxValue"]
 26 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 27 [-]: SELF      R6 R4 K12    ; R7 := R4; R6 := R4["0x3B43F25"]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: MOVE      R5 R6        ; R5 := R6
 31 [-]: MUL       R5 R5 R5     ; R5 := R5 * R5
 32 [-]: LOADK     R6 K13       ; R6 := 0.40000000596046
 33 [-]: LOADK     R7 K14       ; R7 := 0.93999999761581
 34 [-]: MOVE      R8 R5        ; R8 := R5
 35 [-]: LE        0 R8 R6      ; if R8 > R6 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: JMP       50           ; PC := 50
 39 [-]: LE        0 R7 R8      ; if R7 > R8 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: MOVE      R8 R7        ; R8 := R7
 42 [-]: JMP       50           ; PC := 50
 43 [-]: SUB       R9 R8 R6     ; R9 := R8 - R6
 44 [-]: SUB       R10 R7 R6    ; R10 := R7 - R6
 45 [-]: DIV       R8 R9 R10    ; R8 := R9 / R10
 46 [-]: MUL       R9 R8 R8     ; R9 := R8 * R8
 47 [-]: MUL       R10 K15 R8   ; R10 := 2 * R8
 48 [-]: SUB       R10 K16 R10  ; R10 := 3 - R10
 49 [-]: MUL       R8 R9 R10    ; R8 := R9 * R10
 50 [-]: MUL       R9 K17 R8    ; R9 := 0.20000000298023 * R8
 51 [-]: ADD       R9 K3 R9     ; R9 := 0.5 + R9
 52 [-]: LOADNIL   R10 R12      ; R10 := R11 := R12 := nil
 53 [-]: LOADK     R13 K18      ; R13 := 1
 54 [-]: LOADK     R14 K19      ; R14 := 0
 55 [-]: LOADK     R15 K18      ; R15 := 1
 56 [-]: LOADK     R16 K19      ; R16 := 0
 57 [-]: DIV       R17 R1 R0    ; R17 := R1 / R0
 58 [-]: NEWTABLE  R18 0 0      ; R18 := {}
 59 [-]: LOADK     R19 K18      ; R19 := 1
 60 [-]: GETUPVAL  R20 U3       ; R20 := U3
 61 [-]: LEN       R20 R20      ; R20 := # R20
 62 [-]: LOADK     R21 K18      ; R21 := 1
 63 [-]: FORPREP   R19 149      ; R19 -= R21; PC := 149
 64 [-]: LOADK     R10 K19      ; R10 := 0
 65 [-]: LOADK     R11 K19      ; R11 := 0
 66 [-]: LOADK     R12 K19      ; R12 := 0
 67 [-]: GETUPVAL  R23 U3       ; R23 := U3
 68 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 69 [-]: EQ        1 R23 K20    ; if R23 == nil then PC := 149
 70 [-]: JMP       149          ; PC := 149
 71 [-]: GETGLOBAL R23 K21      ; R23 := 0x400E7765
 72 [-]: GETUPVAL  R24 U3       ; R24 := U3
 73 [-]: GETTABLE  R24 R24 R22  ; R24 := R24[R22]
 74 [-]: GETTABLE  R24 R24 K22  ; R24 := R24["NodeData"]
 75 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 76 [-]: TEST      R23 1        ; if R23 then PC := 149
 77 [-]: JMP       149          ; PC := 149
 78 [-]: GETUPVAL  R23 U3       ; R23 := U3
 79 [-]: GETTABLE  R23 R23 R22  ; R23 := R23[R22]
 80 [-]: GETTABLE  R23 R23 K23  ; R23 := R23["Influence"]
 81 [-]: MUL       R12 R23 R5   ; R12 := R23 * R5
 82 [-]: GETUPVAL  R23 U0       ; R23 := U0
 83 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["0x69B983D"]
 84 [-]: GETGLOBAL R24 K1       ; R24 := mMovie
 85 [-]: GETUPVAL  R25 U3       ; R25 := U3
 86 [-]: GETTABLE  R25 R25 R22  ; R25 := R25[R22]
 87 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["NodeData"]
 88 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["clipName"]
 89 [-]: CALL      R23 3 3      ; R23,R24 := R23(R24,R25)
 90 [-]: MOVE      R11 R24      ; R11 := R24
 91 [-]: MOVE      R10 R23      ; R10 := R23
 92 [-]: ADD       R23 R10 R2   ; R23 := R10 + R2
 93 [-]: DIV       R10 R23 R0   ; R10 := R23 / R0
 94 [-]: ADD       R23 R11 R3   ; R23 := R11 + R3
 95 [-]: DIV       R11 R23 R1   ; R11 := R23 / R1
 96 [-]: GETGLOBAL R23 K26      ; R23 := math
 97 [-]: GETTABLE  R23 R23 K27  ; R23 := R23["0x8B011038"]
 98 [-]: LOADK     R24 K28      ; R24 := 0.0099999997764826
 99 [-]: MUL       R25 R12 K29  ; R25 := R12 * 0.10000000149012
100 [-]: MUL       R25 R25 R9   ; R25 := R25 * R9
101 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
102 [-]: UNM       R24 R23      ; R24 := - R23
103 [-]: LE        0 R24 R10    ; if R24 > R10 then PC := 149
104 [-]: JMP       149          ; PC := 149
105 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
106 [-]: LE        0 R10 R24    ; if R10 > R24 then PC := 149
107 [-]: JMP       149          ; PC := 149
108 [-]: UNM       R24 R23      ; R24 := - R23
109 [-]: LE        0 R24 R11    ; if R24 > R11 then PC := 149
110 [-]: JMP       149          ; PC := 149
111 [-]: ADD       R24 K18 R23  ; R24 := 1 + R23
112 [-]: LE        0 R11 R24    ; if R11 > R24 then PC := 149
113 [-]: JMP       149          ; PC := 149
114 [-]: GETGLOBAL R24 K30      ; R24 := table
115 [-]: GETTABLE  R24 R24 K31  ; R24 := R24["0xE6450C9D"]
116 [-]: MOVE      R25 R18      ; R25 := R18
117 [-]: GETGLOBAL R26 K32      ; R26 := 0x221C9700
118 [-]: MOVE      R27 R10      ; R27 := R10
119 [-]: MOVE      R28 R11      ; R28 := R11
120 [-]: MOVE      R29 R23      ; R29 := R23
121 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
122 [-]: CALL      R24 0 1      ; R24(R25,...)
123 [-]: GETGLOBAL R24 K26      ; R24 := math
124 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
125 [-]: MOVE      R25 R13      ; R25 := R13
126 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
127 [-]: SUB       R26 R10 R26  ; R26 := R10 - R26
128 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
129 [-]: MOVE      R13 R24      ; R13 := R24
130 [-]: GETGLOBAL R24 K26      ; R24 := math
131 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
132 [-]: MOVE      R25 R14      ; R25 := R14
133 [-]: MUL       R26 R23 R17  ; R26 := R23 * R17
134 [-]: ADD       R26 R10 R26  ; R26 := R10 + R26
135 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
136 [-]: MOVE      R14 R24      ; R14 := R24
137 [-]: GETGLOBAL R24 K26      ; R24 := math
138 [-]: GETTABLE  R24 R24 K33  ; R24 := R24["0x65F9712A"]
139 [-]: MOVE      R25 R15      ; R25 := R15
140 [-]: SUB       R26 R11 R23  ; R26 := R11 - R23
141 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
142 [-]: MOVE      R15 R24      ; R15 := R24
143 [-]: GETGLOBAL R24 K26      ; R24 := math
144 [-]: GETTABLE  R24 R24 K27  ; R24 := R24["0x8B011038"]
145 [-]: MOVE      R25 R16      ; R25 := R16
146 [-]: ADD       R26 R11 R23  ; R26 := R11 + R23
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R16 R24      ; R16 := R24
149 [-]: FORLOOP   R19 64       ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
150 [-]: LEN       R24 R18      ; R24 := # R18
151 [-]: GETUPVAL  R25 U4       ; R25 := U4
152 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["MAX_SHADER_INFLUENCES"]
153 [-]: LT        0 R25 R24    ; if R25 >= R24 then PC := 161
154 [-]: JMP       161          ; PC := 161
155 [-]: GETGLOBAL R24 K35      ; R24 := 0xC1209670
156 [-]: MOVE      R25 R18      ; R25 := R18
157 [-]: GETUPVAL  R26 U4       ; R26 := U4
158 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
159 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
160 [-]: MOVE      R18 R24      ; R18 := R24
161 [-]: LOADK     R24 K18      ; R24 := 1
162 [-]: GETGLOBAL R25 K26      ; R25 := math
163 [-]: GETTABLE  R25 R25 K33  ; R25 := R25["0x65F9712A"]
164 [-]: GETUPVAL  R26 U4       ; R26 := U4
165 [-]: GETTABLE  R26 R26 K34  ; R26 := R26["MAX_SHADER_INFLUENCES"]
166 [-]: LEN       R27 R18      ; R27 := # R18
167 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
168 [-]: LOADK     R26 K18      ; R26 := 1
169 [-]: FORPREP   R24 183      ; R24 -= R26; PC := 183
170 [-]: GETGLOBAL R28 K36      ; R28 := influenceMapMaterial
171 [-]: SELF      R28 R28 K37  ; R29 := R28; R28 := R28["0x94FB2E1A"]
172 [-]: GETUPVAL  R30 U5       ; R30 := U5
173 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["INFLUENCE_MAP"]
174 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
175 [-]: GETTABLE  R31 R18 R27  ; R31 := R18[R27]
176 [-]: GETTABLE  R31 R31 K39  ; R31 := R31["x"]
177 [-]: GETTABLE  R32 R18 R27  ; R32 := R18[R27]
178 [-]: GETTABLE  R32 R32 K40  ; R32 := R32["y"]
179 [-]: LOADK     R33 K19      ; R33 := 0
180 [-]: GETTABLE  R34 R18 R27  ; R34 := R18[R27]
181 [-]: GETTABLE  R34 R34 K41  ; R34 := R34["z"]
182 [-]: CALL      R28 7 1      ; R28(R29,R30,R31,R32,R33,R34)
183 [-]: FORLOOP   R24 170      ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
184 [-]: LEN       R28 R18      ; R28 := # R18
185 [-]: ADD       R28 R28 K18  ; R28 := R28 + 1
186 [-]: GETUPVAL  R29 U4       ; R29 := U4
187 [-]: GETTABLE  R29 R29 K34  ; R29 := R29["MAX_SHADER_INFLUENCES"]
188 [-]: LOADK     R30 K18      ; R30 := 1
189 [-]: FORPREP   R28 205      ; R28 -= R30; PC := 205
190 [-]: GETUPVAL  R32 U5       ; R32 := U5
191 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["INFLUENCE_MAP"]
192 [-]: GETTABLE  R32 R32 R31  ; R32 := R32[R31]
193 [-]: TEST      R32 0        ; if not R32 then PC := 205
194 [-]: JMP       205          ; PC := 205
195 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
196 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
197 [-]: GETUPVAL  R34 U5       ; R34 := U5
198 [-]: GETTABLE  R34 R34 K38  ; R34 := R34["INFLUENCE_MAP"]
199 [-]: GETTABLE  R34 R34 R31  ; R34 := R34[R31]
200 [-]: LOADK     R35 K19      ; R35 := 0
201 [-]: LOADK     R36 K19      ; R36 := 0
202 [-]: LOADK     R37 K19      ; R37 := 0
203 [-]: LOADK     R38 K19      ; R38 := 0
204 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
205 [-]: FORLOOP   R28 190      ; R28 += R30; if R28 <= R29 then begin PC := 190; R31 := R28 end
206 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
207 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
208 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
209 [-]: LOADK     R35 K43      ; R35 := "ZoomValue_NumNodes"
210 [-]: CALL      R34 2 2      ; R34 := R34(R35)
211 [-]: MOVE      R35 R5       ; R35 := R5
212 [-]: LOADK     R36 K19      ; R36 := 0
213 [-]: LOADK     R37 K19      ; R37 := 0
214 [-]: LOADK     R38 K19      ; R38 := 0
215 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
216 [-]: GETGLOBAL R32 K36      ; R32 := influenceMapMaterial
217 [-]: SELF      R32 R32 K37  ; R33 := R32; R32 := R32["0x94FB2E1A"]
218 [-]: GETGLOBAL R34 K42      ; R34 := 0xEC274B1A
219 [-]: LOADK     R35 K44      ; R35 := "Bounds"
220 [-]: CALL      R34 2 2      ; R34 := R34(R35)
221 [-]: SUB       R35 R13 K45  ; R35 := R13 - 0.019999999552965
222 [-]: ADD       R36 R14 K45  ; R36 := R14 + 0.019999999552965
223 [-]: SUB       R37 R15 K45  ; R37 := R15 - 0.019999999552965
224 [-]: ADD       R38 R16 K45  ; R38 := R16 + 0.019999999552965
225 [-]: CALL      R32 7 1      ; R32(R33,R34,R35,R36,R37,R38)
226 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 950
; #Upvalues:       20
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  3 [-]: LOADK     R2 K2        ; R2 := "VoidTrader"
  4 [-]: LOADK     R3 K3        ; R3 := "_visible"
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
  9 [-]: LOADK     R2 K4        ; R2 := "Nodes.Node"
 10 [-]: LOADK     R3 K3        ; R3 := "_visible"
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 14 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 15 [-]: LOADK     R2 K5        ; R2 := "NodeNotification"
 16 [-]: LOADK     R3 K3        ; R3 := "_visible"
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 20 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 21 [-]: LOADK     R2 K6        ; R2 := "SubLabel"
 22 [-]: LOADK     R3 K3        ; R3 := "_visible"
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 25 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 26 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 27 [-]: LOADK     R2 K7        ; R2 := "NodeTransmission"
 28 [-]: LOADK     R3 K3        ; R3 := "_visible"
 29 [-]: MOVE      R4 R0        ; R4 := R0
 30 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 31 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 32 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 33 [-]: LOADK     R2 K8        ; R2 := "InfoTip.NodeTransmission"
 34 [-]: LOADK     R3 K9        ; R3 := "_alpha"
 35 [-]: LOADK     R4 K10       ; R4 := 0
 36 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 37 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 38 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 39 [-]: LOADK     R2 K11       ; R2 := "InfoTip"
 40 [-]: LOADK     R3 K9        ; R3 := "_alpha"
 41 [-]: LOADK     R4 K10       ; R4 := 0
 42 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 43 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
 44 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x1C19D966"]
 45 [-]: LOADK     R2 K12       ; R2 := "InfluenceMap"
 46 [-]: LOADK     R3 K9        ; R3 := "_alpha"
 47 [-]: LOADK     R4 K10       ; R4 := 0
 48 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 49 [-]: GETUPVAL  R0 U0        ; R0 := U0
 50 [-]: GETGLOBAL R1 K14       ; R1 := 0x400E7765
 51 [-]: GETGLOBAL R2 K15       ; R2 := _T
 52 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["InRailJackMode"]
 53 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 54 [-]: TEST      R1 1         ; if R1 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETGLOBAL R1 K15       ; R1 := _T
 57 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["InRailJackMode"]
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R1 R0        ; R1 := R0
 60 [-]: MOVE      R1 R1        ; R1 := R1
 61 [-]: SETTABLE  R0 K13 R1    ; R0["Active"] := R1
 62 [-]: GETGLOBAL R0 K17       ; R0 := gGameConfig
 63 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x89E53943"]
 64 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 65 [-]: TEST      R0 0         ; if not R0 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: GETUPVAL  R0 U1        ; R0 := U1
 68 [-]: GETTABLE  R0 R0 K19    ; R0 := R0["0xB11F032"]
 69 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
 70 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1["0x5DB0BD4"]
 71 [-]: LOADK     R3 K21       ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
 72 [-]: MOVE      R4 R0        ; R4 := R0
 73 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 74 [-]: CALL      R0 0 1       ; R0(R1,...)
 75 [-]: GETUPVAL  R0 U2        ; R0 := U2
 76 [-]: CALL      R0 1 1       ; R0()
 77 [-]: RETURN    R0 1         ; return 
 78 [-]: GETGLOBAL R0 K15       ; R0 := _T
 79 [-]: SETTABLE  R0 K22 K23   ; R0["RadialSolarMapOpen"] := "0x1"
 80 [-]: GETGLOBAL R0 K15       ; R0 := _T
 81 [-]: GETTABLE  R0 R0 K24    ; R0 := R0["HideHud"]
 82 [-]: EQ        0 R0 K25     ; if R0 ~= nil then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: GETGLOBAL R0 K15       ; R0 := _T
 85 [-]: SETTABLE  R0 K24 K26   ; R0["HideHud"] := 1
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETGLOBAL R0 K15       ; R0 := _T
 88 [-]: GETGLOBAL R1 K15       ; R1 := _T
 89 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["HideHud"]
 90 [-]: ADD       R1 R1 K26    ; R1 := R1 + 1
 91 [-]: SETTABLE  R0 K24 R1    ; R0["HideHud"] := R1
 92 [-]: GETGLOBAL R0 K15       ; R0 := _T
 93 [-]: GETTABLE  R0 R0 K27    ; R0 := R0["WareframeChallenge"]
 94 [-]: EQ        0 R0 K25     ; if R0 ~= nil then PC := 97
 95 [-]: JMP       97           ; PC := 97
 96 [-]: MOVE      R0 R0        ; R0 := R0
 97 [-]: MOVE      R0 R1        ; R0 := R1
 98 [-]: MOVE      R0 R3        ; R0 := R3
 99 [-]: MOVE      R0 R0        ; R0 := R0
100 [-]: MOVE      R0 R4        ; R0 := R4
101 [-]: GETUPVAL  R0 U5        ; R0 := U5
102 [-]: GETUPVAL  R1 U6        ; R1 := U6
103 [-]: GETTABLE  R1 R1 K29    ; R1 := R1["0xB6EF57A6"]
104 [-]: CALL      R1 1 2       ; R1 := R1()
105 [-]: SETTABLE  R0 K28 R1    ; R0["SplinePoints"] := R1
106 [-]: GETUPVAL  R0 U3        ; R0 := U3
107 [-]: TEST      R0 1         ; if R0 then PC := 136
108 [-]: JMP       136          ; PC := 136
109 [-]: GETGLOBAL R0 K14       ; R0 := 0x400E7765
110 [-]: GETGLOBAL R1 K30       ; R1 := gGameData
111 [-]: CALL      R0 2 2       ; R0 := R0(R1)
112 [-]: TEST      R0 1         ; if R0 then PC := 136
113 [-]: JMP       136          ; PC := 136
114 [-]: GETGLOBAL R0 K30       ; R0 := gGameData
115 [-]: SELF      R0 R0 K31    ; R1 := R0; R0 := R0["0x66024816"]
116 [-]: CALL      R0 2 2       ; R0 := R0(R1)
117 [-]: TEST      R0 1         ; if R0 then PC := 123
118 [-]: JMP       123          ; PC := 123
119 [-]: GETUPVAL  R0 U7        ; R0 := U7
120 [-]: GETGLOBAL R1 K15       ; R1 := _T
121 [-]: GETTABLE  R1 R1 K32    ; R1 := R1["REGION_ID_MOON"]
122 [-]: SETTABLE  R0 R1 K23    ; R0[R1] := "0x1"
123 [-]: GETGLOBAL R0 K30       ; R0 := gGameData
124 [-]: SELF      R0 R0 K33    ; R1 := R0; R0 := R0["0xD172216E"]
125 [-]: CALL      R0 2 2       ; R0 := R0(R1)
126 [-]: TEST      R0 1         ; if R0 then PC := 132
127 [-]: JMP       132          ; PC := 132
128 [-]: GETUPVAL  R0 U7        ; R0 := U7
129 [-]: GETGLOBAL R1 K15       ; R1 := _T
130 [-]: GETTABLE  R1 R1 K34    ; R1 := R1["REGION_ID_FORTRESS"]
131 [-]: SETTABLE  R0 R1 K23    ; R0[R1] := "0x1"
132 [-]: GETUPVAL  R0 U7        ; R0 := U7
133 [-]: GETGLOBAL R1 K15       ; R1 := _T
134 [-]: GETTABLE  R1 R1 K35    ; R1 := R1["REGION_ID_DARK_SECTOR"]
135 [-]: SETTABLE  R0 R1 K23    ; R0[R1] := "0x1"
136 [-]: GETUPVAL  R0 U7        ; R0 := U7
137 [-]: GETGLOBAL R1 K15       ; R1 := _T
138 [-]: GETTABLE  R1 R1 K36    ; R1 := R1["REGION_ID_DEEP_SPACE"]
139 [-]: GETUPVAL  R2 U0        ; R2 := U0
140 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["Active"]
141 [-]: MOVE      R2 R2        ; R2 := R2
142 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
143 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
144 [-]: SELF      R0 R0 K37    ; R1 := R0; R0 := R0["0xF017C404"]
145 [-]: LOADK     R2 K10       ; R2 := 0
146 [-]: CALL      R0 3 1       ; R0(R1,R2)
147 [-]: GETGLOBAL R0 K38       ; R0 := 0x329BDC44
148 [-]: LOADK     R1 K39       ; R1 := "Lotus.Interface.Libs.TimerMgr"
149 [-]: CALL      R0 2 2       ; R0 := R0(R1)
150 [-]: GETTABLE  R1 R0 K40    ; R1 := R0["0xC2A7FAC0"]
151 [-]: CALL      R1 1 2       ; R1 := R1()
152 [-]: MOVE      R1 R8        ; R1 := R8
153 [-]: GETGLOBAL R1 K38       ; R1 := 0x329BDC44
154 [-]: LOADK     R2 K41       ; R2 := "EE.Interface.AnchorMgr"
155 [-]: CALL      R1 2 2       ; R1 := R1(R2)
156 [-]: GETTABLE  R2 R1 K42    ; R2 := R1["0x46FF1A3C"]
157 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
158 [-]: CALL      R2 2 2       ; R2 := R2(R3)
159 [-]: MOVE      R2 R9        ; R2 := R9
160 [-]: GETUPVAL  R2 U9        ; R2 := U9
161 [-]: SELF      R2 R2 K43    ; R3 := R2; R2 := R2["0x99AA2516"]
162 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
163 [-]: LOADK     R5 K44       ; R5 := "RegionInfo"
164 [-]: NEWTABLE  R6 2 0       ; R6 := {}
165 [-]: GETUPVAL  R7 U9        ; R7 := U9
166 [-]: GETTABLE  R7 R7 K45    ; R7 := R7["ANCHOR_H_RIGHT"]
167 [-]: GETUPVAL  R8 U9        ; R8 := U9
168 [-]: GETTABLE  R8 R8 K46    ; R8 := R8["ANCHOR_V_TOP"]
169 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
170 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
171 [-]: GETUPVAL  R2 U10       ; R2 := U10
172 [-]: CALL      R2 1 1       ; R2()
173 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
174 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
175 [-]: LOADK     R4 K47       ; R4 := "Reticle"
176 [-]: LOADK     R5 K48       ; R5 := "_x"
177 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
178 [-]: SELF      R6 R6 K49    ; R7 := R6; R6 := R6["0xF3E132E0"]
179 [-]: CALL      R6 2 2       ; R6 := R6(R7)
180 [-]: MUL       R6 R6 K50    ; R6 := R6 * 0.5
181 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
182 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
183 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1C19D966"]
184 [-]: LOADK     R4 K47       ; R4 := "Reticle"
185 [-]: LOADK     R5 K51       ; R5 := "_y"
186 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
187 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x68998E7D"]
188 [-]: CALL      R6 2 2       ; R6 := R6(R7)
189 [-]: MUL       R6 R6 K50    ; R6 := R6 * 0.5
190 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
191 [-]: GETGLOBAL R2 K15       ; R2 := _T
192 [-]: GETUPVAL  R3 U11       ; R3 := U11
193 [-]: SETTABLE  R2 K53 R3    ; R2["RadialSolarMap_OnAggregateResults"] := R3
194 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
195 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2["0x5DB0BD4"]
196 [-]: LOADK     R4 K54       ; R4 := "<LOCKED>"
197 [-]: MOVE      R5 R1        ; R5 := R1
198 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
199 [-]: MOVE      R2 R12       ; R2 := R12
200 [-]: GETGLOBAL R2 K38       ; R2 := 0x329BDC44
201 [-]: LOADK     R3 K55       ; R3 := "Lotus.Interface.Libs.SortieGenerator"
202 [-]: CALL      R2 2 2       ; R2 := R2(R3)
203 [-]: GETTABLE  R3 R2 K56    ; R3 := R2["0xF6BFCC97"]
204 [-]: CALL      R3 1 2       ; R3 := R3()
205 [-]: MOVE      R3 R13       ; R3 := R13
206 [-]: GETUPVAL  R3 U1        ; R3 := U1
207 [-]: GETTABLE  R3 R3 K57    ; R3 := R3["0x25992394"]
208 [-]: GETGLOBAL R4 K58       ; R4 := openSound
209 [-]: CALL      R3 2 1       ; R3(R4)
210 [-]: GETUPVAL  R3 U14       ; R3 := U14
211 [-]: GETGLOBAL R4 K60       ; R4 := 0xF595ADDE
212 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
213 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5["0x6B7B470B"]
214 [-]: LOADK     R7 K62       ; R7 := "InfoTip.LocationPic"
215 [-]: LOADK     R8 K63       ; R8 := "_height"
216 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
217 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
218 [-]: SETTABLE  R3 K59 R4    ; R3["InitLocationPicHeight"] := R4
219 [-]: GETUPVAL  R3 U14       ; R3 := U14
220 [-]: GETGLOBAL R4 K60       ; R4 := 0xF595ADDE
221 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
222 [-]: SELF      R5 R5 K61    ; R6 := R5; R5 := R5["0x6B7B470B"]
223 [-]: LOADK     R7 K62       ; R7 := "InfoTip.LocationPic"
224 [-]: LOADK     R8 K51       ; R8 := "_y"
225 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
226 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
227 [-]: SETTABLE  R3 K64 R4    ; R3["InitLocationPicYPos"] := R4
228 [-]: MOVE      R3 R1        ; R3 := R1
229 [-]: MOVE      R3 R15       ; R3 := R15
230 [-]: GETGLOBAL R3 K65       ; R3 := gGameRules
231 [-]: SELF      R3 R3 K66    ; R4 := R3; R3 := R3["0x8709CE86"]
232 [-]: CALL      R3 2 2       ; R3 := R3(R4)
233 [-]: GETGLOBAL R4 K14       ; R4 := 0x400E7765
234 [-]: MOVE      R5 R3        ; R5 := R3
235 [-]: CALL      R4 2 2       ; R4 := R4(R5)
236 [-]: TEST      R4 1         ; if R4 then PC := 241
237 [-]: JMP       241          ; PC := 241
238 [-]: SELF      R4 R3 K67    ; R5 := R3; R4 := R3["0x625791A8"]
239 [-]: MOVE      R6 R0        ; R6 := R0
240 [-]: CALL      R4 3 1       ; R4(R5,R6)
241 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
242 [-]: SELF      R4 R4 K68    ; R5 := R4; R4 := R4["0x6B4C9862"]
243 [-]: MOVE      R6 R1        ; R6 := R1
244 [-]: CALL      R4 3 1       ; R4(R5,R6)
245 [-]: GETUPVAL  R4 U16       ; R4 := U16
246 [-]: GETUPVAL  R5 U17       ; R5 := U17
247 [-]: GETTABLE  R5 R5 K69    ; R5 := R5["READ_ONLY"]
248 [-]: CALL      R4 2 1       ; R4(R5)
249 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
250 [-]: SELF      R4 R4 K70    ; R5 := R4; R4 := R4["0x7E1F26D7"]
251 [-]: LOADK     R6 K71       ; R6 := "InfoTip.Bg"
252 [-]: GETGLOBAL R7 K72       ; R7 := _G
253 [-]: GETTABLE  R7 R7 K73    ; R7 := R7["UIMaterial_SmoothEdgeNoDepthTest"]
254 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
255 [-]: GETGLOBAL R4 K0        ; R4 := mMovie
256 [-]: SELF      R4 R4 K70    ; R5 := R4; R4 := R4["0x7E1F26D7"]
257 [-]: LOADK     R6 K74       ; R6 := "InfoTip.Bg2"
258 [-]: GETGLOBAL R7 K72       ; R7 := _G
259 [-]: GETTABLE  R7 R7 K73    ; R7 := R7["UIMaterial_SmoothEdgeNoDepthTest"]
260 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
261 [-]: GETGLOBAL R4 K75       ; R4 := 0x8C64AFA9
262 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
263 [-]: LOADK     R6 K76       ; R6 := "Reticle.swapDepths"
264 [-]: LOADK     R7 K77       ; R7 := 605
265 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
266 [-]: GETGLOBAL R4 K75       ; R4 := 0x8C64AFA9
267 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
268 [-]: LOADK     R6 K78       ; R6 := "InfoTip.swapDepths"
269 [-]: LOADK     R7 K79       ; R7 := 500
270 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
271 [-]: GETGLOBAL R4 K75       ; R4 := 0x8C64AFA9
272 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
273 [-]: LOADK     R6 K80       ; R6 := "NodeTransmission.swapDepths"
274 [-]: LOADK     R7 K81       ; R7 := 480
275 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
276 [-]: GETUPVAL  R4 U18       ; R4 := U18
277 [-]: MOVE      R5 R1        ; R5 := R1
278 [-]: CALL      R4 2 1       ; R4(R5)
279 [-]: GETGLOBAL R4 K15       ; R4 := _T
280 [-]: GETTABLE  R4 R4 K82    ; R4 := R4["MAP_HideExtraUI"]
281 [-]: TEST      R4 1         ; if R4 then PC := 287
282 [-]: JMP       287          ; PC := 287
283 [-]: GETGLOBAL R4 K15       ; R4 := _T
284 [-]: GETTABLE  R4 R4 K83    ; R4 := R4["0x8ED0D55D"]
285 [-]: MOVE      R5 R1        ; R5 := R1
286 [-]: CALL      R4 2 1       ; R4(R5)
287 [-]: GETGLOBAL R4 K84       ; R4 := gFlashMgr
288 [-]: SELF      R4 R4 K85    ; R5 := R4; R4 := R4["0x616DD092"]
289 [-]: GETUPVAL  R6 U1        ; R6 := U1
290 [-]: GETTABLE  R6 R6 K86    ; R6 := R6["0xBCEEAD81"]
291 [-]: CALL      R6 1 0       ; R6,... := R6()
292 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
293 [-]: GETGLOBAL R5 K14       ; R5 := 0x400E7765
294 [-]: MOVE      R6 R4        ; R6 := R4
295 [-]: CALL      R5 2 2       ; R5 := R5(R6)
296 [-]: TEST      R5 1         ; if R5 then PC := 301
297 [-]: JMP       301          ; PC := 301
298 [-]: SELF      R5 R4 K87    ; R6 := R4; R5 := R4["0xD692CA7B"]
299 [-]: MOVE      R7 R1        ; R7 := R1
300 [-]: CALL      R5 3 1       ; R5(R6,R7)
301 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
302 [-]: SELF      R5 R5 K68    ; R6 := R5; R5 := R5["0x6B4C9862"]
303 [-]: MOVE      R7 R1        ; R7 := R1
304 [-]: CALL      R5 3 1       ; R5(R6,R7)
305 [-]: GETGLOBAL R5 K88       ; R5 := gRegion
306 [-]: SELF      R5 R5 K89    ; R6 := R5; R5 := R5["0x3E2F6BF"]
307 [-]: CALL      R5 2 2       ; R5 := R5(R6)
308 [-]: GETGLOBAL R6 K14       ; R6 := 0x400E7765
309 [-]: MOVE      R7 R5        ; R7 := R5
310 [-]: CALL      R6 2 2       ; R6 := R6(R7)
311 [-]: TEST      R6 1         ; if R6 then PC := 318
312 [-]: JMP       318          ; PC := 318
313 [-]: SELF      R6 R5 K90    ; R7 := R5; R6 := R5["0x28609C89"]
314 [-]: GETGLOBAL R8 K91       ; R8 := 0xEC274B1A
315 [-]: LOADK     R9 K92       ; R9 := "InstantKneel"
316 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
317 [-]: CALL      R6 0 1       ; R6(R7,...)
318 [-]: GETUPVAL  R6 U8        ; R6 := U8
319 [-]: SELF      R6 R6 K93    ; R7 := R6; R6 := R6["0x61494587"]
320 [-]: LOADK     R8 K94       ; R8 := 0.30000001192093
321 [-]: CLOSURE   R9 0         ; R9 := closure(Function #28.1)
322 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
323 [-]: GETUPVAL  R6 U8        ; R6 := U8
324 [-]: SELF      R6 R6 K93    ; R7 := R6; R6 := R6["0x61494587"]
325 [-]: LOADK     R8 K95       ; R8 := 0.60000002384186
326 [-]: CLOSURE   R9 1         ; R9 := closure(Function #28.2)
327 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
328 [-]: GETGLOBAL R6 K96       ; R6 := gGameStatsMgr
329 [-]: EQ        1 R6 K25     ; if R6 == nil then PC := 338
330 [-]: JMP       338          ; PC := 338
331 [-]: GETGLOBAL R6 K96       ; R6 := gGameStatsMgr
332 [-]: SELF      R6 R6 K97    ; R7 := R6; R6 := R6["0xCFF953A5"]
333 [-]: GETGLOBAL R8 K91       ; R8 := 0xEC274B1A
334 [-]: LOADK     R9 K98       ; R9 := "IN_SHIP_VIEW_TIME"
335 [-]: CALL      R8 2 2       ; R8 := R8(R9)
336 [-]: LOADK     R9 K99       ; R9 := "STARCHART"
337 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
338 [-]: GETUPVAL  R6 U19       ; R6 := U19
339 [-]: MOVE      R7 R0        ; R7 := R0
340 [-]: CALL      R6 2 1       ; R6(R7)
341 [-]: RETURN    R0 1         ; return 


; Function #28.1:
;
; Name:            
; Defined at line: 1054
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "InitialFade"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #28.2:
;
; Name:            
; Defined at line: 1059
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K3        ; R0 := mMovie
  8 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x458F27A9"]
  9 [-]: LOADK     R2 K5        ; R2 := "InitializeMore"
 10 [-]: LOADK     R3 K6        ; R3 := ""
 11 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1072
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1076
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 10 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gPendingMission"]
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["quest"]
 15 [-]: EQ        1 R0 K4      ; if R0 == "" then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: MOVE      R0 R1        ; R0 := R1
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: GETGLOBAL R0 K5        ; R0 := _G
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["QuestNodeNames"]
 21 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 55
 22 [-]: JMP       55           ; PC := 55
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x9FAED6BC
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gPendingMission"]
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: GETGLOBAL R1 K9        ; R1 := string
 29 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0xDE44F664"]
 30 [-]: MOVE      R2 R0        ; R2 := R0
 31 [-]: GETUPVAL  R3 U0        ; R3 := U0
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["HUB_TAG"]
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 55
 35 [-]: JMP       55           ; PC := 55
 36 [-]: GETGLOBAL R1 K7        ; R1 := 0x9FAED6BC
 37 [-]: GETGLOBAL R2 K0        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["gPendingMission"]
 39 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["baseNodeName"]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: LOADK     R2 K13       ; R2 := 1
 42 [-]: GETGLOBAL R3 K5        ; R3 := _G
 43 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["QuestNodeNames"]
 44 [-]: LEN       R3 R3        ; R3 := # R3
 45 [-]: LOADK     R4 K13       ; R4 := 1
 46 [-]: FORPREP   R2 54        ; R2 -= R4; PC := 54
 47 [-]: GETGLOBAL R6 K5        ; R6 := _G
 48 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["QuestNodeNames"]
 49 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 50 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: MOVE      R6 R1        ; R6 := R1
 53 [-]: RETURN    R6 2         ; return R6
 54 [-]: FORLOOP   R2 47        ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
 55 [-]: MOVE      R6 R0        ; R6 := R0
 56 [-]: RETURN    R6 2         ; return R6
 57 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1100
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Movie"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Movie"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xA58BB96C"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: GETUPVAL  R0 U1        ; R0 := U1
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["TransitioningOut"]
 13 [-]: TEST      R0 0         ; if not R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R0 U2        ; R0 := U2
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: TEST      R0 0         ; if not R0 then PC := 35
 21 [-]: JMP       35           ; PC := 35
 22 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 23 [-]: GETGLOBAL R2 K4        ; R2 := _G
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MapSoundInst"]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETGLOBAL R1 K4        ; R1 := _G
 29 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MapSoundInst"]
 30 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x2842784A"]
 31 [-]: MOVE      R3 R0        ; R3 := R0
 32 [-]: CALL      R1 3 1       ; R1(R2,R3)
 33 [-]: GETGLOBAL R1 K4        ; R1 := _G
 34 [-]: SETTABLE  R1 K5 K7     ; R1["MapSoundInst"] := nil
 35 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 36 [-]: GETUPVAL  R2 U3        ; R2 := U3
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETUPVAL  R1 U3        ; R1 := U3
 41 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 44 [-]: GETUPVAL  R2 U4        ; R2 := U4
 45 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 46 [-]: TEST      R1 1         ; if R1 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETUPVAL  R1 U4        ; R1 := U4
 49 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 50 [-]: CALL      R1 2 1       ; R1(R2)
 51 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 52 [-]: GETUPVAL  R2 U5        ; R2 := U5
 53 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 54 [-]: TEST      R1 1         ; if R1 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETUPVAL  R1 U5        ; R1 := U5
 57 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 58 [-]: CALL      R1 2 1       ; R1(R2)
 59 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 60 [-]: GETUPVAL  R2 U6        ; R2 := U6
 61 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["MovieInst"]
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: TEST      R1 1         ; if R1 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETUPVAL  R1 U6        ; R1 := U6
 66 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["MovieInst"]
 67 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0xA58BB96C"]
 68 [-]: CALL      R1 2 1       ; R1(R2)
 69 [-]: GETGLOBAL R1 K9        ; R1 := gFlashMgr
 70 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x616DD092"]
 71 [-]: GETUPVAL  R3 U7        ; R3 := U7
 72 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["0xBCEEAD81"]
 73 [-]: CALL      R3 1 0       ; R3,... := R3()
 74 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 75 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 76 [-]: MOVE      R3 R1        ; R3 := R1
 77 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 78 [-]: TEST      R2 1         ; if R2 then PC := 83
 79 [-]: JMP       83           ; PC := 83
 80 [-]: SELF      R2 R1 K12    ; R3 := R1; R2 := R1["0xD692CA7B"]
 81 [-]: MOVE      R4 R0        ; R4 := R0
 82 [-]: CALL      R2 3 1       ; R2(R3,R4)
 83 [-]: GETGLOBAL R2 K13       ; R2 := _T
 84 [-]: SETTABLE  R2 K14 K15   ; R2["RadialSolarMapOpen"] := "0x0"
 85 [-]: GETGLOBAL R2 K13       ; R2 := _T
 86 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["HideHud"]
 87 [-]: EQ        1 R2 K7      ; if R2 == nil then PC := 94
 88 [-]: JMP       94           ; PC := 94
 89 [-]: GETGLOBAL R2 K13       ; R2 := _T
 90 [-]: GETGLOBAL R3 K13       ; R3 := _T
 91 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["HideHud"]
 92 [-]: SUB       R3 R3 K17    ; R3 := R3 - 1
 93 [-]: SETTABLE  R2 K16 R3    ; R2["HideHud"] := R3
 94 [-]: GETGLOBAL R2 K18       ; R2 := gGameStatsMgr
 95 [-]: EQ        1 R2 K7      ; if R2 == nil then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: GETGLOBAL R2 K18       ; R2 := gGameStatsMgr
 98 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2["0x47B87262"]
 99 [-]: GETGLOBAL R4 K20       ; R4 := 0xEC274B1A
100 [-]: LOADK     R5 K21       ; R5 := "IN_SHIP_VIEW_TIME"
101 [-]: CALL      R4 2 2       ; R4 := R4(R5)
102 [-]: LOADK     R5 K22       ; R5 := "STARCHART"
103 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
104 [-]: GETGLOBAL R2 K23       ; R2 := gPlayerProfileMgr
105 [-]: SELF      R2 R2 K24    ; R3 := R2; R2 := R2["0x21EF7B1A"]
106 [-]: LOADK     R4 K25       ; R4 := 0
107 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
108 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
109 [-]: MOVE      R4 R2        ; R4 := R2
110 [-]: CALL      R3 2 2       ; R3 := R3(R4)
111 [-]: TEST      R3 1         ; if R3 then PC := 120
112 [-]: JMP       120          ; PC := 120
113 [-]: SELF      R3 R2 K26    ; R4 := R2; R3 := R2["0x3EEB612E"]
114 [-]: CALL      R3 2 2       ; R3 := R3(R4)
115 [-]: SELF      R4 R3 K27    ; R5 := R3; R4 := R3["0xF7E57216"]
116 [-]: GETGLOBAL R6 K13       ; R6 := _T
117 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["ResourceDroneVisible"]
118 [-]: MOVE      R6 R6        ; R6 := R6
119 [-]: CALL      R4 3 1       ; R4(R5,R6)
120 [-]: GETGLOBAL R4 K13       ; R4 := _T
121 [-]: SETTABLE  R4 K29 K15   ; R4["InStarChart"] := "0x0"
122 [-]: GETGLOBAL R4 K13       ; R4 := _T
123 [-]: SETTABLE  R4 K30 K7    ; R4["InRailJackMode"] := nil
124 [-]: GETGLOBAL R4 K13       ; R4 := _T
125 [-]: SETTABLE  R4 K28 K7    ; R4["ResourceDroneVisible"] := nil
126 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1154
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Active"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K0 R1     ; R0["Active"] := R1
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: MOVE      R1 R1        ; R1 := R1
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: GETUPVAL  R0 U3        ; R0 := U3
 12 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0xDB33ECB2"]
 13 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 14 [-]: LOADK     R2 K3        ; R2 := 1
 15 [-]: LOADK     R3 K4        ; R3 := 0.20000000298023
 16 [-]: LOADK     R4 K5        ; R4 := 0
 17 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 18 [-]: GETGLOBAL R0 K6        ; R0 := 0x201191EA
 19 [-]: LOADK     R1 K5        ; R1 := 0
 20 [-]: CALL      R0 2 1       ; R0(R1)
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
 23 [-]: TEST      R0 0         ; if not R0 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: GETGLOBAL R0 K7        ; R0 := _T
 26 [-]: SETTABLE  R0 K8 K9     ; R0["InRailJackMode"] := "0x1"
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETGLOBAL R0 K7        ; R0 := _T
 29 [-]: SETTABLE  R0 K8 K10    ; R0["InRailJackMode"] := nil
 30 [-]: GETUPVAL  R0 U4        ; R0 := U4
 31 [-]: CALL      R0 1 1       ; R0()
 32 [-]: GETGLOBAL R0 K11       ; R0 := 0x52E17A90
 33 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 34 [-]: LOADK     R2 K12       ; R2 := "_root"
 35 [-]: GETGLOBAL R3 K13       ; R3 := UISys
 36 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["FlashInstance_LINEAR"]
 37 [-]: NEWTABLE  R4 1 0       ; R4 := {}
 38 [-]: LOADK     R5 K15       ; R5 := "_alpha"
 39 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 40 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 41 [-]: LOADK     R6 K16       ; R6 := 100
 42 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 43 [-]: LOADK     R6 K17       ; R6 := 0.30000001192093
 44 [-]: CALL      R0 7 1       ; R0(R1,R2,R3,R4,R5,R6)
 45 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1172
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["WareframeChallenge"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x5B8EB241"]
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: TEST      R1 0         ; if not R1 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: GETGLOBAL R1 K3        ; R1 := table
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["0xE6450C9D"]
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: NEWTABLE  R3 0 3       ; R3 := {}
 16 [-]: GETGLOBAL R4 K0        ; R4 := _T
 17 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["ResourceDroneVisible"]
 18 [-]: TEST      R4 0         ; if not R4 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: LOADK     R4 K7        ; R4 := "/Lotus/Language/Menu/EpisodeStatus"
 21 [-]: TEST      R4 1         ; if R4 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/ResourceDrones"
 24 [-]: SETTABLE  R3 K5 R4     ; R3["Label"] := R4
 25 [-]: GETUPVAL  R4 U1        ; R4 := U1
 26 [-]: SETTABLE  R3 K9 R4     ; R3["CallBack"] := R4
 27 [-]: SETTABLE  R3 K10 K11   ; R3["CallOut"] := "MENU_LTHUMB"
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: GETUPVAL  R1 U2        ; R1 := U2
 30 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["DioOpen"]
 31 [-]: TEST      R1 1         ; if R1 then PC := 101
 32 [-]: JMP       101          ; PC := 101
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: TEST      R1 1         ; if R1 then PC := 101
 35 [-]: JMP       101          ; PC := 101
 36 [-]: MOVE      R1 R1        ; R1 := R1
 37 [-]: GETGLOBAL R2 K13       ; R2 := Engine
 38 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x9490FE70"]
 39 [-]: CALL      R2 1 2       ; R2 := R2()
 40 [-]: TEST      R2 0         ; if not R2 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R2 K15       ; R2 := 0x400E7765
 43 [-]: GETGLOBAL R3 K0        ; R3 := _T
 44 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
 45 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 46 [-]: TEST      R2 1         ; if R2 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R2 K0        ; R2 := _T
 49 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["SquadOverlay"]
 50 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x458F27A9"]
 51 [-]: LOADK     R4 K18       ; R4 := "IsAcceptBtnVisible"
 52 [-]: LOADK     R5 K19       ; R5 := ""
 53 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 54 [-]: MOVE      R1 R2        ; R1 := R2
 55 [-]: TEST      R1 0         ; if not R1 then PC := 73
 56 [-]: JMP       73           ; PC := 73
 57 [-]: GETGLOBAL R2 K3        ; R2 := table
 58 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
 59 [-]: MOVE      R3 R0        ; R3 := R0
 60 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 61 [-]: GETUPVAL  R5 U4        ; R5 := U4
 62 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0xF81722A2"]
 63 [-]: GETGLOBAL R6 K21       ; R6 := _G
 64 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["StalkerMode"]
 65 [-]: LOADK     R7 K23       ; R7 := "LOCATE TENNO"
 66 [-]: LOADK     R8 K24       ; R8 := "/Lotus/Language/Menu/Loadout_Change"
 67 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 68 [-]: SETTABLE  R4 K5 R5     ; R4["Label"] := R5
 69 [-]: GETUPVAL  R5 U5        ; R5 := U5
 70 [-]: SETTABLE  R4 K9 R5     ; R4["CallBack"] := R5
 71 [-]: SETTABLE  R4 K10 K25   ; R4["CallOut"] := "MENU_GENERIC1"
 72 [-]: CALL      R2 3 1       ; R2(R3,R4)
 73 [-]: GETGLOBAL R2 K13       ; R2 := Engine
 74 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["0x9490FE70"]
 75 [-]: CALL      R2 1 2       ; R2 := R2()
 76 [-]: TEST      R2 0         ; if not R2 then PC := 101
 77 [-]: JMP       101          ; PC := 101
 78 [-]: GETGLOBAL R2 K15       ; R2 := 0x400E7765
 79 [-]: GETGLOBAL R3 K0        ; R3 := _T
 80 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["SquadOverlay"]
 81 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 82 [-]: TEST      R2 1         ; if R2 then PC := 101
 83 [-]: JMP       101          ; PC := 101
 84 [-]: GETGLOBAL R2 K0        ; R2 := _T
 85 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["SquadOverlay"]
 86 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x458F27A9"]
 87 [-]: LOADK     R4 K26       ; R4 := "CanInvite"
 88 [-]: LOADK     R5 K19       ; R5 := ""
 89 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 90 [-]: TEST      R2 0         ; if not R2 then PC := 101
 91 [-]: JMP       101          ; PC := 101
 92 [-]: GETGLOBAL R2 K3        ; R2 := table
 93 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
 94 [-]: MOVE      R3 R0        ; R3 := R0
 95 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 96 [-]: SETTABLE  R4 K5 K27    ; R4["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
 97 [-]: GETUPVAL  R5 U6        ; R5 := U6
 98 [-]: SETTABLE  R4 K9 R5     ; R4["CallBack"] := R5
 99 [-]: SETTABLE  R4 K10 K28   ; R4["CallOut"] := "MENU_RTRIGGER1"
100 [-]: CALL      R2 3 1       ; R2(R3,R4)
101 [-]: LOADK     R2 K19       ; R2 := ""
102 [-]: GETUPVAL  R3 U2        ; R3 := U2
103 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["DioOpen"]
104 [-]: TEST      R3 0         ; if not R3 then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: LOADK     R2 K29       ; R2 := "/Lotus/Language/Menu/Global_Back"
107 [-]: JMP       122          ; PC := 122
108 [-]: GETUPVAL  R3 U4        ; R3 := U4
109 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["0xF81722A2"]
110 [-]: GETUPVAL  R4 U7        ; R4 := U7
111 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["mTargetVal"]
112 [-]: GETUPVAL  R5 U8        ; R5 := U8
113 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["STARTING_ZOOM"]
114 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: MOVE      R4 R0        ; R4 := R0
117 [-]: MOVE      R4 R1        ; R4 := R1
118 [-]: LOADK     R5 K32       ; R5 := "/Lotus/Language/Menu/Lobby_ZoomOut"
119 [-]: LOADK     R6 K33       ; R6 := "/Lotus/Language/Menu/Exit"
120 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
121 [-]: MOVE      R2 R3        ; R2 := R3
122 [-]: GETGLOBAL R3 K3        ; R3 := table
123 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["0xE6450C9D"]
124 [-]: MOVE      R4 R0        ; R4 := R0
125 [-]: NEWTABLE  R5 0 3       ; R5 := {}
126 [-]: SETTABLE  R5 K5 R2     ; R5["Label"] := R2
127 [-]: GETUPVAL  R6 U9        ; R6 := U9
128 [-]: SETTABLE  R5 K9 R6     ; R5["CallBack"] := R6
129 [-]: SETTABLE  R5 K10 K34   ; R5["CallOut"] := "MENU_CANCEL"
130 [-]: CALL      R3 3 1       ; R3(R4,R5)
131 [-]: GETGLOBAL R3 K35       ; R3 := gPlayerProfileMgr
132 [-]: SELF      R3 R3 K36    ; R4 := R3; R3 := R3["0x21EF7B1A"]
133 [-]: LOADK     R5 K37       ; R5 := 0
134 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
135 [-]: GETUPVAL  R4 U10       ; R4 := U10
136 [-]: TEST      R4 0         ; if not R4 then PC := 167
137 [-]: JMP       167          ; PC := 167
138 [-]: GETGLOBAL R4 K15       ; R4 := 0x400E7765
139 [-]: MOVE      R5 R3        ; R5 := R3
140 [-]: CALL      R4 2 2       ; R4 := R4(R5)
141 [-]: TEST      R4 1         ; if R4 then PC := 167
142 [-]: JMP       167          ; PC := 167
143 [-]: GETGLOBAL R4 K38       ; R4 := string
144 [-]: GETTABLE  R4 R4 K39    ; R4 := R4["0xBDD0D625"]
145 [-]: SELF      R5 R3 K40    ; R6 := R3; R5 := R3["0x144A28F9"]
146 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
147 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
148 [-]: EQ        1 R4 K41     ; if R4 == "[de]rebecca" then PC := 167
149 [-]: JMP       167          ; PC := 167
150 [-]: GETGLOBAL R5 K3        ; R5 := table
151 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["0xE6450C9D"]
152 [-]: MOVE      R6 R0        ; R6 := R0
153 [-]: NEWTABLE  R7 0 3       ; R7 := {}
154 [-]: SETTABLE  R7 K5 K42    ; R7["Label"] := "[DEV] TOGGLE RAILJACK MODE"
155 [-]: GETUPVAL  R8 U11       ; R8 := U11
156 [-]: SETTABLE  R7 K9 R8     ; R7["CallBack"] := R8
157 [-]: GETUPVAL  R8 U4        ; R8 := U4
158 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["0xF81722A2"]
159 [-]: GETGLOBAL R9 K13       ; R9 := Engine
160 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["0x9490FE70"]
161 [-]: CALL      R9 1 2       ; R9 := R9()
162 [-]: LOADK     R10 K43      ; R10 := "MENU_LEFT"
163 [-]: LOADNIL   R11 R11      ; R11 := nil
164 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
165 [-]: SETTABLE  R7 K10 R8    ; R7["CallOut"] := R8
166 [-]: CALL      R5 3 1       ; R5(R6,R7)
167 [-]: GETGLOBAL R5 K0        ; R5 := _T
168 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["SetButtons"]
169 [-]: TEST      R5 0         ; if not R5 then PC := 179
170 [-]: JMP       179          ; PC := 179
171 [-]: GETGLOBAL R5 K0        ; R5 := _T
172 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["0xEFDFBF7E"]
173 [-]: GETGLOBAL R6 K46       ; R6 := mMovie
174 [-]: MOVE      R7 R0        ; R7 := R0
175 [-]: GETGLOBAL R8 K47       ; R8 := 0x6B695579
176 [-]: LOADK     R9 K48       ; R9 := 1
177 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
178 [-]: CALL      R5 0 1       ; R5(R6,...)
179 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1222
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1226
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETGLOBAL R1 K0        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ResourceDroneVisible"]
  4 [-]: MOVE      R1 R1        ; R1 := R1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["ResourceDroneVisible"] := R1
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1231
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: MOVE      R5 R1        ; R5 := R1
  2 [-]: MOVE      R6 R2        ; R6 := R2
  3 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  4 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
  5 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x6B7B470B"]
  6 [-]: MOVE      R8 R5        ; R8 := R5
  7 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  8 [-]: GETGLOBAL R7 K2        ; R7 := 0x400E7765
  9 [-]: MOVE      R8 R6        ; R8 := R6
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: TEST      R7 1         ; if R7 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R7 K3        ; R7 := 0x9FAED6BC
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: EQ        0 R7 K4      ; if R7 ~= "undefined" then PC := 37
 17 [-]: JMP       37           ; PC := 37
 18 [-]: TEST      R4 0         ; if not R4 then PC := 29
 19 [-]: JMP       29           ; PC := 29
 20 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 21 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 22 [-]: MOVE      R9 R0        ; R9 := R0
 23 [-]: LOADK     R10 K6       ; R10 := ".createEmptyMovieClip"
 24 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 25 [-]: MOVE      R10 R5       ; R10 := R5
 26 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 27 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 28 [-]: JMP       37           ; PC := 37
 29 [-]: GETGLOBAL R7 K5        ; R7 := 0x8C64AFA9
 30 [-]: GETGLOBAL R8 K0        ; R8 := mMovie
 31 [-]: MOVE      R9 R0        ; R9 := R0
 32 [-]: LOADK     R10 K7       ; R10 := ".duplicateMovieClip"
 33 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 34 [-]: MOVE      R10 R5       ; R10 := R5
 35 [-]: ADD       R11 R2 R3    ; R11 := R2 + R3
 36 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 37 [-]: GETGLOBAL R7 K8        ; R7 := string
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0xAF449107"]
 39 [-]: MOVE      R8 R0        ; R8 := R0
 40 [-]: LOADK     R9 K10       ; R9 := "(.*%.).+$"
 41 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 42 [-]: EQ        0 R7 K11     ; if R7 ~= nil then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: MOVE      R7 R5        ; R7 := R5
 45 [-]: JMP       49           ; PC := 49
 46 [-]: MOVE      R8 R7        ; R8 := R7
 47 [-]: MOVE      R9 R5        ; R9 := R5
 48 [-]: CONCAT    R7 R8 R9     ; R7 := R8 .. R9
 49 [-]: RETURN    R7 2         ; return R7
 50 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1250
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x8C64AFA9
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := ".removeMovieClip"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1254
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: TEST      R0 0         ; if not R0 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionsCompleted"]
 11 [-]: EQ        0 R1 K2      ; if R1 ~= 0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 K3        ; R1 := 25
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["LABEL_ALPHA"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1262
; #Upvalues:       4
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: LOADK     R8 K0        ; R8 := "SubLabel"
  3 [-]: LOADK     R9 K0        ; R9 := "SubLabel"
  4 [-]: GETUPVAL  R10 U1       ; R10 := U1
  5 [-]: LEN       R10 R10      ; R10 := # R10
  6 [-]: ADD       R10 R10 K1   ; R10 := R10 + 1
  7 [-]: LOADK     R11 K2       ; R11 := 200
  8 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
  9 [-]: GETGLOBAL R8 K3        ; R8 := mMovie
 10 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0xA7FE5515"]
 11 [-]: MOVE      R10 R7       ; R10 := R7
 12 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 13 [-]: GETGLOBAL R9 K5        ; R9 := string
 14 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["0x639C642A"]
 15 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 16 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x5DB0BD4"]
 17 [-]: MOVE      R12 R0       ; R12 := R0
 18 [-]: MOVE      R13 R0       ; R13 := R0
 19 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
 20 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 21 [-]: GETUPVAL  R10 U2       ; R10 := U2
 22 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["Tag"]
 23 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 38
 24 [-]: JMP       38           ; PC := 38
 25 [-]: GETGLOBAL R10 K5       ; R10 := string
 26 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["0x633C4246"]
 27 [-]: MOVE      R11 R9       ; R11 := R9
 28 [-]: LOADK     R12 K10      ; R12 := " "
 29 [-]: LOADK     R13 K11      ; R13 := "\r\n\r\n"
 30 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 31 [-]: MOVE      R9 R10       ; R9 := R10
 32 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 33 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10["0x1C19D966"]
 34 [-]: MOVE      R12 R7       ; R12 := R7
 35 [-]: LOADK     R13 K13      ; R13 := "verticalAlignment"
 36 [-]: LOADK     R14 K14      ; R14 := "bottom"
 37 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 38 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 39 [-]: SELF      R10 R10 K15  ; R11 := R10; R10 := R10["0xD6A79FE9"]
 40 [-]: MOVE      R12 R7       ; R12 := R7
 41 [-]: LOADK     R13 K16      ; R13 := ".Name"
 42 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 43 [-]: LOADK     R13 K17      ; R13 := "text"
 44 [-]: MOVE      R14 R9       ; R14 := R9
 45 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 46 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 47 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10["0x880196A7"]
 48 [-]: MOVE      R12 R7       ; R12 := R7
 49 [-]: LOADK     R13 K19      ; R13 := "Name"
 50 [-]: LOADK     R14 K20      ; R14 := "multiline"
 51 [-]: MOVE      R15 R0       ; R15 := R0
 52 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 53 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 54 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10["0x1C19D966"]
 55 [-]: MOVE      R12 R7       ; R12 := R7
 56 [-]: LOADK     R13 K21      ; R13 := "_alpha"
 57 [-]: GETUPVAL  R14 U3       ; R14 := U3
 58 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["LABEL_ALPHA"]
 59 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 60 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 61 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10["0x1C19D966"]
 62 [-]: MOVE      R12 R7       ; R12 := R7
 63 [-]: LOADK     R13 K23      ; R13 := "_visible"
 64 [-]: MOVE      R14 R4       ; R14 := R4
 65 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 66 [-]: TEST      R2 0         ; if not R2 then PC := 75
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETGLOBAL R10 K3       ; R10 := mMovie
 69 [-]: SELF      R10 R10 K18  ; R11 := R10; R10 := R10["0x880196A7"]
 70 [-]: MOVE      R12 R7       ; R12 := R7
 71 [-]: LOADK     R13 K19      ; R13 := "Name"
 72 [-]: LOADK     R14 K24      ; R14 := "textAlign"
 73 [-]: LOADK     R15 K25      ; R15 := "left"
 74 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 75 [-]: GETTABLE  R10 R1 K26   ; R10 := R1["z"]
 76 [-]: SUB       R10 R10 K27  ; R10 := R10 - -2
 77 [-]: DIV       R10 K1 R10   ; R10 := 1 / R10
 78 [-]: MUL       R10 R10 K28  ; R10 := R10 * 4
 79 [-]: GETGLOBAL R11 K29      ; R11 := 0x6374FD98
 80 [-]: MOVE      R12 R10      ; R12 := R10
 81 [-]: LOADK     R13 K30      ; R13 := 0.75
 82 [-]: LOADK     R14 K31      ; R14 := 1.25
 83 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 84 [-]: MOVE      R10 R11      ; R10 := R11
 85 [-]: MUL       R10 R10 K32  ; R10 := R10 * 80
 86 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 87 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
 88 [-]: MOVE      R13 R7       ; R13 := R7
 89 [-]: LOADK     R14 K33      ; R14 := "_xscale"
 90 [-]: MOVE      R15 R10      ; R15 := R10
 91 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 92 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
 93 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
 94 [-]: MOVE      R13 R7       ; R13 := R7
 95 [-]: LOADK     R14 K34      ; R14 := "_yscale"
 96 [-]: MOVE      R15 R10      ; R15 := R10
 97 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 98 [-]: GETGLOBAL R11 K35      ; R11 := table
 99 [-]: GETTABLE  R11 R11 K36  ; R11 := R11["0xE6450C9D"]
100 [-]: GETUPVAL  R12 U1       ; R12 := U1
101 [-]: NEWTABLE  R13 0 4      ; R13 := {}
102 [-]: SETTABLE  R13 K37 R8   ; R13["memberIndex"] := R8
103 [-]: SETTABLE  R13 K38 R7   ; R13["clipName"] := R7
104 [-]: SETTABLE  R13 K39 R1   ; R13["pos"] := R1
105 [-]: SETTABLE  R13 K40 R3   ; R13["layer"] := R3
106 [-]: CALL      R11 3 1      ; R11(R12,R13)
107 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
108 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
109 [-]: MOVE      R13 R7       ; R13 := R7
110 [-]: LOADK     R14 K41      ; R14 := "enabled"
111 [-]: EQ        0 R5 K42     ; if R5 ~= nil then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: MOVE      R15 R0       ; R15 := R0
114 [-]: MOVE      R15 R1       ; R15 := R1
115 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
116 [-]: EQ        1 R5 K42     ; if R5 == nil then PC := 155
117 [-]: JMP       155          ; PC := 155
118 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
119 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
120 [-]: MOVE      R13 R7       ; R13 := R7
121 [-]: LOADK     R14 K43      ; R14 := "Id"
122 [-]: MOVE      R15 R6       ; R15 := R6
123 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
124 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
125 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
126 [-]: MOVE      R13 R7       ; R13 := R7
127 [-]: LOADK     R14 K44      ; R14 := "RollOverCallback"
128 [-]: GETTABLE  R15 R5 K45   ; R15 := R5["RollOver"]
129 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
130 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
131 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
132 [-]: MOVE      R13 R7       ; R13 := R7
133 [-]: LOADK     R14 K46      ; R14 := "RollOutCallback"
134 [-]: GETTABLE  R15 R5 K47   ; R15 := R5["RollOut"]
135 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
136 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
137 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11["0x1C19D966"]
138 [-]: MOVE      R13 R7       ; R13 := R7
139 [-]: LOADK     R14 K48      ; R14 := "SelectCallback"
140 [-]: GETTABLE  R15 R5 K49   ; R15 := R5["Select"]
141 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
142 [-]: GETGLOBAL R11 K3       ; R11 := mMovie
143 [-]: SELF      R11 R11 K18  ; R12 := R11; R11 := R11["0x880196A7"]
144 [-]: MOVE      R13 R7       ; R13 := R7
145 [-]: LOADK     R14 K50      ; R14 := "Btn"
146 [-]: LOADK     R15 K51      ; R15 := "_width"
147 [-]: GETGLOBAL R16 K3       ; R16 := mMovie
148 [-]: SELF      R16 R16 K52  ; R17 := R16; R16 := R16["0x6B7B470B"]
149 [-]: MOVE      R18 R7       ; R18 := R7
150 [-]: LOADK     R19 K16      ; R19 := ".Name"
151 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
152 [-]: LOADK     R19 K53      ; R19 := "textWidth"
153 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
154 [-]: CALL      R11 0 1      ; R11(R12,...)
155 [-]: RETURN    R7 2         ; return R7
156 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1303
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["locationEnabled"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 7
  3 [-]: JMP       7            ; PC := 7
  4 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["edgesLocked"]
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["radialSector"]
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x9FAED6BC
 11 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["name"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K5        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 15 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 16 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETGLOBAL R4 K5        ; R4 := _T
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CachedSortieMissions"]
 20 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 21 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mShowInStarChart"]
 22 [-]: JMP       25           ; PC := 25
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: GETGLOBAL R5 K5        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 27 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 28 [-]: EQ        1 R5 K7      ; if R5 == nil then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R5 K5        ; R5 := _T
 31 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedAlerts"]
 32 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mUnlocked"]
 34 [-]: TEST      R5 1         ; if R5 then PC := 54
 35 [-]: JMP       54           ; PC := 54
 36 [-]: GETGLOBAL R5 K11       ; R5 := _G
 37 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["CachedGoalInfo"]
 38 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 39 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: TESTSET   R5 R4 1      ; if R4 then PC := 54 else R5 := R4
 42 [-]: JMP       54           ; PC := 54
 43 [-]: GETGLOBAL R5 K5        ; R5 := _T
 44 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R5 K5        ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedActiveMissions"]
 49 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 50 [-]: EQ        0 R5 K7      ; if R5 ~= nil then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: MOVE      R5 R1        ; R5 := R1
 54 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["forceUnlock"]
 55 [-]: TEST      R6 1         ; if R6 then PC := 103
 56 [-]: JMP       103          ; PC := 103
 57 [-]: GETTABLE  R6 R2 K15    ; R6 := R2["nodeType"]
 58 [-]: GETGLOBAL R7 K16       ; R7 := Lotus_Game
 59 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["NT_PVP"]
 60 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 102
 61 [-]: JMP       102          ; PC := 102
 62 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 69
 63 [-]: JMP       69           ; PC := 69
 64 [-]: GETGLOBAL R6 K18       ; R6 := 0x400E7765
 65 [-]: GETTABLE  R7 R2 K19    ; R7 := R2["keyChain"]
 66 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 67 [-]: TEST      R6 0         ; if not R6 then PC := 102
 68 [-]: JMP       102          ; PC := 102
 69 [-]: TEST      R4 1         ; if R4 then PC := 74
 70 [-]: JMP       74           ; PC := 74
 71 [-]: GETTABLE  R6 R2 K20    ; R6 := R2["unlocked"]
 72 [-]: TEST      R6 1         ; if R6 then PC := 103
 73 [-]: JMP       103          ; PC := 103
 74 [-]: TEST      R5 0         ; if not R5 then PC := 80
 75 [-]: JMP       80           ; PC := 80
 76 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
 77 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["unlocked"]
 78 [-]: TEST      R6 1         ; if R6 then PC := 103
 79 [-]: JMP       103          ; PC := 103
 80 [-]: GETTABLE  R6 R2 K21    ; R6 := R2["region"]
 81 [-]: ADD       R6 R6 K22    ; R6 := R6 + 1
 82 [-]: GETGLOBAL R7 K5        ; R7 := _T
 83 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["REGION_ID_DARK_SECTOR"]
 84 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: GETTABLE  R6 R2 K24    ; R6 := R2["missionTag"]
 87 [-]: GETUPVAL  R7 U0        ; R7 := U0
 88 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["Tag"]
 89 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 95
 90 [-]: JMP       95           ; PC := 95
 91 [-]: GETUPVAL  R6 U0        ; R6 := U0
 92 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["Active"]
 93 [-]: TEST      R6 1         ; if R6 then PC := 103
 94 [-]: JMP       103          ; PC := 103
 95 [-]: GETGLOBAL R6 K11       ; R6 := _G
 96 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["StalkerMode"]
 97 [-]: TEST      R6 1         ; if R6 then PC := 103
 98 [-]: JMP       103          ; PC := 103
 99 [-]: GETUPVAL  R6 U1        ; R6 := U1
100 [-]: JMP       103          ; PC := 103
101 [-]: MOVE      R6 R0        ; R6 := R0
102 [-]: MOVE      R6 R1        ; R6 := R1
103 [-]: GETGLOBAL R7 K28       ; R7 := gGameRules
104 [-]: GETGLOBAL R8 K3        ; R8 := 0x9FAED6BC
105 [-]: GETTABLE  R9 R2 K4     ; R9 := R2["name"]
106 [-]: CALL      R8 2 2       ; R8 := R8(R9)
107 [-]: SELF      R9 R7 K29    ; R10 := R7; R9 := R7["0x8B598ED4"]
108 [-]: GETGLOBAL R11 K30      ; R11 := gLotusHubGameRulesType
109 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
110 [-]: TEST      R9 0         ; if not R9 then PC := 121
111 [-]: JMP       121          ; PC := 121
112 [-]: GETGLOBAL R9 K3        ; R9 := 0x9FAED6BC
113 [-]: GETGLOBAL R10 K28      ; R10 := gGameRules
114 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10["0xB8637349"]
115 [-]: CALL      R10 2 2      ; R10 := R10(R11)
116 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["location"]
117 [-]: CALL      R9 2 2       ; R9 := R9(R10)
118 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 121
119 [-]: JMP       121          ; PC := 121
120 [-]: MOVE      R6 R0        ; R6 := R0
121 [-]: RETURN    R6 2         ; return R6
122 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1341
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["missionsCompleted"]
  2 [-]: TEST      R1 1         ; if R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 K1        ; R1 := 0
  5 [-]: LT        1 K1 R1      ; if 0 < R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: MOVE      R2 R1        ; R2 := R1
  9 [-]: TEST      R2 1         ; if R2 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 12 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 13 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["NT_PVP"]
 14 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: TEST      R2 1         ; if R2 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 21 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["NT_HUB"]
 23 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: MOVE      R2 R1        ; R2 := R1
 27 [-]: TEST      R2 1         ; if R2 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["nodeType"]
 30 [-]: GETGLOBAL R4 K3        ; R4 := Lotus_Game
 31 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["NT_BONUS_MISSION"]
 32 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: MOVE      R2 R1        ; R2 := R1
 36 [-]: TEST      R2 1         ; if R2 then PC := 43
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETGLOBAL R3 K7        ; R3 := 0x400E7765
 39 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mission"]
 40 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["levelOverride"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: MOVE      R2 R3        ; R2 := R3
 43 [-]: TEST      R2 1         ; if R2 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: TESTSET   R2 R3 1      ; if R3 then PC := 50 else R2 := R3
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R3 K10       ; R3 := _G
 49 [-]: GETTABLE  R2 R3 K11    ; R2 := R3["StalkerMode"]
 50 [-]: TEST      R2 0         ; if not R2 then PC := 66
 51 [-]: JMP       66           ; PC := 66
 52 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["name"]
 53 [-]: GETUPVAL  R4 U1        ; R4 := U1
 54 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["CETUS_NODE_TAG"]
 55 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETUPVAL  R3 U2        ; R3 := U2
 58 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0xDF213CE1"]
 59 [-]: GETUPVAL  R5 U1        ; R5 := U1
 60 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["PLAINS_NODE_TAG"]
 61 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 62 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["missionsCompleted"]
 63 [-]: EQ        0 R3 K1      ; if R3 ~= 0 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: MOVE      R2 R0        ; R2 := R0
 66 [-]: RETURN    R2 2         ; return R2
 67 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1359
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["locked"]
  5 [-]: TEST      R2 1         ; if R2 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["completed"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["isShortcut"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: JMP       250          ; PC := 250
 16 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["IsQuest"]
 17 [-]: TEST      R2 0         ; if not R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K6        ; R2 := _G
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: JMP       250          ; PC := 250
 23 [-]: EQ        0 R1 K8      ; if R1 ~= "Story" then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R2 K6        ; R2 := _G
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UITexture_Story"]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       250          ; PC := 250
 29 [-]: GETGLOBAL R2 K9        ; R2 := _T
 30 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 31 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 32 [-]: TEST      R2 0         ; if not R2 then PC := 59
 33 [-]: JMP       59           ; PC := 59
 34 [-]: GETGLOBAL R2 K9        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedAlerts"]
 36 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 37 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 59
 39 [-]: JMP       59           ; PC := 59
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["0xF81722A2"]
 42 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
 43 [-]: GETGLOBAL R4 K9        ; R4 := _T
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["CachedAlerts"]
 45 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
 46 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mAlertInfo"]
 47 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K6        ; R4 := _G
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["UITexture_Alert"]
 51 [-]: GETGLOBAL R5 K9        ; R5 := _T
 52 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["CachedAlerts"]
 53 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mAlertInfo"]
 55 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mIcon"]
 56 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
 57 [-]: RETURN    R2 0         ; return R2,...
 58 [-]: JMP       250          ; PC := 250
 59 [-]: GETGLOBAL R2 K6        ; R2 := _G
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["CachedGoalInfo"]
 61 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 62 [-]: TEST      R2 0         ; if not R2 then PC := 70
 63 [-]: JMP       70           ; PC := 70
 64 [-]: GETUPVAL  R2 U1        ; R2 := U1
 65 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0xC192E91A"]
 66 [-]: MOVE      R3 R1        ; R3 := R1
 67 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 68 [-]: RETURN    R2 0         ; return R2,...
 69 [-]: JMP       250          ; PC := 250
 70 [-]: GETGLOBAL R2 K9        ; R2 := _T
 71 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 72 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 73 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 101
 74 [-]: JMP       101          ; PC := 101
 75 [-]: GETGLOBAL R2 K9        ; R2 := _T
 76 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 77 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 78 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["mUnlocked"]
 79 [-]: TEST      R2 0         ; if not R2 then PC := 101
 80 [-]: JMP       101          ; PC := 101
 81 [-]: GETGLOBAL R2 K9        ; R2 := _T
 82 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 83 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 84 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 101
 86 [-]: JMP       101          ; PC := 101
 87 [-]: GETGLOBAL R2 K9        ; R2 := _T
 88 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["CachedGhostTowerMissions"]
 89 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 90 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mMissionInfo"]
 91 [-]: GETTABLE  R2 R2 K24    ; R2 := R2["minEnemyLevel"]
 92 [-]: LE        0 K25 R2     ; if 80 > R2 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R2 K6        ; R2 := _G
 95 [-]: GETTABLE  R2 R2 K26    ; R2 := R2["UITextures_GhostTowerVariant"]
 96 [-]: RETURN    R2 2         ; return R2
 97 [-]: GETGLOBAL R2 K6        ; R2 := _G
 98 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["UITextures_GhostTower"]
 99 [-]: RETURN    R2 2         ; return R2
100 [-]: JMP       250          ; PC := 250
101 [-]: GETGLOBAL R2 K9        ; R2 := _T
102 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["CachedSkullNodes"]
103 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
104 [-]: EQ        1 R2 K20     ; if R2 == nil then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: GETGLOBAL R2 K6        ; R2 := _G
107 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["UITexture_Skull"]
108 [-]: RETURN    R2 2         ; return R2
109 [-]: JMP       250          ; PC := 250
110 [-]: GETGLOBAL R2 K9        ; R2 := _T
111 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
112 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
113 [-]: TEST      R2 0         ; if not R2 then PC := 135
114 [-]: JMP       135          ; PC := 135
115 [-]: GETGLOBAL R2 K9        ; R2 := _T
116 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
117 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
118 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["mShowInStarChart"]
119 [-]: TEST      R2 0         ; if not R2 then PC := 135
120 [-]: JMP       135          ; PC := 135
121 [-]: GETGLOBAL R2 K13       ; R2 := 0x400E7765
122 [-]: GETGLOBAL R3 K9        ; R3 := _T
123 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["CachedSortieMissions"]
124 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
125 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
126 [-]: CALL      R2 2 2       ; R2 := R2(R3)
127 [-]: TEST      R2 1         ; if R2 then PC := 135
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R2 K9        ; R2 := _T
130 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["CachedSortieMissions"]
131 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
132 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mIcon"]
133 [-]: RETURN    R2 2         ; return R2
134 [-]: JMP       250          ; PC := 250
135 [-]: GETGLOBAL R2 K9        ; R2 := _T
136 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
137 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
138 [-]: TEST      R2 0         ; if not R2 then PC := 152
139 [-]: JMP       152          ; PC := 152
140 [-]: GETGLOBAL R2 K9        ; R2 := _T
141 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
142 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
143 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
144 [-]: TEST      R2 0         ; if not R2 then PC := 152
145 [-]: JMP       152          ; PC := 152
146 [-]: GETGLOBAL R2 K9        ; R2 := _T
147 [-]: GETTABLE  R2 R2 K31    ; R2 := R2["CachedSyndicateMissions"]
148 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
149 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["mMapIcon"]
150 [-]: RETURN    R2 2         ; return R2
151 [-]: JMP       250          ; PC := 250
152 [-]: GETGLOBAL R2 K9        ; R2 := _T
153 [-]: GETTABLE  R2 R2 K33    ; R2 := R2["CachedInvasionInfo"]
154 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
155 [-]: TEST      R2 0         ; if not R2 then PC := 176
156 [-]: JMP       176          ; PC := 176
157 [-]: GETUPVAL  R2 U1        ; R2 := U1
158 [-]: GETTABLE  R2 R2 K34    ; R2 := R2["0x18FE37C1"]
159 [-]: LOADNIL   R3 R3        ; R3 := nil
160 [-]: CALL      R2 2 2       ; R2 := R2(R3)
161 [-]: TEST      R2 0         ; if not R2 then PC := 172
162 [-]: JMP       172          ; PC := 172
163 [-]: GETTABLE  R3 R2 K35    ; R3 := R2["mDefenderMissionInfo"]
164 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
165 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
166 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
167 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: GETGLOBAL R3 K6        ; R3 := _G
170 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
171 [-]: RETURN    R3 2         ; return R3
172 [-]: GETGLOBAL R3 K6        ; R3 := _G
173 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["UITexture_Invasion"]
174 [-]: RETURN    R3 2         ; return R3
175 [-]: JMP       250          ; PC := 250
176 [-]: GETGLOBAL R3 K9        ; R3 := _T
177 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
178 [-]: TEST      R3 0         ; if not R3 then PC := 199
179 [-]: JMP       199          ; PC := 199
180 [-]: GETGLOBAL R3 K9        ; R3 := _T
181 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
182 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
183 [-]: TEST      R3 0         ; if not R3 then PC := 199
184 [-]: JMP       199          ; PC := 199
185 [-]: GETGLOBAL R3 K13       ; R3 := 0x400E7765
186 [-]: GETGLOBAL R4 K9        ; R4 := _T
187 [-]: GETTABLE  R4 R4 K41    ; R4 := R4["CachedActiveMissions"]
188 [-]: GETTABLE  R4 R4 R1     ; R4 := R4[R1]
189 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mIcon"]
190 [-]: CALL      R3 2 2       ; R3 := R3(R4)
191 [-]: TEST      R3 1         ; if R3 then PC := 199
192 [-]: JMP       199          ; PC := 199
193 [-]: GETGLOBAL R3 K9        ; R3 := _T
194 [-]: GETTABLE  R3 R3 K41    ; R3 := R3["CachedActiveMissions"]
195 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
196 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mIcon"]
197 [-]: RETURN    R3 2         ; return R3
198 [-]: JMP       250          ; PC := 250
199 [-]: GETGLOBAL R3 K9        ; R3 := _T
200 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
201 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
202 [-]: EQ        1 R3 K20     ; if R3 == nil then PC := 220
203 [-]: JMP       220          ; PC := 220
204 [-]: GETGLOBAL R3 K9        ; R3 := _T
205 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
206 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
207 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["mUnlocked"]
208 [-]: TEST      R3 0         ; if not R3 then PC := 220
209 [-]: JMP       220          ; PC := 220
210 [-]: GETGLOBAL R3 K9        ; R3 := _T
211 [-]: GETTABLE  R3 R3 K42    ; R3 := R3["CachedEliteAlertMissions"]
212 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
213 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["mShowInStarChart"]
214 [-]: TEST      R3 0         ; if not R3 then PC := 220
215 [-]: JMP       220          ; PC := 220
216 [-]: GETGLOBAL R3 K6        ; R3 := _G
217 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["UITexture_EliteAlert"]
218 [-]: RETURN    R3 2         ; return R3
219 [-]: JMP       250          ; PC := 250
220 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
221 [-]: GETTABLE  R3 R3 K45    ; R3 := R3["mission"]
222 [-]: GETTABLE  R3 R3 K36    ; R3 := R3["missionType"]
223 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
224 [-]: GETTABLE  R4 R4 K38    ; R4 := R4["MT_ASSASSINATION"]
225 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: GETGLOBAL R3 K6        ; R3 := _G
228 [-]: GETTABLE  R3 R3 K39    ; R3 := R3["UITexture_BossNode"]
229 [-]: RETURN    R3 2         ; return R3
230 [-]: JMP       250          ; PC := 250
231 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
232 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
233 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
234 [-]: GETTABLE  R4 R4 K47    ; R4 := R4["NT_PVP"]
235 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: GETGLOBAL R3 K6        ; R3 := _G
238 [-]: GETTABLE  R3 R3 K48    ; R3 := R3["UITexture_Pvp"]
239 [-]: RETURN    R3 2         ; return R3
240 [-]: JMP       250          ; PC := 250
241 [-]: GETTABLE  R3 R0 K44    ; R3 := R0["radialSector"]
242 [-]: GETTABLE  R3 R3 K46    ; R3 := R3["nodeType"]
243 [-]: GETGLOBAL R4 K37       ; R4 := Lotus_Game
244 [-]: GETTABLE  R4 R4 K49    ; R4 := R4["NT_CLAN"]
245 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 250
246 [-]: JMP       250          ; PC := 250
247 [-]: GETGLOBAL R3 K6        ; R3 := _G
248 [-]: GETTABLE  R3 R3 K50    ; R3 := R3["UITexture_DefaultClan"]
249 [-]: RETURN    R3 2         ; return R3
250 [-]: LOADNIL   R3 R3        ; R3 := nil
251 [-]: RETURN    R3 2         ; return R3
252 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1403
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2[1]
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["pos"]
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0xB09F286F
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["pos"]
  7 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x221C9700
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 11 [-]: LOADK     R6 K4        ; R6 := 2
 12 [-]: LOADK     R7 K5        ; R7 := 0.20000000298023
 13 [-]: GETGLOBAL R8 K6        ; R8 := table
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 15 [-]: MOVE      R9 R5        ; R9 := R5
 16 [-]: GETGLOBAL R10 K3       ; R10 := 0x221C9700
 17 [-]: LOADK     R11 K8       ; R11 := -1
 18 [-]: LOADK     R12 K8       ; R12 := -1
 19 [-]: MOVE      R13 R7       ; R13 := R7
 20 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 21 [-]: MUL       R10 R10 R6   ; R10 := R10 * R6
 22 [-]: ADD       R10 R10 R4   ; R10 := R10 + R4
 23 [-]: CALL      R8 3 1       ; R8(R9,R10)
 24 [-]: GETGLOBAL R8 K6        ; R8 := table
 25 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 26 [-]: MOVE      R9 R5        ; R9 := R5
 27 [-]: GETGLOBAL R10 K3       ; R10 := 0x221C9700
 28 [-]: LOADK     R11 K0       ; R11 := 1
 29 [-]: LOADK     R12 K8       ; R12 := -1
 30 [-]: MOVE      R13 R7       ; R13 := R7
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: MUL       R10 R10 R6   ; R10 := R10 * R6
 33 [-]: ADD       R10 R10 R4   ; R10 := R10 + R4
 34 [-]: CALL      R8 3 1       ; R8(R9,R10)
 35 [-]: GETGLOBAL R8 K6        ; R8 := table
 36 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 37 [-]: MOVE      R9 R5        ; R9 := R5
 38 [-]: GETGLOBAL R10 K3       ; R10 := 0x221C9700
 39 [-]: LOADK     R11 K0       ; R11 := 1
 40 [-]: LOADK     R12 K0       ; R12 := 1
 41 [-]: MOVE      R13 R7       ; R13 := R7
 42 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 43 [-]: MUL       R10 R10 R6   ; R10 := R10 * R6
 44 [-]: ADD       R10 R10 R4   ; R10 := R10 + R4
 45 [-]: CALL      R8 3 1       ; R8(R9,R10)
 46 [-]: GETGLOBAL R8 K6        ; R8 := table
 47 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xE6450C9D"]
 48 [-]: MOVE      R9 R5        ; R9 := R5
 49 [-]: GETGLOBAL R10 K3       ; R10 := 0x221C9700
 50 [-]: LOADK     R11 K8       ; R11 := -1
 51 [-]: LOADK     R12 K0       ; R12 := 1
 52 [-]: MOVE      R13 R7       ; R13 := R7
 53 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 54 [-]: MUL       R10 R10 R6   ; R10 := R10 * R6
 55 [-]: ADD       R10 R10 R4   ; R10 := R10 + R4
 56 [-]: CALL      R8 3 1       ; R8(R9,R10)
 57 [-]: RETURN    R5 2         ; return R5
 58 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1421
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["decoRedux"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETTABLE  R2 R1 K2     ; R2 := R1["name"]
  7 [-]: EQ        1 R2 K3      ; if R2 == "" then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 10 [-]: GETGLOBAL R3 K4        ; R3 := edgeLineType
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R2 K5        ; R2 := gBackgroundRegion
 16 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0xBDD34CC6"]
 17 [-]: GETGLOBAL R4 K7        ; R4 := 0xCAA43ABB
 18 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["decoRedux"]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["pos"]
 21 [-]: GETGLOBAL R6 K9        ; R6 := ZERO_ROTATION
 22 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 23 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2["0x9F1DC568"]
 24 [-]: GETGLOBAL R5 K4        ; R5 := edgeLineType
 25 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 26 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 61
 30 [-]: JMP       61           ; PC := 61
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: TEST      R4 0         ; if not R4 then PC := 47
 33 [-]: JMP       47           ; PC := 47
 34 [-]: SELF      R4 R2 K11    ; R5 := R2; R4 := R2["0x178C31B9"]
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: TEST      R4 0         ; if not R4 then PC := 61
 37 [-]: JMP       61           ; PC := 61
 38 [-]: GETGLOBAL R5 K12       ; R5 := table
 39 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["0xE6450C9D"]
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: GETTABLE  R7 R4 K14    ; R7 := R4[1]
 42 [-]: CALL      R5 3 1       ; R5(R6,R7)
 43 [-]: SELF      R5 R3 K15    ; R6 := R3; R5 := R3["0x5BD03F6B"]
 44 [-]: MOVE      R7 R4        ; R7 := R4
 45 [-]: CALL      R5 3 1       ; R5(R6,R7)
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETUPVAL  R5 U0        ; R5 := U0
 48 [-]: MOVE      R6 R0        ; R6 := R0
 49 [-]: MOVE      R7 R1        ; R7 := R1
 50 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 51 [-]: SELF      R6 R2 K15    ; R7 := R2; R6 := R2["0x5BD03F6B"]
 52 [-]: MOVE      R8 R5        ; R8 := R5
 53 [-]: CALL      R6 3 1       ; R6(R7,R8)
 54 [-]: SELF      R6 R2 K11    ; R7 := R2; R6 := R2["0x178C31B9"]
 55 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 56 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 57 [-]: MOVE      R6 R7        ; R6 := R7
 58 [-]: SELF      R7 R3 K15    ; R8 := R3; R7 := R3["0x5BD03F6B"]
 59 [-]: MOVE      R9 R6        ; R9 := R6
 60 [-]: CALL      R7 3 1       ; R7(R8,R9)
 61 [-]: MOVE      R7 R0        ; R7 := R0
 62 [-]: TEST      R7 0         ; if not R7 then PC := 118
 63 [-]: JMP       118          ; PC := 118
 64 [-]: LOADK     R7 K14       ; R7 := 1
 65 [-]: LOADK     R8 K16       ; R8 := 8
 66 [-]: LOADK     R9 K14       ; R9 := 1
 67 [-]: FORPREP   R7 117       ; R7 -= R9; PC := 117
 68 [-]: DIV       R11 R10 K16  ; R11 := R10 / 8
 69 [-]: GETGLOBAL R12 K5       ; R12 := gBackgroundRegion
 70 [-]: SELF      R12 R12 K6   ; R13 := R12; R12 := R12["0xBDD34CC6"]
 71 [-]: GETGLOBAL R14 K7       ; R14 := 0xCAA43ABB
 72 [-]: GETTABLE  R15 R1 K1    ; R15 := R1["decoRedux"]
 73 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 74 [-]: GETTABLE  R15 R1 K8    ; R15 := R1["pos"]
 75 [-]: GETGLOBAL R16 K17      ; R16 := 0x221C9700
 76 [-]: LOADK     R17 K18      ; R17 := 0
 77 [-]: LOADK     R18 K18      ; R18 := 0
 78 [-]: MUL       R19 R11 K19  ; R19 := R11 * 0.30000001192093
 79 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 80 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
 81 [-]: GETGLOBAL R16 K9       ; R16 := ZERO_ROTATION
 82 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 83 [-]: SELF      R13 R12 K10  ; R14 := R12; R13 := R12["0x9F1DC568"]
 84 [-]: GETGLOBAL R15 K4       ; R15 := edgeLineType
 85 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 86 [-]: SELF      R14 R2 K11   ; R15 := R2; R14 := R2["0x178C31B9"]
 87 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 88 [-]: GETGLOBAL R15 K12      ; R15 := table
 89 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["0xE6450C9D"]
 90 [-]: MOVE      R16 R14      ; R16 := R14
 91 [-]: GETTABLE  R17 R14 K14  ; R17 := R14[1]
 92 [-]: CALL      R15 3 1      ; R15(R16,R17)
 93 [-]: SELF      R15 R13 K15  ; R16 := R13; R15 := R13["0x5BD03F6B"]
 94 [-]: MOVE      R17 R14      ; R17 := R14
 95 [-]: CALL      R15 3 1      ; R15(R16,R17)
 96 [-]: SELF      R15 R12 K20  ; R16 := R12; R15 := R12["0x6A7E5F92"]
 97 [-]: GETGLOBAL R17 K21      ; R17 := math
 98 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["0xF93F7CC8"]
 99 [-]: MOVE      R18 R11      ; R18 := R11
100 [-]: CALL      R17 2 2      ; R17 := R17(R18)
101 [-]: MUL       R17 R17 K23  ; R17 := R17 * -0.0099999997764826
102 [-]: ADD       R17 K14 R17  ; R17 := 1 + R17
103 [-]: CALL      R15 3 1      ; R15(R16,R17)
104 [-]: SELF      R15 R13 K20  ; R16 := R13; R15 := R13["0x6A7E5F92"]
105 [-]: SELF      R17 R12 K24  ; R18 := R12; R17 := R12["0xECB5B892"]
106 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
107 [-]: CALL      R15 0 1      ; R15(R16,...)
108 [-]: SELF      R15 R13 K25  ; R16 := R13; R15 := R13["0xD124E361"]
109 [-]: GETGLOBAL R17 K26      ; R17 := Lotus_Game
110 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["UNLIT_ATTEN"]
111 [-]: LOADK     R18 K28      ; R18 := 0.10000000149012
112 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
113 [-]: SELF      R15 R12 K29  ; R16 := R12; R15 := R12["0x7DBDDA0B"]
114 [-]: MOVE      R17 R0       ; R17 := R0
115 [-]: MOVE      R18 R0       ; R18 := R0
116 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
117 [-]: FORLOOP   R7 68        ; R7 += R9; if R7 <= R8 then begin PC := 68; R10 := R7 end
118 [-]: SETTABLE  R1 K30 R2    ; R1["instance"] := R2
119 [-]: RETURN    R2 2         ; return R2
120 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1467
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
  9 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["instance"]
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: TEST      R5 1         ; if R5 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R5 K4        ; R5 := gBackgroundRegion
 14 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x9B0A3887"]
 15 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["instance"]
 16 [-]: CALL      R5 3 1       ; R5(R6,R7)
 17 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: GETUPVAL  R5 U1        ; R5 := U1
 20 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0x871D2E8C"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: LOADK     R5 K7        ; R5 := 1
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LOADK     R7 K7        ; R7 := 1
 27 [-]: FORPREP   R5 105       ; R5 -= R7; PC := 105
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 30 [-]: GETGLOBAL R10 K8       ; R10 := 0xCAA43ABB
 31 [-]: GETTABLE  R11 R9 K9    ; R11 := R9["deco"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: GETGLOBAL R11 K10      ; R11 := 0x221C9700
 34 [-]: GETTABLE  R12 R9 K11   ; R12 := R9["pos"]
 35 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["x"]
 36 [-]: GETTABLE  R13 R9 K11   ; R13 := R9["pos"]
 37 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["y"]
 38 [-]: GETTABLE  R14 R9 K11   ; R14 := R9["pos"]
 39 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["z"]
 40 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 41 [-]: GETUPVAL  R12 U2       ; R12 := U2
 42 [-]: MOVE      R13 R11      ; R13 := R11
 43 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 44 [-]: MOVE      R11 R12      ; R11 := R12
 45 [-]: SETTABLE  R9 K11 R11   ; R9["pos"] := R11
 46 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 47 [-]: MOVE      R13 R10      ; R13 := R10
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: TEST      R12 1        ; if R12 then PC := 70
 50 [-]: JMP       70           ; PC := 70
 51 [-]: GETGLOBAL R12 K2       ; R12 := 0x400E7765
 52 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 53 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 54 [-]: TEST      R12 1        ; if R12 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: GETUPVAL  R12 U3       ; R12 := U3
 57 [-]: GETTABLE  R13 R9 K9    ; R13 := R9["deco"]
 58 [-]: CALL      R12 2 1      ; R12(R13)
 59 [-]: GETGLOBAL R12 K4       ; R12 := gBackgroundRegion
 60 [-]: SELF      R12 R12 K15  ; R13 := R12; R12 := R12["0xBDD34CC6"]
 61 [-]: MOVE      R14 R10      ; R14 := R10
 62 [-]: MOVE      R15 R11      ; R15 := R11
 63 [-]: GETGLOBAL R16 K16      ; R16 := ZERO_ROTATION
 64 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 65 [-]: SETTABLE  R9 K3 R12    ; R9["instance"] := R12
 66 [-]: GETTABLE  R12 R9 K3    ; R12 := R9["instance"]
 67 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x6A7E5F92"]
 68 [-]: GETTABLE  R14 R9 K18   ; R14 := R9["scale"]
 69 [-]: CALL      R12 3 1      ; R12(R13,R14)
 70 [-]: LOADNIL   R12 R12      ; R12 := nil
 71 [-]: GETUPVAL  R13 U4       ; R13 := U4
 72 [-]: SETTABLE  R13 R8 R12   ; R13[R8] := R12
 73 [-]: NEWTABLE  R13 5 0      ; R13 := {}
 74 [-]: GETGLOBAL R14 K10      ; R14 := 0x221C9700
 75 [-]: CALL      R14 1 2      ; R14 := R14()
 76 [-]: GETGLOBAL R15 K10      ; R15 := 0x221C9700
 77 [-]: LOADK     R16 K19      ; R16 := 0
 78 [-]: LOADK     R17 K20      ; R17 := -1.2000000476837
 79 [-]: LOADK     R18 K19      ; R18 := 0
 80 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 81 [-]: GETGLOBAL R16 K10      ; R16 := 0x221C9700
 82 [-]: LOADK     R17 K21      ; R17 := 0.5
 83 [-]: LOADK     R18 K22      ; R18 := 1.1000000238419
 84 [-]: LOADK     R19 K19      ; R19 := 0
 85 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 86 [-]: GETGLOBAL R17 K10      ; R17 := 0x221C9700
 87 [-]: LOADK     R18 K19      ; R18 := 0
 88 [-]: LOADK     R19 K21      ; R19 := 0.5
 89 [-]: LOADK     R20 K19      ; R20 := 0
 90 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 91 [-]: GETGLOBAL R18 K10      ; R18 := 0x221C9700
 92 [-]: LOADK     R19 K7       ; R19 := 1
 93 [-]: LOADK     R20 K23      ; R20 := -1.2999999523163
 94 [-]: LOADK     R21 K19      ; R21 := 0
 95 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 96 [-]: GETGLOBAL R19 K10      ; R19 := 0x221C9700
 97 [-]: LOADK     R20 K24      ; R20 := -1.6000000238419
 98 [-]: LOADK     R21 K25      ; R21 := -0.60000002384186
 99 [-]: LOADK     R22 K19      ; R22 := 0
100 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
101 [-]: SETLIST   R13 0 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 0
102 [-]: GETTABLE  R14 R9 K11   ; R14 := R9["pos"]
103 [-]: GETTABLE  R15 R13 R8   ; R15 := R13[R8]
104 [-]: ADD       R14 R14 R15  ; R14 := R14 + R15
105 [-]: FORLOOP   R5 28        ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
106 [-]: GETGLOBAL R15 K4       ; R15 := gBackgroundRegion
107 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15["0x90391273"]
108 [-]: GETUPVAL  R17 U6       ; R17 := U6
109 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["STAR_CHART_ROOT"]
110 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
111 [-]: MOVE      R15 R5       ; R15 := R5
112 [-]: GETUPVAL  R15 U5       ; R15 := U5
113 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15["0x5097FD8C"]
114 [-]: GETGLOBAL R17 K29      ; R17 := 0x1E4F6281
115 [-]: LOADK     R18 K19      ; R18 := 0
116 [-]: LOADK     R19 K30      ; R19 := 60
117 [-]: LOADK     R20 K19      ; R20 := 0
118 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
119 [-]: CALL      R15 0 1      ; R15(R16,...)
120 [-]: GETGLOBAL R15 K4       ; R15 := gBackgroundRegion
121 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15["0x90391273"]
122 [-]: GETUPVAL  R17 U6       ; R17 := U6
123 [-]: GETTABLE  R17 R17 K31  ; R17 := R17["PLAYER"]
124 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
125 [-]: GETGLOBAL R16 K4       ; R16 := gBackgroundRegion
126 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16["0x90391273"]
127 [-]: GETUPVAL  R18 U6       ; R18 := U6
128 [-]: GETTABLE  R18 R18 K32  ; R18 := R18["PLAYER_OPERATOR"]
129 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
130 [-]: GETGLOBAL R17 K33      ; R17 := gRegion
131 [-]: SELF      R17 R17 K34  ; R18 := R17; R17 := R17["0x3E2F6BF"]
132 [-]: CALL      R17 2 2      ; R17 := R17(R18)
133 [-]: GETGLOBAL R18 K35      ; R18 := 0x2C00D429
134 [-]: LOADK     R19 K36      ; R19 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
135 [-]: CALL      R18 2 2      ; R18 := R18(R19)
136 [-]: GETGLOBAL R19 K2       ; R19 := 0x400E7765
137 [-]: MOVE      R20 R17      ; R20 := R17
138 [-]: CALL      R19 2 2      ; R19 := R19(R20)
139 [-]: TEST      R19 1        ; if R19 then PC := 145
140 [-]: JMP       145          ; PC := 145
141 [-]: SELF      R19 R17 K37  ; R20 := R17; R19 := R17["0x8B598ED4"]
142 [-]: MOVE      R21 R18      ; R21 := R18
143 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
144 [-]: JMP       147          ; PC := 147
145 [-]: MOVE      R19 R0       ; R19 := R0
146 [-]: MOVE      R19 R1       ; R19 := R1
147 [-]: TEST      R19 0        ; if not R19 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: MOVE      R16 R7       ; R16 := R7
150 [-]: SELF      R20 R15 K38  ; R21 := R15; R20 := R15["0x7DBDDA0B"]
151 [-]: MOVE      R22 R0       ; R22 := R0
152 [-]: CALL      R20 3 1      ; R20(R21,R22)
153 [-]: GETUPVAL  R20 U8       ; R20 := U8
154 [-]: GETTABLE  R20 R20 K39  ; R20 := R20["0x52F80741"]
155 [-]: MOVE      R21 R16      ; R21 := R16
156 [-]: MOVE      R22 R17      ; R22 := R17
157 [-]: CALL      R20 3 1      ; R20(R21,R22)
158 [-]: JMP       163          ; PC := 163
159 [-]: MOVE      R15 R7       ; R15 := R7
160 [-]: SELF      R20 R16 K38  ; R21 := R16; R20 := R16["0x7DBDDA0B"]
161 [-]: MOVE      R22 R0       ; R22 := R0
162 [-]: CALL      R20 3 1      ; R20(R21,R22)
163 [-]: GETGLOBAL R20 K2       ; R20 := 0x400E7765
164 [-]: MOVE      R21 R17      ; R21 := R17
165 [-]: CALL      R20 2 2      ; R20 := R20(R21)
166 [-]: TEST      R20 1        ; if R20 then PC := 208
167 [-]: JMP       208          ; PC := 208
168 [-]: SELF      R20 R17 K40  ; R21 := R17; R20 := R17["0x8DB5D01F"]
169 [-]: CALL      R20 2 2      ; R20 := R20(R21)
170 [-]: SELF      R20 R20 K41  ; R21 := R20; R20 := R20["0x6978AC59"]
171 [-]: CALL      R20 2 2      ; R20 := R20(R21)
172 [-]: GETGLOBAL R21 K2       ; R21 := 0x400E7765
173 [-]: MOVE      R22 R20      ; R22 := R20
174 [-]: CALL      R21 2 2      ; R21 := R21(R22)
175 [-]: TEST      R21 1        ; if R21 then PC := 208
176 [-]: JMP       208          ; PC := 208
177 [-]: GETGLOBAL R21 K1       ; R21 := 0x63B09107
178 [-]: GETGLOBAL R22 K42      ; R22 := heavyFrames
179 [-]: CALL      R21 2 4      ; R21,R22,R23 := R21(R22)
180 [-]: JMP       189          ; PC := 189
181 [-]: SELF      R26 R20 K37  ; R27 := R20; R26 := R20["0x8B598ED4"]
182 [-]: MOVE      R28 R25      ; R28 := R25
183 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
184 [-]: TEST      R26 0        ; if not R26 then PC := 189
185 [-]: JMP       189          ; PC := 189
186 [-]: GETGLOBAL R26 K43      ; R26 := kneelHeavyLoopAnim
187 [-]: MOVE      R26 R9       ; R26 := R9
188 [-]: JMP       191          ; PC := 191
189 [-]: TFORLOOP  R21 2        ; R24,R25 :=  R21(R22,R23); if R24 ~= nil then begin PC = 181; R23 := R24 end
190 [-]: JMP       181          ; PC := 181
191 [-]: GETUPVAL  R26 U9       ; R26 := U9
192 [-]: TEST      R26 1        ; if R26 then PC := 208
193 [-]: JMP       208          ; PC := 208
194 [-]: GETGLOBAL R26 K1       ; R26 := 0x63B09107
195 [-]: GETGLOBAL R27 K44      ; R27 := veryHeavyFrames
196 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
197 [-]: JMP       206          ; PC := 206
198 [-]: SELF      R31 R20 K37  ; R32 := R20; R31 := R20["0x8B598ED4"]
199 [-]: MOVE      R33 R30      ; R33 := R30
200 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
201 [-]: TEST      R31 0        ; if not R31 then PC := 206
202 [-]: JMP       206          ; PC := 206
203 [-]: GETGLOBAL R31 K45      ; R31 := kneelVeryHeavyLoopAnim
204 [-]: MOVE      R31 R9       ; R31 := R9
205 [-]: JMP       208          ; PC := 208
206 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 198; R28 := R29 end
207 [-]: JMP       198          ; PC := 198
208 [-]: GETUPVAL  R31 U9       ; R31 := U9
209 [-]: TEST      R31 1        ; if R31 then PC := 213
210 [-]: JMP       213          ; PC := 213
211 [-]: GETGLOBAL R31 K46      ; R31 := kneelLoopAnim
212 [-]: MOVE      R31 R9       ; R31 := R9
213 [-]: GETUPVAL  R31 U7       ; R31 := U7
214 [-]: SELF      R31 R31 K47  ; R32 := R31; R31 := R31["0x7DEB8965"]
215 [-]: MOVE      R33 R1       ; R33 := R1
216 [-]: CALL      R31 3 1      ; R31(R32,R33)
217 [-]: GETGLOBAL R31 K4       ; R31 := gBackgroundRegion
218 [-]: SELF      R31 R31 K26  ; R32 := R31; R31 := R31["0x90391273"]
219 [-]: GETUPVAL  R33 U6       ; R33 := U6
220 [-]: GETTABLE  R33 R33 K48  ; R33 := R33["PLAYER_LIGHT"]
221 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
222 [-]: MOVE      R31 R10      ; R31 := R10
223 [-]: GETGLOBAL R31 K2       ; R31 := 0x400E7765
224 [-]: GETUPVAL  R32 U10      ; R32 := U10
225 [-]: CALL      R31 2 2      ; R31 := R31(R32)
226 [-]: TEST      R31 1        ; if R31 then PC := 232
227 [-]: JMP       232          ; PC := 232
228 [-]: GETUPVAL  R31 U10      ; R31 := U10
229 [-]: SELF      R31 R31 K49  ; R32 := R31; R31 := R31["0xDDA3917C"]
230 [-]: CALL      R31 2 2      ; R31 := R31(R32)
231 [-]: MOVE      R31 R11      ; R31 := R11
232 [-]: GETUPVAL  R31 U7       ; R31 := U7
233 [-]: SELF      R31 R31 K50  ; R32 := R31; R31 := R31["0x6DA72501"]
234 [-]: CALL      R31 2 2      ; R31 := R31(R32)
235 [-]: MOVE      R31 R12      ; R31 := R12
236 [-]: GETUPVAL  R31 U13      ; R31 := U13
237 [-]: GETUPVAL  R32 U7       ; R32 := U7
238 [-]: SELF      R32 R32 K50  ; R33 := R32; R32 := R32["0x6DA72501"]
239 [-]: CALL      R32 2 2      ; R32 := R32(R33)
240 [-]: SETTABLE  R31 K51 R32  ; R31["Previous"] := R32
241 [-]: GETUPVAL  R31 U13      ; R31 := U13
242 [-]: GETUPVAL  R32 U7       ; R32 := U7
243 [-]: SELF      R32 R32 K50  ; R33 := R32; R32 := R32["0x6DA72501"]
244 [-]: CALL      R32 2 2      ; R32 := R32(R33)
245 [-]: SETTABLE  R31 K52 R32  ; R31["Target"] := R32
246 [-]: GETUPVAL  R31 U10      ; R31 := U10
247 [-]: SELF      R31 R31 K53  ; R32 := R31; R31 := R31["0xFCAE2926"]
248 [-]: LOADK     R33 K54      ; R33 := 2
249 [-]: CALL      R31 3 1      ; R31(R32,R33)
250 [-]: GETUPVAL  R31 U10      ; R31 := U10
251 [-]: SELF      R31 R31 K55  ; R32 := R31; R31 := R31["0xEC183DDC"]
252 [-]: GETUPVAL  R33 U13      ; R33 := U13
253 [-]: GETTABLE  R33 R33 K51  ; R33 := R33["Previous"]
254 [-]: GETGLOBAL R34 K10      ; R34 := 0x221C9700
255 [-]: LOADK     R35 K19      ; R35 := 0
256 [-]: LOADK     R36 K21      ; R36 := 0.5
257 [-]: LOADK     R37 K56      ; R37 := -0.5
258 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
259 [-]: ADD       R33 R33 R34  ; R33 := R33 + R34
260 [-]: CALL      R31 3 1      ; R31(R32,R33)
261 [-]: LOADK     R31 K7       ; R31 := 1
262 [-]: LOADK     R32 K57      ; R32 := 9
263 [-]: LOADK     R33 K7       ; R33 := 1
264 [-]: FORPREP   R31 288      ; R31 -= R33; PC := 288
265 [-]: GETUPVAL  R35 U5       ; R35 := U5
266 [-]: SELF      R35 R35 K58  ; R36 := R35; R35 := R35["0xAB436EF2"]
267 [-]: GETGLOBAL R37 K59      ; R37 := solarRing
268 [-]: GETGLOBAL R38 K60      ; R38 := EMPTY_SYMBOL
269 [-]: GETGLOBAL R39 K61      ; R39 := ZERO_VECTOR
270 [-]: GETUPVAL  R40 U14      ; R40 := U14
271 [-]: GETTABLE  R40 R40 K62  ; R40 := R40["RING_ROTATION"]
272 [-]: CALL      R35 6 2      ; R35 := R35(R36,R37,R38,R39,R40)
273 [-]: GETGLOBAL R36 K2       ; R36 := 0x400E7765
274 [-]: MOVE      R37 R35      ; R37 := R35
275 [-]: CALL      R36 2 2      ; R36 := R36(R37)
276 [-]: TEST      R36 1        ; if R36 then PC := 288
277 [-]: JMP       288          ; PC := 288
278 [-]: GETGLOBAL R36 K63      ; R36 := math
279 [-]: GETTABLE  R36 R36 K64  ; R36 := R36["0xD6F2D811"]
280 [-]: MOVE      R37 R34      ; R37 := R34
281 [-]: LOADK     R38 K65      ; R38 := 1.5
282 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
283 [-]: MUL       R36 R36 K66  ; R36 := R36 * 0.20000000298023
284 [-]: SELF      R37 R35 K67  ; R38 := R35; R37 := R35["0x9F133E77"]
285 [-]: MOVE      R39 R36      ; R39 := R36
286 [-]: MOVE      R40 R36      ; R40 := R36
287 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
288 [-]: FORLOOP   R31 265      ; R31 += R33; if R31 <= R32 then begin PC := 265; R34 := R31 end
289 [-]: LOADK     R37 K68      ; R37 := 8
290 [-]: LOADK     R38 K7       ; R38 := 1
291 [-]: MOVE      R39 R37      ; R39 := R37
292 [-]: LOADK     R40 K7       ; R40 := 1
293 [-]: FORPREP   R38 340      ; R38 -= R40; PC := 340
294 [-]: GETGLOBAL R42 K4       ; R42 := gBackgroundRegion
295 [-]: SELF      R42 R42 K15  ; R43 := R42; R42 := R42["0xBDD34CC6"]
296 [-]: GETGLOBAL R44 K69      ; R44 := edgeLineTypeB
297 [-]: GETGLOBAL R45 K61      ; R45 := ZERO_VECTOR
298 [-]: GETGLOBAL R46 K16      ; R46 := ZERO_ROTATION
299 [-]: CALL      R42 5 2      ; R42 := R42(R43,R44,R45,R46)
300 [-]: DIV       R43 R41 R37  ; R43 := R41 / R37
301 [-]: DIV       R43 R43 K54  ; R43 := R43 / 2
302 [-]: LOADK     R44 K70      ; R44 := 7
303 [-]: GETGLOBAL R45 K63      ; R45 := math
304 [-]: GETTABLE  R45 R45 K71  ; R45 := R45["0x96330A01"]
305 [-]: GETGLOBAL R46 K63      ; R46 := math
306 [-]: GETTABLE  R46 R46 K72  ; R46 := R46["pi"]
307 [-]: MUL       R46 R46 K54  ; R46 := R46 * 2
308 [-]: GETGLOBAL R47 K73      ; R47 := 0xA1FD035F
309 [-]: MOVE      R48 R43      ; R48 := R43
310 [-]: CALL      R47 2 2      ; R47 := R47(R48)
311 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
312 [-]: CALL      R45 2 2      ; R45 := R45(R46)
313 [-]: MUL       R45 R45 R44  ; R45 := R45 * R44
314 [-]: GETGLOBAL R46 K63      ; R46 := math
315 [-]: GETTABLE  R46 R46 K74  ; R46 := R46["0xBB3F1476"]
316 [-]: GETGLOBAL R47 K63      ; R47 := math
317 [-]: GETTABLE  R47 R47 K72  ; R47 := R47["pi"]
318 [-]: MUL       R47 R47 K54  ; R47 := R47 * 2
319 [-]: GETGLOBAL R48 K73      ; R48 := 0xA1FD035F
320 [-]: MOVE      R49 R43      ; R49 := R43
321 [-]: CALL      R48 2 2      ; R48 := R48(R49)
322 [-]: MUL       R47 R47 R48  ; R47 := R47 * R48
323 [-]: CALL      R46 2 2      ; R46 := R46(R47)
324 [-]: MUL       R46 R46 R44  ; R46 := R46 * R44
325 [-]: NEWTABLE  R47 1 0      ; R47 := {}
326 [-]: GETGLOBAL R48 K10      ; R48 := 0x221C9700
327 [-]: UNM       R49 R45      ; R49 := - R45
328 [-]: UNM       R50 R46      ; R50 := - R46
329 [-]: LOADK     R51 K19      ; R51 := 0
330 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
331 [-]: GETGLOBAL R49 K10      ; R49 := 0x221C9700
332 [-]: MOVE      R50 R45      ; R50 := R45
333 [-]: MOVE      R51 R46      ; R51 := R46
334 [-]: LOADK     R52 K19      ; R52 := 0
335 [-]: CALL      R49 4 0      ; R49,... := R49(R50,R51,R52)
336 [-]: SETLIST   R47 0 1      ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 0
337 [-]: SELF      R48 R42 K75  ; R49 := R42; R48 := R42["0x5BD03F6B"]
338 [-]: MOVE      R50 R47      ; R50 := R47
339 [-]: CALL      R48 3 1      ; R48(R49,R50)
340 [-]: FORLOOP   R38 294      ; R38 += R40; if R38 <= R39 then begin PC := 294; R41 := R38 end
341 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1595
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := gGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETGLOBAL R1 K2        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Initialized"]
  9 [-]: EQ        0 R1 K5      ; if R1 ~= "0x0" then PC := 41
 10 [-]: JMP       41           ; PC := 41
 11 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
 12 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x2D0B8A86"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x67D8B42"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K2        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["FortressLocation"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Velocity"]
 19 [-]: DIV       R3 K9 R3     ; R3 := 1 / R3
 20 [-]: GETGLOBAL R4 K2        ; R4 := _T
 21 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["FortressLocation"]
 22 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["MaxSplines"]
 23 [-]: MUL       R4 R3 R4     ; R4 := R3 * R4
 24 [-]: MOD       R4 R2 R4     ; R4 := R2 % R4
 25 [-]: GETGLOBAL R5 K2        ; R5 := _T
 26 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 27 [-]: GETGLOBAL R6 K12       ; R6 := math
 28 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["0xF7005A7B"]
 29 [-]: DIV       R7 R4 R3     ; R7 := R4 / R3
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: ADD       R6 K9 R6     ; R6 := 1 + R6
 32 [-]: SETTABLE  R5 K11 R6    ; R5["SplineIndex"] := R6
 33 [-]: GETGLOBAL R5 K2        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 35 [-]: MOD       R6 R4 R3     ; R6 := R4 % R3
 36 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 37 [-]: SETTABLE  R5 K14 R6    ; R5["Progress"] := R6
 38 [-]: GETGLOBAL R5 K2        ; R5 := _T
 39 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["FortressLocation"]
 40 [-]: SETTABLE  R5 K4 R0     ; R5["Initialized"] := R0
 41 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1607
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  49

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x5B0E7439"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R0 K2        ; R0 := 0x63B09107
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
 11 [-]: JMP       15           ; PC := 15
 12 [-]: GETUPVAL  R5 U3        ; R5 := U3
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 1       ; R5(R6)
 15 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 12; R2 := R3 end
 16 [-]: JMP       12           ; PC := 12
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 20 [-]: MOVE      R5 R4        ; R5 := R4
 21 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 22 [-]: MOVE      R5 R5        ; R5 := R5
 23 [-]: LOADK     R5 K3        ; R5 := 1
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LOADK     R7 K3        ; R7 := 1
 27 [-]: FORPREP   R5 328       ; R5 -= R7; PC := 328
 28 [-]: GETUPVAL  R9 U0        ; R9 := U0
 29 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 30 [-]: GETGLOBAL R10 K4       ; R10 := 0xCAA43ABB
 31 [-]: GETTABLE  R11 R9 K5    ; R11 := R9["decoRedux"]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: MOVE      R11 R0       ; R11 := R0
 34 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 35 [-]: GETUPVAL  R13 U6       ; R13 := U6
 36 [-]: GETTABLE  R13 R13 K7   ; R13 := R13["Region"]
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: TEST      R12 0        ; if not R12 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: GETTABLE  R12 R9 K8    ; R12 := R9["name"]
 41 [-]: GETUPVAL  R13 U6       ; R13 := U6
 42 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["Tag"]
 43 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETUPVAL  R12 U6       ; R12 := U6
 46 [-]: SETTABLE  R12 K7 R9    ; R12["Region"] := R9
 47 [-]: MOVE      R11 R1       ; R11 := R1
 48 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 49 [-]: GETTABLE  R13 R9 K5    ; R13 := R9["decoRedux"]
 50 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 51 [-]: TEST      R12 1        ; if R12 then PC := 56
 52 [-]: JMP       56           ; PC := 56
 53 [-]: GETUPVAL  R12 U7       ; R12 := U7
 54 [-]: GETTABLE  R13 R9 K5    ; R13 := R9["decoRedux"]
 55 [-]: CALL      R12 2 1      ; R12(R13)
 56 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 57 [-]: MOVE      R13 R10      ; R13 := R10
 58 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 59 [-]: TEST      R12 0        ; if not R12 then PC := 73
 60 [-]: JMP       73           ; PC := 73
 61 [-]: GETGLOBAL R12 K4       ; R12 := 0xCAA43ABB
 62 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 63 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 64 [-]: MOVE      R10 R12      ; R10 := R12
 65 [-]: GETGLOBAL R12 K6       ; R12 := 0x400E7765
 66 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 67 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 68 [-]: TEST      R12 1        ; if R12 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETUPVAL  R12 U7       ; R12 := U7
 71 [-]: GETTABLE  R13 R9 K10   ; R13 := R9["deco"]
 72 [-]: CALL      R12 2 1      ; R12(R13)
 73 [-]: TEST      R11 0        ; if not R11 then PC := 234
 74 [-]: JMP       234          ; PC := 234
 75 [-]: GETUPVAL  R12 U6       ; R12 := U6
 76 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["SplinePoints"]
 77 [-]: LOADNIL   R13 R13      ; R13 := nil
 78 [-]: LOADK     R14 K3       ; R14 := 1
 79 [-]: LEN       R15 R12      ; R15 := # R12
 80 [-]: SUB       R15 R15 K12  ; R15 := R15 - 3
 81 [-]: LOADK     R16 K3       ; R16 := 1
 82 [-]: FORPREP   R14 136      ; R14 -= R16; PC := 136
 83 [-]: GETGLOBAL R18 K6       ; R18 := 0x400E7765
 84 [-]: GETUPVAL  R19 U6       ; R19 := U6
 85 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["Splines"]
 86 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
 87 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 88 [-]: TEST      R18 1        ; if R18 then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETGLOBAL R18 K14      ; R18 := gBackgroundRegion
 91 [-]: SELF      R18 R18 K15  ; R19 := R18; R18 := R18["0x9B0A3887"]
 92 [-]: GETUPVAL  R20 U6       ; R20 := U6
 93 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["Splines"]
 94 [-]: GETTABLE  R20 R20 R17  ; R20 := R20[R17]
 95 [-]: CALL      R18 3 1      ; R18(R19,R20)
 96 [-]: GETGLOBAL R18 K14      ; R18 := gBackgroundRegion
 97 [-]: SELF      R18 R18 K16  ; R19 := R18; R18 := R18["0xBDD34CC6"]
 98 [-]: GETGLOBAL R20 K17      ; R20 := splineConnectionType
 99 [-]: GETGLOBAL R21 K18      ; R21 := ZERO_VECTOR
100 [-]: GETGLOBAL R22 K19      ; R22 := ZERO_ROTATION
101 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
102 [-]: MOVE      R13 R18      ; R13 := R18
103 [-]: GETUPVAL  R18 U6       ; R18 := U6
104 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["Splines"]
105 [-]: SETTABLE  R18 R17 R13  ; R18[R17] := R13
106 [-]: NEWTABLE  R18 4 0      ; R18 := {}
107 [-]: GETTABLE  R19 R12 R17  ; R19 := R12[R17]
108 [-]: ADD       R20 R17 K3   ; R20 := R17 + 1
109 [-]: GETTABLE  R20 R12 R20  ; R20 := R12[R20]
110 [-]: ADD       R21 R17 K20  ; R21 := R17 + 2
111 [-]: GETTABLE  R21 R12 R21  ; R21 := R12[R21]
112 [-]: ADD       R22 R17 K12  ; R22 := R17 + 3
113 [-]: GETTABLE  R22 R12 R22  ; R22 := R12[R22]
114 [-]: SETLIST   R18 4 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
115 [-]: SELF      R19 R13 K21  ; R20 := R13; R19 := R13["0x5BD03F6B"]
116 [-]: MOVE      R21 R18      ; R21 := R18
117 [-]: CALL      R19 3 1      ; R19(R20,R21)
118 [-]: SELF      R19 R13 K22  ; R20 := R13; R19 := R13["0xA20F64C0"]
119 [-]: GETGLOBAL R21 K23      ; R21 := 0xB5A59043
120 [-]: LOADK     R22 K24      ; R22 := 0
121 [-]: LOADK     R23 K25      ; R23 := 255
122 [-]: LOADK     R24 K24      ; R24 := 0
123 [-]: LOADK     R25 K25      ; R25 := 255
124 [-]: CALL      R21 5 0      ; R21,... := R21(R22,R23,R24,R25)
125 [-]: CALL      R19 0 1      ; R19(R20,...)
126 [-]: SELF      R19 R13 K26  ; R20 := R13; R19 := R13["0xD63FF2C2"]
127 [-]: GETGLOBAL R21 K27      ; R21 := 0x994A1A7
128 [-]: LOADK     R22 K24      ; R22 := 0
129 [-]: LOADK     R23 K28      ; R23 := 30
130 [-]: CALL      R21 3 0      ; R21,... := R21(R22,R23)
131 [-]: CALL      R19 0 1      ; R19(R20,...)
132 [-]: SELF      R19 R13 K29  ; R20 := R13; R19 := R13["0x7DBDDA0B"]
133 [-]: MOVE      R21 R0       ; R21 := R0
134 [-]: MOVE      R22 R1       ; R22 := R1
135 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
136 [-]: FORLOOP   R14 83       ; R14 += R16; if R14 <= R15 then begin PC := 83; R17 := R14 end
137 [-]: GETGLOBAL R19 K30      ; R19 := _T
138 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["FortressLocation"]
139 [-]: GETUPVAL  R20 U6       ; R20 := U6
140 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["Splines"]
141 [-]: LEN       R20 R20      ; R20 := # R20
142 [-]: SETTABLE  R19 K32 R20  ; R19["MaxSplines"] := R20
143 [-]: GETUPVAL  R19 U6       ; R19 := U6
144 [-]: GETGLOBAL R20 K30      ; R20 := _T
145 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["FortressLocation"]
146 [-]: GETTABLE  R20 R20 K32  ; R20 := R20["MaxSplines"]
147 [-]: GETUPVAL  R21 U6       ; R21 := U6
148 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["LoopTime"]
149 [-]: DIV       R20 R20 R21  ; R20 := R20 / R21
150 [-]: SETTABLE  R19 K33 R20  ; R19["Velocity"] := R20
151 [-]: GETGLOBAL R19 K30      ; R19 := _T
152 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["FortressLocation"]
153 [-]: GETUPVAL  R20 U6       ; R20 := U6
154 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["Velocity"]
155 [-]: SETTABLE  R19 K33 R20  ; R19["Velocity"] := R20
156 [-]: GETGLOBAL R19 K6       ; R19 := 0x400E7765
157 [-]: GETGLOBAL R20 K35      ; R20 := gGameData
158 [-]: CALL      R19 2 2      ; R19 := R19(R20)
159 [-]: TEST      R19 1        ; if R19 then PC := 164
160 [-]: JMP       164          ; PC := 164
161 [-]: GETUPVAL  R19 U8       ; R19 := U8
162 [-]: MOVE      R20 R1       ; R20 := R1
163 [-]: CALL      R19 2 1      ; R19(R20)
164 [-]: GETUPVAL  R19 U6       ; R19 := U6
165 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["Splines"]
166 [-]: GETGLOBAL R20 K30      ; R20 := _T
167 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["FortressLocation"]
168 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["SplineIndex"]
169 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
170 [-]: SELF      R19 R19 K37  ; R20 := R19; R19 := R19["0xAC71FD5A"]
171 [-]: GETGLOBAL R21 K30      ; R21 := _T
172 [-]: GETTABLE  R21 R21 K31  ; R21 := R21["FortressLocation"]
173 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["Progress"]
174 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
175 [-]: GETUPVAL  R20 U1       ; R20 := U1
176 [-]: SELF      R20 R20 K39  ; R21 := R20; R20 := R20["0x2721E25D"]
177 [-]: GETUPVAL  R22 U6       ; R22 := U6
178 [-]: GETTABLE  R22 R22 K7   ; R22 := R22["Region"]
179 [-]: GETGLOBAL R23 K40      ; R23 := 0x221C9700
180 [-]: GETTABLE  R24 R19 K41  ; R24 := R19["x"]
181 [-]: MUL       R24 R24 K42  ; R24 := R24 * 0.041000001132488
182 [-]: ADD       R24 K43 R24  ; R24 := 0.5 + R24
183 [-]: GETTABLE  R25 R19 K44  ; R25 := R19["y"]
184 [-]: ADD       R25 R25 K45  ; R25 := R25 + 0.029999999329448
185 [-]: MUL       R25 R25 K46  ; R25 := R25 * 0.043000001460314
186 [-]: SUB       R25 K43 R25  ; R25 := 0.5 - R25
187 [-]: GETUPVAL  R26 U9       ; R26 := U9
188 [-]: GETTABLE  R26 R26 K47  ; R26 := R26["MAX_ZOOM"]
189 [-]: SUB       R26 R26 K48  ; R26 := R26 - 0.30000001192093
190 [-]: GETTABLE  R27 R19 K49  ; R27 := R19["z"]
191 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
192 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
193 [-]: CALL      R20 0 1      ; R20(R21,...)
194 [-]: SETTABLE  R9 K50 R19   ; R9["pos"] := R19
195 [-]: LOADK     R20 K3       ; R20 := 1
196 [-]: GETUPVAL  R21 U6       ; R21 := U6
197 [-]: GETTABLE  R21 R21 K7   ; R21 := R21["Region"]
198 [-]: GETTABLE  R21 R21 K51  ; R21 := R21["tiers"]
199 [-]: LEN       R21 R21      ; R21 := # R21
200 [-]: LOADK     R22 K3       ; R22 := 1
201 [-]: FORPREP   R20 233      ; R20 -= R22; PC := 233
202 [-]: GETUPVAL  R24 U6       ; R24 := U6
203 [-]: GETTABLE  R24 R24 K7   ; R24 := R24["Region"]
204 [-]: GETTABLE  R24 R24 K51  ; R24 := R24["tiers"]
205 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
206 [-]: GETTABLE  R24 R24 K52  ; R24 := R24["sectors"]
207 [-]: LOADK     R25 K3       ; R25 := 1
208 [-]: LEN       R26 R24      ; R26 := # R24
209 [-]: LOADK     R27 K3       ; R27 := 1
210 [-]: FORPREP   R25 232      ; R25 -= R27; PC := 232
211 [-]: GETTABLE  R29 R24 R28  ; R29 := R24[R28]
212 [-]: GETTABLE  R30 R29 K53  ; R30 := R29["decoOffset"]
213 [-]: ADD       R30 R19 R30  ; R30 := R19 + R30
214 [-]: SETTABLE  R29 K50 R30  ; R29["pos"] := R30
215 [-]: GETGLOBAL R30 K54      ; R30 := 0x9FAED6BC
216 [-]: GETTABLE  R31 R29 K8   ; R31 := R29["name"]
217 [-]: CALL      R30 2 2      ; R30 := R30(R31)
218 [-]: GETUPVAL  R31 U6       ; R31 := U6
219 [-]: GETTABLE  R31 R31 K55  ; R31 := R31["Sectors"]
220 [-]: GETTABLE  R31 R31 R30  ; R31 := R31[R30]
221 [-]: EQ        1 R31 K1     ; if R31 == nil then PC := 229
222 [-]: JMP       229          ; PC := 229
223 [-]: GETGLOBAL R31 K56      ; R31 := 0x93B1256B
224 [-]: LOADK     R32 K57      ; R32 := "Ignoring duplicate fortress sector"
225 [-]: GETTABLE  R33 R29 K8   ; R33 := R29["name"]
226 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
227 [-]: CALL      R31 2 1      ; R31(R32)
228 [-]: JMP       232          ; PC := 232
229 [-]: GETUPVAL  R31 U6       ; R31 := U6
230 [-]: GETTABLE  R31 R31 K55  ; R31 := R31["Sectors"]
231 [-]: SETTABLE  R31 R30 R29  ; R31[R30] := R29
232 [-]: FORLOOP   R25 211      ; R25 += R27; if R25 <= R26 then begin PC := 211; R28 := R25 end
233 [-]: FORLOOP   R20 202      ; R20 += R22; if R20 <= R21 then begin PC := 202; R23 := R20 end
234 [-]: GETGLOBAL R31 K40      ; R31 := 0x221C9700
235 [-]: GETTABLE  R32 R9 K50   ; R32 := R9["pos"]
236 [-]: GETTABLE  R32 R32 K41  ; R32 := R32["x"]
237 [-]: GETTABLE  R33 R9 K50   ; R33 := R9["pos"]
238 [-]: GETTABLE  R33 R33 K44  ; R33 := R33["y"]
239 [-]: GETTABLE  R34 R9 K50   ; R34 := R9["pos"]
240 [-]: GETTABLE  R34 R34 K49  ; R34 := R34["z"]
241 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
242 [-]: GETUPVAL  R32 U10      ; R32 := U10
243 [-]: MOVE      R33 R31      ; R33 := R31
244 [-]: CALL      R32 2 2      ; R32 := R32(R33)
245 [-]: MOVE      R31 R32      ; R31 := R32
246 [-]: SETTABLE  R9 K50 R31   ; R9["pos"] := R31
247 [-]: GETGLOBAL R32 K14      ; R32 := gBackgroundRegion
248 [-]: SELF      R32 R32 K16  ; R33 := R32; R32 := R32["0xBDD34CC6"]
249 [-]: MOVE      R34 R10      ; R34 := R10
250 [-]: MOVE      R35 R31      ; R35 := R31
251 [-]: GETGLOBAL R36 K58      ; R36 := 0x1E4F6281
252 [-]: LOADK     R37 K24      ; R37 := 0
253 [-]: LOADK     R38 K59      ; R38 := -15
254 [-]: LOADK     R39 K24      ; R39 := 0
255 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
256 [-]: CALL      R32 0 2      ; R32 := R32(R33,...)
257 [-]: SETTABLE  R9 K60 R32   ; R9["instance"] := R32
258 [-]: GETGLOBAL R33 K6       ; R33 := 0x400E7765
259 [-]: GETUPVAL  R34 U4       ; R34 := U4
260 [-]: GETTABLE  R34 R34 R8   ; R34 := R34[R8]
261 [-]: CALL      R33 2 2      ; R33 := R33(R34)
262 [-]: TEST      R33 1        ; if R33 then PC := 269
263 [-]: JMP       269          ; PC := 269
264 [-]: GETGLOBAL R33 K14      ; R33 := gBackgroundRegion
265 [-]: SELF      R33 R33 K15  ; R34 := R33; R33 := R33["0x9B0A3887"]
266 [-]: GETUPVAL  R35 U4       ; R35 := U4
267 [-]: GETTABLE  R35 R35 R8   ; R35 := R35[R8]
268 [-]: CALL      R33 3 1      ; R33(R34,R35)
269 [-]: GETUPVAL  R33 U4       ; R33 := U4
270 [-]: SETTABLE  R33 R8 R32   ; R33[R8] := R32
271 [-]: SELF      R33 R32 K61  ; R34 := R32; R33 := R32["0x6A7E5F92"]
272 [-]: GETTABLE  R35 R9 K62   ; R35 := R9["scale"]
273 [-]: CALL      R33 3 1      ; R33(R34,R35)
274 [-]: GETUPVAL  R33 U11      ; R33 := U11
275 [-]: GETTABLE  R33 R33 R8   ; R33 := R33[R8]
276 [-]: EQ        1 R33 K63    ; if R33 == "0x1" then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: MOVE      R33 R0       ; R33 := R0
279 [-]: MOVE      R33 R1       ; R33 := R1
280 [-]: TEST      R33 0        ; if not R33 then PC := 299
281 [-]: JMP       299          ; PC := 299
282 [-]: SELF      R34 R32 K29  ; R35 := R32; R34 := R32["0x7DBDDA0B"]
283 [-]: MOVE      R36 R0       ; R36 := R0
284 [-]: MOVE      R37 R1       ; R37 := R1
285 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
286 [-]: SELF      R34 R32 K64  ; R35 := R32; R34 := R32["0x15D4DAEE"]
287 [-]: GETGLOBAL R36 K65      ; R36 := gEntityType
288 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
289 [-]: LOADK     R35 K3       ; R35 := 1
290 [-]: LEN       R36 R34      ; R36 := # R34
291 [-]: LOADK     R37 K3       ; R37 := 1
292 [-]: FORPREP   R35 298      ; R35 -= R37; PC := 298
293 [-]: GETTABLE  R39 R34 R38  ; R39 := R34[R38]
294 [-]: SELF      R39 R39 K29  ; R40 := R39; R39 := R39["0x7DBDDA0B"]
295 [-]: MOVE      R41 R0       ; R41 := R0
296 [-]: MOVE      R42 R1       ; R42 := R1
297 [-]: CALL      R39 4 1      ; R39(R40,R41,R42)
298 [-]: FORLOOP   R35 293      ; R35 += R37; if R35 <= R36 then begin PC := 293; R38 := R35 end
299 [-]: GETGLOBAL R39 K40      ; R39 := 0x221C9700
300 [-]: LOADK     R40 K24      ; R40 := 0
301 [-]: GETTABLE  R41 R9 K62   ; R41 := R9["scale"]
302 [-]: MUL       R41 R41 K66  ; R41 := R41 * 1.0499999523163
303 [-]: GETUPVAL  R42 U12      ; R42 := U12
304 [-]: GETTABLE  R42 R42 K67  ; R42 := R42["PLANET_UNIT_MULTIPLIER"]
305 [-]: MUL       R41 R41 R42  ; R41 := R41 * R42
306 [-]: LOADK     R42 K68      ; R42 := 9.9999997473788e-05
307 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
308 [-]: ADD       R39 R31 R39  ; R39 := R31 + R39
309 [-]: GETUPVAL  R40 U2       ; R40 := U2
310 [-]: GETUPVAL  R41 U13      ; R41 := U13
311 [-]: GETTABLE  R42 R9 K8    ; R42 := R9["name"]
312 [-]: MOVE      R43 R39      ; R43 := R39
313 [-]: MOVE      R44 R0       ; R44 := R0
314 [-]: LOADK     R45 K20      ; R45 := 2
315 [-]: MOVE      R46 R33      ; R46 := R33
316 [-]: NEWTABLE  R47 0 2      ; R47 := {}
317 [-]: SETTABLE  R47 K69 K70  ; R47["RollOver"] := "RollOverRegionLabel"
318 [-]: SETTABLE  R47 K71 K72  ; R47["RollOut"] := "RollOutRegionLabel"
319 [-]: MOVE      R48 R8       ; R48 := R8
320 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
321 [-]: SETTABLE  R40 R8 R41   ; R40[R8] := R41
322 [-]: TEST      R11 0        ; if not R11 then PC := 328
323 [-]: JMP       328          ; PC := 328
324 [-]: GETUPVAL  R40 U6       ; R40 := U6
325 [-]: GETUPVAL  R41 U5       ; R41 := U5
326 [-]: LEN       R41 R41      ; R41 := # R41
327 [-]: SETTABLE  R40 K73 R41  ; R40["SubLabelIndex"] := R41
328 [-]: FORLOOP   R5 28        ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
329 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1722
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SETTABLE  R1 K0 R2     ; R1["RegionLabel"] := R2
  6 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1726
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 K1     ; R1["RegionLabel"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1730
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xBB3AACF2"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETUPVAL  R0 U3        ; R0 := U3
  8 [-]: CALL      R0 1 1       ; R0()
  9 [-]: NEWTABLE  R0 0 0       ; R0 := {}
 10 [-]: MOVE      R0 R4        ; R0 := R4
 11 [-]: LOADNIL   R0 R0        ; R0 := nil
 12 [-]: LOADK     R1 K1        ; R1 := 1
 13 [-]: GETUPVAL  R2 U5        ; R2 := U5
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 K1        ; R3 := 1
 16 [-]: FORPREP   R1 30        ; R1 -= R3; PC := 30
 17 [-]: GETUPVAL  R5 U5        ; R5 := U5
 18 [-]: GETTABLE  R0 R5 R4     ; R0 := R5[R4]
 19 [-]: GETGLOBAL R5 K2        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["instance"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R5 U4        ; R5 := U4
 25 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["scale"]
 26 [-]: GETUPVAL  R7 U6        ; R7 := U6
 27 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
 28 [-]: MUL       R6 R6 R7     ; R6 := R6 * R7
 29 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 30 [-]: FORLOOP   R1 17        ; R1 += R3; if R1 <= R2 then begin PC := 17; R4 := R1 end
 31 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1745
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["name"]
  2 [-]: LOADK     R2 K1        ; R2 := 1
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: LEN       R3 R3        ; R3 := # R3
  5 [-]: LOADK     R4 K1        ; R4 := 1
  6 [-]: FORPREP   R2 37        ; R2 -= R4; PC := 37
  7 [-]: LOADK     R6 K1        ; R6 := 1
  8 [-]: GETUPVAL  R7 U0        ; R7 := U0
  9 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 10 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["regionLinks"]
 11 [-]: LEN       R7 R7        ; R7 := # R7
 12 [-]: LOADK     R8 K1        ; R8 := 1
 13 [-]: FORPREP   R6 36        ; R6 -= R8; PC := 36
 14 [-]: GETUPVAL  R10 U0       ; R10 := U0
 15 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 16 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["regionLinks"]
 17 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 18 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: LOADK     R10 K1       ; R10 := 1
 21 [-]: GETUPVAL  R11 U1       ; R11 := U1
 22 [-]: LEN       R11 R11      ; R11 := # R11
 23 [-]: LOADK     R12 K1       ; R12 := 1
 24 [-]: FORPREP   R10 35       ; R10 -= R12; PC := 35
 25 [-]: GETUPVAL  R14 U0       ; R14 := U0
 26 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
 27 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["instance"]
 28 [-]: GETUPVAL  R15 U1       ; R15 := U1
 29 [-]: GETTABLE  R15 R15 R13  ; R15 := R15[R13]
 30 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 35
 31 [-]: JMP       35           ; PC := 35
 32 [-]: GETUPVAL  R14 U1       ; R14 := U1
 33 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 34 [-]: RETURN    R14 2        ; return R14
 35 [-]: FORLOOP   R10 25       ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
 36 [-]: FORLOOP   R6 14        ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
 37 [-]: FORLOOP   R2 7         ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
 38 [-]: LOADNIL   R14 R14      ; R14 := nil
 39 [-]: RETURN    R14 2        ; return R14
 40 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1762
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x994A1A7
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MIN_ZOOM"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MAX_ZOOM"]
  6 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x6374FD98
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mCurVal"]
 10 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["minValue"]
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["maxValue"]
 12 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 13 [-]: SELF      R2 R0 K7     ; R3 := R0; R2 := R0["0x3B43F25"]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: GETGLOBAL R4 K9        ; R4 := 0x93034B55
 18 [-]: LOADK     R5 K10       ; R5 := 1
 19 [-]: LOADK     R6 K11       ; R6 := 0.10000000149012
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: SETTABLE  R3 K8 R4     ; R3["mDragMultiplier"] := R4
 23 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1769
; #Upvalues:       20
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: GETGLOBAL R0 K0        ; R0 := gPlayerProfileMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  3 [-]: LOADK     R2 K2        ; R2 := 0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x400E7765
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: TEST      R5 1         ; if R5 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: GETGLOBAL R5 K4        ; R5 := _G
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["StalkerMode"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 34
 14 [-]: JMP       34           ; PC := 34
 15 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0["0x654F1092"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x400E7765
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5["0x722B1CB7"]
 23 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 24 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6["0x5EC7A3D2"]
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: MOVE      R2 R6        ; R2 := R6
 27 [-]: SELF      R6 R5 K9     ; R7 := R5; R6 := R5["0x30BDE7F"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: GETGLOBAL R7 K10       ; R7 := 0xCAA43ABB
 30 [-]: GETTABLE  R8 R6 K11    ; R8 := R6["mShip"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: MOVE      R3 R7        ; R3 := R7
 33 [-]: GETTABLE  R4 R6 K12    ; R4 := R6["mShipExterior"]
 34 [-]: LOADK     R7 K13       ; R7 := "Earth"
 35 [-]: MOVE      R8 R0        ; R8 := R0
 36 [-]: LOADK     R9 K14       ; R9 := 1
 37 [-]: GETUPVAL  R10 U0       ; R10 := U0
 38 [-]: LEN       R10 R10      ; R10 := # R10
 39 [-]: LOADK     R11 K14      ; R11 := 1
 40 [-]: FORPREP   R9 74        ; R9 -= R11; PC := 74
 41 [-]: GETUPVAL  R13 U0       ; R13 := U0
 42 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 43 [-]: GETGLOBAL R14 K3       ; R14 := 0x400E7765
 44 [-]: MOVE      R15 R13      ; R15 := R13
 45 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 46 [-]: TEST      R14 1        ; if R14 then PC := 74
 47 [-]: JMP       74           ; PC := 74
 48 [-]: SELF      R14 R13 K15  ; R15 := R13; R14 := R13["0x80A80EEB"]
 49 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 50 [-]: GETGLOBAL R15 K16      ; R15 := Lotus_Game
 51 [-]: GETTABLE  R15 R15 K17  ; R15 := R15["RadialRegion_RCS_LOCKED"]
 52 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 74
 53 [-]: JMP       74           ; PC := 74
 54 [-]: GETGLOBAL R14 K18      ; R14 := 0xD1E7609B
 55 [-]: LOADK     R15 K19      ; R15 := "/"
 56 [-]: GETTABLE  R16 R13 K20  ; R16 := R13["name"]
 57 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 58 [-]: LEN       R15 R14      ; R15 := # R14
 59 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
 60 [-]: EQ        1 R14 R2     ; if R14 == R2 then PC := 63
 61 [-]: JMP       63           ; PC := 63
 62 [-]: MOVE      R8 R0        ; R8 := R0
 63 [-]: MOVE      R8 R1        ; R8 := R1
 64 [-]: TEST      R8 1         ; if R8 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: EQ        0 R14 R7     ; if R14 ~= R7 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: MOVE      R1 R13       ; R1 := R13
 69 [-]: GETUPVAL  R15 U1       ; R15 := U1
 70 [-]: SETTABLE  R15 K21 R12  ; R15["RegionIndex"] := R12
 71 [-]: TEST      R8 0         ; if not R8 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: JMP       75           ; PC := 75
 74 [-]: FORLOOP   R9 41        ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
 75 [-]: TEST      R8 1         ; if R8 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R2 R7        ; R2 := R7
 78 [-]: EQ        1 R1 K22     ; if R1 == nil then PC := 124
 79 [-]: JMP       124          ; PC := 124
 80 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 81 [-]: MOVE      R16 R3       ; R16 := R3
 82 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 83 [-]: TEST      R15 1        ; if R15 then PC := 124
 84 [-]: JMP       124          ; PC := 124
 85 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
 86 [-]: GETUPVAL  R16 U1       ; R16 := U1
 87 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Deco"]
 88 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 89 [-]: TEST      R15 0        ; if not R15 then PC := 101
 90 [-]: JMP       101          ; PC := 101
 91 [-]: GETUPVAL  R15 U1       ; R15 := U1
 92 [-]: GETGLOBAL R16 K24      ; R16 := gBackgroundRegion
 93 [-]: SELF      R16 R16 K25  ; R17 := R16; R16 := R16["0xBDD34CC6"]
 94 [-]: GETGLOBAL R18 K26      ; R18 := lisetDecorationType
 95 [-]: GETTABLE  R19 R1 K27   ; R19 := R1["instance"]
 96 [-]: SELF      R19 R19 K28  ; R20 := R19; R19 := R19["0x6DA72501"]
 97 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 98 [-]: GETGLOBAL R20 K29      ; R20 := ZERO_ROTATION
 99 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
100 [-]: SETTABLE  R15 K23 R16  ; R15["Deco"] := R16
101 [-]: GETUPVAL  R15 U1       ; R15 := U1
102 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Deco"]
103 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15["0x6A7E5F92"]
104 [-]: LOADK     R17 K31      ; R17 := 0.00069999997504056
105 [-]: CALL      R15 3 1      ; R15(R16,R17)
106 [-]: GETUPVAL  R15 U1       ; R15 := U1
107 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Deco"]
108 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15["0xE031E3AB"]
109 [-]: GETGLOBAL R17 K33      ; R17 := 0x7C282057
110 [-]: MOVE      R18 R3       ; R18 := R3
111 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
112 [-]: CALL      R15 0 1      ; R15(R16,...)
113 [-]: GETUPVAL  R15 U1       ; R15 := U1
114 [-]: GETTABLE  R15 R15 K23  ; R15 := R15["Deco"]
115 [-]: SELF      R15 R15 K34  ; R16 := R15; R15 := R15["0xC2123CF5"]
116 [-]: GETTABLE  R17 R4 K35   ; R17 := R4["mSkinFlavourItem"]
117 [-]: GETTABLE  R18 R4 K36   ; R18 := R4["mColors"]
118 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
119 [-]: GETUPVAL  R15 U1       ; R15 := U1
120 [-]: GETTABLE  R16 R1 K27   ; R16 := R1["instance"]
121 [-]: SELF      R16 R16 K28  ; R17 := R16; R16 := R16["0x6DA72501"]
122 [-]: CALL      R16 2 2      ; R16 := R16(R17)
123 [-]: SETTABLE  R15 K37 R16  ; R15["AnchorPosition"] := R16
124 [-]: GETGLOBAL R15 K3       ; R15 := 0x400E7765
125 [-]: GETUPVAL  R16 U2       ; R16 := U2
126 [-]: CALL      R15 2 2      ; R15 := R15(R16)
127 [-]: TEST      R15 1        ; if R15 then PC := 160
128 [-]: JMP       160          ; PC := 160
129 [-]: GETUPVAL  R15 U2       ; R15 := U2
130 [-]: SELF      R15 R15 K38  ; R16 := R15; R15 := R15["0xEC183DDC"]
131 [-]: GETUPVAL  R17 U3       ; R17 := U3
132 [-]: GETGLOBAL R18 K39      ; R18 := 0x221C9700
133 [-]: LOADK     R19 K2       ; R19 := 0
134 [-]: LOADK     R20 K2       ; R20 := 0
135 [-]: LOADK     R21 K40      ; R21 := 20
136 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
137 [-]: ADD       R17 R17 R18  ; R17 := R17 + R18
138 [-]: CALL      R15 3 1      ; R15(R16,R17)
139 [-]: GETUPVAL  R15 U4       ; R15 := U4
140 [-]: GETUPVAL  R16 U3       ; R16 := U3
141 [-]: GETGLOBAL R17 K39      ; R17 := 0x221C9700
142 [-]: LOADK     R18 K2       ; R18 := 0
143 [-]: LOADK     R19 K2       ; R19 := 0
144 [-]: LOADK     R20 K42      ; R20 := 4
145 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
146 [-]: ADD       R16 R16 R17  ; R16 := R16 + R17
147 [-]: SETTABLE  R15 K41 R16  ; R15["Target"] := R16
148 [-]: GETUPVAL  R15 U4       ; R15 := U4
149 [-]: GETTABLE  R15 R15 K43  ; R15 := R15["Prop"]
150 [-]: SELF      R15 R15 K44  ; R16 := R15; R15 := R15["0x5A7A6B1"]
151 [-]: LOADK     R17 K2       ; R17 := 0
152 [-]: CALL      R15 3 1      ; R15(R16,R17)
153 [-]: GETUPVAL  R15 U4       ; R15 := U4
154 [-]: GETTABLE  R15 R15 K43  ; R15 := R15["Prop"]
155 [-]: SELF      R15 R15 K45  ; R16 := R15; R15 := R15["0xDB349344"]
156 [-]: LOADK     R17 K14      ; R17 := 1
157 [-]: CALL      R15 3 1      ; R15(R16,R17)
158 [-]: GETUPVAL  R15 U4       ; R15 := U4
159 [-]: SETTABLE  R15 K46 K47  ; R15["Region"] := -1
160 [-]: GETUPVAL  R15 U6       ; R15 := U6
161 [-]: GETTABLE  R15 R15 K48  ; R15 := R15["0xF81722A2"]
162 [-]: GETUPVAL  R16 U7       ; R16 := U7
163 [-]: LOADK     R17 K14      ; R17 := 1
164 [-]: LOADK     R18 K49      ; R18 := 1.5
165 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
166 [-]: MOVE      R15 R5       ; R15 := R5
167 [-]: GETUPVAL  R15 U8       ; R15 := U8
168 [-]: GETTABLE  R15 R15 K50  ; R15 := R15["mCurrentScroll"]
169 [-]: GETTABLE  R15 R15 K51  ; R15 := R15["x"]
170 [-]: GETUPVAL  R16 U8       ; R16 := U8
171 [-]: GETTABLE  R16 R16 K50  ; R16 := R16["mCurrentScroll"]
172 [-]: GETTABLE  R16 R16 K52  ; R16 := R16["y"]
173 [-]: GETUPVAL  R17 U9       ; R17 := U9
174 [-]: GETTABLE  R17 R17 K53  ; R17 := R17["STARTING_ZOOM"]
175 [-]: SUB       R17 R17 K54  ; R17 := R17 - 80
176 [-]: GETUPVAL  R18 U10      ; R18 := U10
177 [-]: SELF      R18 R18 K44  ; R19 := R18; R18 := R18["0x5A7A6B1"]
178 [-]: MOVE      R20 R17      ; R20 := R17
179 [-]: CALL      R18 3 1      ; R18(R19,R20)
180 [-]: LOADNIL   R18 R18      ; R18 := nil
181 [-]: GETGLOBAL R19 K3       ; R19 := 0x400E7765
182 [-]: GETGLOBAL R20 K4       ; R20 := _G
183 [-]: GETTABLE  R20 R20 K55  ; R20 := R20["JunctionComplete"]
184 [-]: CALL      R19 2 2      ; R19 := R19(R20)
185 [-]: TEST      R19 1        ; if R19 then PC := 251
186 [-]: JMP       251          ; PC := 251
187 [-]: LOADNIL   R19 R19      ; R19 := nil
188 [-]: GETGLOBAL R20 K56      ; R20 := 0x63B09107
189 [-]: GETUPVAL  R21 U11      ; R21 := U11
190 [-]: CALL      R20 2 4      ; R20,R21,R22 := R20(R21)
191 [-]: JMP       212          ; PC := 212
192 [-]: GETTABLE  R25 R24 K57  ; R25 := R24["IsJunction"]
193 [-]: TEST      R25 0        ; if not R25 then PC := 212
194 [-]: JMP       212          ; PC := 212
195 [-]: GETTABLE  R25 R24 K58  ; R25 := R24["NodeA"]
196 [-]: GETTABLE  R25 R25 K20  ; R25 := R25["name"]
197 [-]: GETGLOBAL R26 K4       ; R26 := _G
198 [-]: GETTABLE  R26 R26 K55  ; R26 := R26["JunctionComplete"]
199 [-]: GETTABLE  R26 R26 K59  ; R26 := R26["location"]
200 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 204
201 [-]: JMP       204          ; PC := 204
202 [-]: GETTABLE  R19 R24 K60  ; R19 := R24["NodeB"]
203 [-]: JMP       212          ; PC := 212
204 [-]: GETTABLE  R25 R24 K60  ; R25 := R24["NodeB"]
205 [-]: GETTABLE  R25 R25 K20  ; R25 := R25["name"]
206 [-]: GETGLOBAL R26 K4       ; R26 := _G
207 [-]: GETTABLE  R26 R26 K55  ; R26 := R26["JunctionComplete"]
208 [-]: GETTABLE  R26 R26 K59  ; R26 := R26["location"]
209 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 212
210 [-]: JMP       212          ; PC := 212
211 [-]: GETTABLE  R19 R24 K58  ; R19 := R24["NodeA"]
212 [-]: TFORLOOP  R20 2        ; R23,R24 :=  R20(R21,R22); if R23 ~= nil then begin PC = 192; R22 := R23 end
213 [-]: JMP       192          ; PC := 192
214 [-]: GETGLOBAL R25 K3       ; R25 := 0x400E7765
215 [-]: MOVE      R26 R19      ; R26 := R19
216 [-]: CALL      R25 2 2      ; R25 := R25(R26)
217 [-]: TEST      R25 1        ; if R25 then PC := 249
218 [-]: JMP       249          ; PC := 249
219 [-]: GETGLOBAL R25 K56      ; R25 := 0x63B09107
220 [-]: GETUPVAL  R26 U11      ; R26 := U11
221 [-]: CALL      R25 2 4      ; R25,R26,R27 := R25(R26)
222 [-]: JMP       247          ; PC := 247
223 [-]: GETTABLE  R30 R29 K61  ; R30 := R29["IsShortcut"]
224 [-]: TEST      R30 0        ; if not R30 then PC := 247
225 [-]: JMP       247          ; PC := 247
226 [-]: GETTABLE  R30 R29 K58  ; R30 := R29["NodeA"]
227 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 237
228 [-]: JMP       237          ; PC := 237
229 [-]: GETUPVAL  R30 U0       ; R30 := U0
230 [-]: GETTABLE  R31 R29 K60  ; R31 := R29["NodeB"]
231 [-]: GETTABLE  R31 R31 K62  ; R31 := R31["radialSector"]
232 [-]: GETTABLE  R31 R31 K63  ; R31 := R31["region"]
233 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
234 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
235 [-]: JMP       249          ; PC := 249
236 [-]: JMP       247          ; PC := 247
237 [-]: GETTABLE  R30 R29 K60  ; R30 := R29["NodeB"]
238 [-]: EQ        0 R30 R19    ; if R30 ~= R19 then PC := 247
239 [-]: JMP       247          ; PC := 247
240 [-]: GETUPVAL  R30 U0       ; R30 := U0
241 [-]: GETTABLE  R31 R29 K58  ; R31 := R29["NodeA"]
242 [-]: GETTABLE  R31 R31 K62  ; R31 := R31["radialSector"]
243 [-]: GETTABLE  R31 R31 K63  ; R31 := R31["region"]
244 [-]: ADD       R31 R31 K14  ; R31 := R31 + 1
245 [-]: GETTABLE  R18 R30 R31  ; R18 := R30[R31]
246 [-]: JMP       249          ; PC := 249
247 [-]: TFORLOOP  R25 2        ; R28,R29 :=  R25(R26,R27); if R28 ~= nil then begin PC = 223; R27 := R28 end
248 [-]: JMP       223          ; PC := 223
249 [-]: GETGLOBAL R30 K4       ; R30 := _G
250 [-]: SETTABLE  R30 K55 K22  ; R30["JunctionComplete"] := nil
251 [-]: EQ        1 R1 K22     ; if R1 == nil then PC := 299
252 [-]: JMP       299          ; PC := 299
253 [-]: GETGLOBAL R30 K64      ; R30 := _T
254 [-]: GETTABLE  R30 R30 K65  ; R30 := R30["WareframeChallenge"]
255 [-]: TEST      R30 1        ; if R30 then PC := 299
256 [-]: JMP       299          ; PC := 299
257 [-]: GETUPVAL  R30 U12      ; R30 := U12
258 [-]: MOVE      R31 R1       ; R31 := R1
259 [-]: GETTABLE  R32 R1 K66   ; R32 := R1["zoomedFraming"]
260 [-]: CALL      R30 3 4      ; R30,R31,R32 := R30(R31,R32)
261 [-]: CLOSURE   R33 0        ; R33 := closure(Function #53.1)
262 [-]: GETUPVAL  R0 U10       ; R0 := U10
263 [-]: MOVE      R0 R17       ; R0 := R17
264 [-]: MOVE      R0 R32       ; R0 := R32
265 [-]: GETUPVAL  R0 U8        ; R0 := U8
266 [-]: MOVE      R0 R15       ; R0 := R15
267 [-]: MOVE      R0 R30       ; R0 := R30
268 [-]: MOVE      R0 R16       ; R0 := R16
269 [-]: MOVE      R0 R31       ; R0 := R31
270 [-]: GETUPVAL  R34 U13      ; R34 := U13
271 [-]: SELF      R34 R34 K67  ; R35 := R34; R34 := R34["0x61494587"]
272 [-]: LOADK     R36 K68      ; R36 := 0.55000001192093
273 [-]: CLOSURE   R37 1        ; R37 := closure(Function #53.2)
274 [-]: GETUPVAL  R0 U14       ; R0 := U14
275 [-]: MOVE      R0 R1        ; R0 := R1
276 [-]: CALL      R34 4 1      ; R34(R35,R36,R37)
277 [-]: GETGLOBAL R34 K69      ; R34 := 0x52E17A90
278 [-]: GETGLOBAL R35 K70      ; R35 := mMovie
279 [-]: LOADK     R36 K71      ; R36 := "_root"
280 [-]: GETGLOBAL R37 K72      ; R37 := UISys
281 [-]: GETTABLE  R37 R37 K73  ; R37 := R37["FlashInstance_LINEAR"]
282 [-]: NEWTABLE  R38 1 0      ; R38 := {}
283 [-]: MOVE      R39 R33      ; R39 := R33
284 [-]: SETLIST   R38 1 1      ; R38[(1-1)*FPF+i] := R(38+i), 1 <= i <= 1
285 [-]: NEWTABLE  R39 1 0      ; R39 := {}
286 [-]: LOADK     R40 K14      ; R40 := 1
287 [-]: SETLIST   R39 1 1      ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
288 [-]: LOADK     R40 K74      ; R40 := 0.75
289 [-]: LOADK     R41 K75      ; R41 := 0.10000000149012
290 [-]: CLOSURE   R42 2        ; R42 := closure(Function #53.3)
291 [-]: MOVE      R0 R18       ; R0 := R18
292 [-]: GETUPVAL  R0 U15       ; R0 := U15
293 [-]: GETUPVAL  R0 U16       ; R0 := U16
294 [-]: GETUPVAL  R0 U17       ; R0 := U17
295 [-]: GETUPVAL  R0 U18       ; R0 := U18
296 [-]: CALL      R34 9 1      ; R34(R35,R36,R37,R38,R39,R40,R41,R42)
297 [-]: CLOSE     R30          ; SAVE R30,...
298 [-]: JMP       322          ; PC := 322
299 [-]: GETGLOBAL R30 K69      ; R30 := 0x52E17A90
300 [-]: GETGLOBAL R31 K70      ; R31 := mMovie
301 [-]: LOADK     R32 K71      ; R32 := "_root"
302 [-]: GETGLOBAL R33 K72      ; R33 := UISys
303 [-]: GETTABLE  R33 R33 K73  ; R33 := R33["FlashInstance_LINEAR"]
304 [-]: NEWTABLE  R34 1 0      ; R34 := {}
305 [-]: CLOSURE   R35 3        ; R35 := closure(Function #53.4)
306 [-]: GETUPVAL  R0 U10       ; R0 := U10
307 [-]: MOVE      R0 R17       ; R0 := R17
308 [-]: GETUPVAL  R0 U9        ; R0 := U9
309 [-]: SETLIST   R34 1 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
310 [-]: NEWTABLE  R35 1 0      ; R35 := {}
311 [-]: LOADK     R36 K14      ; R36 := 1
312 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
313 [-]: LOADK     R36 K76      ; R36 := 0.64999997615814
314 [-]: LOADK     R37 K2       ; R37 := 0
315 [-]: CLOSURE   R38 4        ; R38 := closure(Function #53.5)
316 [-]: GETUPVAL  R0 U16       ; R0 := U16
317 [-]: GETUPVAL  R0 U17       ; R0 := U17
318 [-]: GETUPVAL  R0 U18       ; R0 := U18
319 [-]: GETUPVAL  R0 U13       ; R0 := U13
320 [-]: GETUPVAL  R0 U19       ; R0 := U19
321 [-]: CALL      R30 9 1      ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
322 [-]: RETURN    R0 1         ; return 


; Function #53.1:
;
; Name:            
; Defined at line: 1864
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: MOVE      R6 R0        ; R6 := R0
  7 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  8 [-]: CALL      R1 0 1       ; R1(R2,...)
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x9E1B8940
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x9E1B8940
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x9E1B8940
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x9E1B8940
 13 [-]: GETGLOBAL R5 K2        ; R5 := 0x9E1B8940
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 16 [-]: CALL      R4 0 0       ; R4,... := R4(R5,...)
 17 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 18 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
 19 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 22 [-]: LOADK     R4 K4        ; R4 := "x"
 23 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 24 [-]: GETUPVAL  R6 U4        ; R6 := U4
 25 [-]: GETUPVAL  R7 U5        ; R7 := U5
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 28 [-]: CALL      R2 0 1       ; R2(R3,...)
 29 [-]: GETUPVAL  R2 U3        ; R2 := U3
 30 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0xCE468565"]
 31 [-]: LOADK     R4 K5        ; R4 := "y"
 32 [-]: GETGLOBAL R5 K1        ; R5 := 0x93034B55
 33 [-]: GETUPVAL  R6 U6        ; R6 := U6
 34 [-]: GETUPVAL  R7 U7        ; R7 := U7
 35 [-]: MOVE      R8 R1        ; R8 := R1
 36 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 37 [-]: CALL      R2 0 1       ; R2(R3,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #53.2:
;
; Name:            
; Defined at line: 1871
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #53.3:
;
; Name:            
; Defined at line: 1873
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: JMP       12           ; PC := 12
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R2        ; R0 := R2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: GETUPVAL  R0 U4        ; R0 := U4
 15 [-]: CALL      R0 1 1       ; R0()
 16 [-]: RETURN    R0 1         ; return 


; Function #53.4:
;
; Name:            
; Defined at line: 1883
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1["0x5A7A6B1"]
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x93034B55
  4 [-]: GETUPVAL  R4 U1        ; R4 := U1
  5 [-]: GETUPVAL  R5 U2        ; R5 := U2
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["STARTING_ZOOM"]
  7 [-]: MOVE      R6 R0        ; R6 := R0
  8 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
  9 [-]: CALL      R1 0 1       ; R1(R2,...)
 10 [-]: RETURN    R0 1         ; return 


; Function #53.5:
;
; Name:            
; Defined at line: 1884
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: GETUPVAL  R1 U3        ; R1 := U3
 10 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x61494587"]
 11 [-]: LOADK     R3 K2        ; R3 := 0.050000000745058
 12 [-]: CLOSURE   R4 0         ; R4 := closure(Function #53.5.1)
 13 [-]: GETUPVAL  R0 U4        ; R0 := U4
 14 [-]: MOVE      R0 R0        ; R0 := R0
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: RETURN    R0 1         ; return 


; Function #53.5.1:
;
; Name:            
; Defined at line: 1891
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 26        ; R0 -= R2; PC := 26
  6 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
  7 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4["0x3688C0F4"]
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 11 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["pos"]
 12 [-]: MOVE      R8 R1        ; R8 := R1
 13 [-]: MOVE      R9 R0        ; R9 := R0
 14 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 15 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 16 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4["0x4717530F"]
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 19 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["memberIndex"]
 20 [-]: GETUPVAL  R7 U1        ; R7 := U1
 21 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["x"]
 22 [-]: GETUPVAL  R8 U1        ; R8 := U1
 23 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["y"]
 24 [-]: SUB       R8 R8 K8     ; R8 := R8 - 10
 25 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 26 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 27 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1901
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["radialSector"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["region"]
  3 [-]: ADD       R1 R1 K2     ; R1 := R1 + 1
  4 [-]: EQ        1 R1 K3      ; if R1 == 17 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: MOVE      R2 R1        ; R2 := R1
  8 [-]: EQ        1 R1 K4      ; if R1 == 15 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: EQ        1 R1 K5      ; if R1 == 14 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: TEST      R2 1         ; if R2 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: TEST      R3 1         ; if R3 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: RETURN    R5 2         ; return R5
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 26 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["instance"]
 27 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0xAC8F6523"]
 28 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["position"]
 29 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 30 [-]: LOADK     R6 K9        ; R6 := 0.0049999998882413
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 R1     ; R7 := R7[R1]
 33 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 34 [-]: LT        1 R5 R7      ; if R5 < R7 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: MOVE      R7 R0        ; R7 := R0
 37 [-]: MOVE      R7 R1        ; R7 := R1
 38 [-]: RETURN    R7 2         ; return R7
 39 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1914
; #Upvalues:       17
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  43

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  4 [-]: MOVE      R1 R2        ; R1 := R2
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["nodeType"]
  6 [-]: GETGLOBAL R3 K2        ; R3 := Lotus_Game
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["NT_PVP"]
  8 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["locTag"]
 12 [-]: GETGLOBAL R3 K5        ; R3 := EMPTY_SYMBOL
 13 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x9FAED6BC
 17 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Active"]
 21 [-]: TEST      R3 1         ; if R3 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["missionTag"]
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["Tag"]
 26 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Active"]
 31 [-]: TEST      R3 0         ; if not R3 then PC := 44
 32 [-]: JMP       44           ; PC := 44
 33 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["missionTag"]
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["Tag"]
 36 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["nodeType"]
 39 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
 40 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["NT_SHORTCUT"]
 41 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 44
 42 [-]: JMP       44           ; PC := 44
 43 [-]: RETURN    R0 1         ; return 
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["Active"]
 46 [-]: TEST      R3 0         ; if not R3 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["missionTag"]
 49 [-]: GETUPVAL  R4 U0        ; R4 := U0
 50 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["Tag"]
 51 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["mission"]
 54 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["unlocked"]
 55 [-]: TEST      R3 1         ; if R3 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: RETURN    R0 1         ; return 
 58 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["nodeType"]
 59 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
 60 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["NT_EVENT"]
 61 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 81
 62 [-]: JMP       81           ; PC := 81
 63 [-]: GETGLOBAL R3 K15       ; R3 := _G
 64 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["CachedGoalInfo"]
 65 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 66 [-]: TEST      R3 1         ; if R3 then PC := 81
 67 [-]: JMP       81           ; PC := 81
 68 [-]: GETGLOBAL R3 K17       ; R3 := _T
 69 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["WorldStateDerelictNodes"]
 70 [-]: TEST      R3 0         ; if not R3 then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETGLOBAL R3 K17       ; R3 := _T
 73 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["WorldStateDerelictNodes"]
 74 [-]: GETGLOBAL R4 K6        ; R4 := 0x9FAED6BC
 75 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["name"]
 76 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 77 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 78 [-]: TEST      R3 1         ; if R3 then PC := 81
 79 [-]: JMP       81           ; PC := 81
 80 [-]: RETURN    R0 1         ; return 
 81 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["region"]
 82 [-]: ADD       R3 R3 K20    ; R3 := R3 + 1
 83 [-]: GETGLOBAL R4 K17       ; R4 := _T
 84 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["REGION_ID_MOON"]
 85 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 97
 86 [-]: JMP       97           ; PC := 97
 87 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["nodeType"]
 88 [-]: GETGLOBAL R4 K2        ; R4 := Lotus_Game
 89 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["NT_SHORTCUT"]
 90 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 104
 91 [-]: JMP       104          ; PC := 104
 92 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["name"]
 93 [-]: GETUPVAL  R4 U1        ; R4 := U1
 94 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["MOON_SHORTCUT_TAG"]
 95 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: GETUPVAL  R3 U2        ; R3 := U2
 98 [-]: GETGLOBAL R4 K17       ; R4 := _T
 99 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["REGION_ID_MOON"]
100 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
101 [-]: EQ        0 R3 K23     ; if R3 ~= "0x1" then PC := 104
102 [-]: JMP       104          ; PC := 104
103 [-]: RETURN    R0 1         ; return 
104 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["region"]
105 [-]: ADD       R3 R3 K20    ; R3 := R3 + 1
106 [-]: GETGLOBAL R4 K17       ; R4 := _T
107 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["REGION_ID_FORTRESS"]
108 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 117
109 [-]: JMP       117          ; PC := 117
110 [-]: GETUPVAL  R3 U2        ; R3 := U2
111 [-]: GETGLOBAL R4 K17       ; R4 := _T
112 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["REGION_ID_FORTRESS"]
113 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
114 [-]: EQ        0 R3 K23     ; if R3 ~= "0x1" then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: RETURN    R0 1         ; return 
117 [-]: GETGLOBAL R3 K15       ; R3 := _G
118 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["StarChartHiddenEventNode"]
119 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 122
120 [-]: JMP       122          ; PC := 122
121 [-]: RETURN    R0 1         ; return 
122 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["missionTag"]
123 [-]: GETUPVAL  R4 U1        ; R4 := U1
124 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["TENNOCON_RELAY"]
125 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 144
126 [-]: JMP       144          ; PC := 144
127 [-]: GETGLOBAL R3 K15       ; R3 := _G
128 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["CachedGoalInfo"]
129 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
130 [-]: TEST      R3 0         ; if not R3 then PC := 143
131 [-]: JMP       143          ; PC := 143
132 [-]: GETGLOBAL R3 K27       ; R3 := 0x400E7765
133 [-]: GETGLOBAL R4 K28       ; R4 := gGameData
134 [-]: CALL      R3 2 2       ; R3 := R3(R4)
135 [-]: TEST      R3 1         ; if R3 then PC := 144
136 [-]: JMP       144          ; PC := 144
137 [-]: GETUPVAL  R3 U3        ; R3 := U3
138 [-]: GETTABLE  R3 R3 K29    ; R3 := R3["0x8D79D162"]
139 [-]: GETGLOBAL R4 K28       ; R4 := gGameData
140 [-]: CALL      R3 2 2       ; R3 := R3(R4)
141 [-]: TEST      R3 1         ; if R3 then PC := 144
142 [-]: JMP       144          ; PC := 144
143 [-]: RETURN    R0 1         ; return 
144 [-]: GETTABLE  R3 R0 K19    ; R3 := R0["region"]
145 [-]: ADD       R3 R3 K20    ; R3 := R3 + 1
146 [-]: GETGLOBAL R4 K17       ; R4 := _T
147 [-]: GETTABLE  R4 R4 K30    ; R4 := R4["REGION_ID_DARK_SECTOR"]
148 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 151
149 [-]: JMP       151          ; PC := 151
150 [-]: RETURN    R0 1         ; return 
151 [-]: MOVE      R3 R0        ; R3 := R0
152 [-]: GETGLOBAL R4 K27       ; R4 := 0x400E7765
153 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mission"]
154 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["questReq"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: TEST      R4 1         ; if R4 then PC := 248
157 [-]: JMP       248          ; PC := 248
158 [-]: GETGLOBAL R4 K27       ; R4 := 0x400E7765
159 [-]: GETGLOBAL R5 K28       ; R5 := gGameData
160 [-]: CALL      R4 2 2       ; R4 := R4(R5)
161 [-]: TEST      R4 1         ; if R4 then PC := 248
162 [-]: JMP       248          ; PC := 248
163 [-]: GETGLOBAL R4 K28       ; R4 := gGameData
164 [-]: SELF      R4 R4 K32    ; R5 := R4; R4 := R4["0x6F2E05FD"]
165 [-]: CALL      R4 2 2       ; R4 := R4(R5)
166 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x52C8784B"]
167 [-]: CALL      R4 2 2       ; R4 := R4(R5)
168 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mission"]
169 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["questReq"]
170 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 248
171 [-]: JMP       248          ; PC := 248
172 [-]: GETUPVAL  R4 U4        ; R4 := U4
173 [-]: TEST      R4 1         ; if R4 then PC := 248
174 [-]: JMP       248          ; PC := 248
175 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["name"]
176 [-]: GETUPVAL  R5 U5        ; R5 := U5
177 [-]: GETTABLE  R5 R5 K34    ; R5 := R5["CETUS_NODE_TAG"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 187
179 [-]: JMP       187          ; PC := 187
180 [-]: GETUPVAL  R4 U5        ; R4 := U5
181 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x2AAC7A8C"]
182 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mission"]
183 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["questReq"]
184 [-]: CALL      R4 2 2       ; R4 := R4(R5)
185 [-]: MOVE      R3 R4        ; R3 := R4
186 [-]: JMP       248          ; PC := 248
187 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["name"]
188 [-]: GETUPVAL  R5 U5        ; R5 := U5
189 [-]: GETTABLE  R5 R5 K36    ; R5 := R5["PLAINS_NODE_TAG"]
190 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 204
191 [-]: JMP       204          ; PC := 204
192 [-]: GETGLOBAL R4 K37       ; R4 := gPlayerProfileMgr
193 [-]: SELF      R4 R4 K38    ; R5 := R4; R4 := R4["0x21EF7B1A"]
194 [-]: LOADK     R6 K39       ; R6 := 0
195 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
196 [-]: SELF      R4 R4 K40    ; R5 := R4; R4 := R4["0x654F1092"]
197 [-]: CALL      R4 2 2       ; R4 := R4(R5)
198 [-]: SELF      R4 R4 K41    ; R5 := R4; R4 := R4["0x8572D26E"]
199 [-]: GETUPVAL  R6 U5        ; R6 := U5
200 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["PLAINS_NODE_TAG"]
201 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
202 [-]: MOVE      R3 R4        ; R3 := R4
203 [-]: JMP       248          ; PC := 248
204 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["name"]
205 [-]: GETUPVAL  R5 U5        ; R5 := U5
206 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["ORB_VALLIS_NODE_TAG"]
207 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 215
208 [-]: JMP       215          ; PC := 215
209 [-]: GETUPVAL  R4 U5        ; R4 := U5
210 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x2AAC7A8C"]
211 [-]: GETUPVAL  R5 U6        ; R5 := U6
212 [-]: CALL      R4 2 2       ; R4 := R4(R5)
213 [-]: MOVE      R3 R4        ; R3 := R4
214 [-]: JMP       248          ; PC := 248
215 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mission"]
216 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["missionType"]
217 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
218 [-]: GETTABLE  R5 R5 K44    ; R5 := R5["MT_ARTIFACT"]
219 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 227
220 [-]: JMP       227          ; PC := 227
221 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mission"]
222 [-]: GETTABLE  R4 R4 K43    ; R4 := R4["missionType"]
223 [-]: GETGLOBAL R5 K2        ; R5 := Lotus_Game
224 [-]: GETTABLE  R5 R5 K45    ; R5 := R5["MT_ASSASSINATION"]
225 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 240
226 [-]: JMP       240          ; PC := 240
227 [-]: GETUPVAL  R4 U5        ; R4 := U5
228 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x2AAC7A8C"]
229 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mission"]
230 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["questReq"]
231 [-]: CALL      R4 2 2       ; R4 := R4(R5)
232 [-]: TEST      R4 1         ; if R4 then PC := 237
233 [-]: JMP       237          ; PC := 237
234 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["unlocked"]
235 [-]: MOVE      R3 R4        ; R3 := R4
236 [-]: JMP       248          ; PC := 248
237 [-]: MOVE      R3 R0        ; R3 := R0
238 [-]: MOVE      R3 R1        ; R3 := R1
239 [-]: JMP       248          ; PC := 248
240 [-]: GETUPVAL  R4 U5        ; R4 := U5
241 [-]: GETTABLE  R4 R4 K35    ; R4 := R4["0x2AAC7A8C"]
242 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mission"]
243 [-]: GETTABLE  R5 R5 K31    ; R5 := R5["questReq"]
244 [-]: CALL      R4 2 2       ; R4 := R4(R5)
245 [-]: TEST      R4 1         ; if R4 then PC := 248
246 [-]: JMP       248          ; PC := 248
247 [-]: RETURN    R0 1         ; return 
248 [-]: MOVE      R4 R1        ; R4 := R1
249 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["missionTag"]
250 [-]: GETUPVAL  R6 U1        ; R6 := U1
251 [-]: GETTABLE  R6 R6 K46    ; R6 := R6["DESTROYED_NODE_TAG"]
252 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 257
253 [-]: JMP       257          ; PC := 257
254 [-]: GETGLOBAL R5 K48       ; R5 := destroyedNodeDeco
255 [-]: SETTABLE  R0 K47 R5    ; R0["deco"] := R5
256 [-]: MOVE      R4 R0        ; R4 := R0
257 [-]: LOADNIL   R5 R5        ; R5 := nil
258 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["missionTag"]
259 [-]: GETUPVAL  R7 U1        ; R7 := U1
260 [-]: GETTABLE  R7 R7 K49    ; R7 := R7["RECONSTRUCTION_NODE_TAG"]
261 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 268
262 [-]: JMP       268          ; PC := 268
263 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["missionTag"]
264 [-]: GETUPVAL  R7 U1        ; R7 := U1
265 [-]: GETTABLE  R7 R7 K50    ; R7 := R7["UNDER_CONSTRUCTION_NODE_TAG"]
266 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 339
267 [-]: JMP       339          ; PC := 339
268 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["name"]
269 [-]: SELF      R6 R6 K51    ; R7 := R6; R6 := R6["0x5EC7A3D2"]
270 [-]: CALL      R6 2 2       ; R6 := R6(R7)
271 [-]: GETGLOBAL R7 K52       ; R7 := string
272 [-]: GETTABLE  R7 R7 K53    ; R7 := R7["0xDE44F664"]
273 [-]: MOVE      R8 R6        ; R8 := R6
274 [-]: LOADK     R9 K54       ; R9 := "Rebuild"
275 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
276 [-]: MOVE      R8 R6        ; R8 := R6
277 [-]: TEST      R7 0         ; if not R7 then PC := 286
278 [-]: JMP       286          ; PC := 286
279 [-]: GETGLOBAL R9 K52       ; R9 := string
280 [-]: GETTABLE  R9 R9 K55    ; R9 := R9["0x7B782033"]
281 [-]: MOVE      R10 R6       ; R10 := R6
282 [-]: LOADK     R11 K20      ; R11 := 1
283 [-]: SUB       R12 R7 K20   ; R12 := R7 - 1
284 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
285 [-]: MOVE      R8 R9        ; R8 := R9
286 [-]: GETUPVAL  R9 U7        ; R9 := U7
287 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
288 [-]: MOVE      R10 R0       ; R10 := R0
289 [-]: LOADNIL   R11 R11      ; R11 := nil
290 [-]: TEST      R9 0         ; if not R9 then PC := 308
291 [-]: JMP       308          ; PC := 308
292 [-]: GETTABLE  R11 R9 K56   ; R11 := R9["info"]
293 [-]: TEST      R11 0        ; if not R11 then PC := 308
294 [-]: JMP       308          ; PC := 308
295 [-]: GETTABLE  R12 R11 K57  ; R12 := R11["mActivation"]
296 [-]: SELF      R12 R12 K58  ; R13 := R12; R12 := R12["0x315E860F"]
297 [-]: CALL      R12 2 2      ; R12 := R12(R13)
298 [-]: TEST      R12 0        ; if not R12 then PC := 308
299 [-]: JMP       308          ; PC := 308
300 [-]: GETGLOBAL R12 K59      ; R12 := Engine
301 [-]: GETTABLE  R12 R12 K60  ; R12 := R12["0xD09D7910"]
302 [-]: GETTABLE  R13 R9 K56   ; R13 := R9["info"]
303 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["mActivation"]
304 [-]: CALL      R12 2 2      ; R12 := R12(R13)
305 [-]: LE        0 R12 K39    ; if R12 > 0 then PC := 308
306 [-]: JMP       308          ; PC := 308
307 [-]: MOVE      R10 R1       ; R10 := R1
308 [-]: TEST      R10 0        ; if not R10 then PC := 311
309 [-]: JMP       311          ; PC := 311
310 [-]: GETTABLE  R5 R9 K61    ; R5 := R9["progress"]
311 [-]: TEST      R7 0         ; if not R7 then PC := 319
312 [-]: JMP       319          ; PC := 319
313 [-]: TEST      R10 0        ; if not R10 then PC := 317
314 [-]: JMP       317          ; PC := 317
315 [-]: EQ        1 R5 K39     ; if R5 == 0 then PC := 339
316 [-]: JMP       339          ; PC := 339
317 [-]: RETURN    R0 1         ; return 
318 [-]: JMP       339          ; PC := 339
319 [-]: TEST      R10 1        ; if R10 then PC := 329
320 [-]: JMP       329          ; PC := 329
321 [-]: MOVE      R12 R1       ; R12 := R1
322 [-]: TEST      R12 1        ; if R12 then PC := 339
323 [-]: JMP       339          ; PC := 339
324 [-]: MOVE      R4 R0        ; R4 := R0
325 [-]: GETGLOBAL R13 K48      ; R13 := destroyedNodeDeco
326 [-]: SETTABLE  R0 K47 R13   ; R0["deco"] := R13
327 [-]: JMP       339          ; PC := 339
328 [-]: JMP       339          ; PC := 339
329 [-]: EQ        0 R5 K39     ; if R5 ~= 0 then PC := 333
330 [-]: JMP       333          ; PC := 333
331 [-]: RETURN    R0 1         ; return 
332 [-]: JMP       339          ; PC := 339
333 [-]: EQ        0 R5 K20     ; if R5 ~= 1 then PC := 339
334 [-]: JMP       339          ; PC := 339
335 [-]: GETGLOBAL R13 K2       ; R13 := Lotus_Game
336 [-]: GETTABLE  R13 R13 K62  ; R13 := R13["NT_MISSION"]
337 [-]: SETTABLE  R0 K1 R13    ; R0["nodeType"] := R13
338 [-]: JMP       339          ; PC := 339
339 [-]: GETTABLE  R13 R0 K63   ; R13 := R0["pos"]
340 [-]: LOADNIL   R14 R14      ; R14 := nil
341 [-]: GETGLOBAL R15 K15      ; R15 := _G
342 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["CachedGoalInfo"]
343 [-]: GETTABLE  R15 R15 R2   ; R15 := R15[R2]
344 [-]: TEST      R15 0        ; if not R15 then PC := 468
345 [-]: JMP       468          ; PC := 468
346 [-]: GETGLOBAL R15 K15      ; R15 := _G
347 [-]: GETTABLE  R15 R15 K16  ; R15 := R15["CachedGoalInfo"]
348 [-]: GETTABLE  R15 R15 R2   ; R15 := R15[R2]
349 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["mFomorian"]
350 [-]: TEST      R15 0        ; if not R15 then PC := 411
351 [-]: JMP       411          ; PC := 411
352 [-]: GETUPVAL  R15 U8       ; R15 := U8
353 [-]: SELF      R15 R15 K65  ; R16 := R15; R15 := R15["0xDF213CE1"]
354 [-]: GETGLOBAL R17 K15      ; R17 := _G
355 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["CachedGoalInfo"]
356 [-]: GETTABLE  R17 R17 R2   ; R17 := R17[R2]
357 [-]: GETTABLE  R17 R17 K66  ; R17 := R17["mVictimNode"]
358 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
359 [-]: GETTABLE  R16 R15 K63  ; R16 := R15["pos"]
360 [-]: SUB       R16 R16 R13  ; R16 := R16 - R13
361 [-]: MUL       R17 R16 K67  ; R17 := R16 * 0.80000001192093
362 [-]: GETGLOBAL R18 K15      ; R18 := _G
363 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["CachedGoalInfo"]
364 [-]: GETTABLE  R18 R18 R2   ; R18 := R18[R2]
365 [-]: GETTABLE  R18 R18 K57  ; R18 := R18["mActivation"]
366 [-]: SELF      R18 R18 K68  ; R19 := R18; R18 := R18["0x6F4BAEB9"]
367 [-]: GETGLOBAL R20 K15      ; R20 := _G
368 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["CachedGoalInfo"]
369 [-]: GETTABLE  R20 R20 R2   ; R20 := R20[R2]
370 [-]: GETTABLE  R20 R20 K69  ; R20 := R20["mExpiry"]
371 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
372 [-]: GETGLOBAL R19 K70      ; R19 := 0x6374FD98
373 [-]: GETGLOBAL R20 K59      ; R20 := Engine
374 [-]: GETTABLE  R20 R20 K60  ; R20 := R20["0xD09D7910"]
375 [-]: GETGLOBAL R21 K15      ; R21 := _G
376 [-]: GETTABLE  R21 R21 K16  ; R21 := R21["CachedGoalInfo"]
377 [-]: GETTABLE  R21 R21 R2   ; R21 := R21[R2]
378 [-]: GETTABLE  R21 R21 K69  ; R21 := R21["mExpiry"]
379 [-]: CALL      R20 2 2      ; R20 := R20(R21)
380 [-]: LOADK     R21 K39      ; R21 := 0
381 [-]: MOVE      R22 R18      ; R22 := R18
382 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
383 [-]: DIV       R20 R19 R18  ; R20 := R19 / R18
384 [-]: SUB       R20 K20 R20  ; R20 := 1 - R20
385 [-]: MUL       R21 R17 R20  ; R21 := R17 * R20
386 [-]: ADD       R13 R13 R21  ; R13 := R13 + R21
387 [-]: GETGLOBAL R22 K15      ; R22 := _G
388 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["CachedGoalInfo"]
389 [-]: GETTABLE  R22 R22 R2   ; R22 := R22[R2]
390 [-]: GETTABLE  R22 R22 K71  ; R22 := R22["mFaction"]
391 [-]: GETGLOBAL R23 K2       ; R23 := Lotus_Game
392 [-]: GETTABLE  R23 R23 K72  ; R23 := R23["FC_CORPUS"]
393 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 403
394 [-]: JMP       403          ; PC := 403
395 [-]: GETGLOBAL R22 K73      ; R22 := armadaDeco
396 [-]: SETTABLE  R0 K47 R22   ; R0["deco"] := R22
397 [-]: GETGLOBAL R22 K75      ; R22 := 0x1E4F6281
398 [-]: LOADK     R23 K76      ; R23 := 50
399 [-]: LOADK     R24 K39      ; R24 := 0
400 [-]: LOADK     R25 K39      ; R25 := 0
401 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
402 [-]: SETTABLE  R0 K74 R22   ; R0["decoRotation"] := R22
403 [-]: GETGLOBAL R22 K15      ; R22 := _G
404 [-]: GETTABLE  R22 R22 K16  ; R22 := R22["CachedGoalInfo"]
405 [-]: GETTABLE  R22 R22 R2   ; R22 := R22[R2]
406 [-]: GETTABLE  R22 R22 K77  ; R22 := R22["mHealthPct"]
407 [-]: LE        0 R22 K39    ; if R22 > 0 then PC := 468
408 [-]: JMP       468          ; PC := 468
409 [-]: MOVE      R4 R0        ; R4 := R0
410 [-]: JMP       468          ; PC := 468
411 [-]: GETGLOBAL R22 K52      ; R22 := string
412 [-]: GETTABLE  R22 R22 K53  ; R22 := R22["0xDE44F664"]
413 [-]: GETGLOBAL R23 K6       ; R23 := 0x9FAED6BC
414 [-]: GETGLOBAL R24 K15      ; R24 := _G
415 [-]: GETTABLE  R24 R24 K16  ; R24 := R24["CachedGoalInfo"]
416 [-]: GETTABLE  R24 R24 R2   ; R24 := R24[R2]
417 [-]: GETTABLE  R24 R24 K78  ; R24 := R24["mTag"]
418 [-]: CALL      R23 2 2      ; R23 := R23(R24)
419 [-]: LOADK     R24 K79      ; R24 := "Halloween"
420 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
421 [-]: EQ        1 R22 K0     ; if R22 == nil then PC := 468
422 [-]: JMP       468          ; PC := 468
423 [-]: GETGLOBAL R22 K80      ; R22 := 0x2C00D429
424 [-]: LOADK     R23 K81      ; R23 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
425 [-]: CALL      R22 2 2      ; R22 := R22(R23)
426 [-]: SETTABLE  R0 K47 R22   ; R0["deco"] := R22
427 [-]: GETGLOBAL R22 K75      ; R22 := 0x1E4F6281
428 [-]: LOADK     R23 K82      ; R23 := 180
429 [-]: LOADK     R24 K39      ; R24 := 0
430 [-]: LOADK     R25 K39      ; R25 := 0
431 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
432 [-]: SETTABLE  R0 K74 R22   ; R0["decoRotation"] := R22
433 [-]: SETTABLE  R0 K83 K84   ; R0["scale"] := 0.03999999910593
434 [-]: GETGLOBAL R22 K75      ; R22 := 0x1E4F6281
435 [-]: LOADK     R23 K85      ; R23 := -50
436 [-]: LOADK     R24 K39      ; R24 := 0
437 [-]: LOADK     R25 K39      ; R25 := 0
438 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
439 [-]: MOVE      R14 R22      ; R14 := R22
440 [-]: EQ        0 R2 K86     ; if R2 ~= "EventNode24" then PC := 444
441 [-]: JMP       444          ; PC := 444
442 [-]: GETTABLE  R22 R0 K87   ; R22 := R0["decoOffset"]
443 [-]: SETTABLE  R22 K88 K89  ; R22["z"] := -0.10000000149012
444 [-]: GETGLOBAL R22 K17      ; R22 := _T
445 [-]: GETTABLE  R22 R22 K90  ; R22 := R22["CachedGoalKeys"]
446 [-]: TEST      R22 0        ; if not R22 then PC := 468
447 [-]: JMP       468          ; PC := 468
448 [-]: GETGLOBAL R22 K17      ; R22 := _T
449 [-]: GETTABLE  R22 R22 K90  ; R22 := R22["CachedGoalKeys"]
450 [-]: GETTABLE  R22 R22 R2   ; R22 := R22[R2]
451 [-]: TEST      R22 0        ; if not R22 then PC := 468
452 [-]: JMP       468          ; PC := 468
453 [-]: GETGLOBAL R22 K17      ; R22 := _T
454 [-]: GETTABLE  R22 R22 K90  ; R22 := R22["CachedGoalKeys"]
455 [-]: GETTABLE  R22 R22 R2   ; R22 := R22[R2]
456 [-]: SELF      R22 R22 K91  ; R23 := R22; R22 := R22["0x387DBBEB"]
457 [-]: CALL      R22 2 2      ; R22 := R22(R23)
458 [-]: GETTABLE  R23 R22 K92  ; R23 := R22["x"]
459 [-]: EQ        1 R23 K39    ; if R23 == 0 then PC := 468
460 [-]: JMP       468          ; PC := 468
461 [-]: GETTABLE  R23 R22 K93  ; R23 := R22["y"]
462 [-]: EQ        1 R23 K39    ; if R23 == 0 then PC := 468
463 [-]: JMP       468          ; PC := 468
464 [-]: GETTABLE  R23 R22 K88  ; R23 := R22["z"]
465 [-]: EQ        1 R23 K39    ; if R23 == 0 then PC := 468
466 [-]: JMP       468          ; PC := 468
467 [-]: SETTABLE  R0 K63 R22   ; R0["pos"] := R22
468 [-]: GETUPVAL  R23 U9       ; R23 := U9
469 [-]: LOADK     R24 K94      ; R24 := "Nodes.Node"
470 [-]: LOADK     R25 K95      ; R25 := "Node"
471 [-]: GETUPVAL  R26 U10      ; R26 := U10
472 [-]: LEN       R26 R26      ; R26 := # R26
473 [-]: ADD       R26 R26 K20  ; R26 := R26 + 1
474 [-]: LOADK     R27 K96      ; R27 := -5000
475 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
476 [-]: GETGLOBAL R24 K97      ; R24 := mMovie
477 [-]: SELF      R24 R24 K98  ; R25 := R24; R24 := R24["0xA7FE5515"]
478 [-]: MOVE      R26 R23      ; R26 := R23
479 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
480 [-]: GETGLOBAL R25 K97      ; R25 := mMovie
481 [-]: SELF      R25 R25 K98  ; R26 := R25; R25 := R25["0xA7FE5515"]
482 [-]: MOVE      R27 R23      ; R27 := R23
483 [-]: LOADK     R28 K99      ; R28 := ".Node"
484 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
485 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
486 [-]: GETGLOBAL R26 K97      ; R26 := mMovie
487 [-]: SELF      R26 R26 K100 ; R27 := R26; R26 := R26["0x7E1F26D7"]
488 [-]: MOVE      R28 R23      ; R28 := R23
489 [-]: LOADK     R29 K101     ; R29 := ".Name.Bg"
490 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
491 [-]: GETGLOBAL R29 K15      ; R29 := _G
492 [-]: GETTABLE  R29 R29 K102 ; R29 := R29["UIMaterial_SmoothEdgeNoDepthTest"]
493 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
494 [-]: GETGLOBAL R26 K97      ; R26 := mMovie
495 [-]: SELF      R26 R26 K103 ; R27 := R26; R26 := R26["0x880196A7"]
496 [-]: MOVE      R28 R23      ; R28 := R23
497 [-]: LOADK     R29 K104     ; R29 := "Name.Bg"
498 [-]: LOADK     R30 K105     ; R30 := "noMenuSelection"
499 [-]: MOVE      R31 R1       ; R31 := R1
500 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
501 [-]: LOADNIL   R26 R26      ; R26 := nil
502 [-]: GETGLOBAL R27 K27      ; R27 := 0x400E7765
503 [-]: GETTABLE  R28 R0 K47   ; R28 := R0["deco"]
504 [-]: CALL      R27 2 2      ; R27 := R27(R28)
505 [-]: TEST      R27 1        ; if R27 then PC := 566
506 [-]: JMP       566          ; PC := 566
507 [-]: GETUPVAL  R27 U11      ; R27 := U11
508 [-]: GETTABLE  R28 R0 K47   ; R28 := R0["deco"]
509 [-]: CALL      R27 2 1      ; R27(R28)
510 [-]: NEWTABLE  R27 0 3      ; R27 := {}
511 [-]: GETTABLE  R28 R0 K87   ; R28 := R0["decoOffset"]
512 [-]: SETTABLE  R27 K106 R28 ; R27["mOffset"] := R28
513 [-]: GETTABLE  R28 R0 K74   ; R28 := R0["decoRotation"]
514 [-]: SETTABLE  R27 K107 R28 ; R27["mRotation"] := R28
515 [-]: GETTABLE  R28 R0 K83   ; R28 := R0["scale"]
516 [-]: SETTABLE  R27 K108 R28 ; R27["mScale"] := R28
517 [-]: MOVE      R26 R27      ; R26 := R27
518 [-]: GETGLOBAL R27 K110     ; R27 := gBackgroundRegion
519 [-]: SELF      R27 R27 K111 ; R28 := R27; R27 := R27["0xBDD34CC6"]
520 [-]: GETGLOBAL R29 K112     ; R29 := 0xCAA43ABB
521 [-]: GETTABLE  R30 R0 K47   ; R30 := R0["deco"]
522 [-]: CALL      R29 2 2      ; R29 := R29(R30)
523 [-]: GETTABLE  R30 R26 K106 ; R30 := R26["mOffset"]
524 [-]: ADD       R30 R13 R30  ; R30 := R13 + R30
525 [-]: GETTABLE  R31 R26 K107 ; R31 := R26["mRotation"]
526 [-]: CALL      R27 5 2      ; R27 := R27(R28,R29,R30,R31)
527 [-]: SETTABLE  R26 K109 R27 ; R26["mInstance"] := R27
528 [-]: GETGLOBAL R27 K27      ; R27 := 0x400E7765
529 [-]: GETTABLE  R28 R26 K109 ; R28 := R26["mInstance"]
530 [-]: CALL      R27 2 2      ; R27 := R27(R28)
531 [-]: TEST      R27 1        ; if R27 then PC := 566
532 [-]: JMP       566          ; PC := 566
533 [-]: GETTABLE  R27 R26 K108 ; R27 := R26["mScale"]
534 [-]: GETTABLE  R28 R26 K109 ; R28 := R26["mInstance"]
535 [-]: SELF      R28 R28 K113 ; R29 := R28; R28 := R28["0x6A7E5F92"]
536 [-]: GETUPVAL  R30 U12      ; R30 := U12
537 [-]: GETTABLE  R30 R30 K114 ; R30 := R30["DECO_SCALE_MULTIPLIER"]
538 [-]: MUL       R30 R27 R30  ; R30 := R27 * R30
539 [-]: MOVE      R31 R1       ; R31 := R1
540 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
541 [-]: GETTABLE  R28 R26 K109 ; R28 := R26["mInstance"]
542 [-]: SELF      R28 R28 K115 ; R29 := R28; R28 := R28["0xB3733382"]
543 [-]: CALL      R28 2 2      ; R28 := R28(R29)
544 [-]: LOADK     R29 K20      ; R29 := 1
545 [-]: LEN       R30 R28      ; R30 := # R28
546 [-]: LOADK     R31 K20      ; R31 := 1
547 [-]: FORPREP   R29 559      ; R29 -= R31; PC := 559
548 [-]: GETTABLE  R33 R28 R32  ; R33 := R28[R32]
549 [-]: SELF      R33 R33 K113 ; R34 := R33; R33 := R33["0x6A7E5F92"]
550 [-]: LOADK     R35 K20      ; R35 := 1
551 [-]: MOVE      R36 R1       ; R36 := R1
552 [-]: CALL      R33 4 1      ; R33(R34,R35,R36)
553 [-]: GETTABLE  R33 R28 R32  ; R33 := R28[R32]
554 [-]: SELF      R33 R33 K116 ; R34 := R33; R33 := R33["0x8B598ED4"]
555 [-]: GETGLOBAL R35 K117     ; R35 := gLensFlareType
556 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
557 [-]: TEST      R33 0        ; if not R33 then PC := 559
558 [-]: JMP       559          ; PC := 559
559 [-]: FORLOOP   R29 548      ; R29 += R31; if R29 <= R30 then begin PC := 548; R32 := R29 end
560 [-]: TEST      R14 0        ; if not R14 then PC := 566
561 [-]: JMP       566          ; PC := 566
562 [-]: GETTABLE  R33 R26 K109 ; R33 := R26["mInstance"]
563 [-]: SELF      R33 R33 K118 ; R34 := R33; R33 := R33["0x8A42F754"]
564 [-]: MOVE      R35 R14      ; R35 := R14
565 [-]: CALL      R33 3 1      ; R33(R34,R35)
566 [-]: GETGLOBAL R33 K17      ; R33 := _T
567 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["CachedActiveMissions"]
568 [-]: TEST      R33 0        ; if not R33 then PC := 581
569 [-]: JMP       581          ; PC := 581
570 [-]: GETGLOBAL R33 K17      ; R33 := _T
571 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["CachedActiveMissions"]
572 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
573 [-]: TEST      R33 0        ; if not R33 then PC := 581
574 [-]: JMP       581          ; PC := 581
575 [-]: GETGLOBAL R33 K17      ; R33 := _T
576 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["CachedActiveMissions"]
577 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
578 [-]: GETTABLE  R33 R33 K120 ; R33 := R33["mVisible"]
579 [-]: TEST      R33 1        ; if R33 then PC := 641
580 [-]: JMP       641          ; PC := 641
581 [-]: GETGLOBAL R33 K15      ; R33 := _G
582 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedGoalInfo"]
583 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
584 [-]: TEST      R33 1        ; if R33 then PC := 641
585 [-]: JMP       641          ; PC := 641
586 [-]: GETGLOBAL R33 K17      ; R33 := _T
587 [-]: GETTABLE  R33 R33 K121 ; R33 := R33["CachedAlerts"]
588 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
589 [-]: TEST      R33 0        ; if not R33 then PC := 597
590 [-]: JMP       597          ; PC := 597
591 [-]: GETGLOBAL R33 K17      ; R33 := _T
592 [-]: GETTABLE  R33 R33 K121 ; R33 := R33["CachedAlerts"]
593 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
594 [-]: GETTABLE  R33 R33 K120 ; R33 := R33["mVisible"]
595 [-]: TEST      R33 1        ; if R33 then PC := 641
596 [-]: JMP       641          ; PC := 641
597 [-]: GETGLOBAL R33 K17      ; R33 := _T
598 [-]: GETTABLE  R33 R33 K122 ; R33 := R33["CachedInvasionInfo"]
599 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
600 [-]: TEST      R33 1        ; if R33 then PC := 641
601 [-]: JMP       641          ; PC := 641
602 [-]: GETGLOBAL R33 K17      ; R33 := _T
603 [-]: GETTABLE  R33 R33 K123 ; R33 := R33["CachedSyndicateMissions"]
604 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
605 [-]: TEST      R33 0        ; if not R33 then PC := 613
606 [-]: JMP       613          ; PC := 613
607 [-]: GETGLOBAL R33 K17      ; R33 := _T
608 [-]: GETTABLE  R33 R33 K123 ; R33 := R33["CachedSyndicateMissions"]
609 [-]: GETTABLE  R33 R33 R2   ; R33 := R33[R2]
610 [-]: GETTABLE  R33 R33 K120 ; R33 := R33["mVisible"]
611 [-]: TEST      R33 1        ; if R33 then PC := 641
612 [-]: JMP       641          ; PC := 641
613 [-]: GETTABLE  R33 R0 K1    ; R33 := R0["nodeType"]
614 [-]: GETGLOBAL R34 K2       ; R34 := Lotus_Game
615 [-]: GETTABLE  R34 R34 K124 ; R34 := R34["NT_HUB"]
616 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 640
617 [-]: JMP       640          ; PC := 640
618 [-]: GETGLOBAL R33 K27      ; R33 := 0x400E7765
619 [-]: GETTABLE  R34 R0 K12   ; R34 := R0["mission"]
620 [-]: GETTABLE  R34 R34 K125 ; R34 := R34["levelKeyName"]
621 [-]: CALL      R33 2 2      ; R33 := R33(R34)
622 [-]: TEST      R33 0        ; if not R33 then PC := 640
623 [-]: JMP       640          ; PC := 640
624 [-]: GETGLOBAL R33 K27      ; R33 := 0x400E7765
625 [-]: GETTABLE  R34 R0 K126  ; R34 := R0["keyChain"]
626 [-]: CALL      R33 2 2      ; R33 := R33(R34)
627 [-]: TEST      R33 0        ; if not R33 then PC := 640
628 [-]: JMP       640          ; PC := 640
629 [-]: GETTABLE  R33 R0 K1    ; R33 := R0["nodeType"]
630 [-]: GETGLOBAL R34 K2       ; R34 := Lotus_Game
631 [-]: GETTABLE  R34 R34 K11  ; R34 := R34["NT_SHORTCUT"]
632 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 640
633 [-]: JMP       640          ; PC := 640
634 [-]: GETTABLE  R33 R0 K1    ; R33 := R0["nodeType"]
635 [-]: GETGLOBAL R34 K2       ; R34 := Lotus_Game
636 [-]: GETTABLE  R34 R34 K127 ; R34 := R34["NT_JUNCTION"]
637 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 640
638 [-]: JMP       640          ; PC := 640
639 [-]: MOVE      R33 R0       ; R33 := R0
640 [-]: MOVE      R33 R1       ; R33 := R1
641 [-]: GETGLOBAL R34 K17      ; R34 := _T
642 [-]: GETTABLE  R34 R34 K128 ; R34 := R34["CachedNemesisMissions"]
643 [-]: GETTABLE  R34 R34 R2   ; R34 := R34[R2]
644 [-]: TEST      R34 0        ; if not R34 then PC := 660
645 [-]: JMP       660          ; PC := 660
646 [-]: GETGLOBAL R34 K17      ; R34 := _T
647 [-]: GETTABLE  R34 R34 K128 ; R34 := R34["CachedNemesisMissions"]
648 [-]: GETTABLE  R34 R34 R2   ; R34 := R34[R2]
649 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["attackType"]
650 [-]: TEST      R34 0        ; if not R34 then PC := 660
651 [-]: JMP       660          ; PC := 660
652 [-]: GETGLOBAL R34 K17      ; R34 := _T
653 [-]: GETTABLE  R34 R34 K128 ; R34 := R34["CachedNemesisMissions"]
654 [-]: GETTABLE  R34 R34 R2   ; R34 := R34[R2]
655 [-]: GETTABLE  R34 R34 K129 ; R34 := R34["attackType"]
656 [-]: EQ        1 R34 K130   ; if R34 == "Blockade" then PC := 659
657 [-]: JMP       659          ; PC := 659
658 [-]: MOVE      R34 R0       ; R34 := R0
659 [-]: MOVE      R34 R1       ; R34 := R1
660 [-]: GETGLOBAL R35 K97      ; R35 := mMovie
661 [-]: SELF      R35 R35 K131 ; R36 := R35; R35 := R35["0x5DB0BD4"]
662 [-]: GETTABLE  R37 R0 K4    ; R37 := R0["locTag"]
663 [-]: SELF      R37 R37 K51  ; R38 := R37; R37 := R37["0x5EC7A3D2"]
664 [-]: CALL      R37 2 2      ; R37 := R37(R38)
665 [-]: MOVE      R38 R1       ; R38 := R1
666 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
667 [-]: TEST      R5 0         ; if not R5 then PC := 682
668 [-]: JMP       682          ; PC := 682
669 [-]: LT        0 K39 R5     ; if 0 >= R5 then PC := 682
670 [-]: JMP       682          ; PC := 682
671 [-]: EQ        0 R5 K20     ; if R5 ~= 1 then PC := 702
672 [-]: JMP       702          ; PC := 702
673 [-]: GETGLOBAL R36 K97      ; R36 := mMovie
674 [-]: SELF      R36 R36 K131 ; R37 := R36; R36 := R36["0x5DB0BD4"]
675 [-]: LOADK     R38 K132     ; R38 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
676 [-]: MOVE      R39 R0       ; R39 := R0
677 [-]: NEWTABLE  R40 0 1      ; R40 := {}
678 [-]: SETTABLE  R40 K133 R35 ; R40["LOCATION"] := R35
679 [-]: CALL      R36 5 2      ; R36 := R36(R37,R38,R39,R40)
680 [-]: MOVE      R35 R36      ; R35 := R36
681 [-]: JMP       702          ; PC := 702
682 [-]: GETGLOBAL R36 K15      ; R36 := _G
683 [-]: GETTABLE  R36 R36 K16  ; R36 := R36["CachedGoalInfo"]
684 [-]: GETTABLE  R37 R0 K7    ; R37 := R0["name"]
685 [-]: SELF      R37 R37 K51  ; R38 := R37; R37 := R37["0x5EC7A3D2"]
686 [-]: CALL      R37 2 2      ; R37 := R37(R38)
687 [-]: GETTABLE  R36 R36 R37  ; R36 := R36[R37]
688 [-]: TEST      R36 0        ; if not R36 then PC := 702
689 [-]: JMP       702          ; PC := 702
690 [-]: GETGLOBAL R36 K97      ; R36 := mMovie
691 [-]: SELF      R36 R36 K131 ; R37 := R36; R36 := R36["0x5DB0BD4"]
692 [-]: GETGLOBAL R38 K15      ; R38 := _G
693 [-]: GETTABLE  R38 R38 K16  ; R38 := R38["CachedGoalInfo"]
694 [-]: GETTABLE  R39 R0 K7    ; R39 := R0["name"]
695 [-]: SELF      R39 R39 K51  ; R40 := R39; R39 := R39["0x5EC7A3D2"]
696 [-]: CALL      R39 2 2      ; R39 := R39(R40)
697 [-]: GETTABLE  R38 R38 R39  ; R38 := R38[R39]
698 [-]: GETTABLE  R38 R38 K134 ; R38 := R38["mDesc"]
699 [-]: MOVE      R39 R1       ; R39 := R1
700 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
701 [-]: MOVE      R35 R36      ; R35 := R36
702 [-]: TEST      R34 0        ; if not R34 then PC := 717
703 [-]: JMP       717          ; PC := 717
704 [-]: MOVE      R36 R35      ; R36 := R35
705 [-]: LOADK     R37 K135     ; R37 := " ("
706 [-]: GETGLOBAL R38 K97      ; R38 := mMovie
707 [-]: SELF      R38 R38 K131 ; R39 := R38; R38 := R38["0x5DB0BD4"]
708 [-]: GETGLOBAL R40 K17      ; R40 := _T
709 [-]: GETTABLE  R40 R40 K128 ; R40 := R40["CachedNemesisMissions"]
710 [-]: GETTABLE  R40 R40 R2   ; R40 := R40[R2]
711 [-]: GETTABLE  R40 R40 K136 ; R40 := R40["mMissionInfo"]
712 [-]: GETTABLE  R40 R40 K137 ; R40 := R40["uniqueName"]
713 [-]: MOVE      R41 R0       ; R41 := R0
714 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
715 [-]: LOADK     R39 K138     ; R39 := ")"
716 [-]: CONCAT    R35 R36 R39  ; R35 := R36 .. R37 .. R38 .. R39
717 [-]: NEWTABLE  R36 0 19     ; R36 := {}
718 [-]: GETTABLE  R37 R0 K7    ; R37 := R0["name"]
719 [-]: SETTABLE  R36 K7 R37   ; R36["name"] := R37
720 [-]: GETGLOBAL R37 K52      ; R37 := string
721 [-]: GETTABLE  R37 R37 K140 ; R37 := R37["0x639C642A"]
722 [-]: MOVE      R38 R35      ; R38 := R35
723 [-]: CALL      R37 2 2      ; R37 := R37(R38)
724 [-]: SETTABLE  R36 K139 R37 ; R36["locName"] := R37
725 [-]: SETTABLE  R36 K141 R24 ; R36["memberIndex"] := R24
726 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
727 [-]: SELF      R37 R37 K98  ; R38 := R37; R37 := R37["0xA7FE5515"]
728 [-]: MOVE      R39 R23      ; R39 := R23
729 [-]: LOADK     R40 K143     ; R40 := ".Name"
730 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
731 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
732 [-]: SETTABLE  R36 K142 R37 ; R36["labelIndex"] := R37
733 [-]: SETTABLE  R36 K144 R25 ; R36["nodeIndex"] := R25
734 [-]: SETTABLE  R36 K145 R23 ; R36["clipName"] := R23
735 [-]: SETTABLE  R36 K146 R13 ; R36["position"] := R13
736 [-]: SETTABLE  R36 K47 R26  ; R36["deco"] := R26
737 [-]: SETTABLE  R36 K147 R0  ; R36["radialSector"] := R0
738 [-]: GETTABLE  R37 R0 K1    ; R37 := R0["nodeType"]
739 [-]: GETGLOBAL R38 K2       ; R38 := Lotus_Game
740 [-]: GETTABLE  R38 R38 K11  ; R38 := R38["NT_SHORTCUT"]
741 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 744
742 [-]: JMP       744          ; PC := 744
743 [-]: MOVE      R37 R0       ; R37 := R0
744 [-]: MOVE      R37 R1       ; R37 := R1
745 [-]: SETTABLE  R36 K148 R37 ; R36["isShortcut"] := R37
746 [-]: GETTABLE  R37 R0 K1    ; R37 := R0["nodeType"]
747 [-]: GETGLOBAL R38 K2       ; R38 := Lotus_Game
748 [-]: GETTABLE  R38 R38 K127 ; R38 := R38["NT_JUNCTION"]
749 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 752
750 [-]: JMP       752          ; PC := 752
751 [-]: MOVE      R37 R0       ; R37 := R0
752 [-]: MOVE      R37 R1       ; R37 := R1
753 [-]: SETTABLE  R36 K149 R37 ; R36["isJunction"] := R37
754 [-]: SETTABLE  R36 K150 R5  ; R36["reconstructionProgress"] := R5
755 [-]: GETTABLE  R37 R0 K1    ; R37 := R0["nodeType"]
756 [-]: GETGLOBAL R38 K2       ; R38 := Lotus_Game
757 [-]: GETTABLE  R38 R38 K152 ; R38 := R38["NT_EMPTY"]
758 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 761
759 [-]: JMP       761          ; PC := 761
760 [-]: MOVE      R37 R0       ; R37 := R0
761 [-]: MOVE      R37 R1       ; R37 := R1
762 [-]: SETTABLE  R36 K151 R37 ; R36["isEmpty"] := R37
763 [-]: SETTABLE  R36 K153 R33 ; R36["isActiveMission"] := R33
764 [-]: SETTABLE  R36 K154 R34 ; R36["isBlockaded"] := R34
765 [-]: GETTABLE  R37 R0 K155  ; R37 := R0["isCriticalPath"]
766 [-]: SETTABLE  R36 K155 R37 ; R36["isCriticalPath"] := R37
767 [-]: SETTABLE  R36 K156 R4  ; R36["locationEnabled"] := R4
768 [-]: GETTABLE  R37 R0 K157  ; R37 := R0["missionsCompleted"]
769 [-]: SETTABLE  R36 K157 R37 ; R36["missionsCompleted"] := R37
770 [-]: GETTABLE  R37 R1 K158  ; R37 := R1["guildId"]
771 [-]: SETTABLE  R36 K158 R37 ; R36["guildId"] := R37
772 [-]: GETTABLE  R37 R1 K159  ; R37 := R1["clanTier"]
773 [-]: SETTABLE  R36 K159 R37 ; R36["clanTier"] := R37
774 [-]: GETTABLE  R37 R1 K160  ; R37 := R1["overrideIconSize"]
775 [-]: SETTABLE  R36 K160 R37 ; R36["overrideIconSize"] := R37
776 [-]: TEST      R3 0         ; if not R3 then PC := 779
777 [-]: JMP       779          ; PC := 779
778 [-]: SETTABLE  R36 K161 K23 ; R36["edgesLocked"] := "0x1"
779 [-]: GETGLOBAL R37 K162     ; R37 := table
780 [-]: GETTABLE  R37 R37 K163 ; R37 := R37["0xE6450C9D"]
781 [-]: GETUPVAL  R38 U10      ; R38 := U10
782 [-]: MOVE      R39 R36      ; R39 := R36
783 [-]: CALL      R37 3 1      ; R37(R38,R39)
784 [-]: GETUPVAL  R37 U13      ; R37 := U13
785 [-]: GETGLOBAL R38 K6       ; R38 := 0x9FAED6BC
786 [-]: GETTABLE  R39 R36 K7   ; R39 := R36["name"]
787 [-]: CALL      R38 2 2      ; R38 := R38(R39)
788 [-]: GETUPVAL  R39 U10      ; R39 := U10
789 [-]: GETUPVAL  R40 U10      ; R40 := U10
790 [-]: LEN       R40 R40      ; R40 := # R40
791 [-]: GETTABLE  R39 R39 R40  ; R39 := R39[R40]
792 [-]: SETTABLE  R37 R38 R39  ; R37[R38] := R39
793 [-]: GETUPVAL  R37 U10      ; R37 := U10
794 [-]: LEN       R37 R37      ; R37 := # R37
795 [-]: SETTABLE  R36 K164 R37 ; R36["id"] := R37
796 [-]: GETUPVAL  R37 U14      ; R37 := U14
797 [-]: MOVE      R38 R36      ; R38 := R36
798 [-]: CALL      R37 2 2      ; R37 := R37(R38)
799 [-]: SETTABLE  R36 K165 R37 ; R36["isSurfaceNode"] := R37
800 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
801 [-]: SELF      R37 R37 K166 ; R38 := R37; R37 := R37["0x1C19D966"]
802 [-]: MOVE      R39 R23      ; R39 := R23
803 [-]: LOADK     R40 K167     ; R40 := "Id"
804 [-]: GETTABLE  R41 R36 K164 ; R41 := R36["id"]
805 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
806 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
807 [-]: SELF      R37 R37 K166 ; R38 := R37; R37 := R37["0x1C19D966"]
808 [-]: MOVE      R39 R23      ; R39 := R23
809 [-]: LOADK     R40 K168     ; R40 := "RollOverCallback"
810 [-]: LOADK     R41 K169     ; R41 := "NodeRollOver"
811 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
812 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
813 [-]: SELF      R37 R37 K166 ; R38 := R37; R37 := R37["0x1C19D966"]
814 [-]: MOVE      R39 R23      ; R39 := R23
815 [-]: LOADK     R40 K170     ; R40 := "RollOutCallback"
816 [-]: LOADK     R41 K171     ; R41 := "NodeRollOut"
817 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
818 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
819 [-]: SELF      R37 R37 K166 ; R38 := R37; R37 := R37["0x1C19D966"]
820 [-]: MOVE      R39 R23      ; R39 := R23
821 [-]: LOADK     R40 K172     ; R40 := "SelectCallback"
822 [-]: LOADK     R41 K173     ; R41 := "NodeSelect"
823 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
824 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
825 [-]: SELF      R37 R37 K103 ; R38 := R37; R37 := R37["0x880196A7"]
826 [-]: MOVE      R39 R23      ; R39 := R23
827 [-]: LOADK     R40 K174     ; R40 := "Btn"
828 [-]: LOADK     R41 K175     ; R41 := "_width"
829 [-]: LOADK     R42 K176     ; R42 := 48
830 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
831 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
832 [-]: SELF      R37 R37 K103 ; R38 := R37; R37 := R37["0x880196A7"]
833 [-]: MOVE      R39 R23      ; R39 := R23
834 [-]: LOADK     R40 K174     ; R40 := "Btn"
835 [-]: LOADK     R41 K177     ; R41 := "_height"
836 [-]: LOADK     R42 K178     ; R42 := 32
837 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
838 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
839 [-]: SELF      R37 R37 K179 ; R38 := R37; R37 := R37["0x445651FB"]
840 [-]: GETTABLE  R39 R36 K141 ; R39 := R36["memberIndex"]
841 [-]: LOADK     R40 K180     ; R40 := "_alpha"
842 [-]: LOADK     R41 K39      ; R41 := 0
843 [-]: CALL      R37 5 1      ; R37(R38,R39,R40,R41)
844 [-]: GETGLOBAL R37 K97      ; R37 := mMovie
845 [-]: SELF      R37 R37 K179 ; R38 := R37; R37 := R37["0x445651FB"]
846 [-]: GETTABLE  R39 R36 K142 ; R39 := R36["labelIndex"]
847 [-]: LOADK     R40 K180     ; R40 := "_alpha"
848 [-]: GETUPVAL  R41 U15      ; R41 := U15
849 [-]: MOVE      R42 R36      ; R42 := R36
850 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
851 [-]: CALL      R37 0 1      ; R37(R38,...)
852 [-]: GETGLOBAL R37 K15      ; R37 := _G
853 [-]: GETTABLE  R37 R37 K181 ; R37 := R37["StalkerMode"]
854 [-]: TEST      R37 0        ; if not R37 then PC := 880
855 [-]: JMP       880          ; PC := 880
856 [-]: GETUPVAL  R37 U5       ; R37 := U5
857 [-]: GETTABLE  R37 R37 K182 ; R37 := R37["0xE4E5932F"]
858 [-]: MOVE      R38 R2       ; R38 := R2
859 [-]: GETUPVAL  R39 U8       ; R39 := U8
860 [-]: MOVE      R40 R0       ; R40 := R0
861 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
862 [-]: GETGLOBAL R38 K97      ; R38 := mMovie
863 [-]: SELF      R38 R38 K166 ; R39 := R38; R38 := R38["0x1C19D966"]
864 [-]: MOVE      R40 R23      ; R40 := R23
865 [-]: LOADK     R41 K183     ; R41 := "_visible"
866 [-]: GETUPVAL  R42 U16      ; R42 := U16
867 [-]: EQ        1 R42 K0     ; if R42 == nil then PC := 877
868 [-]: JMP       877          ; PC := 877
869 [-]: GETUPVAL  R42 U16      ; R42 := U16
870 [-]: GETTABLE  R42 R42 R37  ; R42 := R42[R37]
871 [-]: TEST      R42 0        ; if not R42 then PC := 879
872 [-]: JMP       879          ; PC := 879
873 [-]: GETUPVAL  R42 U16      ; R42 := U16
874 [-]: GETTABLE  R42 R42 R37  ; R42 := R42[R37]
875 [-]: LT        1 K39 R42    ; if 0 < R42 then PC := 878
876 [-]: JMP       878          ; PC := 878
877 [-]: MOVE      R42 R0       ; R42 := R0
878 [-]: MOVE      R42 R1       ; R42 := R1
879 [-]: CALL      R38 5 1      ; R38(R39,R40,R41,R42)
880 [-]: RETURN    R36 2        ; return R36
881 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2205
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["radialSector"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SETTABLE  R0 K0 R1     ; R0["completed"] := R1
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: SETTABLE  R0 K2 R1     ; R0["locked"] := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K3 R1     ; R0["icon"] := R1
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 15 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["completed"]
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["isActiveMission"]
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["notificationClip"]
 28 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K6 K9     ; R0["special"] := nil
 31 [-]: GETGLOBAL R1 K10       ; R1 := nodeLockedTexture
 32 [-]: LOADNIL   R2 R2        ; R2 := nil
 33 [-]: LOADK     R3 K11       ; R3 := 56
 34 [-]: GETGLOBAL R4 K12       ; R4 := 0x9FAED6BC
 35 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["name"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: GETGLOBAL R5 K14       ; R5 := _T
 38 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["CachedSkullNodes"]
 39 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 40 [-]: TEST      R5 1         ; if R5 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R5 K14       ; R5 := _T
 43 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 44 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 45 [-]: TEST      R5 0         ; if not R5 then PC := 66
 46 [-]: JMP       66           ; PC := 66
 47 [-]: GETGLOBAL R5 K14       ; R5 := _T
 48 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["CachedAlerts"]
 49 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 50 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mAlertInfo"]
 51 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mMissionInfo"]
 52 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["nightmare"]
 53 [-]: TEST      R5 0         ; if not R5 then PC := 66
 54 [-]: JMP       66           ; PC := 66
 55 [-]: GETUPVAL  R5 U3        ; R5 := U3
 56 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 57 [-]: TEST      R5 0         ; if not R5 then PC := 65
 58 [-]: JMP       65           ; PC := 65
 59 [-]: GETUPVAL  R5 U3        ; R5 := U3
 60 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 61 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["IsQuest"]
 62 [-]: MOVE      R5 R5        ; R5 := R5
 63 [-]: JMP       66           ; PC := 66
 64 [-]: MOVE      R5 R0        ; R5 := R0
 65 [-]: MOVE      R5 R1        ; R5 := R1
 66 [-]: GETGLOBAL R6 K21       ; R6 := _G
 67 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 68 [-]: TEST      R6 0         ; if not R6 then PC := 105
 69 [-]: JMP       105          ; PC := 105
 70 [-]: GETGLOBAL R6 K21       ; R6 := _G
 71 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
 72 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 73 [-]: TEST      R6 0         ; if not R6 then PC := 105
 74 [-]: JMP       105          ; PC := 105
 75 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 76 [-]: GETGLOBAL R7 K21       ; R7 := _G
 77 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["CachedGoalInfo"]
 78 [-]: GETTABLE  R7 R7 R4     ; R7 := R7[R4]
 79 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["mIcon"]
 80 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 81 [-]: TEST      R6 1         ; if R6 then PC := 105
 82 [-]: JMP       105          ; PC := 105
 83 [-]: GETGLOBAL R6 K24       ; R6 := string
 84 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["0xDE44F664"]
 85 [-]: GETGLOBAL R7 K12       ; R7 := 0x9FAED6BC
 86 [-]: GETGLOBAL R8 K21       ; R8 := _G
 87 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["CachedGoalInfo"]
 88 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 89 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["mTag"]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: LOADK     R8 K27       ; R8 := "Halloween"
 92 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 93 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
 96 [-]: LOADK     R3 K29       ; R3 := 0
 97 [-]: JMP       191          ; PC := 191
 98 [-]: GETGLOBAL R1 K30       ; R1 := nodeSpecialTexture
 99 [-]: GETGLOBAL R6 K21       ; R6 := _G
100 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["CachedGoalInfo"]
101 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
102 [-]: GETTABLE  R2 R6 K23    ; R2 := R6["mIcon"]
103 [-]: LOADK     R3 K31       ; R3 := 90
104 [-]: JMP       191          ; PC := 191
105 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
106 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["icon"]
107 [-]: CALL      R6 2 2       ; R6 := R6(R7)
108 [-]: TEST      R6 1         ; if R6 then PC := 132
109 [-]: JMP       132          ; PC := 132
110 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
111 [-]: TEST      R6 0         ; if not R6 then PC := 132
112 [-]: JMP       132          ; PC := 132
113 [-]: GETUPVAL  R6 U4        ; R6 := U4
114 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["0xF81722A2"]
115 [-]: MOVE      R7 R5        ; R7 := R5
116 [-]: GETGLOBAL R8 K33       ; R8 := nodeNightmareTexture
117 [-]: GETGLOBAL R9 K30       ; R9 := nodeSpecialTexture
118 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
119 [-]: MOVE      R1 R6        ; R1 := R6
120 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
121 [-]: LOADK     R3 K34       ; R3 := 84
122 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
123 [-]: TEST      R6 0         ; if not R6 then PC := 191
124 [-]: JMP       191          ; PC := 191
125 [-]: GETGLOBAL R6 K35       ; R6 := table
126 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
127 [-]: GETUPVAL  R7 U5        ; R7 := U5
128 [-]: NEWTABLE  R8 0 1       ; R8 := {}
129 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
130 [-]: CALL      R6 3 1       ; R6(R7,R8)
131 [-]: JMP       191          ; PC := 191
132 [-]: GETTABLE  R6 R0 K38    ; R6 := R0["isJunction"]
133 [-]: TEST      R6 0         ; if not R6 then PC := 156
134 [-]: JMP       156          ; PC := 156
135 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
136 [-]: TEST      R6 0         ; if not R6 then PC := 141
137 [-]: JMP       141          ; PC := 141
138 [-]: GETGLOBAL R1 K39       ; R1 := junctionLockedTexture
139 [-]: LOADK     R3 K40       ; R3 := 70
140 [-]: JMP       154          ; PC := 154
141 [-]: LOADK     R3 K31       ; R3 := 90
142 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
143 [-]: TEST      R6 0         ; if not R6 then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: GETGLOBAL R1 K41       ; R1 := junctionUnlockedTexture
146 [-]: JMP       154          ; PC := 154
147 [-]: GETGLOBAL R1 K42       ; R1 := junctionNextMissionTexture
148 [-]: GETGLOBAL R6 K35       ; R6 := table
149 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
150 [-]: GETUPVAL  R7 U6        ; R7 := U6
151 [-]: NEWTABLE  R8 0 1       ; R8 := {}
152 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
153 [-]: CALL      R6 3 1       ; R6(R7,R8)
154 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["icon"]
155 [-]: JMP       191          ; PC := 191
156 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["completed"]
157 [-]: TEST      R6 1         ; if R6 then PC := 187
158 [-]: JMP       187          ; PC := 187
159 [-]: GETTABLE  R6 R0 K43    ; R6 := R0["displayMissionOverride"]
160 [-]: TEST      R6 1         ; if R6 then PC := 187
161 [-]: JMP       187          ; PC := 187
162 [-]: GETUPVAL  R6 U7        ; R6 := U7
163 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 168
164 [-]: JMP       168          ; PC := 168
165 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
166 [-]: TEST      R6 0         ; if not R6 then PC := 187
167 [-]: JMP       187          ; PC := 187
168 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
169 [-]: TEST      R6 1         ; if R6 then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: SETTABLE  R0 K6 K7     ; R0["special"] := "0x1"
172 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["IsQuest"]
173 [-]: TEST      R6 0         ; if not R6 then PC := 178
174 [-]: JMP       178          ; PC := 178
175 [-]: GETGLOBAL R6 K21       ; R6 := _G
176 [-]: GETTABLE  R1 R6 K44    ; R1 := R6["UITexture_Story"]
177 [-]: JMP       180          ; PC := 180
178 [-]: LOADK     R3 K45       ; R3 := 120
179 [-]: GETGLOBAL R1 K46       ; R1 := nodeNextMissionTexture
180 [-]: GETGLOBAL R6 K35       ; R6 := table
181 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["0xE6450C9D"]
182 [-]: GETUPVAL  R7 U6        ; R7 := U6
183 [-]: NEWTABLE  R8 0 1       ; R8 := {}
184 [-]: SETTABLE  R8 K37 R0    ; R8["Node"] := R0
185 [-]: CALL      R6 3 1       ; R6(R7,R8)
186 [-]: JMP       191          ; PC := 191
187 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
188 [-]: TEST      R6 1         ; if R6 then PC := 191
189 [-]: JMP       191          ; PC := 191
190 [-]: GETGLOBAL R1 K28       ; R1 := nodeUnlockedTexture
191 [-]: GETTABLE  R6 R0 K47    ; R6 := R0["guildId"]
192 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
193 [-]: JMP       217          ; PC := 217
194 [-]: GETTABLE  R6 R0 K48    ; R6 := R0["clanTier"]
195 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 217
196 [-]: JMP       217          ; PC := 217
197 [-]: GETGLOBAL R6 K49       ; R6 := clanTierIcons
198 [-]: GETTABLE  R7 R0 K48    ; R7 := R0["clanTier"]
199 [-]: GETTABLE  R2 R6 R7     ; R2 := R6[R7]
200 [-]: GETGLOBAL R6 K21       ; R6 := _G
201 [-]: GETTABLE  R1 R6 K50    ; R1 := R6["UITexture_CircleGradientBacker"]
202 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
203 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
204 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
205 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
206 [-]: LOADK     R10 K55      ; R10 := "_color"
207 [-]: LOADK     R11 K56      ; R11 := 65518
208 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
209 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
210 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
211 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
212 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
213 [-]: LOADK     R10 K57      ; R10 := "_alpha"
214 [-]: LOADK     R11 K29      ; R11 := 0
215 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
216 [-]: JMP       220          ; PC := 220
217 [-]: EQ        0 R4 K58     ; if R4 ~= "SolNode332" then PC := 220
218 [-]: JMP       220          ; PC := 220
219 [-]: LOADK     R3 K45       ; R3 := 120
220 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["isActiveMission"]
221 [-]: SETTABLE  R0 K59 R6    ; R0["visibleLabel"] := R6
222 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
223 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
224 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
225 [-]: LOADK     R9 K60       ; R9 := "Node.Container.Highlight"
226 [-]: LOADK     R10 K61      ; R10 := "_visible"
227 [-]: GETTABLE  R11 R0 K2    ; R11 := R0["locked"]
228 [-]: TEST      R11 1        ; if R11 then PC := 233
229 [-]: JMP       233          ; PC := 233
230 [-]: GETTABLE  R11 R0 K0    ; R11 := R0["completed"]
231 [-]: MOVE      R11 R11      ; R11 := R11
232 [-]: JMP       235          ; PC := 235
233 [-]: MOVE      R11 R0       ; R11 := R0
234 [-]: MOVE      R11 R1       ; R11 := R1
235 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
236 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
237 [-]: SELF      R6 R6 K62    ; R7 := R6; R6 := R6["0x26581636"]
238 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
239 [-]: LOADK     R9 K63       ; R9 := ".Node.Container.Node"
240 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
241 [-]: MOVE      R9 R1        ; R9 := R1
242 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
243 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
244 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
245 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
246 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
247 [-]: LOADK     R10 K64      ; R10 := "_width"
248 [-]: MOVE      R11 R3       ; R11 := R3
249 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
250 [-]: GETGLOBAL R6 K51       ; R6 := mMovie
251 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6["0x880196A7"]
252 [-]: GETTABLE  R8 R0 K53    ; R8 := R0["clipName"]
253 [-]: LOADK     R9 K54       ; R9 := "Node.Container.Node"
254 [-]: LOADK     R10 K65      ; R10 := "_height"
255 [-]: MOVE      R11 R3       ; R11 := R3
256 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
257 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["locked"]
258 [-]: TEST      R6 0         ; if not R6 then PC := 263
259 [-]: JMP       263          ; PC := 263
260 [-]: GETTABLE  R6 R0 K66    ; R6 := R0["forceHover"]
261 [-]: TEST      R6 0         ; if not R6 then PC := 279
262 [-]: JMP       279          ; PC := 279
263 [-]: GETGLOBAL R6 K14       ; R6 := _T
264 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
265 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 278
266 [-]: JMP       278          ; PC := 278
267 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["radialSector"]
268 [-]: EQ        1 R6 K9      ; if R6 == nil then PC := 277
269 [-]: JMP       277          ; PC := 277
270 [-]: GETGLOBAL R6 K14       ; R6 := _T
271 [-]: GETTABLE  R6 R6 K67    ; R6 := R6["gPendingMission"]
272 [-]: GETTABLE  R6 R6 K68    ; R6 := R6["baseNodeName"]
273 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["radialSector"]
274 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["name"]
275 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 278
276 [-]: JMP       278          ; PC := 278
277 [-]: MOVE      R6 R0        ; R6 := R0
278 [-]: MOVE      R6 R1        ; R6 := R1
279 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
280 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
281 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
282 [-]: LOADK     R10 K70      ; R10 := "enabled"
283 [-]: MOVE      R11 R6       ; R11 := R6
284 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
285 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
286 [-]: SELF      R7 R7 K62    ; R8 := R7; R7 := R7["0x26581636"]
287 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
288 [-]: LOADK     R10 K71      ; R10 := ".Node.Container.Icon"
289 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
290 [-]: MOVE      R10 R2       ; R10 := R2
291 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
292 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
293 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
294 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
295 [-]: LOADK     R10 K72      ; R10 := "Node.Container.Icon"
296 [-]: LOADK     R11 K61      ; R11 := "_visible"
297 [-]: GETGLOBAL R12 K4       ; R12 := 0x400E7765
298 [-]: MOVE      R13 R2       ; R13 := R2
299 [-]: CALL      R12 2 2      ; R12 := R12(R13)
300 [-]: MOVE      R12 R12      ; R12 := R12
301 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
302 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["special"]
303 [-]: TEST      R7 0         ; if not R7 then PC := 311
304 [-]: JMP       311          ; PC := 311
305 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
306 [-]: SELF      R7 R7 K73    ; R8 := R7; R7 := R7["0x445651FB"]
307 [-]: GETTABLE  R9 R0 K74    ; R9 := R0["nodeIndex"]
308 [-]: LOADK     R10 K57      ; R10 := "_alpha"
309 [-]: LOADK     R11 K75      ; R11 := 100
310 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
311 [-]: GETTABLE  R7 R0 K76    ; R7 := R0["locationEnabled"]
312 [-]: TEST      R7 1         ; if R7 then PC := 321
313 [-]: JMP       321          ; PC := 321
314 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
315 [-]: SELF      R7 R7 K52    ; R8 := R7; R7 := R7["0x880196A7"]
316 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
317 [-]: LOADK     R10 K37      ; R10 := "Node"
318 [-]: LOADK     R11 K61      ; R11 := "_visible"
319 [-]: MOVE      R12 R0       ; R12 := R0
320 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
321 [-]: GETTABLE  R7 R0 K77    ; R7 := R0["isEmpty"]
322 [-]: TEST      R7 0         ; if not R7 then PC := 330
323 [-]: JMP       330          ; PC := 330
324 [-]: GETGLOBAL R7 K51       ; R7 := mMovie
325 [-]: SELF      R7 R7 K69    ; R8 := R7; R7 := R7["0x1C19D966"]
326 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["clipName"]
327 [-]: LOADK     R10 K61      ; R10 := "_visible"
328 [-]: MOVE      R11 R0       ; R11 := R0
329 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
330 [-]: GETUPVAL  R7 U8        ; R7 := U8
331 [-]: MOVE      R8 R0        ; R8 := R0
332 [-]: CALL      R7 2 1       ; R7(R8)
333 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2308
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x52C8784B"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := gGameData
  4 [-]: CALL      R0 2 5       ; R0,R1,R2,R3 := R0(R1)
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x400E7765
  6 [-]: MOVE      R5 R0        ; R5 := R0
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: TEST      R4 1         ; if R4 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0xFD6CA2ED"]
 11 [-]: SUB       R6 R1 K4     ; R6 := R1 - 1
 12 [-]: MOVE      R7 R2        ; R7 := R2
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 16 [-]: CLOSURE   R5 0         ; R5 := closure(Function #57.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: MOVE      R0 R0        ; R0 := R0
 19 [-]: MOVE      R0 R2        ; R0 := R2
 20 [-]: GETGLOBAL R6 K2        ; R6 := 0x400E7765
 21 [-]: MOVE      R7 R0        ; R7 := R0
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 1         ; if R6 then PC := 112
 24 [-]: JMP       112          ; PC := 112
 25 [-]: TEST      R3 0         ; if not R3 then PC := 112
 26 [-]: JMP       112          ; PC := 112
 27 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0["0x6C207447"]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LEN       R7 R6        ; R7 := # R6
 30 [-]: LE        0 R1 R7      ; if R1 > R7 then PC := 112
 31 [-]: JMP       112          ; PC := 112
 32 [-]: GETTABLE  R7 R6 R1     ; R7 := R6[R1]
 33 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mMainMission"]
 34 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mKey"]
 35 [-]: GETGLOBAL R9 K2        ; R9 := 0x400E7765
 36 [-]: MOVE      R10 R8       ; R10 := R8
 37 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 38 [-]: TEST      R9 1         ; if R9 then PC := 54
 39 [-]: JMP       54           ; PC := 54
 40 [-]: GETGLOBAL R9 K8        ; R9 := 0x9FAED6BC
 41 [-]: SELF      R10 R8 K9    ; R11 := R8; R10 := R8["0x625DA4BB"]
 42 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 43 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 44 [-]: MOVE      R10 R5       ; R10 := R5
 45 [-]: MOVE      R11 R9       ; R11 := R9
 46 [-]: MOVE      R12 R8       ; R12 := R8
 47 [-]: MOVE      R13 R2       ; R13 := R2
 48 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 49 [-]: GETGLOBAL R10 K10      ; R10 := table
 50 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["0xE6450C9D"]
 51 [-]: MOVE      R11 R4       ; R11 := R4
 52 [-]: MOVE      R12 R9       ; R12 := R9
 53 [-]: CALL      R10 3 1      ; R10(R11,R12)
 54 [-]: GETTABLE  R10 R7 K12   ; R10 := R7["mMarkedNodes"]
 55 [-]: LEN       R10 R10      ; R10 := # R10
 56 [-]: LT        0 K13 R10    ; if 0 >= R10 then PC := 112
 57 [-]: JMP       112          ; PC := 112
 58 [-]: GETUPVAL  R10 U0       ; R10 := U0
 59 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["0xBB3AACF2"]
 60 [-]: CALL      R10 1 2      ; R10 := R10()
 61 [-]: GETTABLE  R11 R7 K15   ; R11 := R7["mShowFirstExistingMarkedNodeOnly"]
 62 [-]: TEST      R11 0        ; if not R11 then PC := 85
 63 [-]: JMP       85           ; PC := 85
 64 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10["0xCFD8148D"]
 65 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 66 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 67 [-]: GETGLOBAL R12 K17      ; R12 := EMPTY_SYMBOL
 68 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 112
 69 [-]: JMP       112          ; PC := 112
 70 [-]: MOVE      R12 R5       ; R12 := R5
 71 [-]: GETGLOBAL R13 K8       ; R13 := 0x9FAED6BC
 72 [-]: MOVE      R14 R11      ; R14 := R11
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: MOVE      R14 R8       ; R14 := R8
 75 [-]: MOVE      R15 R2       ; R15 := R2
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: GETGLOBAL R12 K10      ; R12 := table
 78 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["0xE6450C9D"]
 79 [-]: MOVE      R13 R4       ; R13 := R4
 80 [-]: GETGLOBAL R14 K8       ; R14 := 0x9FAED6BC
 81 [-]: MOVE      R15 R11      ; R15 := R11
 82 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 83 [-]: CALL      R12 0 1      ; R12(R13,...)
 84 [-]: JMP       112          ; PC := 112
 85 [-]: GETGLOBAL R12 K18      ; R12 := 0x63B09107
 86 [-]: GETTABLE  R13 R7 K12   ; R13 := R7["mMarkedNodes"]
 87 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
 88 [-]: JMP       110          ; PC := 110
 89 [-]: SELF      R17 R10 K19  ; R18 := R10; R17 := R10["0xDF213CE1"]
 90 [-]: MOVE      R19 R16      ; R19 := R16
 91 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 92 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["name"]
 93 [-]: GETGLOBAL R18 K17      ; R18 := EMPTY_SYMBOL
 94 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: MOVE      R17 R5       ; R17 := R5
 97 [-]: GETGLOBAL R18 K8       ; R18 := 0x9FAED6BC
 98 [-]: MOVE      R19 R16      ; R19 := R16
 99 [-]: CALL      R18 2 2      ; R18 := R18(R19)
100 [-]: MOVE      R19 R8       ; R19 := R8
101 [-]: MOVE      R20 R2       ; R20 := R2
102 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
103 [-]: GETGLOBAL R17 K10      ; R17 := table
104 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["0xE6450C9D"]
105 [-]: MOVE      R18 R4       ; R18 := R4
106 [-]: GETGLOBAL R19 K8       ; R19 := 0x9FAED6BC
107 [-]: MOVE      R20 R16      ; R20 := R16
108 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
109 [-]: CALL      R17 0 1      ; R17(R18,...)
110 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 89; R14 := R15 end
111 [-]: JMP       89           ; PC := 89
112 [-]: LOADK     R17 K4       ; R17 := 1
113 [-]: GETUPVAL  R18 U2       ; R18 := U2
114 [-]: LEN       R18 R18      ; R18 := # R18
115 [-]: LOADK     R19 K4       ; R19 := 1
116 [-]: FORPREP   R17 211      ; R17 -= R19; PC := 211
117 [-]: MOVE      R21 R1       ; R21 := R1
118 [-]: LOADK     R22 K4       ; R22 := 1
119 [-]: LEN       R23 R4       ; R23 := # R4
120 [-]: LOADK     R24 K4       ; R24 := 1
121 [-]: FORPREP   R22 129      ; R22 -= R24; PC := 129
122 [-]: GETTABLE  R26 R4 R25   ; R26 := R4[R25]
123 [-]: GETUPVAL  R27 U2       ; R27 := U2
124 [-]: GETTABLE  R27 R27 R20  ; R27 := R27[R20]
125 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 129
126 [-]: JMP       129          ; PC := 129
127 [-]: MOVE      R21 R0       ; R21 := R0
128 [-]: JMP       130          ; PC := 130
129 [-]: FORLOOP   R22 122      ; R22 += R24; if R22 <= R23 then begin PC := 122; R25 := R22 end
130 [-]: TEST      R21 0        ; if not R21 then PC := 211
131 [-]: JMP       211          ; PC := 211
132 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: CALL      R26 2 2      ; R26 := R26(R27)
135 [-]: TEST      R26 1        ; if R26 then PC := 211
136 [-]: JMP       211          ; PC := 211
137 [-]: GETGLOBAL R26 K2       ; R26 := 0x400E7765
138 [-]: GETUPVAL  R27 U1       ; R27 := U1
139 [-]: GETUPVAL  R28 U2       ; R28 := U2
140 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
141 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
142 [-]: CALL      R26 2 2      ; R26 := R26(R27)
143 [-]: TEST      R26 1        ; if R26 then PC := 211
144 [-]: JMP       211          ; PC := 211
145 [-]: GETUPVAL  R26 U3       ; R26 := U3
146 [-]: SELF      R26 R26 K19  ; R27 := R26; R26 := R26["0xDF213CE1"]
147 [-]: GETGLOBAL R28 K21      ; R28 := 0xEC274B1A
148 [-]: GETUPVAL  R29 U2       ; R29 := U2
149 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
150 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
151 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
152 [-]: GETGLOBAL R27 K2       ; R27 := 0x400E7765
153 [-]: MOVE      R28 R26      ; R28 := R26
154 [-]: CALL      R27 2 2      ; R27 := R27(R28)
155 [-]: TEST      R27 1        ; if R27 then PC := 211
156 [-]: JMP       211          ; PC := 211
157 [-]: GETUPVAL  R27 U1       ; R27 := U1
158 [-]: GETUPVAL  R28 U2       ; R28 := U2
159 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
160 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
161 [-]: SELF      R28 R26 K23  ; R29 := R26; R28 := R26["0xA4269DBC"]
162 [-]: CALL      R28 2 2      ; R28 := R28(R29)
163 [-]: SETTABLE  R27 K22 R28  ; R27["radialSector"] := R28
164 [-]: GETUPVAL  R27 U1       ; R27 := U1
165 [-]: GETUPVAL  R28 U2       ; R28 := U2
166 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
167 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
168 [-]: GETUPVAL  R28 U1       ; R28 := U1
169 [-]: GETUPVAL  R29 U2       ; R29 := U2
170 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
171 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
172 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
173 [-]: GETTABLE  R28 R28 K20  ; R28 := R28["name"]
174 [-]: SETTABLE  R27 K20 R28  ; R27["name"] := R28
175 [-]: GETUPVAL  R27 U1       ; R27 := U1
176 [-]: GETUPVAL  R28 U2       ; R28 := U2
177 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
178 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
179 [-]: GETUPVAL  R28 U1       ; R28 := U1
180 [-]: GETUPVAL  R29 U2       ; R29 := U2
181 [-]: GETTABLE  R29 R29 R20  ; R29 := R29[R20]
182 [-]: GETTABLE  R28 R28 R29  ; R28 := R28[R29]
183 [-]: GETTABLE  R28 R28 K22  ; R28 := R28["radialSector"]
184 [-]: GETTABLE  R28 R28 K25  ; R28 := R28["pos"]
185 [-]: SETTABLE  R27 K24 R28  ; R27["position"] := R28
186 [-]: GETUPVAL  R27 U1       ; R27 := U1
187 [-]: GETUPVAL  R28 U2       ; R28 := U2
188 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
189 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
190 [-]: GETGLOBAL R28 K27      ; R28 := string
191 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["0x639C642A"]
192 [-]: GETGLOBAL R29 K29      ; R29 := mMovie
193 [-]: SELF      R29 R29 K30  ; R30 := R29; R29 := R29["0x5DB0BD4"]
194 [-]: GETTABLE  R31 R26 K31  ; R31 := R26["locTag"]
195 [-]: SELF      R31 R31 K32  ; R32 := R31; R31 := R31["0x5EC7A3D2"]
196 [-]: CALL      R31 2 2      ; R31 := R31(R32)
197 [-]: MOVE      R32 R1       ; R32 := R1
198 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
199 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
200 [-]: SETTABLE  R27 K26 R28  ; R27["locName"] := R28
201 [-]: GETUPVAL  R27 U1       ; R27 := U1
202 [-]: GETUPVAL  R28 U2       ; R28 := U2
203 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
204 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
205 [-]: SETTABLE  R27 K33 K34  ; R27["IsQuest"] := "0x0"
206 [-]: GETUPVAL  R27 U1       ; R27 := U1
207 [-]: GETUPVAL  R28 U2       ; R28 := U2
208 [-]: GETTABLE  R28 R28 R20  ; R28 := R28[R20]
209 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
210 [-]: SETTABLE  R27 K35 K36  ; R27["KeyType"] := nil
211 [-]: FORLOOP   R17 117      ; R17 += R19; if R17 <= R18 then begin PC := 117; R20 := R17 end
212 [-]: MOVE      R4 R2        ; R4 := R2
213 [-]: GETGLOBAL R27 K37      ; R27 := _G
214 [-]: GETUPVAL  R28 U2       ; R28 := U2
215 [-]: SETTABLE  R27 K38 R28  ; R27["QuestNodeNames"] := R28
216 [-]: RETURN    R0 1         ; return 


; Function #57.1:
;
; Name:            
; Defined at line: 2317
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 10 [-]: SETTABLE  R2 K1 K2     ; R2["IsQuest"] := "0x1"
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 13 [-]: SETTABLE  R2 K3 R1     ; R2["KeyType"] := R1
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 17 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 78
 20 [-]: JMP       78           ; PC := 78
 21 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 1         ; if R2 then PC := 78
 25 [-]: JMP       78           ; PC := 78
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1["0xA26B0FA3"]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: MOVE      R3 R3        ; R3 := R3
 31 [-]: SETTABLE  R2 K1 R3     ; R2["IsQuest"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 34 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["radialSector"]
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: SETTABLE  R2 K6 R3     ; R2["keyChain"] := R3
 37 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0xA26B0FA3"]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R2 K7        ; R2 := 0xE6DC43B0
 42 [-]: GETGLOBAL R3 K8        ; R3 := 0x9FAED6BC
 43 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1["0x616C74B6"]
 44 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 45 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 50 [-]: GETGLOBAL R4 K11       ; R4 := string
 51 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["0x639C642A"]
 52 [-]: MOVE      R5 R2        ; R5 := R2
 53 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 54 [-]: SETTABLE  R3 K10 R4    ; R3["locName"] := R4
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 57 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 58 [-]: SELF      R4 R1 K14    ; R5 := R1; R4 := R1["0xB8637349"]
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4["0xA4269DBC"]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: SETTABLE  R3 K13 R4    ; R3["mission"] := R4
 63 [-]: GETUPVAL  R3 U0        ; R3 := U0
 64 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 65 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 66 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 67 [-]: GETUPVAL  R4 U2        ; R4 := U2
 68 [-]: SETTABLE  R3 K16 R4    ; R3["difficulty"] := R4
 69 [-]: GETUPVAL  R3 U0        ; R3 := U0
 70 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 71 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["radialSector"]
 72 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mission"]
 73 [-]: GETGLOBAL R4 K18       ; R4 := 0x2C00D429
 74 [-]: SELF      R5 R1 K19    ; R6 := R1; R5 := R1["0x1B252E3C"]
 75 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 76 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 77 [-]: SETTABLE  R3 K17 R4    ; R3["levelKeyName"] := R4
 78 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2396
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETUPVAL  R0 U2        ; R0 := U2
  6 [-]: CALL      R0 1 1       ; R0()
  7 [-]: LOADK     R0 K0        ; R0 := 1
  8 [-]: GETUPVAL  R1 U3        ; R1 := U3
  9 [-]: LEN       R1 R1        ; R1 := # R1
 10 [-]: LOADK     R2 K0        ; R2 := 1
 11 [-]: FORPREP   R0 23        ; R0 -= R2; PC := 23
 12 [-]: GETUPVAL  R4 U3        ; R4 := U3
 13 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 14 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["isShortcut"]
 15 [-]: TEST      R4 1         ; if R4 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETUPVAL  R4 U4        ; R4 := U4
 18 [-]: GETUPVAL  R5 U3        ; R5 := U3
 19 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 20 [-]: CALL      R4 2 1       ; R4(R5)
 21 [-]: GETGLOBAL R4 K2        ; R4 := 0x1BF588C6
 22 [-]: CALL      R4 1 1       ; R4()
 23 [-]: FORLOOP   R0 12        ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
 24 [-]: GETUPVAL  R4 U5        ; R4 := U5
 25 [-]: CALL      R4 1 1       ; R4()
 26 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2413
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 K1     ; R0["visibleLabel"] := "0x1"
  2 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x26581636"]
  4 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
  5 [-]: LOADK     R4 K5        ; R4 := ".Node.Container.Node"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["0xF81722A2"]
  9 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["locked"]
 10 [-]: GETGLOBAL R6 K8        ; R6 := shortcutLockedTexture
 11 [-]: GETGLOBAL R7 K9        ; R7 := shortcutUnlockedTexture
 12 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 15 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 17 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 18 [-]: LOADK     R5 K12       ; R5 := "_width"
 19 [-]: LOADK     R6 K13       ; R6 := 84
 20 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 21 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 23 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 24 [-]: LOADK     R4 K11       ; R4 := "Node.Container.Node"
 25 [-]: LOADK     R5 K14       ; R5 := "_height"
 26 [-]: LOADK     R6 K13       ; R6 := 84
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 29 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0x880196A7"]
 30 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["clipName"]
 31 [-]: LOADK     R4 K15       ; R4 := "Node.Container.Icon"
 32 [-]: LOADK     R5 K16       ; R5 := "_visible"
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2422
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 41        ; R0 -= R2; PC := 41
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
  9 [-]: TEST      R5 0         ; if not R5 then PC := 39
 10 [-]: JMP       39           ; PC := 39
 11 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 12 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R4 K2 K4     ; R4["locked"] := "0x1"
 15 [-]: SETTABLE  R4 K5 K6     ; R4["completed"] := "0x0"
 16 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["locked"]
 17 [-]: TEST      R5 0         ; if not R5 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R5 K7        ; R5 := 0x400E7765
 20 [-]: GETTABLE  R6 R4 K8     ; R6 := R4["targetRegion"]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: TEST      R5 1         ; if R5 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETTABLE  R5 R4 K8     ; R5 := R4["targetRegion"]
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: ADD       R7 R5 K0     ; R7 := R5 + 1
 27 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 28 [-]: SELF      R7 R6 K9     ; R8 := R6; R7 := R6["0x80A80EEB"]
 29 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 30 [-]: GETGLOBAL R8 K10       ; R8 := Lotus_Game
 31 [-]: GETTABLE  R8 R8 K11    ; R8 := R8["RadialRegion_RCS_LOCKED"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 36
 33 [-]: JMP       36           ; PC := 36
 34 [-]: SETTABLE  R4 K2 K6     ; R4["locked"] := "0x0"
 35 [-]: SETTABLE  R4 K5 K4     ; R4["completed"] := "0x1"
 36 [-]: GETUPVAL  R7 U2        ; R7 := U2
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R7 2 1       ; R7(R8)
 39 [-]: GETGLOBAL R7 K12       ; R7 := 0x1BF588C6
 40 [-]: CALL      R7 1 1       ; R7()
 41 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 42 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2448
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R0 K0        ; R0 := 1
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: LEN       R1 R1        ; R1 := # R1
  4 [-]: LOADK     R2 K0        ; R2 := 1
  5 [-]: FORPREP   R0 71        ; R0 -= R2; PC := 71
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
  8 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["radialSector"]
  9 [-]: GETUPVAL  R6 U1        ; R6 := U1
 10 [-]: GETTABLE  R7 R5 K2     ; R7 := R5["region"]
 11 [-]: ADD       R7 R7 K0     ; R7 := R7 + 1
 12 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 13 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6["0x80A80EEB"]
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["RadialRegion_RCS_LOCKED"]
 17 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 71
 18 [-]: JMP       71           ; PC := 71
 19 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 20 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 21 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["NT_HUB"]
 22 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 39
 23 [-]: JMP       39           ; PC := 39
 24 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 25 [-]: GETUPVAL  R8 U2        ; R8 := U2
 26 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["CETUS_NODE_TAG"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 30 [-]: GETUPVAL  R8 U2        ; R8 := U2
 31 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["FORTUNA_NODE_TAG"]
 32 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 35 [-]: GETUPVAL  R7 U3        ; R7 := U3
 36 [-]: MOVE      R8 R4        ; R8 := R4
 37 [-]: CALL      R7 2 1       ; R7(R8)
 38 [-]: JMP       71           ; PC := 71
 39 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["name"]
 40 [-]: GETUPVAL  R8 U4        ; R8 := U4
 41 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 48
 42 [-]: JMP       48           ; PC := 48
 43 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 44 [-]: GETUPVAL  R7 U3        ; R7 := U3
 45 [-]: MOVE      R8 R4        ; R8 := R4
 46 [-]: CALL      R7 2 1       ; R7(R8)
 47 [-]: JMP       71           ; PC := 71
 48 [-]: GETTABLE  R7 R5 K6     ; R7 := R5["nodeType"]
 49 [-]: GETGLOBAL R8 K4        ; R8 := Lotus_Game
 50 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["NT_JUNCTION"]
 51 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 61
 52 [-]: JMP       61           ; PC := 61
 53 [-]: GETTABLE  R7 R4 K14    ; R7 := R4["complete"]
 54 [-]: TEST      R7 1         ; if R7 then PC := 61
 55 [-]: JMP       61           ; PC := 61
 56 [-]: SETTABLE  R4 K15 K12   ; R4["forceHover"] := "0x1"
 57 [-]: GETUPVAL  R7 U3        ; R7 := U3
 58 [-]: MOVE      R8 R4        ; R8 := R4
 59 [-]: CALL      R7 2 1       ; R7(R8)
 60 [-]: JMP       71           ; PC := 71
 61 [-]: GETTABLE  R7 R4 K16    ; R7 := R4["reconstructionProgress"]
 62 [-]: TEST      R7 0         ; if not R7 then PC := 71
 63 [-]: JMP       71           ; PC := 71
 64 [-]: GETTABLE  R7 R4 K16    ; R7 := R4["reconstructionProgress"]
 65 [-]: LT        0 R7 K17     ; if R7 >= 2 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: SETTABLE  R4 K11 K12   ; R4["forceUnlock"] := "0x1"
 68 [-]: GETUPVAL  R7 U3        ; R7 := U3
 69 [-]: MOVE      R8 R4        ; R8 := R4
 70 [-]: CALL      R7 2 1       ; R7(R8)
 71 [-]: FORLOOP   R0 6         ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
 72 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2472
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: UNM       R1 R0        ; R1 := - R0
  2 [-]: DIV       R1 K0 R1     ; R1 := 100 / R1
  3 [-]: DIV       R0 R1 K1     ; R0 := R1 / 75
  4 [-]: LOADK     R1 K2        ; R1 := 1
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: LEN       R2 R2        ; R2 := # R2
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 63        ; R1 -= R3; PC := 63
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 11 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["overrideIconSize"]
 12 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 63
 13 [-]: JMP       63           ; PC := 63
 14 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["clipName"]
 15 [-]: LOADK     R7 K6        ; R7 := ".Btn"
 16 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 17 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["clipName"]
 18 [-]: LOADK     R8 K7        ; R8 := ".Node.Container.Icon"
 19 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 20 [-]: GETTABLE  R8 R5 K5     ; R8 := R5["clipName"]
 21 [-]: LOADK     R9 K8        ; R9 := ".Node.Container.Node"
 22 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 23 [-]: GETTABLE  R9 R5 K3     ; R9 := R5["overrideIconSize"]
 24 [-]: MUL       R9 R9 R0     ; R9 := R9 * R0
 25 [-]: MUL       R10 R9 K9    ; R10 := R9 * 2
 26 [-]: MUL       R11 R10 K10  ; R11 := R10 * 1.5
 27 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 28 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 29 [-]: MOVE      R14 R6       ; R14 := R6
 30 [-]: LOADK     R15 K13      ; R15 := "_width"
 31 [-]: MOVE      R16 R9       ; R16 := R9
 32 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 33 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 34 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 35 [-]: MOVE      R14 R6       ; R14 := R6
 36 [-]: LOADK     R15 K14      ; R15 := "_height"
 37 [-]: MOVE      R16 R9       ; R16 := R9
 38 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 39 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 40 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 41 [-]: MOVE      R14 R7       ; R14 := R7
 42 [-]: LOADK     R15 K13      ; R15 := "_width"
 43 [-]: MOVE      R16 R10      ; R16 := R10
 44 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 45 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 46 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 47 [-]: MOVE      R14 R7       ; R14 := R7
 48 [-]: LOADK     R15 K14      ; R15 := "_height"
 49 [-]: MOVE      R16 R10      ; R16 := R10
 50 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 51 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 52 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 53 [-]: MOVE      R14 R8       ; R14 := R8
 54 [-]: LOADK     R15 K13      ; R15 := "_width"
 55 [-]: MOVE      R16 R11      ; R16 := R11
 56 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 57 [-]: GETGLOBAL R12 K11      ; R12 := mMovie
 58 [-]: SELF      R12 R12 K12  ; R13 := R12; R12 := R12["0x1C19D966"]
 59 [-]: MOVE      R14 R8       ; R14 := R8
 60 [-]: LOADK     R15 K14      ; R15 := "_height"
 61 [-]: MOVE      R16 R11      ; R16 := R11
 62 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 63 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 64 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2496
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  70

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xECFDD17
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R5 U2        ; R5 := U2
 11 [-]: GETTABLE  R6 R4 K2     ; R6 := R4["clipName"]
 12 [-]: CALL      R5 2 1       ; R5(R6)
 13 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["deco"]
 14 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R5 K4        ; R5 := 0x400E7765
 17 [-]: GETTABLE  R6 R4 K3     ; R6 := R4["deco"]
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["mInstance"]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETGLOBAL R5 K6        ; R5 := gBackgroundRegion
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x9B0A3887"]
 24 [-]: GETTABLE  R7 R4 K3     ; R7 := R4["deco"]
 25 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["mInstance"]
 26 [-]: CALL      R5 3 1       ; R5(R6,R7)
 27 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
 28 [-]: JMP       10           ; PC := 10
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x7E6E6726"]
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 34 [-]: MOVE      R5 R1        ; R5 := R1
 35 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 36 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 37 [-]: GETUPVAL  R7 U5        ; R7 := U5
 38 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["0x7B440FBB"]
 39 [-]: MOVE      R8 R5        ; R8 := R5
 40 [-]: LOADNIL   R9 R9        ; R9 := nil
 41 [-]: GETGLOBAL R10 K10      ; R10 := gGameRules
 42 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0xC17093D6"]
 43 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 44 [-]: CALL      R7 0 1       ; R7(R8,...)
 45 [-]: LOADK     R7 K12       ; R7 := 1
 46 [-]: LEN       R8 R5        ; R8 := # R5
 47 [-]: LOADK     R9 K12       ; R9 := 1
 48 [-]: FORPREP   R7 57        ; R7 -= R9; PC := 57
 49 [-]: GETGLOBAL R11 K13      ; R11 := table
 50 [-]: GETTABLE  R11 R11 K14  ; R11 := R11["0xE6450C9D"]
 51 [-]: MOVE      R12 R6       ; R12 := R6
 52 [-]: GETTABLE  R13 R5 R10   ; R13 := R5[R10]
 53 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["Type"]
 54 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13["0x625DA4BB"]
 55 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 56 [-]: CALL      R11 0 1      ; R11(R12,...)
 57 [-]: FORLOOP   R7 49        ; R7 += R9; if R7 <= R8 then begin PC := 49; R10 := R7 end
 58 [-]: GETUPVAL  R11 U5       ; R11 := U5
 59 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["0x52C8784B"]
 60 [-]: GETGLOBAL R12 K18      ; R12 := gGameData
 61 [-]: CALL      R11 2 5      ; R11,R12,R13,R14 := R11(R12)
 62 [-]: GETGLOBAL R15 K4       ; R15 := 0x400E7765
 63 [-]: MOVE      R16 R11      ; R16 := R11
 64 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 65 [-]: TEST      R15 1        ; if R15 then PC := 123
 66 [-]: JMP       123          ; PC := 123
 67 [-]: GETUPVAL  R15 U5       ; R15 := U5
 68 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["0x68C19111"]
 69 [-]: GETGLOBAL R16 K18      ; R16 := gGameData
 70 [-]: MOVE      R17 R11      ; R17 := R11
 71 [-]: MOVE      R18 R1       ; R18 := R1
 72 [-]: CALL      R15 4 5      ; R15,R16,R17,R18 := R15(R16,R17,R18)
 73 [-]: GETGLOBAL R19 K4       ; R19 := 0x400E7765
 74 [-]: MOVE      R20 R18      ; R20 := R18
 75 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 76 [-]: TEST      R19 1        ; if R19 then PC := 123
 77 [-]: JMP       123          ; PC := 123
 78 [-]: NEWTABLE  R19 0 7      ; R19 := {}
 79 [-]: GETGLOBAL R20 K21      ; R20 := Lotus_Game
 80 [-]: GETTABLE  R20 R20 K22  ; R20 := R20["0xB880C02"]
 81 [-]: MOVE      R21 R18      ; R21 := R18
 82 [-]: LOADK     R22 K12      ; R22 := 1
 83 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 84 [-]: SETTABLE  R19 K20 R20  ; R19["Key"] := R20
 85 [-]: SETTABLE  R19 K23 R11  ; R19["KeyChain"] := R11
 86 [-]: SETTABLE  R19 K15 R18  ; R19["Type"] := R18
 87 [-]: GETGLOBAL R20 K25      ; R20 := 0xCAA43ABB
 88 [-]: MOVE      R21 R18      ; R21 := R18
 89 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 90 [-]: SETTABLE  R19 K24 R20  ; R19["Anchor"] := R20
 91 [-]: GETGLOBAL R20 K27      ; R20 := 0xE6DC43B0
 92 [-]: GETGLOBAL R21 K28      ; R21 := 0x9FAED6BC
 93 [-]: SELF      R22 R18 K29  ; R23 := R18; R22 := R18["0x616C74B6"]
 94 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 95 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 96 [-]: MOVE      R22 R0       ; R22 := R0
 97 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 98 [-]: SETTABLE  R19 K26 R20  ; R19["Name"] := R20
 99 [-]: GETGLOBAL R20 K27      ; R20 := 0xE6DC43B0
100 [-]: GETGLOBAL R21 K28      ; R21 := 0x9FAED6BC
101 [-]: SELF      R22 R18 K31  ; R23 := R18; R22 := R18["0x42300EB5"]
102 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
103 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
104 [-]: MOVE      R22 R0       ; R22 := R0
105 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
106 [-]: SETTABLE  R19 K30 R20  ; R19["Description"] := R20
107 [-]: SELF      R20 R11 K33  ; R21 := R11; R20 := R11["0xFD6CA2ED"]
108 [-]: SUB       R22 R15 K12  ; R22 := R15 - 1
109 [-]: MOVE      R23 R16      ; R23 := R16
110 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
111 [-]: SETTABLE  R19 K32 R20  ; R19["Difficulty"] := R20
112 [-]: GETUPVAL  R20 U6       ; R20 := U6
113 [-]: EQ        0 R11 R20    ; if R11 ~= R20 then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: SELF      R20 R18 K16  ; R21 := R18; R20 := R18["0x625DA4BB"]
116 [-]: CALL      R20 2 2      ; R20 := R20(R21)
117 [-]: MOVE      R20 R7       ; R20 := R7
118 [-]: GETGLOBAL R20 K13      ; R20 := table
119 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["0xE6450C9D"]
120 [-]: MOVE      R21 R5       ; R21 := R5
121 [-]: MOVE      R22 R19      ; R22 := R19
122 [-]: CALL      R20 3 1      ; R20(R21,R22)
123 [-]: LOADK     R20 K12      ; R20 := 1
124 [-]: GETUPVAL  R21 U3       ; R21 := U3
125 [-]: LEN       R21 R21      ; R21 := # R21
126 [-]: LOADK     R22 K12      ; R22 := 1
127 [-]: FORPREP   R20 170      ; R20 -= R22; PC := 170
128 [-]: MOVE      R24 R0       ; R24 := R0
129 [-]: GETUPVAL  R25 U3       ; R25 := U3
130 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
131 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["name"]
132 [-]: GETGLOBAL R26 K4       ; R26 := 0x400E7765
133 [-]: GETUPVAL  R27 U3       ; R27 := U3
134 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
135 [-]: GETTABLE  R27 R27 K35  ; R27 := R27["mission"]
136 [-]: GETTABLE  R27 R27 K36  ; R27 := R27["levelKeyName"]
137 [-]: CALL      R26 2 2      ; R26 := R26(R27)
138 [-]: TEST      R26 1        ; if R26 then PC := 150
139 [-]: JMP       150          ; PC := 150
140 [-]: MOVE      R24 R1       ; R24 := R1
141 [-]: LOADK     R26 K12      ; R26 := 1
142 [-]: LEN       R27 R6       ; R27 := # R6
143 [-]: LOADK     R28 K12      ; R28 := 1
144 [-]: FORPREP   R26 149      ; R26 -= R28; PC := 149
145 [-]: GETTABLE  R30 R6 R29   ; R30 := R6[R29]
146 [-]: EQ        0 R30 R25    ; if R30 ~= R25 then PC := 149
147 [-]: JMP       149          ; PC := 149
148 [-]: MOVE      R24 R0       ; R24 := R0
149 [-]: FORLOOP   R26 145      ; R26 += R28; if R26 <= R27 then begin PC := 145; R29 := R26 end
150 [-]: GETGLOBAL R30 K28      ; R30 := 0x9FAED6BC
151 [-]: MOVE      R31 R25      ; R31 := R25
152 [-]: CALL      R30 2 2      ; R30 := R30(R31)
153 [-]: MOVE      R25 R30      ; R25 := R30
154 [-]: GETUPVAL  R30 U8       ; R30 := U8
155 [-]: GETTABLE  R30 R30 K37  ; R30 := R30["Sectors"]
156 [-]: GETTABLE  R30 R30 R25  ; R30 := R30[R25]
157 [-]: GETUPVAL  R31 U3       ; R31 := U3
158 [-]: GETTABLE  R31 R31 R23  ; R31 := R31[R23]
159 [-]: GETTABLE  R31 R31 K38  ; R31 := R31["missionTag"]
160 [-]: EQ        0 R30 K0     ; if R30 ~= nil then PC := 164
161 [-]: JMP       164          ; PC := 164
162 [-]: GETUPVAL  R32 U3       ; R32 := U3
163 [-]: GETTABLE  R30 R32 R23  ; R30 := R32[R23]
164 [-]: TEST      R24 1        ; if R24 then PC := 170
165 [-]: JMP       170          ; PC := 170
166 [-]: GETUPVAL  R32 U9       ; R32 := U9
167 [-]: SELF      R33 R30 K39  ; R34 := R30; R33 := R30["0xA4269DBC"]
168 [-]: CALL      R33 2 0      ; R33,... := R33(R34)
169 [-]: CALL      R32 0 1      ; R32(R33,...)
170 [-]: FORLOOP   R20 128      ; R20 += R22; if R20 <= R21 then begin PC := 128; R23 := R20 end
171 [-]: NEWTABLE  R32 0 0      ; R32 := {}
172 [-]: LOADNIL   R33 R33      ; R33 := nil
173 [-]: LOADK     R34 K12      ; R34 := 1
174 [-]: LEN       R35 R5       ; R35 := # R5
175 [-]: LOADK     R36 K12      ; R36 := 1
176 [-]: FORPREP   R34 527      ; R34 -= R36; PC := 527
177 [-]: GETGLOBAL R38 K40      ; R38 := 0x1BF588C6
178 [-]: LOADK     R39 K41      ; R39 := 0
179 [-]: CALL      R38 2 1      ; R38(R39)
180 [-]: GETTABLE  R38 R5 R37   ; R38 := R5[R37]
181 [-]: GETTABLE  R39 R38 K15  ; R39 := R38["Type"]
182 [-]: SELF      R40 R39 K16  ; R41 := R39; R40 := R39["0x625DA4BB"]
183 [-]: CALL      R40 2 2      ; R40 := R40(R41)
184 [-]: SELF      R41 R39 K42  ; R42 := R39; R41 := R39["0xA26B0FA3"]
185 [-]: CALL      R41 2 2      ; R41 := R41(R42)
186 [-]: GETUPVAL  R42 U1       ; R42 := U1
187 [-]: GETGLOBAL R43 K28      ; R43 := 0x9FAED6BC
188 [-]: MOVE      R44 R40      ; R44 := R40
189 [-]: CALL      R43 2 2      ; R43 := R43(R44)
190 [-]: GETTABLE  R42 R42 R43  ; R42 := R42[R43]
191 [-]: LOADNIL   R43 R43      ; R43 := nil
192 [-]: EQ        1 R42 K0     ; if R42 == nil then PC := 196
193 [-]: JMP       196          ; PC := 196
194 [-]: GETTABLE  R43 R42 K43  ; R43 := R42["radialSector"]
195 [-]: JMP       200          ; PC := 200
196 [-]: GETGLOBAL R44 K21      ; R44 := Lotus_Game
197 [-]: GETTABLE  R44 R44 K44  ; R44 := R44["0xAE448D50"]
198 [-]: CALL      R44 1 2      ; R44 := R44()
199 [-]: MOVE      R43 R44      ; R43 := R44
200 [-]: SELF      R44 R39 K45  ; R45 := R39; R44 := R39["0x9B16E6AD"]
201 [-]: CALL      R44 2 2      ; R44 := R44(R45)
202 [-]: GETGLOBAL R45 K46      ; R45 := _T
203 [-]: GETTABLE  R45 R45 K47  ; R45 := R45["REGION_ID_DOJO"]
204 [-]: EQ        0 R44 R45    ; if R44 ~= R45 then PC := 223
205 [-]: JMP       223          ; PC := 223
206 [-]: GETGLOBAL R44 K48      ; R44 := gPlayerProfileMgr
207 [-]: SELF      R44 R44 K49  ; R45 := R44; R44 := R44["0x21EF7B1A"]
208 [-]: LOADK     R46 K41      ; R46 := 0
209 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
210 [-]: GETGLOBAL R45 K4       ; R45 := 0x400E7765
211 [-]: MOVE      R46 R44      ; R46 := R44
212 [-]: CALL      R45 2 2      ; R45 := R45(R46)
213 [-]: TEST      R45 1        ; if R45 then PC := 262
214 [-]: JMP       262          ; PC := 262
215 [-]: GETGLOBAL R45 K51      ; R45 := 0xEC274B1A
216 [-]: SELF      R46 R44 K52  ; R47 := R44; R46 := R44["0x654F1092"]
217 [-]: CALL      R46 2 2      ; R46 := R46(R47)
218 [-]: SELF      R46 R46 K53  ; R47 := R46; R46 := R46["0x6D176768"]
219 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
220 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
221 [-]: SETTABLE  R43 K50 R45  ; R43["locTag"] := R45
222 [-]: JMP       262          ; PC := 262
223 [-]: TEST      R41 1        ; if R41 then PC := 262
224 [-]: JMP       262          ; PC := 262
225 [-]: GETGLOBAL R45 K54      ; R45 := mMovie
226 [-]: SELF      R45 R45 K55  ; R46 := R45; R45 := R45["0x5DB0BD4"]
227 [-]: GETTABLE  R47 R38 K26  ; R47 := R38["Name"]
228 [-]: MOVE      R48 R1       ; R48 := R1
229 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
230 [-]: GETTABLE  R46 R38 K15  ; R46 := R38["Type"]
231 [-]: SELF      R46 R46 K56  ; R47 := R46; R46 := R46["0xB8637349"]
232 [-]: CALL      R46 2 2      ; R46 := R46(R47)
233 [-]: GETTABLE  R46 R46 K57  ; R46 := R46["uniqueName"]
234 [-]: EQ        1 R46 K58    ; if R46 == "" then PC := 242
235 [-]: JMP       242          ; PC := 242
236 [-]: GETGLOBAL R47 K54      ; R47 := mMovie
237 [-]: SELF      R47 R47 K55  ; R48 := R47; R47 := R47["0x5DB0BD4"]
238 [-]: MOVE      R49 R46      ; R49 := R46
239 [-]: MOVE      R50 R0       ; R50 := R0
240 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
241 [-]: MOVE      R45 R47      ; R45 := R47
242 [-]: GETTABLE  R47 R38 K59  ; R47 := R38["Count"]
243 [-]: TEST      R47 0        ; if not R47 then PC := 258
244 [-]: JMP       258          ; PC := 258
245 [-]: GETTABLE  R47 R38 K59  ; R47 := R38["Count"]
246 [-]: LT        0 K12 R47    ; if 1 >= R47 then PC := 258
247 [-]: JMP       258          ; PC := 258
248 [-]: GETTABLE  R47 R38 K15  ; R47 := R38["Type"]
249 [-]: SELF      R47 R47 K60  ; R48 := R47; R47 := R47["0x49F6C90A"]
250 [-]: CALL      R47 2 2      ; R47 := R47(R48)
251 [-]: TEST      R47 0        ; if not R47 then PC := 258
252 [-]: JMP       258          ; PC := 258
253 [-]: MOVE      R47 R45      ; R47 := R45
254 [-]: LOADK     R48 K61      ; R48 := " ["
255 [-]: GETTABLE  R49 R38 K59  ; R49 := R38["Count"]
256 [-]: LOADK     R50 K62      ; R50 := "]"
257 [-]: CONCAT    R45 R47 R50  ; R45 := R47 .. R48 .. R49 .. R50
258 [-]: GETGLOBAL R47 K51      ; R47 := 0xEC274B1A
259 [-]: MOVE      R48 R45      ; R48 := R45
260 [-]: CALL      R47 2 2      ; R47 := R47(R48)
261 [-]: SETTABLE  R43 K50 R47  ; R43["locTag"] := R47
262 [-]: LOADNIL   R47 R47      ; R47 := nil
263 [-]: TEST      R41 0        ; if not R41 then PC := 269
264 [-]: JMP       269          ; PC := 269
265 [-]: GETTABLE  R48 R43 K35  ; R48 := R43["mission"]
266 [-]: SELF      R48 R48 K39  ; R49 := R48; R48 := R48["0xA4269DBC"]
267 [-]: CALL      R48 2 2      ; R48 := R48(R49)
268 [-]: MOVE      R47 R48      ; R47 := R48
269 [-]: GETTABLE  R48 R38 K15  ; R48 := R38["Type"]
270 [-]: SELF      R48 R48 K63  ; R49 := R48; R48 := R48["0x1B252E3C"]
271 [-]: CALL      R48 2 2      ; R48 := R48(R49)
272 [-]: GETGLOBAL R49 K64      ; R49 := string
273 [-]: GETTABLE  R49 R49 K65  ; R49 := R49["0xDE44F664"]
274 [-]: MOVE      R50 R48      ; R50 := R48
275 [-]: LOADK     R51 K66      ; R51 := "Hub"
276 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
277 [-]: TEST      R49 0        ; if not R49 then PC := 283
278 [-]: JMP       283          ; PC := 283
279 [-]: GETGLOBAL R49 K21      ; R49 := Lotus_Game
280 [-]: GETTABLE  R49 R49 K68  ; R49 := R49["NT_HUB"]
281 [-]: SETTABLE  R43 K67 R49  ; R43["nodeType"] := R49
282 [-]: JMP       286          ; PC := 286
283 [-]: GETGLOBAL R49 K21      ; R49 := Lotus_Game
284 [-]: GETTABLE  R49 R49 K69  ; R49 := R49["NT_MISSION"]
285 [-]: SETTABLE  R43 K67 R49  ; R43["nodeType"] := R49
286 [-]: SETTABLE  R43 K70 K71  ; R43["unlocked"] := "0x1"
287 [-]: GETTABLE  R49 R38 K15  ; R49 := R38["Type"]
288 [-]: SELF      R49 R49 K56  ; R50 := R49; R49 := R49["0xB8637349"]
289 [-]: CALL      R49 2 2      ; R49 := R49(R50)
290 [-]: SELF      R49 R49 K39  ; R50 := R49; R49 := R49["0xA4269DBC"]
291 [-]: CALL      R49 2 2      ; R49 := R49(R50)
292 [-]: SETTABLE  R43 K35 R49  ; R43["mission"] := R49
293 [-]: GETTABLE  R49 R43 K35  ; R49 := R43["mission"]
294 [-]: GETGLOBAL R50 K72      ; R50 := 0x2C00D429
295 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
296 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
297 [-]: CALL      R51 2 0      ; R51,... := R51(R52)
298 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
299 [-]: SETTABLE  R49 K36 R50  ; R49["levelKeyName"] := R50
300 [-]: GETTABLE  R49 R38 K32  ; R49 := R38["Difficulty"]
301 [-]: EQ        1 R49 K0     ; if R49 == nil then PC := 306
302 [-]: JMP       306          ; PC := 306
303 [-]: GETTABLE  R49 R43 K35  ; R49 := R43["mission"]
304 [-]: GETTABLE  R50 R38 K32  ; R50 := R38["Difficulty"]
305 [-]: SETTABLE  R49 K73 R50  ; R49["difficulty"] := R50
306 [-]: GETTABLE  R49 R38 K23  ; R49 := R38["KeyChain"]
307 [-]: SETTABLE  R43 K74 R49  ; R43["keyChain"] := R49
308 [-]: LOADNIL   R49 R49      ; R49 := nil
309 [-]: GETTABLE  R50 R38 K75  ; R50 := R38["RegionOverride"]
310 [-]: EQ        1 R50 K0     ; if R50 == nil then PC := 314
311 [-]: JMP       314          ; PC := 314
312 [-]: GETTABLE  R49 R38 K75  ; R49 := R38["RegionOverride"]
313 [-]: JMP       318          ; PC := 318
314 [-]: GETTABLE  R50 R38 K15  ; R50 := R38["Type"]
315 [-]: SELF      R50 R50 K45  ; R51 := R50; R50 := R50["0x9B16E6AD"]
316 [-]: CALL      R50 2 2      ; R50 := R50(R51)
317 [-]: MOVE      R49 R50      ; R49 := R50
318 [-]: GETUPVAL  R50 U10      ; R50 := U10
319 [-]: LEN       R50 R50      ; R50 := # R50
320 [-]: LE        0 R50 R49    ; if R50 > R49 then PC := 336
321 [-]: JMP       336          ; PC := 336
322 [-]: GETGLOBAL R50 K76      ; R50 := 0x93B1256B
323 [-]: LOADK     R51 K77      ; R51 := "invalid region specified for key="
324 [-]: GETGLOBAL R52 K28      ; R52 := 0x9FAED6BC
325 [-]: GETTABLE  R53 R38 K15  ; R53 := R38["Type"]
326 [-]: SELF      R53 R53 K63  ; R54 := R53; R53 := R53["0x1B252E3C"]
327 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
328 [-]: CALL      R52 0 2      ; R52 := R52(R53,...)
329 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
330 [-]: CALL      R50 2 1      ; R50(R51)
331 [-]: GETUPVAL  R50 U4       ; R50 := U4
332 [-]: SELF      R50 R50 K78  ; R51 := R50; R50 := R50["0xDF213CE1"]
333 [-]: MOVE      R52 R40      ; R52 := R40
334 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
335 [-]: GETTABLE  R49 R50 K79  ; R49 := R50["region"]
336 [-]: GETGLOBAL R50 K4       ; R50 := 0x400E7765
337 [-]: MOVE      R51 R42      ; R51 := R42
338 [-]: CALL      R50 2 2      ; R50 := R50(R51)
339 [-]: TEST      R50 0        ; if not R50 then PC := 440
340 [-]: JMP       440          ; PC := 440
341 [-]: GETTABLE  R50 R38 K15  ; R50 := R38["Type"]
342 [-]: SELF      R50 R50 K80  ; R51 := R50; R50 := R50["0x8B598ED4"]
343 [-]: GETUPVAL  R52 U11      ; R52 := U11
344 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
345 [-]: TEST      R50 1        ; if R50 then PC := 440
346 [-]: JMP       440          ; PC := 440
347 [-]: GETGLOBAL R50 K46      ; R50 := _T
348 [-]: GETTABLE  R50 R50 K81  ; R50 := R50["REGION_ID_MOON"]
349 [-]: EQ        0 R49 R50    ; if R49 ~= R50 then PC := 357
350 [-]: JMP       357          ; PC := 357
351 [-]: GETUPVAL  R50 U12      ; R50 := U12
352 [-]: GETGLOBAL R51 K46      ; R51 := _T
353 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["REGION_ID_MOON"]
354 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
355 [-]: EQ        1 R50 K71    ; if R50 == "0x1" then PC := 440
356 [-]: JMP       440          ; PC := 440
357 [-]: GETGLOBAL R50 K51      ; R50 := 0xEC274B1A
358 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
359 [-]: SELF      R51 R51 K63  ; R52 := R51; R51 := R51["0x1B252E3C"]
360 [-]: CALL      R51 2 2      ; R51 := R51(R52)
361 [-]: GETUPVAL  R52 U5       ; R52 := U5
362 [-]: GETTABLE  R52 R52 K82  ; R52 := R52["KEY_TAG"]
363 [-]: CONCAT    R51 R51 R52  ; R51 := R51 .. R52
364 [-]: CALL      R50 2 2      ; R50 := R50(R51)
365 [-]: SETTABLE  R43 K34 R50  ; R43["name"] := R50
366 [-]: GETGLOBAL R50 K64      ; R50 := string
367 [-]: GETTABLE  R50 R50 K65  ; R50 := R50["0xDE44F664"]
368 [-]: MOVE      R51 R48      ; R51 := R48
369 [-]: LOADK     R52 K66      ; R52 := "Hub"
370 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
371 [-]: TEST      R50 0        ; if not R50 then PC := 377
372 [-]: JMP       377          ; PC := 377
373 [-]: GETGLOBAL R50 K21      ; R50 := Lotus_Game
374 [-]: GETTABLE  R50 R50 K68  ; R50 := R50["NT_HUB"]
375 [-]: SETTABLE  R43 K67 R50  ; R43["nodeType"] := R50
376 [-]: JMP       380          ; PC := 380
377 [-]: GETGLOBAL R50 K21      ; R50 := Lotus_Game
378 [-]: GETTABLE  R50 R50 K69  ; R50 := R50["NT_MISSION"]
379 [-]: SETTABLE  R43 K67 R50  ; R43["nodeType"] := R50
380 [-]: SETTABLE  R43 K79 R49  ; R43["region"] := R49
381 [-]: GETTABLE  R50 R43 K79  ; R50 := R43["region"]
382 [-]: GETTABLE  R50 R32 R50  ; R50 := R32[R50]
383 [-]: EQ        0 R50 K0     ; if R50 ~= nil then PC := 387
384 [-]: JMP       387          ; PC := 387
385 [-]: GETTABLE  R50 R43 K79  ; R50 := R43["region"]
386 [-]: SETTABLE  R32 R50 K41  ; R32[R50] := 0
387 [-]: GETTABLE  R50 R38 K15  ; R50 := R38["Type"]
388 [-]: SELF      R50 R50 K83  ; R51 := R50; R50 := R50["0x387DBBEB"]
389 [-]: CALL      R50 2 2      ; R50 := R50(R51)
390 [-]: GETTABLE  R51 R50 K84  ; R51 := R50["x"]
391 [-]: EQ        1 R51 K41    ; if R51 == 0 then PC := 401
392 [-]: JMP       401          ; PC := 401
393 [-]: GETTABLE  R51 R50 K85  ; R51 := R50["y"]
394 [-]: EQ        1 R51 K41    ; if R51 == 0 then PC := 401
395 [-]: JMP       401          ; PC := 401
396 [-]: GETTABLE  R51 R50 K86  ; R51 := R50["z"]
397 [-]: EQ        1 R51 K41    ; if R51 == 0 then PC := 401
398 [-]: JMP       401          ; PC := 401
399 [-]: SETTABLE  R43 K87 R50  ; R43["pos"] := R50
400 [-]: JMP       417          ; PC := 417
401 [-]: GETUPVAL  R51 U10      ; R51 := U10
402 [-]: GETTABLE  R52 R43 K79  ; R52 := R43["region"]
403 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
404 [-]: GETTABLE  R51 R51 K87  ; R51 := R51["pos"]
405 [-]: GETGLOBAL R52 K88      ; R52 := 0x221C9700
406 [-]: GETTABLE  R53 R43 K79  ; R53 := R43["region"]
407 [-]: GETTABLE  R53 R32 R53  ; R53 := R32[R53]
408 [-]: MUL       R53 R53 K89  ; R53 := R53 * 0.019999999552965
409 [-]: GETTABLE  R54 R43 K79  ; R54 := R43["region"]
410 [-]: GETTABLE  R54 R32 R54  ; R54 := R32[R54]
411 [-]: UNM       R54 R54      ; R54 := - R54
412 [-]: MUL       R54 R54 K89  ; R54 := R54 * 0.019999999552965
413 [-]: LOADK     R55 K41      ; R55 := 0
414 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
415 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
416 [-]: SETTABLE  R43 K87 R51  ; R43["pos"] := R51
417 [-]: GETTABLE  R51 R38 K90  ; R51 := R38["DecoOverride"]
418 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 424
419 [-]: JMP       424          ; PC := 424
420 [-]: GETTABLE  R51 R38 K90  ; R51 := R38["DecoOverride"]
421 [-]: SETTABLE  R43 K3 R51   ; R43["deco"] := R51
422 [-]: GETTABLE  R51 R38 K92  ; R51 := R38["DecoScale"]
423 [-]: SETTABLE  R43 K91 R51  ; R43["scale"] := R51
424 [-]: GETTABLE  R51 R38 K93  ; R51 := R38["NodeOffset"]
425 [-]: EQ        1 R51 K0     ; if R51 == nil then PC := 431
426 [-]: JMP       431          ; PC := 431
427 [-]: GETTABLE  R51 R43 K87  ; R51 := R43["pos"]
428 [-]: GETTABLE  R52 R38 K93  ; R52 := R38["NodeOffset"]
429 [-]: ADD       R51 R51 R52  ; R51 := R51 + R52
430 [-]: SETTABLE  R43 K87 R51  ; R43["pos"] := R51
431 [-]: GETTABLE  R51 R43 K79  ; R51 := R43["region"]
432 [-]: GETTABLE  R52 R43 K79  ; R52 := R43["region"]
433 [-]: GETTABLE  R52 R32 R52  ; R52 := R32[R52]
434 [-]: ADD       R52 R52 K12  ; R52 := R52 + 1
435 [-]: SETTABLE  R32 R51 R52  ; R32[R51] := R52
436 [-]: GETUPVAL  R51 U9       ; R51 := U9
437 [-]: MOVE      R52 R43      ; R52 := R43
438 [-]: CALL      R51 2 2      ; R51 := R51(R52)
439 [-]: MOVE      R42 R51      ; R42 := R51
440 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
441 [-]: MOVE      R52 R42      ; R52 := R42
442 [-]: CALL      R51 2 2      ; R51 := R51(R52)
443 [-]: TEST      R51 1        ; if R51 then PC := 527
444 [-]: JMP       527          ; PC := 527
445 [-]: TEST      R41 1        ; if R41 then PC := 460
446 [-]: JMP       460          ; PC := 460
447 [-]: GETTABLE  R51 R43 K34  ; R51 := R43["name"]
448 [-]: SETTABLE  R42 K34 R51  ; R42["name"] := R51
449 [-]: GETGLOBAL R51 K64      ; R51 := string
450 [-]: GETTABLE  R51 R51 K95  ; R51 := R51["0x639C642A"]
451 [-]: GETGLOBAL R52 K54      ; R52 := mMovie
452 [-]: SELF      R52 R52 K55  ; R53 := R52; R52 := R52["0x5DB0BD4"]
453 [-]: GETTABLE  R54 R43 K50  ; R54 := R43["locTag"]
454 [-]: SELF      R54 R54 K96  ; R55 := R54; R54 := R54["0x5EC7A3D2"]
455 [-]: CALL      R54 2 2      ; R54 := R54(R55)
456 [-]: MOVE      R55 R0       ; R55 := R0
457 [-]: CALL      R52 4 0      ; R52,... := R52(R53,R54,R55)
458 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
459 [-]: SETTABLE  R42 K94 R51  ; R42["locName"] := R51
460 [-]: GETGLOBAL R51 K4       ; R51 := 0x400E7765
461 [-]: GETTABLE  R52 R38 K23  ; R52 := R38["KeyChain"]
462 [-]: CALL      R51 2 2      ; R51 := R51(R52)
463 [-]: TEST      R51 1        ; if R51 then PC := 467
464 [-]: JMP       467          ; PC := 467
465 [-]: SETTABLE  R42 K97 K98  ; R42["completed"] := "0x0"
466 [-]: JMP       507          ; PC := 507
467 [-]: GETTABLE  R51 R42 K97  ; R51 := R42["completed"]
468 [-]: TEST      R51 1        ; if R51 then PC := 507
469 [-]: JMP       507          ; PC := 507
470 [-]: GETTABLE  R51 R38 K15  ; R51 := R38["Type"]
471 [-]: SELF      R51 R51 K16  ; R52 := R51; R51 := R51["0x625DA4BB"]
472 [-]: CALL      R51 2 2      ; R51 := R51(R52)
473 [-]: SELF      R52 R40 K99  ; R53 := R40; R52 := R40["0x315E860F"]
474 [-]: CALL      R52 2 2      ; R52 := R52(R53)
475 [-]: TEST      R52 0        ; if not R52 then PC := 507
476 [-]: JMP       507          ; PC := 507
477 [-]: EQ        0 R33 K0     ; if R33 ~= nil then PC := 488
478 [-]: JMP       488          ; PC := 488
479 [-]: GETGLOBAL R52 K48      ; R52 := gPlayerProfileMgr
480 [-]: SELF      R52 R52 K49  ; R53 := R52; R52 := R52["0x21EF7B1A"]
481 [-]: LOADK     R54 K41      ; R54 := 0
482 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
483 [-]: SELF      R52 R52 K52  ; R53 := R52; R52 := R52["0x654F1092"]
484 [-]: CALL      R52 2 2      ; R52 := R52(R53)
485 [-]: SELF      R52 R52 K100 ; R53 := R52; R52 := R52["0xC92135A6"]
486 [-]: CALL      R52 2 2      ; R52 := R52(R53)
487 [-]: MOVE      R33 R52      ; R33 := R52
488 [-]: GETGLOBAL R52 K1       ; R52 := 0xECFDD17
489 [-]: MOVE      R53 R33      ; R53 := R33
490 [-]: CALL      R52 2 4      ; R52,R53,R54 := R52(R53)
491 [-]: JMP       505          ; PC := 505
492 [-]: GETTABLE  R57 R56 K101 ; R57 := R56["mTag"]
493 [-]: EQ        0 R57 R51    ; if R57 ~= R51 then PC := 505
494 [-]: JMP       505          ; PC := 505
495 [-]: GETTABLE  R57 R56 K102 ; R57 := R56["mCompletes"]
496 [-]: LT        1 K41 R57    ; if 0 < R57 then PC := 499
497 [-]: JMP       499          ; PC := 499
498 [-]: MOVE      R57 R0       ; R57 := R0
499 [-]: MOVE      R57 R1       ; R57 := R1
500 [-]: SETTABLE  R42 K97 R57  ; R42["completed"] := R57
501 [-]: GETTABLE  R57 R42 K43  ; R57 := R42["radialSector"]
502 [-]: GETTABLE  R58 R56 K102 ; R58 := R56["mCompletes"]
503 [-]: SETTABLE  R57 K103 R58 ; R57["missionsCompleted"] := R58
504 [-]: JMP       507          ; PC := 507
505 [-]: TFORLOOP  R52 2        ; R55,R56 :=  R52(R53,R54); if R55 ~= nil then begin PC = 492; R54 := R55 end
506 [-]: JMP       492          ; PC := 492
507 [-]: SETTABLE  R42 K104 K98 ; R42["locked"] := "0x0"
508 [-]: SETTABLE  R42 K105 K71 ; R42["visibleLabel"] := "0x1"
509 [-]: SETTABLE  R42 K106 K98 ; R42["isEmpty"] := "0x0"
510 [-]: TEST      R41 0        ; if not R41 then PC := 513
511 [-]: JMP       513          ; PC := 513
512 [-]: SETTABLE  R42 K107 R47 ; R42["displayMissionOverride"] := R47
513 [-]: GETTABLE  R57 R38 K32  ; R57 := R38["Difficulty"]
514 [-]: EQ        1 R57 K0     ; if R57 == nil then PC := 527
515 [-]: JMP       527          ; PC := 527
516 [-]: GETTABLE  R57 R42 K43  ; R57 := R42["radialSector"]
517 [-]: GETTABLE  R57 R57 K35  ; R57 := R57["mission"]
518 [-]: GETTABLE  R58 R38 K32  ; R58 := R38["Difficulty"]
519 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
520 [-]: GETUPVAL  R57 U0       ; R57 := U0
521 [-]: GETTABLE  R58 R42 K108 ; R58 := R42["id"]
522 [-]: GETTABLE  R57 R57 R58  ; R57 := R57[R58]
523 [-]: GETTABLE  R57 R57 K43  ; R57 := R57["radialSector"]
524 [-]: GETTABLE  R57 R57 K35  ; R57 := R57["mission"]
525 [-]: GETTABLE  R58 R38 K32  ; R58 := R38["Difficulty"]
526 [-]: SETTABLE  R57 K73 R58  ; R57["difficulty"] := R58
527 [-]: FORLOOP   R34 177      ; R34 += R36; if R34 <= R35 then begin PC := 177; R37 := R34 end
528 [-]: GETGLOBAL R57 K48      ; R57 := gPlayerProfileMgr
529 [-]: SELF      R57 R57 K49  ; R58 := R57; R57 := R57["0x21EF7B1A"]
530 [-]: LOADK     R59 K41      ; R59 := 0
531 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
532 [-]: SELF      R57 R57 K52  ; R58 := R57; R57 := R57["0x654F1092"]
533 [-]: CALL      R57 2 2      ; R57 := R57(R58)
534 [-]: SELF      R57 R57 K109 ; R58 := R57; R57 := R57["0x2D0B8A86"]
535 [-]: CALL      R57 2 2      ; R57 := R57(R58)
536 [-]: GETTABLE  R57 R57 K110 ; R57 := R57["mFeaturedGuilds"]
537 [-]: LOADK     R58 K12      ; R58 := 1
538 [-]: LEN       R59 R57      ; R59 := # R57
539 [-]: LOADK     R60 K12      ; R60 := 1
540 [-]: FORPREP   R58 602      ; R58 -= R60; PC := 602
541 [-]: GETGLOBAL R62 K21      ; R62 := Lotus_Game
542 [-]: GETTABLE  R62 R62 K44  ; R62 := R62["0xAE448D50"]
543 [-]: CALL      R62 1 2      ; R62 := R62()
544 [-]: GETUPVAL  R63 U13      ; R63 := U13
545 [-]: GETTABLE  R63 R63 K111 ; R63 := R63["0xF81722A2"]
546 [-]: GETUPVAL  R64 U13      ; R64 := U13
547 [-]: GETTABLE  R64 R64 K112 ; R64 := R64["0x36BA5F48"]
548 [-]: CALL      R64 1 2      ; R64 := R64()
549 [-]: GETGLOBAL R65 K51      ; R65 := 0xEC274B1A
550 [-]: LOADK     R66 K113     ; R66 := "/Lotus/Language/Clan/Clan_DOJO"
551 [-]: CALL      R65 2 2      ; R65 := R65(R66)
552 [-]: GETGLOBAL R66 K51      ; R66 := 0xEC274B1A
553 [-]: GETTABLE  R67 R57 R61  ; R67 := R57[R61]
554 [-]: GETTABLE  R67 R67 K114 ; R67 := R67["mName"]
555 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
556 [-]: CALL      R63 0 2      ; R63 := R63(R64,...)
557 [-]: SETTABLE  R62 K50 R63  ; R62["locTag"] := R63
558 [-]: GETGLOBAL R63 K21      ; R63 := Lotus_Game
559 [-]: GETTABLE  R63 R63 K68  ; R63 := R63["NT_HUB"]
560 [-]: SETTABLE  R62 K67 R63  ; R62["nodeType"] := R63
561 [-]: SETTABLE  R62 K70 K71  ; R62["unlocked"] := "0x1"
562 [-]: GETGLOBAL R63 K51      ; R63 := 0xEC274B1A
563 [-]: LOADK     R64 K115     ; R64 := "FeaturedDojoTier"
564 [-]: MOVE      R65 R61      ; R65 := R61
565 [-]: CONCAT    R64 R64 R65  ; R64 := R64 .. R65
566 [-]: CALL      R63 2 2      ; R63 := R63(R64)
567 [-]: SETTABLE  R62 K34 R63  ; R62["name"] := R63
568 [-]: GETUPVAL  R63 U10      ; R63 := U10
569 [-]: GETTABLE  R63 R63 K116 ; R63 := R63[14]
570 [-]: GETTABLE  R63 R63 K87  ; R63 := R63["pos"]
571 [-]: GETGLOBAL R64 K117     ; R64 := 0x4CBE9A09
572 [-]: GETGLOBAL R65 K88      ; R65 := 0x221C9700
573 [-]: LOADK     R66 K41      ; R66 := 0
574 [-]: LOADK     R67 K118     ; R67 := -0.15999999642372
575 [-]: LOADK     R68 K41      ; R68 := 0
576 [-]: CALL      R65 4 2      ; R65 := R65(R66,R67,R68)
577 [-]: GETGLOBAL R66 K119     ; R66 := 0x1E4F6281
578 [-]: LOADK     R67 K41      ; R67 := 0
579 [-]: LOADK     R68 K41      ; R68 := 0
580 [-]: LEN       R69 R57      ; R69 := # R57
581 [-]: SUB       R69 R69 K12  ; R69 := R69 - 1
582 [-]: DIV       R69 R69 K120 ; R69 := R69 / 2
583 [-]: SUB       R69 R69 R61  ; R69 := R69 - R61
584 [-]: ADD       R69 R69 K12  ; R69 := R69 + 1
585 [-]: MUL       R69 K121 R69 ; R69 := -30 * R69
586 [-]: CALL      R66 4 0      ; R66,... := R66(R67,R68,R69)
587 [-]: CALL      R64 0 2      ; R64 := R64(R65,...)
588 [-]: ADD       R63 R63 R64  ; R63 := R63 + R64
589 [-]: SETTABLE  R62 K87 R63  ; R62["pos"] := R63
590 [-]: GETUPVAL  R63 U9       ; R63 := U9
591 [-]: MOVE      R64 R62      ; R64 := R62
592 [-]: NEWTABLE  R65 0 3      ; R65 := {}
593 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
594 [-]: GETTABLE  R66 R66 K123 ; R66 := R66["mId"]
595 [-]: GETTABLE  R66 R66 K123 ; R66 := R66["mId"]
596 [-]: SETTABLE  R65 K122 R66 ; R65["guildId"] := R66
597 [-]: GETTABLE  R66 R57 R61  ; R66 := R57[R61]
598 [-]: GETTABLE  R66 R66 K125 ; R66 := R66["mTier"]
599 [-]: SETTABLE  R65 K124 R66 ; R65["clanTier"] := R66
600 [-]: SETTABLE  R65 K126 K127; R65["overrideIconSize"] := 120
601 [-]: CALL      R63 3 1      ; R63(R64,R65)
602 [-]: FORLOOP   R58 541      ; R58 += R60; if R58 <= R59 then begin PC := 541; R61 := R58 end
603 [-]: GETUPVAL  R63 U14      ; R63 := U14
604 [-]: CALL      R63 1 1      ; R63()
605 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2732
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["NodeA"]
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["position"]
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["NodeA"]
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["position"]
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["controlPointA"]
  6 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["position"]
  7 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["controlPointB"]
  8 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["position"]
  9 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["NodeB"]
 10 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["position"]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeB"]
 12 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["position"]
 13 [-]: NEWTABLE  R7 6 0       ; R7 := {}
 14 [-]: MOVE      R8 R1        ; R8 := R1
 15 [-]: MOVE      R9 R2        ; R9 := R2
 16 [-]: MOVE      R10 R3       ; R10 := R3
 17 [-]: MOVE      R11 R4       ; R11 := R4
 18 [-]: MOVE      R12 R5       ; R12 := R5
 19 [-]: MOVE      R13 R6       ; R13 := R6
 20 [-]: SETLIST   R7 6 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
 21 [-]: RETURN    R7 2         ; return R7
 22 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2742
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x221C9700
  2 [-]: CALL      R5 1 2       ; R5 := R5()
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x518098BD
  4 [-]: MOVE      R7 R5        ; R7 := R5
  5 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["position"]
  6 [-]: GETTABLE  R9 R1 K2     ; R9 := R1["position"]
  7 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
  8 [-]: GETGLOBAL R6 K3        ; R6 := 0x96BEA6B
  9 [-]: MOVE      R7 R5        ; R7 := R5
 10 [-]: GETTABLE  R8 R1 K2     ; R8 := R1["position"]
 11 [-]: MUL       R9 R5 R0     ; R9 := R5 * R0
 12 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 13 [-]: GETGLOBAL R6 K4        ; R6 := 0xEDD2EBFF
 14 [-]: MOVE      R7 R3        ; R7 := R3
 15 [-]: MOVE      R8 R5        ; R8 := R5
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: SETTABLE  R5 K5 K6     ; R5["x"] := 0
 18 [-]: SETTABLE  R5 K7 K6     ; R5["y"] := 0
 19 [-]: SETTABLE  R5 K8 R4     ; R5["z"] := R4
 20 [-]: GETGLOBAL R7 K3        ; R7 := 0x96BEA6B
 21 [-]: MOVE      R8 R5        ; R8 := R5
 22 [-]: MOVE      R9 R3        ; R9 := R3
 23 [-]: GETGLOBAL R10 K9       ; R10 := 0x4CBE9A09
 24 [-]: MOVE      R11 R5       ; R11 := R5
 25 [-]: MOVE      R12 R6       ; R12 := R6
 26 [-]: CALL      R10 3 0      ; R10,... := R10(R11,R12)
 27 [-]: CALL      R7 0 1       ; R7(R8,...)
 28 [-]: RETURN    R5 2         ; return R5
 29 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2754
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x1BF588C6
  2 [-]: LOADK     R3 K1        ; R3 := 0
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: LOADNIL   R2 R2        ; R2 := nil
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["position"]
  6 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["position"]
  7 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0x458357BC
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 1       ; R4(R5)
 11 [-]: LOADK     R4 K4        ; R4 := 10
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: LOADK     R6 K5        ; R6 := 1
 14 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["RelatedNodes"]
 15 [-]: LEN       R7 R7        ; R7 := # R7
 16 [-]: LOADK     R8 K5        ; R8 := 1
 17 [-]: FORPREP   R6 44        ; R6 -= R8; PC := 44
 18 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["RelatedNodes"]
 19 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 20 [-]: GETTABLE  R11 R1 K7    ; R11 := R1["name"]
 21 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: GETUPVAL  R11 U0       ; R11 := U0
 24 [-]: GETGLOBAL R12 K8       ; R12 := 0x9FAED6BC
 25 [-]: MOVE      R13 R10      ; R13 := R10
 26 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 27 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
 28 [-]: EQ        1 R11 K9     ; if R11 == nil then PC := 44
 29 [-]: JMP       44           ; PC := 44
 30 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["position"]
 31 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["position"]
 32 [-]: SUB       R5 R12 R13   ; R5 := R12 - R13
 33 [-]: GETGLOBAL R12 K3       ; R12 := 0x458357BC
 34 [-]: MOVE      R13 R5       ; R13 := R5
 35 [-]: CALL      R12 2 1      ; R12(R13)
 36 [-]: GETGLOBAL R12 K10      ; R12 := 0xDBA27FAF
 37 [-]: MOVE      R13 R3       ; R13 := R3
 38 [-]: MOVE      R14 R5       ; R14 := R5
 39 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 40 [-]: LT        0 R12 R4     ; if R12 >= R4 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: MOVE      R4 R12       ; R4 := R12
 43 [-]: MOVE      R2 R11       ; R2 := R11
 44 [-]: FORLOOP   R6 18        ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
 45 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 64
 46 [-]: JMP       64           ; PC := 64
 47 [-]: GETTABLE  R13 R2 K2    ; R13 := R2["position"]
 48 [-]: GETTABLE  R14 R0 K11   ; R14 := R0["isShortcut"]
 49 [-]: TEST      R14 0        ; if not R14 then PC := 62
 50 [-]: JMP       62           ; PC := 62
 51 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["isShortcut"]
 52 [-]: TEST      R14 0        ; if not R14 then PC := 62
 53 [-]: JMP       62           ; PC := 62
 54 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["position"]
 55 [-]: SUB       R14 R13 R14  ; R14 := R13 - R14
 56 [-]: GETGLOBAL R15 K3       ; R15 := 0x458357BC
 57 [-]: MOVE      R16 R14      ; R16 := R14
 58 [-]: CALL      R15 2 1      ; R15(R16)
 59 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["position"]
 60 [-]: MUL       R16 R14 K12  ; R16 := R14 * 0.050000000745058
 61 [-]: ADD       R13 R15 R16  ; R13 := R15 + R16
 62 [-]: RETURN    R13 2        ; return R13
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADNIL   R15 R15      ; R15 := nil
 65 [-]: RETURN    R15 2        ; return R15
 66 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2791
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Instance"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 105
  5 [-]: JMP       105          ; PC := 105
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x221C9700
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["NodeA"]
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 10 [-]: TEST      R2 0         ; if not R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["NodeB"]
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["isSurfaceNode"]
 14 [-]: SETTABLE  R0 K3 R2     ; R0["IsSurfaceConnection"] := R2
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["NodeA"]
 17 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["radialSector"]
 18 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["region"]
 19 [-]: ADD       R3 R3 K9     ; R3 := R3 + 1
 20 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 23 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["radialSector"]
 24 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["region"]
 25 [-]: ADD       R4 R4 K9     ; R4 := R4 + 1
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2["0x8EEB099D"]
 28 [-]: MOVE      R6 R1        ; R6 := R1
 29 [-]: CALL      R4 3 1       ; R4(R5,R6)
 30 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["IsSurfaceConnection"]
 31 [-]: TEST      R4 0         ; if not R4 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 34 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 35 [-]: GETUPVAL  R6 U2        ; R6 := U2
 36 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["NodeA"]
 37 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["radialSector"]
 38 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["region"]
 39 [-]: ADD       R7 R7 K9     ; R7 := R7 + 1
 40 [-]: GETTABLE  R6 R6 R7     ; R6 := R6[R7]
 41 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["pos"]
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["Instance"]
 46 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0xDE40B40"]
 47 [-]: GETGLOBAL R6 K13       ; R6 := ZERO_VECTOR
 48 [-]: LOADK     R7 K14       ; R7 := 0
 49 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 50 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["NodeA"]
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 52 [-]: TEST      R4 0         ; if not R4 then PC := 66
 53 [-]: JMP       66           ; PC := 66
 54 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["NodeB"]
 55 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["isShortcut"]
 56 [-]: TEST      R4 0         ; if not R4 then PC := 66
 57 [-]: JMP       66           ; PC := 66
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 61 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["Instance"]
 62 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5["0x5BD03F6B"]
 63 [-]: MOVE      R7 R4        ; R7 := R4
 64 [-]: CALL      R5 3 1       ; R5(R6,R7)
 65 [-]: JMP       105          ; PC := 105
 66 [-]: GETUPVAL  R5 U4        ; R5 := U4
 67 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 68 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 69 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 70 [-]: EQ        0 R5 K17     ; if R5 ~= nil then PC := 80
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETUPVAL  R6 U5        ; R6 := U5
 73 [-]: LOADK     R7 K18       ; R7 := -1
 74 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["NodeA"]
 75 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 76 [-]: MOVE      R10 R1       ; R10 := R1
 77 [-]: MOVE      R11 R3       ; R11 := R3
 78 [-]: CALL      R6 6 2       ; R6 := R6(R7,R8,R9,R10,R11)
 79 [-]: MOVE      R5 R6        ; R5 := R6
 80 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["NodeA"]
 81 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["position"]
 82 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["NodeB"]
 83 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["position"]
 84 [-]: GETUPVAL  R8 U4        ; R8 := U4
 85 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["NodeB"]
 86 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["NodeA"]
 87 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 88 [-]: EQ        0 R8 K17     ; if R8 ~= nil then PC := 98
 89 [-]: JMP       98           ; PC := 98
 90 [-]: GETUPVAL  R9 U5        ; R9 := U5
 91 [-]: LOADK     R10 K20      ; R10 := 2
 92 [-]: GETTABLE  R11 R0 K4    ; R11 := R0["NodeA"]
 93 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["NodeB"]
 94 [-]: MOVE      R13 R1       ; R13 := R1
 95 [-]: MOVE      R14 R3       ; R14 := R3
 96 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
 97 [-]: MOVE      R8 R9        ; R8 := R9
 98 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["Instance"]
 99 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9["0xE18C28D7"]
100 [-]: MOVE      R11 R5       ; R11 := R5
101 [-]: MOVE      R12 R6       ; R12 := R6
102 [-]: MOVE      R13 R7       ; R13 := R7
103 [-]: MOVE      R14 R8       ; R14 := R8
104 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
105 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2825
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x113DAAED"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: MOVE      R0 R0        ; R0 := R0
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0x63B09107
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R5 K2        ; R5 := gBackgroundRegion
 10 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x9B0A3887"]
 11 [-]: GETTABLE  R7 R4 K4     ; R7 := R4["mInstance"]
 12 [-]: CALL      R5 3 1       ; R5(R6,R7)
 13 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 14 [-]: JMP       9            ; PC := 9
 15 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: MOVE      R5 R3        ; R5 := R3
 19 [-]: LOADK     R5 K5        ; R5 := 0
 20 [-]: LOADK     R6 K5        ; R6 := 0
 21 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 22 [-]: LOADK     R9 K6        ; R9 := 1
 23 [-]: GETUPVAL  R10 U0       ; R10 := U0
 24 [-]: LEN       R10 R10      ; R10 := # R10
 25 [-]: LOADK     R11 K6       ; R11 := 1
 26 [-]: FORPREP   R9 236       ; R9 -= R11; PC := 236
 27 [-]: GETUPVAL  R13 U4       ; R13 := U4
 28 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 29 [-]: GETUPVAL  R15 U0       ; R15 := U0
 30 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 31 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["locationA"]
 32 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 33 [-]: GETTABLE  R7 R13 R14   ; R7 := R13[R14]
 34 [-]: GETUPVAL  R13 U4       ; R13 := U4
 35 [-]: GETGLOBAL R14 K7       ; R14 := 0x9FAED6BC
 36 [-]: GETUPVAL  R15 U0       ; R15 := U0
 37 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 38 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["locationB"]
 39 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 40 [-]: GETTABLE  R8 R13 R14   ; R8 := R13[R14]
 41 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 42 [-]: MOVE      R14 R7       ; R14 := R7
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: TEST      R13 1        ; if R13 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R13 K10      ; R13 := 0x400E7765
 47 [-]: MOVE      R14 R8       ; R14 := R8
 48 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 49 [-]: TEST      R13 1        ; if R13 then PC := 88
 50 [-]: JMP       88           ; PC := 88
 51 [-]: GETUPVAL  R14 U5       ; R14 := U5
 52 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["Active"]
 53 [-]: TEST      R14 1        ; if R14 then PC := 67
 54 [-]: JMP       67           ; PC := 67
 55 [-]: GETTABLE  R14 R7 K12   ; R14 := R7["missionTag"]
 56 [-]: GETUPVAL  R15 U5       ; R15 := U5
 57 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["Tag"]
 58 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETTABLE  R14 R8 K12   ; R14 := R8["missionTag"]
 61 [-]: GETUPVAL  R15 U5       ; R15 := U5
 62 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["Tag"]
 63 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: MOVE      R13 R1       ; R13 := R1
 66 [-]: JMP       88           ; PC := 88
 67 [-]: GETUPVAL  R14 U5       ; R14 := U5
 68 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["Active"]
 69 [-]: TEST      R14 0        ; if not R14 then PC := 88
 70 [-]: JMP       88           ; PC := 88
 71 [-]: GETTABLE  R14 R7 K12   ; R14 := R7["missionTag"]
 72 [-]: GETUPVAL  R15 U5       ; R15 := U5
 73 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["Tag"]
 74 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 88
 75 [-]: JMP       88           ; PC := 88
 76 [-]: GETTABLE  R14 R8 K12   ; R14 := R8["missionTag"]
 77 [-]: GETUPVAL  R15 U5       ; R15 := U5
 78 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["Tag"]
 79 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 88
 80 [-]: JMP       88           ; PC := 88
 81 [-]: GETTABLE  R14 R7 K14   ; R14 := R7["isShortcut"]
 82 [-]: TEST      R14 1        ; if R14 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: GETTABLE  R14 R8 K14   ; R14 := R8["isShortcut"]
 85 [-]: TEST      R14 1        ; if R14 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R13 R1       ; R13 := R1
 88 [-]: TEST      R13 1        ; if R13 then PC := 236
 89 [-]: JMP       236          ; PC := 236
 90 [-]: GETTABLE  R14 R7 K15   ; R14 := R7["locationEnabled"]
 91 [-]: TEST      R14 0        ; if not R14 then PC := 221
 92 [-]: JMP       221          ; PC := 221
 93 [-]: GETTABLE  R14 R8 K15   ; R14 := R8["locationEnabled"]
 94 [-]: TEST      R14 0        ; if not R14 then PC := 221
 95 [-]: JMP       221          ; PC := 221
 96 [-]: ADD       R5 R5 K6     ; R5 := R5 + 1
 97 [-]: GETUPVAL  R14 U6       ; R14 := U6
 98 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["Sectors"]
 99 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
100 [-]: GETTABLE  R16 R7 K17   ; R16 := R7["name"]
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
103 [-]: EQ        0 R14 K18    ; if R14 ~= nil then PC := 113
104 [-]: JMP       113          ; PC := 113
105 [-]: GETUPVAL  R14 U6       ; R14 := U6
106 [-]: GETTABLE  R14 R14 K16  ; R14 := R14["Sectors"]
107 [-]: GETGLOBAL R15 K7       ; R15 := 0x9FAED6BC
108 [-]: GETTABLE  R16 R8 K17   ; R16 := R8["name"]
109 [-]: CALL      R15 2 2      ; R15 := R15(R16)
110 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
111 [-]: EQ        1 R14 K18    ; if R14 == nil then PC := 116
112 [-]: JMP       116          ; PC := 116
113 [-]: ADD       R6 R6 K6     ; R6 := R6 + 1
114 [-]: GETUPVAL  R14 U3       ; R14 := U3
115 [-]: SETTABLE  R14 R6 R5    ; R14[R6] := R5
116 [-]: GETUPVAL  R14 U2       ; R14 := U2
117 [-]: NEWTABLE  R15 0 4      ; R15 := {}
118 [-]: SETTABLE  R15 K19 R7   ; R15["NodeA"] := R7
119 [-]: SETTABLE  R15 K20 R8   ; R15["NodeB"] := R8
120 [-]: GETTABLE  R16 R7 K14   ; R16 := R7["isShortcut"]
121 [-]: TEST      R16 0        ; if not R16 then PC := 124
122 [-]: JMP       124          ; PC := 124
123 [-]: GETTABLE  R16 R8 K14   ; R16 := R8["isShortcut"]
124 [-]: SETTABLE  R15 K21 R16  ; R15["IsShortcut"] := R16
125 [-]: GETTABLE  R16 R7 K23   ; R16 := R7["isJunction"]
126 [-]: TEST      R16 0        ; if not R16 then PC := 131
127 [-]: JMP       131          ; PC := 131
128 [-]: GETTABLE  R16 R8 K14   ; R16 := R8["isShortcut"]
129 [-]: TEST      R16 1        ; if R16 then PC := 135
130 [-]: JMP       135          ; PC := 135
131 [-]: GETTABLE  R16 R7 K14   ; R16 := R7["isShortcut"]
132 [-]: TEST      R16 0        ; if not R16 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: GETTABLE  R16 R8 K23   ; R16 := R8["isJunction"]
135 [-]: SETTABLE  R15 K22 R16  ; R15["IsJunction"] := R16
136 [-]: SETTABLE  R14 R5 R15   ; R14[R5] := R15
137 [-]: GETTABLE  R14 R7 K24   ; R14 := R7["RelatedNodes"]
138 [-]: EQ        0 R14 K18    ; if R14 ~= nil then PC := 142
139 [-]: JMP       142          ; PC := 142
140 [-]: NEWTABLE  R14 0 0      ; R14 := {}
141 [-]: SETTABLE  R7 K24 R14   ; R7["RelatedNodes"] := R14
142 [-]: GETTABLE  R14 R8 K24   ; R14 := R8["RelatedNodes"]
143 [-]: EQ        0 R14 K18    ; if R14 ~= nil then PC := 147
144 [-]: JMP       147          ; PC := 147
145 [-]: NEWTABLE  R14 0 0      ; R14 := {}
146 [-]: SETTABLE  R8 K24 R14   ; R8["RelatedNodes"] := R14
147 [-]: GETGLOBAL R14 K25      ; R14 := table
148 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["0xE6450C9D"]
149 [-]: GETTABLE  R15 R7 K24   ; R15 := R7["RelatedNodes"]
150 [-]: GETTABLE  R16 R8 K17   ; R16 := R8["name"]
151 [-]: CALL      R14 3 1      ; R14(R15,R16)
152 [-]: GETGLOBAL R14 K25      ; R14 := table
153 [-]: GETTABLE  R14 R14 K26  ; R14 := R14["0xE6450C9D"]
154 [-]: GETTABLE  R15 R8 K24   ; R15 := R8["RelatedNodes"]
155 [-]: GETTABLE  R16 R7 K17   ; R16 := R7["name"]
156 [-]: CALL      R14 3 1      ; R14(R15,R16)
157 [-]: GETUPVAL  R14 U2       ; R14 := U2
158 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
159 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["IsShortcut"]
160 [-]: TEST      R14 0        ; if not R14 then PC := 236
161 [-]: JMP       236          ; PC := 236
162 [-]: GETTABLE  R14 R8 K28   ; R14 := R8["radialSector"]
163 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["region"]
164 [-]: SETTABLE  R7 K27 R14   ; R7["targetRegion"] := R14
165 [-]: GETTABLE  R14 R7 K28   ; R14 := R7["radialSector"]
166 [-]: GETTABLE  R14 R14 K29  ; R14 := R14["region"]
167 [-]: SETTABLE  R8 K27 R14   ; R8["targetRegion"] := R14
168 [-]: GETUPVAL  R14 U2       ; R14 := U2
169 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
170 [-]: NEWTABLE  R15 0 1      ; R15 := {}
171 [-]: GETUPVAL  R16 U0       ; R16 := U0
172 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
173 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["controlPointA"]
174 [-]: SETTABLE  R15 K31 R16  ; R15["position"] := R16
175 [-]: SETTABLE  R14 K30 R15  ; R14["controlPointA"] := R15
176 [-]: GETGLOBAL R14 K32      ; R14 := 0x218C5C62
177 [-]: GETUPVAL  R15 U2       ; R15 := U2
178 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
179 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["controlPointA"]
180 [-]: GETTABLE  R15 R15 K31  ; R15 := R15["position"]
181 [-]: CALL      R14 2 2      ; R14 := R14(R15)
182 [-]: LT        0 R14 K33    ; if R14 >= 0.0099999997764826 then PC := 194
183 [-]: JMP       194          ; PC := 194
184 [-]: GETUPVAL  R14 U2       ; R14 := U2
185 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
186 [-]: GETTABLE  R14 R14 K30  ; R14 := R14["controlPointA"]
187 [-]: GETTABLE  R15 R7 K31   ; R15 := R7["position"]
188 [-]: GETTABLE  R16 R8 K31   ; R16 := R8["position"]
189 [-]: GETTABLE  R17 R7 K31   ; R17 := R7["position"]
190 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
191 [-]: MUL       R16 R16 K34  ; R16 := R16 * 0.30000001192093
192 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
193 [-]: SETTABLE  R14 K31 R15  ; R14["position"] := R15
194 [-]: GETUPVAL  R14 U2       ; R14 := U2
195 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
196 [-]: NEWTABLE  R15 0 1      ; R15 := {}
197 [-]: GETUPVAL  R16 U0       ; R16 := U0
198 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
199 [-]: GETTABLE  R16 R16 K35  ; R16 := R16["controlPointB"]
200 [-]: SETTABLE  R15 K31 R16  ; R15["position"] := R16
201 [-]: SETTABLE  R14 K35 R15  ; R14["controlPointB"] := R15
202 [-]: GETGLOBAL R14 K32      ; R14 := 0x218C5C62
203 [-]: GETUPVAL  R15 U2       ; R15 := U2
204 [-]: GETTABLE  R15 R15 R5   ; R15 := R15[R5]
205 [-]: GETTABLE  R15 R15 K35  ; R15 := R15["controlPointB"]
206 [-]: GETTABLE  R15 R15 K31  ; R15 := R15["position"]
207 [-]: CALL      R14 2 2      ; R14 := R14(R15)
208 [-]: LT        0 R14 K33    ; if R14 >= 0.0099999997764826 then PC := 236
209 [-]: JMP       236          ; PC := 236
210 [-]: GETUPVAL  R14 U2       ; R14 := U2
211 [-]: GETTABLE  R14 R14 R5   ; R14 := R14[R5]
212 [-]: GETTABLE  R14 R14 K35  ; R14 := R14["controlPointB"]
213 [-]: GETTABLE  R15 R7 K31   ; R15 := R7["position"]
214 [-]: GETTABLE  R16 R8 K31   ; R16 := R8["position"]
215 [-]: GETTABLE  R17 R7 K31   ; R17 := R7["position"]
216 [-]: SUB       R16 R16 R17  ; R16 := R16 - R17
217 [-]: MUL       R16 R16 K36  ; R16 := R16 * 0.69999998807907
218 [-]: ADD       R15 R15 R16  ; R15 := R15 + R16
219 [-]: SETTABLE  R14 K31 R15  ; R14["position"] := R15
220 [-]: JMP       236          ; PC := 236
221 [-]: GETGLOBAL R14 K37      ; R14 := 0x93B1256B
222 [-]: LOADK     R15 K38      ; R15 := "ERROR: Invalid nodes in edge "
223 [-]: GETGLOBAL R16 K7       ; R16 := 0x9FAED6BC
224 [-]: GETUPVAL  R17 U0       ; R17 := U0
225 [-]: GETTABLE  R17 R17 R12  ; R17 := R17[R12]
226 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["locationA"]
227 [-]: CALL      R16 2 2      ; R16 := R16(R17)
228 [-]: LOADK     R17 K39      ; R17 := " to "
229 [-]: GETGLOBAL R18 K7       ; R18 := 0x9FAED6BC
230 [-]: GETUPVAL  R19 U0       ; R19 := U0
231 [-]: GETTABLE  R19 R19 R12  ; R19 := R19[R12]
232 [-]: GETTABLE  R19 R19 K9   ; R19 := R19["locationB"]
233 [-]: CALL      R18 2 2      ; R18 := R18(R19)
234 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
235 [-]: CALL      R14 2 1      ; R14(R15)
236 [-]: FORLOOP   R9 27        ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
237 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2900
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: LOADNIL   R0 R1        ; R0 := R1 := nil
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: LOADK     R3 K2        ; R3 := 1
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: LEN       R4 R4        ; R4 := # R4
 11 [-]: LOADK     R5 K2        ; R5 := 1
 12 [-]: FORPREP   R3 108       ; R3 -= R5; PC := 108
 13 [-]: GETGLOBAL R7 K3        ; R7 := 0x1BF588C6
 14 [-]: LOADK     R8 K4        ; R8 := 0
 15 [-]: CALL      R7 2 1       ; R7(R8)
 16 [-]: GETUPVAL  R7 U0        ; R7 := U0
 17 [-]: GETTABLE  R0 R7 R6     ; R0 := R7[R6]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 20 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["isShortcut"]
 21 [-]: TEST      R7 0         ; if not R7 then PC := 40
 22 [-]: JMP       40           ; PC := 40
 23 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 24 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["isShortcut"]
 25 [-]: TEST      R7 0         ; if not R7 then PC := 40
 26 [-]: JMP       40           ; PC := 40
 27 [-]: MOVE      R2 R1        ; R2 := R1
 28 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 29 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 30 [-]: TEST      R7 0         ; if not R7 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 33 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 34 [-]: TEST      R7 0         ; if not R7 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: GETGLOBAL R1 K9        ; R1 := splineShortcutType
 37 [-]: JMP       78           ; PC := 78
 38 [-]: GETGLOBAL R1 K10       ; R1 := splineDisabledShortcutType
 39 [-]: JMP       78           ; PC := 78
 40 [-]: GETGLOBAL R1 K11       ; R1 := splineNextConnectionType
 41 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 42 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["edgesLocked"]
 43 [-]: TEST      R7 1         ; if R7 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 46 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["edgesLocked"]
 47 [-]: TEST      R7 0         ; if not R7 then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: GETGLOBAL R1 K13       ; R1 := splineDisabledConnectionType
 50 [-]: JMP       78           ; PC := 78
 51 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 52 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 53 [-]: TEST      R7 0         ; if not R7 then PC := 61
 54 [-]: JMP       61           ; PC := 61
 55 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 56 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 57 [-]: TEST      R7 0         ; if not R7 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: GETGLOBAL R1 K14       ; R1 := splineConnectionType
 60 [-]: JMP       78           ; PC := 78
 61 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 62 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["locked"]
 63 [-]: TEST      R7 1         ; if R7 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["NodeA"]
 66 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 67 [-]: TEST      R7 1         ; if R7 then PC := 78
 68 [-]: JMP       78           ; PC := 78
 69 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 70 [-]: GETTABLE  R7 R7 K15    ; R7 := R7["locked"]
 71 [-]: TEST      R7 1         ; if R7 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["NodeB"]
 74 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["completed"]
 75 [-]: TEST      R7 1         ; if R7 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: GETGLOBAL R1 K13       ; R1 := splineDisabledConnectionType
 78 [-]: GETGLOBAL R7 K16       ; R7 := 0x400E7765
 79 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["Instance"]
 80 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 81 [-]: TEST      R7 1         ; if R7 then PC := 87
 82 [-]: JMP       87           ; PC := 87
 83 [-]: GETGLOBAL R7 K18       ; R7 := gBackgroundRegion
 84 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7["0x9B0A3887"]
 85 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["Instance"]
 86 [-]: CALL      R7 3 1       ; R7(R8,R9)
 87 [-]: GETGLOBAL R7 K18       ; R7 := gBackgroundRegion
 88 [-]: SELF      R7 R7 K20    ; R8 := R7; R7 := R7["0xBDD34CC6"]
 89 [-]: MOVE      R9 R1        ; R9 := R1
 90 [-]: GETGLOBAL R10 K21      ; R10 := ZERO_VECTOR
 91 [-]: GETGLOBAL R11 K22      ; R11 := ZERO_ROTATION
 92 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 93 [-]: SETTABLE  R0 K17 R7    ; R0["Instance"] := R7
 94 [-]: GETTABLE  R7 R0 K17    ; R7 := R0["Instance"]
 95 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7["0xD63FF2C2"]
 96 [-]: GETUPVAL  R9 U1        ; R9 := U1
 97 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["0xF81722A2"]
 98 [-]: GETTABLE  R10 R0 K25   ; R10 := R0["IsShortcut"]
 99 [-]: GETUPVAL  R11 U2       ; R11 := U2
100 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
101 [-]: GETUPVAL  R12 U2       ; R12 := U2
102 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["LINE_CULL_DISTANCE"]
103 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
104 [-]: CALL      R7 0 1       ; R7(R8,...)
105 [-]: GETUPVAL  R7 U3        ; R7 := U3
106 [-]: MOVE      R8 R0        ; R8 := R0
107 [-]: CALL      R7 2 1       ; R7(R8)
108 [-]: FORLOOP   R3 13        ; R3 += R5; if R3 <= R4 then begin PC := 13; R6 := R3 end
109 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2942
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R0 K2        ; R0 := gPlayerProfileMgr
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x21EF7B1A"]
  8 [-]: LOADK     R2 K4        ; R2 := 0
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 139
 14 [-]: JMP       139          ; PC := 139
 15 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0["0x654F1092"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x400E7765
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: TEST      R2 1         ; if R2 then PC := 139
 21 [-]: JMP       139          ; PC := 139
 22 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1["0x2D0B8A86"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 25 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 139
 26 [-]: JMP       139          ; PC := 139
 27 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mVoidTraders"]
 28 [-]: LEN       R3 R3        ; R3 := # R3
 29 [-]: LT        0 K4 R3      ; if 0 >= R3 then PC := 139
 30 [-]: JMP       139          ; PC := 139
 31 [-]: LOADK     R3 K10       ; R3 := 86400
 32 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mVoidTraders"]
 33 [-]: GETTABLE  R4 R4 K11    ; R4 := R4[1]
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: GETGLOBAL R6 K13       ; R6 := Engine
 36 [-]: GETTABLE  R6 R6 K14    ; R6 := R6["0xD09D7910"]
 37 [-]: GETTABLE  R7 R4 K15    ; R7 := R4["mActivation"]
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: SETTABLE  R5 K12 R6    ; R5["Time"] := R6
 40 [-]: GETUPVAL  R5 U0        ; R5 := U0
 41 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["mExpiry"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["sec"]
 43 [-]: SETTABLE  R5 K16 R6    ; R5["Expiry"] := R6
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETGLOBAL R6 K20       ; R6 := 0xEC274B1A
 46 [-]: GETTABLE  R7 R4 K21    ; R7 := R4["mNode"]
 47 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 48 [-]: SETTABLE  R5 K19 R6    ; R5["Location"] := R6
 49 [-]: GETUPVAL  R5 U0        ; R5 := U0
 50 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 51 [-]: LE        0 R5 K4      ; if R5 > 0 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R5 U0        ; R5 := U0
 54 [-]: SETTABLE  R5 K22 K11   ; R5["Progress"] := 1
 55 [-]: GETUPVAL  R5 U0        ; R5 := U0
 56 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 57 [-]: JMP       70           ; PC := 70
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["Time"]
 60 [-]: LE        0 R5 R3      ; if R5 > R3 then PC := 70
 61 [-]: JMP       70           ; PC := 70
 62 [-]: GETUPVAL  R5 U0        ; R5 := U0
 63 [-]: GETUPVAL  R6 U0        ; R6 := U0
 64 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["Time"]
 65 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 66 [-]: SUB       R6 K11 R6    ; R6 := 1 - R6
 67 [-]: SETTABLE  R5 K22 R6    ; R5["Progress"] := R6
 68 [-]: GETUPVAL  R5 U0        ; R5 := U0
 69 [-]: SETTABLE  R5 K23 K24   ; R5["Active"] := "0x1"
 70 [-]: GETUPVAL  R5 U0        ; R5 := U0
 71 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Active"]
 72 [-]: TEST      R5 0         ; if not R5 then PC := 139
 73 [-]: JMP       139          ; PC := 139
 74 [-]: LOADNIL   R5 R5        ; R5 := nil
 75 [-]: MOVE      R6 R0        ; R6 := R0
 76 [-]: LOADK     R7 K11       ; R7 := 1
 77 [-]: GETUPVAL  R8 U1        ; R8 := U1
 78 [-]: LEN       R8 R8        ; R8 := # R8
 79 [-]: LOADK     R9 K11       ; R9 := 1
 80 [-]: FORPREP   R7 110       ; R7 -= R9; PC := 110
 81 [-]: GETUPVAL  R11 U1       ; R11 := U1
 82 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 83 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
 84 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 85 [-]: GETUPVAL  R12 U0       ; R12 := U0
 86 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 87 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: GETUPVAL  R11 U1       ; R11 := U1
 90 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 91 [-]: GETTABLE  R11 R11 K27  ; R11 := R11["NodeB"]
 92 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
 93 [-]: GETUPVAL  R12 U0       ; R12 := U0
 94 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
 95 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 110
 96 [-]: JMP       110          ; PC := 110
 97 [-]: GETUPVAL  R11 U1       ; R11 := U1
 98 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 99 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["NodeA"]
100 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["name"]
101 [-]: GETUPVAL  R12 U0       ; R12 := U0
102 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["Location"]
103 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: MOVE      R6 R1        ; R6 := R1
107 [-]: GETUPVAL  R11 U1       ; R11 := U1
108 [-]: GETTABLE  R5 R11 R10   ; R5 := R11[R10]
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R7 81        ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
111 [-]: GETGLOBAL R11 K5       ; R11 := 0x400E7765
112 [-]: MOVE      R12 R5       ; R12 := R5
113 [-]: CALL      R11 2 2      ; R11 := R11(R12)
114 [-]: TEST      R11 1        ; if R11 then PC := 137
115 [-]: JMP       137          ; PC := 137
116 [-]: GETUPVAL  R11 U2       ; R11 := U2
117 [-]: GETGLOBAL R12 K28      ; R12 := 0x9FAED6BC
118 [-]: GETUPVAL  R13 U0       ; R13 := U0
119 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["Location"]
120 [-]: CALL      R12 2 2      ; R12 := R12(R13)
121 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
122 [-]: GETUPVAL  R12 U0       ; R12 := U0
123 [-]: GETTABLE  R13 R5 K30   ; R13 := R5["Instance"]
124 [-]: SELF      R13 R13 K31  ; R14 := R13; R13 := R13["0xAC71FD5A"]
125 [-]: GETUPVAL  R15 U3       ; R15 := U3
126 [-]: GETTABLE  R15 R15 K32  ; R15 := R15["0xF81722A2"]
127 [-]: MOVE      R16 R6       ; R16 := R6
128 [-]: GETUPVAL  R17 U0       ; R17 := U0
129 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["Progress"]
130 [-]: GETUPVAL  R18 U0       ; R18 := U0
131 [-]: GETTABLE  R18 R18 K22  ; R18 := R18["Progress"]
132 [-]: SUB       R18 K11 R18  ; R18 := 1 - R18
133 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
134 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
135 [-]: SETTABLE  R12 K29 R13  ; R12["Position"] := R13
136 [-]: JMP       139          ; PC := 139
137 [-]: GETUPVAL  R12 U0       ; R12 := U0
138 [-]: SETTABLE  R12 K23 K33  ; R12["Active"] := "0x0"
139 [-]: GETGLOBAL R12 K34      ; R12 := mMovie
140 [-]: SELF      R12 R12 K35  ; R13 := R12; R12 := R12["0x1C19D966"]
141 [-]: LOADK     R14 K36      ; R14 := "VoidTrader"
142 [-]: LOADK     R15 K37      ; R15 := "_visible"
143 [-]: GETUPVAL  R16 U0       ; R16 := U0
144 [-]: GETTABLE  R16 R16 K23  ; R16 := R16["Active"]
145 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
146 [-]: GETUPVAL  R12 U0       ; R12 := U0
147 [-]: GETTABLE  R12 R12 K23  ; R12 := R12["Active"]
148 [-]: TEST      R12 0        ; if not R12 then PC := 155
149 [-]: JMP       155          ; PC := 155
150 [-]: GETGLOBAL R12 K34      ; R12 := mMovie
151 [-]: SELF      R12 R12 K38  ; R13 := R12; R12 := R12["0x26581636"]
152 [-]: LOADK     R14 K39      ; R14 := "VoidTrader.Image"
153 [-]: GETGLOBAL R15 K40      ; R15 := voidTraderIcon
154 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
155 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2994
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xF81722A2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := Engine
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x9490FE70"]
  5 [-]: CALL      R1 1 2       ; R1 := R1()
  6 [-]: LOADK     R2 K3        ; R2 := 48
  7 [-]: LOADK     R3 K4        ; R3 := 18
  8 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0xF81722A2"]
 11 [-]: GETGLOBAL R2 K1        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x9490FE70"]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: LOADK     R3 K5        ; R3 := 64
 15 [-]: LOADK     R4 K6        ; R4 := 32
 16 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 17 [-]: LOADK     R2 K7        ; R2 := 1
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: LEN       R3 R3        ; R3 := # R3
 20 [-]: LOADK     R4 K7        ; R4 := 1
 21 [-]: FORPREP   R2 49        ; R2 -= R4; PC := 49
 22 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 23 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
 24 [-]: GETUPVAL  R8 U1        ; R8 := U1
 25 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 26 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["clipName"]
 27 [-]: LOADK     R9 K11       ; R9 := "Btn"
 28 [-]: LOADK     R10 K12      ; R10 := "_width"
 29 [-]: MOVE      R11 R1       ; R11 := R1
 30 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 31 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 32 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
 33 [-]: GETUPVAL  R8 U1        ; R8 := U1
 34 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 35 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["clipName"]
 36 [-]: LOADK     R9 K11       ; R9 := "Btn"
 37 [-]: LOADK     R10 K13      ; R10 := "_height"
 38 [-]: MOVE      R11 R1       ; R11 := R1
 39 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 40 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 41 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x880196A7"]
 42 [-]: GETUPVAL  R8 U1        ; R8 := U1
 43 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 44 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["clipName"]
 45 [-]: LOADK     R9 K14       ; R9 := "Name.Bg"
 46 [-]: LOADK     R10 K13      ; R10 := "_height"
 47 [-]: MOVE      R11 R0       ; R11 := R0
 48 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 49 [-]: FORLOOP   R2 22        ; R2 += R4; if R2 <= R3 then begin PC := 22; R5 := R2 end
 50 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 3004
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedConstructionProjects"]
  5 [-]: LOADK     R1 K2        ; R1 := 1
  6 [-]: LEN       R2 R0        ; R2 := # R0
  7 [-]: LOADK     R3 K2        ; R3 := 1
  8 [-]: FORPREP   R1 16        ; R1 -= R3; PC := 16
  9 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 10 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["info"]
 11 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mNode"]
 12 [-]: GETUPVAL  R7 U0        ; R7 := U0
 13 [-]: SELF      R8 R6 K5     ; R9 := R6; R8 := R6["0x5EC7A3D2"]
 14 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 15 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 16 [-]: FORLOOP   R1 9         ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
 17 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 3014
; #Upvalues:       21
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 0
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K3        ; R4 := 0.20000000298023
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: GETGLOBAL R0 K4        ; R0 := gBackgroundRegion
  9 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0["0x9139A00"]
 10 [-]: GETGLOBAL R2 K6        ; R2 := gCameraSpotType
 11 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 12 [-]: GETTABLE  R1 R0 K7     ; R1 := R0[1]
 13 [-]: MOVE      R1 R1        ; R1 := R1
 14 [-]: GETGLOBAL R1 K8        ; R1 := _G
 15 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["StalkerMode"]
 16 [-]: TEST      R1 1         ; if R1 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 20 [-]: GETGLOBAL R2 K11       ; R2 := mapLoadedSound
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETGLOBAL R1 K12       ; R1 := 0x221C9700
 23 [-]: LOADK     R2 K2        ; R2 := 0
 24 [-]: LOADK     R3 K2        ; R3 := 0
 25 [-]: LOADK     R4 K7        ; R4 := 1
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: GETUPVAL  R2 U1        ; R2 := U1
 28 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0xEC183DDC"]
 29 [-]: MUL       R4 R1 K14    ; R4 := R1 * -5
 30 [-]: CALL      R2 3 1       ; R2(R3,R4)
 31 [-]: GETUPVAL  R2 U2        ; R2 := U2
 32 [-]: GETUPVAL  R3 U1        ; R3 := U1
 33 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3["0x6DA72501"]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SETTABLE  R2 K15 R3    ; R2["originPos"] := R3
 36 [-]: GETUPVAL  R2 U2        ; R2 := U2
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0xF23A7849"]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: SETTABLE  R2 K17 R3    ; R2["origRotation"] := R3
 41 [-]: GETUPVAL  R2 U2        ; R2 := U2
 42 [-]: GETGLOBAL R3 K20       ; R3 := 0xA0DB3B89
 43 [-]: GETUPVAL  R4 U1        ; R4 := U1
 44 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4["0xF23A7849"]
 45 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 46 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 47 [-]: SETTABLE  R2 K19 R3    ; R2["origFacing"] := R3
 48 [-]: GETUPVAL  R2 U2        ; R2 := U2
 49 [-]: GETGLOBAL R3 K12       ; R3 := 0x221C9700
 50 [-]: GETUPVAL  R4 U2        ; R4 := U2
 51 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["originPos"]
 52 [-]: GETTABLE  R4 R4 K22    ; R4 := R4["x"]
 53 [-]: GETUPVAL  R5 U2        ; R5 := U2
 54 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["originPos"]
 55 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["y"]
 56 [-]: GETUPVAL  R6 U2        ; R6 := U2
 57 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["originPos"]
 58 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["z"]
 59 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 60 [-]: SETTABLE  R2 K21 R3    ; R2["pos"] := R3
 61 [-]: GETUPVAL  R2 U2        ; R2 := U2
 62 [-]: GETGLOBAL R3 K26       ; R3 := 0x1E4F6281
 63 [-]: GETUPVAL  R4 U2        ; R4 := U2
 64 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["origRotation"]
 65 [-]: GETTABLE  R4 R4 K27    ; R4 := R4["heading"]
 66 [-]: GETUPVAL  R5 U2        ; R5 := U2
 67 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["origRotation"]
 68 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["pitch"]
 69 [-]: GETUPVAL  R6 U2        ; R6 := U2
 70 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["origRotation"]
 71 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["bank"]
 72 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 73 [-]: SETTABLE  R2 K25 R3    ; R2["rotation"] := R3
 74 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 75 [-]: MOVE      R2 R3        ; R2 := R3
 76 [-]: GETUPVAL  R2 U3        ; R2 := U3
 77 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 78 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9139A00"]
 79 [-]: GETGLOBAL R5 K31       ; R5 := gZoneAttribsType
 80 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 81 [-]: GETTABLE  R3 R3 K7     ; R3 := R3[1]
 82 [-]: SETTABLE  R2 K30 R3    ; R2["Zone"] := R3
 83 [-]: GETUPVAL  R2 U3        ; R2 := U3
 84 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
 85 [-]: SELF      R3 R3 K33    ; R4 := R3; R3 := R3["0x90391273"]
 86 [-]: GETUPVAL  R5 U4        ; R5 := U4
 87 [-]: GETTABLE  R5 R5 K34    ; R5 := R5["SKY_CUBE"]
 88 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 89 [-]: SETTABLE  R2 K32 R3    ; R2["Cube"] := R3
 90 [-]: GETUPVAL  R2 U2        ; R2 := U2
 91 [-]: GETUPVAL  R3 U3        ; R3 := U3
 92 [-]: GETTABLE  R3 R3 K30    ; R3 := R3["Zone"]
 93 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3["0x6DA72501"]
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: SETTABLE  R2 K35 R3    ; R2["skyOrigin"] := R3
 96 [-]: GETUPVAL  R2 U1        ; R2 := U1
 97 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2["0xAF85565F"]
 98 [-]: LOADK     R4 K7        ; R4 := 1
 99 [-]: LOADK     R5 K2        ; R5 := 0
100 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
101 [-]: GETGLOBAL R2 K8        ; R2 := _G
102 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["StalkerMode"]
103 [-]: TEST      R2 0         ; if not R2 then PC := 176
104 [-]: JMP       176          ; PC := 176
105 [-]: GETGLOBAL R2 K37       ; R2 := 0xB5A59043
106 [-]: LOADK     R3 K38       ; R3 := 60
107 [-]: LOADK     R4 K2        ; R4 := 0
108 [-]: LOADK     R5 K2        ; R5 := 0
109 [-]: LOADK     R6 K2        ; R6 := 0
110 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
111 [-]: GETGLOBAL R3 K39       ; R3 := 0x400E7765
112 [-]: GETUPVAL  R4 U3        ; R4 := U3
113 [-]: GETTABLE  R4 R4 K32    ; R4 := R4["Cube"]
114 [-]: CALL      R3 2 2       ; R3 := R3(R4)
115 [-]: TEST      R3 1         ; if R3 then PC := 130
116 [-]: JMP       130          ; PC := 130
117 [-]: GETUPVAL  R3 U3        ; R3 := U3
118 [-]: GETTABLE  R3 R3 K32    ; R3 := R3["Cube"]
119 [-]: SELF      R3 R3 K40    ; R4 := R3; R3 := R3["0xD124E361"]
120 [-]: GETGLOBAL R5 K41       ; R5 := Lotus_Game
121 [-]: GETTABLE  R5 R5 K42    ; R5 := R5["TINT_COLOR"]
122 [-]: GETTABLE  R6 R2 K43    ; R6 := R2["red"]
123 [-]: DIV       R6 R6 K44    ; R6 := R6 / 255
124 [-]: GETTABLE  R7 R2 K45    ; R7 := R2["green"]
125 [-]: DIV       R7 R7 K44    ; R7 := R7 / 255
126 [-]: GETTABLE  R8 R2 K46    ; R8 := R2["blue"]
127 [-]: DIV       R8 R8 K44    ; R8 := R8 / 255
128 [-]: LOADK     R9 K7        ; R9 := 1
129 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
130 [-]: GETGLOBAL R3 K4        ; R3 := gBackgroundRegion
131 [-]: SELF      R3 R3 K47    ; R4 := R3; R3 := R3["0xA76F0612"]
132 [-]: GETGLOBAL R5 K48       ; R5 := 0xEC274B1A
133 [-]: LOADK     R6 K49       ; R6 := "Cloud"
134 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
135 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
136 [-]: GETGLOBAL R4 K50       ; R4 := 0xECFDD17
137 [-]: MOVE      R5 R3        ; R5 := R3
138 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
139 [-]: JMP       151          ; PC := 151
140 [-]: SELF      R9 R8 K40    ; R10 := R8; R9 := R8["0xD124E361"]
141 [-]: GETGLOBAL R11 K41      ; R11 := Lotus_Game
142 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["TINT_COLOR"]
143 [-]: GETTABLE  R12 R2 K43   ; R12 := R2["red"]
144 [-]: DIV       R12 R12 K44  ; R12 := R12 / 255
145 [-]: GETTABLE  R13 R2 K45   ; R13 := R2["green"]
146 [-]: DIV       R13 R13 K44  ; R13 := R13 / 255
147 [-]: GETTABLE  R14 R2 K46   ; R14 := R2["blue"]
148 [-]: DIV       R14 R14 K44  ; R14 := R14 / 255
149 [-]: LOADK     R15 K7       ; R15 := 1
150 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
151 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 140; R6 := R7 end
152 [-]: JMP       140          ; PC := 140
153 [-]: GETGLOBAL R9 K4        ; R9 := gBackgroundRegion
154 [-]: SELF      R9 R9 K47    ; R10 := R9; R9 := R9["0xA76F0612"]
155 [-]: GETGLOBAL R11 K48      ; R11 := 0xEC274B1A
156 [-]: LOADK     R12 K51      ; R12 := "Water"
157 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
158 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
159 [-]: GETGLOBAL R10 K50      ; R10 := 0xECFDD17
160 [-]: MOVE      R11 R9       ; R11 := R9
161 [-]: CALL      R10 2 4      ; R10,R11,R12 := R10(R11)
162 [-]: JMP       174          ; PC := 174
163 [-]: SELF      R15 R14 K40  ; R16 := R14; R15 := R14["0xD124E361"]
164 [-]: GETGLOBAL R17 K41      ; R17 := Lotus_Game
165 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["TINT_COLOR"]
166 [-]: GETTABLE  R18 R2 K43   ; R18 := R2["red"]
167 [-]: DIV       R18 R18 K44  ; R18 := R18 / 255
168 [-]: GETTABLE  R19 R2 K45   ; R19 := R2["green"]
169 [-]: DIV       R19 R19 K44  ; R19 := R19 / 255
170 [-]: GETTABLE  R20 R2 K46   ; R20 := R2["blue"]
171 [-]: DIV       R20 R20 K44  ; R20 := R20 / 255
172 [-]: LOADK     R21 K7       ; R21 := 1
173 [-]: CALL      R15 7 1      ; R15(R16,R17,R18,R19,R20,R21)
174 [-]: TFORLOOP  R10 2        ; R13,R14 :=  R10(R11,R12); if R13 ~= nil then begin PC = 163; R12 := R13 end
175 [-]: JMP       163          ; PC := 163
176 [-]: GETGLOBAL R15 K1       ; R15 := mMovie
177 [-]: SELF      R15 R15 K52  ; R16 := R15; R15 := R15["0x7669354A"]
178 [-]: GETGLOBAL R17 K4       ; R17 := gBackgroundRegion
179 [-]: SELF      R17 R17 K53  ; R18 := R17; R17 := R17["0xF7C1BE25"]
180 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
181 [-]: CALL      R15 0 1      ; R15(R16,...)
182 [-]: GETGLOBAL R15 K54      ; R15 := _T
183 [-]: GETTABLE  R15 R15 K55  ; R15 := R15["FortressLocation"]
184 [-]: EQ        0 R15 K56    ; if R15 ~= nil then PC := 196
185 [-]: JMP       196          ; PC := 196
186 [-]: GETGLOBAL R15 K54      ; R15 := _T
187 [-]: NEWTABLE  R16 0 5      ; R16 := {}
188 [-]: SETTABLE  R16 K57 K7   ; R16["SplineIndex"] := 1
189 [-]: SETTABLE  R16 K58 K2   ; R16["Progress"] := 0
190 [-]: SETTABLE  R16 K59 K7   ; R16["MaxSplines"] := 1
191 [-]: GETUPVAL  R17 U5       ; R17 := U5
192 [-]: GETTABLE  R17 R17 K60  ; R17 := R17["Velocity"]
193 [-]: SETTABLE  R16 K60 R17  ; R16["Velocity"] := R17
194 [-]: SETTABLE  R16 K61 K62  ; R16["Initialized"] := "0x0"
195 [-]: SETTABLE  R15 K55 R16  ; R15["FortressLocation"] := R16
196 [-]: GETUPVAL  R15 U6       ; R15 := U6
197 [-]: CALL      R15 1 1      ; R15()
198 [-]: GETUPVAL  R15 U7       ; R15 := U7
199 [-]: CALL      R15 1 1      ; R15()
200 [-]: GETUPVAL  R15 U8       ; R15 := U8
201 [-]: CALL      R15 1 1      ; R15()
202 [-]: GETUPVAL  R15 U9       ; R15 := U9
203 [-]: CALL      R15 1 1      ; R15()
204 [-]: GETUPVAL  R15 U10      ; R15 := U10
205 [-]: CALL      R15 1 1      ; R15()
206 [-]: GETUPVAL  R15 U11      ; R15 := U11
207 [-]: CALL      R15 1 1      ; R15()
208 [-]: GETGLOBAL R15 K50      ; R15 := 0xECFDD17
209 [-]: GETUPVAL  R16 U5       ; R16 := U5
210 [-]: GETTABLE  R16 R16 K63  ; R16 := R16["Sectors"]
211 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
212 [-]: JMP       218          ; PC := 218
213 [-]: GETUPVAL  R20 U5       ; R20 := U5
214 [-]: GETTABLE  R20 R20 K64  ; R20 := R20["Nodes"]
215 [-]: GETUPVAL  R21 U12      ; R21 := U12
216 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
217 [-]: SETTABLE  R20 R18 R21  ; R20[R18] := R21
218 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 213; R17 := R18 end
219 [-]: JMP       213          ; PC := 213
220 [-]: GETUPVAL  R20 U13      ; R20 := U13
221 [-]: CALL      R20 1 1      ; R20()
222 [-]: GETUPVAL  R20 U14      ; R20 := U14
223 [-]: CALL      R20 1 1      ; R20()
224 [-]: GETUPVAL  R20 U15      ; R20 := U15
225 [-]: CALL      R20 1 1      ; R20()
226 [-]: GETUPVAL  R20 U16      ; R20 := U16
227 [-]: CALL      R20 1 1      ; R20()
228 [-]: GETUPVAL  R20 U17      ; R20 := U17
229 [-]: CALL      R20 1 1      ; R20()
230 [-]: GETUPVAL  R20 U18      ; R20 := U18
231 [-]: CALL      R20 1 1      ; R20()
232 [-]: GETGLOBAL R20 K4       ; R20 := gBackgroundRegion
233 [-]: SELF      R20 R20 K65  ; R21 := R20; R20 := R20["0xA933C036"]
234 [-]: CALL      R20 2 2      ; R20 := R20(R21)
235 [-]: GETTABLE  R21 R20 K66  ; R21 := R20["postProcess"]
236 [-]: SETTABLE  R21 K67 K7   ; R21["bloom"] := 1
237 [-]: GETTABLE  R21 R20 K66  ; R21 := R20["postProcess"]
238 [-]: SETTABLE  R21 K68 K69  ; R21["blur"] := 0.60000002384186
239 [-]: GETUPVAL  R21 U19      ; R21 := U19
240 [-]: CALL      R21 1 1      ; R21()
241 [-]: GETUPVAL  R21 U20      ; R21 := U20
242 [-]: CALL      R21 1 2      ; R21 := R21()
243 [-]: TEST      R21 1        ; if R21 then PC := 268
244 [-]: JMP       268          ; PC := 268
245 [-]: GETGLOBAL R21 K8       ; R21 := _G
246 [-]: GETTABLE  R21 R21 K9   ; R21 := R21["StalkerMode"]
247 [-]: TEST      R21 1        ; if R21 then PC := 268
248 [-]: JMP       268          ; PC := 268
249 [-]: GETGLOBAL R21 K39      ; R21 := 0x400E7765
250 [-]: GETGLOBAL R22 K70      ; R22 := mapSoundMusic
251 [-]: CALL      R21 2 2      ; R21 := R21(R22)
252 [-]: TEST      R21 1        ; if R21 then PC := 268
253 [-]: JMP       268          ; PC := 268
254 [-]: GETGLOBAL R21 K39      ; R21 := 0x400E7765
255 [-]: GETGLOBAL R22 K8       ; R22 := _G
256 [-]: GETTABLE  R22 R22 K71  ; R22 := R22["MapSoundInst"]
257 [-]: CALL      R21 2 2      ; R21 := R21(R22)
258 [-]: TEST      R21 0        ; if not R21 then PC := 268
259 [-]: JMP       268          ; PC := 268
260 [-]: GETGLOBAL R21 K8       ; R21 := _G
261 [-]: GETGLOBAL R22 K4       ; R22 := gBackgroundRegion
262 [-]: SELF      R22 R22 K10  ; R23 := R22; R22 := R22["0x25992394"]
263 [-]: GETGLOBAL R24 K70      ; R24 := mapSoundMusic
264 [-]: GETGLOBAL R25 K72      ; R25 := ZERO_VECTOR
265 [-]: MOVE      R26 R0       ; R26 := R0
266 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
267 [-]: SETTABLE  R21 K71 R22  ; R21["MapSoundInst"] := R22
268 [-]: GETGLOBAL R21 K54      ; R21 := _T
269 [-]: SETTABLE  R21 K73 K74  ; R21["InStarChart"] := "0x1"
270 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 3103
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0x2C15B55B"]
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x2B788BAB"]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 0         ; if not R0 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETGLOBAL R0 K2        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: TEST      R0 1         ; if R0 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0xAFDDC504"]
 22 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 23 [-]: TEST      R0 0         ; if not R0 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETUPVAL  R0 U0        ; R0 := U0
 26 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x2E31258"]
 27 [-]: CALL      R0 2 1       ; R0(R1)
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 3114
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U1        ; R0 := U1
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xC042262A"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K2 K3     ; R0["mSyncAvatars"] := "0x1"
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K3     ; R0["mUseOperatorForLocal"] := "0x1"
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K6     ; R0["mPortrait"] := "0x0"
 13 [-]: GETGLOBAL R0 K7        ; R0 := 0x400E7765
 14 [-]: GETGLOBAL R1 K8        ; R1 := mapDiorama
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 1         ; if R0 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0["0xF0BB6DD"]
 20 [-]: GETGLOBAL R2 K8        ; R2 := mapDiorama
 21 [-]: CALL      R0 3 1       ; R0(R1,R2)
 22 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 3125
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K2        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 34
 10 [-]: JMP       34           ; PC := 34
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x400E7765
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2["0x30BDE7F"]
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 21 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["mShip"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R4 K7        ; R4 := table
 26 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 29 [-]: GETTABLE  R7 R3 K6     ; R7 := R3["mShip"]
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7["0x1B252E3C"]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 33 [-]: CALL      R4 0 1       ; R4(R5,...)
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0xBB3AACF2"]
 36 [-]: CALL      R4 1 2       ; R4 := R4()
 37 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x5B0E7439"]
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: GETGLOBAL R5 K13       ; R5 := 0xECFDD17
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 42 [-]: JMP       57           ; PC := 57
 43 [-]: GETGLOBAL R10 K3       ; R10 := 0x400E7765
 44 [-]: GETTABLE  R11 R9 K14   ; R11 := R9["zoomedInEffects"]
 45 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 46 [-]: TEST      R10 1        ; if R10 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: GETGLOBAL R10 K7       ; R10 := table
 49 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xE6450C9D"]
 50 [-]: MOVE      R11 R0       ; R11 := R0
 51 [-]: GETGLOBAL R12 K9       ; R12 := 0x9FAED6BC
 52 [-]: GETTABLE  R13 R9 K14   ; R13 := R9["zoomedInEffects"]
 53 [-]: SELF      R13 R13 K10  ; R14 := R13; R13 := R13["0x1B252E3C"]
 54 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 55 [-]: CALL      R12 0 0      ; R12,... := R12(R13,...)
 56 [-]: CALL      R10 0 1      ; R10(R11,...)
 57 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 43; R7 := R8 end
 58 [-]: JMP       43           ; PC := 43
 59 [-]: LEN       R10 R0       ; R10 := # R0
 60 [-]: LT        0 K2 R10     ; if 0 >= R10 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: GETGLOBAL R10 K15      ; R10 := UISys
 63 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["0x449B53E0"]
 64 [-]: MOVE      R11 R0       ; R11 := R0
 65 [-]: MOVE      R12 R1       ; R12 := R1
 66 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 67 [-]: MOVE      R10 R1       ; R10 := R1
 68 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 3151
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 3158
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := 3000
  2 [-]: UNM       R1 R0        ; R1 := - R0
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: UNM       R3 R0        ; R3 := - R0
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: GETGLOBAL R5 K1        ; R5 := 0x329BDC44
  7 [-]: LOADK     R6 K2        ; R6 := "EE.Interface.Components.DragScroll"
  8 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  9 [-]: GETTABLE  R6 R5 K3     ; R6 := R5["0x46FF1A3C"]
 10 [-]: GETGLOBAL R7 K4        ; R7 := mMovie
 11 [-]: LOADK     R8 K5        ; R8 := "Board"
 12 [-]: MOVE      R9 R1        ; R9 := R1
 13 [-]: MOVE      R10 R3       ; R10 := R3
 14 [-]: MOVE      R11 R2       ; R11 := R2
 15 [-]: MOVE      R12 R4       ; R12 := R4
 16 [-]: CALL      R6 7 2       ; R6 := R6(R7,R8,R9,R10,R11,R12)
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CLOSURE   R7 0         ; R7 := closure(Function #78.1)
 20 [-]: SETTABLE  R6 K6 R7     ; R6["OnScroll"] := R7
 21 [-]: GETUPVAL  R6 U0        ; R6 := U0
 22 [-]: CLOSURE   R7 1         ; R7 := closure(Function #78.2)
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: SETTABLE  R6 K7 R7     ; R6["mOnStopDrag"] := R7
 25 [-]: GETUPVAL  R6 U0        ; R6 := U0
 26 [-]: CLOSURE   R7 2         ; R7 := closure(Function #78.3)
 27 [-]: GETUPVAL  R0 U1        ; R0 := U1
 28 [-]: SETTABLE  R6 K8 R7     ; R6["mOnDeselectCallback"] := R7
 29 [-]: GETUPVAL  R6 U0        ; R6 := U0
 30 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 31 [-]: LOADK     R8 K10       ; R8 := "x"
 32 [-]: LOADK     R9 K11       ; R9 := 0.5
 33 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 34 [-]: GETUPVAL  R6 U0        ; R6 := U0
 35 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0xCE468565"]
 36 [-]: LOADK     R8 K12       ; R8 := "y"
 37 [-]: LOADK     R9 K11       ; R9 := 0.5
 38 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 39 [-]: RETURN    R0 1         ; return 


; Function #78.1:
;
; Name:            
; Defined at line: 3168
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: RETURN    R0 1         ; return 


; Function #78.2:
;
; Name:            
; Defined at line: 3172
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Deselected"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K0 K1     ; R0["Deselected"] := nil
  7 [-]: RETURN    R0 1         ; return 


; Function #78.3:
;
; Name:            
; Defined at line: 3178
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 3185
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: SETTABLE  R0 K0 K1     ; R0["mMovingRegion"] := nil
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: SETTABLE  R0 K2 K1     ; R0["mMovingNode"] := nil
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SETTABLE  R0 K3 K1     ; R0["mEdgeNode1"] := nil
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SETTABLE  R0 K4 K1     ; R0["mEdgeNode2"] := nil
 11 [-]: GETUPVAL  R0 U0        ; R0 := U0
 12 [-]: SETTABLE  R0 K5 K1     ; R0["mInitialPosition"] := nil
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: SETTABLE  R0 K6 K1     ; R0["mInitialWorldCursor"] := nil
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: SETTABLE  R0 K7 K8     ; R0["mRotationAxis"] := "heading"
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: SETTABLE  R0 K9 K10    ; R0["mFramingRegion"] := 0
 19 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 3199
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mShiftDown"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
  7 [-]: TEST      R0 0         ; if not R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETUPVAL  R0 U1        ; R0 := U1
 10 [-]: SETTABLE  R0 K2 K3     ; R0["mRotationAxis"] := "bank"
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mControlDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: SETTABLE  R0 K2 K4     ; R0["mRotationAxis"] := "pitch"
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETUPVAL  R0 U1        ; R0 := U1
 20 [-]: SETTABLE  R0 K2 K5     ; R0["mRotationAxis"] := "heading"
 21 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 3209
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADK     R0 K0        ; R0 := ""
  2 [-]: GETGLOBAL R1 K1        ; R1 := gPlayerProfileMgr
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x21EF7B1A"]
  4 [-]: LOADK     R3 K3        ; R3 := 0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x400E7765
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 65
 10 [-]: JMP       65           ; PC := 65
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1["0x654F1092"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["0x52C8784B"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 17 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 18 [-]: MOVE      R8 R3        ; R8 := R3
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: TEST      R7 1         ; if R7 then PC := 65
 21 [-]: JMP       65           ; PC := 65
 22 [-]: TEST      R6 0         ; if not R6 then PC := 65
 23 [-]: JMP       65           ; PC := 65
 24 [-]: SELF      R7 R3 K7     ; R8 := R3; R7 := R3["0x6C207447"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LEN       R8 R7        ; R8 := # R7
 27 [-]: LE        0 R4 R8      ; if R4 > R8 then PC := 65
 28 [-]: JMP       65           ; PC := 65
 29 [-]: GETTABLE  R8 R7 R4     ; R8 := R7[R4]
 30 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mMainMission"]
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mKey"]
 32 [-]: GETGLOBAL R9 K4        ; R9 := 0x400E7765
 33 [-]: MOVE      R10 R8       ; R10 := R8
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: TEST      R9 1         ; if R9 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8["0xA26B0FA3"]
 38 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 39 [-]: TEST      R9 1         ; if R9 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 42 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 43 [-]: SELF      R11 R8 K13   ; R12 := R8; R11 := R8["0x616C74B6"]
 44 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 45 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: MOVE      R12 R0       ; R12 := R0
 48 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 49 [-]: MOVE      R0 R9        ; R0 := R9
 50 [-]: JMP       65           ; PC := 65
 51 [-]: GETTABLE  R9 R7 R4     ; R9 := R7[R4]
 52 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mLocTag"]
 53 [-]: GETGLOBAL R10 K16      ; R10 := EMPTY_SYMBOL
 54 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 65
 55 [-]: JMP       65           ; PC := 65
 56 [-]: GETGLOBAL R9 K11       ; R9 := mMovie
 57 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9["0x5DB0BD4"]
 58 [-]: GETTABLE  R11 R7 R4    ; R11 := R7[R4]
 59 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mLocTag"]
 60 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11["0x5EC7A3D2"]
 61 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 62 [-]: MOVE      R12 R0       ; R12 := R0
 63 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 64 [-]: MOVE      R0 R9        ; R0 := R9
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 3232
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := cjson
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x8DC1075B"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := gMatchingService
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x3016115E"]
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R2 3 1       ; R2(R3,R4)
  9 [-]: GETGLOBAL R2 K4        ; R2 := gGameRules
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x8B598ED4"]
 11 [-]: GETGLOBAL R4 K6        ; R4 := gLotusHubGameRulesType
 12 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 54
 14 [-]: JMP       54           ; PC := 54
 15 [-]: GETGLOBAL R2 K7        ; R2 := gPlayerProfileMgr
 16 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x21EF7B1A"]
 17 [-]: LOADK     R4 K9        ; R4 := 0
 18 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 19 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2["0x654F1092"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K11       ; R3 := string
 22 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["0xDE44F664"]
 23 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["name"]
 24 [-]: GETUPVAL  R5 U0        ; R5 := U0
 25 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["HUB_TAG"]
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 30 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 31 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["HUB_SPAWN_DEFAULT"]
 32 [-]: CALL      R3 3 1       ; R3(R4,R5)
 33 [-]: JMP       54           ; PC := 54
 34 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 35 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x81645750"]
 36 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 37 [-]: TEST      R3 0         ; if not R3 then PC := 50
 38 [-]: JMP       50           ; PC := 50
 39 [-]: GETGLOBAL R3 K4        ; R3 := gGameRules
 40 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x8B598ED4"]
 41 [-]: GETGLOBAL R5 K20       ; R5 := gLotusDojoGameRulesType
 42 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 43 [-]: TEST      R3 1         ; if R3 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 46 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 47 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["HUB_SPAWN_TRADE"]
 48 [-]: CALL      R3 3 1       ; R3(R4,R5)
 49 [-]: JMP       54           ; PC := 54
 50 [-]: SELF      R3 R2 K16    ; R4 := R2; R3 := R2["0xE8518372"]
 51 [-]: GETGLOBAL R5 K17       ; R5 := Lotus_Game
 52 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["HUB_SPAWN_NAVIGATION"]
 53 [-]: CALL      R3 3 1       ; R3(R4,R5)
 54 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 3248
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := Engine
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CI_SELECT"]
  6 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 18
  7 [-]: JMP       18           ; PC := 18
  8 [-]: GETGLOBAL R1 K3        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["sectorInfo"]
 10 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["sectorInfo"]
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K3        ; R1 := _T
 17 [-]: SETTABLE  R1 K4 K5     ; R1["sectorInfo"] := nil
 18 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 3257
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x1C988750"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K1        ; R3 := "AbortConfirm"
  5 [-]: CALL      R1 3 1       ; R1(R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 3261
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := gGameRules
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x1106FFC3"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x400E7765
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2["0xE67B2EA2"]
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 14 [-]: RETURN    R3 0         ; return R3,...
 15 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 3269
; #Upvalues:       6
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Active"]
  3 [-]: TEST      R6 0         ; if not R6 then PC := 99
  4 [-]: JMP       99           ; PC := 99
  5 [-]: GETGLOBAL R6 K1        ; R6 := gGameRules
  6 [-]: SELF      R6 R6 K2     ; R7 := R6; R6 := R6["0xEF1D3958"]
  7 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  8 [-]: TEST      R6 1         ; if R6 then PC := 99
  9 [-]: JMP       99           ; PC := 99
 10 [-]: GETGLOBAL R6 K3        ; R6 := gRegion
 11 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0x3E2F6BF"]
 12 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 13 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 14 [-]: MOVE      R8 R6        ; R8 := R6
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: TEST      R7 1         ; if R7 then PC := 99
 17 [-]: JMP       99           ; PC := 99
 18 [-]: GETGLOBAL R7 K5        ; R7 := 0x400E7765
 19 [-]: SELF      R8 R6 K6     ; R9 := R6; R8 := R6["0x8DB5D01F"]
 20 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 21 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8["0x7AEE2957"]
 22 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 23 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 24 [-]: TEST      R7 1         ; if R7 then PC := 99
 25 [-]: JMP       99           ; PC := 99
 26 [-]: GETGLOBAL R7 K1        ; R7 := gGameRules
 27 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7["0x1106FFC3"]
 28 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 29 [-]: GETGLOBAL R8 K5        ; R8 := 0x400E7765
 30 [-]: MOVE      R9 R7        ; R9 := R7
 31 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 32 [-]: TEST      R8 1         ; if R8 then PC := 95
 33 [-]: JMP       95           ; PC := 95
 34 [-]: GETGLOBAL R8 K3        ; R8 := gRegion
 35 [-]: SELF      R8 R8 K4     ; R9 := R8; R8 := R8["0x3E2F6BF"]
 36 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 37 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 38 [-]: MOVE      R10 R8       ; R10 := R8
 39 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 40 [-]: TEST      R9 1         ; if R9 then PC := 95
 41 [-]: JMP       95           ; PC := 95
 42 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 43 [-]: SELF      R10 R8 K6    ; R11 := R8; R10 := R8["0x8DB5D01F"]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10["0x7AEE2957"]
 46 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 47 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 48 [-]: TEST      R9 1         ; if R9 then PC := 95
 49 [-]: JMP       95           ; PC := 95
 50 [-]: SELF      R9 R7 K9     ; R10 := R7; R9 := R7["0xE67B2EA2"]
 51 [-]: MOVE      R11 R8       ; R11 := R8
 52 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 53 [-]: TEST      R9 0         ; if not R9 then PC := 91
 54 [-]: JMP       91           ; PC := 91
 55 [-]: GETGLOBAL R9 K10       ; R9 := _T
 56 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["ClearRailjackMissionState"]
 57 [-]: EQ        1 R9 K12     ; if R9 == nil then PC := 62
 58 [-]: JMP       62           ; PC := 62
 59 [-]: GETGLOBAL R9 K10       ; R9 := _T
 60 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["0xCE7A7A0"]
 61 [-]: CALL      R9 1 1       ; R9()
 62 [-]: NEWTABLE  R9 0 4       ; R9 := {}
 63 [-]: SETTABLE  R9 K14 R0    ; R9["name"] := R0
 64 [-]: SETTABLE  R9 K15 R1    ; R9["quest"] := R1
 65 [-]: SETTABLE  R9 K16 R3    ; R9["difficulty"] := R3
 66 [-]: SETTABLE  R9 K17 R5    ; R9["wager"] := R5
 67 [-]: GETGLOBAL R10 K18      ; R10 := cjson
 68 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["0x8DC1075B"]
 69 [-]: MOVE      R11 R9       ; R11 := R9
 70 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 71 [-]: GETGLOBAL R11 K20      ; R11 := gMatchingService
 72 [-]: SELF      R11 R11 K21  ; R12 := R11; R11 := R11["0x3016115E"]
 73 [-]: MOVE      R13 R10      ; R13 := R10
 74 [-]: CALL      R11 3 1      ; R11(R12,R13)
 75 [-]: SELF      R11 R7 K22   ; R12 := R7; R11 := R7["0xD93C7568"]
 76 [-]: GETUPVAL  R13 U0       ; R13 := U0
 77 [-]: GETTABLE  R13 R13 K23  ; R13 := R13["SelectionNode"]
 78 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["radialSector"]
 79 [-]: GETTABLE  R13 R13 K25  ; R13 := R13["mission"]
 80 [-]: CALL      R11 3 1      ; R11(R12,R13)
 81 [-]: GETGLOBAL R11 K5       ; R11 := 0x400E7765
 82 [-]: GETGLOBAL R12 K26      ; R12 := _G
 83 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["UIMovie_SolarMap"]
 84 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 85 [-]: TEST      R11 1        ; if R11 then PC := 95
 86 [-]: JMP       95           ; PC := 95
 87 [-]: GETUPVAL  R11 U1       ; R11 := U1
 88 [-]: MOVE      R12 R1       ; R12 := R1
 89 [-]: CALL      R11 2 1      ; R11(R12)
 90 [-]: JMP       95           ; PC := 95
 91 [-]: GETUPVAL  R11 U2       ; R11 := U2
 92 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["0x38ECFE60"]
 93 [-]: LOADK     R12 K29      ; R12 := "/Lotus/Language/SystemMessages/RailJackBusyWarp"
 94 [-]: CALL      R11 2 1      ; R11(R12)
 95 [-]: GETUPVAL  R11 U0       ; R11 := U0
 96 [-]: SETTABLE  R11 K23 K12  ; R11["SelectionNode"] := nil
 97 [-]: MOVE      R11 R1       ; R11 := R1
 98 [-]: RETURN    R11 2        ; return R11
 99 [-]: GETUPVAL  R11 U3       ; R11 := U3
100 [-]: GETTABLE  R11 R11 K30  ; R11 := R11["0x8ECD61A2"]
101 [-]: GETGLOBAL R12 K31      ; R12 := 0xEC274B1A
102 [-]: MOVE      R13 R0       ; R13 := R0
103 [-]: CALL      R12 2 2      ; R12 := R12(R13)
104 [-]: MOVE      R13 R1       ; R13 := R1
105 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
106 [-]: EQ        1 R11 K12    ; if R11 == nil then PC := 130
107 [-]: JMP       130          ; PC := 130
108 [-]: GETGLOBAL R12 K32      ; R12 := mMovie
109 [-]: SELF      R12 R12 K33  ; R13 := R12; R12 := R12["0x5DB0BD4"]
110 [-]: GETTABLE  R14 R11 K34  ; R14 := R11["text"]
111 [-]: MOVE      R15 R0       ; R15 := R0
112 [-]: NEWTABLE  R16 0 5      ; R16 := {}
113 [-]: GETTABLE  R17 R11 K36  ; R17 := R11["player"]
114 [-]: SETTABLE  R16 K35 R17  ; R16["PLAYER_NAME"] := R17
115 [-]: GETTABLE  R17 R11 K38  ; R17 := R11["value"]
116 [-]: SETTABLE  R16 K37 R17  ; R16["VALUE"] := R17
117 [-]: GETTABLE  R17 R11 K39  ; R17 := R11["MIN"]
118 [-]: SETTABLE  R16 K39 R17  ; R16["MIN"] := R17
119 [-]: GETTABLE  R17 R11 K40  ; R17 := R11["MAX"]
120 [-]: SETTABLE  R16 K40 R17  ; R16["MAX"] := R17
121 [-]: GETTABLE  R17 R11 K41  ; R17 := R11["ITEM"]
122 [-]: SETTABLE  R16 K41 R17  ; R16["ITEM"] := R17
123 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
124 [-]: GETUPVAL  R13 U2       ; R13 := U2
125 [-]: GETTABLE  R13 R13 K42  ; R13 := R13["0xB11F032"]
126 [-]: MOVE      R14 R12      ; R14 := R12
127 [-]: CALL      R13 2 1      ; R13(R14)
128 [-]: MOVE      R13 R0       ; R13 := R0
129 [-]: RETURN    R13 2        ; return R13
130 [-]: NEWTABLE  R13 0 4      ; R13 := {}
131 [-]: SETTABLE  R13 K14 R0   ; R13["name"] := R0
132 [-]: SETTABLE  R13 K15 R1   ; R13["quest"] := R1
133 [-]: SETTABLE  R13 K16 R3   ; R13["difficulty"] := R3
134 [-]: SETTABLE  R13 K17 R5   ; R13["wager"] := R5
135 [-]: TEST      R2 0         ; if not R2 then PC := 140
136 [-]: JMP       140          ; PC := 140
137 [-]: EQ        1 R2 K43     ; if R2 == "" then PC := 140
138 [-]: JMP       140          ; PC := 140
139 [-]: SETTABLE  R13 K44 R2   ; R13["raid"] := R2
140 [-]: TEST      R4 0         ; if not R4 then PC := 145
141 [-]: JMP       145          ; PC := 145
142 [-]: EQ        1 R4 K43     ; if R4 == "" then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: SETTABLE  R13 K45 R4   ; R13["voidTier"] := R4
145 [-]: GETGLOBAL R14 K5       ; R14 := 0x400E7765
146 [-]: MOVE      R15 R1       ; R15 := R1
147 [-]: CALL      R14 2 2      ; R14 := R14(R15)
148 [-]: TEST      R14 1        ; if R14 then PC := 196
149 [-]: JMP       196          ; PC := 196
150 [-]: GETGLOBAL R14 K46      ; R14 := string
151 [-]: GETTABLE  R14 R14 K47  ; R14 := R14["0xDE44F664"]
152 [-]: MOVE      R15 R0       ; R15 := R0
153 [-]: GETUPVAL  R16 U4       ; R16 := U4
154 [-]: GETTABLE  R16 R16 K48  ; R16 := R16["KEY_TAG"]
155 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
156 [-]: TEST      R14 0        ; if not R14 then PC := 196
157 [-]: JMP       196          ; PC := 196
158 [-]: GETGLOBAL R14 K46      ; R14 := string
159 [-]: GETTABLE  R14 R14 K47  ; R14 := R14["0xDE44F664"]
160 [-]: MOVE      R15 R0       ; R15 := R0
161 [-]: GETUPVAL  R16 U4       ; R16 := U4
162 [-]: GETTABLE  R16 R16 K48  ; R16 := R16["KEY_TAG"]
163 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
164 [-]: EQ        1 R14 K12    ; if R14 == nil then PC := 196
165 [-]: JMP       196          ; PC := 196
166 [-]: GETGLOBAL R15 K46      ; R15 := string
167 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["0x7B782033"]
168 [-]: MOVE      R16 R0       ; R16 := R0
169 [-]: LOADK     R17 K50      ; R17 := 1
170 [-]: SUB       R18 R14 K50  ; R18 := R14 - 1
171 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
172 [-]: GETGLOBAL R16 K51      ; R16 := 0x7C282057
173 [-]: MOVE      R17 R15      ; R17 := R15
174 [-]: CALL      R16 2 2      ; R16 := R16(R17)
175 [-]: GETGLOBAL R17 K5       ; R17 := 0x400E7765
176 [-]: MOVE      R18 R16      ; R18 := R16
177 [-]: CALL      R17 2 2      ; R17 := R17(R18)
178 [-]: TEST      R17 1        ; if R17 then PC := 196
179 [-]: JMP       196          ; PC := 196
180 [-]: SELF      R17 R16 K52  ; R18 := R16; R17 := R16["0x9BC3049C"]
181 [-]: CALL      R17 2 2      ; R17 := R17(R18)
182 [-]: TEST      R17 0        ; if not R17 then PC := 196
183 [-]: JMP       196          ; PC := 196
184 [-]: GETGLOBAL R17 K10      ; R17 := _T
185 [-]: SETTABLE  R17 K53 R13  ; R17["sectorInfo"] := R13
186 [-]: GETGLOBAL R17 K32      ; R17 := mMovie
187 [-]: SELF      R17 R17 K54  ; R18 := R17; R17 := R17["0x458F27A9"]
188 [-]: LOADK     R19 K55      ; R19 := "ShowQuestConfirm"
189 [-]: GETGLOBAL R20 K56      ; R20 := 0x9FAED6BC
190 [-]: SELF      R21 R16 K57  ; R22 := R16; R21 := R16["0x5F68C582"]
191 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
192 [-]: CALL      R20 0 0      ; R20,... := R20(R21,...)
193 [-]: CALL      R17 0 1      ; R17(R18,...)
194 [-]: MOVE      R17 R1       ; R17 := R1
195 [-]: RETURN    R17 2        ; return R17
196 [-]: GETUPVAL  R17 U5       ; R17 := U5
197 [-]: MOVE      R18 R13      ; R18 := R13
198 [-]: CALL      R17 2 1      ; R17(R18)
199 [-]: MOVE      R17 R1       ; R17 := R1
200 [-]: RETURN    R17 2        ; return R17
201 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 3338
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: GETGLOBAL R2 K0        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CachedInvasionInfo"]
 13 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 14 [-]: SETTABLE  R1 K2 R2     ; R1["gInvasionInfo"] := R2
 15 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 17 [-]: GETGLOBAL R3 K5        ; R3 := invasionMovie
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: MOVE      R1 R0        ; R1 := R0
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xD692CA7B"]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CALL      R1 3 1       ; R1(R2,R3)
 24 [-]: MOVE      R1 R1        ; R1 := R1
 25 [-]: MOVE      R1 R1        ; R1 := R1
 26 [-]: GETGLOBAL R1 K7        ; R1 := 0x400E7765
 27 [-]: GETGLOBAL R2 K0        ; R2 := _T
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R1 K0        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["SquadOverlay"]
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x458F27A9"]
 35 [-]: LOADK     R3 K10       ; R3 := "OnRadialSolarMapOpenChildMovie"
 36 [-]: LOADK     R4 K11       ; R4 := ""
 37 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 3353
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETGLOBAL R2 K1        ; R2 := _T
  6 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SquadOverlay"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["SquadOverlay"]
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRadialSolarMapCloseChildMovie"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: TEST      R0 0         ; if not R0 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: EQ        1 R0 K5      ; if R0 == "" then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R1 U2        ; R1 := U2
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: LOADK     R3 K5        ; R3 := ""
 23 [-]: LOADK     R4 K5        ; R4 := ""
 24 [-]: LOADK     R5 K5        ; R5 := ""
 25 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 3366
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K1        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["CachedActiveMissions"]
  8 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  9 [-]: TEST      R1 1         ; if R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x5FF274BB"]
 14 [-]: GETGLOBAL R3 K5        ; R3 := projectionMovie
 15 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 16 [-]: MOVE      R1 R0        ; R1 := R0
 17 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 71
 21 [-]: JMP       71           ; PC := 71
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VOID_PROJECTION_ITEMS"]
 24 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VoidT1"]
 25 [-]: GETGLOBAL R2 K1        ; R2 := _T
 26 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedActiveMissions"]
 27 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 28 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mMissionInfo"]
 29 [-]: GETUPVAL  R3 U2        ; R3 := U2
 30 [-]: GETGLOBAL R4 K10       ; R4 := 0x9FAED6BC
 31 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["activeMissionTag"]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: SETTABLE  R3 K9 R4     ; R3["MissionTier"] := R4
 34 [-]: GETUPVAL  R3 U1        ; R3 := U1
 35 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 36 [-]: GETUPVAL  R4 U2        ; R4 := U2
 37 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 38 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 39 [-]: TEST      R3 0         ; if not R3 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETUPVAL  R3 U1        ; R3 := U1
 42 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["VOID_PROJECTION_ITEMS"]
 43 [-]: GETUPVAL  R4 U2        ; R4 := U2
 44 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["MissionTier"]
 45 [-]: GETTABLE  R1 R3 R4     ; R1 := R3[R4]
 46 [-]: GETUPVAL  R3 U2        ; R3 := U2
 47 [-]: SETTABLE  R3 K12 R0    ; R3["SectorName"] := R0
 48 [-]: GETUPVAL  R3 U0        ; R3 := U0
 49 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0xB9C96BA0"]
 50 [-]: LOADK     R5 K14       ; R5 := "SetExclusiveTier"
 51 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 52 [-]: SELF      R7 R1 K15    ; R8 := R1; R7 := R1["0x1B252E3C"]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: LOADK     R8 K16       ; R8 := "OnVoidProjectionChosen"
 55 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 56 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 57 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 58 [-]: GETUPVAL  R4 U3        ; R4 := U3
 59 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["Movie"]
 60 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 61 [-]: TEST      R3 1         ; if R3 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETUPVAL  R3 U3        ; R3 := U3
 64 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["Movie"]
 65 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 66 [-]: LOADK     R5 K19       ; R5 := "ItemBrowsing"
 67 [-]: LOADK     R6 K20       ; R6 := "true"
 68 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 69 [-]: MOVE      R3 R1        ; R3 := R1
 70 [-]: MOVE      R3 R4        ; R3 := R4
 71 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 72 [-]: GETGLOBAL R4 K1        ; R4 := _T
 73 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["SquadOverlay"]
 74 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 75 [-]: TEST      R3 1         ; if R3 then PC := 83
 76 [-]: JMP       83           ; PC := 83
 77 [-]: GETGLOBAL R3 K1        ; R3 := _T
 78 [-]: GETTABLE  R3 R3 K21    ; R3 := R3["SquadOverlay"]
 79 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3["0x458F27A9"]
 80 [-]: LOADK     R5 K22       ; R5 := "OnRadialSolarMapOpenChildMovie"
 81 [-]: LOADK     R6 K23       ; R6 := ""
 82 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 83 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 3396
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Movie"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 1         ; if R1 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Movie"]
 12 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K3        ; R3 := "ItemBrowsing"
 14 [-]: LOADK     R4 K4        ; R4 := "false"
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K5        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SquadOverlay"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K5        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["SquadOverlay"]
 24 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K7        ; R3 := "OnRadialSolarMapCloseChildMovie"
 26 [-]: LOADK     R4 K8        ; R4 := ""
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: EQ        0 R0 K9      ; if R0 ~= "true" then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: GETUPVAL  R2 U4        ; R2 := U4
 32 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SectorName"]
 33 [-]: GETUPVAL  R3 U5        ; R3 := U5
 34 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["ACTIVE_MISSION_TAG"]
 35 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 36 [-]: LOADK     R3 K8        ; R3 := ""
 37 [-]: LOADK     R4 K8        ; R4 := ""
 38 [-]: LOADK     R5 K8        ; R5 := ""
 39 [-]: GETUPVAL  R6 U4        ; R6 := U4
 40 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["MissionTier"]
 41 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 42 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3413
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3416
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 1         ; if R1 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R1 K0        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedSkullNodes"]
  6 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K0        ; R1 := _T
 11 [-]: SETTABLE  R1 K3 R0     ; R1["gNightmareNodeName"] := R0
 12 [-]: GETGLOBAL R1 K4        ; R1 := Engine
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["0xF271473D"]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: GETGLOBAL R2 K4        ; R2 := Engine
 16 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["ThreeOptions"]
 17 [-]: SETTABLE  R1 K6 R2     ; R1["dialogType"] := R2
 18 [-]: SETTABLE  R1 K8 K9     ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
 19 [-]: SETTABLE  R1 K10 K11   ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
 20 [-]: SETTABLE  R1 K12 K13   ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
 21 [-]: SETTABLE  R1 K14 K15   ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
 22 [-]: SELF      R2 R1 K16    ; R3 := R1; R2 := R1["0x69A4A158"]
 23 [-]: LOADK     R4 K17       ; R4 := "ConfirmNightmare"
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: GETUPVAL  R2 U1        ; R2 := U1
 26 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["0x82F0B112"]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: MOVE      R2 R1        ; R2 := R1
 31 [-]: MOVE      R2 R2        ; R2 := R2
 32 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3435
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["gNightmareNodeName"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["CI_GENERIC_1"]
 13 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: GETGLOBAL R2 K5        ; R2 := _G
 16 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["CachedGoalInfo"]
 17 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 18 [-]: TEST      R2 0         ; if not R2 then PC := 33
 19 [-]: JMP       33           ; PC := 33
 20 [-]: MOVE      R2 R1        ; R2 := R1
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["EVENT_TAG"]
 23 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R2 K0        ; R2 := Engine
 26 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["CI_SELECT"]
 27 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: MOVE      R2 R1        ; R2 := R1
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["NIGHTMARE_TAG"]
 32 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: MOVE      R3 R1        ; R3 := R1
 35 [-]: LOADK     R4 K10       ; R4 := ""
 36 [-]: LOADK     R5 K10       ; R5 := ""
 37 [-]: LOADK     R6 K10       ; R6 := ""
 38 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 39 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3456
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 3459
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  2 [-]: GETUPVAL  R5 U0        ; R5 := U0
  3 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["MovieInst"]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 1         ; if R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
  9 [-]: GETUPVAL  R5 U1        ; R5 := U1
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Movie"]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETUPVAL  R4 U1        ; R4 := U1
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["Movie"]
 16 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 17 [-]: LOADK     R6 K4        ; R6 := "ItemBrowsing"
 18 [-]: LOADK     R7 K5        ; R7 := "true"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: SETTABLE  R4 K6 R0     ; R4["SectorName"] := R0
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SETTABLE  R4 K7 R2     ; R4["Quest"] := R2
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: SETTABLE  R4 K8 R3     ; R4["Difficulty"] := R3
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETGLOBAL R5 K9        ; R5 := mMovie
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5["0x5FF274BB"]
 29 [-]: GETGLOBAL R7 K11       ; R7 := wagerMovie
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: SETTABLE  R4 K1 R5     ; R4["MovieInst"] := R5
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["MovieInst"]
 36 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0xB9C96BA0"]
 37 [-]: LOADK     R6 K13       ; R6 := "SetSectorNameAndCloseCallback"
 38 [-]: NEWTABLE  R7 2 0       ; R7 := {}
 39 [-]: MOVE      R8 R1        ; R8 := R1
 40 [-]: LOADK     R9 K14       ; R9 := "ConfirmWagerSelection"
 41 [-]: SETLIST   R7 2 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 44 [-]: GETGLOBAL R5 K15       ; R5 := _T
 45 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["SquadOverlay"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: TEST      R4 1         ; if R4 then PC := 55
 48 [-]: JMP       55           ; PC := 55
 49 [-]: GETGLOBAL R4 K15       ; R4 := _T
 50 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["SquadOverlay"]
 51 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4["0x458F27A9"]
 52 [-]: LOADK     R6 K17       ; R6 := "OnRadialSolarMapOpenChildMovie"
 53 [-]: LOADK     R7 K18       ; R7 := ""
 54 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 55 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 3482
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["MovieInst"] := nil
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: MOVE      R2 R1        ; R2 := R1
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
  6 [-]: GETUPVAL  R3 U2        ; R3 := U2
  7 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 14 [-]: LOADK     R4 K5        ; R4 := "ItemBrowsing"
 15 [-]: LOADK     R5 K6        ; R5 := "false"
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 18 [-]: GETGLOBAL R3 K7        ; R3 := _T
 19 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["SquadOverlay"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R2 K7        ; R2 := _T
 24 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["SquadOverlay"]
 25 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 26 [-]: LOADK     R4 K9        ; R4 := "OnRadialSolarMapCloseChildMovie"
 27 [-]: LOADK     R5 K10       ; R5 := ""
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 55
 30 [-]: JMP       55           ; PC := 55
 31 [-]: EQ        1 R0 K6      ; if R0 == "false" then PC := 55
 32 [-]: JMP       55           ; PC := 55
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: GETUPVAL  R3 U0        ; R3 := U0
 35 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["Quest"]
 36 [-]: TEST      R3 0         ; if not R3 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SectorName"]
 40 [-]: TEST      R3 1         ; if R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R3 R0        ; R3 := R0
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["Quest"]
 45 [-]: LOADNIL   R5 R5        ; R5 := nil
 46 [-]: GETUPVAL  R6 U0        ; R6 := U0
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["Difficulty"]
 48 [-]: LOADNIL   R7 R7        ; R7 := nil
 49 [-]: MOVE      R8 R1        ; R8 := R1
 50 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 51 [-]: TEST      R2 1         ; if R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: RETURN    R0 1         ; return 
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETGLOBAL R2 K7        ; R2 := _T
 56 [-]: SETTABLE  R2 K14 K15   ; R2["MadeWagerChoice"] := "0x0"
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: SETTABLE  R2 K12 K10   ; R2["SectorName"] := ""
 59 [-]: GETUPVAL  R2 U0        ; R2 := U0
 60 [-]: SETTABLE  R2 K11 K1    ; R2["Quest"] := nil
 61 [-]: GETUPVAL  R2 U0        ; R2 := U0
 62 [-]: SETTABLE  R2 K13 K16   ; R2["Difficulty"] := 0
 63 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 3507
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x48FBE19F"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: LOADK     R1 K3        ; R1 := 1
 12 [-]: LEN       R2 R0        ; R2 := # R0
 13 [-]: LOADK     R3 K3        ; R3 := 1
 14 [-]: FORPREP   R1 25        ; R1 -= R3; PC := 25
 15 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 16 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8F6EA7B6"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: TEST      R5 1         ; if R5 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R5 K5        ; R5 := gMatchingService
 21 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5["0xFE13353B"]
 22 [-]: GETTABLE  R7 R0 R4     ; R7 := R0[R4]
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 25 [-]: FORLOOP   R1 15        ; R1 += R3; if R1 <= R2 then begin PC := 15; R4 := R1 end
 26 [-]: GETUPVAL  R5 U1        ; R5 := U1
 27 [-]: GETTABLE  R5 R5 K0     ; R5 := R5["Node"]
 28 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["radialSector"]
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mission"]
 30 [-]: GETGLOBAL R6 K9        ; R6 := 0x9FAED6BC
 31 [-]: GETUPVAL  R7 U1        ; R7 := U1
 32 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["SectorName"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K11       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["0xDE44F664"]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: GETUPVAL  R9 U2        ; R9 := U2
 38 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["KEY_TAG"]
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: EQ        1 R7 K14     ; if R7 == nil then PC := 71
 41 [-]: JMP       71           ; PC := 71
 42 [-]: GETGLOBAL R8 K11       ; R8 := string
 43 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["0x7B782033"]
 44 [-]: MOVE      R9 R6        ; R9 := R6
 45 [-]: LOADK     R10 K3       ; R10 := 1
 46 [-]: SUB       R11 R7 K3    ; R11 := R7 - 1
 47 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 48 [-]: GETGLOBAL R9 K16       ; R9 := 0x7C282057
 49 [-]: MOVE      R10 R8       ; R10 := R8
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: GETGLOBAL R10 K17      ; R10 := 0x400E7765
 52 [-]: MOVE      R11 R9       ; R11 := R9
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: TEST      R10 1        ; if R10 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETGLOBAL R10 K19      ; R10 := 0x2C00D429
 57 [-]: MOVE      R11 R8       ; R11 := R8
 58 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 59 [-]: SETTABLE  R5 K18 R10   ; R5["levelKeyName"] := R10
 60 [-]: GETUPVAL  R10 U1       ; R10 := U1
 61 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 62 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 63 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 71
 65 [-]: JMP       71           ; PC := 71
 66 [-]: GETUPVAL  R10 U1       ; R10 := U1
 67 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 68 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 69 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["keyChain"]
 70 [-]: SETTABLE  R5 K21 R10   ; R5["keyChainName"] := R10
 71 [-]: GETUPVAL  R10 U1       ; R10 := U1
 72 [-]: GETTABLE  R10 R10 K0   ; R10 := R10["Node"]
 73 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["radialSector"]
 74 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["name"]
 75 [-]: GETUPVAL  R11 U1       ; R11 := U1
 76 [-]: SETTABLE  R11 K0 K14   ; R11["Node"] := nil
 77 [-]: GETGLOBAL R11 K23      ; R11 := _T
 78 [-]: SETTABLE  R11 K24 K25  ; R11["StartingSoloMission"] := "0x1"
 79 [-]: GETUPVAL  R11 U3       ; R11 := U3
 80 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["0xCFE73DF8"]
 81 [-]: MOVE      R12 R10      ; R12 := R10
 82 [-]: MOVE      R13 R5       ; R13 := R5
 83 [-]: GETUPVAL  R14 U4       ; R14 := U4
 84 [-]: GETTABLE  R14 R14 K27  ; R14 := R14["0xF81722A2"]
 85 [-]: GETGLOBAL R15 K17      ; R15 := 0x400E7765
 86 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 87 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 88 [-]: MOVE      R15 R15      ; R15 := R15
 89 [-]: GETTABLE  R16 R5 K18   ; R16 := R5["levelKeyName"]
 90 [-]: LOADNIL   R17 R17      ; R17 := nil
 91 [-]: CALL      R14 4 0      ; R14,... := R14(R15,R16,R17)
 92 [-]: CALL      R11 0 1      ; R11(R12,...)
 93 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 3543
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: GETGLOBAL R1 K0        ; R1 := Engine
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CI_CANCEL"]
  6 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U2        ; R1 := U2
  9 [-]: SETTABLE  R1 K2 K3     ; R1["Node"] := nil
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: MOVE      R1 R1        ; R1 := R1
 17 [-]: MOVE      R1 R1        ; R1 := R1
 18 [-]: GETGLOBAL R1 K4        ; R1 := 0x93B1256B
 19 [-]: LOADK     R2 K5        ; R2 := "ConfirmSoloMission"
 20 [-]: CALL      R1 2 1       ; R1(R2)
 21 [-]: GETGLOBAL R1 K6        ; R1 := gMatchingService
 22 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0x1E13A326"]
 23 [-]: LOADK     R3 K8        ; R3 := "OpenSoloMission"
 24 [-]: CALL      R1 3 1       ; R1(R2,R3)
 25 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 3561
; #Upvalues:       7
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: MOVE      R1 R0        ; R1 := R0
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x458F27A9"]
  6 [-]: LOADK     R3 K3        ; R3 := "ShowBlockingMessage"
  7 [-]: LOADK     R4 K4        ; R4 := "0"
  8 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  9 [-]: GETGLOBAL R1 K5        ; R1 := 0x400E7765
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0xB7E9C2EF"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: GETTABLE  R2 R1 K7     ; R2 := R1["playerCount"]
 19 [-]: GETGLOBAL R3 K0        ; R3 := _T
 20 [-]: CLOSURE   R4 0         ; R4 := closure(Function #99.1)
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: GETUPVAL  R0 U4        ; R0 := U4
 24 [-]: GETUPVAL  R0 U5        ; R0 := U5
 25 [-]: GETUPVAL  R0 U6        ; R0 := U6
 26 [-]: SETTABLE  R3 K8 R4     ; R3["MenuSelectionDone"] := R4
 27 [-]: TEST      R0 0         ; if not R0 then PC := 74
 28 [-]: JMP       74           ; PC := 74
 29 [-]: GETUPVAL  R3 U5        ; R3 := U5
 30 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mAutoJoinIfNotBusy"]
 31 [-]: TEST      R3 0         ; if not R3 then PC := 74
 32 [-]: JMP       74           ; PC := 74
 33 [-]: GETUPVAL  R3 U5        ; R3 := U5
 34 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mBusyPlayerLoad"]
 35 [-]: LT        0 K11 R3     ; if 0 >= R3 then PC := 74
 36 [-]: JMP       74           ; PC := 74
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: LOADK     R4 K12       ; R4 := 2
 39 [-]: LEN       R5 R2        ; R5 := # R2
 40 [-]: LOADK     R6 K13       ; R6 := 1
 41 [-]: FORPREP   R4 47        ; R4 -= R6; PC := 47
 42 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 43 [-]: LT        0 K11 R8     ; if 0 >= R8 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R3 R0        ; R3 := R0
 46 [-]: JMP       48           ; PC := 48
 47 [-]: FORLOOP   R4 42        ; R4 += R6; if R4 <= R5 then begin PC := 42; R7 := R4 end
 48 [-]: TEST      R3 0         ; if not R3 then PC := 74
 49 [-]: JMP       74           ; PC := 74
 50 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[1]
 51 [-]: GETTABLE  R9 R1 K14    ; R9 := R1["hubCapacity"]
 52 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 53 [-]: GETUPVAL  R9 U5        ; R9 := U5
 54 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mBusyPlayerLoad"]
 55 [-]: LE        0 R8 R9      ; if R8 > R9 then PC := 74
 56 [-]: JMP       74           ; PC := 74
 57 [-]: GETGLOBAL R9 K5        ; R9 := 0x400E7765
 58 [-]: GETUPVAL  R10 U2       ; R10 := U2
 59 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 60 [-]: TEST      R9 1         ; if R9 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETUPVAL  R9 U2        ; R9 := U2
 63 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9["0xA58BB96C"]
 64 [-]: CALL      R9 2 1       ; R9(R10)
 65 [-]: GETGLOBAL R9 K0        ; R9 := _T
 66 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["0x968C0654"]
 67 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 68 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 69 [-]: SETTABLE  R11 K17 K11  ; R11["Instance"] := 0
 70 [-]: SETTABLE  R11 K18 K19  ; R11["IsFull"] := "0x0"
 71 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 72 [-]: CALL      R9 2 1       ; R9(R10)
 73 [-]: RETURN    R0 1         ; return 
 74 [-]: CLOSURE   R9 1         ; R9 := closure(Function #99.2)
 75 [-]: GETUPVAL  R0 U5        ; R0 := U5
 76 [-]: GETGLOBAL R10 K20      ; R10 := mMovie
 77 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10["0x5FF274BB"]
 78 [-]: GETGLOBAL R12 K22      ; R12 := genericMenuMovie
 79 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 80 [-]: MOVE      R10 R2       ; R10 := R2
 81 [-]: GETUPVAL  R10 U2       ; R10 := U2
 82 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
 83 [-]: LOADK     R12 K23      ; R12 := "SetTitle"
 84 [-]: LOADK     R13 K24      ; R13 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
 85 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 86 [-]: GETUPVAL  R10 U2       ; R10 := U2
 87 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
 88 [-]: LOADK     R12 K25      ; R12 := "SetCallBack"
 89 [-]: LOADK     R13 K8       ; R13 := "MenuSelectionDone"
 90 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 91 [-]: TEST      R0 0         ; if not R0 then PC := 101
 92 [-]: JMP       101          ; PC := 101
 93 [-]: GETGLOBAL R10 K0       ; R10 := _T
 94 [-]: CLOSURE   R11 2        ; R11 := closure(Function #99.3)
 95 [-]: MOVE      R0 R2        ; R0 := R2
 96 [-]: MOVE      R0 R1        ; R0 := R1
 97 [-]: MOVE      R0 R9        ; R0 := R9
 98 [-]: GETUPVAL  R0 U5        ; R0 := U5
 99 [-]: SETTABLE  R10 K26 R11  ; R10["GetMenuEntries"] := R11
100 [-]: JMP       105          ; PC := 105
101 [-]: GETGLOBAL R10 K0       ; R10 := _T
102 [-]: CLOSURE   R11 3        ; R11 := closure(Function #99.4)
103 [-]: GETUPVAL  R0 U5        ; R0 := U5
104 [-]: SETTABLE  R10 K26 R11  ; R10["GetMenuEntries"] := R11
105 [-]: GETUPVAL  R10 U2       ; R10 := U2
106 [-]: SELF      R10 R10 K2   ; R11 := R10; R10 := R10["0x458F27A9"]
107 [-]: LOADK     R12 K27      ; R12 := "SetElementsFunction"
108 [-]: LOADK     R13 K26      ; R13 := "GetMenuEntries"
109 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
110 [-]: RETURN    R0 1         ; return 


; Function #99.1:
;
; Name:            
; Defined at line: 3593
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
  8 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 69
  9 [-]: JMP       69           ; PC := 69
 10 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 11 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Instance"]
 12 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 69
 13 [-]: JMP       69           ; PC := 69
 14 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1]
 15 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["IsFull"]
 16 [-]: EQ        0 R1 K7      ; if R1 ~= "0x1" then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R1 K8        ; R1 := mMovie
 19 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0x5DB0BD4"]
 20 [-]: LOADK     R3 K10       ; R3 := "/Lotus/Language/Menu/MissionInstanceIsFull"
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["0xB11F032"]
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 1       ; R2(R3)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K12       ; R2 := gMatchingService
 29 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x35DDC67D"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: LT        0 K4 R2      ; if 1 >= R2 then PC := 46
 32 [-]: JMP       46           ; PC := 46
 33 [-]: GETUPVAL  R2 U2        ; R2 := U2
 34 [-]: GETUPVAL  R3 U3        ; R3 := U3
 35 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["sectorName"]
 36 [-]: GETUPVAL  R4 U4        ; R4 := U4
 37 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["HUB_TAG"]
 38 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 39 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 40 [-]: LOADK     R6 K16       ; R6 := 0.5
 41 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 42 [-]: TEST      R2 1         ; if R2 then PC := 64
 43 [-]: JMP       64           ; PC := 64
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: JMP       64           ; PC := 64
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: GETUPVAL  R3 U3        ; R3 := U3
 48 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["sectorName"]
 49 [-]: GETUPVAL  R4 U4        ; R4 := U4
 50 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["HUB_TAG"]
 51 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 52 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 53 [-]: LOADK     R6 K16       ; R6 := 0.5
 54 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 55 [-]: TEST      R2 1         ; if R2 then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: RETURN    R0 1         ; return 
 58 [-]: GETGLOBAL R2 K0        ; R2 := _T
 59 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["SquadOverlay"]
 60 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x458F27A9"]
 61 [-]: LOADK     R4 K19       ; R4 := "NotifyForceLoadSoloMission"
 62 [-]: LOADK     R5 K20       ; R5 := "dontLockSession"
 63 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 64 [-]: GETGLOBAL R2 K12       ; R2 := gMatchingService
 65 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0xEDAA4B70"]
 66 [-]: GETTABLE  R4 R0 K4     ; R4 := R0[1]
 67 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Instance"]
 68 [-]: CALL      R2 3 1       ; R2(R3,R4)
 69 [-]: RETURN    R0 1         ; return 


; Function #99.2:
;
; Name:            
; Defined at line: 3649
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: DIV       R2 R0 R1     ; R2 := R0 / R1
  2 [-]: LOADNIL   R3 R3        ; R3 := nil
  3 [-]: EQ        0 R2 K0      ; if R2 ~= 0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADK     R3 K1        ; R3 := "HubInstanceEmpty"
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETUPVAL  R4 U0        ; R4 := U0
  8 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mBusyPlayerLoad"]
  9 [-]: LT        0 R2 R4      ; if R2 >= R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADK     R3 K3        ; R3 := "HubInstanceCalm"
 12 [-]: JMP       18           ; PC := 18
 13 [-]: LT        0 R2 K4      ; if R2 >= 1 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADK     R3 K5        ; R3 := "HubInstanceBusy"
 16 [-]: JMP       18           ; PC := 18
 17 [-]: LOADK     R3 K6        ; R3 := "HubInstanceFull"
 18 [-]: GETGLOBAL R4 K7        ; R4 := mMovie
 19 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4["0x5DB0BD4"]
 20 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/"
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: RETURN    R4 2         ; return R4
 26 [-]: RETURN    R0 1         ; return 


; Function #99.3:
;
; Name:            
; Defined at line: 3673
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R1 R1        ; R1 := R1
  3 [-]: LOADK     R2 K0        ; R2 := 1
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LOADK     R4 K0        ; R4 := 1
  7 [-]: FORPREP   R2 64        ; R2 -= R4; PC := 64
  8 [-]: GETUPVAL  R6 U0        ; R6 := U0
  9 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 10 [-]: GETUPVAL  R7 U1        ; R7 := U1
 11 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["hubCapacity"]
 12 [-]: LE        1 R7 R6      ; if R7 <= R6 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: GETUPVAL  R7 U2        ; R7 := U2
 17 [-]: GETUPVAL  R8 U0        ; R8 := U0
 18 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 19 [-]: GETUPVAL  R9 U1        ; R9 := U1
 20 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["hubCapacity"]
 21 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 22 [-]: GETUPVAL  R8 U0        ; R8 := U0
 23 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 24 [-]: GETUPVAL  R9 U1        ; R9 := U1
 25 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["hubCapacity"]
 26 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 27 [-]: GETUPVAL  R9 U3        ; R9 := U3
 28 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mBusyPlayerLoad"]
 29 [-]: LE        1 R9 R8      ; if R9 <= R8 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: MOVE      R8 R1        ; R8 := R1
 33 [-]: TEST      R6 1         ; if R6 then PC := 61
 34 [-]: JMP       61           ; PC := 61
 35 [-]: GETUPVAL  R9 U0        ; R9 := U0
 36 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 37 [-]: LT        1 K3 R9      ; if 0 < R9 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: LEN       R9 R0        ; R9 := # R0
 40 [-]: EQ        0 R9 K3      ; if R9 ~= 0 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: GETGLOBAL R9 K4        ; R9 := table
 43 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["0xE6450C9D"]
 44 [-]: MOVE      R10 R0       ; R10 := R0
 45 [-]: NEWTABLE  R11 0 3      ; R11 := {}
 46 [-]: GETGLOBAL R12 K7       ; R12 := string
 47 [-]: GETTABLE  R12 R12 K8   ; R12 := R12["0x639C642A"]
 48 [-]: GETUPVAL  R13 U3       ; R13 := U3
 49 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["sectorLoc"]
 50 [-]: LOADK     R14 K10      ; R14 := " "
 51 [-]: MOVE      R15 R5       ; R15 := R5
 52 [-]: LOADK     R16 K11      ; R16 := ": "
 53 [-]: MOVE      R17 R7       ; R17 := R7
 54 [-]: CONCAT    R13 R13 R17  ; R13 := R13 .. R14 .. R15 .. R16 .. R17
 55 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 56 [-]: SETTABLE  R11 K6 R12   ; R11["mName"] := R12
 57 [-]: SUB       R12 R5 K0    ; R12 := R5 - 1
 58 [-]: SETTABLE  R11 K12 R12  ; R11["Instance"] := R12
 59 [-]: SETTABLE  R11 K13 R6   ; R11["IsFull"] := R6
 60 [-]: CALL      R9 3 1       ; R9(R10,R11)
 61 [-]: TEST      R8 1         ; if R8 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R1 R0        ; R1 := R0
 64 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 65 [-]: TEST      R1 1         ; if R1 then PC := 70
 66 [-]: JMP       70           ; PC := 70
 67 [-]: LEN       R9 R0        ; R9 := # R0
 68 [-]: EQ        0 R9 K3      ; if R9 ~= 0 then PC := 97
 69 [-]: JMP       97           ; PC := 97
 70 [-]: GETUPVAL  R9 U0        ; R9 := U0
 71 [-]: LEN       R9 R9        ; R9 := # R9
 72 [-]: ADD       R9 R9 K0     ; R9 := R9 + 1
 73 [-]: GETUPVAL  R10 U2       ; R10 := U2
 74 [-]: LOADK     R11 K3       ; R11 := 0
 75 [-]: GETUPVAL  R12 U1       ; R12 := U1
 76 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["hubCapacity"]
 77 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 78 [-]: GETGLOBAL R11 K4       ; R11 := table
 79 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["0xE6450C9D"]
 80 [-]: MOVE      R12 R0       ; R12 := R0
 81 [-]: NEWTABLE  R13 0 3      ; R13 := {}
 82 [-]: GETGLOBAL R14 K7       ; R14 := string
 83 [-]: GETTABLE  R14 R14 K8   ; R14 := R14["0x639C642A"]
 84 [-]: GETUPVAL  R15 U3       ; R15 := U3
 85 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["sectorLoc"]
 86 [-]: LOADK     R16 K10      ; R16 := " "
 87 [-]: MOVE      R17 R9       ; R17 := R9
 88 [-]: LOADK     R18 K11      ; R18 := ": "
 89 [-]: MOVE      R19 R10      ; R19 := R10
 90 [-]: CONCAT    R15 R15 R19  ; R15 := R15 .. R16 .. R17 .. R18 .. R19
 91 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 92 [-]: SETTABLE  R13 K6 R14   ; R13["mName"] := R14
 93 [-]: SUB       R14 R9 K0    ; R14 := R9 - 1
 94 [-]: SETTABLE  R13 K12 R14  ; R13["Instance"] := R14
 95 [-]: SETTABLE  R13 K13 K14  ; R13["IsFull"] := "0x0"
 96 [-]: CALL      R11 3 1      ; R11(R12,R13)
 97 [-]: RETURN    R0 2         ; return R0
 98 [-]: RETURN    R0 1         ; return 


; Function #99.4:
;
; Name:            
; Defined at line: 3704
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := string
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["0x639C642A"]
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["sectorLoc"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K3        ; R2 := table
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["0xE6450C9D"]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: NEWTABLE  R4 0 3       ; R4 := {}
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: LOADK     R6 K6        ; R6 := " 1"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: SETTABLE  R4 K5 R5     ; R4["mName"] := R5
 15 [-]: SETTABLE  R4 K7 K8     ; R4["Instance"] := 0
 16 [-]: SETTABLE  R4 K9 K10    ; R4["IsFull"] := "0x0"
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 3716
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9FAED6BC
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["name"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: SETTABLE  R2 K2 R1     ; R2["sectorName"] := R1
  6 [-]: GETGLOBAL R2 K3        ; R2 := mMovie
  7 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x5DB0BD4"]
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x9FAED6BC
  9 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["locTag"]
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: MOVE      R5 R0        ; R5 := R0
 12 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 13 [-]: GETGLOBAL R3 K6        ; R3 := string
 14 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["0x633C4246"]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K8        ; R5 := "Relay"
 17 [-]: LOADK     R6 K9        ; R6 := ""
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: MOVE      R2 R3        ; R2 := R3
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: SETTABLE  R3 K10 R2    ; R3["sectorLoc"] := R2
 22 [-]: GETGLOBAL R3 K11       ; R3 := 0x400E7765
 23 [-]: GETUPVAL  R4 U1        ; R4 := U1
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 0         ; if not R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: MOVE      R3 R1        ; R3 := R1
 29 [-]: MOVE      R3 R2        ; R3 := R2
 30 [-]: GETGLOBAL R3 K12       ; R3 := _T
 31 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["BackgroundMovie"]
 32 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x458F27A9"]
 33 [-]: LOADK     R5 K15       ; R5 := "ShowBlockingMessage"
 34 [-]: LOADK     R6 K16       ; R6 := "2"
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETUPVAL  R3 U1        ; R3 := U1
 37 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3["0xF2773BCF"]
 38 [-]: LOADK     R5 K18       ; R5 := "GotHubInstances"
 39 [-]: CALL      R3 3 1       ; R3(R4,R5)
 40 [-]: GETUPVAL  R3 U1        ; R3 := U1
 41 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3["0x1F59D76E"]
 42 [-]: MOVE      R5 R1        ; R5 := R1
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 3737
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["0x87B2D555"]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["FactionNames"]
  7 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["faction"]
  8 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1
  9 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0xE6DC43B0
 11 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Game/MissionName_"
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: LOADK     R4 K6        ; R4 := " - "
 17 [-]: GETGLOBAL R5 K4        ; R5 := 0xE6DC43B0
 18 [-]: MOVE      R6 R2        ; R6 := R2
 19 [-]: MOVE      R7 R0        ; R7 := R0
 20 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 21 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 3743
; #Upvalues:       16
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x9FAED6BC
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["name"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mission"]
  5 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["difficulty"]
  6 [-]: MOVE      R5 R3        ; R5 := R3
  7 [-]: LOADK     R6 K4        ; R6 := "QUEST"
  8 [-]: LOADK     R7 K5        ; R7 := "RAID"
  9 [-]: GETGLOBAL R8 K6        ; R8 := string
 10 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["0xDE44F664"]
 11 [-]: MOVE      R9 R5        ; R9 := R5
 12 [-]: GETUPVAL  R10 U0       ; R10 := U0
 13 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["KEY_TAG"]
 14 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 15 [-]: TEST      R8 0         ; if not R8 then PC := 50
 16 [-]: JMP       50           ; PC := 50
 17 [-]: LOADNIL   R8 R8        ; R8 := nil
 18 [-]: GETGLOBAL R9 K6        ; R9 := string
 19 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["0xDE44F664"]
 20 [-]: MOVE      R10 R5       ; R10 := R5
 21 [-]: GETUPVAL  R11 U0       ; R11 := U0
 22 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["KEY_TAG"]
 23 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 24 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 50
 25 [-]: JMP       50           ; PC := 50
 26 [-]: GETGLOBAL R10 K6       ; R10 := string
 27 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["0x7B782033"]
 28 [-]: MOVE      R11 R5       ; R11 := R5
 29 [-]: LOADK     R12 K11      ; R12 := 1
 30 [-]: SUB       R13 R9 K11   ; R13 := R9 - 1
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: GETGLOBAL R11 K12      ; R11 := 0x7C282057
 33 [-]: MOVE      R12 R10      ; R12 := R10
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: MOVE      R8 R11       ; R8 := R11
 36 [-]: GETGLOBAL R11 K13      ; R11 := 0x400E7765
 37 [-]: MOVE      R12 R8       ; R12 := R8
 38 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 39 [-]: TEST      R11 1        ; if R11 then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: SELF      R11 R8 K14   ; R12 := R8; R11 := R8["0x625DA4BB"]
 42 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 43 [-]: GETGLOBAL R12 K15      ; R12 := EMPTY_SYMBOL
 44 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: GETGLOBAL R12 K0       ; R12 := 0x9FAED6BC
 47 [-]: MOVE      R13 R11      ; R13 := R11
 48 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 49 [-]: MOVE      R5 R12       ; R5 := R12
 50 [-]: MOVE      R12 R1       ; R12 := R1
 51 [-]: MOVE      R12 R1       ; R12 := R1
 52 [-]: GETGLOBAL R12 K16      ; R12 := mMovie
 53 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12["0x5FF274BB"]
 54 [-]: GETGLOBAL R14 K18      ; R14 := genericMenuMovie
 55 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 56 [-]: MOVE      R12 R2       ; R12 := R2
 57 [-]: GETUPVAL  R12 U2       ; R12 := U2
 58 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 59 [-]: LOADK     R14 K20      ; R14 := "SetTitle"
 60 [-]: LOADK     R15 K21      ; R15 := "/Lotus/Language/Menu/ConfirmMultiMission"
 61 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 62 [-]: GETGLOBAL R12 K22      ; R12 := _T
 63 [-]: CLOSURE   R13 0        ; R13 := closure(Function #102.1)
 64 [-]: GETUPVAL  R0 U1        ; R0 := U1
 65 [-]: GETUPVAL  R0 U2        ; R0 := U2
 66 [-]: MOVE      R0 R0        ; R0 := R0
 67 [-]: GETUPVAL  R0 U0        ; R0 := U0
 68 [-]: GETUPVAL  R0 U3        ; R0 := U3
 69 [-]: MOVE      R0 R5        ; R0 := R5
 70 [-]: GETUPVAL  R0 U4        ; R0 := U4
 71 [-]: MOVE      R0 R1        ; R0 := R1
 72 [-]: MOVE      R0 R2        ; R0 := R2
 73 [-]: MOVE      R0 R3        ; R0 := R3
 74 [-]: MOVE      R0 R6        ; R0 := R6
 75 [-]: GETUPVAL  R0 U5        ; R0 := U5
 76 [-]: MOVE      R0 R7        ; R0 := R7
 77 [-]: MOVE      R0 R4        ; R0 := R4
 78 [-]: GETUPVAL  R0 U6        ; R0 := U6
 79 [-]: GETUPVAL  R0 U7        ; R0 := U7
 80 [-]: GETUPVAL  R0 U8        ; R0 := U8
 81 [-]: GETUPVAL  R0 U9        ; R0 := U9
 82 [-]: GETUPVAL  R0 U10       ; R0 := U10
 83 [-]: GETUPVAL  R0 U11       ; R0 := U11
 84 [-]: GETUPVAL  R0 U12       ; R0 := U12
 85 [-]: SETTABLE  R12 K23 R13  ; R12["MenuSelectionDone"] := R13
 86 [-]: GETUPVAL  R12 U2       ; R12 := U2
 87 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
 88 [-]: LOADK     R14 K24      ; R14 := "SetCallBack"
 89 [-]: LOADK     R15 K23      ; R15 := "MenuSelectionDone"
 90 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 91 [-]: GETGLOBAL R12 K22      ; R12 := _T
 92 [-]: CLOSURE   R13 1        ; R13 := closure(Function #102.2)
 93 [-]: MOVE      R0 R0        ; R0 := R0
 94 [-]: GETUPVAL  R0 U13       ; R0 := U13
 95 [-]: MOVE      R0 R6        ; R0 := R6
 96 [-]: MOVE      R0 R5        ; R0 := R5
 97 [-]: GETUPVAL  R0 U14       ; R0 := U14
 98 [-]: GETUPVAL  R0 U0        ; R0 := U0
 99 [-]: GETUPVAL  R0 U8        ; R0 := U8
100 [-]: GETUPVAL  R0 U6        ; R0 := U6
101 [-]: GETUPVAL  R0 U15       ; R0 := U15
102 [-]: SETTABLE  R12 K25 R13  ; R12["GetMenuEntries"] := R13
103 [-]: GETUPVAL  R12 U2       ; R12 := U2
104 [-]: SELF      R12 R12 K19  ; R13 := R12; R12 := R12["0x458F27A9"]
105 [-]: LOADK     R14 K26      ; R14 := "SetElementsFunction"
106 [-]: LOADK     R15 K25      ; R15 := "GetMenuEntries"
107 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
108 [-]: GETUPVAL  R12 U2       ; R12 := U2
109 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12["0xD692CA7B"]
110 [-]: MOVE      R14 R1       ; R14 := R1
111 [-]: CALL      R12 3 1      ; R12(R13,R14)
112 [-]: RETURN    R0 1         ; return 


; Function #102.1:
;
; Name:            
; Defined at line: 3772
; #Upvalues:       21
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetComponents"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["ResetSelectionDone"] := nil
  5 [-]: MOVE      R1 R0        ; R1 := R0
  6 [-]: MOVE      R1 R0        ; R1 := R0
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: MOVE      R1 R1        ; R1 := R1
  9 [-]: GETUPVAL  R1 U2        ; R1 := U2
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mission"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1["0xA4269DBC"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 14 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 214
 15 [-]: JMP       214          ; PC := 214
 16 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 17 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 18 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 214
 19 [-]: JMP       214          ; PC := 214
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 22 [-]: GETUPVAL  R3 U3        ; R3 := U3
 23 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["INVASION_ATTACKER_TAG"]
 24 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETUPVAL  R2 U4        ; R2 := U4
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: CALL      R2 2 1       ; R2(R3)
 29 [-]: JMP       214          ; PC := 214
 30 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 31 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 32 [-]: GETUPVAL  R3 U3        ; R3 := U3
 33 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["ACTIVE_MISSION_TAG"]
 34 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 57
 35 [-]: JMP       57           ; PC := 57
 36 [-]: GETGLOBAL R2 K0        ; R2 := _T
 37 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 38 [-]: TEST      R2 0         ; if not R2 then PC := 57
 39 [-]: JMP       57           ; PC := 57
 40 [-]: GETGLOBAL R2 K0        ; R2 := _T
 41 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 42 [-]: GETUPVAL  R3 U5        ; R3 := U5
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: TEST      R2 0         ; if not R2 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: GETGLOBAL R2 K0        ; R2 := _T
 47 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["CachedActiveMissions"]
 48 [-]: GETUPVAL  R3 U5        ; R3 := U5
 49 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 50 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mVisible"]
 51 [-]: TEST      R2 0         ; if not R2 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETUPVAL  R2 U6        ; R2 := U6
 54 [-]: GETUPVAL  R3 U5        ; R3 := U5
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: JMP       214          ; PC := 214
 57 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 58 [-]: GETUPVAL  R3 U7        ; R3 := U7
 59 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 60 [-]: TEST      R2 0         ; if not R2 then PC := 73
 61 [-]: JMP       73           ; PC := 73
 62 [-]: GETGLOBAL R2 K12       ; R2 := 0x400E7765
 63 [-]: GETUPVAL  R3 U8        ; R3 := U8
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: TEST      R2 0         ; if not R2 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R2 U5        ; R2 := U5
 68 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
 69 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
 70 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 71 [-]: MOVE      R2 R9        ; R2 := R9
 72 [-]: JMP       138          ; PC := 138
 73 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
 74 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
 75 [-]: GETUPVAL  R3 U10       ; R3 := U10
 76 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 108
 77 [-]: JMP       108          ; PC := 108
 78 [-]: GETUPVAL  R2 U7        ; R2 := U7
 79 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
 80 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 81 [-]: MOVE      R2 R7        ; R2 := R7
 82 [-]: GETUPVAL  R2 U11       ; R2 := U11
 83 [-]: GETUPVAL  R3 U9        ; R3 := U9
 84 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 85 [-]: TEST      R2 0         ; if not R2 then PC := 105
 86 [-]: JMP       105          ; PC := 105
 87 [-]: GETUPVAL  R2 U11       ; R2 := U11
 88 [-]: GETUPVAL  R3 U9        ; R3 := U9
 89 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 90 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["KeyType"]
 91 [-]: TEST      R2 0         ; if not R2 then PC := 105
 92 [-]: JMP       105          ; PC := 105
 93 [-]: GETGLOBAL R2 K15       ; R2 := 0x9FAED6BC
 94 [-]: GETUPVAL  R3 U11       ; R3 := U11
 95 [-]: GETUPVAL  R4 U9        ; R4 := U9
 96 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 97 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["KeyType"]
 98 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x1B252E3C"]
 99 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
100 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
101 [-]: GETUPVAL  R3 U3        ; R3 := U3
102 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["KEY_TAG"]
103 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
104 [-]: MOVE      R2 R9        ; R2 := R9
105 [-]: LOADNIL   R2 R2        ; R2 := nil
106 [-]: MOVE      R2 R8        ; R2 := R8
107 [-]: JMP       138          ; PC := 138
108 [-]: GETTABLE  R2 R0 K6     ; R2 := R0[1]
109 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["MissionTypeTag"]
110 [-]: GETUPVAL  R3 U12       ; R3 := U12
111 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 120
112 [-]: JMP       120          ; PC := 120
113 [-]: GETUPVAL  R2 U8        ; R2 := U8
114 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x1B252E3C"]
115 [-]: CALL      R2 2 2       ; R2 := R2(R3)
116 [-]: MOVE      R2 R8        ; R2 := R8
117 [-]: LOADNIL   R2 R2        ; R2 := nil
118 [-]: MOVE      R2 R7        ; R2 := R7
119 [-]: JMP       138          ; PC := 138
120 [-]: GETUPVAL  R2 U5        ; R2 := U5
121 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1]
122 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["MissionTypeTag"]
123 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
124 [-]: MOVE      R2 R9        ; R2 := R9
125 [-]: LOADNIL   R2 R2        ; R2 := nil
126 [-]: MOVE      R2 R7        ; R2 := R7
127 [-]: LOADNIL   R2 R2        ; R2 := nil
128 [-]: MOVE      R2 R8        ; R2 := R8
129 [-]: LOADNIL   R2 R2        ; R2 := nil
130 [-]: MOVE      R2 R13       ; R2 := R13
131 [-]: GETUPVAL  R2 U14       ; R2 := U14
132 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2["0x4B93F65B"]
133 [-]: GETGLOBAL R4 K18       ; R4 := 0xEC274B1A
134 [-]: GETUPVAL  R5 U5        ; R5 := U5
135 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
136 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
137 [-]: MOVE      R1 R2        ; R1 := R2
138 [-]: GETTABLE  R2 R1 K19    ; R2 := R1["soloMode"]
139 [-]: TEST      R2 0         ; if not R2 then PC := 208
140 [-]: JMP       208          ; PC := 208
141 [-]: GETGLOBAL R2 K20       ; R2 := gMatchingService
142 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2["0x35DDC67D"]
143 [-]: CALL      R2 2 2       ; R2 := R2(R3)
144 [-]: LT        0 K6 R2      ; if 1 >= R2 then PC := 193
145 [-]: JMP       193          ; PC := 193
146 [-]: GETUPVAL  R2 U15       ; R2 := U15
147 [-]: GETTABLE  R2 R2 K22    ; R2 := R2["0x8ECD61A2"]
148 [-]: GETGLOBAL R3 K18       ; R3 := 0xEC274B1A
149 [-]: GETUPVAL  R4 U9        ; R4 := U9
150 [-]: CALL      R3 2 2       ; R3 := R3(R4)
151 [-]: MOVE      R4 R1        ; R4 := R1
152 [-]: MOVE      R5 R1        ; R5 := R1
153 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
154 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 177
155 [-]: JMP       177          ; PC := 177
156 [-]: GETGLOBAL R3 K23       ; R3 := mMovie
157 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3["0x5DB0BD4"]
158 [-]: GETTABLE  R5 R2 K25    ; R5 := R2["text"]
159 [-]: MOVE      R6 R0        ; R6 := R0
160 [-]: NEWTABLE  R7 0 5       ; R7 := {}
161 [-]: GETTABLE  R8 R2 K27    ; R8 := R2["player"]
162 [-]: SETTABLE  R7 K26 R8    ; R7["PLAYER_NAME"] := R8
163 [-]: GETTABLE  R8 R2 K29    ; R8 := R2["value"]
164 [-]: SETTABLE  R7 K28 R8    ; R7["VALUE"] := R8
165 [-]: GETTABLE  R8 R2 K30    ; R8 := R2["MIN"]
166 [-]: SETTABLE  R7 K30 R8    ; R7["MIN"] := R8
167 [-]: GETTABLE  R8 R2 K31    ; R8 := R2["MAX"]
168 [-]: SETTABLE  R7 K31 R8    ; R7["MAX"] := R8
169 [-]: GETTABLE  R8 R2 K32    ; R8 := R2["ITEM"]
170 [-]: SETTABLE  R7 K32 R8    ; R7["ITEM"] := R8
171 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
172 [-]: GETUPVAL  R4 U16       ; R4 := U16
173 [-]: GETTABLE  R4 R4 K33    ; R4 := R4["0xB11F032"]
174 [-]: MOVE      R5 R3        ; R5 := R3
175 [-]: CALL      R4 2 1       ; R4(R5)
176 [-]: JMP       214          ; PC := 214
177 [-]: GETGLOBAL R4 K12       ; R4 := 0x400E7765
178 [-]: GETUPVAL  R5 U17       ; R5 := U17
179 [-]: CALL      R4 2 2       ; R4 := R4(R5)
180 [-]: TEST      R4 0         ; if not R4 then PC := 214
181 [-]: JMP       214          ; PC := 214
182 [-]: GETUPVAL  R4 U18       ; R4 := U18
183 [-]: GETUPVAL  R5 U11       ; R5 := U11
184 [-]: GETUPVAL  R6 U5        ; R6 := U5
185 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
186 [-]: SETTABLE  R4 K34 R5    ; R4["Node"] := R5
187 [-]: GETUPVAL  R4 U18       ; R4 := U18
188 [-]: GETUPVAL  R5 U9        ; R5 := U9
189 [-]: SETTABLE  R4 K35 R5    ; R4["SectorName"] := R5
190 [-]: MOVE      R4 R1        ; R4 := R1
191 [-]: MOVE      R4 R19       ; R4 := R19
192 [-]: JMP       214          ; PC := 214
193 [-]: GETUPVAL  R4 U20       ; R4 := U20
194 [-]: GETUPVAL  R5 U9        ; R5 := U9
195 [-]: GETUPVAL  R6 U7        ; R6 := U7
196 [-]: GETUPVAL  R7 U8        ; R7 := U8
197 [-]: GETUPVAL  R8 U13       ; R8 := U13
198 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
199 [-]: TEST      R4 0         ; if not R4 then PC := 214
200 [-]: JMP       214          ; PC := 214
201 [-]: GETGLOBAL R4 K0        ; R4 := _T
202 [-]: GETTABLE  R4 R4 K36    ; R4 := R4["SquadOverlay"]
203 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4["0x458F27A9"]
204 [-]: LOADK     R6 K38       ; R6 := "NotifyForceLoadSoloMission"
205 [-]: LOADK     R7 K39       ; R7 := ""
206 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
207 [-]: JMP       214          ; PC := 214
208 [-]: GETUPVAL  R4 U20       ; R4 := U20
209 [-]: GETUPVAL  R5 U9        ; R5 := U9
210 [-]: GETUPVAL  R6 U7        ; R6 := U7
211 [-]: GETUPVAL  R7 U8        ; R7 := U8
212 [-]: GETUPVAL  R8 U13       ; R8 := U13
213 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
214 [-]: RETURN    R0 1         ; return 


; Function #102.2:
;
; Name:            
; Defined at line: 3836
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  41

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 44
  7 [-]: JMP       44           ; PC := 44
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x7C282057
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["keyChain"]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 44
 16 [-]: JMP       44           ; PC := 44
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0xE6DC43B0
 18 [-]: GETGLOBAL R3 K4        ; R3 := 0x9FAED6BC
 19 [-]: SELF      R4 R1 K5     ; R5 := R1; R4 := R1["0x616C74B6"]
 20 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 21 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 22 [-]: MOVE      R4 R0        ; R4 := R0
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: LOADK     R3 K6        ; R3 := ": "
 25 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 26 [-]: GETGLOBAL R3 K7        ; R3 := table
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["0xE6450C9D"]
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 30 [-]: GETGLOBAL R6 K10       ; R6 := string
 31 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["0x639C642A"]
 32 [-]: MOVE      R7 R2        ; R7 := R2
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETGLOBAL R7 K10       ; R7 := string
 35 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
 36 [-]: GETUPVAL  R8 U1        ; R8 := U1
 37 [-]: CALL      R8 1 0       ; R8,... := R8()
 38 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 39 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 40 [-]: SETTABLE  R5 K9 R6     ; R5["mName"] := R6
 41 [-]: GETUPVAL  R6 U2        ; R6 := U2
 42 [-]: SETTABLE  R5 K12 R6    ; R5["MissionTypeTag"] := R6
 43 [-]: CALL      R3 3 1       ; R3(R4,R5)
 44 [-]: GETGLOBAL R3 K13       ; R3 := _T
 45 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 46 [-]: GETUPVAL  R4 U3        ; R4 := U3
 47 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 48 [-]: TEST      R3 0         ; if not R3 then PC := 123
 49 [-]: JMP       123          ; PC := 123
 50 [-]: GETGLOBAL R3 K13       ; R3 := _T
 51 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["CachedAlerts"]
 52 [-]: GETUPVAL  R4 U3        ; R4 := U3
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mVisible"]
 55 [-]: TEST      R3 0         ; if not R3 then PC := 123
 56 [-]: JMP       123          ; PC := 123
 57 [-]: LOADNIL   R3 R3        ; R3 := nil
 58 [-]: GETGLOBAL R4 K13       ; R4 := _T
 59 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 60 [-]: GETUPVAL  R5 U3        ; R5 := U3
 61 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 62 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 63 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mTag"]
 64 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 65 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 66 [-]: JMP       94           ; PC := 94
 67 [-]: GETGLOBAL R4 K13       ; R4 := _T
 68 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["CachedAlerts"]
 69 [-]: GETUPVAL  R5 U3        ; R5 := U3
 70 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 71 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mAlertInfo"]
 72 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["mMissionInfo"]
 73 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["descText"]
 74 [-]: GETGLOBAL R5 K18       ; R5 := EMPTY_SYMBOL
 75 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETGLOBAL R4 K10       ; R4 := string
 78 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["0x639C642A"]
 79 [-]: GETGLOBAL R5 K3        ; R5 := 0xE6DC43B0
 80 [-]: GETGLOBAL R6 K4        ; R6 := 0x9FAED6BC
 81 [-]: GETGLOBAL R7 K13       ; R7 := _T
 82 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
 83 [-]: GETUPVAL  R8 U3        ; R8 := U3
 84 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 85 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
 86 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
 87 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["descText"]
 88 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 89 [-]: MOVE      R7 R0        ; R7 := R0
 90 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 91 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: JMP       99           ; PC := 99
 94 [-]: GETGLOBAL R4 K3        ; R4 := 0xE6DC43B0
 95 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/Notification_Alert"
 96 [-]: MOVE      R6 R0        ; R6 := R0
 97 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 98 [-]: MOVE      R3 R4        ; R3 := R4
 99 [-]: MOVE      R4 R3        ; R4 := R3
100 [-]: LOADK     R5 K6        ; R5 := ": "
101 [-]: GETUPVAL  R6 U4        ; R6 := U4
102 [-]: GETGLOBAL R7 K13       ; R7 := _T
103 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["CachedAlerts"]
104 [-]: GETUPVAL  R8 U3        ; R8 := U3
105 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
106 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["mAlertInfo"]
107 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mMissionInfo"]
108 [-]: CALL      R6 2 2       ; R6 := R6(R7)
109 [-]: CONCAT    R3 R4 R6     ; R3 := R4 .. R5 .. R6
110 [-]: GETGLOBAL R4 K7        ; R4 := table
111 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["0xE6450C9D"]
112 [-]: MOVE      R5 R0        ; R5 := R0
113 [-]: NEWTABLE  R6 0 2       ; R6 := {}
114 [-]: GETGLOBAL R7 K10       ; R7 := string
115 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["0x639C642A"]
116 [-]: MOVE      R8 R3        ; R8 := R3
117 [-]: CALL      R7 2 2       ; R7 := R7(R8)
118 [-]: SETTABLE  R6 K9 R7     ; R6["mName"] := R7
119 [-]: GETUPVAL  R7 U5        ; R7 := U5
120 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["ALERT_TAG"]
121 [-]: SETTABLE  R6 K12 R7    ; R6["MissionTypeTag"] := R7
122 [-]: CALL      R4 3 1       ; R4(R5,R6)
123 [-]: GETGLOBAL R4 K23       ; R4 := _G
124 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
125 [-]: GETUPVAL  R5 U3        ; R5 := U3
126 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
127 [-]: TEST      R4 1         ; if R4 then PC := 139
128 [-]: JMP       139          ; PC := 139
129 [-]: GETGLOBAL R4 K23       ; R4 := _G
130 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
131 [-]: TEST      R4 0         ; if not R4 then PC := 236
132 [-]: JMP       236          ; PC := 236
133 [-]: GETGLOBAL R4 K23       ; R4 := _G
134 [-]: GETTABLE  R4 R4 K25    ; R4 := R4["MergedGoalNodes"]
135 [-]: GETUPVAL  R5 U3        ; R5 := U3
136 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
137 [-]: TEST      R4 0         ; if not R4 then PC := 236
138 [-]: JMP       236          ; PC := 236
139 [-]: GETGLOBAL R4 K23       ; R4 := _G
140 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["CachedGoalInfo"]
141 [-]: GETUPVAL  R5 U3        ; R5 := U3
142 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
143 [-]: LOADK     R5 K26       ; R5 := ""
144 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["mDesc"]
145 [-]: GETTABLE  R7 R4 K28    ; R7 := R4["mTypes"]
146 [-]: LEN       R7 R7        ; R7 := # R7
147 [-]: LT        1 K29 R7     ; if 0 < R7 then PC := 157
148 [-]: JMP       157          ; PC := 157
149 [-]: GETGLOBAL R7 K0        ; R7 := 0x400E7765
150 [-]: GETTABLE  R8 R4 K30    ; R8 := R4["mItemType"]
151 [-]: CALL      R7 2 2       ; R7 := R7(R8)
152 [-]: TEST      R7 0         ; if not R7 then PC := 157
153 [-]: JMP       157          ; PC := 157
154 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
155 [-]: TEST      R7 0         ; if not R7 then PC := 182
156 [-]: JMP       182          ; PC := 182
157 [-]: GETTABLE  R7 R4 K31    ; R7 := R4["mBounty"]
158 [-]: TEST      R7 1         ; if R7 then PC := 163
159 [-]: JMP       163          ; PC := 163
160 [-]: GETTABLE  R7 R4 K32    ; R7 := R4["mMaxConclave"]
161 [-]: LT        0 K29 R7     ; if 0 >= R7 then PC := 177
162 [-]: JMP       177          ; PC := 177
163 [-]: GETUPVAL  R7 U6        ; R7 := U6
164 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
165 [-]: GETGLOBAL R8 K10       ; R8 := string
166 [-]: GETTABLE  R8 R8 K34    ; R8 := R8["0xDE44F664"]
167 [-]: GETGLOBAL R9 K4        ; R9 := 0x9FAED6BC
168 [-]: GETTABLE  R10 R4 K35   ; R10 := R4["mNode"]
169 [-]: CALL      R9 2 2       ; R9 := R9(R10)
170 [-]: LOADK     R10 K36      ; R10 := "Pvp"
171 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
172 [-]: LOADK     R9 K37       ; R9 := "/Lotus/Language/Menu/Notification_Conclave"
173 [-]: LOADK     R10 K38      ; R10 := "/Lotus/Language/Menu/Notification_Bounty"
174 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
175 [-]: MOVE      R5 R7        ; R5 := R7
176 [-]: JMP       178          ; PC := 178
177 [-]: LOADK     R5 K39       ; R5 := "/Lotus/Language/Menu/Notification_EnemyBounty"
178 [-]: MOVE      R7 R5        ; R7 := R5
179 [-]: LOADK     R8 K6        ; R8 := ": "
180 [-]: CONCAT    R5 R7 R8     ; R5 := R7 .. R8
181 [-]: JMP       214          ; PC := 214
182 [-]: GETTABLE  R7 R4 K40    ; R7 := R4["mFomorian"]
183 [-]: TEST      R7 0         ; if not R7 then PC := 214
184 [-]: JMP       214          ; PC := 214
185 [-]: GETUPVAL  R7 U6        ; R7 := U6
186 [-]: GETTABLE  R7 R7 K33    ; R7 := R7["0xF81722A2"]
187 [-]: GETTABLE  R8 R4 K41    ; R8 := R4["Faction"]
188 [-]: GETGLOBAL R9 K42       ; R9 := Lotus_Game
189 [-]: GETTABLE  R9 R9 K43    ; R9 := R9["FC_GRINEER"]
190 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 193
191 [-]: JMP       193          ; PC := 193
192 [-]: MOVE      R8 R0        ; R8 := R0
193 [-]: MOVE      R8 R1        ; R8 := R1
194 [-]: LOADK     R9 K44       ; R9 := "/Lotus/Language/Menu/Notification_Fomorian"
195 [-]: LOADK     R10 K45      ; R10 := "/Lotus/Language/Menu/CorpusRazorbackProject"
196 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
197 [-]: GETGLOBAL R8 K3        ; R8 := 0xE6DC43B0
198 [-]: MOVE      R9 R7        ; R9 := R7
199 [-]: MOVE      R10 R0       ; R10 := R0
200 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
201 [-]: LOADK     R9 K6        ; R9 := ": "
202 [-]: CONCAT    R5 R8 R9     ; R5 := R8 .. R9
203 [-]: GETUPVAL  R8 U7        ; R8 := U7
204 [-]: SELF      R8 R8 K46    ; R9 := R8; R8 := R8["0xDF213CE1"]
205 [-]: GETTABLE  R10 R4 K47   ; R10 := R4["mVictimNode"]
206 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
207 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
208 [-]: GETGLOBAL R10 K4       ; R10 := 0x9FAED6BC
209 [-]: GETTABLE  R11 R8 K48   ; R11 := R8["locTag"]
210 [-]: CALL      R10 2 2      ; R10 := R10(R11)
211 [-]: MOVE      R11 R0       ; R11 := R0
212 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
213 [-]: MOVE      R6 R9        ; R6 := R9
214 [-]: GETGLOBAL R9 K3        ; R9 := 0xE6DC43B0
215 [-]: MOVE      R10 R5       ; R10 := R5
216 [-]: LOADNIL   R11 R11      ; R11 := nil
217 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
218 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
219 [-]: MOVE      R11 R6       ; R11 := R6
220 [-]: LOADNIL   R12 R12      ; R12 := nil
221 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
222 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
223 [-]: GETGLOBAL R10 K7       ; R10 := table
224 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["0xE6450C9D"]
225 [-]: MOVE      R11 R0       ; R11 := R0
226 [-]: NEWTABLE  R12 0 2      ; R12 := {}
227 [-]: GETGLOBAL R13 K10      ; R13 := string
228 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["0x639C642A"]
229 [-]: MOVE      R14 R9       ; R14 := R9
230 [-]: CALL      R13 2 2      ; R13 := R13(R14)
231 [-]: SETTABLE  R12 K9 R13   ; R12["mName"] := R13
232 [-]: GETUPVAL  R13 U5       ; R13 := U5
233 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["EVENT_TAG"]
234 [-]: SETTABLE  R12 K12 R13  ; R12["MissionTypeTag"] := R13
235 [-]: CALL      R10 3 1      ; R10(R11,R12)
236 [-]: GETGLOBAL R10 K13      ; R10 := _T
237 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
238 [-]: GETUPVAL  R11 U3       ; R11 := U3
239 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
240 [-]: TEST      R10 0        ; if not R10 then PC := 279
241 [-]: JMP       279          ; PC := 279
242 [-]: GETGLOBAL R10 K13      ; R10 := _T
243 [-]: GETTABLE  R10 R10 K50  ; R10 := R10["CachedSyndicateMissions"]
244 [-]: GETUPVAL  R11 U3       ; R11 := U3
245 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
246 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["mVisible"]
247 [-]: TEST      R10 0        ; if not R10 then PC := 279
248 [-]: JMP       279          ; PC := 279
249 [-]: GETGLOBAL R10 K3       ; R10 := 0xE6DC43B0
250 [-]: GETGLOBAL R11 K13      ; R11 := _T
251 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["CachedSyndicateMissions"]
252 [-]: GETUPVAL  R12 U3       ; R12 := U3
253 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
254 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["mSyndicateName"]
255 [-]: MOVE      R12 R0       ; R12 := R0
256 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
257 [-]: LOADK     R11 K6       ; R11 := ": "
258 [-]: GETUPVAL  R12 U4       ; R12 := U4
259 [-]: GETGLOBAL R13 K13      ; R13 := _T
260 [-]: GETTABLE  R13 R13 K50  ; R13 := R13["CachedSyndicateMissions"]
261 [-]: GETUPVAL  R14 U3       ; R14 := U3
262 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
263 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mMissionInfo"]
264 [-]: CALL      R12 2 2      ; R12 := R12(R13)
265 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
266 [-]: GETGLOBAL R11 K7       ; R11 := table
267 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["0xE6450C9D"]
268 [-]: MOVE      R12 R0       ; R12 := R0
269 [-]: NEWTABLE  R13 0 2      ; R13 := {}
270 [-]: GETGLOBAL R14 K10      ; R14 := string
271 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["0x639C642A"]
272 [-]: MOVE      R15 R10      ; R15 := R10
273 [-]: CALL      R14 2 2      ; R14 := R14(R15)
274 [-]: SETTABLE  R13 K9 R14   ; R13["mName"] := R14
275 [-]: GETUPVAL  R14 U5       ; R14 := U5
276 [-]: GETTABLE  R14 R14 K52  ; R14 := R14["SYNDICATE_MISSION_TAG"]
277 [-]: SETTABLE  R13 K12 R14  ; R13["MissionTypeTag"] := R14
278 [-]: CALL      R11 3 1      ; R11(R12,R13)
279 [-]: GETGLOBAL R11 K13      ; R11 := _T
280 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
281 [-]: GETUPVAL  R12 U3       ; R12 := U3
282 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
283 [-]: TEST      R11 0        ; if not R11 then PC := 319
284 [-]: JMP       319          ; PC := 319
285 [-]: GETGLOBAL R11 K13      ; R11 := _T
286 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
287 [-]: GETUPVAL  R12 U3       ; R12 := U3
288 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
289 [-]: GETTABLE  R11 R11 K54  ; R11 := R11["mShowInStarChart"]
290 [-]: TEST      R11 0        ; if not R11 then PC := 319
291 [-]: JMP       319          ; PC := 319
292 [-]: GETGLOBAL R11 K13      ; R11 := _T
293 [-]: GETTABLE  R11 R11 K53  ; R11 := R11["CachedSortieMissions"]
294 [-]: GETUPVAL  R12 U3       ; R12 := U3
295 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
296 [-]: GETTABLE  R11 R11 K19  ; R11 := R11["mMissionInfo"]
297 [-]: GETGLOBAL R12 K3       ; R12 := 0xE6DC43B0
298 [-]: LOADK     R13 K55      ; R13 := "/Lotus/Language/Menu/SortieMissionName"
299 [-]: LOADNIL   R14 R14      ; R14 := nil
300 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
301 [-]: LOADK     R13 K6       ; R13 := ": "
302 [-]: GETUPVAL  R14 U4       ; R14 := U4
303 [-]: MOVE      R15 R11      ; R15 := R11
304 [-]: CALL      R14 2 2      ; R14 := R14(R15)
305 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
306 [-]: GETGLOBAL R13 K7       ; R13 := table
307 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["0xE6450C9D"]
308 [-]: MOVE      R14 R0       ; R14 := R0
309 [-]: NEWTABLE  R15 0 2      ; R15 := {}
310 [-]: GETGLOBAL R16 K10      ; R16 := string
311 [-]: GETTABLE  R16 R16 K11  ; R16 := R16["0x639C642A"]
312 [-]: MOVE      R17 R12      ; R17 := R12
313 [-]: CALL      R16 2 2      ; R16 := R16(R17)
314 [-]: SETTABLE  R15 K9 R16   ; R15["mName"] := R16
315 [-]: GETUPVAL  R16 U5       ; R16 := U5
316 [-]: GETTABLE  R16 R16 K56  ; R16 := R16["SORTIE_MISSION_TAG"]
317 [-]: SETTABLE  R15 K12 R16  ; R15["MissionTypeTag"] := R16
318 [-]: CALL      R13 3 1      ; R13(R14,R15)
319 [-]: GETGLOBAL R13 K13      ; R13 := _T
320 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["CachedInvasionInfo"]
321 [-]: GETUPVAL  R14 U3       ; R14 := U3
322 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
323 [-]: TEST      R13 0        ; if not R13 then PC := 353
324 [-]: JMP       353          ; PC := 353
325 [-]: NEWTABLE  R13 3 0      ; R13 := {}
326 [-]: LOADK     R14 K58      ; R14 := "/Lotus/Language/Menu/GrineerInvasionGeneric"
327 [-]: LOADK     R15 K59      ; R15 := "/Lotus/Language/Menu/CorpusInvasionGeneric"
328 [-]: LOADK     R16 K60      ; R16 := "/Lotus/Language/Menu/InfestedInvasionGeneric"
329 [-]: SETLIST   R13 3 1      ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
330 [-]: GETGLOBAL R14 K3       ; R14 := 0xE6DC43B0
331 [-]: GETGLOBAL R15 K13      ; R15 := _T
332 [-]: GETTABLE  R15 R15 K57  ; R15 := R15["CachedInvasionInfo"]
333 [-]: GETUPVAL  R16 U3       ; R16 := U3
334 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
335 [-]: GETTABLE  R15 R15 K61  ; R15 := R15["mFaction"]
336 [-]: ADD       R15 R15 K62  ; R15 := R15 + 1
337 [-]: GETTABLE  R15 R13 R15  ; R15 := R13[R15]
338 [-]: LOADNIL   R16 R16      ; R16 := nil
339 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
340 [-]: GETGLOBAL R15 K7       ; R15 := table
341 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["0xE6450C9D"]
342 [-]: MOVE      R16 R0       ; R16 := R0
343 [-]: NEWTABLE  R17 0 2      ; R17 := {}
344 [-]: GETGLOBAL R18 K10      ; R18 := string
345 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["0x639C642A"]
346 [-]: MOVE      R19 R14      ; R19 := R14
347 [-]: CALL      R18 2 2      ; R18 := R18(R19)
348 [-]: SETTABLE  R17 K9 R18   ; R17["mName"] := R18
349 [-]: GETUPVAL  R18 U5       ; R18 := U5
350 [-]: GETTABLE  R18 R18 K63  ; R18 := R18["INVASION_ATTACKER_TAG"]
351 [-]: SETTABLE  R17 K12 R18  ; R17["MissionTypeTag"] := R18
352 [-]: CALL      R15 3 1      ; R15(R16,R17)
353 [-]: GETGLOBAL R15 K13      ; R15 := _T
354 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
355 [-]: TEST      R15 0        ; if not R15 then PC := 432
356 [-]: JMP       432          ; PC := 432
357 [-]: GETGLOBAL R15 K13      ; R15 := _T
358 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
359 [-]: GETUPVAL  R16 U3       ; R16 := U3
360 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
361 [-]: TEST      R15 0        ; if not R15 then PC := 432
362 [-]: JMP       432          ; PC := 432
363 [-]: GETGLOBAL R15 K13      ; R15 := _T
364 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
365 [-]: GETUPVAL  R16 U3       ; R16 := U3
366 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
367 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["mVisible"]
368 [-]: TEST      R15 0        ; if not R15 then PC := 432
369 [-]: JMP       432          ; PC := 432
370 [-]: GETGLOBAL R15 K13      ; R15 := _T
371 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["CachedActiveMissions"]
372 [-]: GETUPVAL  R16 U3       ; R16 := U3
373 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
374 [-]: GETTABLE  R15 R15 K19  ; R15 := R15["mMissionInfo"]
375 [-]: LOADK     R16 K65      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc1"
376 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
377 [-]: GETUPVAL  R18 U8       ; R18 := U8
378 [-]: GETTABLE  R18 R18 K67  ; R18 := R18["VOIDT2"]
379 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 383
380 [-]: JMP       383          ; PC := 383
381 [-]: LOADK     R16 K68      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc2"
382 [-]: JMP       403          ; PC := 403
383 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
384 [-]: GETUPVAL  R18 U8       ; R18 := U8
385 [-]: GETTABLE  R18 R18 K69  ; R18 := R18["VOIDT3"]
386 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 390
387 [-]: JMP       390          ; PC := 390
388 [-]: LOADK     R16 K70      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc3"
389 [-]: JMP       403          ; PC := 403
390 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
391 [-]: GETUPVAL  R18 U8       ; R18 := U8
392 [-]: GETTABLE  R18 R18 K71  ; R18 := R18["VOIDT4"]
393 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 397
394 [-]: JMP       397          ; PC := 397
395 [-]: LOADK     R16 K72      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc4"
396 [-]: JMP       403          ; PC := 403
397 [-]: GETTABLE  R17 R15 K66  ; R17 := R15["activeMissionTag"]
398 [-]: GETUPVAL  R18 U8       ; R18 := U8
399 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["VOIDT5"]
400 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 403
401 [-]: JMP       403          ; PC := 403
402 [-]: LOADK     R16 K74      ; R16 := "/Lotus/Language/Menu/ProjectionManager_ShortTierDesc5"
403 [-]: GETGLOBAL R17 K75      ; R17 := mMovie
404 [-]: SELF      R17 R17 K76  ; R18 := R17; R17 := R17["0x5DB0BD4"]
405 [-]: MOVE      R19 R16      ; R19 := R16
406 [-]: MOVE      R20 R0       ; R20 := R0
407 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
408 [-]: MOVE      R16 R17      ; R16 := R17
409 [-]: GETGLOBAL R17 K3       ; R17 := 0xE6DC43B0
410 [-]: LOADK     R18 K77      ; R18 := "/Lotus/Language/Menu/VoidTearMissionName"
411 [-]: NEWTABLE  R19 0 1      ; R19 := {}
412 [-]: SETTABLE  R19 K78 R16  ; R19["TIER"] := R16
413 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
414 [-]: LOADK     R18 K6       ; R18 := ": "
415 [-]: GETUPVAL  R19 U4       ; R19 := U4
416 [-]: MOVE      R20 R15      ; R20 := R15
417 [-]: CALL      R19 2 2      ; R19 := R19(R20)
418 [-]: CONCAT    R17 R17 R19  ; R17 := R17 .. R18 .. R19
419 [-]: GETGLOBAL R18 K7       ; R18 := table
420 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["0xE6450C9D"]
421 [-]: MOVE      R19 R0       ; R19 := R0
422 [-]: NEWTABLE  R20 0 2      ; R20 := {}
423 [-]: GETGLOBAL R21 K10      ; R21 := string
424 [-]: GETTABLE  R21 R21 K11  ; R21 := R21["0x639C642A"]
425 [-]: MOVE      R22 R17      ; R22 := R17
426 [-]: CALL      R21 2 2      ; R21 := R21(R22)
427 [-]: SETTABLE  R20 K9 R21   ; R20["mName"] := R21
428 [-]: GETUPVAL  R21 U5       ; R21 := U5
429 [-]: GETTABLE  R21 R21 K79  ; R21 := R21["ACTIVE_MISSION_TAG"]
430 [-]: SETTABLE  R20 K12 R21  ; R20["MissionTypeTag"] := R21
431 [-]: CALL      R18 3 1      ; R18(R19,R20)
432 [-]: GETUPVAL  R18 U7       ; R18 := U7
433 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0x4B93F65B"]
434 [-]: GETGLOBAL R20 K81      ; R20 := 0xEC274B1A
435 [-]: GETUPVAL  R21 U3       ; R21 := U3
436 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
437 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
438 [-]: GETGLOBAL R19 K75      ; R19 := mMovie
439 [-]: SELF      R19 R19 K76  ; R20 := R19; R19 := R19["0x5DB0BD4"]
440 [-]: GETUPVAL  R21 U5       ; R21 := U5
441 [-]: GETTABLE  R21 R21 K82  ; R21 := R21["FactionNames"]
442 [-]: GETTABLE  R22 R18 K83  ; R22 := R18["faction"]
443 [-]: ADD       R22 R22 K62  ; R22 := R22 + 1
444 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
445 [-]: MOVE      R22 R0       ; R22 := R0
446 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
447 [-]: GETTABLE  R20 R18 K84  ; R20 := R18["forceAllyFaction"]
448 [-]: TEST      R20 0        ; if not R20 then PC := 462
449 [-]: JMP       462          ; PC := 462
450 [-]: GETGLOBAL R20 K75      ; R20 := mMovie
451 [-]: SELF      R20 R20 K76  ; R21 := R20; R20 := R20["0x5DB0BD4"]
452 [-]: LOADK     R22 K85      ; R22 := "/Lotus/Language/Game/Faction_GrineerUC"
453 [-]: MOVE      R23 R0       ; R23 := R0
454 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
455 [-]: LOADK     R21 K86      ; R21 := " / "
456 [-]: GETGLOBAL R22 K75      ; R22 := mMovie
457 [-]: SELF      R22 R22 K76  ; R23 := R22; R22 := R22["0x5DB0BD4"]
458 [-]: LOADK     R24 K87      ; R24 := "/Lotus/Language/Game/Faction_CorpusUC"
459 [-]: MOVE      R25 R0       ; R25 := R0
460 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
461 [-]: CONCAT    R19 R20 R22  ; R19 := R20 .. R21 .. R22
462 [-]: GETGLOBAL R20 K10      ; R20 := string
463 [-]: GETTABLE  R20 R20 K11  ; R20 := R20["0x639C642A"]
464 [-]: GETGLOBAL R21 K75      ; R21 := mMovie
465 [-]: SELF      R21 R21 K76  ; R22 := R21; R21 := R21["0x5DB0BD4"]
466 [-]: LOADK     R23 K88      ; R23 := "/Lotus/Language/Game/MissionName_"
467 [-]: GETUPVAL  R24 U5       ; R24 := U5
468 [-]: GETTABLE  R24 R24 K89  ; R24 := R24["0x87B2D555"]
469 [-]: MOVE      R25 R18      ; R25 := R18
470 [-]: CALL      R24 2 2      ; R24 := R24(R25)
471 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
472 [-]: MOVE      R24 R0       ; R24 := R0
473 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
474 [-]: LOADK     R22 K90      ; R22 := " - "
475 [-]: MOVE      R23 R19      ; R23 := R19
476 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
477 [-]: CALL      R20 2 2      ; R20 := R20(R21)
478 [-]: GETGLOBAL R21 K13      ; R21 := _T
479 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
480 [-]: TEST      R21 0        ; if not R21 then PC := 539
481 [-]: JMP       539          ; PC := 539
482 [-]: GETGLOBAL R21 K13      ; R21 := _T
483 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
484 [-]: GETUPVAL  R22 U3       ; R22 := U3
485 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
486 [-]: EQ        1 R21 K92    ; if R21 == nil then PC := 539
487 [-]: JMP       539          ; PC := 539
488 [-]: GETGLOBAL R21 K13      ; R21 := _T
489 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
490 [-]: GETUPVAL  R22 U3       ; R22 := U3
491 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
492 [-]: GETTABLE  R21 R21 K93  ; R21 := R21["mUnlocked"]
493 [-]: TEST      R21 0        ; if not R21 then PC := 539
494 [-]: JMP       539          ; PC := 539
495 [-]: GETGLOBAL R21 K13      ; R21 := _T
496 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
497 [-]: GETUPVAL  R22 U3       ; R22 := U3
498 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
499 [-]: GETTABLE  R21 R21 K54  ; R21 := R21["mShowInStarChart"]
500 [-]: TEST      R21 0        ; if not R21 then PC := 539
501 [-]: JMP       539          ; PC := 539
502 [-]: GETGLOBAL R21 K13      ; R21 := _T
503 [-]: GETTABLE  R21 R21 K91  ; R21 := R21["CachedGhostTowerMissions"]
504 [-]: GETUPVAL  R22 U3       ; R22 := U3
505 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
506 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["mMissionInfo"]
507 [-]: GETUPVAL  R22 U6       ; R22 := U6
508 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["0xF81722A2"]
509 [-]: GETTABLE  R23 R21 K94  ; R23 := R21["minEnemyLevel"]
510 [-]: LE        1 K95 R23    ; if 80 <= R23 then PC := 513
511 [-]: JMP       513          ; PC := 513
512 [-]: MOVE      R23 R0       ; R23 := R0
513 [-]: MOVE      R23 R1       ; R23 := R1
514 [-]: LOADK     R24 K96      ; R24 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
515 [-]: LOADK     R25 K97      ; R25 := "/Lotus/Language/Menu/GhostTowerMissionName"
516 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
517 [-]: GETGLOBAL R23 K3       ; R23 := 0xE6DC43B0
518 [-]: MOVE      R24 R22      ; R24 := R22
519 [-]: MOVE      R25 R0       ; R25 := R0
520 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
521 [-]: LOADK     R24 K6       ; R24 := ": "
522 [-]: GETUPVAL  R25 U4       ; R25 := U4
523 [-]: MOVE      R26 R21      ; R26 := R21
524 [-]: CALL      R25 2 2      ; R25 := R25(R26)
525 [-]: CONCAT    R23 R23 R25  ; R23 := R23 .. R24 .. R25
526 [-]: GETGLOBAL R24 K7       ; R24 := table
527 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["0xE6450C9D"]
528 [-]: MOVE      R25 R0       ; R25 := R0
529 [-]: NEWTABLE  R26 0 2      ; R26 := {}
530 [-]: GETGLOBAL R27 K10      ; R27 := string
531 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
532 [-]: MOVE      R28 R23      ; R28 := R23
533 [-]: CALL      R27 2 2      ; R27 := R27(R28)
534 [-]: SETTABLE  R26 K9 R27   ; R26["mName"] := R27
535 [-]: GETUPVAL  R27 U5       ; R27 := U5
536 [-]: GETTABLE  R27 R27 K98  ; R27 := R27["KUVA_TOWER_MISSION_TAG"]
537 [-]: SETTABLE  R26 K12 R27  ; R26["MissionTypeTag"] := R27
538 [-]: CALL      R24 3 1      ; R24(R25,R26)
539 [-]: GETGLOBAL R24 K13      ; R24 := _T
540 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
541 [-]: TEST      R24 0        ; if not R24 then PC := 618
542 [-]: JMP       618          ; PC := 618
543 [-]: GETGLOBAL R24 K13      ; R24 := _T
544 [-]: GETTABLE  R24 R24 K99  ; R24 := R24["CachedSkullNodes"]
545 [-]: GETUPVAL  R25 U3       ; R25 := U3
546 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
547 [-]: EQ        1 R24 K92    ; if R24 == nil then PC := 618
548 [-]: JMP       618          ; PC := 618
549 [-]: GETGLOBAL R24 K3       ; R24 := 0xE6DC43B0
550 [-]: LOADK     R25 K100     ; R25 := "/Lotus/Language/Menu/NightmareModeName"
551 [-]: LOADNIL   R26 R26      ; R26 := nil
552 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
553 [-]: LOADK     R25 K6       ; R25 := ": "
554 [-]: CONCAT    R24 R24 R25  ; R24 := R24 .. R25
555 [-]: MOVE      R25 R24      ; R25 := R24
556 [-]: MOVE      R26 R20      ; R26 := R20
557 [-]: CONCAT    R24 R25 R26  ; R24 := R25 .. R26
558 [-]: MOVE      R25 R24      ; R25 := R24
559 [-]: LOADK     R26 K101     ; R26 := " ("
560 [-]: GETGLOBAL R27 K10      ; R27 := string
561 [-]: GETTABLE  R27 R27 K11  ; R27 := R27["0x639C642A"]
562 [-]: GETGLOBAL R28 K75      ; R28 := mMovie
563 [-]: SELF      R28 R28 K76  ; R29 := R28; R28 := R28["0x5DB0BD4"]
564 [-]: GETGLOBAL R30 K13      ; R30 := _T
565 [-]: GETTABLE  R30 R30 K99  ; R30 := R30["CachedSkullNodes"]
566 [-]: GETUPVAL  R31 U3       ; R31 := U3
567 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
568 [-]: GETTABLE  R30 R30 K62  ; R30 := R30[1]
569 [-]: GETTABLE  R30 R30 K102 ; R30 := R30[2]
570 [-]: MOVE      R31 R0       ; R31 := R0
571 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
572 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
573 [-]: CONCAT    R24 R25 R27  ; R24 := R25 .. R26 .. R27
574 [-]: GETGLOBAL R25 K13      ; R25 := _T
575 [-]: GETTABLE  R25 R25 K99  ; R25 := R25["CachedSkullNodes"]
576 [-]: GETUPVAL  R26 U3       ; R26 := U3
577 [-]: GETTABLE  R25 R25 R26  ; R25 := R25[R26]
578 [-]: LEN       R25 R25      ; R25 := # R25
579 [-]: LT        0 K62 R25    ; if 1 >= R25 then PC := 606
580 [-]: JMP       606          ; PC := 606
581 [-]: LOADK     R25 K102     ; R25 := 2
582 [-]: GETGLOBAL R26 K13      ; R26 := _T
583 [-]: GETTABLE  R26 R26 K99  ; R26 := R26["CachedSkullNodes"]
584 [-]: GETUPVAL  R27 U3       ; R27 := U3
585 [-]: GETTABLE  R26 R26 R27  ; R26 := R26[R27]
586 [-]: LEN       R26 R26      ; R26 := # R26
587 [-]: LOADK     R27 K62      ; R27 := 1
588 [-]: FORPREP   R25 605      ; R25 -= R27; PC := 605
589 [-]: MOVE      R29 R24      ; R29 := R24
590 [-]: LOADK     R30 K103     ; R30 := ", "
591 [-]: GETGLOBAL R31 K10      ; R31 := string
592 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
593 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
594 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
595 [-]: GETGLOBAL R34 K13      ; R34 := _T
596 [-]: GETTABLE  R34 R34 K99  ; R34 := R34["CachedSkullNodes"]
597 [-]: GETUPVAL  R35 U3       ; R35 := U3
598 [-]: GETTABLE  R34 R34 R35  ; R34 := R34[R35]
599 [-]: GETTABLE  R34 R34 R28  ; R34 := R34[R28]
600 [-]: GETTABLE  R34 R34 K102 ; R34 := R34[2]
601 [-]: MOVE      R35 R0       ; R35 := R0
602 [-]: CALL      R32 4 0      ; R32,... := R32(R33,R34,R35)
603 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
604 [-]: CONCAT    R24 R29 R31  ; R24 := R29 .. R30 .. R31
605 [-]: FORLOOP   R25 589      ; R25 += R27; if R25 <= R26 then begin PC := 589; R28 := R25 end
606 [-]: MOVE      R29 R24      ; R29 := R24
607 [-]: LOADK     R30 K104     ; R30 := ")"
608 [-]: CONCAT    R24 R29 R30  ; R24 := R29 .. R30
609 [-]: GETGLOBAL R29 K7       ; R29 := table
610 [-]: GETTABLE  R29 R29 K8   ; R29 := R29["0xE6450C9D"]
611 [-]: MOVE      R30 R0       ; R30 := R0
612 [-]: NEWTABLE  R31 0 2      ; R31 := {}
613 [-]: SETTABLE  R31 K9 R24   ; R31["mName"] := R24
614 [-]: GETUPVAL  R32 U5       ; R32 := U5
615 [-]: GETTABLE  R32 R32 K105 ; R32 := R32["NIGHTMARE_TAG"]
616 [-]: SETTABLE  R31 K12 R32  ; R31["MissionTypeTag"] := R32
617 [-]: CALL      R29 3 1      ; R29(R30,R31)
618 [-]: GETGLOBAL R29 K13      ; R29 := _T
619 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
620 [-]: TEST      R29 0        ; if not R29 then PC := 669
621 [-]: JMP       669          ; PC := 669
622 [-]: GETGLOBAL R29 K13      ; R29 := _T
623 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
624 [-]: GETUPVAL  R30 U3       ; R30 := U3
625 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
626 [-]: TEST      R29 0        ; if not R29 then PC := 669
627 [-]: JMP       669          ; PC := 669
628 [-]: GETGLOBAL R29 K13      ; R29 := _T
629 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["CachedNemesisMissions"]
630 [-]: GETUPVAL  R30 U3       ; R30 := U3
631 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
632 [-]: GETGLOBAL R30 K3       ; R30 := 0xE6DC43B0
633 [-]: LOADK     R31 K85      ; R31 := "/Lotus/Language/Game/Faction_GrineerUC"
634 [-]: MOVE      R32 R0       ; R32 := R0
635 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
636 [-]: GETGLOBAL R31 K10      ; R31 := string
637 [-]: GETTABLE  R31 R31 K11  ; R31 := R31["0x639C642A"]
638 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
639 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
640 [-]: LOADK     R34 K88      ; R34 := "/Lotus/Language/Game/MissionName_"
641 [-]: GETUPVAL  R35 U5       ; R35 := U5
642 [-]: GETTABLE  R35 R35 K89  ; R35 := R35["0x87B2D555"]
643 [-]: GETTABLE  R36 R29 K19  ; R36 := R29["mMissionInfo"]
644 [-]: CALL      R35 2 2      ; R35 := R35(R36)
645 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
646 [-]: MOVE      R35 R0       ; R35 := R0
647 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
648 [-]: LOADK     R33 K90      ; R33 := " - "
649 [-]: MOVE      R34 R30      ; R34 := R30
650 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
651 [-]: CALL      R31 2 2      ; R31 := R31(R32)
652 [-]: GETGLOBAL R32 K75      ; R32 := mMovie
653 [-]: SELF      R32 R32 K76  ; R33 := R32; R32 := R32["0x5DB0BD4"]
654 [-]: GETTABLE  R34 R29 K107 ; R34 := R29["missionName"]
655 [-]: MOVE      R35 R0       ; R35 := R0
656 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
657 [-]: LOADK     R33 K6       ; R33 := ": "
658 [-]: MOVE      R34 R31      ; R34 := R31
659 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
660 [-]: GETGLOBAL R33 K7       ; R33 := table
661 [-]: GETTABLE  R33 R33 K8   ; R33 := R33["0xE6450C9D"]
662 [-]: MOVE      R34 R0       ; R34 := R0
663 [-]: NEWTABLE  R35 0 2      ; R35 := {}
664 [-]: SETTABLE  R35 K9 R32   ; R35["mName"] := R32
665 [-]: GETUPVAL  R36 U5       ; R36 := U5
666 [-]: GETTABLE  R36 R36 K108 ; R36 := R36["NEMESIS_MISSION_TAG"]
667 [-]: SETTABLE  R35 K12 R36  ; R35["MissionTypeTag"] := R36
668 [-]: CALL      R33 3 1      ; R33(R34,R35)
669 [-]: GETGLOBAL R33 K13      ; R33 := _T
670 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
671 [-]: TEST      R33 0        ; if not R33 then PC := 695
672 [-]: JMP       695          ; PC := 695
673 [-]: GETGLOBAL R33 K13      ; R33 := _T
674 [-]: GETTABLE  R33 R33 K109 ; R33 := R33["CachedEliteAlertMissions"]
675 [-]: GETUPVAL  R34 U3       ; R34 := U3
676 [-]: GETTABLE  R33 R33 R34  ; R33 := R33[R34]
677 [-]: EQ        1 R33 K92    ; if R33 == nil then PC := 695
678 [-]: JMP       695          ; PC := 695
679 [-]: GETGLOBAL R33 K3       ; R33 := 0xE6DC43B0
680 [-]: LOADK     R34 K110     ; R34 := "/Lotus/Language/Menu/AlertHardMode"
681 [-]: LOADNIL   R35 R35      ; R35 := nil
682 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
683 [-]: LOADK     R34 K6       ; R34 := ": "
684 [-]: MOVE      R35 R20      ; R35 := R20
685 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
686 [-]: GETGLOBAL R34 K7       ; R34 := table
687 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
688 [-]: MOVE      R35 R0       ; R35 := R0
689 [-]: NEWTABLE  R36 0 2      ; R36 := {}
690 [-]: SETTABLE  R36 K9 R33   ; R36["mName"] := R33
691 [-]: GETUPVAL  R37 U5       ; R37 := U5
692 [-]: GETTABLE  R37 R37 K111 ; R37 := R37["ELITE_ALERT_TAG"]
693 [-]: SETTABLE  R36 K12 R37  ; R36["MissionTypeTag"] := R37
694 [-]: CALL      R34 3 1      ; R34(R35,R36)
695 [-]: GETGLOBAL R34 K0       ; R34 := 0x400E7765
696 [-]: GETTABLE  R35 R18 K112 ; R35 := R18["levelOverride"]
697 [-]: CALL      R34 2 2      ; R34 := R34(R35)
698 [-]: TEST      R34 1        ; if R34 then PC := 717
699 [-]: JMP       717          ; PC := 717
700 [-]: GETGLOBAL R34 K7       ; R34 := table
701 [-]: GETTABLE  R34 R34 K8   ; R34 := R34["0xE6450C9D"]
702 [-]: MOVE      R35 R0       ; R35 := R0
703 [-]: NEWTABLE  R36 0 2      ; R36 := {}
704 [-]: GETGLOBAL R37 K10      ; R37 := string
705 [-]: GETTABLE  R37 R37 K11  ; R37 := R37["0x639C642A"]
706 [-]: GETGLOBAL R38 K3       ; R38 := 0xE6DC43B0
707 [-]: LOADK     R39 K113     ; R39 := "/Lotus/Language/Menu/ConfirmNightmareNo"
708 [-]: MOVE      R40 R0       ; R40 := R0
709 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
710 [-]: LOADK     R39 K6       ; R39 := ": "
711 [-]: MOVE      R40 R20      ; R40 := R20
712 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
713 [-]: CALL      R37 2 2      ; R37 := R37(R38)
714 [-]: SETTABLE  R36 K9 R37   ; R36["mName"] := R37
715 [-]: SETTABLE  R36 K12 K26  ; R36["MissionTypeTag"] := ""
716 [-]: CALL      R34 3 1      ; R34(R35,R36)
717 [-]: RETURN    R0 2         ; return R0
718 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 3971
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameData
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xB451D706"]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["SF_CLAN"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 1         ; if R0 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["0xB11F032"]
 10 [-]: LOADK     R1 K4        ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R0 K5        ; R0 := 0x400E7765
 14 [-]: GETGLOBAL R1 K6        ; R1 := _T
 15 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["SquadOverlay"]
 16 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 17 [-]: TEST      R0 1         ; if R0 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R0 K6        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["SquadOverlay"]
 21 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x458F27A9"]
 22 [-]: LOADK     R2 K9        ; R2 := "InitiateDojoVisit"
 23 [-]: LOADK     R3 K10       ; R3 := ""
 24 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 25 [-]: NEWTABLE  R0 0 3       ; R0 := {}
 26 [-]: SETTABLE  R0 K11 K12   ; R0["name"] := "DojoHUB_HUB"
 27 [-]: SETTABLE  R0 K13 K10   ; R0["quest"] := ""
 28 [-]: SETTABLE  R0 K14 K10   ; R0["difficulty"] := ""
 29 [-]: GETGLOBAL R1 K15       ; R1 := gMatchingService
 30 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1["0x3016115E"]
 31 [-]: GETGLOBAL R3 K17       ; R3 := cjson
 32 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["0x8DC1075B"]
 33 [-]: MOVE      R4 R0        ; R4 := R0
 34 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 35 [-]: CALL      R1 0 1       ; R1(R2,...)
 36 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 3992
; #Upvalues:       17
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["locked"]
  8 [-]: TEST      R0 1         ; if R0 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["locationEnabled"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 18 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["radialSector"]
 23 [-]: EQ        1 R0 K5      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K3        ; R0 := _T
 26 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["gPendingMission"]
 27 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["baseNodeName"]
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 30 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["radialSector"]
 31 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["name"]
 32 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K9        ; R1 := 0x400E7765
 37 [-]: GETGLOBAL R2 K3        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["SquadOverlay"]
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 51
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TEST      R0 0         ; if not R0 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R1 K3        ; R1 := _T
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["SquadOverlay"]
 46 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x458F27A9"]
 47 [-]: LOADK     R3 K12       ; R3 := "Accept"
 48 [-]: LOADK     R4 K13       ; R4 := ""
 49 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R1 K14       ; R1 := 0x9FAED6BC
 52 [-]: GETUPVAL  R2 U0        ; R2 := U0
 53 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 54 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 55 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["name"]
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: GETUPVAL  R2 U0        ; R2 := U0
 58 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 59 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["radialSector"]
 60 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["keyChain"]
 61 [-]: LOADNIL   R3 R3        ; R3 := nil
 62 [-]: GETUPVAL  R4 U0        ; R4 := U0
 63 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["Node"]
 64 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["radialSector"]
 65 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mission"]
 66 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["difficulty"]
 67 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
 68 [-]: GETUPVAL  R6 U0        ; R6 := U0
 69 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 70 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 71 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 72 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["levelKeyName"]
 73 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 74 [-]: TEST      R5 1         ; if R5 then PC := 100
 75 [-]: JMP       100          ; PC := 100
 76 [-]: GETGLOBAL R5 K19       ; R5 := string
 77 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["0xDE44F664"]
 78 [-]: MOVE      R6 R1        ; R6 := R1
 79 [-]: GETUPVAL  R7 U1        ; R7 := U1
 80 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["KEY_TAG"]
 81 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 82 [-]: TEST      R5 1         ; if R5 then PC := 100
 83 [-]: JMP       100          ; PC := 100
 84 [-]: GETGLOBAL R5 K3        ; R5 := _T
 85 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["DesiredGoToNodeTag"]
 86 [-]: TEST      R5 1         ; if R5 then PC := 100
 87 [-]: JMP       100          ; PC := 100
 88 [-]: GETGLOBAL R5 K14       ; R5 := 0x9FAED6BC
 89 [-]: GETUPVAL  R6 U0        ; R6 := U0
 90 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Node"]
 91 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["radialSector"]
 92 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mission"]
 93 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["levelKeyName"]
 94 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6["0x1B252E3C"]
 95 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 96 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 97 [-]: GETUPVAL  R6 U1        ; R6 := U1
 98 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["KEY_TAG"]
 99 [-]: CONCAT    R1 R5 R6     ; R1 := R5 .. R6
100 [-]: GETGLOBAL R5 K9        ; R5 := 0x400E7765
101 [-]: MOVE      R6 R2        ; R6 := R2
102 [-]: CALL      R5 2 2       ; R5 := R5(R6)
103 [-]: TEST      R5 1         ; if R5 then PC := 129
104 [-]: JMP       129          ; PC := 129
105 [-]: LOADNIL   R5 R5        ; R5 := nil
106 [-]: GETGLOBAL R6 K19       ; R6 := string
107 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["0xDE44F664"]
108 [-]: MOVE      R7 R1        ; R7 := R1
109 [-]: GETUPVAL  R8 U1        ; R8 := U1
110 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["KEY_TAG"]
111 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
112 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 124
113 [-]: JMP       124          ; PC := 124
114 [-]: GETGLOBAL R7 K19       ; R7 := string
115 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["0x7B782033"]
116 [-]: MOVE      R8 R1        ; R8 := R1
117 [-]: LOADK     R9 K25       ; R9 := 1
118 [-]: SUB       R10 R6 K25   ; R10 := R6 - 1
119 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
120 [-]: GETGLOBAL R8 K26       ; R8 := 0x7C282057
121 [-]: MOVE      R9 R7        ; R9 := R7
122 [-]: CALL      R8 2 2       ; R8 := R8(R9)
123 [-]: MOVE      R5 R8        ; R5 := R8
124 [-]: GETGLOBAL R8 K27       ; R8 := gGameRules
125 [-]: SELF      R8 R8 K28    ; R9 := R8; R8 := R8["0x8DD31239"]
126 [-]: MOVE      R10 R2       ; R10 := R2
127 [-]: MOVE      R11 R5       ; R11 := R5
128 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
129 [-]: GETGLOBAL R8 K19       ; R8 := string
130 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["0xDE44F664"]
131 [-]: MOVE      R9 R1        ; R9 := R1
132 [-]: LOADK     R10 K29      ; R10 := "FeaturedDojo"
133 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
134 [-]: TEST      R8 0         ; if not R8 then PC := 192
135 [-]: JMP       192          ; PC := 192
136 [-]: GETUPVAL  R8 U2        ; R8 := U2
137 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["0x36BA5F48"]
138 [-]: CALL      R8 1 2       ; R8 := R8()
139 [-]: TEST      R8 1         ; if R8 then PC := 183
140 [-]: JMP       183          ; PC := 183
141 [-]: GETGLOBAL R8 K31       ; R8 := 0xF595ADDE
142 [-]: GETGLOBAL R9 K19       ; R9 := string
143 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["0xAF449107"]
144 [-]: MOVE      R10 R1       ; R10 := R1
145 [-]: LOADK     R11 K33      ; R11 := "%d+"
146 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
147 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
148 [-]: GETGLOBAL R9 K34       ; R9 := gPlayerProfileMgr
149 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9["0x21EF7B1A"]
150 [-]: LOADK     R11 K36      ; R11 := 0
151 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
152 [-]: SELF      R9 R9 K37    ; R10 := R9; R9 := R9["0x654F1092"]
153 [-]: CALL      R9 2 2       ; R9 := R9(R10)
154 [-]: SELF      R9 R9 K38    ; R10 := R9; R9 := R9["0x2D0B8A86"]
155 [-]: CALL      R9 2 2       ; R9 := R9(R10)
156 [-]: GETTABLE  R9 R9 K39    ; R9 := R9["mFeaturedGuilds"]
157 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
158 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["mId"]
159 [-]: GETGLOBAL R10 K9       ; R10 := 0x400E7765
160 [-]: GETGLOBAL R11 K3       ; R11 := _T
161 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["SquadOverlay"]
162 [-]: CALL      R10 2 2      ; R10 := R10(R11)
163 [-]: TEST      R10 1        ; if R10 then PC := 191
164 [-]: JMP       191          ; PC := 191
165 [-]: GETGLOBAL R10 K3       ; R10 := _T
166 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["SquadOverlay"]
167 [-]: SELF      R10 R10 K11  ; R11 := R10; R10 := R10["0x458F27A9"]
168 [-]: LOADK     R12 K41      ; R12 := "InitiateDojoVisit"
169 [-]: GETTABLE  R13 R9 K40   ; R13 := R9["mId"]
170 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
171 [-]: NEWTABLE  R10 0 3      ; R10 := {}
172 [-]: SETTABLE  R10 K8 K42   ; R10["name"] := "DojoHUB_HUB"
173 [-]: SETTABLE  R10 K43 K13  ; R10["quest"] := ""
174 [-]: SETTABLE  R10 K17 K13  ; R10["difficulty"] := ""
175 [-]: GETGLOBAL R11 K44      ; R11 := gMatchingService
176 [-]: SELF      R11 R11 K45  ; R12 := R11; R11 := R11["0x3016115E"]
177 [-]: GETGLOBAL R13 K46      ; R13 := cjson
178 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["0x8DC1075B"]
179 [-]: MOVE      R14 R10      ; R14 := R10
180 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
181 [-]: CALL      R11 0 1      ; R11(R12,...)
182 [-]: JMP       191          ; PC := 191
183 [-]: GETUPVAL  R11 U2       ; R11 := U2
184 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["0xB11F032"]
185 [-]: GETGLOBAL R12 K49      ; R12 := mMovie
186 [-]: SELF      R12 R12 K50  ; R13 := R12; R12 := R12["0x5DB0BD4"]
187 [-]: LOADK     R14 K51      ; R14 := "/Lotus/Language/Clan/RestrictedUGCWarning"
188 [-]: MOVE      R15 R0       ; R15 := R0
189 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
190 [-]: CALL      R11 0 1      ; R11(R12,...)
191 [-]: RETURN    R0 1         ; return 
192 [-]: GETGLOBAL R11 K19      ; R11 := string
193 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
194 [-]: MOVE      R12 R1       ; R12 := R1
195 [-]: LOADK     R13 K52      ; R13 := "Dojo"
196 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
197 [-]: TEST      R11 0        ; if not R11 then PC := 203
198 [-]: JMP       203          ; PC := 203
199 [-]: GETUPVAL  R11 U3       ; R11 := U3
200 [-]: CALL      R11 1 1      ; R11()
201 [-]: RETURN    R0 1         ; return 
202 [-]: JMP       268          ; PC := 268
203 [-]: GETGLOBAL R11 K19      ; R11 := string
204 [-]: GETTABLE  R11 R11 K20  ; R11 := R11["0xDE44F664"]
205 [-]: MOVE      R12 R1       ; R12 := R1
206 [-]: LOADK     R13 K53      ; R13 := "StalkerHideout"
207 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
208 [-]: TEST      R11 0        ; if not R11 then PC := 268
209 [-]: JMP       268          ; PC := 268
210 [-]: LOADNIL   R11 R11      ; R11 := nil
211 [-]: GETGLOBAL R12 K19      ; R12 := string
212 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["0xDE44F664"]
213 [-]: MOVE      R13 R1       ; R13 := R1
214 [-]: GETUPVAL  R14 U1       ; R14 := U1
215 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["KEY_TAG"]
216 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
217 [-]: EQ        1 R12 K5     ; if R12 == nil then PC := 267
218 [-]: JMP       267          ; PC := 267
219 [-]: GETGLOBAL R13 K19      ; R13 := string
220 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["0x7B782033"]
221 [-]: MOVE      R14 R1       ; R14 := R1
222 [-]: LOADK     R15 K25      ; R15 := 1
223 [-]: SUB       R16 R12 K25  ; R16 := R12 - 1
224 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
225 [-]: GETGLOBAL R14 K26      ; R14 := 0x7C282057
226 [-]: MOVE      R15 R13      ; R15 := R13
227 [-]: CALL      R14 2 2      ; R14 := R14(R15)
228 [-]: MOVE      R11 R14      ; R11 := R14
229 [-]: GETGLOBAL R14 K9       ; R14 := 0x400E7765
230 [-]: MOVE      R15 R11      ; R15 := R11
231 [-]: CALL      R14 2 2      ; R14 := R14(R15)
232 [-]: TEST      R14 1        ; if R14 then PC := 267
233 [-]: JMP       267          ; PC := 267
234 [-]: SELF      R14 R11 K54  ; R15 := R11; R14 := R11["0xB8637349"]
235 [-]: CALL      R14 2 2      ; R14 := R14(R15)
236 [-]: GETGLOBAL R15 K9       ; R15 := 0x400E7765
237 [-]: GETTABLE  R16 R14 K55  ; R16 := R14["levelOverride"]
238 [-]: CALL      R15 2 2      ; R15 := R15(R16)
239 [-]: TEST      R15 1        ; if R15 then PC := 267
240 [-]: JMP       267          ; PC := 267
241 [-]: GETGLOBAL R15 K56      ; R15 := _G
242 [-]: SETTABLE  R15 K57 K58  ; R15["StalkerMode"] := "0x1"
243 [-]: GETGLOBAL R15 K59      ; R15 := gGameConfig
244 [-]: SELF      R15 R15 K60  ; R16 := R15; R15 := R15["0x92CE9D7D"]
245 [-]: GETTABLE  R17 R14 K55  ; R17 := R14["levelOverride"]
246 [-]: CALL      R15 3 1      ; R15(R16,R17)
247 [-]: GETGLOBAL R15 K61      ; R15 := gRegion
248 [-]: SELF      R15 R15 K62  ; R16 := R15; R15 := R15["0xD2075696"]
249 [-]: CALL      R15 2 2      ; R15 := R15(R16)
250 [-]: GETTABLE  R16 R14 K55  ; R16 := R14["levelOverride"]
251 [-]: SETTABLE  R15 K63 R16  ; R15["level"] := R16
252 [-]: GETTABLE  R16 R14 K64  ; R16 := R14["gameRules"]
253 [-]: SETTABLE  R15 K64 R16  ; R15["gameRules"] := R16
254 [-]: GETGLOBAL R16 K65      ; R16 := gGameData
255 [-]: SELF      R16 R16 K66  ; R17 := R16; R16 := R16["0x33ABF5D"]
256 [-]: MOVE      R18 R15      ; R18 := R15
257 [-]: MOVE      R19 R1       ; R19 := R1
258 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
259 [-]: GETGLOBAL R16 K65      ; R16 := gGameData
260 [-]: SELF      R16 R16 K67  ; R17 := R16; R16 := R16["0x19F7DE8"]
261 [-]: MOVE      R18 R1       ; R18 := R1
262 [-]: CALL      R16 3 1      ; R16(R17,R18)
263 [-]: GETGLOBAL R16 K68      ; R16 := Engine
264 [-]: GETTABLE  R16 R16 K69  ; R16 := R16["0xC53FF352"]
265 [-]: MOVE      R17 R0       ; R17 := R0
266 [-]: CALL      R16 2 1      ; R16(R17)
267 [-]: RETURN    R0 1         ; return 
268 [-]: GETGLOBAL R16 K56      ; R16 := _G
269 [-]: GETTABLE  R16 R16 K57  ; R16 := R16["StalkerMode"]
270 [-]: TEST      R16 0        ; if not R16 then PC := 297
271 [-]: JMP       297          ; PC := 297
272 [-]: GETUPVAL  R16 U0       ; R16 := U0
273 [-]: GETTABLE  R16 R16 K0   ; R16 := R16["Node"]
274 [-]: GETTABLE  R16 R16 K6   ; R16 := R16["radialSector"]
275 [-]: GETTABLE  R16 R16 K70  ; R16 := R16["nodeType"]
276 [-]: GETGLOBAL R17 K71      ; R17 := Lotus_Game
277 [-]: GETTABLE  R17 R17 K72  ; R17 := R17["NT_CLAN"]
278 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 290
279 [-]: JMP       290          ; PC := 290
280 [-]: GETUPVAL  R16 U4       ; R16 := U4
281 [-]: MOVE      R17 R1       ; R17 := R1
282 [-]: GETUPVAL  R18 U1       ; R18 := U1
283 [-]: GETTABLE  R18 R18 K73  ; R18 := R18["BADLAND_MISSION_TAG"]
284 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
285 [-]: MOVE      R18 R2       ; R18 := R2
286 [-]: MOVE      R19 R3       ; R19 := R3
287 [-]: MOVE      R20 R4       ; R20 := R4
288 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
289 [-]: JMP       296          ; PC := 296
290 [-]: GETUPVAL  R16 U4       ; R16 := U4
291 [-]: MOVE      R17 R1       ; R17 := R1
292 [-]: MOVE      R18 R2       ; R18 := R2
293 [-]: MOVE      R19 R3       ; R19 := R3
294 [-]: MOVE      R20 R4       ; R20 := R4
295 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
296 [-]: RETURN    R0 1         ; return 
297 [-]: GETGLOBAL R16 K9       ; R16 := 0x400E7765
298 [-]: MOVE      R17 R2       ; R17 := R2
299 [-]: CALL      R16 2 2      ; R16 := R16(R17)
300 [-]: TEST      R16 1        ; if R16 then PC := 305
301 [-]: JMP       305          ; PC := 305
302 [-]: GETUPVAL  R16 U5       ; R16 := U5
303 [-]: EQ        1 R2 R16     ; if R2 == R16 then PC := 306
304 [-]: JMP       306          ; PC := 306
305 [-]: MOVE      R16 R0       ; R16 := R0
306 [-]: MOVE      R16 R1       ; R16 := R1
307 [-]: TEST      R16 1        ; if R16 then PC := 594
308 [-]: JMP       594          ; PC := 594
309 [-]: GETUPVAL  R17 U0       ; R17 := U0
310 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
311 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
312 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
313 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
314 [-]: GETTABLE  R18 R18 K74  ; R18 := R18["NT_MISSION"]
315 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 335
316 [-]: JMP       335          ; PC := 335
317 [-]: GETUPVAL  R17 U0       ; R17 := U0
318 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
319 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
320 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
321 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
322 [-]: GETTABLE  R18 R18 K72  ; R18 := R18["NT_CLAN"]
323 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 594
324 [-]: JMP       594          ; PC := 594
325 [-]: GETGLOBAL R17 K3       ; R17 := _T
326 [-]: GETTABLE  R17 R17 K75  ; R17 := R17["CachedEliteAlertMissions"]
327 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
328 [-]: TEST      R17 1        ; if R17 then PC := 335
329 [-]: JMP       335          ; PC := 335
330 [-]: GETGLOBAL R17 K3       ; R17 := _T
331 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedNemesisMissions"]
332 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
333 [-]: TEST      R17 0        ; if not R17 then PC := 594
334 [-]: JMP       594          ; PC := 594
335 [-]: GETUPVAL  R17 U6       ; R17 := U6
336 [-]: GETUPVAL  R18 U0       ; R18 := U0
337 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
338 [-]: MOVE      R19 R1       ; R19 := R1
339 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
340 [-]: TEST      R17 0        ; if not R17 then PC := 594
341 [-]: JMP       594          ; PC := 594
342 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
343 [-]: GETUPVAL  R18 U0       ; R18 := U0
344 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
345 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
346 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
347 [-]: CALL      R17 2 2      ; R17 := R17(R18)
348 [-]: TEST      R17 0        ; if not R17 then PC := 451
349 [-]: JMP       451          ; PC := 451
350 [-]: GETGLOBAL R17 K3       ; R17 := _T
351 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedAlerts"]
352 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
353 [-]: TEST      R17 0        ; if not R17 then PC := 361
354 [-]: JMP       361          ; PC := 361
355 [-]: GETGLOBAL R17 K3       ; R17 := _T
356 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedAlerts"]
357 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
358 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
359 [-]: TEST      R17 1        ; if R17 then PC := 451
360 [-]: JMP       451          ; PC := 451
361 [-]: GETGLOBAL R17 K56      ; R17 := _G
362 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedGoalInfo"]
363 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
364 [-]: TEST      R17 1        ; if R17 then PC := 451
365 [-]: JMP       451          ; PC := 451
366 [-]: GETGLOBAL R17 K56      ; R17 := _G
367 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["MergedGoalNodes"]
368 [-]: TEST      R17 0        ; if not R17 then PC := 375
369 [-]: JMP       375          ; PC := 375
370 [-]: GETGLOBAL R17 K56      ; R17 := _G
371 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["MergedGoalNodes"]
372 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
373 [-]: TEST      R17 1        ; if R17 then PC := 451
374 [-]: JMP       451          ; PC := 451
375 [-]: GETGLOBAL R17 K3       ; R17 := _T
376 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedSyndicateMissions"]
377 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
378 [-]: TEST      R17 0        ; if not R17 then PC := 386
379 [-]: JMP       386          ; PC := 386
380 [-]: GETGLOBAL R17 K3       ; R17 := _T
381 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedSyndicateMissions"]
382 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
383 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
384 [-]: TEST      R17 1        ; if R17 then PC := 451
385 [-]: JMP       451          ; PC := 451
386 [-]: GETGLOBAL R17 K3       ; R17 := _T
387 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSortieMissions"]
388 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
389 [-]: TEST      R17 0        ; if not R17 then PC := 397
390 [-]: JMP       397          ; PC := 397
391 [-]: GETGLOBAL R17 K3       ; R17 := _T
392 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSortieMissions"]
393 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
394 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["mShowInStarChart"]
395 [-]: TEST      R17 1        ; if R17 then PC := 451
396 [-]: JMP       451          ; PC := 451
397 [-]: GETGLOBAL R17 K3       ; R17 := _T
398 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
399 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
400 [-]: TEST      R17 0        ; if not R17 then PC := 414
401 [-]: JMP       414          ; PC := 414
402 [-]: GETGLOBAL R17 K3       ; R17 := _T
403 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
404 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
405 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
406 [-]: TEST      R17 0        ; if not R17 then PC := 414
407 [-]: JMP       414          ; PC := 414
408 [-]: GETGLOBAL R17 K3       ; R17 := _T
409 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
410 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
411 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
412 [-]: TEST      R17 1        ; if R17 then PC := 451
413 [-]: JMP       451          ; PC := 451
414 [-]: GETGLOBAL R17 K3       ; R17 := _T
415 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedInvasionInfo"]
416 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
417 [-]: TEST      R17 1        ; if R17 then PC := 451
418 [-]: JMP       451          ; PC := 451
419 [-]: GETGLOBAL R17 K3       ; R17 := _T
420 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSkullNodes"]
421 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
422 [-]: EQ        0 R17 K5     ; if R17 ~= nil then PC := 451
423 [-]: JMP       451          ; PC := 451
424 [-]: GETGLOBAL R17 K3       ; R17 := _T
425 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedGhostTowerMissions"]
426 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
427 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 435
428 [-]: JMP       435          ; PC := 435
429 [-]: GETGLOBAL R17 K3       ; R17 := _T
430 [-]: GETTABLE  R17 R17 K88  ; R17 := R17["CachedGhostTowerMissions"]
431 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
432 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
433 [-]: TEST      R17 1        ; if R17 then PC := 451
434 [-]: JMP       451          ; PC := 451
435 [-]: GETGLOBAL R17 K3       ; R17 := _T
436 [-]: GETTABLE  R17 R17 K75  ; R17 := R17["CachedEliteAlertMissions"]
437 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
438 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 446
439 [-]: JMP       446          ; PC := 446
440 [-]: GETGLOBAL R17 K3       ; R17 := _T
441 [-]: GETTABLE  R17 R17 K75  ; R17 := R17["CachedEliteAlertMissions"]
442 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
443 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
444 [-]: TEST      R17 1        ; if R17 then PC := 451
445 [-]: JMP       451          ; PC := 451
446 [-]: GETGLOBAL R17 K3       ; R17 := _T
447 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedNemesisMissions"]
448 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
449 [-]: TEST      R17 0        ; if not R17 then PC := 594
450 [-]: JMP       594          ; PC := 594
451 [-]: GETGLOBAL R17 K3       ; R17 := _T
452 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["DesiredGoToNodeTag"]
453 [-]: TEST      R17 0        ; if not R17 then PC := 496
454 [-]: JMP       496          ; PC := 496
455 [-]: GETGLOBAL R17 K3       ; R17 := _T
456 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["DesiredGoToNodeTag"]
457 [-]: GETUPVAL  R18 U1       ; R18 := U1
458 [-]: GETTABLE  R18 R18 K89  ; R18 := R18["ACTIVE_MISSION_TAG"]
459 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 467
460 [-]: JMP       467          ; PC := 467
461 [-]: GETGLOBAL R17 K3       ; R17 := _T
462 [-]: SETTABLE  R17 K22 K5   ; R17["DesiredGoToNodeTag"] := nil
463 [-]: GETUPVAL  R17 U7       ; R17 := U7
464 [-]: MOVE      R18 R1       ; R18 := R1
465 [-]: CALL      R17 2 1      ; R17(R18)
466 [-]: JMP       494          ; PC := 494
467 [-]: GETGLOBAL R17 K3       ; R17 := _T
468 [-]: GETTABLE  R17 R17 K22  ; R17 := R17["DesiredGoToNodeTag"]
469 [-]: GETUPVAL  R18 U1       ; R18 := U1
470 [-]: GETTABLE  R18 R18 K90  ; R18 := R18["INVASION_ATTACKER_TAG"]
471 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 479
472 [-]: JMP       479          ; PC := 479
473 [-]: GETGLOBAL R17 K3       ; R17 := _T
474 [-]: SETTABLE  R17 K22 K5   ; R17["DesiredGoToNodeTag"] := nil
475 [-]: GETUPVAL  R17 U8       ; R17 := U8
476 [-]: MOVE      R18 R1       ; R18 := R1
477 [-]: CALL      R17 2 1      ; R17(R18)
478 [-]: JMP       494          ; PC := 494
479 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
480 [-]: GETUPVAL  R18 U0       ; R18 := U0
481 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
482 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
483 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
484 [-]: CALL      R17 2 2      ; R17 := R17(R18)
485 [-]: GETGLOBAL R18 K3       ; R18 := _T
486 [-]: GETTABLE  R18 R18 K22  ; R18 := R18["DesiredGoToNodeTag"]
487 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
488 [-]: GETGLOBAL R17 K3       ; R17 := _T
489 [-]: SETTABLE  R17 K22 K5   ; R17["DesiredGoToNodeTag"] := nil
490 [-]: GETUPVAL  R17 U4       ; R17 := U4
491 [-]: MOVE      R18 R1       ; R18 := R1
492 [-]: LOADNIL   R19 R21      ; R19 := R20 := R21 := nil
493 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
494 [-]: RETURN    R0 1         ; return 
495 [-]: JMP       594          ; PC := 594
496 [-]: GETUPVAL  R17 U0       ; R17 := U0
497 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
498 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
499 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
500 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["missionType"]
501 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
502 [-]: GETTABLE  R18 R18 K92  ; R18 := R18["MT_ARENA"]
503 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 544
504 [-]: JMP       544          ; PC := 544
505 [-]: GETUPVAL  R17 U0       ; R17 := U0
506 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
507 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
508 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
509 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["faction"]
510 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
511 [-]: GETTABLE  R18 R18 K94  ; R18 := R18["FC_CORPUS"]
512 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 544
513 [-]: JMP       544          ; PC := 544
514 [-]: GETUPVAL  R17 U0       ; R17 := U0
515 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
516 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
517 [-]: TEST      R17 0        ; if not R17 then PC := 544
518 [-]: JMP       544          ; PC := 544
519 [-]: GETGLOBAL R17 K3       ; R17 := _T
520 [-]: GETTABLE  R17 R17 K95  ; R17 := R17["DesiredGoToQuest"]
521 [-]: TEST      R17 0        ; if not R17 then PC := 528
522 [-]: JMP       528          ; PC := 528
523 [-]: GETGLOBAL R17 K3       ; R17 := _T
524 [-]: GETTABLE  R2 R17 K95   ; R2 := R17["DesiredGoToQuest"]
525 [-]: GETGLOBAL R17 K3       ; R17 := _T
526 [-]: SETTABLE  R17 K95 K5   ; R17["DesiredGoToQuest"] := nil
527 [-]: JMP       536          ; PC := 536
528 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
529 [-]: MOVE      R18 R2       ; R18 := R2
530 [-]: CALL      R17 2 2      ; R17 := R17(R18)
531 [-]: TEST      R17 1        ; if R17 then PC := 536
532 [-]: JMP       536          ; PC := 536
533 [-]: SELF      R17 R2 K23   ; R18 := R2; R17 := R2["0x1B252E3C"]
534 [-]: CALL      R17 2 2      ; R17 := R17(R18)
535 [-]: MOVE      R2 R17       ; R2 := R17
536 [-]: GETUPVAL  R17 U9       ; R17 := U9
537 [-]: MOVE      R18 R1       ; R18 := R1
538 [-]: MOVE      R19 R1       ; R19 := R1
539 [-]: MOVE      R20 R2       ; R20 := R2
540 [-]: MOVE      R21 R4       ; R21 := R4
541 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
542 [-]: RETURN    R0 1         ; return 
543 [-]: JMP       594          ; PC := 594
544 [-]: GETGLOBAL R17 K3       ; R17 := _T
545 [-]: GETTABLE  R17 R17 K95  ; R17 := R17["DesiredGoToQuest"]
546 [-]: TEST      R17 0        ; if not R17 then PC := 553
547 [-]: JMP       553          ; PC := 553
548 [-]: GETGLOBAL R17 K3       ; R17 := _T
549 [-]: GETTABLE  R2 R17 K95   ; R2 := R17["DesiredGoToQuest"]
550 [-]: GETGLOBAL R17 K3       ; R17 := _T
551 [-]: SETTABLE  R17 K95 K5   ; R17["DesiredGoToQuest"] := nil
552 [-]: JMP       594          ; PC := 594
553 [-]: GETUPVAL  R17 U0       ; R17 := U0
554 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
555 [-]: GETTABLE  R17 R17 K96  ; R17 := R17["isBlockaded"]
556 [-]: TEST      R17 0        ; if not R17 then PC := 572
557 [-]: JMP       572          ; PC := 572
558 [-]: GETGLOBAL R17 K14      ; R17 := 0x9FAED6BC
559 [-]: GETUPVAL  R18 U0       ; R18 := U0
560 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
561 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
562 [-]: GETTABLE  R18 R18 K8   ; R18 := R18["name"]
563 [-]: CALL      R17 2 2      ; R17 := R17(R18)
564 [-]: GETUPVAL  R18 U1       ; R18 := U1
565 [-]: GETTABLE  R18 R18 K97  ; R18 := R18["NEMESIS_MISSION_TAG"]
566 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
567 [-]: GETUPVAL  R17 U4       ; R17 := U4
568 [-]: MOVE      R18 R1       ; R18 := R1
569 [-]: CALL      R17 2 1      ; R17(R18)
570 [-]: RETURN    R0 1         ; return 
571 [-]: JMP       594          ; PC := 594
572 [-]: GETGLOBAL R17 K56      ; R17 := _G
573 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedGoalInfo"]
574 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
575 [-]: TEST      R17 0        ; if not R17 then PC := 586
576 [-]: JMP       586          ; PC := 586
577 [-]: GETGLOBAL R17 K3       ; R17 := _T
578 [-]: GETTABLE  R17 R17 K98  ; R17 := R17["LockedGoalMissionInfo"]
579 [-]: TEST      R17 0        ; if not R17 then PC := 594
580 [-]: JMP       594          ; PC := 594
581 [-]: GETGLOBAL R17 K3       ; R17 := _T
582 [-]: GETTABLE  R17 R17 K98  ; R17 := R17["LockedGoalMissionInfo"]
583 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
584 [-]: TEST      R17 0        ; if not R17 then PC := 594
585 [-]: JMP       594          ; PC := 594
586 [-]: GETUPVAL  R17 U10      ; R17 := U10
587 [-]: GETUPVAL  R18 U0       ; R18 := U0
588 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
589 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
590 [-]: MOVE      R19 R2       ; R19 := R2
591 [-]: MOVE      R20 R3       ; R20 := R3
592 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
593 [-]: RETURN    R0 1         ; return 
594 [-]: GETGLOBAL R17 K9       ; R17 := 0x400E7765
595 [-]: GETUPVAL  R18 U0       ; R18 := U0
596 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
597 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
598 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["keyChain"]
599 [-]: CALL      R17 2 2      ; R17 := R17(R18)
600 [-]: TEST      R17 1        ; if R17 then PC := 610
601 [-]: JMP       610          ; PC := 610
602 [-]: GETUPVAL  R17 U0       ; R17 := U0
603 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
604 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
605 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["keyChain"]
606 [-]: SELF      R17 R17 K23  ; R18 := R17; R17 := R17["0x1B252E3C"]
607 [-]: CALL      R17 2 2      ; R17 := R17(R18)
608 [-]: MOVE      R2 R17       ; R2 := R17
609 [-]: JMP       789          ; PC := 789
610 [-]: TEST      R2 1         ; if R2 then PC := 789
611 [-]: JMP       789          ; PC := 789
612 [-]: GETGLOBAL R17 K3       ; R17 := _T
613 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedAlerts"]
614 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
615 [-]: TEST      R17 0        ; if not R17 then PC := 634
616 [-]: JMP       634          ; PC := 634
617 [-]: GETGLOBAL R17 K3       ; R17 := _T
618 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedAlerts"]
619 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
620 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
621 [-]: TEST      R17 0        ; if not R17 then PC := 634
622 [-]: JMP       634          ; PC := 634
623 [-]: GETGLOBAL R17 K3       ; R17 := _T
624 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["CachedAlerts"]
625 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
626 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
627 [-]: TEST      R17 0        ; if not R17 then PC := 634
628 [-]: JMP       634          ; PC := 634
629 [-]: MOVE      R17 R1       ; R17 := R1
630 [-]: GETUPVAL  R18 U1       ; R18 := U1
631 [-]: GETTABLE  R18 R18 K99  ; R18 := R18["ALERT_TAG"]
632 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
633 [-]: JMP       789          ; PC := 789
634 [-]: GETGLOBAL R17 K56      ; R17 := _G
635 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["CachedGoalInfo"]
636 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
637 [-]: TEST      R17 0        ; if not R17 then PC := 663
638 [-]: JMP       663          ; PC := 663
639 [-]: GETUPVAL  R17 U0       ; R17 := U0
640 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
641 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
642 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
643 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
644 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["NT_HUB"]
645 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 663
646 [-]: JMP       663          ; PC := 663
647 [-]: GETGLOBAL R17 K3       ; R17 := _T
648 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedInvasionInfo"]
649 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
650 [-]: TEST      R17 0        ; if not R17 then PC := 658
651 [-]: JMP       658          ; PC := 658
652 [-]: GETGLOBAL R17 K3       ; R17 := _T
653 [-]: SETTABLE  R17 K22 K5   ; R17["DesiredGoToNodeTag"] := nil
654 [-]: GETUPVAL  R17 U8       ; R17 := U8
655 [-]: MOVE      R18 R1       ; R18 := R1
656 [-]: CALL      R17 2 1      ; R17(R18)
657 [-]: RETURN    R0 1         ; return 
658 [-]: MOVE      R17 R1       ; R17 := R1
659 [-]: GETUPVAL  R18 U1       ; R18 := U1
660 [-]: GETTABLE  R18 R18 K101 ; R18 := R18["EVENT_TAG"]
661 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
662 [-]: JMP       789          ; PC := 789
663 [-]: GETGLOBAL R17 K3       ; R17 := _T
664 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedSyndicateMissions"]
665 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
666 [-]: TEST      R17 0        ; if not R17 then PC := 685
667 [-]: JMP       685          ; PC := 685
668 [-]: GETGLOBAL R17 K3       ; R17 := _T
669 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedSyndicateMissions"]
670 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
671 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
672 [-]: TEST      R17 0        ; if not R17 then PC := 685
673 [-]: JMP       685          ; PC := 685
674 [-]: GETGLOBAL R17 K3       ; R17 := _T
675 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["CachedSyndicateMissions"]
676 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
677 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
678 [-]: TEST      R17 0        ; if not R17 then PC := 685
679 [-]: JMP       685          ; PC := 685
680 [-]: MOVE      R17 R1       ; R17 := R1
681 [-]: GETUPVAL  R18 U1       ; R18 := U1
682 [-]: GETTABLE  R18 R18 K102 ; R18 := R18["SYNDICATE_MISSION_TAG"]
683 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
684 [-]: JMP       789          ; PC := 789
685 [-]: GETGLOBAL R17 K3       ; R17 := _T
686 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSortieMissions"]
687 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
688 [-]: TEST      R17 0        ; if not R17 then PC := 701
689 [-]: JMP       701          ; PC := 701
690 [-]: GETGLOBAL R17 K3       ; R17 := _T
691 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["CachedSortieMissions"]
692 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
693 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["mShowInStarChart"]
694 [-]: TEST      R17 0        ; if not R17 then PC := 701
695 [-]: JMP       701          ; PC := 701
696 [-]: MOVE      R17 R1       ; R17 := R1
697 [-]: GETUPVAL  R18 U1       ; R18 := U1
698 [-]: GETTABLE  R18 R18 K103 ; R18 := R18["SORTIE_MISSION_TAG"]
699 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
700 [-]: JMP       789          ; PC := 789
701 [-]: GETGLOBAL R17 K3       ; R17 := _T
702 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
703 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
704 [-]: TEST      R17 0        ; if not R17 then PC := 723
705 [-]: JMP       723          ; PC := 723
706 [-]: GETGLOBAL R17 K3       ; R17 := _T
707 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
708 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
709 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mVisible"]
710 [-]: TEST      R17 0        ; if not R17 then PC := 723
711 [-]: JMP       723          ; PC := 723
712 [-]: GETGLOBAL R17 K3       ; R17 := _T
713 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["CachedActiveMissions"]
714 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
715 [-]: GETTABLE  R17 R17 K85  ; R17 := R17["mUnlocked"]
716 [-]: TEST      R17 0        ; if not R17 then PC := 723
717 [-]: JMP       723          ; PC := 723
718 [-]: GETUPVAL  R17 U7       ; R17 := U7
719 [-]: MOVE      R18 R1       ; R18 := R1
720 [-]: CALL      R17 2 1      ; R17(R18)
721 [-]: RETURN    R0 1         ; return 
722 [-]: JMP       789          ; PC := 789
723 [-]: GETGLOBAL R17 K3       ; R17 := _T
724 [-]: GETTABLE  R17 R17 K86  ; R17 := R17["CachedInvasionInfo"]
725 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
726 [-]: TEST      R17 0        ; if not R17 then PC := 733
727 [-]: JMP       733          ; PC := 733
728 [-]: GETUPVAL  R17 U8       ; R17 := U8
729 [-]: MOVE      R18 R1       ; R18 := R1
730 [-]: CALL      R17 2 1      ; R17(R18)
731 [-]: RETURN    R0 1         ; return 
732 [-]: JMP       789          ; PC := 789
733 [-]: GETGLOBAL R17 K3       ; R17 := _T
734 [-]: GETTABLE  R17 R17 K87  ; R17 := R17["CachedSkullNodes"]
735 [-]: GETTABLE  R17 R17 R1   ; R17 := R17[R1]
736 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 743
737 [-]: JMP       743          ; PC := 743
738 [-]: GETUPVAL  R17 U11      ; R17 := U11
739 [-]: MOVE      R18 R1       ; R18 := R1
740 [-]: CALL      R17 2 1      ; R17(R18)
741 [-]: RETURN    R0 1         ; return 
742 [-]: JMP       789          ; PC := 789
743 [-]: GETUPVAL  R17 U0       ; R17 := U0
744 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
745 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
746 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
747 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
748 [-]: GETTABLE  R18 R18 K72  ; R18 := R18["NT_CLAN"]
749 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 762
750 [-]: JMP       762          ; PC := 762
751 [-]: GETUPVAL  R17 U4       ; R17 := U4
752 [-]: MOVE      R18 R1       ; R18 := R1
753 [-]: GETUPVAL  R19 U1       ; R19 := U1
754 [-]: GETTABLE  R19 R19 K73  ; R19 := R19["BADLAND_MISSION_TAG"]
755 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
756 [-]: LOADK     R19 K13      ; R19 := ""
757 [-]: LOADK     R20 K13      ; R20 := ""
758 [-]: LOADK     R21 K13      ; R21 := ""
759 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
760 [-]: RETURN    R0 1         ; return 
761 [-]: JMP       789          ; PC := 789
762 [-]: GETUPVAL  R17 U0       ; R17 := U0
763 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
764 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
765 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
766 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
767 [-]: GETTABLE  R18 R18 K104 ; R18 := R18["NT_PVP"]
768 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 775
769 [-]: JMP       775          ; PC := 775
770 [-]: MOVE      R17 R1       ; R17 := R1
771 [-]: GETUPVAL  R18 U1       ; R18 := U1
772 [-]: GETTABLE  R18 R18 K105 ; R18 := R18["PVP_TAG"]
773 [-]: CONCAT    R1 R17 R18   ; R1 := R17 .. R18
774 [-]: JMP       789          ; PC := 789
775 [-]: GETUPVAL  R17 U0       ; R17 := U0
776 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
777 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
778 [-]: GETTABLE  R17 R17 K70  ; R17 := R17["nodeType"]
779 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
780 [-]: GETTABLE  R18 R18 K100 ; R18 := R18["NT_HUB"]
781 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 789
782 [-]: JMP       789          ; PC := 789
783 [-]: GETUPVAL  R17 U12      ; R17 := U12
784 [-]: GETUPVAL  R18 U0       ; R18 := U0
785 [-]: GETTABLE  R18 R18 K0   ; R18 := R18["Node"]
786 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["radialSector"]
787 [-]: CALL      R17 2 1      ; R17(R18)
788 [-]: RETURN    R0 1         ; return 
789 [-]: GETUPVAL  R17 U0       ; R17 := U0
790 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
791 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
792 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
793 [-]: GETTABLE  R17 R17 K91  ; R17 := R17["missionType"]
794 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
795 [-]: GETTABLE  R18 R18 K92  ; R18 := R18["MT_ARENA"]
796 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 819
797 [-]: JMP       819          ; PC := 819
798 [-]: GETUPVAL  R17 U0       ; R17 := U0
799 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
800 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
801 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
802 [-]: GETTABLE  R17 R17 K93  ; R17 := R17["faction"]
803 [-]: GETGLOBAL R18 K71      ; R18 := Lotus_Game
804 [-]: GETTABLE  R18 R18 K94  ; R18 := R18["FC_CORPUS"]
805 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 819
806 [-]: JMP       819          ; PC := 819
807 [-]: GETUPVAL  R17 U0       ; R17 := U0
808 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
809 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["name"]
810 [-]: TEST      R17 0        ; if not R17 then PC := 819
811 [-]: JMP       819          ; PC := 819
812 [-]: GETUPVAL  R17 U9       ; R17 := U9
813 [-]: MOVE      R18 R1       ; R18 := R1
814 [-]: MOVE      R19 R1       ; R19 := R1
815 [-]: MOVE      R20 R2       ; R20 := R2
816 [-]: MOVE      R21 R4       ; R21 := R4
817 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
818 [-]: RETURN    R0 1         ; return 
819 [-]: GETUPVAL  R17 U0       ; R17 := U0
820 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["Node"]
821 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["radialSector"]
822 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mission"]
823 [-]: GETTABLE  R17 R17 K106 ; R17 := R17["soloMode"]
824 [-]: TEST      R17 0        ; if not R17 then PC := 903
825 [-]: JMP       903          ; PC := 903
826 [-]: GETGLOBAL R17 K44      ; R17 := gMatchingService
827 [-]: SELF      R17 R17 K107 ; R18 := R17; R17 := R17["0x35DDC67D"]
828 [-]: CALL      R17 2 2      ; R17 := R17(R18)
829 [-]: LT        0 K25 R17    ; if 1 >= R17 then PC := 879
830 [-]: JMP       879          ; PC := 879
831 [-]: GETUPVAL  R17 U13      ; R17 := U13
832 [-]: GETTABLE  R17 R17 K108 ; R17 := R17["0x8ECD61A2"]
833 [-]: GETGLOBAL R18 K109     ; R18 := 0xEC274B1A
834 [-]: MOVE      R19 R1       ; R19 := R1
835 [-]: CALL      R18 2 2      ; R18 := R18(R19)
836 [-]: MOVE      R19 R1       ; R19 := R1
837 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
838 [-]: EQ        1 R17 K5     ; if R17 == nil then PC := 861
839 [-]: JMP       861          ; PC := 861
840 [-]: GETGLOBAL R18 K49      ; R18 := mMovie
841 [-]: SELF      R18 R18 K50  ; R19 := R18; R18 := R18["0x5DB0BD4"]
842 [-]: GETTABLE  R20 R17 K110 ; R20 := R17["text"]
843 [-]: MOVE      R21 R0       ; R21 := R0
844 [-]: NEWTABLE  R22 0 5      ; R22 := {}
845 [-]: GETTABLE  R23 R17 K112 ; R23 := R17["player"]
846 [-]: SETTABLE  R22 K111 R23 ; R22["PLAYER_NAME"] := R23
847 [-]: GETTABLE  R23 R17 K114 ; R23 := R17["value"]
848 [-]: SETTABLE  R22 K113 R23 ; R22["VALUE"] := R23
849 [-]: GETTABLE  R23 R17 K115 ; R23 := R17["MIN"]
850 [-]: SETTABLE  R22 K115 R23 ; R22["MIN"] := R23
851 [-]: GETTABLE  R23 R17 K116 ; R23 := R17["MAX"]
852 [-]: SETTABLE  R22 K116 R23 ; R22["MAX"] := R23
853 [-]: GETTABLE  R23 R17 K117 ; R23 := R17["ITEM"]
854 [-]: SETTABLE  R22 K117 R23 ; R22["ITEM"] := R23
855 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
856 [-]: GETUPVAL  R19 U2       ; R19 := U2
857 [-]: GETTABLE  R19 R19 K48  ; R19 := R19["0xB11F032"]
858 [-]: MOVE      R20 R18      ; R20 := R18
859 [-]: CALL      R19 2 1      ; R19(R20)
860 [-]: JMP       902          ; PC := 902
861 [-]: GETGLOBAL R19 K9       ; R19 := 0x400E7765
862 [-]: GETUPVAL  R20 U14      ; R20 := U14
863 [-]: CALL      R19 2 2      ; R19 := R19(R20)
864 [-]: TEST      R19 0        ; if not R19 then PC := 902
865 [-]: JMP       902          ; PC := 902
866 [-]: GETUPVAL  R19 U15      ; R19 := U15
867 [-]: GETUPVAL  R20 U0       ; R20 := U0
868 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["Node"]
869 [-]: SETTABLE  R19 K0 R20   ; R19["Node"] := R20
870 [-]: GETUPVAL  R19 U15      ; R19 := U15
871 [-]: SETTABLE  R19 K118 R1  ; R19["SectorName"] := R1
872 [-]: GETUPVAL  R19 U2       ; R19 := U2
873 [-]: GETTABLE  R19 R19 K119 ; R19 := R19["0x1C988750"]
874 [-]: LOADK     R20 K120     ; R20 := "/Lotus/Language/Menu/SoloModeRequired"
875 [-]: LOADK     R21 K121     ; R21 := "ConfirmSoloMission"
876 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
877 [-]: MOVE      R19 R14      ; R19 := R14
878 [-]: JMP       902          ; PC := 902
879 [-]: GETUPVAL  R19 U0       ; R19 := U0
880 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
881 [-]: TEST      R19 0        ; if not R19 then PC := 902
882 [-]: JMP       902          ; PC := 902
883 [-]: GETUPVAL  R19 U0       ; R19 := U0
884 [-]: GETTABLE  R19 R19 K0   ; R19 := R19["Node"]
885 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["radialSector"]
886 [-]: TEST      R19 0        ; if not R19 then PC := 902
887 [-]: JMP       902          ; PC := 902
888 [-]: GETUPVAL  R19 U4       ; R19 := U4
889 [-]: MOVE      R20 R1       ; R20 := R1
890 [-]: MOVE      R21 R2       ; R21 := R2
891 [-]: MOVE      R22 R3       ; R22 := R3
892 [-]: MOVE      R23 R4       ; R23 := R4
893 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
894 [-]: TEST      R19 0        ; if not R19 then PC := 902
895 [-]: JMP       902          ; PC := 902
896 [-]: GETGLOBAL R19 K3       ; R19 := _T
897 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["SquadOverlay"]
898 [-]: SELF      R19 R19 K11  ; R20 := R19; R19 := R19["0x458F27A9"]
899 [-]: LOADK     R21 K122     ; R21 := "NotifyForceLoadSoloMission"
900 [-]: LOADK     R22 K13      ; R22 := ""
901 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
902 [-]: RETURN    R0 1         ; return 
903 [-]: GETUPVAL  R19 U16      ; R19 := U16
904 [-]: GETTABLE  R19 R19 K123 ; R19 := R19["Active"]
905 [-]: TEST      R19 0        ; if not R19 then PC := 911
906 [-]: JMP       911          ; PC := 911
907 [-]: GETUPVAL  R19 U16      ; R19 := U16
908 [-]: GETUPVAL  R20 U0       ; R20 := U0
909 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["Node"]
910 [-]: SETTABLE  R19 K124 R20 ; R19["SelectionNode"] := R20
911 [-]: GETUPVAL  R19 U4       ; R19 := U4
912 [-]: MOVE      R20 R1       ; R20 := R1
913 [-]: MOVE      R21 R2       ; R21 := R2
914 [-]: MOVE      R22 R3       ; R22 := R3
915 [-]: MOVE      R23 R4       ; R23 := R4
916 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
917 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 4199
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["InRailJackMode"] := "0x1"
  3 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 4203
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0xDB33ECB2"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: LOADK     R2 K2        ; R2 := 1
  5 [-]: LOADK     R3 K3        ; R3 := 0.20000000298023
  6 [-]: LOADK     R4 K4        ; R4 := 0
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 4207
; #Upvalues:       11
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := _G
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["StalkerMode"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETGLOBAL R0 K2        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["WareframeChallenge"]
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
  8 [-]: GETGLOBAL R2 K2        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 41
 12 [-]: JMP       41           ; PC := 41
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 14 [-]: GETGLOBAL R2 K6        ; R2 := gMatchingService
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0xD5E03646"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 41
 19 [-]: JMP       41           ; PC := 41
 20 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 21 [-]: GETGLOBAL R2 K8        ; R2 := gClient
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 41
 24 [-]: JMP       41           ; PC := 41
 25 [-]: GETGLOBAL R1 K8        ; R1 := gClient
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1["0xC6E8F98F"]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 1         ; if R1 then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: TEST      R0 1         ; if R0 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: GETGLOBAL R1 K10       ; R1 := 0x93B1256B
 33 [-]: LOADK     R2 K11       ; R2 := "Hosting lobby from MapRedux.lua (InitializeMore)"
 34 [-]: CALL      R1 2 1       ; R1(R2)
 35 [-]: GETGLOBAL R1 K2        ; R1 := _T
 36 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 37 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1["0x458F27A9"]
 38 [-]: LOADK     R3 K13       ; R3 := "HostLobby"
 39 [-]: LOADK     R4 K14       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 42 [-]: GETGLOBAL R2 K15       ; R2 := worldStateMovie
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 1         ; if R1 then PC := 77
 45 [-]: JMP       77           ; PC := 77
 46 [-]: TEST      R0 1         ; if R0 then PC := 77
 47 [-]: JMP       77           ; PC := 77
 48 [-]: GETUPVAL  R1 U0        ; R1 := U0
 49 [-]: GETGLOBAL R2 K17       ; R2 := gFlashMgr
 50 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x616DD092"]
 51 [-]: GETGLOBAL R4 K15       ; R4 := worldStateMovie
 52 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 53 [-]: SETTABLE  R1 K16 R2    ; R1["Movie"] := R2
 54 [-]: GETGLOBAL R1 K4        ; R1 := 0x400E7765
 55 [-]: GETUPVAL  R2 U0        ; R2 := U0
 56 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["Movie"]
 57 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 58 [-]: TEST      R1 0         ; if not R1 then PC := 66
 59 [-]: JMP       66           ; PC := 66
 60 [-]: GETUPVAL  R1 U0        ; R1 := U0
 61 [-]: GETGLOBAL R2 K17       ; R2 := gFlashMgr
 62 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2["0x24FF386"]
 63 [-]: GETGLOBAL R4 K15       ; R4 := worldStateMovie
 64 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 65 [-]: SETTABLE  R1 K16 R2    ; R1["Movie"] := R2
 66 [-]: GETGLOBAL R1 K2        ; R1 := _T
 67 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["MAP_HideExtraUI"]
 68 [-]: TEST      R1 0         ; if not R1 then PC := 77
 69 [-]: JMP       77           ; PC := 77
 70 [-]: GETUPVAL  R1 U0        ; R1 := U0
 71 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["Movie"]
 72 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x1C19D966"]
 73 [-]: LOADK     R3 K22       ; R3 := "_root"
 74 [-]: LOADK     R4 K23       ; R4 := "_visible"
 75 [-]: MOVE      R5 R0        ; R5 := R0
 76 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 77 [-]: GETUPVAL  R1 U1        ; R1 := U1
 78 [-]: GETTABLE  R1 R1 K24    ; R1 := R1["0x5B8EB241"]
 79 [-]: CALL      R1 1 2       ; R1 := R1()
 80 [-]: TEST      R1 0         ; if not R1 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETGLOBAL R2 K25       ; R2 := gPlayerProfileMgr
 83 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0x21EF7B1A"]
 84 [-]: LOADK     R4 K27       ; R4 := 0
 85 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 86 [-]: SELF      R3 R2 K28    ; R4 := R2; R3 := R2["0x3EEB612E"]
 87 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 88 [-]: SELF      R4 R3 K29    ; R5 := R3; R4 := R3["0xDEFFE28B"]
 89 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 90 [-]: MOVE      R1 R4        ; R1 := R4
 91 [-]: GETGLOBAL R4 K30       ; R4 := mMovie
 92 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x5FF274BB"]
 93 [-]: GETGLOBAL R6 K32       ; R6 := episodeStatusMovie
 94 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 95 [-]: MOVE      R4 R2        ; R4 := R2
 96 [-]: GETGLOBAL R4 K2        ; R4 := _T
 97 [-]: MOVE      R5 R1        ; R5 := R1
 98 [-]: SETTABLE  R4 K33 R5    ; R4["ResourceDroneVisible"] := R5
 99 [-]: GETGLOBAL R4 K30       ; R4 := mMovie
100 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x5FF274BB"]
101 [-]: GETGLOBAL R6 K34       ; R6 := resourceDroneMovie
102 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
103 [-]: MOVE      R4 R3        ; R4 := R3
104 [-]: GETUPVAL  R4 U3        ; R4 := U3
105 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4["0x458F27A9"]
106 [-]: LOADK     R6 K35       ; R6 := "OnRegionZoomOut"
107 [-]: LOADK     R7 K14       ; R7 := ""
108 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
109 [-]: GETGLOBAL R4 K17       ; R4 := gFlashMgr
110 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0xC4E70543"]
111 [-]: CALL      R4 2 1       ; R4(R5)
112 [-]: GETUPVAL  R4 U4        ; R4 := U4
113 [-]: CALL      R4 1 1       ; R4()
114 [-]: GETUPVAL  R4 U5        ; R4 := U5
115 [-]: CALL      R4 1 1       ; R4()
116 [-]: GETUPVAL  R4 U6        ; R4 := U6
117 [-]: CALL      R4 1 1       ; R4()
118 [-]: GETUPVAL  R4 U7        ; R4 := U7
119 [-]: CALL      R4 1 1       ; R4()
120 [-]: GETUPVAL  R4 U8        ; R4 := U8
121 [-]: CALL      R4 1 1       ; R4()
122 [-]: GETUPVAL  R4 U9        ; R4 := U9
123 [-]: CALL      R4 1 1       ; R4()
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: CALL      R4 1 1       ; R4()
126 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 4252
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 4256
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xEC183DDC"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["pos"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0["0x5097FD8C"]
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["rotation"]
 16 [-]: CALL      R0 3 1       ; R0(R1,R2)
 17 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 4270
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: MOVE      R4 R2        ; R4 := R2
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0xDBA27FAF
  3 [-]: MOVE      R6 R4        ; R6 := R4
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  6 [-]: EQ        0 R5 K1      ; if R5 ~= 0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R6 K2        ; R6 := 0x221C9700
  9 [-]: TAILCALL  R6 1 0       ; R6,... := R6()
 10 [-]: RETURN    R6 0         ; return R6,...
 11 [-]: GETGLOBAL R6 K0        ; R6 := 0xDBA27FAF
 12 [-]: MOVE      R7 R4        ; R7 := R4
 13 [-]: MOVE      R8 R0        ; R8 := R0
 14 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 15 [-]: SUB       R6 R3 R6     ; R6 := R3 - R6
 16 [-]: DIV       R6 R6 R5     ; R6 := R6 / R5
 17 [-]: MUL       R7 R1 R6     ; R7 := R1 * R6
 18 [-]: ADD       R7 R0 R7     ; R7 := R0 + R7
 19 [-]: RETURN    R7 2         ; return R7
 20 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 4283
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
  4 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  5 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x221C9700
  9 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
 10 [-]: RETURN    R0 0         ; return R0,...
 11 [-]: GETGLOBAL R0 K1        ; R0 := mMovie
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x7F595CA7"]
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: GETGLOBAL R1 K5        ; R1 := 0x458357BC
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 18 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7C1F5A97"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x6DA72501"]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: GETGLOBAL R5 K3        ; R5 := 0x221C9700
 26 [-]: LOADK     R6 K7        ; R6 := 0
 27 [-]: LOADK     R7 K7        ; R7 := 0
 28 [-]: LOADK     R8 K8        ; R8 := 1
 29 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 30 [-]: LOADK     R6 K7        ; R6 := 0
 31 [-]: TAILCALL  R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 32 [-]: RETURN    R2 0         ; return R2,...
 33 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 4293
; #Upvalues:       13
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  40

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x221C9700
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x7F595CA7"]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x458357BC
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 1       ; R2(R3)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Region"]
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: SETTABLE  R3 K4 K5     ; R3["Region"] := nil
 13 [-]: LOADK     R3 K6        ; R3 := 500
 14 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 15 [-]: GETGLOBAL R6 K0        ; R6 := 0x221C9700
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: GETGLOBAL R7 K0        ; R7 := 0x221C9700
 18 [-]: CALL      R7 1 2       ; R7 := R7()
 19 [-]: LOADK     R8 K7        ; R8 := 0
 20 [-]: LOADK     R9 K7        ; R9 := 0
 21 [-]: MOVE      R10 R0       ; R10 := R0
 22 [-]: GETGLOBAL R11 K0       ; R11 := 0x221C9700
 23 [-]: CALL      R11 1 2      ; R11 := R11()
 24 [-]: GETGLOBAL R12 K0       ; R12 := 0x221C9700
 25 [-]: CALL      R12 1 2      ; R12 := R12()
 26 [-]: LOADNIL   R13 R13      ; R13 := nil
 27 [-]: MOVE      R14 R0       ; R14 := R0
 28 [-]: LOADK     R15 K6       ; R15 := 500
 29 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
 30 [-]: CALL      R16 1 2      ; R16 := R16()
 31 [-]: GETGLOBAL R17 K8       ; R17 := 0x400E7765
 32 [-]: GETGLOBAL R18 K9       ; R18 := gBackgroundRegion
 33 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 34 [-]: TEST      R17 1        ; if R17 then PC := 159
 35 [-]: JMP       159          ; PC := 159
 36 [-]: GETGLOBAL R17 K10      ; R17 := _T
 37 [-]: GETTABLE  R17 R17 K11  ; R17 := R17["MouseInWorldStateWindow"]
 38 [-]: TEST      R17 1        ; if R17 then PC := 159
 39 [-]: JMP       159          ; PC := 159
 40 [-]: GETGLOBAL R17 K10      ; R17 := _T
 41 [-]: GETTABLE  R17 R17 K12  ; R17 := R17["MouseInChatArea"]
 42 [-]: TEST      R17 1        ; if R17 then PC := 159
 43 [-]: JMP       159          ; PC := 159
 44 [-]: GETGLOBAL R17 K9       ; R17 := gBackgroundRegion
 45 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17["0xF7C1BE25"]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17["0x8EEB099D"]
 48 [-]: MOVE      R19 R11      ; R19 := R11
 49 [-]: CALL      R17 3 1      ; R17(R18,R19)
 50 [-]: LOADK     R17 K15      ; R17 := 1
 51 [-]: GETUPVAL  R18 U1       ; R18 := U1
 52 [-]: LEN       R18 R18      ; R18 := # R18
 53 [-]: LOADK     R19 K15      ; R19 := 1
 54 [-]: FORPREP   R17 158      ; R17 -= R19; PC := 158
 55 [-]: GETUPVAL  R21 U1       ; R21 := U1
 56 [-]: GETTABLE  R5 R21 R20   ; R5 := R21[R20]
 57 [-]: GETUPVAL  R21 U2       ; R21 := U2
 58 [-]: GETTABLE  R13 R21 R20  ; R13 := R21[R20]
 59 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
 60 [-]: MOVE      R22 R13      ; R22 := R13
 61 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 62 [-]: TEST      R21 1        ; if R21 then PC := 158
 63 [-]: JMP       158          ; PC := 158
 64 [-]: SELF      R21 R13 K14  ; R22 := R13; R21 := R13["0x8EEB099D"]
 65 [-]: MOVE      R23 R12      ; R23 := R12
 66 [-]: CALL      R21 3 1      ; R21(R22,R23)
 67 [-]: GETGLOBAL R21 K16      ; R21 := 0x518098BD
 68 [-]: MOVE      R22 R6       ; R22 := R6
 69 [-]: MOVE      R23 R12      ; R23 := R12
 70 [-]: MOVE      R24 R11      ; R24 := R11
 71 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
 72 [-]: GETUPVAL  R21 U3       ; R21 := U3
 73 [-]: GETTABLE  R9 R21 R20   ; R9 := R21[R20]
 74 [-]: GETUPVAL  R21 U4       ; R21 := U4
 75 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["IsVisible"]
 76 [-]: TEST      R21 0        ; if not R21 then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: ADD       R9 R9 K18    ; R9 := R9 + 0.20000000298023
 79 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
 80 [-]: SELF      R21 R21 K19  ; R22 := R21; R21 := R21["0xECAA969E"]
 81 [-]: MOVE      R23 R7       ; R23 := R7
 82 [-]: MOVE      R24 R0       ; R24 := R0
 83 [-]: MOVE      R25 R1       ; R25 := R1
 84 [-]: MOVE      R26 R6       ; R26 := R6
 85 [-]: MOVE      R27 R9       ; R27 := R9
 86 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
 87 [-]: MOVE      R10 R21      ; R10 := R21
 88 [-]: TEST      R10 0        ; if not R10 then PC := 99
 89 [-]: JMP       99           ; PC := 99
 90 [-]: GETGLOBAL R21 K20      ; R21 := 0x218C5C62
 91 [-]: MOVE      R22 R7       ; R22 := R7
 92 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 93 [-]: LT        0 R21 R3     ; if R21 >= R3 then PC := 99
 94 [-]: JMP       99           ; PC := 99
 95 [-]: GETUPVAL  R21 U5       ; R21 := U5
 96 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
 97 [-]: TEST      R21 0        ; if not R21 then PC := 103
 98 [-]: JMP       103          ; PC := 103
 99 [-]: GETUPVAL  R21 U0       ; R21 := U0
100 [-]: GETTABLE  R21 R21 K21  ; R21 := R21["RegionLabel"]
101 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 119
102 [-]: JMP       119          ; PC := 119
103 [-]: MOVE      R4 R7        ; R4 := R7
104 [-]: GETUPVAL  R21 U0       ; R21 := U0
105 [-]: GETTABLE  R21 R21 K21  ; R21 := R21["RegionLabel"]
106 [-]: EQ        0 R21 R20    ; if R21 ~= R20 then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: LOADK     R3 K7        ; R3 := 0
109 [-]: JMP       114          ; PC := 114
110 [-]: GETGLOBAL R21 K20      ; R21 := 0x218C5C62
111 [-]: MOVE      R22 R7       ; R22 := R7
112 [-]: CALL      R21 2 2      ; R21 := R21(R22)
113 [-]: MOVE      R3 R21       ; R3 := R21
114 [-]: GETUPVAL  R21 U0       ; R21 := U0
115 [-]: GETUPVAL  R22 U1       ; R22 := U1
116 [-]: GETTABLE  R22 R22 R20  ; R22 := R22[R20]
117 [-]: SETTABLE  R21 K4 R22   ; R21["Region"] := R22
118 [-]: MOVE      R8 R20       ; R8 := R20
119 [-]: GETUPVAL  R21 U6       ; R21 := U6
120 [-]: GETTABLE  R21 R21 K22  ; R21 := R21["mTargetVal"]
121 [-]: GETUPVAL  R22 U7       ; R22 := U7
122 [-]: GETTABLE  R22 R22 K23  ; R22 := R22["ZOOM_OUT_THRESHOLD"]
123 [-]: LT        0 R22 R21    ; if R22 >= R21 then PC := 158
124 [-]: JMP       158          ; PC := 158
125 [-]: GETUPVAL  R21 U4       ; R21 := U4
126 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["IsVisible"]
127 [-]: TEST      R21 1        ; if R21 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: ADD       R9 R9 K18    ; R9 := R9 + 0.20000000298023
130 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
131 [-]: SELF      R21 R21 K19  ; R22 := R21; R21 := R21["0xECAA969E"]
132 [-]: MOVE      R23 R16      ; R23 := R16
133 [-]: MOVE      R24 R0       ; R24 := R0
134 [-]: GETUPVAL  R25 U8       ; R25 := U8
135 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["CAMERA_FOCUS_DIR"]
136 [-]: MOVE      R26 R6       ; R26 := R6
137 [-]: MOVE      R27 R9       ; R27 := R9
138 [-]: CALL      R21 7 2      ; R21 := R21(R22,R23,R24,R25,R26,R27)
139 [-]: MOVE      R14 R21      ; R14 := R21
140 [-]: TEST      R14 0        ; if not R14 then PC := 158
141 [-]: JMP       158          ; PC := 158
142 [-]: GETGLOBAL R21 K20      ; R21 := 0x218C5C62
143 [-]: MOVE      R22 R16      ; R22 := R16
144 [-]: CALL      R21 2 2      ; R21 := R21(R22)
145 [-]: LT        0 R21 R15    ; if R21 >= R15 then PC := 158
146 [-]: JMP       158          ; PC := 158
147 [-]: GETUPVAL  R21 U5       ; R21 := U5
148 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
149 [-]: TEST      R21 1        ; if R21 then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETGLOBAL R21 K20      ; R21 := 0x218C5C62
152 [-]: MOVE      R22 R16      ; R22 := R16
153 [-]: CALL      R21 2 2      ; R21 := R21(R22)
154 [-]: MOVE      R15 R21      ; R15 := R21
155 [-]: GETUPVAL  R21 U1       ; R21 := U1
156 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
157 [-]: MOVE      R21 R9       ; R21 := R9
158 [-]: FORLOOP   R17 55       ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
159 [-]: GETUPVAL  R21 U6       ; R21 := U6
160 [-]: GETTABLE  R21 R21 K25  ; R21 := R21["mCurVal"]
161 [-]: LT        0 K26 R21    ; if -2 >= R21 then PC := 165
162 [-]: JMP       165          ; PC := 165
163 [-]: GETUPVAL  R21 U0       ; R21 := U0
164 [-]: SETTABLE  R21 K4 K5    ; R21["Region"] := nil
165 [-]: GETUPVAL  R21 U0       ; R21 := U0
166 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
167 [-]: EQ        1 R2 R21     ; if R2 == R21 then PC := 321
168 [-]: JMP       321          ; PC := 321
169 [-]: GETUPVAL  R21 U0       ; R21 := U0
170 [-]: GETTABLE  R21 R21 K4   ; R21 := R21["Region"]
171 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 263
172 [-]: JMP       263          ; PC := 263
173 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
174 [-]: GETUPVAL  R22 U0       ; R22 := U0
175 [-]: GETTABLE  R22 R22 K4   ; R22 := R22["Region"]
176 [-]: GETTABLE  R22 R22 K27  ; R22 := R22["instance"]
177 [-]: CALL      R21 2 2      ; R21 := R21(R22)
178 [-]: TEST      R21 1        ; if R21 then PC := 263
179 [-]: JMP       263          ; PC := 263
180 [-]: GETUPVAL  R21 U10      ; R21 := U10
181 [-]: GETTABLE  R21 R21 K28  ; R21 := R21["0x25992394"]
182 [-]: GETGLOBAL R22 K29      ; R22 := rollOverRegionSound
183 [-]: CALL      R21 2 1      ; R21(R22)
184 [-]: GETUPVAL  R21 U3       ; R21 := U3
185 [-]: GETTABLE  R21 R21 R8   ; R21 := R21[R8]
186 [-]: GETUPVAL  R22 U11      ; R22 := U11
187 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
188 [-]: EQ        0 R22 K5     ; if R22 ~= nil then PC := 193
189 [-]: JMP       193          ; PC := 193
190 [-]: GETUPVAL  R22 U11      ; R22 := U11
191 [-]: NEWTABLE  R23 0 0      ; R23 := {}
192 [-]: SETTABLE  R22 R8 R23   ; R22[R8] := R23
193 [-]: EQ        1 R21 K5     ; if R21 == nil then PC := 262
194 [-]: JMP       262          ; PC := 262
195 [-]: GETUPVAL  R22 U11      ; R22 := U11
196 [-]: GETTABLE  R22 R22 R8   ; R22 := R22[R8]
197 [-]: GETGLOBAL R23 K8       ; R23 := 0x400E7765
198 [-]: GETTABLE  R24 R22 K15  ; R24 := R22[1]
199 [-]: CALL      R23 2 2      ; R23 := R23(R24)
200 [-]: TEST      R23 0        ; if not R23 then PC := 214
201 [-]: JMP       214          ; PC := 214
202 [-]: GETGLOBAL R23 K9       ; R23 := gBackgroundRegion
203 [-]: SELF      R23 R23 K30  ; R24 := R23; R23 := R23["0xBDD34CC6"]
204 [-]: GETGLOBAL R25 K31      ; R25 := hoverRing
205 [-]: GETUPVAL  R26 U0       ; R26 := U0
206 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Region"]
207 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["instance"]
208 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26["0x6DA72501"]
209 [-]: CALL      R26 2 2      ; R26 := R26(R27)
210 [-]: GETUPVAL  R27 U8       ; R27 := U8
211 [-]: GETTABLE  R27 R27 K33  ; R27 := R27["RING_ROTATION"]
212 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
213 [-]: SETTABLE  R22 K15 R23  ; R22[1] := R23
214 [-]: GETGLOBAL R23 K8       ; R23 := 0x400E7765
215 [-]: GETTABLE  R24 R22 K34  ; R24 := R22[2]
216 [-]: CALL      R23 2 2      ; R23 := R23(R24)
217 [-]: TEST      R23 0        ; if not R23 then PC := 240
218 [-]: JMP       240          ; PC := 240
219 [-]: GETGLOBAL R23 K9       ; R23 := gBackgroundRegion
220 [-]: SELF      R23 R23 K30  ; R24 := R23; R23 := R23["0xBDD34CC6"]
221 [-]: GETGLOBAL R25 K31      ; R25 := hoverRing
222 [-]: GETUPVAL  R26 U0       ; R26 := U0
223 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["Region"]
224 [-]: GETTABLE  R26 R26 K27  ; R26 := R26["instance"]
225 [-]: SELF      R26 R26 K32  ; R27 := R26; R26 := R26["0x6DA72501"]
226 [-]: CALL      R26 2 2      ; R26 := R26(R27)
227 [-]: GETUPVAL  R27 U8       ; R27 := U8
228 [-]: GETTABLE  R27 R27 K33  ; R27 := R27["RING_ROTATION"]
229 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
230 [-]: SETTABLE  R22 K34 R23  ; R22[2] := R23
231 [-]: GETTABLE  R23 R22 K34  ; R23 := R22[2]
232 [-]: SELF      R23 R23 K35  ; R24 := R23; R23 := R23["0xA20F64C0"]
233 [-]: GETGLOBAL R25 K36      ; R25 := 0xB5A59043
234 [-]: LOADK     R26 K37      ; R26 := 255
235 [-]: LOADK     R27 K37      ; R27 := 255
236 [-]: LOADK     R28 K37      ; R28 := 255
237 [-]: LOADK     R29 K38      ; R29 := 150
238 [-]: CALL      R25 5 0      ; R25,... := R25(R26,R27,R28,R29)
239 [-]: CALL      R23 0 1      ; R23(R24,...)
240 [-]: GETTABLE  R23 R22 K15  ; R23 := R22[1]
241 [-]: GETTABLE  R24 R22 K34  ; R24 := R22[2]
242 [-]: CLOSURE   R25 0        ; R25 := closure(Function #112.1)
243 [-]: MOVE      R0 R23       ; R0 := R23
244 [-]: MOVE      R0 R21       ; R0 := R21
245 [-]: MOVE      R0 R24       ; R0 := R24
246 [-]: GETGLOBAL R26 K39      ; R26 := 0x52E17A90
247 [-]: GETGLOBAL R27 K1       ; R27 := mMovie
248 [-]: GETUPVAL  R28 U12      ; R28 := U12
249 [-]: GETTABLE  R28 R28 R8   ; R28 := R28[R8]
250 [-]: GETTABLE  R28 R28 K40  ; R28 := R28["clipName"]
251 [-]: GETGLOBAL R29 K41      ; R29 := UISys
252 [-]: GETTABLE  R29 R29 K42  ; R29 := R29["FlashInstance_EASE_OUT"]
253 [-]: NEWTABLE  R30 1 0      ; R30 := {}
254 [-]: MOVE      R31 R25      ; R31 := R25
255 [-]: SETLIST   R30 1 1      ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
256 [-]: NEWTABLE  R31 1 0      ; R31 := {}
257 [-]: LOADK     R32 K15      ; R32 := 1
258 [-]: SETLIST   R31 1 1      ; R31[(1-1)*FPF+i] := R(31+i), 1 <= i <= 1
259 [-]: LOADK     R32 K43      ; R32 := 0.25
260 [-]: CALL      R26 7 1      ; R26(R27,R28,R29,R30,R31,R32)
261 [-]: CLOSE     R22          ; SAVE R22,...
262 [-]: CLOSE     R21          ; SAVE R21,...
263 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 321
264 [-]: JMP       321          ; PC := 321
265 [-]: GETGLOBAL R21 K8       ; R21 := 0x400E7765
266 [-]: GETTABLE  R22 R2 K27   ; R22 := R2["instance"]
267 [-]: CALL      R21 2 2      ; R21 := R21(R22)
268 [-]: TEST      R21 1        ; if R21 then PC := 321
269 [-]: JMP       321          ; PC := 321
270 [-]: LOADK     R21 K7       ; R21 := 0
271 [-]: LOADK     R22 K15      ; R22 := 1
272 [-]: GETUPVAL  R23 U1       ; R23 := U1
273 [-]: LEN       R23 R23      ; R23 := # R23
274 [-]: LOADK     R24 K15      ; R24 := 1
275 [-]: FORPREP   R22 282      ; R22 -= R24; PC := 282
276 [-]: GETUPVAL  R26 U1       ; R26 := U1
277 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
278 [-]: EQ        0 R26 R2     ; if R26 ~= R2 then PC := 282
279 [-]: JMP       282          ; PC := 282
280 [-]: MOVE      R21 R25      ; R21 := R25
281 [-]: JMP       283          ; PC := 283
282 [-]: FORLOOP   R22 276      ; R22 += R24; if R22 <= R23 then begin PC := 276; R25 := R22 end
283 [-]: GETUPVAL  R26 U3       ; R26 := U3
284 [-]: GETTABLE  R26 R26 R21  ; R26 := R26[R21]
285 [-]: EQ        1 R26 K5     ; if R26 == nil then PC := 320
286 [-]: JMP       320          ; PC := 320
287 [-]: GETGLOBAL R27 K8       ; R27 := 0x400E7765
288 [-]: GETTABLE  R28 R2 K27   ; R28 := R2["instance"]
289 [-]: CALL      R27 2 2      ; R27 := R27(R28)
290 [-]: TEST      R27 1        ; if R27 then PC := 320
291 [-]: JMP       320          ; PC := 320
292 [-]: GETUPVAL  R27 U11      ; R27 := U11
293 [-]: GETTABLE  R27 R27 R21  ; R27 := R27[R21]
294 [-]: GETTABLE  R28 R27 K15  ; R28 := R27[1]
295 [-]: GETTABLE  R29 R27 K34  ; R29 := R27[2]
296 [-]: CLOSURE   R30 1        ; R30 := closure(Function #112.2)
297 [-]: MOVE      R0 R28       ; R0 := R28
298 [-]: MOVE      R0 R26       ; R0 := R26
299 [-]: MOVE      R0 R29       ; R0 := R29
300 [-]: GETGLOBAL R31 K39      ; R31 := 0x52E17A90
301 [-]: GETGLOBAL R32 K1       ; R32 := mMovie
302 [-]: GETUPVAL  R33 U12      ; R33 := U12
303 [-]: GETTABLE  R33 R33 R21  ; R33 := R33[R21]
304 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["clipName"]
305 [-]: GETGLOBAL R34 K41      ; R34 := UISys
306 [-]: GETTABLE  R34 R34 K44  ; R34 := R34["FlashInstance_EASE_IN"]
307 [-]: NEWTABLE  R35 1 0      ; R35 := {}
308 [-]: MOVE      R36 R30      ; R36 := R30
309 [-]: SETLIST   R35 1 1      ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
310 [-]: NEWTABLE  R36 1 0      ; R36 := {}
311 [-]: LOADK     R37 K15      ; R37 := 1
312 [-]: SETLIST   R36 1 1      ; R36[(1-1)*FPF+i] := R(36+i), 1 <= i <= 1
313 [-]: LOADK     R37 K45      ; R37 := 0.15000000596046
314 [-]: LOADK     R38 K7       ; R38 := 0
315 [-]: CLOSURE   R39 2        ; R39 := closure(Function #112.3)
316 [-]: MOVE      R0 R28       ; R0 := R28
317 [-]: MOVE      R0 R29       ; R0 := R29
318 [-]: CALL      R31 9 1      ; R31(R32,R33,R34,R35,R36,R37,R38,R39)
319 [-]: CLOSE     R27          ; SAVE R27,...
320 [-]: CLOSE     R21          ; SAVE R21,...
321 [-]: RETURN    R4 2         ; return R4
322 [-]: RETURN    R0 1         ; return 


; Function #112.1:
;
; Name:            
; Defined at line: 4389
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K1        ; R1 := math
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["0x8B011038"]
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: ADD       R2 R2 K3     ; R2 := R2 + 0.15000000596046
 10 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 11 [-]: LOADK     R3 K4        ; R3 := 0.0099999997764826
 12 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2["0x9F133E77"]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 19 [-]: GETUPVAL  R3 U2        ; R3 := U2
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R2 K1        ; R2 := math
 24 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["0x8B011038"]
 25 [-]: GETUPVAL  R3 U1        ; R3 := U1
 26 [-]: ADD       R3 R3 K6     ; R3 := R3 + 0.34999999403954
 27 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 28 [-]: LOADK     R4 K4        ; R4 := 0.0099999997764826
 29 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 30 [-]: GETUPVAL  R3 U2        ; R3 := U2
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3["0x9F133E77"]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R2        ; R6 := R2
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: RETURN    R0 1         ; return 


; Function #112.2:
;
; Name:            
; Defined at line: 4421
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SUB       R0 K0 R0     ; R0 := 1 - R0
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R1 K2        ; R1 := math
  8 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["0x8B011038"]
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: ADD       R2 R2 K4     ; R2 := R2 + 0.15000000596046
 11 [-]: MUL       R2 R2 R0     ; R2 := R2 * R0
 12 [-]: LOADK     R3 K5        ; R3 := 0.0099999997764826
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9F133E77"]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R2 K2        ; R2 := math
 25 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["0x8B011038"]
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: ADD       R3 R3 K7     ; R3 := R3 + 0.34999999403954
 28 [-]: MUL       R3 R3 R0     ; R3 := R3 * R0
 29 [-]: LOADK     R4 K5        ; R4 := 0.0099999997764826
 30 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3["0x9F133E77"]
 33 [-]: MOVE      R5 R2        ; R5 := R2
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: RETURN    R0 1         ; return 


; Function #112.3:
;
; Name:            
; Defined at line: 4434
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R0 3 1       ; R0(R1,R2)
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R0 K1        ; R0 := gBackgroundRegion
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x9B0A3887"]
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: CALL      R0 3 1       ; R0(R1,R2)
 19 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 4449
; #Upvalues:       37
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  87

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["EDIT_REGIONS"]
  4 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 83
  5 [-]: JMP       83           ; PC := 83
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x400E7765
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mMovingRegion"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 83
 11 [-]: JMP       83           ; PC := 83
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U2        ; R1 := U2
 15 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInitialWorldCursor"]
 16 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 17 [-]: GETUPVAL  R2 U2        ; R2 := U2
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mInitialPosition"]
 19 [-]: ADD       R2 R2 R1     ; R2 := R2 + R1
 20 [-]: SETTABLE  R2 K5 K6     ; R2["z"] := 0
 21 [-]: GETUPVAL  R3 U2        ; R3 := U2
 22 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mMovingRegion"]
 23 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["instance"]
 24 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3["0xEC183DDC"]
 25 [-]: MOVE      R5 R2        ; R5 := R2
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x2F74E23B"]
 29 [-]: GETUPVAL  R5 U2        ; R5 := U2
 30 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mMovingRegion"]
 31 [-]: MOVE      R6 R2        ; R6 := R2
 32 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 33 [-]: LOADNIL   R3 R3        ; R3 := nil
 34 [-]: GETGLOBAL R4 K10       ; R4 := 0x63B09107
 35 [-]: GETUPVAL  R5 U2        ; R5 := U2
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["mChildNodes"]
 37 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 38 [-]: JMP       70           ; PC := 70
 39 [-]: GETUPVAL  R9 U5        ; R9 := U5
 40 [-]: GETTABLE  R10 R8 K12   ; R10 := R8["NodeIndex"]
 41 [-]: GETTABLE  R3 R9 R10    ; R3 := R9[R10]
 42 [-]: GETTABLE  R9 R8 K13    ; R9 := R8["InitialPosition"]
 43 [-]: ADD       R2 R9 R1     ; R2 := R9 + R1
 44 [-]: SETTABLE  R3 K14 R2    ; R3["position"] := R2
 45 [-]: GETUPVAL  R9 U6        ; R9 := U6
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R3 K15 R9    ; R3["isSurfaceNode"] := R9
 49 [-]: GETUPVAL  R9 U4        ; R9 := U4
 50 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9["0xDD4FB1D0"]
 51 [-]: GETTABLE  R11 R3 K17   ; R11 := R3["radialSector"]
 52 [-]: MOVE      R12 R2       ; R12 := R2
 53 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 54 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 55 [-]: EQ        1 R9 K19     ; if R9 == nil then PC := 70
 56 [-]: JMP       70           ; PC := 70
 57 [-]: GETGLOBAL R9 K1        ; R9 := 0x400E7765
 58 [-]: GETTABLE  R10 R3 K18   ; R10 := R3["deco"]
 59 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["mInstance"]
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: TEST      R9 1         ; if R9 then PC := 70
 62 [-]: JMP       70           ; PC := 70
 63 [-]: GETTABLE  R9 R3 K18    ; R9 := R3["deco"]
 64 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mInstance"]
 65 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9["0xEC183DDC"]
 66 [-]: GETTABLE  R11 R3 K18   ; R11 := R3["deco"]
 67 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["mOffset"]
 68 [-]: ADD       R11 R2 R11   ; R11 := R2 + R11
 69 [-]: CALL      R9 3 1       ; R9(R10,R11)
 70 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
 71 [-]: JMP       39           ; PC := 39
 72 [-]: LOADK     R9 K22       ; R9 := 1
 73 [-]: GETUPVAL  R10 U7       ; R10 := U7
 74 [-]: LEN       R10 R10      ; R10 := # R10
 75 [-]: LOADK     R11 K22      ; R11 := 1
 76 [-]: FORPREP   R9 81        ; R9 -= R11; PC := 81
 77 [-]: GETUPVAL  R13 U8       ; R13 := U8
 78 [-]: GETUPVAL  R14 U7       ; R14 := U7
 79 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
 80 [-]: CALL      R13 2 1      ; R13(R14)
 81 [-]: FORLOOP   R9 77        ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
 82 [-]: RETURN    R0 1         ; return 
 83 [-]: GETUPVAL  R13 U0       ; R13 := U0
 84 [-]: GETUPVAL  R14 U1       ; R14 := U1
 85 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["EDIT_NODES"]
 86 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 184
 87 [-]: JMP       184          ; PC := 184
 88 [-]: GETGLOBAL R13 K1       ; R13 := 0x400E7765
 89 [-]: GETUPVAL  R14 U2       ; R14 := U2
 90 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["mMovingNode"]
 91 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 92 [-]: TEST      R13 1        ; if R13 then PC := 184
 93 [-]: JMP       184          ; PC := 184
 94 [-]: GETUPVAL  R13 U9       ; R13 := U9
 95 [-]: CALL      R13 1 2      ; R13 := R13()
 96 [-]: EQ        1 R13 K19    ; if R13 == nil then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: EQ        0 R13 K25    ; if R13 ~= "0x0" then PC := 129
 99 [-]: JMP       129          ; PC := 129
100 [-]: GETUPVAL  R14 U3       ; R14 := U3
101 [-]: CALL      R14 1 2      ; R14 := R14()
102 [-]: LOADNIL   R15 R15      ; R15 := nil
103 [-]: GETUPVAL  R16 U10      ; R16 := U10
104 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["mShiftDown"]
105 [-]: TEST      R16 0        ; if not R16 then PC := 122
106 [-]: JMP       122          ; PC := 122
107 [-]: GETUPVAL  R16 U11      ; R16 := U11
108 [-]: CALL      R16 1 2      ; R16 := R16()
109 [-]: GETTABLE  R17 R16 K27  ; R17 := R16["y"]
110 [-]: GETUPVAL  R18 U2       ; R18 := U2
111 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["mInitialMousePosition"]
112 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["y"]
113 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
114 [-]: GETGLOBAL R18 K29      ; R18 := 0x221C9700
115 [-]: LOADK     R19 K6       ; R19 := 0
116 [-]: LOADK     R20 K6       ; R20 := 0
117 [-]: UNM       R21 R17      ; R21 := - R17
118 [-]: DIV       R21 R21 K30  ; R21 := R21 / 500
119 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
120 [-]: MOVE      R15 R18      ; R15 := R18
121 [-]: JMP       125          ; PC := 125
122 [-]: GETUPVAL  R18 U2       ; R18 := U2
123 [-]: GETTABLE  R18 R18 K3   ; R18 := R18["mInitialWorldCursor"]
124 [-]: SUB       R15 R14 R18  ; R15 := R14 - R18
125 [-]: GETUPVAL  R18 U2       ; R18 := U2
126 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mInitialPosition"]
127 [-]: ADD       R13 R18 R15  ; R13 := R18 + R15
128 [-]: JMP       135          ; PC := 135
129 [-]: GETGLOBAL R18 K31      ; R18 := gBackgroundRegion
130 [-]: SELF      R18 R18 K32  ; R19 := R18; R18 := R18["0xF7C1BE25"]
131 [-]: CALL      R18 2 2      ; R18 := R18(R19)
132 [-]: SELF      R18 R18 K33  ; R19 := R18; R18 := R18["0x6DA72501"]
133 [-]: CALL      R18 2 2      ; R18 := R18(R19)
134 [-]: ADD       R13 R13 R18  ; R13 := R13 + R18
135 [-]: GETUPVAL  R19 U2       ; R19 := U2
136 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
137 [-]: SETTABLE  R19 K14 R13  ; R19["position"] := R13
138 [-]: GETUPVAL  R19 U2       ; R19 := U2
139 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
140 [-]: GETUPVAL  R20 U6       ; R20 := U6
141 [-]: GETUPVAL  R21 U2       ; R21 := U2
142 [-]: GETTABLE  R21 R21 K24  ; R21 := R21["mMovingNode"]
143 [-]: CALL      R20 2 2      ; R20 := R20(R21)
144 [-]: SETTABLE  R19 K15 R20  ; R19["isSurfaceNode"] := R20
145 [-]: GETUPVAL  R19 U2       ; R19 := U2
146 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mMovingNode"]
147 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["radialSector"]
148 [-]: GETTABLE  R19 R19 K34  ; R19 := R19["region"]
149 [-]: LOADK     R20 K22      ; R20 := 1
150 [-]: GETUPVAL  R21 U7       ; R21 := U7
151 [-]: LEN       R21 R21      ; R21 := # R21
152 [-]: LOADK     R22 K22      ; R22 := 1
153 [-]: FORPREP   R20 172      ; R20 -= R22; PC := 172
154 [-]: GETUPVAL  R24 U7       ; R24 := U7
155 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
156 [-]: GETTABLE  R24 R24 K35  ; R24 := R24["NodeA"]
157 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
158 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["region"]
159 [-]: EQ        1 R24 R19    ; if R24 == R19 then PC := 168
160 [-]: JMP       168          ; PC := 168
161 [-]: GETUPVAL  R24 U7       ; R24 := U7
162 [-]: GETTABLE  R24 R24 R23  ; R24 := R24[R23]
163 [-]: GETTABLE  R24 R24 K36  ; R24 := R24["NodeB"]
164 [-]: GETTABLE  R24 R24 K17  ; R24 := R24["radialSector"]
165 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["region"]
166 [-]: EQ        0 R24 R19    ; if R24 ~= R19 then PC := 172
167 [-]: JMP       172          ; PC := 172
168 [-]: GETUPVAL  R24 U8       ; R24 := U8
169 [-]: GETUPVAL  R25 U7       ; R25 := U7
170 [-]: GETTABLE  R25 R25 R23  ; R25 := R25[R23]
171 [-]: CALL      R24 2 1      ; R24(R25)
172 [-]: FORLOOP   R20 154      ; R20 += R22; if R20 <= R21 then begin PC := 154; R23 := R20 end
173 [-]: GETUPVAL  R24 U4       ; R24 := U4
174 [-]: SELF      R24 R24 K16  ; R25 := R24; R24 := R24["0xDD4FB1D0"]
175 [-]: GETUPVAL  R26 U2       ; R26 := U2
176 [-]: GETTABLE  R26 R26 K24  ; R26 := R26["mMovingNode"]
177 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["radialSector"]
178 [-]: MOVE      R27 R13      ; R27 := R13
179 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
180 [-]: GETUPVAL  R24 U12      ; R24 := U12
181 [-]: GETUPVAL  R25 U2       ; R25 := U2
182 [-]: GETTABLE  R25 R25 K24  ; R25 := R25["mMovingNode"]
183 [-]: CALL      R24 2 1      ; R24(R25)
184 [-]: GETUPVAL  R24 U0       ; R24 := U0
185 [-]: GETUPVAL  R25 U1       ; R25 := U1
186 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
187 [-]: EQ        0 R24 R25    ; if R24 ~= R25 then PC := 332
188 [-]: JMP       332          ; PC := 332
189 [-]: GETUPVAL  R24 U3       ; R24 := U3
190 [-]: CALL      R24 1 2      ; R24 := R24()
191 [-]: GETUPVAL  R25 U2       ; R25 := U2
192 [-]: GETTABLE  R25 R25 K38  ; R25 := R25["mControlPointHeld"]
193 [-]: TEST      R25 1        ; if R25 then PC := 273
194 [-]: JMP       273          ; PC := 273
195 [-]: GETUPVAL  R25 U2       ; R25 := U2
196 [-]: GETTABLE  R25 R25 K39  ; R25 := R25["mMovingControlPoint"]
197 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
198 [-]: LOADK     R29 K22      ; R29 := 1
199 [-]: GETUPVAL  R30 U7       ; R30 := U7
200 [-]: LEN       R30 R30      ; R30 := # R30
201 [-]: LOADK     R31 K22      ; R31 := 1
202 [-]: FORPREP   R29 238      ; R29 -= R31; PC := 238
203 [-]: GETUPVAL  R33 U7       ; R33 := U7
204 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
205 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["IsShortcut"]
206 [-]: TEST      R33 0        ; if not R33 then PC := 238
207 [-]: JMP       238          ; PC := 238
208 [-]: GETGLOBAL R33 K10      ; R33 := 0x63B09107
209 [-]: NEWTABLE  R34 2 0      ; R34 := {}
210 [-]: GETUPVAL  R35 U7       ; R35 := U7
211 [-]: GETTABLE  R35 R35 R32  ; R35 := R35[R32]
212 [-]: GETTABLE  R35 R35 K41  ; R35 := R35["controlPointA"]
213 [-]: GETUPVAL  R36 U7       ; R36 := U7
214 [-]: GETTABLE  R36 R36 R32  ; R36 := R36[R32]
215 [-]: GETTABLE  R36 R36 K42  ; R36 := R36["controlPointB"]
216 [-]: SETLIST   R34 2 1      ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
217 [-]: CALL      R33 2 4      ; R33,R34,R35 := R33(R34)
218 [-]: JMP       236          ; PC := 236
219 [-]: GETGLOBAL R38 K29      ; R38 := 0x221C9700
220 [-]: GETTABLE  R39 R37 K14  ; R39 := R37["position"]
221 [-]: GETTABLE  R39 R39 K43  ; R39 := R39["x"]
222 [-]: GETTABLE  R40 R37 K14  ; R40 := R37["position"]
223 [-]: GETTABLE  R40 R40 K27  ; R40 := R40["y"]
224 [-]: LOADK     R41 K6       ; R41 := 0
225 [-]: CALL      R38 4 2      ; R38 := R38(R39,R40,R41)
226 [-]: MOVE      R26 R38      ; R26 := R38
227 [-]: GETGLOBAL R38 K44      ; R38 := 0x218C5C62
228 [-]: SUB       R39 R26 R24  ; R39 := R26 - R24
229 [-]: CALL      R38 2 2      ; R38 := R38(R39)
230 [-]: LT        0 R38 K45    ; if R38 >= 0.10000000149012 then PC := 236
231 [-]: JMP       236          ; PC := 236
232 [-]: MOVE      R27 R37      ; R27 := R37
233 [-]: GETUPVAL  R38 U7       ; R38 := U7
234 [-]: GETTABLE  R28 R38 R32  ; R28 := R38[R32]
235 [-]: JMP       238          ; PC := 238
236 [-]: TFORLOOP  R33 2        ; R36,R37 :=  R33(R34,R35); if R36 ~= nil then begin PC = 219; R35 := R36 end
237 [-]: JMP       219          ; PC := 219
238 [-]: FORLOOP   R29 203      ; R29 += R31; if R29 <= R30 then begin PC := 203; R32 := R29 end
239 [-]: EQ        1 R25 R27    ; if R25 == R27 then PC := 273
240 [-]: JMP       273          ; PC := 273
241 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
242 [-]: MOVE      R39 R25      ; R39 := R25
243 [-]: CALL      R38 2 2      ; R38 := R38(R39)
244 [-]: TEST      R38 1        ; if R38 then PC := 255
245 [-]: JMP       255          ; PC := 255
246 [-]: GETTABLE  R38 R25 K46  ; R38 := R25["ringInstance"]
247 [-]: SELF      R38 R38 K47  ; R39 := R38; R38 := R38["0xA20F64C0"]
248 [-]: GETGLOBAL R40 K48      ; R40 := 0xB5A59043
249 [-]: LOADK     R41 K6       ; R41 := 0
250 [-]: LOADK     R42 K49      ; R42 := 255
251 [-]: LOADK     R43 K6       ; R43 := 0
252 [-]: LOADK     R44 K49      ; R44 := 255
253 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
254 [-]: CALL      R38 0 1      ; R38(R39,...)
255 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
256 [-]: MOVE      R39 R27      ; R39 := R27
257 [-]: CALL      R38 2 2      ; R38 := R38(R39)
258 [-]: TEST      R38 1        ; if R38 then PC := 269
259 [-]: JMP       269          ; PC := 269
260 [-]: GETTABLE  R38 R27 K46  ; R38 := R27["ringInstance"]
261 [-]: SELF      R38 R38 K47  ; R39 := R38; R38 := R38["0xA20F64C0"]
262 [-]: GETGLOBAL R40 K48      ; R40 := 0xB5A59043
263 [-]: LOADK     R41 K6       ; R41 := 0
264 [-]: LOADK     R42 K6       ; R42 := 0
265 [-]: LOADK     R43 K49      ; R43 := 255
266 [-]: LOADK     R44 K49      ; R44 := 255
267 [-]: CALL      R40 5 0      ; R40,... := R40(R41,R42,R43,R44)
268 [-]: CALL      R38 0 1      ; R38(R39,...)
269 [-]: GETUPVAL  R38 U2       ; R38 := U2
270 [-]: SETTABLE  R38 K39 R27  ; R38["mMovingControlPoint"] := R27
271 [-]: GETUPVAL  R38 U2       ; R38 := U2
272 [-]: SETTABLE  R38 K50 R28  ; R38["mEditingEdge"] := R28
273 [-]: GETGLOBAL R38 K1       ; R38 := 0x400E7765
274 [-]: GETUPVAL  R39 U2       ; R39 := U2
275 [-]: GETTABLE  R39 R39 K39  ; R39 := R39["mMovingControlPoint"]
276 [-]: CALL      R38 2 2      ; R38 := R38(R39)
277 [-]: TEST      R38 1        ; if R38 then PC := 332
278 [-]: JMP       332          ; PC := 332
279 [-]: GETUPVAL  R38 U2       ; R38 := U2
280 [-]: GETTABLE  R38 R38 K38  ; R38 := R38["mControlPointHeld"]
281 [-]: TEST      R38 0        ; if not R38 then PC := 332
282 [-]: JMP       332          ; PC := 332
283 [-]: GETUPVAL  R38 U2       ; R38 := U2
284 [-]: GETTABLE  R38 R38 K39  ; R38 := R38["mMovingControlPoint"]
285 [-]: GETTABLE  R38 R38 K14  ; R38 := R38["position"]
286 [-]: GETTABLE  R38 R38 K5   ; R38 := R38["z"]
287 [-]: GETUPVAL  R39 U2       ; R39 := U2
288 [-]: GETTABLE  R39 R39 K3   ; R39 := R39["mInitialWorldCursor"]
289 [-]: SUB       R39 R24 R39  ; R39 := R24 - R39
290 [-]: GETUPVAL  R40 U2       ; R40 := U2
291 [-]: GETTABLE  R40 R40 K4   ; R40 := R40["mInitialPosition"]
292 [-]: ADD       R40 R40 R39  ; R40 := R40 + R39
293 [-]: SETTABLE  R40 K5 R38   ; R40["z"] := R38
294 [-]: GETUPVAL  R41 U2       ; R41 := U2
295 [-]: GETTABLE  R41 R41 K39  ; R41 := R41["mMovingControlPoint"]
296 [-]: SETTABLE  R41 K14 R40  ; R41["position"] := R40
297 [-]: GETUPVAL  R41 U13      ; R41 := U13
298 [-]: GETUPVAL  R42 U2       ; R42 := U2
299 [-]: GETTABLE  R42 R42 K50  ; R42 := R42["mEditingEdge"]
300 [-]: CALL      R41 2 2      ; R41 := R41(R42)
301 [-]: GETUPVAL  R42 U2       ; R42 := U2
302 [-]: GETTABLE  R42 R42 K50  ; R42 := R42["mEditingEdge"]
303 [-]: GETTABLE  R42 R42 K51  ; R42 := R42["Instance"]
304 [-]: SELF      R42 R42 K52  ; R43 := R42; R42 := R42["0x5BD03F6B"]
305 [-]: MOVE      R44 R41      ; R44 := R41
306 [-]: CALL      R42 3 1      ; R42(R43,R44)
307 [-]: GETUPVAL  R42 U2       ; R42 := U2
308 [-]: GETTABLE  R42 R42 K39  ; R42 := R42["mMovingControlPoint"]
309 [-]: GETTABLE  R42 R42 K46  ; R42 := R42["ringInstance"]
310 [-]: SELF      R42 R42 K8   ; R43 := R42; R42 := R42["0xEC183DDC"]
311 [-]: MOVE      R44 R40      ; R44 := R40
312 [-]: CALL      R42 3 1      ; R42(R43,R44)
313 [-]: GETUPVAL  R42 U4       ; R42 := U4
314 [-]: SELF      R42 R42 K53  ; R43 := R42; R42 := R42["0x3D2B1A67"]
315 [-]: GETUPVAL  R44 U2       ; R44 := U2
316 [-]: GETTABLE  R44 R44 K50  ; R44 := R44["mEditingEdge"]
317 [-]: GETTABLE  R44 R44 K35  ; R44 := R44["NodeA"]
318 [-]: GETTABLE  R44 R44 K17  ; R44 := R44["radialSector"]
319 [-]: GETUPVAL  R45 U2       ; R45 := U2
320 [-]: GETTABLE  R45 R45 K50  ; R45 := R45["mEditingEdge"]
321 [-]: GETTABLE  R45 R45 K36  ; R45 := R45["NodeB"]
322 [-]: GETTABLE  R45 R45 K17  ; R45 := R45["radialSector"]
323 [-]: GETUPVAL  R46 U2       ; R46 := U2
324 [-]: GETTABLE  R46 R46 K50  ; R46 := R46["mEditingEdge"]
325 [-]: GETTABLE  R46 R46 K41  ; R46 := R46["controlPointA"]
326 [-]: GETTABLE  R46 R46 K14  ; R46 := R46["position"]
327 [-]: GETUPVAL  R47 U2       ; R47 := U2
328 [-]: GETTABLE  R47 R47 K50  ; R47 := R47["mEditingEdge"]
329 [-]: GETTABLE  R47 R47 K42  ; R47 := R47["controlPointB"]
330 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
331 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
332 [-]: GETUPVAL  R42 U0       ; R42 := U0
333 [-]: GETUPVAL  R43 U1       ; R43 := U1
334 [-]: GETTABLE  R43 R43 K54  ; R43 := R43["EDIT_NODE_DECOS"]
335 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 542
336 [-]: JMP       542          ; PC := 542
337 [-]: GETGLOBAL R42 K1       ; R42 := 0x400E7765
338 [-]: GETUPVAL  R43 U2       ; R43 := U2
339 [-]: GETTABLE  R43 R43 K24  ; R43 := R43["mMovingNode"]
340 [-]: CALL      R42 2 2      ; R42 := R42(R43)
341 [-]: TEST      R42 1        ; if R42 then PC := 542
342 [-]: JMP       542          ; PC := 542
343 [-]: GETUPVAL  R42 U2       ; R42 := U2
344 [-]: GETTABLE  R42 R42 K55  ; R42 := R42["mEditingOffset"]
345 [-]: TEST      R42 0        ; if not R42 then PC := 377
346 [-]: JMP       377          ; PC := 377
347 [-]: GETUPVAL  R42 U3       ; R42 := U3
348 [-]: CALL      R42 1 2      ; R42 := R42()
349 [-]: GETUPVAL  R43 U2       ; R43 := U2
350 [-]: GETTABLE  R43 R43 K3   ; R43 := R43["mInitialWorldCursor"]
351 [-]: SUB       R43 R42 R43  ; R43 := R42 - R43
352 [-]: GETUPVAL  R44 U2       ; R44 := U2
353 [-]: GETTABLE  R44 R44 K4   ; R44 := R44["mInitialPosition"]
354 [-]: ADD       R44 R44 R43  ; R44 := R44 + R43
355 [-]: GETUPVAL  R45 U2       ; R45 := U2
356 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
357 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
358 [-]: SETTABLE  R45 K21 R44  ; R45["mOffset"] := R44
359 [-]: GETUPVAL  R45 U2       ; R45 := U2
360 [-]: GETTABLE  R45 R45 K24  ; R45 := R45["mMovingNode"]
361 [-]: GETTABLE  R45 R45 K18  ; R45 := R45["deco"]
362 [-]: GETTABLE  R45 R45 K20  ; R45 := R45["mInstance"]
363 [-]: SELF      R45 R45 K8   ; R46 := R45; R45 := R45["0xEC183DDC"]
364 [-]: GETUPVAL  R47 U2       ; R47 := U2
365 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
366 [-]: GETTABLE  R47 R47 K14  ; R47 := R47["position"]
367 [-]: ADD       R47 R47 R44  ; R47 := R47 + R44
368 [-]: CALL      R45 3 1      ; R45(R46,R47)
369 [-]: GETUPVAL  R45 U4       ; R45 := U4
370 [-]: SELF      R45 R45 K56  ; R46 := R45; R45 := R45["0xEDBA7E36"]
371 [-]: GETUPVAL  R47 U2       ; R47 := U2
372 [-]: GETTABLE  R47 R47 K24  ; R47 := R47["mMovingNode"]
373 [-]: GETTABLE  R47 R47 K17  ; R47 := R47["radialSector"]
374 [-]: MOVE      R48 R44      ; R48 := R44
375 [-]: CALL      R45 4 1      ; R45(R46,R47,R48)
376 [-]: JMP       538          ; PC := 538
377 [-]: GETUPVAL  R45 U2       ; R45 := U2
378 [-]: GETTABLE  R45 R45 K57  ; R45 := R45["mEditingRotation"]
379 [-]: TEST      R45 0        ; if not R45 then PC := 466
380 [-]: JMP       466          ; PC := 466
381 [-]: GETUPVAL  R45 U11      ; R45 := U11
382 [-]: CALL      R45 1 2      ; R45 := R45()
383 [-]: GETTABLE  R46 R45 K43  ; R46 := R45["x"]
384 [-]: GETUPVAL  R47 U2       ; R47 := U2
385 [-]: GETTABLE  R47 R47 K28  ; R47 := R47["mInitialMousePosition"]
386 [-]: GETTABLE  R47 R47 K43  ; R47 := R47["x"]
387 [-]: SUB       R46 R46 R47  ; R46 := R46 - R47
388 [-]: GETTABLE  R47 R45 K27  ; R47 := R45["y"]
389 [-]: GETUPVAL  R48 U2       ; R48 := U2
390 [-]: GETTABLE  R48 R48 K28  ; R48 := R48["mInitialMousePosition"]
391 [-]: GETTABLE  R48 R48 K27  ; R48 := R48["y"]
392 [-]: SUB       R47 R47 R48  ; R47 := R47 - R48
393 [-]: LOADNIL   R48 R48      ; R48 := nil
394 [-]: GETUPVAL  R49 U2       ; R49 := U2
395 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
396 [-]: EQ        0 R49 K59    ; if R49 ~= "heading" then PC := 412
397 [-]: JMP       412          ; PC := 412
398 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
399 [-]: GETUPVAL  R50 U2       ; R50 := U2
400 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
401 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
402 [-]: ADD       R50 R50 R46  ; R50 := R50 + R46
403 [-]: GETUPVAL  R51 U2       ; R51 := U2
404 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
405 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
406 [-]: GETUPVAL  R52 U2       ; R52 := U2
407 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
408 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
409 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
410 [-]: MOVE      R48 R49      ; R48 := R49
411 [-]: JMP       447          ; PC := 447
412 [-]: GETUPVAL  R49 U2       ; R49 := U2
413 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
414 [-]: EQ        0 R49 K62    ; if R49 ~= "pitch" then PC := 430
415 [-]: JMP       430          ; PC := 430
416 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
417 [-]: GETUPVAL  R50 U2       ; R50 := U2
418 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
419 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
420 [-]: GETUPVAL  R51 U2       ; R51 := U2
421 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
422 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
423 [-]: ADD       R51 R51 R47  ; R51 := R51 + R47
424 [-]: GETUPVAL  R52 U2       ; R52 := U2
425 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
426 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
427 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
428 [-]: MOVE      R48 R49      ; R48 := R49
429 [-]: JMP       447          ; PC := 447
430 [-]: GETUPVAL  R49 U2       ; R49 := U2
431 [-]: GETTABLE  R49 R49 K58  ; R49 := R49["mRotationAxis"]
432 [-]: EQ        0 R49 K63    ; if R49 ~= "bank" then PC := 447
433 [-]: JMP       447          ; PC := 447
434 [-]: GETGLOBAL R49 K60      ; R49 := 0x1E4F6281
435 [-]: GETUPVAL  R50 U2       ; R50 := U2
436 [-]: GETTABLE  R50 R50 K61  ; R50 := R50["mInitialRotation"]
437 [-]: GETTABLE  R50 R50 K59  ; R50 := R50["heading"]
438 [-]: GETUPVAL  R51 U2       ; R51 := U2
439 [-]: GETTABLE  R51 R51 K61  ; R51 := R51["mInitialRotation"]
440 [-]: GETTABLE  R51 R51 K62  ; R51 := R51["pitch"]
441 [-]: GETUPVAL  R52 U2       ; R52 := U2
442 [-]: GETTABLE  R52 R52 K61  ; R52 := R52["mInitialRotation"]
443 [-]: GETTABLE  R52 R52 K63  ; R52 := R52["bank"]
444 [-]: ADD       R52 R52 R46  ; R52 := R52 + R46
445 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
446 [-]: MOVE      R48 R49      ; R48 := R49
447 [-]: GETUPVAL  R49 U2       ; R49 := U2
448 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
449 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
450 [-]: SETTABLE  R49 K64 R48  ; R49["mRotation"] := R48
451 [-]: GETUPVAL  R49 U2       ; R49 := U2
452 [-]: GETTABLE  R49 R49 K24  ; R49 := R49["mMovingNode"]
453 [-]: GETTABLE  R49 R49 K18  ; R49 := R49["deco"]
454 [-]: GETTABLE  R49 R49 K20  ; R49 := R49["mInstance"]
455 [-]: SELF      R49 R49 K65  ; R50 := R49; R49 := R49["0x5097FD8C"]
456 [-]: MOVE      R51 R48      ; R51 := R48
457 [-]: CALL      R49 3 1      ; R49(R50,R51)
458 [-]: GETUPVAL  R49 U4       ; R49 := U4
459 [-]: SELF      R49 R49 K66  ; R50 := R49; R49 := R49["0xCDECE0C5"]
460 [-]: GETUPVAL  R51 U2       ; R51 := U2
461 [-]: GETTABLE  R51 R51 K24  ; R51 := R51["mMovingNode"]
462 [-]: GETTABLE  R51 R51 K17  ; R51 := R51["radialSector"]
463 [-]: MOVE      R52 R48      ; R52 := R48
464 [-]: CALL      R49 4 1      ; R49(R50,R51,R52)
465 [-]: JMP       538          ; PC := 538
466 [-]: GETUPVAL  R49 U2       ; R49 := U2
467 [-]: GETTABLE  R49 R49 K67  ; R49 := R49["mEditingScale"]
468 [-]: TEST      R49 0        ; if not R49 then PC := 538
469 [-]: JMP       538          ; PC := 538
470 [-]: GETUPVAL  R49 U11      ; R49 := U11
471 [-]: CALL      R49 1 2      ; R49 := R49()
472 [-]: GETGLOBAL R50 K68      ; R50 := 0xB09F286F
473 [-]: MOVE      R51 R49      ; R51 := R49
474 [-]: GETUPVAL  R52 U2       ; R52 := U2
475 [-]: GETTABLE  R52 R52 K28  ; R52 := R52["mInitialMousePosition"]
476 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
477 [-]: GETTABLE  R51 R49 K27  ; R51 := R49["y"]
478 [-]: GETUPVAL  R52 U2       ; R52 := U2
479 [-]: GETTABLE  R52 R52 K28  ; R52 := R52["mInitialMousePosition"]
480 [-]: GETTABLE  R52 R52 K27  ; R52 := R52["y"]
481 [-]: LT        1 R52 R51    ; if R52 < R51 then PC := 484
482 [-]: JMP       484          ; PC := 484
483 [-]: MOVE      R51 R0       ; R51 := R0
484 [-]: MOVE      R51 R1       ; R51 := R1
485 [-]: DIV       R52 R50 K69  ; R52 := R50 / 200
486 [-]: GETUPVAL  R53 U14      ; R53 := U14
487 [-]: GETTABLE  R53 R53 K70  ; R53 := R53["0xF81722A2"]
488 [-]: MOVE      R54 R51      ; R54 := R51
489 [-]: LOADK     R55 K22      ; R55 := 1
490 [-]: LOADK     R56 K71      ; R56 := -1
491 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
492 [-]: MUL       R52 R52 R53  ; R52 := R52 * R53
493 [-]: GETGLOBAL R53 K72      ; R53 := 0x6374FD98
494 [-]: GETUPVAL  R54 U2       ; R54 := U2
495 [-]: GETTABLE  R54 R54 K73  ; R54 := R54["mInitialScale"]
496 [-]: SUB       R55 K22 R52  ; R55 := 1 - R52
497 [-]: MUL       R54 R54 R55  ; R54 := R54 * R55
498 [-]: LOADK     R55 K74      ; R55 := 9.9999997473788e-06
499 [-]: LOADK     R56 K75      ; R56 := 10
500 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
501 [-]: GETUPVAL  R54 U2       ; R54 := U2
502 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
503 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
504 [-]: SETTABLE  R54 K76 R53  ; R54["mScale"] := R53
505 [-]: GETUPVAL  R54 U2       ; R54 := U2
506 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
507 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
508 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
509 [-]: SELF      R54 R54 K77  ; R55 := R54; R54 := R54["0x6A7E5F92"]
510 [-]: GETUPVAL  R56 U15      ; R56 := U15
511 [-]: GETTABLE  R56 R56 K78  ; R56 := R56["DECO_SCALE_MULTIPLIER"]
512 [-]: MUL       R56 R53 R56  ; R56 := R53 * R56
513 [-]: MOVE      R57 R1       ; R57 := R1
514 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
515 [-]: GETUPVAL  R54 U4       ; R54 := U4
516 [-]: SELF      R54 R54 K79  ; R55 := R54; R54 := R54["0x1F74748A"]
517 [-]: GETUPVAL  R56 U2       ; R56 := U2
518 [-]: GETTABLE  R56 R56 K24  ; R56 := R56["mMovingNode"]
519 [-]: GETTABLE  R56 R56 K17  ; R56 := R56["radialSector"]
520 [-]: MOVE      R57 R53      ; R57 := R53
521 [-]: CALL      R54 4 1      ; R54(R55,R56,R57)
522 [-]: GETUPVAL  R54 U2       ; R54 := U2
523 [-]: GETTABLE  R54 R54 K24  ; R54 := R54["mMovingNode"]
524 [-]: GETTABLE  R54 R54 K18  ; R54 := R54["deco"]
525 [-]: GETTABLE  R54 R54 K20  ; R54 := R54["mInstance"]
526 [-]: SELF      R54 R54 K80  ; R55 := R54; R54 := R54["0xB3733382"]
527 [-]: CALL      R54 2 2      ; R54 := R54(R55)
528 [-]: LOADK     R55 K22      ; R55 := 1
529 [-]: LEN       R56 R54      ; R56 := # R54
530 [-]: LOADK     R57 K22      ; R57 := 1
531 [-]: FORPREP   R55 537      ; R55 -= R57; PC := 537
532 [-]: GETTABLE  R59 R54 R58  ; R59 := R54[R58]
533 [-]: SELF      R59 R59 K77  ; R60 := R59; R59 := R59["0x6A7E5F92"]
534 [-]: LOADK     R61 K22      ; R61 := 1
535 [-]: MOVE      R62 R1       ; R62 := R1
536 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
537 [-]: FORLOOP   R55 532      ; R55 += R57; if R55 <= R56 then begin PC := 532; R58 := R55 end
538 [-]: GETUPVAL  R59 U12      ; R59 := U12
539 [-]: GETUPVAL  R60 U2       ; R60 := U2
540 [-]: GETTABLE  R60 R60 K24  ; R60 := R60["mMovingNode"]
541 [-]: CALL      R59 2 1      ; R59(R60)
542 [-]: GETUPVAL  R59 U16      ; R59 := U16
543 [-]: TEST      R59 1        ; if R59 then PC := 546
544 [-]: JMP       546          ; PC := 546
545 [-]: RETURN    R0 1         ; return 
546 [-]: GETGLOBAL R59 K81      ; R59 := _T
547 [-]: GETTABLE  R59 R59 K82  ; R59 := R59["MouseInWorldStateWindow"]
548 [-]: TEST      R59 1        ; if R59 then PC := 554
549 [-]: JMP       554          ; PC := 554
550 [-]: GETGLOBAL R59 K81      ; R59 := _T
551 [-]: GETTABLE  R59 R59 K83  ; R59 := R59["MouseInChatArea"]
552 [-]: TEST      R59 0        ; if not R59 then PC := 561
553 [-]: JMP       561          ; PC := 561
554 [-]: GETUPVAL  R59 U16      ; R59 := U16
555 [-]: GETTABLE  R59 R59 K84  ; R59 := R59["mDragging"]
556 [-]: TEST      R59 0        ; if not R59 then PC := 561
557 [-]: JMP       561          ; PC := 561
558 [-]: GETUPVAL  R59 U16      ; R59 := U16
559 [-]: SELF      R59 R59 K85  ; R60 := R59; R59 := R59["0xD963824A"]
560 [-]: CALL      R59 2 1      ; R59(R60)
561 [-]: GETGLOBAL R59 K86      ; R59 := 0x4CDEF9FF
562 [-]: CALL      R59 1 2      ; R59 := R59()
563 [-]: GETUPVAL  R60 U16      ; R60 := U16
564 [-]: SELF      R60 R60 K87  ; R61 := R60; R60 := R60["0x8C7099E9"]
565 [-]: MOVE      R62 R59      ; R62 := R59
566 [-]: CALL      R60 3 1      ; R60(R61,R62)
567 [-]: GETUPVAL  R60 U16      ; R60 := U16
568 [-]: GETTABLE  R60 R60 K88  ; R60 := R60["mCurrentScroll"]
569 [-]: GETTABLE  R60 R60 K43  ; R60 := R60["x"]
570 [-]: GETUPVAL  R61 U16      ; R61 := U16
571 [-]: GETTABLE  R61 R61 K88  ; R61 := R61["mCurrentScroll"]
572 [-]: GETTABLE  R61 R61 K27  ; R61 := R61["y"]
573 [-]: GETUPVAL  R62 U17      ; R62 := U17
574 [-]: SELF      R62 R62 K89  ; R63 := R62; R62 := R62["0xDB349344"]
575 [-]: MOVE      R64 R60      ; R64 := R60
576 [-]: CALL      R62 3 1      ; R62(R63,R64)
577 [-]: GETUPVAL  R62 U18      ; R62 := U18
578 [-]: SELF      R62 R62 K89  ; R63 := R62; R62 := R62["0xDB349344"]
579 [-]: MOVE      R64 R61      ; R64 := R61
580 [-]: CALL      R62 3 1      ; R62(R63,R64)
581 [-]: GETUPVAL  R62 U17      ; R62 := U17
582 [-]: GETTABLE  R62 R62 K90  ; R62 := R62["mCurVal"]
583 [-]: GETUPVAL  R63 U18      ; R63 := U18
584 [-]: GETTABLE  R63 R63 K90  ; R63 := R63["mCurVal"]
585 [-]: GETUPVAL  R64 U17      ; R64 := U17
586 [-]: SELF      R64 R64 K87  ; R65 := R64; R64 := R64["0x8C7099E9"]
587 [-]: MOVE      R66 R59      ; R66 := R59
588 [-]: CALL      R64 3 1      ; R64(R65,R66)
589 [-]: GETUPVAL  R64 U18      ; R64 := U18
590 [-]: SELF      R64 R64 K87  ; R65 := R64; R64 := R64["0x8C7099E9"]
591 [-]: MOVE      R66 R59      ; R66 := R59
592 [-]: CALL      R64 3 1      ; R64(R65,R66)
593 [-]: GETGLOBAL R64 K91      ; R64 := math
594 [-]: GETTABLE  R64 R64 K92  ; R64 := R64["0xF93F7CC8"]
595 [-]: GETUPVAL  R65 U17      ; R65 := U17
596 [-]: GETTABLE  R65 R65 K93  ; R65 := R65["mTargetVal"]
597 [-]: SUB       R65 R62 R65  ; R65 := R62 - R65
598 [-]: CALL      R64 2 2      ; R64 := R64(R65)
599 [-]: LT        1 K94 R64    ; if 4.9999998736894e-06 < R64 then PC := 602
600 [-]: JMP       602          ; PC := 602
601 [-]: MOVE      R64 R0       ; R64 := R0
602 [-]: MOVE      R64 R1       ; R64 := R1
603 [-]: TEST      R64 1        ; if R64 then PC := 616
604 [-]: JMP       616          ; PC := 616
605 [-]: GETUPVAL  R65 U17      ; R65 := U17
606 [-]: GETTABLE  R65 R65 K90  ; R65 := R65["mCurVal"]
607 [-]: GETUPVAL  R66 U17      ; R66 := U17
608 [-]: GETTABLE  R66 R66 K93  ; R66 := R66["mTargetVal"]
609 [-]: EQ        1 R65 R66    ; if R65 == R66 then PC := 616
610 [-]: JMP       616          ; PC := 616
611 [-]: GETUPVAL  R65 U17      ; R65 := U17
612 [-]: SELF      R65 R65 K95  ; R66 := R65; R65 := R65["0x5A7A6B1"]
613 [-]: GETUPVAL  R67 U17      ; R67 := U17
614 [-]: GETTABLE  R67 R67 K93  ; R67 := R67["mTargetVal"]
615 [-]: CALL      R65 3 1      ; R65(R66,R67)
616 [-]: GETGLOBAL R65 K91      ; R65 := math
617 [-]: GETTABLE  R65 R65 K92  ; R65 := R65["0xF93F7CC8"]
618 [-]: GETUPVAL  R66 U18      ; R66 := U18
619 [-]: GETTABLE  R66 R66 K93  ; R66 := R66["mTargetVal"]
620 [-]: SUB       R66 R63 R66  ; R66 := R63 - R66
621 [-]: CALL      R65 2 2      ; R65 := R65(R66)
622 [-]: LT        1 K94 R65    ; if 4.9999998736894e-06 < R65 then PC := 625
623 [-]: JMP       625          ; PC := 625
624 [-]: MOVE      R65 R0       ; R65 := R0
625 [-]: MOVE      R65 R1       ; R65 := R1
626 [-]: TEST      R65 1        ; if R65 then PC := 639
627 [-]: JMP       639          ; PC := 639
628 [-]: GETUPVAL  R66 U18      ; R66 := U18
629 [-]: GETTABLE  R66 R66 K90  ; R66 := R66["mCurVal"]
630 [-]: GETUPVAL  R67 U18      ; R67 := U18
631 [-]: GETTABLE  R67 R67 K93  ; R67 := R67["mTargetVal"]
632 [-]: EQ        1 R66 R67    ; if R66 == R67 then PC := 639
633 [-]: JMP       639          ; PC := 639
634 [-]: GETUPVAL  R66 U18      ; R66 := U18
635 [-]: SELF      R66 R66 K95  ; R67 := R66; R66 := R66["0x5A7A6B1"]
636 [-]: GETUPVAL  R68 U18      ; R68 := U18
637 [-]: GETTABLE  R68 R68 K93  ; R68 := R68["mTargetVal"]
638 [-]: CALL      R66 3 1      ; R66(R67,R68)
639 [-]: GETUPVAL  R66 U19      ; R66 := U19
640 [-]: GETTABLE  R66 R66 K90  ; R66 := R66["mCurVal"]
641 [-]: GETUPVAL  R67 U19      ; R67 := U19
642 [-]: SELF      R67 R67 K87  ; R68 := R67; R67 := R67["0x8C7099E9"]
643 [-]: MOVE      R69 R59      ; R69 := R59
644 [-]: CALL      R67 3 1      ; R67(R68,R69)
645 [-]: GETGLOBAL R67 K91      ; R67 := math
646 [-]: GETTABLE  R67 R67 K92  ; R67 := R67["0xF93F7CC8"]
647 [-]: GETUPVAL  R68 U19      ; R68 := U19
648 [-]: GETTABLE  R68 R68 K93  ; R68 := R68["mTargetVal"]
649 [-]: SUB       R68 R66 R68  ; R68 := R66 - R68
650 [-]: CALL      R67 2 2      ; R67 := R67(R68)
651 [-]: LT        1 K96 R67    ; if 0.0099999997764826 < R67 then PC := 654
652 [-]: JMP       654          ; PC := 654
653 [-]: MOVE      R67 R0       ; R67 := R0
654 [-]: MOVE      R67 R1       ; R67 := R1
655 [-]: TEST      R67 1        ; if R67 then PC := 668
656 [-]: JMP       668          ; PC := 668
657 [-]: GETUPVAL  R68 U16      ; R68 := U16
658 [-]: GETTABLE  R68 R68 K90  ; R68 := R68["mCurVal"]
659 [-]: GETUPVAL  R69 U16      ; R69 := U16
660 [-]: GETTABLE  R69 R69 K93  ; R69 := R69["mTargetVal"]
661 [-]: EQ        1 R68 R69    ; if R68 == R69 then PC := 668
662 [-]: JMP       668          ; PC := 668
663 [-]: GETUPVAL  R68 U16      ; R68 := U16
664 [-]: SELF      R68 R68 K95  ; R69 := R68; R68 := R68["0x5A7A6B1"]
665 [-]: GETUPVAL  R70 U16      ; R70 := U16
666 [-]: GETTABLE  R70 R70 K93  ; R70 := R70["mTargetVal"]
667 [-]: CALL      R68 3 1      ; R68(R69,R70)
668 [-]: GETUPVAL  R68 U20      ; R68 := U20
669 [-]: TEST      R68 0        ; if not R68 then PC := 677
670 [-]: JMP       677          ; PC := 677
671 [-]: TEST      R67 1        ; if R67 then PC := 677
672 [-]: JMP       677          ; PC := 677
673 [-]: GETUPVAL  R68 U20      ; R68 := U20
674 [-]: CALL      R68 1 1      ; R68()
675 [-]: LOADNIL   R68 R68      ; R68 := nil
676 [-]: MOVE      R68 R20      ; R68 := R20
677 [-]: TEST      R67 0        ; if not R67 then PC := 681
678 [-]: JMP       681          ; PC := 681
679 [-]: GETUPVAL  R68 U21      ; R68 := U21
680 [-]: CALL      R68 1 1      ; R68()
681 [-]: GETUPVAL  R68 U17      ; R68 := U17
682 [-]: SELF      R68 R68 K97  ; R69 := R68; R68 := R68["0xC4E503B0"]
683 [-]: CALL      R68 2 2      ; R68 := R68(R69)
684 [-]: MUL       R68 R68 K98  ; R68 := R68 * 2
685 [-]: SUB       R68 R68 K22  ; R68 := R68 - 1
686 [-]: GETUPVAL  R69 U22      ; R69 := U22
687 [-]: MUL       R68 R68 R69  ; R68 := R68 * R69
688 [-]: GETUPVAL  R69 U18      ; R69 := U18
689 [-]: SELF      R69 R69 K97  ; R70 := R69; R69 := R69["0xC4E503B0"]
690 [-]: CALL      R69 2 2      ; R69 := R69(R70)
691 [-]: MUL       R69 R69 K98  ; R69 := R69 * 2
692 [-]: SUB       R69 R69 K22  ; R69 := R69 - 1
693 [-]: GETUPVAL  R70 U22      ; R70 := U22
694 [-]: UNM       R70 R70      ; R70 := - R70
695 [-]: MUL       R69 R69 R70  ; R69 := R69 * R70
696 [-]: GETGLOBAL R70 K29      ; R70 := 0x221C9700
697 [-]: GETUPVAL  R71 U23      ; R71 := U23
698 [-]: GETTABLE  R71 R71 K99  ; R71 := R71["origFacing"]
699 [-]: GETTABLE  R71 R71 K43  ; R71 := R71["x"]
700 [-]: GETUPVAL  R72 U23      ; R72 := U23
701 [-]: GETTABLE  R72 R72 K99  ; R72 := R72["origFacing"]
702 [-]: GETTABLE  R72 R72 K27  ; R72 := R72["y"]
703 [-]: GETUPVAL  R73 U23      ; R73 := U23
704 [-]: GETTABLE  R73 R73 K99  ; R73 := R73["origFacing"]
705 [-]: GETTABLE  R73 R73 K5   ; R73 := R73["z"]
706 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
707 [-]: GETUPVAL  R71 U19      ; R71 := U19
708 [-]: SELF      R71 R71 K97  ; R72 := R71; R71 := R71["0xC4E503B0"]
709 [-]: CALL      R71 2 2      ; R71 := R71(R72)
710 [-]: MUL       R71 R70 R71  ; R71 := R70 * R71
711 [-]: GETTABLE  R72 R71 K43  ; R72 := R71["x"]
712 [-]: ADD       R72 R72 R68  ; R72 := R72 + R68
713 [-]: SETTABLE  R71 K43 R72  ; R71["x"] := R72
714 [-]: GETTABLE  R72 R71 K27  ; R72 := R71["y"]
715 [-]: ADD       R72 R72 R69  ; R72 := R72 + R69
716 [-]: SETTABLE  R71 K27 R72  ; R71["y"] := R72
717 [-]: LOADK     R72 K100     ; R72 := -0.20000000298023
718 [-]: LOADK     R73 K101     ; R73 := 0.40000000596046
719 [-]: LOADK     R74 K102     ; R74 := -0.26499998569489
720 [-]: GETUPVAL  R75 U24      ; R75 := U24
721 [-]: GETTABLE  R75 R75 K103 ; R75 := R75["Region"]
722 [-]: GETUPVAL  R76 U25      ; R76 := U25
723 [-]: EQ        1 R75 R76    ; if R75 == R76 then PC := 820
724 [-]: JMP       820          ; PC := 820
725 [-]: GETGLOBAL R75 K1       ; R75 := 0x400E7765
726 [-]: GETUPVAL  R76 U26      ; R76 := U26
727 [-]: CALL      R75 2 2      ; R75 := R75(R76)
728 [-]: TEST      R75 1        ; if R75 then PC := 820
729 [-]: JMP       820          ; PC := 820
730 [-]: GETUPVAL  R75 U24      ; R75 := U24
731 [-]: GETTABLE  R75 R75 K104 ; R75 := R75["Locked"]
732 [-]: TEST      R75 1        ; if R75 then PC := 820
733 [-]: JMP       820          ; PC := 820
734 [-]: GETUPVAL  R75 U24      ; R75 := U24
735 [-]: GETUPVAL  R76 U26      ; R76 := U26
736 [-]: SELF      R76 R76 K33  ; R77 := R76; R76 := R76["0x6DA72501"]
737 [-]: CALL      R76 2 2      ; R76 := R76(R77)
738 [-]: SETTABLE  R75 K105 R76 ; R75["Previous"] := R76
739 [-]: GETUPVAL  R75 U24      ; R75 := U24
740 [-]: GETUPVAL  R76 U25      ; R76 := U25
741 [-]: SETTABLE  R75 K103 R76 ; R75["Region"] := R76
742 [-]: GETGLOBAL R75 K1       ; R75 := 0x400E7765
743 [-]: GETUPVAL  R76 U25      ; R76 := U25
744 [-]: CALL      R75 2 2      ; R75 := R75(R76)
745 [-]: TEST      R75 1        ; if R75 then PC := 770
746 [-]: JMP       770          ; PC := 770
747 [-]: GETUPVAL  R75 U25      ; R75 := U25
748 [-]: GETTABLE  R75 R75 K106 ; R75 := R75["pos"]
749 [-]: GETTABLE  R76 R75 K43  ; R76 := R75["x"]
750 [-]: LE        0 K6 R76     ; if 0 > R76 then PC := 759
751 [-]: JMP       759          ; PC := 759
752 [-]: GETGLOBAL R76 K29      ; R76 := 0x221C9700
753 [-]: UNM       R77 R73      ; R77 := - R73
754 [-]: MOVE      R78 R74      ; R78 := R74
755 [-]: MOVE      R79 R72      ; R79 := R72
756 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
757 [-]: MOVE      R75 R76      ; R75 := R76
758 [-]: JMP       765          ; PC := 765
759 [-]: GETGLOBAL R76 K29      ; R76 := 0x221C9700
760 [-]: ADD       R77 R73 K107 ; R77 := R73 + 0.20000000298023
761 [-]: MOVE      R78 R74      ; R78 := R74
762 [-]: MOVE      R79 R72      ; R79 := R72
763 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
764 [-]: MOVE      R75 R76      ; R75 := R76
765 [-]: GETUPVAL  R76 U24      ; R76 := U24
766 [-]: GETUPVAL  R77 U27      ; R77 := U27
767 [-]: ADD       R77 R77 R75  ; R77 := R77 + R75
768 [-]: SETTABLE  R76 K108 R77 ; R76["Target"] := R77
769 [-]: JMP       779          ; PC := 779
770 [-]: GETUPVAL  R76 U24      ; R76 := U24
771 [-]: GETUPVAL  R77 U27      ; R77 := U27
772 [-]: GETGLOBAL R78 K29      ; R78 := 0x221C9700
773 [-]: LOADK     R79 K45      ; R79 := 0.10000000149012
774 [-]: LOADK     R80 K6       ; R80 := 0
775 [-]: LOADK     R81 K109     ; R81 := 4
776 [-]: CALL      R78 4 2      ; R78 := R78(R79,R80,R81)
777 [-]: ADD       R77 R77 R78  ; R77 := R77 + R78
778 [-]: SETTABLE  R76 K108 R77 ; R76["Target"] := R77
779 [-]: GETUPVAL  R76 U24      ; R76 := U24
780 [-]: GETTABLE  R76 R76 K110 ; R76 := R76["Prop"]
781 [-]: SELF      R76 R76 K95  ; R77 := R76; R76 := R76["0x5A7A6B1"]
782 [-]: LOADK     R78 K6       ; R78 := 0
783 [-]: CALL      R76 3 1      ; R76(R77,R78)
784 [-]: GETUPVAL  R76 U24      ; R76 := U24
785 [-]: GETTABLE  R76 R76 K110 ; R76 := R76["Prop"]
786 [-]: SELF      R76 R76 K89  ; R77 := R76; R76 := R76["0xDB349344"]
787 [-]: LOADK     R78 K22      ; R78 := 1
788 [-]: CALL      R76 3 1      ; R76(R77,R78)
789 [-]: GETUPVAL  R76 U25      ; R76 := U25
790 [-]: EQ        0 R76 K19    ; if R76 ~= nil then PC := 800
791 [-]: JMP       800          ; PC := 800
792 [-]: GETUPVAL  R76 U26      ; R76 := U26
793 [-]: SELF      R76 R76 K111 ; R77 := R76; R76 := R76["0x7A97EAF5"]
794 [-]: GETUPVAL  R78 U28      ; R78 := U28
795 [-]: MOVE      R79 R0       ; R79 := R0
796 [-]: MOVE      R80 R1       ; R80 := R1
797 [-]: LOADK     R81 K22      ; R81 := 1
798 [-]: CALL      R76 6 1      ; R76(R77,R78,R79,R80,R81)
799 [-]: JMP       820          ; PC := 820
800 [-]: GETUPVAL  R76 U25      ; R76 := U25
801 [-]: GETTABLE  R76 R76 K106 ; R76 := R76["pos"]
802 [-]: GETTABLE  R76 R76 K43  ; R76 := R76["x"]
803 [-]: LE        0 K6 R76     ; if 0 > R76 then PC := 813
804 [-]: JMP       813          ; PC := 813
805 [-]: GETUPVAL  R76 U26      ; R76 := U26
806 [-]: SELF      R76 R76 K111 ; R77 := R76; R76 := R76["0x7A97EAF5"]
807 [-]: GETGLOBAL R78 K112     ; R78 := leftGraspAnim
808 [-]: MOVE      R79 R0       ; R79 := R0
809 [-]: MOVE      R80 R1       ; R80 := R1
810 [-]: LOADK     R81 K22      ; R81 := 1
811 [-]: CALL      R76 6 1      ; R76(R77,R78,R79,R80,R81)
812 [-]: JMP       820          ; PC := 820
813 [-]: GETUPVAL  R76 U26      ; R76 := U26
814 [-]: SELF      R76 R76 K111 ; R77 := R76; R76 := R76["0x7A97EAF5"]
815 [-]: GETGLOBAL R78 K113     ; R78 := rightGraspAnim
816 [-]: MOVE      R79 R0       ; R79 := R0
817 [-]: MOVE      R80 R1       ; R80 := R1
818 [-]: LOADK     R81 K22      ; R81 := 1
819 [-]: CALL      R76 6 1      ; R76(R77,R78,R79,R80,R81)
820 [-]: GETUPVAL  R76 U23      ; R76 := U23
821 [-]: GETUPVAL  R77 U23      ; R77 := U23
822 [-]: GETTABLE  R77 R77 K114 ; R77 := R77["originPos"]
823 [-]: ADD       R77 R77 R71  ; R77 := R77 + R71
824 [-]: SETTABLE  R76 K106 R77 ; R76["pos"] := R77
825 [-]: GETUPVAL  R76 U0       ; R76 := U0
826 [-]: GETUPVAL  R77 U1       ; R77 := U1
827 [-]: GETTABLE  R77 R77 K115 ; R77 := R77["EDIT_REGION_FRAMING"]
828 [-]: EQ        0 R76 R77    ; if R76 ~= R77 then PC := 862
829 [-]: JMP       862          ; PC := 862
830 [-]: GETUPVAL  R76 U29      ; R76 := U29
831 [-]: GETUPVAL  R77 U2       ; R77 := U2
832 [-]: GETTABLE  R77 R77 K116 ; R77 := R77["mFramingRegion"]
833 [-]: GETTABLE  R76 R76 R77  ; R76 := R76[R77]
834 [-]: TEST      R76 0        ; if not R76 then PC := 862
835 [-]: JMP       862          ; PC := 862
836 [-]: GETTABLE  R77 R76 K117 ; R77 := R76["zoomedFraming"]
837 [-]: GETTABLE  R77 R77 K43  ; R77 := R77["x"]
838 [-]: EQ        0 R77 R60    ; if R77 ~= R60 then PC := 850
839 [-]: JMP       850          ; PC := 850
840 [-]: GETTABLE  R77 R76 K117 ; R77 := R76["zoomedFraming"]
841 [-]: GETTABLE  R77 R77 K27  ; R77 := R77["y"]
842 [-]: EQ        0 R77 R61    ; if R77 ~= R61 then PC := 850
843 [-]: JMP       850          ; PC := 850
844 [-]: GETTABLE  R77 R76 K117 ; R77 := R76["zoomedFraming"]
845 [-]: GETTABLE  R77 R77 K5   ; R77 := R77["z"]
846 [-]: GETUPVAL  R78 U19      ; R78 := U19
847 [-]: GETTABLE  R78 R78 K93  ; R78 := R78["mTargetVal"]
848 [-]: EQ        1 R77 R78    ; if R77 == R78 then PC := 862
849 [-]: JMP       862          ; PC := 862
850 [-]: GETGLOBAL R77 K29      ; R77 := 0x221C9700
851 [-]: MOVE      R78 R60      ; R78 := R60
852 [-]: MOVE      R79 R61      ; R79 := R61
853 [-]: GETUPVAL  R80 U19      ; R80 := U19
854 [-]: GETTABLE  R80 R80 K93  ; R80 := R80["mTargetVal"]
855 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
856 [-]: SETTABLE  R76 K117 R77 ; R76["zoomedFraming"] := R77
857 [-]: GETUPVAL  R77 U4       ; R77 := U4
858 [-]: SELF      R77 R77 K118 ; R78 := R77; R77 := R77["0x2721E25D"]
859 [-]: MOVE      R79 R76      ; R79 := R76
860 [-]: GETTABLE  R80 R76 K117 ; R80 := R76["zoomedFraming"]
861 [-]: CALL      R77 4 1      ; R77(R78,R79,R80)
862 [-]: GETUPVAL  R77 U9       ; R77 := U9
863 [-]: CALL      R77 1 1      ; R77()
864 [-]: GETUPVAL  R77 U30      ; R77 := U30
865 [-]: SELF      R77 R77 K97  ; R78 := R77; R77 := R77["0xC4E503B0"]
866 [-]: CALL      R77 2 2      ; R77 := R77(R78)
867 [-]: LOADK     R78 K22      ; R78 := 1
868 [-]: GETGLOBAL R79 K81      ; R79 := _T
869 [-]: GETTABLE  R79 R79 K119 ; R79 := R79["HideSquadOverlay"]
870 [-]: EQ        1 R79 K19    ; if R79 == nil then PC := 877
871 [-]: JMP       877          ; PC := 877
872 [-]: GETGLOBAL R79 K81      ; R79 := _T
873 [-]: GETTABLE  R79 R79 K119 ; R79 := R79["HideSquadOverlay"]
874 [-]: LE        1 R79 K6     ; if R79 <= 0 then PC := 877
875 [-]: JMP       877          ; PC := 877
876 [-]: MOVE      R79 R0       ; R79 := R0
877 [-]: MOVE      R79 R1       ; R79 := R1
878 [-]: GETGLOBAL R80 K81      ; R80 := _T
879 [-]: GETTABLE  R80 R80 K120 ; R80 := R80["BackgroundVisible"]
880 [-]: TEST      R80 1        ; if R80 then PC := 892
881 [-]: JMP       892          ; PC := 892
882 [-]: GETGLOBAL R80 K81      ; R80 := _T
883 [-]: GETTABLE  R80 R80 K121 ; R80 := R80["HideMapRedux"]
884 [-]: EQ        1 R80 K19    ; if R80 == nil then PC := 890
885 [-]: JMP       890          ; PC := 890
886 [-]: GETGLOBAL R80 K81      ; R80 := _T
887 [-]: GETTABLE  R80 R80 K121 ; R80 := R80["HideMapRedux"]
888 [-]: LT        1 K6 R80     ; if 0 < R80 then PC := 892
889 [-]: JMP       892          ; PC := 892
890 [-]: TEST      R79 1        ; if R79 then PC := 894
891 [-]: JMP       894          ; PC := 894
892 [-]: LOADK     R78 K6       ; R78 := 0
893 [-]: JMP       909          ; PC := 909
894 [-]: GETUPVAL  R80 U31      ; R80 := U31
895 [-]: GETTABLE  R80 R80 K122 ; R80 := R80["Node"]
896 [-]: EQ        0 R80 K19    ; if R80 ~= nil then PC := 902
897 [-]: JMP       902          ; PC := 902
898 [-]: GETGLOBAL R80 K81      ; R80 := _T
899 [-]: GETTABLE  R80 R80 K123 ; R80 := R80["gPendingMission"]
900 [-]: EQ        1 R80 K19    ; if R80 == nil then PC := 904
901 [-]: JMP       904          ; PC := 904
902 [-]: LOADK     R78 K107     ; R78 := 0.20000000298023
903 [-]: JMP       909          ; PC := 909
904 [-]: GETGLOBAL R80 K81      ; R80 := _T
905 [-]: GETTABLE  R80 R80 K82  ; R80 := R80["MouseInWorldStateWindow"]
906 [-]: TEST      R80 0        ; if not R80 then PC := 909
907 [-]: JMP       909          ; PC := 909
908 [-]: LOADK     R78 K45      ; R78 := 0.10000000149012
909 [-]: GETUPVAL  R80 U30      ; R80 := U30
910 [-]: SELF      R80 R80 K89  ; R81 := R80; R80 := R80["0xDB349344"]
911 [-]: MOVE      R82 R78      ; R82 := R78
912 [-]: CALL      R80 3 1      ; R80(R81,R82)
913 [-]: GETUPVAL  R80 U30      ; R80 := U30
914 [-]: SELF      R80 R80 K87  ; R81 := R80; R80 := R80["0x8C7099E9"]
915 [-]: MOVE      R82 R59      ; R82 := R59
916 [-]: CALL      R80 3 1      ; R80(R81,R82)
917 [-]: GETUPVAL  R80 U31      ; R80 := U31
918 [-]: GETTABLE  R80 R80 K122 ; R80 := R80["Node"]
919 [-]: EQ        1 R80 K19    ; if R80 == nil then PC := 925
920 [-]: JMP       925          ; PC := 925
921 [-]: GETUPVAL  R80 U32      ; R80 := U32
922 [-]: GETUPVAL  R81 U31      ; R81 := U31
923 [-]: GETTABLE  R81 R81 K122 ; R81 := R81["Node"]
924 [-]: SETTABLE  R80 K122 R81 ; R80["Node"] := R81
925 [-]: GETUPVAL  R80 U30      ; R80 := U30
926 [-]: SELF      R80 R80 K97  ; R81 := R80; R80 := R80["0xC4E503B0"]
927 [-]: CALL      R80 2 2      ; R80 := R80(R81)
928 [-]: EQ        1 R77 R80    ; if R77 == R80 then PC := 943
929 [-]: JMP       943          ; PC := 943
930 [-]: GETGLOBAL R80 K1       ; R80 := 0x400E7765
931 [-]: GETGLOBAL R81 K124     ; R81 := splineMaterial
932 [-]: CALL      R80 2 2      ; R80 := R80(R81)
933 [-]: TEST      R80 1        ; if R80 then PC := 943
934 [-]: JMP       943          ; PC := 943
935 [-]: GETGLOBAL R80 K124     ; R80 := splineMaterial
936 [-]: SELF      R80 R80 K125 ; R81 := R80; R80 := R80["0x94FB2E1A"]
937 [-]: GETUPVAL  R82 U33      ; R82 := U33
938 [-]: GETTABLE  R82 R82 K126 ; R82 := R82["UNLIT_ATTEN"]
939 [-]: GETUPVAL  R83 U30      ; R83 := U30
940 [-]: SELF      R83 R83 K97  ; R84 := R83; R83 := R83["0xC4E503B0"]
941 [-]: CALL      R83 2 0      ; R83,... := R83(R84)
942 [-]: CALL      R80 0 1      ; R80(R81,...)
943 [-]: GETUPVAL  R80 U34      ; R80 := U34
944 [-]: SELF      R80 R80 K97  ; R81 := R80; R80 := R80["0xC4E503B0"]
945 [-]: CALL      R80 2 2      ; R80 := R80(R81)
946 [-]: GETUPVAL  R81 U34      ; R81 := U34
947 [-]: SELF      R81 R81 K89  ; R82 := R81; R81 := R81["0xDB349344"]
948 [-]: GETUPVAL  R83 U14      ; R83 := U14
949 [-]: GETTABLE  R83 R83 K70  ; R83 := R83["0xF81722A2"]
950 [-]: GETUPVAL  R84 U31      ; R84 := U31
951 [-]: GETTABLE  R84 R84 K103 ; R84 := R84["Region"]
952 [-]: EQ        0 R84 K19    ; if R84 ~= nil then PC := 955
953 [-]: JMP       955          ; PC := 955
954 [-]: MOVE      R84 R0       ; R84 := R0
955 [-]: MOVE      R84 R1       ; R84 := R1
956 [-]: LOADK     R85 K22      ; R85 := 1
957 [-]: LOADK     R86 K6       ; R86 := 0
958 [-]: CALL      R83 4 0      ; R83,... := R83(R84,R85,R86)
959 [-]: CALL      R81 0 1      ; R81(R82,...)
960 [-]: GETUPVAL  R81 U34      ; R81 := U34
961 [-]: SELF      R81 R81 K87  ; R82 := R81; R81 := R81["0x8C7099E9"]
962 [-]: GETGLOBAL R83 K86      ; R83 := 0x4CDEF9FF
963 [-]: CALL      R83 1 0      ; R83,... := R83()
964 [-]: CALL      R81 0 1      ; R81(R82,...)
965 [-]: GETUPVAL  R81 U31      ; R81 := U31
966 [-]: GETTABLE  R81 R81 K103 ; R81 := R81["Region"]
967 [-]: EQ        1 R81 K19    ; if R81 == nil then PC := 973
968 [-]: JMP       973          ; PC := 973
969 [-]: GETUPVAL  R81 U35      ; R81 := U35
970 [-]: GETUPVAL  R82 U31      ; R82 := U31
971 [-]: GETTABLE  R82 R82 K103 ; R82 := R82["Region"]
972 [-]: SETTABLE  R81 K103 R82 ; R81["Region"] := R82
973 [-]: MOVE      R81 R0       ; R81 := R0
974 [-]: MOVE      R81 R36      ; R81 := R36
975 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 4754
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Deco"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 55
  6 [-]: JMP       55           ; PC := 55
  7 [-]: LOADK     R0 K2        ; R0 := 120
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x58E5C2DB
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: MOD       R1 R1 R0     ; R1 := R1 % R0
 11 [-]: DIV       R1 R1 R0     ; R1 := R1 / R0
 12 [-]: GETGLOBAL R2 K4        ; R2 := math
 13 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["pi"]
 14 [-]: MUL       R2 R2 K6     ; R2 := R2 * 2
 15 [-]: MUL       R2 R2 R1     ; R2 := R2 * R1
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETUPVAL  R4 U0        ; R4 := U0
 18 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["RegionIndex"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: ADD       R3 R3 K8     ; R3 := R3 + 0.050000000745058
 21 [-]: GETGLOBAL R4 K4        ; R4 := math
 22 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["0xBB3F1476"]
 23 [-]: MOVE      R5 R2        ; R5 := R2
 24 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 25 [-]: MUL       R4 R4 R3     ; R4 := R4 * R3
 26 [-]: GETGLOBAL R5 K4        ; R5 := math
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x96330A01"]
 28 [-]: MOVE      R6 R2        ; R6 := R2
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: MUL       R5 R5 R3     ; R5 := R5 * R3
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 33 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6["0xEC183DDC"]
 34 [-]: GETUPVAL  R8 U0        ; R8 := U0
 35 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["AnchorPosition"]
 36 [-]: GETGLOBAL R9 K13       ; R9 := 0x221C9700
 37 [-]: MOVE      R10 R4       ; R10 := R4
 38 [-]: MOVE      R11 R5       ; R11 := R5
 39 [-]: LOADK     R12 K14      ; R12 := 0
 40 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 41 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
 42 [-]: CALL      R6 3 1       ; R6(R7,R8)
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Deco"]
 45 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6["0x5097FD8C"]
 46 [-]: GETGLOBAL R8 K16       ; R8 := 0x1E4F6281
 47 [-]: LOADK     R9 K17       ; R9 := 90
 48 [-]: GETUPVAL  R10 U2       ; R10 := U2
 49 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["0xBFE096C9"]
 50 [-]: MOVE      R11 R2       ; R11 := R2
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: LOADK     R11 K19      ; R11 := -90
 53 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 54 [-]: CALL      R6 0 1       ; R6(R7,...)
 55 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 4768
; #Upvalues:       12
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["Region"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 169
  6 [-]: JMP       169          ; PC := 169
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  8 [-]: GETGLOBAL R1 K2        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 1         ; if R0 then PC := 169
 12 [-]: JMP       169          ; PC := 169
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["Splines"]
 16 [-]: GETGLOBAL R2 K2        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SplineIndex"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 169
 22 [-]: JMP       169          ; PC := 169
 23 [-]: GETUPVAL  R0 U0        ; R0 := U0
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["Splines"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := _T
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["FortressLocation"]
 27 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SplineIndex"]
 28 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 29 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0["0xAC71FD5A"]
 30 [-]: GETGLOBAL R2 K2        ; R2 := _T
 31 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["FortressLocation"]
 32 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["Progress"]
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: GETGLOBAL R1 K8        ; R1 := 0xB09F286F
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 37 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["pos"]
 38 [-]: MOVE      R3 R0        ; R3 := R0
 39 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 40 [-]: LT        0 R1 K10     ; if R1 >= 0.0010000000474975 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: GETUPVAL  R1 U1        ; R1 := U1
 44 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0x2721E25D"]
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["Region"]
 47 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 48 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["x"]
 49 [-]: MUL       R5 R5 K14    ; R5 := R5 * 0.041000001132488
 50 [-]: ADD       R5 K15 R5    ; R5 := 0.5 + R5
 51 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["y"]
 52 [-]: ADD       R6 R6 K17    ; R6 := R6 + 0.029999999329448
 53 [-]: MUL       R6 R6 K18    ; R6 := R6 * 0.043000001460314
 54 [-]: SUB       R6 K15 R6    ; R6 := 0.5 - R6
 55 [-]: GETUPVAL  R7 U2        ; R7 := U2
 56 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["MAX_ZOOM"]
 57 [-]: SUB       R7 R7 K20    ; R7 := R7 - 0.30000001192093
 58 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["z"]
 59 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 60 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 61 [-]: CALL      R1 0 1       ; R1(R2,...)
 62 [-]: GETUPVAL  R1 U3        ; R1 := U3
 63 [-]: GETUPVAL  R2 U0        ; R2 := U0
 64 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["Region"]
 65 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETUPVAL  R1 U4        ; R1 := U4
 68 [-]: GETUPVAL  R2 U3        ; R2 := U3
 69 [-]: GETUPVAL  R3 U3        ; R3 := U3
 70 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["zoomedFraming"]
 71 [-]: CALL      R1 3 4       ; R1,R2,R3 := R1(R2,R3)
 72 [-]: GETUPVAL  R4 U5        ; R4 := U5
 73 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 74 [-]: LOADK     R6 K13       ; R6 := "x"
 75 [-]: MOVE      R7 R1        ; R7 := R1
 76 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 77 [-]: GETUPVAL  R4 U5        ; R4 := U5
 78 [-]: SELF      R4 R4 K23    ; R5 := R4; R4 := R4["0xCE468565"]
 79 [-]: LOADK     R6 K16       ; R6 := "y"
 80 [-]: MOVE      R7 R2        ; R7 := R2
 81 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 82 [-]: GETUPVAL  R4 U0        ; R4 := U0
 83 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Region"]
 84 [-]: SETTABLE  R4 K9 R0     ; R4["pos"] := R0
 85 [-]: GETGLOBAL R4 K12       ; R4 := 0x221C9700
 86 [-]: GETUPVAL  R5 U0        ; R5 := U0
 87 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
 88 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["pos"]
 89 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["x"]
 90 [-]: GETUPVAL  R6 U0        ; R6 := U0
 91 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
 92 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["pos"]
 93 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["y"]
 94 [-]: GETUPVAL  R7 U0        ; R7 := U0
 95 [-]: GETTABLE  R7 R7 K1     ; R7 := R7["Region"]
 96 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["pos"]
 97 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["z"]
 98 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 99 [-]: GETUPVAL  R5 U6        ; R5 := U6
100 [-]: MOVE      R6 R4        ; R6 := R4
101 [-]: CALL      R5 2 2       ; R5 := R5(R6)
102 [-]: MOVE      R4 R5        ; R4 := R5
103 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
104 [-]: GETUPVAL  R6 U0        ; R6 := U0
105 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["Region"]
106 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["instance"]
107 [-]: CALL      R5 2 2       ; R5 := R5(R6)
108 [-]: TEST      R5 1         ; if R5 then PC := 133
109 [-]: JMP       133          ; PC := 133
110 [-]: GETUPVAL  R5 U0        ; R5 := U0
111 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Region"]
112 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["instance"]
113 [-]: SELF      R5 R5 K25    ; R6 := R5; R5 := R5["0xEC183DDC"]
114 [-]: MOVE      R7 R4        ; R7 := R4
115 [-]: CALL      R5 3 1       ; R5(R6,R7)
116 [-]: GETUPVAL  R5 U7        ; R5 := U7
117 [-]: GETUPVAL  R6 U0        ; R6 := U0
118 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["SubLabelIndex"]
119 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
120 [-]: GETGLOBAL R6 K12       ; R6 := 0x221C9700
121 [-]: LOADK     R7 K27       ; R7 := 0
122 [-]: GETUPVAL  R8 U0        ; R8 := U0
123 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Region"]
124 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["scale"]
125 [-]: MUL       R8 R8 K29    ; R8 := R8 * 1.0499999523163
126 [-]: GETUPVAL  R9 U8        ; R9 := U8
127 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
128 [-]: MUL       R8 R8 R9     ; R8 := R8 * R9
129 [-]: LOADK     R9 K31       ; R9 := 9.9999997473788e-05
130 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
131 [-]: ADD       R6 R4 R6     ; R6 := R4 + R6
132 [-]: SETTABLE  R5 K9 R6     ; R5["pos"] := R6
133 [-]: GETGLOBAL R5 K32       ; R5 := 0xECFDD17
134 [-]: GETUPVAL  R6 U0        ; R6 := U0
135 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["Sectors"]
136 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
137 [-]: JMP       155          ; PC := 155
138 [-]: GETUPVAL  R10 U0       ; R10 := U0
139 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
140 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
141 [-]: JMP       155          ; PC := 155
142 [-]: GETUPVAL  R10 U0       ; R10 := U0
143 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["Nodes"]
144 [-]: GETTABLE  R10 R10 R8   ; R10 := R10[R8]
145 [-]: EQ        1 R10 K35    ; if R10 == nil then PC := 155
146 [-]: JMP       155          ; PC := 155
147 [-]: GETGLOBAL R10 K36      ; R10 := 0x96BEA6B
148 [-]: GETUPVAL  R11 U0       ; R11 := U0
149 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["Nodes"]
150 [-]: GETTABLE  R11 R11 R8   ; R11 := R11[R8]
151 [-]: GETTABLE  R11 R11 K37  ; R11 := R11["position"]
152 [-]: MOVE      R12 R0       ; R12 := R0
153 [-]: GETTABLE  R13 R9 K38   ; R13 := R9["decoOffset"]
154 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
155 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
156 [-]: JMP       138          ; PC := 138
157 [-]: LOADK     R10 K39      ; R10 := 1
158 [-]: GETUPVAL  R11 U9       ; R11 := U9
159 [-]: LEN       R11 R11      ; R11 := # R11
160 [-]: LOADK     R12 K39      ; R12 := 1
161 [-]: FORPREP   R10 168      ; R10 -= R12; PC := 168
162 [-]: GETUPVAL  R14 U10      ; R14 := U10
163 [-]: GETUPVAL  R15 U11      ; R15 := U11
164 [-]: GETUPVAL  R16 U9       ; R16 := U9
165 [-]: GETTABLE  R16 R16 R13  ; R16 := R16[R13]
166 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
167 [-]: CALL      R14 2 1      ; R14(R15)
168 [-]: FORLOOP   R10 162      ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
169 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 4806
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: MOVE      R0 R0        ; R0 := R0
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: GETGLOBAL R2 K0        ; R2 := mMovie
  9 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2["0x5DB0BD4"]
 10 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
 11 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["name"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: GETGLOBAL R3 K0        ; R3 := mMovie
 16 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3["0xD6A79FE9"]
 17 [-]: LOADK     R5 K5        ; R5 := "RegionInfo.Title"
 18 [-]: LOADK     R6 K6        ; R6 := "text"
 19 [-]: GETGLOBAL R7 K7        ; R7 := string
 20 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["0x639C642A"]
 21 [-]: MOVE      R8 R2        ; R8 := R2
 22 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 23 [-]: CALL      R3 0 1       ; R3(R4,...)
 24 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1["0xF377E16C"]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: LOADK     R4 K10       ; R4 := ""
 27 [-]: GETTABLE  R5 R3 K11    ; R5 := R3["availableMissions"]
 28 [-]: LT        0 K12 R5     ; if 0 >= R5 then PC := 42
 29 [-]: JMP       42           ; PC := 42
 30 [-]: GETGLOBAL R5 K0        ; R5 := mMovie
 31 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5["0x5DB0BD4"]
 32 [-]: LOADK     R7 K13       ; R7 := "/Lotus/Language/Menu/CompletedMissions"
 33 [-]: MOVE      R8 R0        ; R8 := R0
 34 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 35 [-]: GETTABLE  R10 R3 K15   ; R10 := R3["completedMissions"]
 36 [-]: SETTABLE  R9 K14 R10   ; R9["COMPLETED"] := R10
 37 [-]: GETTABLE  R10 R3 K11   ; R10 := R3["availableMissions"]
 38 [-]: SETTABLE  R9 K16 R10   ; R9["TOTAL"] := R10
 39 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 40 [-]: LOADK     R6 K17       ; R6 := "\r\n"
 41 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 42 [-]: MOVE      R5 R4        ; R5 := R4
 43 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 44 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0x5DB0BD4"]
 45 [-]: GETGLOBAL R8 K2        ; R8 := 0x9FAED6BC
 46 [-]: GETTABLE  R9 R1 K18    ; R9 := R1["desc"]
 47 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 48 [-]: MOVE      R9 R0        ; R9 := R0
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 51 [-]: GETGLOBAL R6 K0        ; R6 := mMovie
 52 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6["0xD6A79FE9"]
 53 [-]: LOADK     R8 K19       ; R8 := "RegionInfo.RegionDesc"
 54 [-]: LOADK     R9 K6        ; R9 := "text"
 55 [-]: MOVE      R10 R5       ; R10 := R5
 56 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 57 [-]: GETGLOBAL R6 K20       ; R6 := 0x52E17A90
 58 [-]: GETGLOBAL R7 K0        ; R7 := mMovie
 59 [-]: LOADK     R8 K21       ; R8 := "RegionInfo"
 60 [-]: GETGLOBAL R9 K22       ; R9 := UISys
 61 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["FlashInstance_SMOOTH_STEP"]
 62 [-]: NEWTABLE  R10 1 0      ; R10 := {}
 63 [-]: LOADK     R11 K24      ; R11 := "_alpha"
 64 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
 65 [-]: NEWTABLE  R11 1 0      ; R11 := {}
 66 [-]: LOADK     R12 K25      ; R12 := 100
 67 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
 68 [-]: LOADK     R12 K26      ; R12 := 0.20000000298023
 69 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
 70 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 4831
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mCurVal"]
  9 [-]: LT        0 R0 K2      ; if R0 >= -2 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x458F27A9"]
 13 [-]: LOADK     R3 K4        ; R3 := "OnRegionZoomOut"
 14 [-]: LOADK     R4 K5        ; R4 := ""
 15 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 16 [-]: GETUPVAL  R1 U2        ; R1 := U2
 17 [-]: CALL      R1 1 1       ; R1()
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: LOADK     R1 K6        ; R1 := 1
 20 [-]: GETUPVAL  R2 U3        ; R2 := U3
 21 [-]: LEN       R2 R2        ; R2 := # R2
 22 [-]: LOADK     R3 K6        ; R3 := 1
 23 [-]: FORPREP   R1 42        ; R1 -= R3; PC := 42
 24 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
 25 [-]: GETUPVAL  R6 U4        ; R6 := U4
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 1         ; if R5 then PC := 42
 28 [-]: JMP       42           ; PC := 42
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETUPVAL  R6 U3        ; R6 := U3
 31 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 32 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETUPVAL  R5 U0        ; R5 := U0
 35 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 36 [-]: LOADK     R7 K7        ; R7 := "OnRegionZoomIn"
 37 [-]: GETGLOBAL R8 K8        ; R8 := 0x9FAED6BC
 38 [-]: MOVE      R9 R4        ; R9 := R4
 39 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 40 [-]: CALL      R5 0 1       ; R5(R6,...)
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: FORLOOP   R1 24        ; R1 += R3; if R1 <= R2 then begin PC := 24; R4 := R1 end
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0x458F27A9"]
 45 [-]: LOADK     R7 K4        ; R7 := "OnRegionZoomOut"
 46 [-]: LOADK     R8 K5        ; R8 := ""
 47 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 48 [-]: GETUPVAL  R5 U2        ; R5 := U2
 49 [-]: CALL      R5 1 1       ; R5()
 50 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 4858
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := 0
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["0xBFE096C9"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xABA21F2F"]
  6 [-]: GETTABLE  R5 R1 K3     ; R5 := R1["x"]
  7 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["y"]
  8 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["x"]
  9 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["y"]
 10 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 11 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: SUB       R2 R2 K5     ; R2 := R2 - 90
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 4865
; #Upvalues:       40
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  82

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x221C9700
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mCurVal"]
  5 [-]: GETUPVAL  R3 U1        ; R3 := U1
  6 [-]: EQ        0 R3 R2      ; if R3 ~= R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: MOVE      R2 R1        ; R2 := R1
 11 [-]: GETUPVAL  R4 U2        ; R4 := U2
 12 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["x"]
 13 [-]: GETUPVAL  R5 U3        ; R5 := U3
 14 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xC4E503B0"]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: GETUPVAL  R4 U2        ; R4 := U2
 19 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["y"]
 20 [-]: GETUPVAL  R5 U4        ; R5 := U4
 21 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5["0xC4E503B0"]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETUPVAL  R4 U5        ; R4 := U5
 26 [-]: GETUPVAL  R5 U6        ; R5 := U6
 27 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Node"]
 28 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: MOVE      R4 R1        ; R4 := R1
 32 [-]: GETUPVAL  R5 U2        ; R5 := U2
 33 [-]: GETUPVAL  R6 U3        ; R6 := U3
 34 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: SETTABLE  R5 K2 R6     ; R5["x"] := R6
 37 [-]: GETUPVAL  R5 U2        ; R5 := U2
 38 [-]: GETUPVAL  R6 U4        ; R6 := U4
 39 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: SETTABLE  R5 K4 R6     ; R5["y"] := R6
 42 [-]: GETUPVAL  R5 U6        ; R5 := U6
 43 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["Node"]
 44 [-]: MOVE      R5 R5        ; R5 := R5
 45 [-]: GETUPVAL  R5 U7        ; R5 := U7
 46 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Alpha"]
 47 [-]: GETUPVAL  R6 U8        ; R6 := U8
 48 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6["0xC4E503B0"]
 49 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 50 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: MOVE      R5 R0        ; R5 := R0
 53 [-]: MOVE      R5 R1        ; R5 := R1
 54 [-]: GETUPVAL  R6 U7        ; R6 := U7
 55 [-]: GETUPVAL  R7 U8        ; R7 := U8
 56 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7["0xC4E503B0"]
 57 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 58 [-]: SETTABLE  R6 K6 R7     ; R6["Alpha"] := R7
 59 [-]: GETUPVAL  R6 U6        ; R6 := U6
 60 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Region"]
 61 [-]: EQ        0 R6 K8      ; if R6 ~= nil then PC := 73
 62 [-]: JMP       73           ; PC := 73
 63 [-]: GETUPVAL  R7 U9        ; R7 := U9
 64 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Region"]
 65 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETUPVAL  R7 U9        ; R7 := U9
 68 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["Alpha"]
 69 [-]: LT        0 K9 R7      ; if 0 >= R7 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETUPVAL  R7 U9        ; R7 := U9
 72 [-]: GETTABLE  R6 R7 K7     ; R6 := R7["Region"]
 73 [-]: LOADNIL   R7 R7        ; R7 := nil
 74 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 88
 75 [-]: JMP       88           ; PC := 88
 76 [-]: LOADK     R8 K10       ; R8 := 1
 77 [-]: GETUPVAL  R9 U10       ; R9 := U10
 78 [-]: LEN       R9 R9        ; R9 := # R9
 79 [-]: LOADK     R10 K10      ; R10 := 1
 80 [-]: FORPREP   R8 87        ; R8 -= R10; PC := 87
 81 [-]: GETUPVAL  R12 U10      ; R12 := U10
 82 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 83 [-]: EQ        0 R6 R12     ; if R6 ~= R12 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: SUB       R7 R11 K10   ; R7 := R11 - 1
 86 [-]: JMP       88           ; PC := 88
 87 [-]: FORLOOP   R8 81        ; R8 += R10; if R8 <= R9 then begin PC := 81; R11 := R8 end
 88 [-]: GETUPVAL  R12 U9       ; R12 := U9
 89 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["Alpha"]
 90 [-]: GETUPVAL  R13 U11      ; R13 := U11
 91 [-]: SELF      R13 R13 K3   ; R14 := R13; R13 := R13["0xC4E503B0"]
 92 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 93 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R12 R0       ; R12 := R0
 96 [-]: MOVE      R12 R1       ; R12 := R1
 97 [-]: GETUPVAL  R13 U9       ; R13 := U9
 98 [-]: GETUPVAL  R14 U11      ; R14 := U11
 99 [-]: SELF      R14 R14 K3   ; R15 := R14; R14 := R14["0xC4E503B0"]
100 [-]: CALL      R14 2 2      ; R14 := R14(R15)
101 [-]: SETTABLE  R13 K6 R14   ; R13["Alpha"] := R14
102 [-]: GETUPVAL  R13 U12      ; R13 := U12
103 [-]: GETUPVAL  R14 U13      ; R14 := U13
104 [-]: GETTABLE  R14 R14 K11  ; R14 := R14["READ_ONLY"]
105 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 109
106 [-]: JMP       109          ; PC := 109
107 [-]: MOVE      R3 R1        ; R3 := R1
108 [-]: MOVE      R4 R1        ; R4 := R1
109 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
110 [-]: GETGLOBAL R15 K0       ; R15 := 0x221C9700
111 [-]: CALL      R15 1 2      ; R15 := R15()
112 [-]: GETGLOBAL R16 K0       ; R16 := 0x221C9700
113 [-]: CALL      R16 1 2      ; R16 := R16()
114 [-]: GETGLOBAL R17 K12      ; R17 := 0x1E4F6281
115 [-]: CALL      R17 1 2      ; R17 := R17()
116 [-]: GETGLOBAL R18 K0       ; R18 := 0x221C9700
117 [-]: CALL      R18 1 2      ; R18 := R18()
118 [-]: TEST      R4 1         ; if R4 then PC := 128
119 [-]: JMP       128          ; PC := 128
120 [-]: TEST      R3 1         ; if R3 then PC := 128
121 [-]: JMP       128          ; PC := 128
122 [-]: TEST      R5 1         ; if R5 then PC := 128
123 [-]: JMP       128          ; PC := 128
124 [-]: TEST      R12 1        ; if R12 then PC := 128
125 [-]: JMP       128          ; PC := 128
126 [-]: TEST      R0 0         ; if not R0 then PC := 875
127 [-]: JMP       875          ; PC := 875
128 [-]: LOADK     R19 K13      ; R19 := 100
129 [-]: LOADNIL   R20 R22      ; R20 := R21 := R22 := nil
130 [-]: TEST      R3 0         ; if not R3 then PC := 201
131 [-]: JMP       201          ; PC := 201
132 [-]: LOADK     R23 K14      ; R23 := 0.20000000298023
133 [-]: GETGLOBAL R24 K15      ; R24 := 0x6374FD98
134 [-]: MOVE      R25 R2       ; R25 := R2
135 [-]: GETUPVAL  R26 U14      ; R26 := U14
136 [-]: GETTABLE  R26 R26 K16  ; R26 := R26["LAYER_1_RANGE"]
137 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["minValue"]
138 [-]: GETUPVAL  R27 U14      ; R27 := U14
139 [-]: GETTABLE  R27 R27 K16  ; R27 := R27["LAYER_1_RANGE"]
140 [-]: GETTABLE  R27 R27 K18  ; R27 := R27["maxValue"]
141 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
142 [-]: MOVE      R14 R24      ; R14 := R24
143 [-]: GETUPVAL  R24 U14      ; R24 := U14
144 [-]: GETTABLE  R24 R24 K16  ; R24 := R24["LAYER_1_RANGE"]
145 [-]: SELF      R24 R24 K19  ; R25 := R24; R24 := R24["0x3B43F25"]
146 [-]: MOVE      R26 R14      ; R26 := R14
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R14 R24      ; R14 := R24
149 [-]: LT        0 R14 R23    ; if R14 >= R23 then PC := 158
150 [-]: JMP       158          ; PC := 158
151 [-]: GETGLOBAL R24 K20      ; R24 := 0x93034B55
152 [-]: LOADK     R25 K9       ; R25 := 0
153 [-]: LOADK     R26 K21      ; R26 := 80
154 [-]: DIV       R27 R14 R23  ; R27 := R14 / R23
155 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
156 [-]: MOVE      R19 R24      ; R19 := R24
157 [-]: JMP       171          ; PC := 171
158 [-]: SUB       R24 K10 R23  ; R24 := 1 - R23
159 [-]: LT        0 R24 R14    ; if R24 >= R14 then PC := 170
160 [-]: JMP       170          ; PC := 170
161 [-]: GETGLOBAL R24 K20      ; R24 := 0x93034B55
162 [-]: LOADK     R25 K21      ; R25 := 80
163 [-]: LOADK     R26 K9       ; R26 := 0
164 [-]: SUB       R27 K10 R23  ; R27 := 1 - R23
165 [-]: SUB       R27 R14 R27  ; R27 := R14 - R27
166 [-]: DIV       R27 R27 R23  ; R27 := R27 / R23
167 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
168 [-]: MOVE      R19 R24      ; R19 := R24
169 [-]: JMP       171          ; PC := 171
170 [-]: LOADK     R19 K21      ; R19 := 80
171 [-]: GETGLOBAL R24 K15      ; R24 := 0x6374FD98
172 [-]: MOVE      R25 R2       ; R25 := R2
173 [-]: GETUPVAL  R26 U14      ; R26 := U14
174 [-]: GETTABLE  R26 R26 K22  ; R26 := R26["PLANET_VIS_RANGE"]
175 [-]: GETTABLE  R26 R26 K17  ; R26 := R26["minValue"]
176 [-]: GETUPVAL  R27 U14      ; R27 := U14
177 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["PLANET_VIS_RANGE"]
178 [-]: GETTABLE  R27 R27 K18  ; R27 := R27["maxValue"]
179 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
180 [-]: MOVE      R14 R24      ; R14 := R24
181 [-]: GETGLOBAL R24 K20      ; R24 := 0x93034B55
182 [-]: LOADK     R25 K9       ; R25 := 0
183 [-]: LOADK     R26 K21      ; R26 := 80
184 [-]: GETUPVAL  R27 U14      ; R27 := U14
185 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["PLANET_VIS_RANGE"]
186 [-]: SELF      R27 R27 K19  ; R28 := R27; R27 := R27["0x3B43F25"]
187 [-]: MOVE      R29 R14      ; R29 := R14
188 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
189 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
190 [-]: MOVE      R20 R24      ; R20 := R24
191 [-]: GETGLOBAL R24 K20      ; R24 := 0x93034B55
192 [-]: LOADK     R25 K23      ; R25 := 50
193 [-]: LOADK     R26 K21      ; R26 := 80
194 [-]: GETUPVAL  R27 U14      ; R27 := U14
195 [-]: GETTABLE  R27 R27 K22  ; R27 := R27["PLANET_VIS_RANGE"]
196 [-]: SELF      R27 R27 K19  ; R28 := R27; R27 := R27["0x3B43F25"]
197 [-]: MOVE      R29 R14      ; R29 := R14
198 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
199 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
200 [-]: MOVE      R21 R24      ; R21 := R24
201 [-]: TEST      R4 1         ; if R4 then PC := 207
202 [-]: JMP       207          ; PC := 207
203 [-]: TEST      R3 1         ; if R3 then PC := 207
204 [-]: JMP       207          ; PC := 207
205 [-]: TEST      R0 0         ; if not R0 then PC := 276
206 [-]: JMP       276          ; PC := 276
207 [-]: LOADK     R24 K10      ; R24 := 1
208 [-]: GETUPVAL  R25 U15      ; R25 := U15
209 [-]: LEN       R25 R25      ; R25 := # R25
210 [-]: LOADK     R26 K10      ; R26 := 1
211 [-]: FORPREP   R24 275      ; R24 -= R26; PC := 275
212 [-]: GETGLOBAL R28 K24      ; R28 := mMovie
213 [-]: SELF      R28 R28 K25  ; R29 := R28; R28 := R28["0x3688C0F4"]
214 [-]: MOVE      R30 R15      ; R30 := R15
215 [-]: GETUPVAL  R31 U15      ; R31 := U15
216 [-]: GETTABLE  R31 R31 R27  ; R31 := R31[R27]
217 [-]: GETTABLE  R31 R31 K26  ; R31 := R31["pos"]
218 [-]: MOVE      R32 R1       ; R32 := R1
219 [-]: MOVE      R33 R0       ; R33 := R0
220 [-]: CALL      R28 6 1      ; R28(R29,R30,R31,R32,R33)
221 [-]: GETGLOBAL R28 K24      ; R28 := mMovie
222 [-]: SELF      R28 R28 K27  ; R29 := R28; R28 := R28["0x4717530F"]
223 [-]: GETUPVAL  R30 U15      ; R30 := U15
224 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
225 [-]: GETTABLE  R30 R30 K28  ; R30 := R30["memberIndex"]
226 [-]: GETTABLE  R31 R15 K2   ; R31 := R15["x"]
227 [-]: GETTABLE  R32 R15 K4   ; R32 := R15["y"]
228 [-]: SUB       R32 R32 K29  ; R32 := R32 - 10
229 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
230 [-]: TEST      R3 0         ; if not R3 then PC := 275
231 [-]: JMP       275          ; PC := 275
232 [-]: GETUPVAL  R28 U15      ; R28 := U15
233 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
234 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["layer"]
235 [-]: TEST      R28 0        ; if not R28 then PC := 275
236 [-]: JMP       275          ; PC := 275
237 [-]: LOADK     R13 K13      ; R13 := 100
238 [-]: GETUPVAL  R28 U15      ; R28 := U15
239 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
240 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["layer"]
241 [-]: EQ        0 R28 K10    ; if R28 ~= 1 then PC := 245
242 [-]: JMP       245          ; PC := 245
243 [-]: MOVE      R13 R19      ; R13 := R19
244 [-]: JMP       267          ; PC := 267
245 [-]: GETUPVAL  R28 U15      ; R28 := U15
246 [-]: GETTABLE  R28 R28 R27  ; R28 := R28[R27]
247 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["layer"]
248 [-]: EQ        0 R28 K31    ; if R28 ~= 2 then PC := 267
249 [-]: JMP       267          ; PC := 267
250 [-]: MOVE      R13 R20      ; R13 := R20
251 [-]: GETGLOBAL R28 K24      ; R28 := mMovie
252 [-]: SELF      R28 R28 K32  ; R29 := R28; R28 := R28["0x445651FB"]
253 [-]: GETUPVAL  R30 U15      ; R30 := U15
254 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
255 [-]: GETTABLE  R30 R30 K28  ; R30 := R30["memberIndex"]
256 [-]: LOADK     R31 K33      ; R31 := "_xscale"
257 [-]: MOVE      R32 R21      ; R32 := R21
258 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
259 [-]: GETGLOBAL R28 K24      ; R28 := mMovie
260 [-]: SELF      R28 R28 K32  ; R29 := R28; R28 := R28["0x445651FB"]
261 [-]: GETUPVAL  R30 U15      ; R30 := U15
262 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
263 [-]: GETTABLE  R30 R30 K28  ; R30 := R30["memberIndex"]
264 [-]: LOADK     R31 K34      ; R31 := "_yscale"
265 [-]: MOVE      R32 R21      ; R32 := R21
266 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
267 [-]: GETGLOBAL R28 K24      ; R28 := mMovie
268 [-]: SELF      R28 R28 K32  ; R29 := R28; R28 := R28["0x445651FB"]
269 [-]: GETUPVAL  R30 U15      ; R30 := U15
270 [-]: GETTABLE  R30 R30 R27  ; R30 := R30[R27]
271 [-]: GETTABLE  R30 R30 K28  ; R30 := R30["memberIndex"]
272 [-]: LOADK     R31 K35      ; R31 := "_alpha"
273 [-]: MOVE      R32 R13      ; R32 := R13
274 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
275 [-]: FORLOOP   R24 212      ; R24 += R26; if R24 <= R25 then begin PC := 212; R27 := R24 end
276 [-]: GETGLOBAL R28 K15      ; R28 := 0x6374FD98
277 [-]: MOVE      R29 R2       ; R29 := R2
278 [-]: GETUPVAL  R30 U14      ; R30 := U14
279 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["LAYER_2_RANGE"]
280 [-]: GETTABLE  R30 R30 K17  ; R30 := R30["minValue"]
281 [-]: GETUPVAL  R31 U14      ; R31 := U14
282 [-]: GETTABLE  R31 R31 K36  ; R31 := R31["LAYER_2_RANGE"]
283 [-]: GETTABLE  R31 R31 K18  ; R31 := R31["maxValue"]
284 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
285 [-]: MOVE      R14 R28      ; R14 := R28
286 [-]: GETUPVAL  R28 U16      ; R28 := U16
287 [-]: GETGLOBAL R29 K20      ; R29 := 0x93034B55
288 [-]: LOADK     R30 K9       ; R30 := 0
289 [-]: LOADK     R31 K13      ; R31 := 100
290 [-]: GETUPVAL  R32 U14      ; R32 := U14
291 [-]: GETTABLE  R32 R32 K36  ; R32 := R32["LAYER_2_RANGE"]
292 [-]: SELF      R32 R32 K19  ; R33 := R32; R32 := R32["0x3B43F25"]
293 [-]: MOVE      R34 R14      ; R34 := R14
294 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
295 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
296 [-]: GETUPVAL  R30 U17      ; R30 := U17
297 [-]: LT        0 R30 R28    ; if R30 >= R28 then PC := 311
298 [-]: JMP       311          ; PC := 311
299 [-]: GETUPVAL  R30 U17      ; R30 := U17
300 [-]: LE        0 R29 R30    ; if R29 > R30 then PC := 311
301 [-]: JMP       311          ; PC := 311
302 [-]: GETUPVAL  R30 U18      ; R30 := U18
303 [-]: CALL      R30 1 1      ; R30()
304 [-]: GETGLOBAL R30 K24      ; R30 := mMovie
305 [-]: SELF      R30 R30 K37  ; R31 := R30; R30 := R30["0x1C19D966"]
306 [-]: LOADK     R32 K38      ; R32 := "Nodes"
307 [-]: LOADK     R33 K39      ; R33 := "noMenuSelection"
308 [-]: MOVE      R34 R1       ; R34 := R1
309 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
310 [-]: JMP       323          ; PC := 323
311 [-]: GETUPVAL  R30 U17      ; R30 := U17
312 [-]: LE        0 R28 R30    ; if R28 > R30 then PC := 323
313 [-]: JMP       323          ; PC := 323
314 [-]: GETUPVAL  R30 U17      ; R30 := U17
315 [-]: LT        0 R30 R29    ; if R30 >= R29 then PC := 323
316 [-]: JMP       323          ; PC := 323
317 [-]: GETGLOBAL R30 K24      ; R30 := mMovie
318 [-]: SELF      R30 R30 K37  ; R31 := R30; R30 := R30["0x1C19D966"]
319 [-]: LOADK     R32 K38      ; R32 := "Nodes"
320 [-]: LOADK     R33 K39      ; R33 := "noMenuSelection"
321 [-]: MOVE      R34 R0       ; R34 := R0
322 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
323 [-]: MOVE      R29 R16      ; R29 := R16
324 [-]: GETUPVAL  R30 U14      ; R30 := U14
325 [-]: GETTABLE  R30 R30 K36  ; R30 := R30["LAYER_2_RANGE"]
326 [-]: SELF      R30 R30 K19  ; R31 := R30; R30 := R30["0x3B43F25"]
327 [-]: MOVE      R32 R14      ; R32 := R14
328 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
329 [-]: GETGLOBAL R31 K15      ; R31 := 0x6374FD98
330 [-]: MOVE      R32 R2       ; R32 := R2
331 [-]: GETUPVAL  R33 U14      ; R33 := U14
332 [-]: GETTABLE  R33 R33 K40  ; R33 := R33["SHORTCUT_RANGE"]
333 [-]: GETTABLE  R33 R33 K17  ; R33 := R33["minValue"]
334 [-]: GETUPVAL  R34 U14      ; R34 := U14
335 [-]: GETTABLE  R34 R34 K40  ; R34 := R34["SHORTCUT_RANGE"]
336 [-]: GETTABLE  R34 R34 K18  ; R34 := R34["maxValue"]
337 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
338 [-]: MOVE      R14 R31      ; R14 := R31
339 [-]: GETGLOBAL R31 K20      ; R31 := 0x93034B55
340 [-]: LOADK     R32 K9       ; R32 := 0
341 [-]: LOADK     R33 K13      ; R33 := 100
342 [-]: GETUPVAL  R34 U14      ; R34 := U14
343 [-]: GETTABLE  R34 R34 K40  ; R34 := R34["SHORTCUT_RANGE"]
344 [-]: SELF      R34 R34 K19  ; R35 := R34; R34 := R34["0x3B43F25"]
345 [-]: MOVE      R36 R14      ; R36 := R14
346 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
347 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
348 [-]: MOVE      R22 R31      ; R22 := R31
349 [-]: GETUPVAL  R31 U12      ; R31 := U12
350 [-]: GETUPVAL  R32 U13      ; R32 := U13
351 [-]: GETTABLE  R32 R32 K41  ; R32 := R32["EDIT_NODES"]
352 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 364
353 [-]: JMP       364          ; PC := 364
354 [-]: GETUPVAL  R31 U12      ; R31 := U12
355 [-]: GETUPVAL  R32 U13      ; R32 := U13
356 [-]: GETTABLE  R32 R32 K42  ; R32 := R32["EDIT_EDGES"]
357 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 364
358 [-]: JMP       364          ; PC := 364
359 [-]: GETUPVAL  R31 U12      ; R31 := U12
360 [-]: GETUPVAL  R32 U13      ; R32 := U13
361 [-]: GETTABLE  R32 R32 K43  ; R32 := R32["EDIT_NODE_DECOS"]
362 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 366
363 [-]: JMP       366          ; PC := 366
364 [-]: LOADK     R31 K13      ; R31 := 100
365 [-]: MOVE      R31 R16      ; R31 := R16
366 [-]: LOADNIL   R31 R35      ; R31 := R32 := R33 := R34 := R35 := nil
367 [-]: GETUPVAL  R36 U16      ; R36 := U16
368 [-]: LT        1 K9 R36     ; if 0 < R36 then PC := 381
369 [-]: JMP       381          ; PC := 381
370 [-]: GETUPVAL  R36 U16      ; R36 := U16
371 [-]: LT        1 K9 R36     ; if 0 < R36 then PC := 374
372 [-]: JMP       374          ; PC := 374
373 [-]: MOVE      R36 R0       ; R36 := R0
374 [-]: MOVE      R36 R1       ; R36 := R1
375 [-]: LT        1 K9 R28     ; if 0 < R28 then PC := 378
376 [-]: JMP       378          ; PC := 378
377 [-]: MOVE      R37 R0       ; R37 := R0
378 [-]: MOVE      R37 R1       ; R37 := R1
379 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 381
380 [-]: JMP       381          ; PC := 381
381 [-]: LOADK     R36 K10      ; R36 := 1
382 [-]: GETUPVAL  R37 U19      ; R37 := U19
383 [-]: LEN       R37 R37      ; R37 := # R37
384 [-]: LOADK     R38 K10      ; R38 := 1
385 [-]: FORPREP   R36 671      ; R36 -= R38; PC := 671
386 [-]: GETGLOBAL R40 K44      ; R40 := 0x1BF588C6
387 [-]: CALL      R40 1 1      ; R40()
388 [-]: GETUPVAL  R40 U19      ; R40 := U19
389 [-]: GETTABLE  R40 R40 R39  ; R40 := R40[R39]
390 [-]: GETTABLE  R41 R40 K45  ; R41 := R40["radialSector"]
391 [-]: TEST      R4 1         ; if R4 then PC := 397
392 [-]: JMP       397          ; PC := 397
393 [-]: TEST      R3 1         ; if R3 then PC := 397
394 [-]: JMP       397          ; PC := 397
395 [-]: TEST      R0 0         ; if not R0 then PC := 561
396 [-]: JMP       561          ; PC := 561
397 [-]: GETTABLE  R32 R40 K46  ; R32 := R40["position"]
398 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
399 [-]: SELF      R42 R42 K25  ; R43 := R42; R42 := R42["0x3688C0F4"]
400 [-]: MOVE      R44 R15      ; R44 := R15
401 [-]: MOVE      R45 R32      ; R45 := R32
402 [-]: MOVE      R46 R1       ; R46 := R1
403 [-]: GETUPVAL  R47 U20      ; R47 := U20
404 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
405 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
406 [-]: SELF      R42 R42 K27  ; R43 := R42; R42 := R42["0x4717530F"]
407 [-]: GETTABLE  R44 R40 K28  ; R44 := R40["memberIndex"]
408 [-]: GETTABLE  R45 R15 K2   ; R45 := R15["x"]
409 [-]: GETTABLE  R46 R15 K4   ; R46 := R15["y"]
410 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
411 [-]: GETGLOBAL R42 K20      ; R42 := 0x93034B55
412 [-]: LOADK     R43 K47      ; R43 := 20
413 [-]: LOADK     R44 K23      ; R44 := 50
414 [-]: MOVE      R45 R30      ; R45 := R30
415 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
416 [-]: MOVE      R31 R42      ; R31 := R42
417 [-]: GETTABLE  R42 R40 K48  ; R42 := R40["isSurfaceNode"]
418 [-]: TEST      R42 0        ; if not R42 then PC := 530
419 [-]: JMP       530          ; PC := 530
420 [-]: LOADK     R33 K13      ; R33 := 100
421 [-]: GETTABLE  R34 R32 K49  ; R34 := R32["z"]
422 [-]: MUL       R34 R34 K29  ; R34 := R34 * 10
423 [-]: LE        0 K9 R34     ; if 0 > R34 then PC := 440
424 [-]: JMP       440          ; PC := 440
425 [-]: GETGLOBAL R42 K20      ; R42 := 0x93034B55
426 [-]: LOADK     R43 K50      ; R43 := 75
427 [-]: LOADK     R44 K23      ; R44 := 50
428 [-]: GETGLOBAL R45 K15      ; R45 := 0x6374FD98
429 [-]: GETGLOBAL R46 K51      ; R46 := math
430 [-]: GETTABLE  R46 R46 K52  ; R46 := R46["0xD6F2D811"]
431 [-]: MOVE      R47 R34      ; R47 := R34
432 [-]: LOADK     R48 K53      ; R48 := 3
433 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
434 [-]: LOADK     R47 K9       ; R47 := 0
435 [-]: LOADK     R48 K10      ; R48 := 1
436 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
437 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
438 [-]: MOVE      R33 R42      ; R33 := R42
439 [-]: JMP       457          ; PC := 457
440 [-]: GETGLOBAL R42 K20      ; R42 := 0x93034B55
441 [-]: LOADK     R43 K50      ; R43 := 75
442 [-]: LOADK     R44 K13      ; R44 := 100
443 [-]: GETGLOBAL R45 K15      ; R45 := 0x6374FD98
444 [-]: GETGLOBAL R46 K51      ; R46 := math
445 [-]: GETTABLE  R46 R46 K52  ; R46 := R46["0xD6F2D811"]
446 [-]: GETGLOBAL R47 K51      ; R47 := math
447 [-]: GETTABLE  R47 R47 K54  ; R47 := R47["0xF93F7CC8"]
448 [-]: MOVE      R48 R34      ; R48 := R34
449 [-]: CALL      R47 2 2      ; R47 := R47(R48)
450 [-]: LOADK     R48 K53      ; R48 := 3
451 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
452 [-]: LOADK     R47 K9       ; R47 := 0
453 [-]: LOADK     R48 K10      ; R48 := 1
454 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
455 [-]: CALL      R42 0 2      ; R42 := R42(R43,...)
456 [-]: MOVE      R33 R42      ; R33 := R42
457 [-]: GETUPVAL  R42 U21      ; R42 := U21
458 [-]: GETTABLE  R43 R41 K55  ; R43 := R41["region"]
459 [-]: ADD       R43 R43 K10  ; R43 := R43 + 1
460 [-]: GETTABLE  R35 R42 R43  ; R35 := R42[R43]
461 [-]: GETGLOBAL R42 K56      ; R42 := 0x400E7765
462 [-]: MOVE      R43 R35      ; R43 := R35
463 [-]: CALL      R42 2 2      ; R42 := R42(R43)
464 [-]: TEST      R42 1        ; if R42 then PC := 490
465 [-]: JMP       490          ; PC := 490
466 [-]: SELF      R42 R35 K57  ; R43 := R35; R42 := R35["0x8EEB099D"]
467 [-]: MOVE      R44 R16      ; R44 := R16
468 [-]: CALL      R42 3 1      ; R42(R43,R44)
469 [-]: GETGLOBAL R42 K58      ; R42 := 0x518098BD
470 [-]: MOVE      R43 R18      ; R43 := R18
471 [-]: MOVE      R44 R32      ; R44 := R32
472 [-]: MOVE      R45 R16      ; R45 := R16
473 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
474 [-]: GETGLOBAL R42 K59      ; R42 := 0x20F748B4
475 [-]: MOVE      R43 R17      ; R43 := R17
476 [-]: MOVE      R44 R1       ; R44 := R1
477 [-]: MOVE      R45 R18      ; R45 := R18
478 [-]: CALL      R42 4 1      ; R42(R43,R44,R45)
479 [-]: GETTABLE  R42 R17 K60  ; R42 := R17["heading"]
480 [-]: UNM       R42 R42      ; R42 := - R42
481 [-]: SETTABLE  R17 K60 R42  ; R17["heading"] := R42
482 [-]: GETGLOBAL R42 K15      ; R42 := 0x6374FD98
483 [-]: GETTABLE  R43 R17 K61  ; R43 := R17["pitch"]
484 [-]: MUL       R43 R43 K62  ; R43 := R43 * 0.75
485 [-]: LOADK     R44 K63      ; R44 := -75
486 [-]: LOADK     R45 K50      ; R45 := 75
487 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
488 [-]: SETTABLE  R17 K61 R42  ; R17["pitch"] := R42
489 [-]: JMP       494          ; PC := 494
490 [-]: NEWTABLE  R42 0 2      ; R42 := {}
491 [-]: SETTABLE  R42 K60 K9   ; R42["heading"] := 0
492 [-]: SETTABLE  R42 K61 K9   ; R42["pitch"] := 0
493 [-]: MOVE      R17 R42      ; R17 := R42
494 [-]: GETTABLE  R42 R40 K64  ; R42 := R40["visibleLabel"]
495 [-]: TEST      R42 1        ; if R42 then PC := 515
496 [-]: JMP       515          ; PC := 515
497 [-]: GETTABLE  R42 R40 K65  ; R42 := R40["isShortcut"]
498 [-]: TEST      R42 1        ; if R42 then PC := 515
499 [-]: JMP       515          ; PC := 515
500 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
501 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
502 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
503 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
504 [-]: LOADK     R46 K69      ; R46 := "_heading"
505 [-]: GETTABLE  R47 R17 K60  ; R47 := R17["heading"]
506 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
507 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
508 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
509 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
510 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
511 [-]: LOADK     R46 K70      ; R46 := "_pitch"
512 [-]: GETTABLE  R47 R17 K61  ; R47 := R17["pitch"]
513 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
514 [-]: JMP       549          ; PC := 549
515 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
516 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
517 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
518 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
519 [-]: LOADK     R46 K69      ; R46 := "_heading"
520 [-]: GETTABLE  R47 R17 K60  ; R47 := R17["heading"]
521 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
522 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
523 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
524 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
525 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
526 [-]: LOADK     R46 K70      ; R46 := "_pitch"
527 [-]: GETTABLE  R47 R17 K61  ; R47 := R17["pitch"]
528 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
529 [-]: JMP       549          ; PC := 549
530 [-]: GETUPVAL  R42 U12      ; R42 := U12
531 [-]: GETUPVAL  R43 U13      ; R43 := U13
532 [-]: GETTABLE  R43 R43 K11  ; R43 := R43["READ_ONLY"]
533 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 549
534 [-]: JMP       549          ; PC := 549
535 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
536 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
537 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
538 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
539 [-]: LOADK     R46 K69      ; R46 := "_heading"
540 [-]: LOADK     R47 K9       ; R47 := 0
541 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
542 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
543 [-]: SELF      R42 R42 K66  ; R43 := R42; R42 := R42["0x880196A7"]
544 [-]: GETTABLE  R44 R40 K67  ; R44 := R40["clipName"]
545 [-]: LOADK     R45 K68      ; R45 := "Node.Container"
546 [-]: LOADK     R46 K70      ; R46 := "_pitch"
547 [-]: LOADK     R47 K9       ; R47 := 0
548 [-]: CALL      R42 6 1      ; R42(R43,R44,R45,R46,R47)
549 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
550 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
551 [-]: GETTABLE  R44 R40 K71  ; R44 := R40["nodeIndex"]
552 [-]: LOADK     R45 K33      ; R45 := "_xscale"
553 [-]: MOVE      R46 R31      ; R46 := R31
554 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
555 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
556 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
557 [-]: GETTABLE  R44 R40 K71  ; R44 := R40["nodeIndex"]
558 [-]: LOADK     R45 K34      ; R45 := "_yscale"
559 [-]: MOVE      R46 R31      ; R46 := R31
560 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
561 [-]: GETGLOBAL R42 K72      ; R42 := _T
562 [-]: GETTABLE  R42 R42 K73  ; R42 := R42["MouseInWorldStateWindow"]
563 [-]: TEST      R42 1        ; if R42 then PC := 589
564 [-]: JMP       589          ; PC := 589
565 [-]: GETGLOBAL R42 K72      ; R42 := _T
566 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["gPendingMission"]
567 [-]: EQ        0 R42 K8     ; if R42 ~= nil then PC := 589
568 [-]: JMP       589          ; PC := 589
569 [-]: GETUPVAL  R42 U6       ; R42 := U6
570 [-]: GETTABLE  R42 R42 K5   ; R42 := R42["Node"]
571 [-]: EQ        1 R42 K8     ; if R42 == nil then PC := 579
572 [-]: JMP       579          ; PC := 579
573 [-]: GETUPVAL  R42 U6       ; R42 := U6
574 [-]: GETTABLE  R42 R42 K5   ; R42 := R42["Node"]
575 [-]: GETTABLE  R42 R42 K71  ; R42 := R42["nodeIndex"]
576 [-]: GETTABLE  R43 R40 K71  ; R43 := R40["nodeIndex"]
577 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 589
578 [-]: JMP       589          ; PC := 589
579 [-]: GETUPVAL  R42 U7       ; R42 := U7
580 [-]: GETTABLE  R42 R42 K5   ; R42 := R42["Node"]
581 [-]: EQ        1 R42 K8     ; if R42 == nil then PC := 589
582 [-]: JMP       589          ; PC := 589
583 [-]: GETUPVAL  R42 U7       ; R42 := U7
584 [-]: GETTABLE  R42 R42 K5   ; R42 := R42["Node"]
585 [-]: GETTABLE  R42 R42 K71  ; R42 := R42["nodeIndex"]
586 [-]: GETTABLE  R43 R40 K71  ; R43 := R40["nodeIndex"]
587 [-]: EQ        1 R42 R43    ; if R42 == R43 then PC := 602
588 [-]: JMP       602          ; PC := 602
589 [-]: GETGLOBAL R42 K72      ; R42 := _T
590 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["gPendingMission"]
591 [-]: EQ        1 R42 K8     ; if R42 == nil then PC := 609
592 [-]: JMP       609          ; PC := 609
593 [-]: GETTABLE  R42 R40 K45  ; R42 := R40["radialSector"]
594 [-]: EQ        1 R42 K8     ; if R42 == nil then PC := 609
595 [-]: JMP       609          ; PC := 609
596 [-]: GETGLOBAL R42 K72      ; R42 := _T
597 [-]: GETTABLE  R42 R42 K74  ; R42 := R42["gPendingMission"]
598 [-]: GETTABLE  R42 R42 K75  ; R42 := R42["baseNodeName"]
599 [-]: GETTABLE  R43 R41 K76  ; R43 := R41["name"]
600 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 609
601 [-]: JMP       609          ; PC := 609
602 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
603 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
604 [-]: GETTABLE  R44 R40 K28  ; R44 := R40["memberIndex"]
605 [-]: LOADK     R45 K35      ; R45 := "_alpha"
606 [-]: GETUPVAL  R46 U16      ; R46 := U16
607 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
608 [-]: JMP       640          ; PC := 640
609 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 630
610 [-]: JMP       630          ; PC := 630
611 [-]: GETTABLE  R42 R40 K65  ; R42 := R40["isShortcut"]
612 [-]: TEST      R42 0        ; if not R42 then PC := 630
613 [-]: JMP       630          ; PC := 630
614 [-]: GETTABLE  R42 R41 K55  ; R42 := R41["region"]
615 [-]: EQ        0 R42 R7     ; if R42 ~= R7 then PC := 630
616 [-]: JMP       630          ; PC := 630
617 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
618 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
619 [-]: GETTABLE  R44 R40 K28  ; R44 := R40["memberIndex"]
620 [-]: LOADK     R45 K35      ; R45 := "_alpha"
621 [-]: GETGLOBAL R46 K20      ; R46 := 0x93034B55
622 [-]: GETUPVAL  R47 U16      ; R47 := U16
623 [-]: MOVE      R48 R22      ; R48 := R22
624 [-]: GETUPVAL  R49 U11      ; R49 := U11
625 [-]: SELF      R49 R49 K3   ; R50 := R49; R49 := R49["0xC4E503B0"]
626 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
627 [-]: CALL      R46 0 0      ; R46,... := R46(R47,...)
628 [-]: CALL      R42 0 1      ; R42(R43,...)
629 [-]: JMP       640          ; PC := 640
630 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
631 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
632 [-]: GETTABLE  R44 R40 K28  ; R44 := R40["memberIndex"]
633 [-]: LOADK     R45 K35      ; R45 := "_alpha"
634 [-]: GETUPVAL  R46 U8       ; R46 := U8
635 [-]: SELF      R46 R46 K3   ; R47 := R46; R46 := R46["0xC4E503B0"]
636 [-]: CALL      R46 2 2      ; R46 := R46(R47)
637 [-]: GETUPVAL  R47 U16      ; R47 := U16
638 [-]: MUL       R46 R46 R47  ; R46 := R46 * R47
639 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
640 [-]: GETTABLE  R42 R40 K65  ; R42 := R40["isShortcut"]
641 [-]: TEST      R42 0        ; if not R42 then PC := 649
642 [-]: JMP       649          ; PC := 649
643 [-]: GETGLOBAL R42 K24      ; R42 := mMovie
644 [-]: SELF      R42 R42 K32  ; R43 := R42; R42 := R42["0x445651FB"]
645 [-]: GETTABLE  R44 R40 K77  ; R44 := R40["labelIndex"]
646 [-]: LOADK     R45 K35      ; R45 := "_alpha"
647 [-]: GETUPVAL  R46 U16      ; R46 := U16
648 [-]: CALL      R42 5 1      ; R42(R43,R44,R45,R46)
649 [-]: GETUPVAL  R42 U12      ; R42 := U12
650 [-]: GETUPVAL  R43 U13      ; R43 := U13
651 [-]: GETTABLE  R43 R43 K41  ; R43 := R43["EDIT_NODES"]
652 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 671
653 [-]: JMP       671          ; PC := 671
654 [-]: GETTABLE  R42 R40 K78  ; R42 := R40["deco"]
655 [-]: EQ        1 R42 K8     ; if R42 == nil then PC := 671
656 [-]: JMP       671          ; PC := 671
657 [-]: GETGLOBAL R42 K56      ; R42 := 0x400E7765
658 [-]: GETTABLE  R43 R40 K78  ; R43 := R40["deco"]
659 [-]: GETTABLE  R43 R43 K79  ; R43 := R43["mInstance"]
660 [-]: CALL      R42 2 2      ; R42 := R42(R43)
661 [-]: TEST      R42 1        ; if R42 then PC := 671
662 [-]: JMP       671          ; PC := 671
663 [-]: GETTABLE  R42 R40 K78  ; R42 := R40["deco"]
664 [-]: GETTABLE  R42 R42 K79  ; R42 := R42["mInstance"]
665 [-]: SELF      R42 R42 K80  ; R43 := R42; R42 := R42["0xEC183DDC"]
666 [-]: GETTABLE  R44 R40 K46  ; R44 := R40["position"]
667 [-]: GETTABLE  R45 R40 K78  ; R45 := R40["deco"]
668 [-]: GETTABLE  R45 R45 K81  ; R45 := R45["mOffset"]
669 [-]: ADD       R44 R44 R45  ; R44 := R44 + R45
670 [-]: CALL      R42 3 1      ; R42(R43,R44)
671 [-]: FORLOOP   R36 386      ; R36 += R38; if R36 <= R37 then begin PC := 386; R39 := R36 end
672 [-]: LOADNIL   R42 R45      ; R42 := R43 := R44 := R45 := nil
673 [-]: LOADK     R46 K10      ; R46 := 1
674 [-]: GETUPVAL  R47 U22      ; R47 := U22
675 [-]: LEN       R47 R47      ; R47 := # R47
676 [-]: LOADK     R48 K10      ; R48 := 1
677 [-]: FORPREP   R46 785      ; R46 -= R48; PC := 785
678 [-]: GETUPVAL  R50 U22      ; R50 := U22
679 [-]: GETTABLE  R42 R50 R49  ; R42 := R50[R49]
680 [-]: GETGLOBAL R50 K56      ; R50 := 0x400E7765
681 [-]: GETTABLE  R51 R42 K82  ; R51 := R42["Instance"]
682 [-]: CALL      R50 2 2      ; R50 := R50(R51)
683 [-]: TEST      R50 1        ; if R50 then PC := 785
684 [-]: JMP       785          ; PC := 785
685 [-]: GETTABLE  R50 R42 K83  ; R50 := R42["IsShortcut"]
686 [-]: TEST      R50 1        ; if R50 then PC := 691
687 [-]: JMP       691          ; PC := 691
688 [-]: GETTABLE  R50 R42 K84  ; R50 := R42["IsJunction"]
689 [-]: TEST      R50 0        ; if not R50 then PC := 743
690 [-]: JMP       743          ; PC := 743
691 [-]: GETTABLE  R50 R42 K83  ; R50 := R42["IsShortcut"]
692 [-]: TEST      R50 0        ; if not R50 then PC := 723
693 [-]: JMP       723          ; PC := 723
694 [-]: GETUPVAL  R50 U23      ; R50 := U23
695 [-]: GETTABLE  R51 R42 K85  ; R51 := R42["NodeA"]
696 [-]: GETTABLE  R51 R51 K46  ; R51 := R51["position"]
697 [-]: GETTABLE  R52 R42 K86  ; R52 := R42["controlPointA"]
698 [-]: GETTABLE  R52 R52 K46  ; R52 := R52["position"]
699 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
700 [-]: MOVE      R43 R50      ; R43 := R50
701 [-]: GETGLOBAL R50 K24      ; R50 := mMovie
702 [-]: SELF      R50 R50 K32  ; R51 := R50; R50 := R50["0x445651FB"]
703 [-]: GETTABLE  R52 R42 K85  ; R52 := R42["NodeA"]
704 [-]: GETTABLE  R52 R52 K71  ; R52 := R52["nodeIndex"]
705 [-]: LOADK     R53 K87      ; R53 := "_rotation"
706 [-]: MOVE      R54 R43      ; R54 := R43
707 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
708 [-]: GETUPVAL  R50 U23      ; R50 := U23
709 [-]: GETTABLE  R51 R42 K88  ; R51 := R42["NodeB"]
710 [-]: GETTABLE  R51 R51 K46  ; R51 := R51["position"]
711 [-]: GETTABLE  R52 R42 K89  ; R52 := R42["controlPointB"]
712 [-]: GETTABLE  R52 R52 K46  ; R52 := R52["position"]
713 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
714 [-]: MOVE      R43 R50      ; R43 := R50
715 [-]: GETGLOBAL R50 K24      ; R50 := mMovie
716 [-]: SELF      R50 R50 K32  ; R51 := R50; R50 := R50["0x445651FB"]
717 [-]: GETTABLE  R52 R42 K88  ; R52 := R42["NodeB"]
718 [-]: GETTABLE  R52 R52 K71  ; R52 := R52["nodeIndex"]
719 [-]: LOADK     R53 K87      ; R53 := "_rotation"
720 [-]: MOVE      R54 R43      ; R54 := R43
721 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
722 [-]: JMP       743          ; PC := 743
723 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["NodeA"]
724 [-]: GETTABLE  R50 R50 K90  ; R50 := R50["isJunction"]
725 [-]: TEST      R50 0        ; if not R50 then PC := 730
726 [-]: JMP       730          ; PC := 730
727 [-]: GETTABLE  R44 R42 K85  ; R44 := R42["NodeA"]
728 [-]: GETTABLE  R45 R42 K88  ; R45 := R42["NodeB"]
729 [-]: JMP       732          ; PC := 732
730 [-]: GETTABLE  R44 R42 K88  ; R44 := R42["NodeB"]
731 [-]: GETTABLE  R45 R42 K85  ; R45 := R42["NodeA"]
732 [-]: GETUPVAL  R50 U23      ; R50 := U23
733 [-]: GETTABLE  R51 R44 K46  ; R51 := R44["position"]
734 [-]: GETTABLE  R52 R45 K46  ; R52 := R45["position"]
735 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
736 [-]: MOVE      R43 R50      ; R43 := R50
737 [-]: GETGLOBAL R50 K24      ; R50 := mMovie
738 [-]: SELF      R50 R50 K32  ; R51 := R50; R50 := R50["0x445651FB"]
739 [-]: GETTABLE  R52 R44 K71  ; R52 := R44["nodeIndex"]
740 [-]: LOADK     R53 K87      ; R53 := "_rotation"
741 [-]: MOVE      R54 R43      ; R54 := R43
742 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
743 [-]: GETTABLE  R50 R42 K83  ; R50 := R42["IsShortcut"]
744 [-]: TEST      R50 0        ; if not R50 then PC := 774
745 [-]: JMP       774          ; PC := 774
746 [-]: GETTABLE  R50 R42 K85  ; R50 := R42["NodeA"]
747 [-]: GETTABLE  R50 R50 K45  ; R50 := R50["radialSector"]
748 [-]: GETTABLE  R50 R50 K55  ; R50 := R50["region"]
749 [-]: EQ        1 R50 R7     ; if R50 == R7 then PC := 756
750 [-]: JMP       756          ; PC := 756
751 [-]: GETTABLE  R50 R42 K88  ; R50 := R42["NodeB"]
752 [-]: GETTABLE  R50 R50 K45  ; R50 := R50["radialSector"]
753 [-]: GETTABLE  R50 R50 K55  ; R50 := R50["region"]
754 [-]: EQ        0 R50 R7     ; if R50 ~= R7 then PC := 774
755 [-]: JMP       774          ; PC := 774
756 [-]: GETTABLE  R50 R42 K82  ; R50 := R42["Instance"]
757 [-]: SELF      R50 R50 K91  ; R51 := R50; R50 := R50["0xD124E361"]
758 [-]: GETUPVAL  R52 U24      ; R52 := U24
759 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["ALPHA_ATTEN"]
760 [-]: GETGLOBAL R53 K20      ; R53 := 0x93034B55
761 [-]: GETUPVAL  R54 U16      ; R54 := U16
762 [-]: MOVE      R55 R22      ; R55 := R22
763 [-]: GETUPVAL  R56 U11      ; R56 := U11
764 [-]: SELF      R56 R56 K3   ; R57 := R56; R56 := R56["0xC4E503B0"]
765 [-]: CALL      R56 2 0      ; R56,... := R56(R57)
766 [-]: CALL      R53 0 2      ; R53 := R53(R54,...)
767 [-]: DIV       R53 R53 K13  ; R53 := R53 / 100
768 [-]: GETUPVAL  R54 U8       ; R54 := U8
769 [-]: SELF      R54 R54 K3   ; R55 := R54; R54 := R54["0xC4E503B0"]
770 [-]: CALL      R54 2 2      ; R54 := R54(R55)
771 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
772 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
773 [-]: JMP       785          ; PC := 785
774 [-]: GETTABLE  R50 R42 K82  ; R50 := R42["Instance"]
775 [-]: SELF      R50 R50 K91  ; R51 := R50; R50 := R50["0xD124E361"]
776 [-]: GETUPVAL  R52 U24      ; R52 := U24
777 [-]: GETTABLE  R52 R52 K92  ; R52 := R52["ALPHA_ATTEN"]
778 [-]: GETUPVAL  R53 U16      ; R53 := U16
779 [-]: DIV       R53 R53 K13  ; R53 := R53 / 100
780 [-]: GETUPVAL  R54 U8       ; R54 := U8
781 [-]: SELF      R54 R54 K3   ; R55 := R54; R54 := R54["0xC4E503B0"]
782 [-]: CALL      R54 2 2      ; R54 := R54(R55)
783 [-]: MUL       R53 R53 R54  ; R53 := R53 * R54
784 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
785 [-]: FORLOOP   R46 678      ; R46 += R48; if R46 <= R47 then begin PC := 678; R49 := R46 end
786 [-]: MOVE      R14 R2       ; R14 := R2
787 [-]: GETGLOBAL R50 K15      ; R50 := 0x6374FD98
788 [-]: MOVE      R51 R14      ; R51 := R14
789 [-]: GETUPVAL  R52 U14      ; R52 := U14
790 [-]: GETTABLE  R52 R52 K16  ; R52 := R52["LAYER_1_RANGE"]
791 [-]: GETTABLE  R52 R52 K17  ; R52 := R52["minValue"]
792 [-]: GETUPVAL  R53 U14      ; R53 := U14
793 [-]: GETTABLE  R53 R53 K16  ; R53 := R53["LAYER_1_RANGE"]
794 [-]: GETTABLE  R53 R53 K18  ; R53 := R53["maxValue"]
795 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
796 [-]: MOVE      R14 R50      ; R14 := R50
797 [-]: GETGLOBAL R50 K20      ; R50 := 0x93034B55
798 [-]: LOADK     R51 K93      ; R51 := 30
799 [-]: LOADK     R52 K29      ; R52 := 10
800 [-]: GETUPVAL  R53 U14      ; R53 := U14
801 [-]: GETTABLE  R53 R53 K16  ; R53 := R53["LAYER_1_RANGE"]
802 [-]: SELF      R53 R53 K19  ; R54 := R53; R53 := R53["0x3B43F25"]
803 [-]: MOVE      R55 R14      ; R55 := R14
804 [-]: CALL      R53 3 0      ; R53,... := R53(R54,R55)
805 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
806 [-]: LOADK     R51 K10      ; R51 := 1
807 [-]: GETUPVAL  R52 U25      ; R52 := U25
808 [-]: LEN       R52 R52      ; R52 := # R52
809 [-]: LOADK     R53 K10      ; R53 := 1
810 [-]: FORPREP   R51 828      ; R51 -= R53; PC := 828
811 [-]: MOVE      R13 R50      ; R13 := R50
812 [-]: GETGLOBAL R55 K56      ; R55 := 0x400E7765
813 [-]: GETUPVAL  R56 U25      ; R56 := U25
814 [-]: GETTABLE  R56 R56 R54  ; R56 := R56[R54]
815 [-]: CALL      R55 2 2      ; R55 := R55(R56)
816 [-]: TEST      R55 1        ; if R55 then PC := 828
817 [-]: JMP       828          ; PC := 828
818 [-]: GETUPVAL  R55 U25      ; R55 := U25
819 [-]: GETTABLE  R55 R55 R54  ; R55 := R55[R54]
820 [-]: SELF      R55 R55 K91  ; R56 := R55; R55 := R55["0xD124E361"]
821 [-]: GETGLOBAL R57 K94      ; R57 := Lotus_Game
822 [-]: GETTABLE  R57 R57 K95  ; R57 := R57["TINT_COLOR"]
823 [-]: LOADK     R58 K9       ; R58 := 0
824 [-]: LOADK     R59 K9       ; R59 := 0
825 [-]: LOADK     R60 K9       ; R60 := 0
826 [-]: DIV       R61 R13 K13  ; R61 := R13 / 100
827 [-]: CALL      R55 7 1      ; R55(R56,R57,R58,R59,R60,R61)
828 [-]: FORLOOP   R51 811      ; R51 += R53; if R51 <= R52 then begin PC := 811; R54 := R51 end
829 [-]: GETUPVAL  R55 U26      ; R55 := U26
830 [-]: GETTABLE  R55 R55 K96  ; R55 := R55["Active"]
831 [-]: TEST      R55 0        ; if not R55 then PC := 871
832 [-]: JMP       871          ; PC := 871
833 [-]: GETGLOBAL R55 K24      ; R55 := mMovie
834 [-]: SELF      R55 R55 K25  ; R56 := R55; R55 := R55["0x3688C0F4"]
835 [-]: MOVE      R57 R15      ; R57 := R15
836 [-]: GETUPVAL  R58 U26      ; R58 := U26
837 [-]: GETTABLE  R58 R58 K97  ; R58 := R58["Position"]
838 [-]: MOVE      R59 R1       ; R59 := R1
839 [-]: GETUPVAL  R60 U20      ; R60 := U20
840 [-]: CALL      R55 6 1      ; R55(R56,R57,R58,R59,R60)
841 [-]: GETGLOBAL R55 K20      ; R55 := 0x93034B55
842 [-]: LOADK     R56 K98      ; R56 := 60
843 [-]: LOADK     R57 K13      ; R57 := 100
844 [-]: MOVE      R58 R30      ; R58 := R30
845 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
846 [-]: MOVE      R31 R55      ; R31 := R55
847 [-]: GETGLOBAL R55 K24      ; R55 := mMovie
848 [-]: SELF      R55 R55 K37  ; R56 := R55; R55 := R55["0x1C19D966"]
849 [-]: LOADK     R57 K99      ; R57 := "VoidTrader"
850 [-]: LOADK     R58 K100     ; R58 := "_x"
851 [-]: GETTABLE  R59 R15 K2   ; R59 := R15["x"]
852 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
853 [-]: GETGLOBAL R55 K24      ; R55 := mMovie
854 [-]: SELF      R55 R55 K37  ; R56 := R55; R55 := R55["0x1C19D966"]
855 [-]: LOADK     R57 K99      ; R57 := "VoidTrader"
856 [-]: LOADK     R58 K101     ; R58 := "_y"
857 [-]: GETTABLE  R59 R15 K4   ; R59 := R15["y"]
858 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
859 [-]: GETGLOBAL R55 K24      ; R55 := mMovie
860 [-]: SELF      R55 R55 K37  ; R56 := R55; R55 := R55["0x1C19D966"]
861 [-]: LOADK     R57 K99      ; R57 := "VoidTrader"
862 [-]: LOADK     R58 K33      ; R58 := "_xscale"
863 [-]: MOVE      R59 R31      ; R59 := R31
864 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
865 [-]: GETGLOBAL R55 K24      ; R55 := mMovie
866 [-]: SELF      R55 R55 K37  ; R56 := R55; R55 := R55["0x1C19D966"]
867 [-]: LOADK     R57 K99      ; R57 := "VoidTrader"
868 [-]: LOADK     R58 K34      ; R58 := "_yscale"
869 [-]: MOVE      R59 R31      ; R59 := R31
870 [-]: CALL      R55 5 1      ; R55(R56,R57,R58,R59)
871 [-]: GETUPVAL  R55 U27      ; R55 := U27
872 [-]: CALL      R55 1 1      ; R55()
873 [-]: GETUPVAL  R55 U28      ; R55 := U28
874 [-]: CALL      R55 1 1      ; R55()
875 [-]: GETUPVAL  R55 U26      ; R55 := U26
876 [-]: GETTABLE  R55 R55 K96  ; R55 := R55["Active"]
877 [-]: TEST      R55 0        ; if not R55 then PC := 899
878 [-]: JMP       899          ; PC := 899
879 [-]: GETGLOBAL R55 K102     ; R55 := 0x41AF6EE8
880 [-]: CALL      R55 1 2      ; R55 := R55()
881 [-]: GETUPVAL  R56 U26      ; R56 := U26
882 [-]: GETTABLE  R56 R56 K104 ; R56 := R56["Expiry"]
883 [-]: SETTABLE  R55 K103 R56 ; R55["sec"] := R56
884 [-]: GETGLOBAL R56 K105     ; R56 := Engine
885 [-]: GETTABLE  R56 R56 K106 ; R56 := R56["0xD09D7910"]
886 [-]: MOVE      R57 R55      ; R57 := R55
887 [-]: CALL      R56 2 2      ; R56 := R56(R57)
888 [-]: LE        0 R56 K9     ; if R56 > 0 then PC := 899
889 [-]: JMP       899          ; PC := 899
890 [-]: GETUPVAL  R57 U26      ; R57 := U26
891 [-]: SETTABLE  R57 K96 K107 ; R57["Active"] := "0x0"
892 [-]: GETGLOBAL R57 K24      ; R57 := mMovie
893 [-]: SELF      R57 R57 K37  ; R58 := R57; R57 := R57["0x1C19D966"]
894 [-]: LOADK     R59 K99      ; R59 := "VoidTrader"
895 [-]: LOADK     R60 K108     ; R60 := "_visible"
896 [-]: GETUPVAL  R61 U26      ; R61 := U26
897 [-]: GETTABLE  R61 R61 K96  ; R61 := R61["Active"]
898 [-]: CALL      R57 5 1      ; R57(R58,R59,R60,R61)
899 [-]: GETGLOBAL R57 K56      ; R57 := 0x400E7765
900 [-]: GETUPVAL  R58 U29      ; R58 := U29
901 [-]: GETTABLE  R58 R58 K7   ; R58 := R58["Region"]
902 [-]: CALL      R57 2 2      ; R57 := R57(R58)
903 [-]: TEST      R57 1        ; if R57 then PC := 1114
904 [-]: JMP       1114         ; PC := 1114
905 [-]: GETGLOBAL R57 K15      ; R57 := 0x6374FD98
906 [-]: MOVE      R58 R2       ; R58 := R2
907 [-]: GETUPVAL  R59 U14      ; R59 := U14
908 [-]: GETTABLE  R59 R59 K36  ; R59 := R59["LAYER_2_RANGE"]
909 [-]: GETTABLE  R59 R59 K17  ; R59 := R59["minValue"]
910 [-]: GETUPVAL  R60 U14      ; R60 := U14
911 [-]: GETTABLE  R60 R60 K36  ; R60 := R60["LAYER_2_RANGE"]
912 [-]: GETTABLE  R60 R60 K18  ; R60 := R60["maxValue"]
913 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
914 [-]: MOVE      R2 R57       ; R2 := R57
915 [-]: GETUPVAL  R57 U14      ; R57 := U14
916 [-]: GETTABLE  R57 R57 K36  ; R57 := R57["LAYER_2_RANGE"]
917 [-]: SELF      R57 R57 K19  ; R58 := R57; R57 := R57["0x3B43F25"]
918 [-]: MOVE      R59 R2       ; R59 := R2
919 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
920 [-]: LOADNIL   R58 R59      ; R58 := R59 := nil
921 [-]: GETGLOBAL R60 K109     ; R60 := 0xECFDD17
922 [-]: GETUPVAL  R61 U29      ; R61 := U29
923 [-]: GETTABLE  R61 R61 K38  ; R61 := R61["Nodes"]
924 [-]: CALL      R60 2 4      ; R60,R61,R62 := R60(R61)
925 [-]: JMP       1090         ; PC := 1090
926 [-]: GETTABLE  R65 R64 K45  ; R65 := R64["radialSector"]
927 [-]: GETTABLE  R66 R64 K46  ; R66 := R64["position"]
928 [-]: GETGLOBAL R67 K24      ; R67 := mMovie
929 [-]: SELF      R67 R67 K25  ; R68 := R67; R67 := R67["0x3688C0F4"]
930 [-]: MOVE      R69 R15      ; R69 := R15
931 [-]: MOVE      R70 R66      ; R70 := R66
932 [-]: MOVE      R71 R1       ; R71 := R1
933 [-]: GETUPVAL  R72 U20      ; R72 := U20
934 [-]: CALL      R67 6 1      ; R67(R68,R69,R70,R71,R72)
935 [-]: GETGLOBAL R67 K24      ; R67 := mMovie
936 [-]: SELF      R67 R67 K27  ; R68 := R67; R67 := R67["0x4717530F"]
937 [-]: GETTABLE  R69 R64 K28  ; R69 := R64["memberIndex"]
938 [-]: GETTABLE  R70 R15 K2   ; R70 := R15["x"]
939 [-]: GETTABLE  R71 R15 K4   ; R71 := R15["y"]
940 [-]: CALL      R67 5 1      ; R67(R68,R69,R70,R71)
941 [-]: GETGLOBAL R67 K20      ; R67 := 0x93034B55
942 [-]: LOADK     R68 K47      ; R68 := 20
943 [-]: LOADK     R69 K23      ; R69 := 50
944 [-]: MOVE      R70 R57      ; R70 := R57
945 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
946 [-]: GETTABLE  R68 R64 K48  ; R68 := R64["isSurfaceNode"]
947 [-]: TEST      R68 0        ; if not R68 then PC := 1059
948 [-]: JMP       1059         ; PC := 1059
949 [-]: LOADK     R58 K13      ; R58 := 100
950 [-]: GETTABLE  R59 R66 K49  ; R59 := R66["z"]
951 [-]: MUL       R59 R59 K29  ; R59 := R59 * 10
952 [-]: LE        0 K9 R59     ; if 0 > R59 then PC := 969
953 [-]: JMP       969          ; PC := 969
954 [-]: GETGLOBAL R68 K20      ; R68 := 0x93034B55
955 [-]: LOADK     R69 K50      ; R69 := 75
956 [-]: LOADK     R70 K23      ; R70 := 50
957 [-]: GETGLOBAL R71 K15      ; R71 := 0x6374FD98
958 [-]: GETGLOBAL R72 K51      ; R72 := math
959 [-]: GETTABLE  R72 R72 K52  ; R72 := R72["0xD6F2D811"]
960 [-]: MOVE      R73 R59      ; R73 := R59
961 [-]: LOADK     R74 K53      ; R74 := 3
962 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
963 [-]: LOADK     R73 K9       ; R73 := 0
964 [-]: LOADK     R74 K10      ; R74 := 1
965 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
966 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
967 [-]: MOVE      R58 R68      ; R58 := R68
968 [-]: JMP       986          ; PC := 986
969 [-]: GETGLOBAL R68 K20      ; R68 := 0x93034B55
970 [-]: LOADK     R69 K50      ; R69 := 75
971 [-]: LOADK     R70 K13      ; R70 := 100
972 [-]: GETGLOBAL R71 K15      ; R71 := 0x6374FD98
973 [-]: GETGLOBAL R72 K51      ; R72 := math
974 [-]: GETTABLE  R72 R72 K52  ; R72 := R72["0xD6F2D811"]
975 [-]: GETGLOBAL R73 K51      ; R73 := math
976 [-]: GETTABLE  R73 R73 K54  ; R73 := R73["0xF93F7CC8"]
977 [-]: MOVE      R74 R59      ; R74 := R59
978 [-]: CALL      R73 2 2      ; R73 := R73(R74)
979 [-]: LOADK     R74 K53      ; R74 := 3
980 [-]: CALL      R72 3 2      ; R72 := R72(R73,R74)
981 [-]: LOADK     R73 K9       ; R73 := 0
982 [-]: LOADK     R74 K10      ; R74 := 1
983 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
984 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
985 [-]: MOVE      R58 R68      ; R58 := R68
986 [-]: GETUPVAL  R68 U21      ; R68 := U21
987 [-]: GETTABLE  R69 R65 K55  ; R69 := R65["region"]
988 [-]: ADD       R69 R69 K10  ; R69 := R69 + 1
989 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
990 [-]: GETGLOBAL R69 K56      ; R69 := 0x400E7765
991 [-]: MOVE      R70 R68      ; R70 := R68
992 [-]: CALL      R69 2 2      ; R69 := R69(R70)
993 [-]: TEST      R69 1        ; if R69 then PC := 1019
994 [-]: JMP       1019         ; PC := 1019
995 [-]: SELF      R69 R68 K57  ; R70 := R68; R69 := R68["0x8EEB099D"]
996 [-]: MOVE      R71 R16      ; R71 := R16
997 [-]: CALL      R69 3 1      ; R69(R70,R71)
998 [-]: GETGLOBAL R69 K58      ; R69 := 0x518098BD
999 [-]: MOVE      R70 R18      ; R70 := R18
1000 [-]: MOVE      R71 R66      ; R71 := R66
1001 [-]: MOVE      R72 R16      ; R72 := R16
1002 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1003 [-]: GETGLOBAL R69 K59      ; R69 := 0x20F748B4
1004 [-]: MOVE      R70 R17      ; R70 := R17
1005 [-]: MOVE      R71 R1       ; R71 := R1
1006 [-]: MOVE      R72 R18      ; R72 := R18
1007 [-]: CALL      R69 4 1      ; R69(R70,R71,R72)
1008 [-]: GETTABLE  R69 R17 K60  ; R69 := R17["heading"]
1009 [-]: UNM       R69 R69      ; R69 := - R69
1010 [-]: SETTABLE  R17 K60 R69  ; R17["heading"] := R69
1011 [-]: GETGLOBAL R69 K15      ; R69 := 0x6374FD98
1012 [-]: GETTABLE  R70 R17 K61  ; R70 := R17["pitch"]
1013 [-]: MUL       R70 R70 K62  ; R70 := R70 * 0.75
1014 [-]: LOADK     R71 K63      ; R71 := -75
1015 [-]: LOADK     R72 K50      ; R72 := 75
1016 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
1017 [-]: SETTABLE  R17 K61 R69  ; R17["pitch"] := R69
1018 [-]: JMP       1023         ; PC := 1023
1019 [-]: NEWTABLE  R69 0 2      ; R69 := {}
1020 [-]: SETTABLE  R69 K60 K9   ; R69["heading"] := 0
1021 [-]: SETTABLE  R69 K61 K9   ; R69["pitch"] := 0
1022 [-]: MOVE      R17 R69      ; R17 := R69
1023 [-]: GETTABLE  R69 R64 K64  ; R69 := R64["visibleLabel"]
1024 [-]: TEST      R69 1        ; if R69 then PC := 1044
1025 [-]: JMP       1044         ; PC := 1044
1026 [-]: GETTABLE  R69 R64 K65  ; R69 := R64["isShortcut"]
1027 [-]: TEST      R69 1        ; if R69 then PC := 1044
1028 [-]: JMP       1044         ; PC := 1044
1029 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1030 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1031 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1032 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1033 [-]: LOADK     R73 K69      ; R73 := "_heading"
1034 [-]: GETTABLE  R74 R17 K60  ; R74 := R17["heading"]
1035 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1036 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1037 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1038 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1039 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1040 [-]: LOADK     R73 K70      ; R73 := "_pitch"
1041 [-]: GETTABLE  R74 R17 K61  ; R74 := R17["pitch"]
1042 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1043 [-]: JMP       1078         ; PC := 1078
1044 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1045 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1046 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1047 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1048 [-]: LOADK     R73 K69      ; R73 := "_heading"
1049 [-]: GETTABLE  R74 R17 K60  ; R74 := R17["heading"]
1050 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1051 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1052 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1053 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1054 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1055 [-]: LOADK     R73 K70      ; R73 := "_pitch"
1056 [-]: GETTABLE  R74 R17 K61  ; R74 := R17["pitch"]
1057 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1058 [-]: JMP       1078         ; PC := 1078
1059 [-]: GETUPVAL  R69 U12      ; R69 := U12
1060 [-]: GETUPVAL  R70 U13      ; R70 := U13
1061 [-]: GETTABLE  R70 R70 K11  ; R70 := R70["READ_ONLY"]
1062 [-]: EQ        1 R69 R70    ; if R69 == R70 then PC := 1078
1063 [-]: JMP       1078         ; PC := 1078
1064 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1065 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1066 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1067 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1068 [-]: LOADK     R73 K69      ; R73 := "_heading"
1069 [-]: LOADK     R74 K9       ; R74 := 0
1070 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1071 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1072 [-]: SELF      R69 R69 K66  ; R70 := R69; R69 := R69["0x880196A7"]
1073 [-]: GETTABLE  R71 R64 K67  ; R71 := R64["clipName"]
1074 [-]: LOADK     R72 K68      ; R72 := "Node.Container"
1075 [-]: LOADK     R73 K70      ; R73 := "_pitch"
1076 [-]: LOADK     R74 K9       ; R74 := 0
1077 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1078 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1079 [-]: SELF      R69 R69 K32  ; R70 := R69; R69 := R69["0x445651FB"]
1080 [-]: GETTABLE  R71 R64 K71  ; R71 := R64["nodeIndex"]
1081 [-]: LOADK     R72 K33      ; R72 := "_xscale"
1082 [-]: MOVE      R73 R67      ; R73 := R67
1083 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1084 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1085 [-]: SELF      R69 R69 K32  ; R70 := R69; R69 := R69["0x445651FB"]
1086 [-]: GETTABLE  R71 R64 K71  ; R71 := R64["nodeIndex"]
1087 [-]: LOADK     R72 K34      ; R72 := "_yscale"
1088 [-]: MOVE      R73 R67      ; R73 := R67
1089 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1090 [-]: TFORLOOP  R60 2        ; R63,R64 :=  R60(R61,R62); if R63 ~= nil then begin PC = 926; R62 := R63 end
1091 [-]: JMP       926          ; PC := 926
1092 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1093 [-]: SELF      R69 R69 K25  ; R70 := R69; R69 := R69["0x3688C0F4"]
1094 [-]: MOVE      R71 R15      ; R71 := R15
1095 [-]: GETUPVAL  R72 U15      ; R72 := U15
1096 [-]: GETUPVAL  R73 U29      ; R73 := U29
1097 [-]: GETTABLE  R73 R73 K110 ; R73 := R73["SubLabelIndex"]
1098 [-]: GETTABLE  R72 R72 R73  ; R72 := R72[R73]
1099 [-]: GETTABLE  R72 R72 K26  ; R72 := R72["pos"]
1100 [-]: MOVE      R73 R1       ; R73 := R1
1101 [-]: MOVE      R74 R0       ; R74 := R0
1102 [-]: CALL      R69 6 1      ; R69(R70,R71,R72,R73,R74)
1103 [-]: GETGLOBAL R69 K24      ; R69 := mMovie
1104 [-]: SELF      R69 R69 K27  ; R70 := R69; R69 := R69["0x4717530F"]
1105 [-]: GETUPVAL  R71 U15      ; R71 := U15
1106 [-]: GETUPVAL  R72 U29      ; R72 := U29
1107 [-]: GETTABLE  R72 R72 K110 ; R72 := R72["SubLabelIndex"]
1108 [-]: GETTABLE  R71 R71 R72  ; R71 := R71[R72]
1109 [-]: GETTABLE  R71 R71 K28  ; R71 := R71["memberIndex"]
1110 [-]: GETTABLE  R72 R15 K2   ; R72 := R15["x"]
1111 [-]: GETTABLE  R73 R15 K4   ; R73 := R15["y"]
1112 [-]: SUB       R73 R73 K29  ; R73 := R73 - 10
1113 [-]: CALL      R69 5 1      ; R69(R70,R71,R72,R73)
1114 [-]: GETUPVAL  R69 U6       ; R69 := U6
1115 [-]: GETTABLE  R69 R69 K5   ; R69 := R69["Node"]
1116 [-]: EQ        1 R69 K8     ; if R69 == nil then PC := 1206
1117 [-]: JMP       1206         ; PC := 1206
1118 [-]: GETUPVAL  R69 U6       ; R69 := U6
1119 [-]: GETTABLE  R69 R69 K5   ; R69 := R69["Node"]
1120 [-]: GETTABLE  R69 R69 K65  ; R69 := R69["isShortcut"]
1121 [-]: TEST      R69 1        ; if R69 then PC := 1206
1122 [-]: JMP       1206         ; PC := 1206
1123 [-]: GETUPVAL  R69 U6       ; R69 := U6
1124 [-]: GETTABLE  R69 R69 K5   ; R69 := R69["Node"]
1125 [-]: GETTABLE  R69 R69 K90  ; R69 := R69["isJunction"]
1126 [-]: TEST      R69 1        ; if R69 then PC := 1206
1127 [-]: JMP       1206         ; PC := 1206
1128 [-]: GETUPVAL  R69 U30      ; R69 := U30
1129 [-]: GETTABLE  R69 R69 K111 ; R69 := R69["0x69B983D"]
1130 [-]: GETGLOBAL R70 K24      ; R70 := mMovie
1131 [-]: GETUPVAL  R71 U6       ; R71 := U6
1132 [-]: GETTABLE  R71 R71 K5   ; R71 := R71["Node"]
1133 [-]: GETTABLE  R71 R71 K67  ; R71 := R71["clipName"]
1134 [-]: CALL      R69 3 3      ; R69,R70 := R69(R70,R71)
1135 [-]: LOADK     R71 K9       ; R71 := 0
1136 [-]: LOADNIL   R72 R72      ; R72 := nil
1137 [-]: GETGLOBAL R73 K24      ; R73 := mMovie
1138 [-]: SELF      R73 R73 K112 ; R74 := R73; R73 := R73["0xF3E132E0"]
1139 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1140 [-]: DIV       R73 R73 K31  ; R73 := R73 / 2
1141 [-]: LT        0 R73 R69    ; if R73 >= R69 then PC := 1146
1142 [-]: JMP       1146         ; PC := 1146
1143 [-]: SUB       R69 R69 K113 ; R69 := R69 - 380
1144 [-]: LOADK     R71 K114     ; R71 := -20
1145 [-]: JMP       1148         ; PC := 1148
1146 [-]: ADD       R69 R69 K93  ; R69 := R69 + 30
1147 [-]: LOADK     R71 K47      ; R71 := 20
1148 [-]: GETGLOBAL R73 K24      ; R73 := mMovie
1149 [-]: SELF      R73 R73 K115 ; R74 := R73; R73 := R73["0x68998E7D"]
1150 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1151 [-]: DIV       R73 R73 K31  ; R73 := R73 / 2
1152 [-]: LT        0 R73 R70    ; if R73 >= R70 then PC := 1157
1153 [-]: JMP       1157         ; PC := 1157
1154 [-]: SUB       R70 R70 K116 ; R70 := R70 - 300
1155 [-]: LOADK     R72 K114     ; R72 := -20
1156 [-]: JMP       1159         ; PC := 1159
1157 [-]: SUB       R70 R70 K29  ; R70 := R70 - 10
1158 [-]: LOADK     R72 K47      ; R72 := 20
1159 [-]: GETGLOBAL R73 K24      ; R73 := mMovie
1160 [-]: SELF      R73 R73 K37  ; R74 := R73; R73 := R73["0x1C19D966"]
1161 [-]: LOADK     R75 K117     ; R75 := "InfoTip"
1162 [-]: LOADK     R76 K100     ; R76 := "_x"
1163 [-]: MOVE      R77 R69      ; R77 := R69
1164 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1165 [-]: GETGLOBAL R73 K24      ; R73 := mMovie
1166 [-]: SELF      R73 R73 K37  ; R74 := R73; R73 := R73["0x1C19D966"]
1167 [-]: LOADK     R75 K117     ; R75 := "InfoTip"
1168 [-]: LOADK     R76 K101     ; R76 := "_y"
1169 [-]: MOVE      R77 R70      ; R77 := R70
1170 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1171 [-]: GETGLOBAL R73 K24      ; R73 := mMovie
1172 [-]: SELF      R73 R73 K32  ; R74 := R73; R73 := R73["0x445651FB"]
1173 [-]: GETUPVAL  R75 U6       ; R75 := U6
1174 [-]: GETTABLE  R75 R75 K5   ; R75 := R75["Node"]
1175 [-]: GETTABLE  R75 R75 K77  ; R75 := R75["labelIndex"]
1176 [-]: LOADK     R76 K35      ; R76 := "_alpha"
1177 [-]: LOADK     R77 K13      ; R77 := 100
1178 [-]: CALL      R73 5 1      ; R73(R74,R75,R76,R77)
1179 [-]: GETUPVAL  R73 U31      ; R73 := U31
1180 [-]: CALL      R73 1 1      ; R73()
1181 [-]: GETGLOBAL R73 K56      ; R73 := 0x400E7765
1182 [-]: GETUPVAL  R74 U32      ; R74 := U32
1183 [-]: GETTABLE  R74 R74 K118 ; R74 := R74["Projector"]
1184 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1185 [-]: TEST      R73 0        ; if not R73 then PC := 1206
1186 [-]: JMP       1206         ; PC := 1206
1187 [-]: GETUPVAL  R73 U32      ; R73 := U32
1188 [-]: GETGLOBAL R74 K119     ; R74 := gBackgroundRegion
1189 [-]: SELF      R74 R74 K120 ; R75 := R74; R74 := R74["0xBDD34CC6"]
1190 [-]: GETGLOBAL R76 K121     ; R76 := projectorEffect
1191 [-]: GETUPVAL  R77 U6       ; R77 := U6
1192 [-]: GETTABLE  R77 R77 K5   ; R77 := R77["Node"]
1193 [-]: GETTABLE  R77 R77 K46  ; R77 := R77["position"]
1194 [-]: GETGLOBAL R78 K12      ; R78 := 0x1E4F6281
1195 [-]: MOVE      R79 R71      ; R79 := R71
1196 [-]: MOVE      R80 R72      ; R80 := R72
1197 [-]: LOADK     R81 K9       ; R81 := 0
1198 [-]: CALL      R78 4 0      ; R78,... := R78(R79,R80,R81)
1199 [-]: CALL      R74 0 2      ; R74 := R74(R75,...)
1200 [-]: SETTABLE  R73 K118 R74 ; R73["Projector"] := R74
1201 [-]: GETUPVAL  R73 U32      ; R73 := U32
1202 [-]: GETTABLE  R73 R73 K118 ; R73 := R73["Projector"]
1203 [-]: SELF      R73 R73 K122 ; R74 := R73; R73 := R73["0x6A7E5F92"]
1204 [-]: LOADK     R75 K123     ; R75 := 0.125
1205 [-]: CALL      R73 3 1      ; R73(R74,R75)
1206 [-]: GETUPVAL  R73 U32      ; R73 := U32
1207 [-]: GETTABLE  R73 R73 K124 ; R73 := R73["Playing"]
1208 [-]: TEST      R73 0        ; if not R73 then PC := 1216
1209 [-]: JMP       1216         ; PC := 1216
1210 [-]: GETUPVAL  R73 U6       ; R73 := U6
1211 [-]: GETTABLE  R73 R73 K5   ; R73 := R73["Node"]
1212 [-]: EQ        0 R73 K8     ; if R73 ~= nil then PC := 1216
1213 [-]: JMP       1216         ; PC := 1216
1214 [-]: GETUPVAL  R73 U33      ; R73 := U33
1215 [-]: CALL      R73 1 1      ; R73()
1216 [-]: GETUPVAL  R73 U34      ; R73 := U34
1217 [-]: CALL      R73 1 1      ; R73()
1218 [-]: GETUPVAL  R73 U35      ; R73 := U35
1219 [-]: GETGLOBAL R74 K72      ; R74 := _T
1220 [-]: GETTABLE  R74 R74 K125 ; R74 := R74["REGION_ID_FORTRESS"]
1221 [-]: GETTABLE  R73 R73 R74  ; R73 := R73[R74]
1222 [-]: EQ        1 R73 K126   ; if R73 == "0x1" then PC := 1226
1223 [-]: JMP       1226         ; PC := 1226
1224 [-]: GETUPVAL  R73 U36      ; R73 := U36
1225 [-]: CALL      R73 1 1      ; R73()
1226 [-]: GETUPVAL  R73 U37      ; R73 := U37
1227 [-]: GETTABLE  R73 R73 K127 ; R73 := R73["Prop"]
1228 [-]: SELF      R73 R73 K3   ; R74 := R73; R73 := R73["0xC4E503B0"]
1229 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1230 [-]: GETUPVAL  R74 U37      ; R74 := U37
1231 [-]: GETTABLE  R74 R74 K127 ; R74 := R74["Prop"]
1232 [-]: SELF      R74 R74 K128 ; R75 := R74; R74 := R74["0x8C7099E9"]
1233 [-]: GETGLOBAL R76 K129     ; R76 := 0x4CDEF9FF
1234 [-]: CALL      R76 1 0      ; R76,... := R76()
1235 [-]: CALL      R74 0 1      ; R74(R75,...)
1236 [-]: GETGLOBAL R74 K51      ; R74 := math
1237 [-]: GETTABLE  R74 R74 K54  ; R74 := R74["0xF93F7CC8"]
1238 [-]: GETUPVAL  R75 U37      ; R75 := U37
1239 [-]: GETTABLE  R75 R75 K127 ; R75 := R75["Prop"]
1240 [-]: GETTABLE  R75 R75 K130 ; R75 := R75["mTargetVal"]
1241 [-]: SUB       R75 R73 R75  ; R75 := R73 - R75
1242 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1243 [-]: LT        1 K131 R74   ; if 0.0099999997764826 < R74 then PC := 1246
1244 [-]: JMP       1246         ; PC := 1246
1245 [-]: MOVE      R74 R0       ; R74 := R0
1246 [-]: MOVE      R74 R1       ; R74 := R1
1247 [-]: TEST      R74 0        ; if not R74 then PC := 1271
1248 [-]: JMP       1271         ; PC := 1271
1249 [-]: GETGLOBAL R75 K56      ; R75 := 0x400E7765
1250 [-]: GETUPVAL  R76 U38      ; R76 := U38
1251 [-]: CALL      R75 2 2      ; R75 := R75(R76)
1252 [-]: TEST      R75 1        ; if R75 then PC := 1271
1253 [-]: JMP       1271         ; PC := 1271
1254 [-]: GETUPVAL  R75 U39      ; R75 := U39
1255 [-]: GETTABLE  R75 R75 K132 ; R75 := R75["TransitioningOut"]
1256 [-]: TEST      R75 1        ; if R75 then PC := 1271
1257 [-]: JMP       1271         ; PC := 1271
1258 [-]: GETUPVAL  R75 U38      ; R75 := U38
1259 [-]: SELF      R75 R75 K80  ; R76 := R75; R75 := R75["0xEC183DDC"]
1260 [-]: GETGLOBAL R77 K133     ; R77 := 0xE0C881B4
1261 [-]: GETUPVAL  R78 U37      ; R78 := U37
1262 [-]: GETTABLE  R78 R78 K134 ; R78 := R78["Previous"]
1263 [-]: GETUPVAL  R79 U37      ; R79 := U37
1264 [-]: GETTABLE  R79 R79 K135 ; R79 := R79["Target"]
1265 [-]: GETUPVAL  R80 U37      ; R80 := U37
1266 [-]: GETTABLE  R80 R80 K127 ; R80 := R80["Prop"]
1267 [-]: SELF      R80 R80 K3   ; R81 := R80; R80 := R80["0xC4E503B0"]
1268 [-]: CALL      R80 2 0      ; R80,... := R80(R81)
1269 [-]: CALL      R77 0 0      ; R77,... := R77(R78,...)
1270 [-]: CALL      R75 0 1      ; R75(R76,...)
1271 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5216
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 33
  3 [-]: JMP       33           ; PC := 33
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mControlDown"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 33
  7 [-]: JMP       33           ; PC := 33
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 11 [-]: TEST      R0 0         ; if not R0 then PC := 33
 12 [-]: JMP       33           ; PC := 33
 13 [-]: GETUPVAL  R0 U3        ; R0 := U3
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0xB09F286F
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: GETUPVAL  R3 U4        ; R3 := U4
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: LT        0 K2 R1      ; if 0.10000000149012 >= R1 then PC := 33
 20 [-]: JMP       33           ; PC := 33
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 24 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0xD856231D"]
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U2        ; R1 := U2
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x1E436B2A"]
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: MOVE      R0 R4        ; R0 := R4
 33 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5228
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SETTABLE  R1 K0 R0     ; R1["IsVisible"] := R0
  3 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
  5 [-]: LOADK     R3 K3        ; R3 := "Reticle"
  6 [-]: LOADK     R4 K4        ; R4 := "_visible"
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["0xF81722A2"]
 13 [-]: MOVE      R3 R0        ; R3 := R0
 14 [-]: LOADK     R4 K6        ; R4 := 48
 15 [-]: LOADK     R5 K7        ; R5 := 32
 16 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 17 [-]: LOADK     R3 K8        ; R3 := 1
 18 [-]: MOVE      R4 R1        ; R4 := R1
 19 [-]: LOADK     R5 K8        ; R5 := 1
 20 [-]: FORPREP   R3 48        ; R3 -= R5; PC := 48
 21 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 22 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 23 [-]: GETUPVAL  R9 U1        ; R9 := U1
 24 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 26 [-]: LOADK     R10 K11      ; R10 := "Btn"
 27 [-]: LOADK     R11 K12      ; R11 := "_width"
 28 [-]: MOVE      R12 R2       ; R12 := R2
 29 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 30 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 31 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 32 [-]: GETUPVAL  R9 U1        ; R9 := U1
 33 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 34 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 35 [-]: LOADK     R10 K11      ; R10 := "Btn"
 36 [-]: LOADK     R11 K13      ; R11 := "_height"
 37 [-]: MOVE      R12 R2       ; R12 := R2
 38 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 39 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
 40 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7["0x880196A7"]
 41 [-]: GETUPVAL  R9 U1        ; R9 := U1
 42 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 43 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["clipName"]
 44 [-]: LOADK     R10 K14      ; R10 := "Name"
 45 [-]: LOADK     R11 K15      ; R11 := "enabled"
 46 [-]: MOVE      R12 R0       ; R12 := R0
 47 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 48 [-]: FORLOOP   R3 21        ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
 49 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 5240
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 40
  5 [-]: JMP       40           ; PC := 40
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["pos"]
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["x"]
 12 [-]: LT        1 R2 K4      ; if R2 < 0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: GETGLOBAL R3 K5        ; R3 := _T
 17 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["radialSector"]
 18 [-]: SETTABLE  R3 K6 R4     ; R3["JunctionTasksUIRadialSector"] := R4
 19 [-]: GETGLOBAL R3 K5        ; R3 := _T
 20 [-]: SETTABLE  R3 K8 R1     ; R3["JunctionTasksInstant"] := R1
 21 [-]: GETGLOBAL R3 K9        ; R3 := gFlashMgr
 22 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3["0x24FF386"]
 23 [-]: GETGLOBAL R5 K11       ; R5 := junctionTasksMovie
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: GETUPVAL  R3 U0        ; R3 := U0
 27 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3["0x163B749C"]
 28 [-]: MOVE      R5 R0        ; R5 := R0
 29 [-]: CALL      R3 3 1       ; R3(R4,R5)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3["0x458F27A9"]
 32 [-]: LOADK     R5 K14       ; R5 := "SetRightAligned"
 33 [-]: GETUPVAL  R6 U2        ; R6 := U2
 34 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["0xF81722A2"]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: LOADK     R8 K16       ; R8 := "true"
 37 [-]: LOADK     R9 K17       ; R9 := "false"
 38 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 39 [-]: CALL      R3 0 1       ; R3(R4,...)
 40 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 5252
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["MovieInst"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["MovieInst"]
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x458F27A9"]
 10 [-]: LOADK     R2 K3        ; R2 := "ForceClose"
 11 [-]: LOADK     R3 K4        ; R3 := ""
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: LOADK     R0 K5        ; R0 := 1
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: LEN       R1 R1        ; R1 := # R1
 16 [-]: LOADK     R2 K5        ; R2 := 1
 17 [-]: FORPREP   R0 50        ; R0 -= R2; PC := 50
 18 [-]: GETUPVAL  R4 U1        ; R4 := U1
 19 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 20 [-]: GETTABLE  R5 R4 K6     ; R5 := R4["locked"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["forceHover"]
 24 [-]: JMP       27           ; PC := 27
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: GETGLOBAL R6 K8        ; R6 := mMovie
 28 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6["0x1C19D966"]
 29 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["clipName"]
 30 [-]: LOADK     R9 K11       ; R9 := "enabled"
 31 [-]: TESTSET   R10 R5 0     ; if not R5 then PC := 49 else R10 := R5
 32 [-]: JMP       49           ; PC := 49
 33 [-]: GETGLOBAL R10 K12      ; R10 := _T
 34 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 35 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: GETTABLE  R10 R4 K15   ; R10 := R4["radialSector"]
 38 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 47
 39 [-]: JMP       47           ; PC := 47
 40 [-]: GETGLOBAL R10 K12      ; R10 := _T
 41 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["gPendingMission"]
 42 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["baseNodeName"]
 43 [-]: GETTABLE  R11 R4 K15   ; R11 := R4["radialSector"]
 44 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["name"]
 45 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: MOVE      R10 R0       ; R10 := R0
 48 [-]: MOVE      R10 R1       ; R10 := R1
 49 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 50 [-]: FORLOOP   R0 18        ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
 51 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 5265
; #Upvalues:       51
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  44

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6306558E
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
  4 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x80D6B1A"]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8C7099E9"]
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: CALL      R1 3 1       ; R1(R2,R3)
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 23 [-]: GETUPVAL  R2 U1        ; R2 := U1
 24 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["Zone"]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 28
 27 [-]: JMP       28           ; PC := 28
 28 [-]: GETGLOBAL R1 K1        ; R1 := 0x400E7765
 29 [-]: GETUPVAL  R2 U2        ; R2 := U2
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: TEST      R1 1         ; if R1 then PC := 57
 32 [-]: JMP       57           ; PC := 57
 33 [-]: LOADK     R1 K6        ; R1 := 1
 34 [-]: LOADK     R2 K7        ; R2 := 3
 35 [-]: LOADK     R3 K6        ; R3 := 1
 36 [-]: FORPREP   R1 42        ; R1 -= R3; PC := 42
 37 [-]: GETUPVAL  R5 U3        ; R5 := U3
 38 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
 39 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5["0x8C7099E9"]
 40 [-]: MOVE      R7 R0        ; R7 := R0
 41 [-]: CALL      R5 3 1       ; R5(R6,R7)
 42 [-]: FORLOOP   R1 37        ; R1 += R3; if R1 <= R2 then begin PC := 37; R4 := R1 end
 43 [-]: GETUPVAL  R5 U2        ; R5 := U2
 44 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0x8FD31352"]
 45 [-]: GETGLOBAL R7 K9        ; R7 := 0xB5A59043
 46 [-]: GETUPVAL  R8 U3        ; R8 := U3
 47 [-]: GETTABLE  R8 R8 K6     ; R8 := R8[1]
 48 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["mCurVal"]
 49 [-]: GETUPVAL  R9 U3        ; R9 := U3
 50 [-]: GETTABLE  R9 R9 K11    ; R9 := R9[2]
 51 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["mCurVal"]
 52 [-]: GETUPVAL  R10 U3       ; R10 := U3
 53 [-]: GETTABLE  R10 R10 K7   ; R10 := R10[3]
 54 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mCurVal"]
 55 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 56 [-]: CALL      R5 0 1       ; R5(R6,...)
 57 [-]: LOADNIL   R5 R5        ; R5 := nil
 58 [-]: MOVE      R5 R4        ; R5 := R4
 59 [-]: GETGLOBAL R5 K1        ; R5 := 0x400E7765
 60 [-]: GETUPVAL  R6 U5        ; R6 := U5
 61 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 62 [-]: TEST      R5 1         ; if R5 then PC := 77
 63 [-]: JMP       77           ; PC := 77
 64 [-]: GETUPVAL  R5 U5        ; R5 := U5
 65 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5["0x458F27A9"]
 66 [-]: LOADK     R7 K13       ; R7 := "IsBrowsingForDrone"
 67 [-]: LOADK     R8 K14       ; R8 := ""
 68 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 69 [-]: TEST      R5 1         ; if R5 then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETUPVAL  R5 U5        ; R5 := U5
 72 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5["0x458F27A9"]
 73 [-]: LOADK     R7 K15       ; R7 := "IsViewingExtractAllManifest"
 74 [-]: LOADK     R8 K14       ; R8 := ""
 75 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 76 [-]: JMP       79           ; PC := 79
 77 [-]: MOVE      R5 R0        ; R5 := R0
 78 [-]: MOVE      R5 R1        ; R5 := R1
 79 [-]: GETUPVAL  R6 U6        ; R6 := U6
 80 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETGLOBAL R6 K1        ; R6 := 0x400E7765
 83 [-]: GETUPVAL  R7 U7        ; R7 := U7
 84 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["Movie"]
 85 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 86 [-]: TEST      R6 1         ; if R6 then PC := 96
 87 [-]: JMP       96           ; PC := 96
 88 [-]: GETUPVAL  R6 U7        ; R6 := U7
 89 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["Movie"]
 90 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6["0x458F27A9"]
 91 [-]: LOADK     R8 K17       ; R8 := "ItemBrowsing"
 92 [-]: GETGLOBAL R9 K18       ; R9 := 0x9FAED6BC
 93 [-]: MOVE      R10 R5       ; R10 := R5
 94 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 95 [-]: CALL      R6 0 1       ; R6(R7,...)
 96 [-]: MOVE      R5 R6        ; R5 := R6
 97 [-]: GETGLOBAL R6 K19       ; R6 := _T
 98 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["HideSquadOverlay"]
 99 [-]: EQ        1 R6 K21     ; if R6 == nil then PC := 106
100 [-]: JMP       106          ; PC := 106
101 [-]: GETGLOBAL R6 K19       ; R6 := _T
102 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["HideSquadOverlay"]
103 [-]: LE        1 R6 K22     ; if R6 <= 0 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: MOVE      R6 R0        ; R6 := R0
106 [-]: MOVE      R6 R1        ; R6 := R1
107 [-]: GETGLOBAL R7 K2        ; R7 := mMovie
108 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7["0x625791A8"]
109 [-]: GETUPVAL  R9 U6        ; R9 := U6
110 [-]: TEST      R9 1         ; if R9 then PC := 130
111 [-]: JMP       130          ; PC := 130
112 [-]: GETUPVAL  R9 U7        ; R9 := U7
113 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["DioOpen"]
114 [-]: TEST      R9 1         ; if R9 then PC := 130
115 [-]: JMP       130          ; PC := 130
116 [-]: GETGLOBAL R9 K19       ; R9 := _T
117 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["BackgroundVisible"]
118 [-]: TEST      R9 1         ; if R9 then PC := 130
119 [-]: JMP       130          ; PC := 130
120 [-]: GETGLOBAL R9 K19       ; R9 := _T
121 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["HideMapRedux"]
122 [-]: EQ        1 R9 K21     ; if R9 == nil then PC := 128
123 [-]: JMP       128          ; PC := 128
124 [-]: GETGLOBAL R9 K19       ; R9 := _T
125 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["HideMapRedux"]
126 [-]: EQ        0 R9 K22     ; if R9 ~= 0 then PC := 130
127 [-]: JMP       130          ; PC := 130
128 [-]: MOVE      R9 R6        ; R9 := R6
129 [-]: JMP       132          ; PC := 132
130 [-]: MOVE      R9 R0        ; R9 := R0
131 [-]: MOVE      R9 R1        ; R9 := R1
132 [-]: CALL      R7 3 1       ; R7(R8,R9)
133 [-]: GETUPVAL  R7 U8        ; R7 := U8
134 [-]: CALL      R7 1 1       ; R7()
135 [-]: GETUPVAL  R7 U9        ; R7 := U9
136 [-]: TEST      R7 1         ; if R7 then PC := 232
137 [-]: JMP       232          ; PC := 232
138 [-]: GETGLOBAL R7 K19       ; R7 := _T
139 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["DesiredGoToNode"]
140 [-]: TEST      R7 0         ; if not R7 then PC := 210
141 [-]: JMP       210          ; PC := 210
142 [-]: GETGLOBAL R7 K28       ; R7 := 0xEC274B1A
143 [-]: GETGLOBAL R8 K19       ; R8 := _T
144 [-]: GETTABLE  R8 R8 K27    ; R8 := R8["DesiredGoToNode"]
145 [-]: CALL      R7 2 2       ; R7 := R7(R8)
146 [-]: GETUPVAL  R8 U10       ; R8 := U10
147 [-]: GETGLOBAL R9 K18       ; R9 := 0x9FAED6BC
148 [-]: MOVE      R10 R7       ; R10 := R7
149 [-]: CALL      R9 2 2       ; R9 := R9(R10)
150 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
151 [-]: CLOSURE   R9 0         ; R9 := closure(Function #124.1)
152 [-]: GETUPVAL  R0 U11       ; R0 := U11
153 [-]: MOVE      R0 R8        ; R0 := R8
154 [-]: GETUPVAL  R0 U12       ; R0 := U12
155 [-]: GETUPVAL  R0 U13       ; R0 := U13
156 [-]: GETUPVAL  R0 U14       ; R0 := U14
157 [-]: GETUPVAL  R0 U15       ; R0 := U15
158 [-]: GETUPVAL  R0 U0        ; R0 := U0
159 [-]: TEST      R8 0         ; if not R8 then PC := 189
160 [-]: JMP       189          ; PC := 189
161 [-]: GETUPVAL  R10 U16      ; R10 := U16
162 [-]: GETTABLE  R11 R8 K29   ; R11 := R8["radialSector"]
163 [-]: GETTABLE  R11 R11 K30  ; R11 := R11["region"]
164 [-]: ADD       R11 R11 K6   ; R11 := R11 + 1
165 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
166 [-]: GETUPVAL  R11 U17      ; R11 := U17
167 [-]: GETTABLE  R12 R8 K29   ; R12 := R8["radialSector"]
168 [-]: GETTABLE  R12 R12 K30  ; R12 := R12["region"]
169 [-]: ADD       R12 R12 K6   ; R12 := R12 + 1
170 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
171 [-]: TEST      R11 0        ; if not R11 then PC := 176
172 [-]: JMP       176          ; PC := 176
173 [-]: MOVE      R11 R9       ; R11 := R9
174 [-]: CALL      R11 1 1      ; R11()
175 [-]: JMP       206          ; PC := 206
176 [-]: GETUPVAL  R11 U18      ; R11 := U18
177 [-]: TEST      R11 0        ; if not R11 then PC := 184
178 [-]: JMP       184          ; PC := 184
179 [-]: GETUPVAL  R11 U19      ; R11 := U19
180 [-]: MOVE      R12 R10      ; R12 := R10
181 [-]: MOVE      R13 R9       ; R13 := R9
182 [-]: CALL      R11 3 1      ; R11(R12,R13)
183 [-]: JMP       206          ; PC := 206
184 [-]: GETUPVAL  R11 U20      ; R11 := U20
185 [-]: MOVE      R12 R10      ; R12 := R10
186 [-]: MOVE      R13 R9       ; R13 := R9
187 [-]: CALL      R11 3 1      ; R11(R12,R13)
188 [-]: JMP       206          ; PC := 206
189 [-]: GETUPVAL  R11 U21      ; R11 := U21
190 [-]: GETTABLE  R11 R11 K31  ; R11 := R11["SANCTUARY_ONSLAUGHT_NODE"]
191 [-]: EQ        1 R7 R11     ; if R7 == R11 then PC := 197
192 [-]: JMP       197          ; PC := 197
193 [-]: GETUPVAL  R11 U21      ; R11 := U21
194 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
195 [-]: EQ        0 R7 R11     ; if R7 ~= R11 then PC := 206
196 [-]: JMP       206          ; PC := 206
197 [-]: GETUPVAL  R11 U21      ; R11 := U21
198 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["0x2C74584B"]
199 [-]: GETUPVAL  R12 U21      ; R12 := U21
200 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
201 [-]: EQ        1 R7 R12     ; if R7 == R12 then PC := 204
202 [-]: JMP       204          ; PC := 204
203 [-]: MOVE      R12 R0       ; R12 := R0
204 [-]: MOVE      R12 R1       ; R12 := R1
205 [-]: CALL      R11 2 1      ; R11(R12)
206 [-]: GETGLOBAL R11 K19      ; R11 := _T
207 [-]: SETTABLE  R11 K27 K21  ; R11["DesiredGoToNode"] := nil
208 [-]: CLOSE     R7           ; SAVE R7,...
209 [-]: JMP       232          ; PC := 232
210 [-]: GETGLOBAL R7 K19       ; R7 := _T
211 [-]: GETTABLE  R7 R7 K34    ; R7 := R7["DesiredGoToRegion"]
212 [-]: TEST      R7 0         ; if not R7 then PC := 232
213 [-]: JMP       232          ; PC := 232
214 [-]: GETUPVAL  R7 U18       ; R7 := U18
215 [-]: TEST      R7 0         ; if not R7 then PC := 224
216 [-]: JMP       224          ; PC := 224
217 [-]: GETUPVAL  R7 U19       ; R7 := U19
218 [-]: GETUPVAL  R8 U16       ; R8 := U16
219 [-]: GETGLOBAL R9 K19       ; R9 := _T
220 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["DesiredGoToRegion"]
221 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
222 [-]: CALL      R7 2 1       ; R7(R8)
223 [-]: JMP       230          ; PC := 230
224 [-]: GETUPVAL  R7 U20       ; R7 := U20
225 [-]: GETUPVAL  R8 U16       ; R8 := U16
226 [-]: GETGLOBAL R9 K19       ; R9 := _T
227 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["DesiredGoToRegion"]
228 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
229 [-]: CALL      R7 2 1       ; R7(R8)
230 [-]: GETGLOBAL R7 K19       ; R7 := _T
231 [-]: SETTABLE  R7 K34 K21   ; R7["DesiredGoToRegion"] := nil
232 [-]: GETUPVAL  R7 U22       ; R7 := U22
233 [-]: CALL      R7 1 1       ; R7()
234 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
235 [-]: GETGLOBAL R8 K35       ; R8 := gBackgroundRegion
236 [-]: CALL      R7 2 2       ; R7 := R7(R8)
237 [-]: TEST      R7 0         ; if not R7 then PC := 240
238 [-]: JMP       240          ; PC := 240
239 [-]: RETURN    R0 1         ; return 
240 [-]: GETUPVAL  R7 U23       ; R7 := U23
241 [-]: CALL      R7 1 1       ; R7()
242 [-]: GETUPVAL  R7 U24       ; R7 := U24
243 [-]: CALL      R7 1 1       ; R7()
244 [-]: GETUPVAL  R7 U25       ; R7 := U25
245 [-]: CALL      R7 1 1       ; R7()
246 [-]: GETUPVAL  R7 U26       ; R7 := U26
247 [-]: CALL      R7 1 1       ; R7()
248 [-]: GETGLOBAL R7 K19       ; R7 := _T
249 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["WareframeChallenge"]
250 [-]: TEST      R7 0         ; if not R7 then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETUPVAL  R7 U27       ; R7 := U27
253 [-]: CALL      R7 1 1       ; R7()
254 [-]: GETUPVAL  R7 U28       ; R7 := U28
255 [-]: TEST      R7 0         ; if not R7 then PC := 265
256 [-]: JMP       265          ; PC := 265
257 [-]: GETUPVAL  R7 U14       ; R7 := U14
258 [-]: GETTABLE  R7 R7 K37    ; R7 := R7["0x1C988750"]
259 [-]: LOADK     R8 K38       ; R8 := "/Lotus/Language/Menu/SoloModeRequired"
260 [-]: LOADK     R9 K39       ; R9 := "ConfirmSoloMission"
261 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
262 [-]: MOVE      R7 R29       ; R7 := R29
263 [-]: MOVE      R7 R0        ; R7 := R0
264 [-]: MOVE      R7 R28       ; R7 := R28
265 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
266 [-]: GETUPVAL  R8 U18       ; R8 := U18
267 [-]: CALL      R7 2 2       ; R7 := R7(R8)
268 [-]: TEST      R7 1         ; if R7 then PC := 414
269 [-]: JMP       414          ; PC := 414
270 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
271 [-]: GETUPVAL  R8 U18       ; R8 := U18
272 [-]: GETTABLE  R8 R8 K40    ; R8 := R8["instance"]
273 [-]: CALL      R7 2 2       ; R7 := R7(R8)
274 [-]: TEST      R7 1         ; if R7 then PC := 414
275 [-]: JMP       414          ; PC := 414
276 [-]: GETGLOBAL R7 K1        ; R7 := 0x400E7765
277 [-]: GETUPVAL  R8 U30       ; R8 := U30
278 [-]: CALL      R7 2 2       ; R7 := R7(R8)
279 [-]: TEST      R7 1         ; if R7 then PC := 414
280 [-]: JMP       414          ; PC := 414
281 [-]: GETGLOBAL R7 K41       ; R7 := 0x4CDEF9FF
282 [-]: CALL      R7 1 2       ; R7 := R7()
283 [-]: GETUPVAL  R8 U31       ; R8 := U31
284 [-]: SELF      R8 R8 K42    ; R9 := R8; R8 := R8["0xF23A7849"]
285 [-]: CALL      R8 2 2       ; R8 := R8(R9)
286 [-]: GETTABLE  R9 R8 K43    ; R9 := R8["heading"]
287 [-]: UNM       R9 R9        ; R9 := - R9
288 [-]: SETTABLE  R8 K43 R9    ; R8["heading"] := R9
289 [-]: GETTABLE  R9 R8 K44    ; R9 := R8["pitch"]
290 [-]: UNM       R9 R9        ; R9 := - R9
291 [-]: SETTABLE  R8 K44 R9    ; R8["pitch"] := R9
292 [-]: GETUPVAL  R9 U18       ; R9 := U18
293 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["instance"]
294 [-]: SELF      R9 R9 K45    ; R10 := R9; R9 := R9["0x6DA72501"]
295 [-]: CALL      R9 2 2       ; R9 := R9(R10)
296 [-]: GETGLOBAL R10 K46      ; R10 := 0x96BEA6B
297 [-]: MOVE      R11 R9       ; R11 := R9
298 [-]: MOVE      R12 R9       ; R12 := R9
299 [-]: GETUPVAL  R13 U32      ; R13 := U32
300 [-]: GETTABLE  R13 R13 K47  ; R13 := R13["CAMERA_OFFSET"]
301 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
302 [-]: GETGLOBAL R10 K2       ; R10 := mMovie
303 [-]: SELF      R10 R10 K48  ; R11 := R10; R10 := R10["0xBAE5F929"]
304 [-]: CALL      R10 2 2      ; R10 := R10(R11)
305 [-]: GETGLOBAL R11 K2       ; R11 := mMovie
306 [-]: SELF      R11 R11 K49  ; R12 := R11; R11 := R11["0xF595D5E1"]
307 [-]: CALL      R11 2 2      ; R11 := R11(R12)
308 [-]: DIV       R10 R10 R11  ; R10 := R10 / R11
309 [-]: GETGLOBAL R11 K2       ; R11 := mMovie
310 [-]: SELF      R11 R11 K50  ; R12 := R11; R11 := R11["0x6ACD1B87"]
311 [-]: CALL      R11 2 2      ; R11 := R11(R12)
312 [-]: GETGLOBAL R12 K2       ; R12 := mMovie
313 [-]: SELF      R12 R12 K51  ; R13 := R12; R12 := R12["0xEE069D65"]
314 [-]: CALL      R12 2 2      ; R12 := R12(R13)
315 [-]: DIV       R11 R11 R12  ; R11 := R11 / R12
316 [-]: GETTABLE  R12 R9 K52   ; R12 := R9["x"]
317 [-]: MUL       R13 R10 K11  ; R13 := R10 * 2
318 [-]: SUB       R13 R13 K6   ; R13 := R13 - 1
319 [-]: GETGLOBAL R14 K53      ; R14 := math
320 [-]: GETTABLE  R14 R14 K54  ; R14 := R14["0xE0F1DBD7"]
321 [-]: GETGLOBAL R15 K53      ; R15 := math
322 [-]: GETTABLE  R15 R15 K55  ; R15 := R15["pi"]
323 [-]: DIV       R15 R15 K56  ; R15 := R15 / 180
324 [-]: MUL       R15 K57 R15  ; R15 := 40 * R15
325 [-]: CALL      R14 2 2      ; R14 := R14(R15)
326 [-]: MUL       R13 R13 R14  ; R13 := R13 * R14
327 [-]: MUL       R13 R13 K58  ; R13 := R13 * 1.5
328 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
329 [-]: SETTABLE  R9 K52 R12   ; R9["x"] := R12
330 [-]: GETTABLE  R12 R9 K59   ; R12 := R9["y"]
331 [-]: MUL       R13 R11 K11  ; R13 := R11 * 2
332 [-]: SUB       R13 R13 K6   ; R13 := R13 - 1
333 [-]: UNM       R13 R13      ; R13 := - R13
334 [-]: MUL       R13 R13 K60  ; R13 := R13 * 0.75
335 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
336 [-]: SETTABLE  R9 K59 R12   ; R9["y"] := R12
337 [-]: GETGLOBAL R12 K61      ; R12 := 0x518098BD
338 [-]: MOVE      R13 R9       ; R13 := R9
339 [-]: MOVE      R14 R9       ; R14 := R9
340 [-]: GETUPVAL  R15 U31      ; R15 := U31
341 [-]: SELF      R15 R15 K62  ; R16 := R15; R15 := R15["0xA2B01604"]
342 [-]: GETUPVAL  R17 U33      ; R17 := U33
343 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["GAME_C1_HEAD1"]
344 [-]: CALL      R15 3 0      ; R15,... := R15(R16,R17)
345 [-]: CALL      R12 0 1      ; R12(R13,...)
346 [-]: GETGLOBAL R12 K46      ; R12 := 0x96BEA6B
347 [-]: MOVE      R13 R9       ; R13 := R9
348 [-]: MOVE      R14 R9       ; R14 := R9
349 [-]: GETUPVAL  R15 U34      ; R15 := U34
350 [-]: GETTABLE  R15 R15 K64  ; R15 := R15["skyOrigin"]
351 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
352 [-]: GETUPVAL  R12 U30      ; R12 := U30
353 [-]: SELF      R12 R12 K45  ; R13 := R12; R12 := R12["0x6DA72501"]
354 [-]: CALL      R12 2 2      ; R12 := R12(R13)
355 [-]: GETUPVAL  R13 U35      ; R13 := U35
356 [-]: GETTABLE  R14 R12 K65  ; R14 := R12["z"]
357 [-]: CALL      R13 2 1      ; R13(R14)
358 [-]: SETTABLE  R12 K65 K66  ; R12["z"] := -1
359 [-]: GETGLOBAL R13 K61      ; R13 := 0x518098BD
360 [-]: MOVE      R14 R9       ; R14 := R9
361 [-]: MOVE      R15 R9       ; R15 := R9
362 [-]: MOVE      R16 R12      ; R16 := R12
363 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
364 [-]: GETGLOBAL R13 K67      ; R13 := 0x4CBE9A09
365 [-]: MOVE      R14 R9       ; R14 := R9
366 [-]: MOVE      R15 R8       ; R15 := R8
367 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
368 [-]: GETGLOBAL R14 K68      ; R14 := 0xEDD2EBFF
369 [-]: GETGLOBAL R15 K69      ; R15 := ZERO_VECTOR
370 [-]: MOVE      R16 R13      ; R16 := R13
371 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
372 [-]: GETGLOBAL R15 K70      ; R15 := 0x6374FD98
373 [-]: GETTABLE  R16 R14 K43  ; R16 := R14["heading"]
374 [-]: LOADK     R17 K71      ; R17 := -45
375 [-]: LOADK     R18 K72      ; R18 := 45
376 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
377 [-]: SETTABLE  R14 K43 R15  ; R14["heading"] := R15
378 [-]: GETGLOBAL R15 K70      ; R15 := 0x6374FD98
379 [-]: GETTABLE  R16 R14 K44  ; R16 := R14["pitch"]
380 [-]: LOADK     R17 K73      ; R17 := -35
381 [-]: LOADK     R18 K74      ; R18 := 35
382 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
383 [-]: SETTABLE  R14 K44 R15  ; R14["pitch"] := R15
384 [-]: SETTABLE  R14 K75 K22  ; R14["bank"] := 0
385 [-]: GETUPVAL  R15 U36      ; R15 := U36
386 [-]: SELF      R15 R15 K76  ; R16 := R15; R15 := R15["0xDB349344"]
387 [-]: GETTABLE  R17 R14 K43  ; R17 := R14["heading"]
388 [-]: CALL      R15 3 1      ; R15(R16,R17)
389 [-]: GETUPVAL  R15 U37      ; R15 := U37
390 [-]: SELF      R15 R15 K76  ; R16 := R15; R15 := R15["0xDB349344"]
391 [-]: GETTABLE  R17 R14 K44  ; R17 := R14["pitch"]
392 [-]: CALL      R15 3 1      ; R15(R16,R17)
393 [-]: GETUPVAL  R15 U36      ; R15 := U36
394 [-]: SELF      R15 R15 K4   ; R16 := R15; R15 := R15["0x8C7099E9"]
395 [-]: MOVE      R17 R7       ; R17 := R7
396 [-]: CALL      R15 3 1      ; R15(R16,R17)
397 [-]: GETUPVAL  R15 U37      ; R15 := U37
398 [-]: SELF      R15 R15 K4   ; R16 := R15; R15 := R15["0x8C7099E9"]
399 [-]: MOVE      R17 R7       ; R17 := R7
400 [-]: CALL      R15 3 1      ; R15(R16,R17)
401 [-]: GETUPVAL  R15 U36      ; R15 := U36
402 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["mCurVal"]
403 [-]: SETTABLE  R14 K43 R15  ; R14["heading"] := R15
404 [-]: GETUPVAL  R15 U37      ; R15 := U37
405 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["mCurVal"]
406 [-]: SETTABLE  R14 K44 R15  ; R14["pitch"] := R15
407 [-]: GETUPVAL  R15 U31      ; R15 := U31
408 [-]: SELF      R15 R15 K77  ; R16 := R15; R15 := R15["0x42C8B968"]
409 [-]: GETUPVAL  R17 U33      ; R17 := U33
410 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["GAME_C1_HEAD1"]
411 [-]: MOVE      R18 R14      ; R18 := R14
412 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
413 [-]: JMP       425          ; PC := 425
414 [-]: GETGLOBAL R15 K1       ; R15 := 0x400E7765
415 [-]: GETUPVAL  R16 U31      ; R16 := U31
416 [-]: CALL      R15 2 2      ; R15 := R15(R16)
417 [-]: TEST      R15 1        ; if R15 then PC := 425
418 [-]: JMP       425          ; PC := 425
419 [-]: GETUPVAL  R15 U31      ; R15 := U31
420 [-]: SELF      R15 R15 K77  ; R16 := R15; R15 := R15["0x42C8B968"]
421 [-]: GETUPVAL  R17 U33      ; R17 := U33
422 [-]: GETTABLE  R17 R17 K63  ; R17 := R17["GAME_C1_HEAD1"]
423 [-]: GETGLOBAL R18 K78      ; R18 := ZERO_ROTATION
424 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
425 [-]: GETGLOBAL R15 K19      ; R15 := _T
426 [-]: GETTABLE  R15 R15 K79  ; R15 := R15["SquadCountdownTimer"]
427 [-]: EQ        1 R15 K21    ; if R15 == nil then PC := 537
428 [-]: JMP       537          ; PC := 537
429 [-]: GETGLOBAL R15 K19      ; R15 := _T
430 [-]: GETTABLE  R15 R15 K80  ; R15 := R15["gPendingMission"]
431 [-]: EQ        1 R15 K21    ; if R15 == nil then PC := 463
432 [-]: JMP       463          ; PC := 463
433 [-]: GETUPVAL  R15 U15      ; R15 := U15
434 [-]: GETTABLE  R15 R15 K81  ; R15 := R15["Node"]
435 [-]: EQ        1 R15 K21    ; if R15 == nil then PC := 445
436 [-]: JMP       445          ; PC := 445
437 [-]: GETUPVAL  R15 U15      ; R15 := U15
438 [-]: GETTABLE  R15 R15 K81  ; R15 := R15["Node"]
439 [-]: GETTABLE  R15 R15 K82  ; R15 := R15["name"]
440 [-]: GETGLOBAL R16 K19      ; R16 := _T
441 [-]: GETTABLE  R16 R16 K80  ; R16 := R16["gPendingMission"]
442 [-]: GETTABLE  R16 R16 K83  ; R16 := R16["baseNodeName"]
443 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 463
444 [-]: JMP       463          ; PC := 463
445 [-]: GETUPVAL  R15 U10      ; R15 := U10
446 [-]: GETGLOBAL R16 K18      ; R16 := 0x9FAED6BC
447 [-]: GETGLOBAL R17 K19      ; R17 := _T
448 [-]: GETTABLE  R17 R17 K80  ; R17 := R17["gPendingMission"]
449 [-]: GETTABLE  R17 R17 K83  ; R17 := R17["baseNodeName"]
450 [-]: CALL      R16 2 2      ; R16 := R16(R17)
451 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
452 [-]: EQ        1 R15 K21    ; if R15 == nil then PC := 463
453 [-]: JMP       463          ; PC := 463
454 [-]: GETUPVAL  R15 U15      ; R15 := U15
455 [-]: GETUPVAL  R16 U10      ; R16 := U10
456 [-]: GETGLOBAL R17 K18      ; R17 := 0x9FAED6BC
457 [-]: GETGLOBAL R18 K19      ; R18 := _T
458 [-]: GETTABLE  R18 R18 K80  ; R18 := R18["gPendingMission"]
459 [-]: GETTABLE  R18 R18 K83  ; R18 := R18["baseNodeName"]
460 [-]: CALL      R17 2 2      ; R17 := R17(R18)
461 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
462 [-]: SETTABLE  R15 K81 R16  ; R15["Node"] := R16
463 [-]: GETUPVAL  R15 U15      ; R15 := U15
464 [-]: GETTABLE  R15 R15 K81  ; R15 := R15["Node"]
465 [-]: EQ        1 R15 K21    ; if R15 == nil then PC := 537
466 [-]: JMP       537          ; PC := 537
467 [-]: GETUPVAL  R15 U15      ; R15 := U15
468 [-]: GETTABLE  R15 R15 K84  ; R15 := R15["Timer"]
469 [-]: GETGLOBAL R16 K19      ; R16 := _T
470 [-]: GETTABLE  R16 R16 K79  ; R16 := R16["SquadCountdownTimer"]
471 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 537
472 [-]: JMP       537          ; PC := 537
473 [-]: LOADK     R15 K66      ; R15 := -1
474 [-]: GETUPVAL  R16 U15      ; R16 := U15
475 [-]: GETTABLE  R16 R16 K84  ; R16 := R16["Timer"]
476 [-]: EQ        1 R16 K21    ; if R16 == nil then PC := 484
477 [-]: JMP       484          ; PC := 484
478 [-]: GETGLOBAL R16 K53      ; R16 := math
479 [-]: GETTABLE  R16 R16 K85  ; R16 := R16["0xBCF846DF"]
480 [-]: GETUPVAL  R17 U15      ; R17 := U15
481 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["Timer"]
482 [-]: CALL      R16 2 2      ; R16 := R16(R17)
483 [-]: MOVE      R15 R16      ; R15 := R16
484 [-]: GETUPVAL  R16 U15      ; R16 := U15
485 [-]: GETGLOBAL R17 K19      ; R17 := _T
486 [-]: GETTABLE  R17 R17 K79  ; R17 := R17["SquadCountdownTimer"]
487 [-]: SETTABLE  R16 K84 R17  ; R16["Timer"] := R17
488 [-]: GETUPVAL  R16 U15      ; R16 := U15
489 [-]: GETTABLE  R16 R16 K84  ; R16 := R16["Timer"]
490 [-]: EQ        0 R16 K66    ; if R16 ~= -1 then PC := 513
491 [-]: JMP       513          ; PC := 513
492 [-]: GETUPVAL  R16 U15      ; R16 := U15
493 [-]: SETTABLE  R16 K81 K21  ; R16["Node"] := nil
494 [-]: GETUPVAL  R16 U15      ; R16 := U15
495 [-]: GETTABLE  R16 R16 K86  ; R16 := R16["TransitioningOut"]
496 [-]: TEST      R16 0        ; if not R16 then PC := 513
497 [-]: JMP       513          ; PC := 513
498 [-]: GETUPVAL  R16 U15      ; R16 := U15
499 [-]: SETTABLE  R16 K86 K87  ; R16["TransitioningOut"] := "0x0"
500 [-]: GETUPVAL  R16 U15      ; R16 := U15
501 [-]: GETTABLE  R16 R16 K88  ; R16 := R16["InitialFOV"]
502 [-]: EQ        1 R16 K21    ; if R16 == nil then PC := 509
503 [-]: JMP       509          ; PC := 509
504 [-]: GETUPVAL  R16 U30      ; R16 := U30
505 [-]: SELF      R16 R16 K89  ; R17 := R16; R16 := R16["0x95E6F2AA"]
506 [-]: GETUPVAL  R18 U15      ; R18 := U15
507 [-]: GETTABLE  R18 R18 K88  ; R18 := R18["InitialFOV"]
508 [-]: CALL      R16 3 1      ; R16(R17,R18)
509 [-]: GETUPVAL  R16 U38      ; R16 := U38
510 [-]: SETTABLE  R16 K90 K87  ; R16["Locked"] := "0x0"
511 [-]: MOVE      R16 R0       ; R16 := R0
512 [-]: MOVE      R16 R9       ; R16 := R9
513 [-]: GETGLOBAL R16 K53      ; R16 := math
514 [-]: GETTABLE  R16 R16 K85  ; R16 := R16["0xBCF846DF"]
515 [-]: GETUPVAL  R17 U15      ; R17 := U15
516 [-]: GETTABLE  R17 R17 K84  ; R17 := R17["Timer"]
517 [-]: CALL      R16 2 2      ; R16 := R16(R17)
518 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 537
519 [-]: JMP       537          ; PC := 537
520 [-]: GETUPVAL  R17 U15      ; R17 := U15
521 [-]: GETTABLE  R17 R17 K81  ; R17 := R17["Node"]
522 [-]: EQ        1 R17 K21    ; if R17 == nil then PC := 537
523 [-]: JMP       537          ; PC := 537
524 [-]: GETUPVAL  R17 U39      ; R17 := U39
525 [-]: GETUPVAL  R18 U14      ; R18 := U14
526 [-]: GETTABLE  R18 R18 K92  ; R18 := R18["0xAC19E744"]
527 [-]: GETGLOBAL R19 K2       ; R19 := mMovie
528 [-]: GETUPVAL  R20 U15      ; R20 := U15
529 [-]: GETTABLE  R20 R20 K81  ; R20 := R20["Node"]
530 [-]: GETTABLE  R20 R20 K93  ; R20 := R20["clipName"]
531 [-]: GETGLOBAL R21 K94      ; R21 := nodeCountdownEffect
532 [-]: LOADK     R22 K22      ; R22 := 0
533 [-]: LOADK     R23 K22      ; R23 := 0
534 [-]: GETGLOBAL R24 K35      ; R24 := gBackgroundRegion
535 [-]: CALL      R18 7 2      ; R18 := R18(R19,R20,R21,R22,R23,R24)
536 [-]: SETTABLE  R17 K91 R18  ; R17["CountdownFx"] := R18
537 [-]: GETGLOBAL R17 K95      ; R17 := gFlashMgr
538 [-]: SELF      R17 R17 K96  ; R18 := R17; R17 := R17["0x35FF770F"]
539 [-]: CALL      R17 2 2      ; R17 := R17(R18)
540 [-]: GETGLOBAL R18 K2       ; R18 := mMovie
541 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 720
542 [-]: JMP       720          ; PC := 720
543 [-]: GETGLOBAL R17 K53      ; R17 := math
544 [-]: GETTABLE  R17 R17 K97  ; R17 := R17["0x8B011038"]
545 [-]: GETGLOBAL R18 K2       ; R18 := mMovie
546 [-]: SELF      R18 R18 K49  ; R19 := R18; R18 := R18["0xF595D5E1"]
547 [-]: CALL      R18 2 2      ; R18 := R18(R19)
548 [-]: GETGLOBAL R19 K2       ; R19 := mMovie
549 [-]: SELF      R19 R19 K98  ; R20 := R19; R19 := R19["0xF3E132E0"]
550 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
551 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
552 [-]: GETGLOBAL R18 K53      ; R18 := math
553 [-]: GETTABLE  R18 R18 K97  ; R18 := R18["0x8B011038"]
554 [-]: GETGLOBAL R19 K2       ; R19 := mMovie
555 [-]: SELF      R19 R19 K51  ; R20 := R19; R19 := R19["0xEE069D65"]
556 [-]: CALL      R19 2 2      ; R19 := R19(R20)
557 [-]: GETGLOBAL R20 K2       ; R20 := mMovie
558 [-]: SELF      R20 R20 K99  ; R21 := R20; R20 := R20["0x68998E7D"]
559 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
560 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
561 [-]: GETUPVAL  R19 U40      ; R19 := U40
562 [-]: LEN       R19 R19      ; R19 := # R19
563 [-]: LT        1 K22 R19    ; if 0 < R19 then PC := 569
564 [-]: JMP       569          ; PC := 569
565 [-]: GETUPVAL  R19 U41      ; R19 := U41
566 [-]: LEN       R19 R19      ; R19 := # R19
567 [-]: LT        0 K22 R19    ; if 0 >= R19 then PC := 720
568 [-]: JMP       720          ; PC := 720
569 [-]: GETUPVAL  R19 U42      ; R19 := U42
570 [-]: LT        0 K22 R19    ; if 0 >= R19 then PC := 720
571 [-]: JMP       720          ; PC := 720
572 [-]: GETUPVAL  R19 U43      ; R19 := U43
573 [-]: GETGLOBAL R20 K41      ; R20 := 0x4CDEF9FF
574 [-]: CALL      R20 1 2      ; R20 := R20()
575 [-]: SUB       R19 R19 R20  ; R19 := R19 - R20
576 [-]: MOVE      R19 R43      ; R19 := R43
577 [-]: GETUPVAL  R19 U43      ; R19 := U43
578 [-]: LE        0 R19 K22    ; if R19 > 0 then PC := 720
579 [-]: JMP       720          ; PC := 720
580 [-]: GETUPVAL  R19 U14      ; R19 := U14
581 [-]: GETTABLE  R19 R19 K100 ; R19 := R19["0xF81722A2"]
582 [-]: GETUPVAL  R20 U44      ; R20 := U44
583 [-]: LOADK     R21 K6       ; R21 := 1
584 [-]: LOADK     R22 K11      ; R22 := 2
585 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
586 [-]: MOVE      R19 R43      ; R19 := R43
587 [-]: MOVE      R19 R0       ; R19 := R0
588 [-]: LOADK     R20 K6       ; R20 := 1
589 [-]: GETUPVAL  R21 U40      ; R21 := U40
590 [-]: LEN       R21 R21      ; R21 := # R21
591 [-]: LOADK     R22 K6       ; R22 := 1
592 [-]: FORPREP   R20 653      ; R20 -= R22; PC := 653
593 [-]: GETGLOBAL R24 K101     ; R24 := 0xF595ADDE
594 [-]: GETGLOBAL R25 K2       ; R25 := mMovie
595 [-]: SELF      R25 R25 K102 ; R26 := R25; R25 := R25["0x294C4B0B"]
596 [-]: GETUPVAL  R27 U40      ; R27 := U40
597 [-]: GETTABLE  R27 R27 R23  ; R27 := R27[R23]
598 [-]: GETTABLE  R27 R27 K81  ; R27 := R27["Node"]
599 [-]: GETTABLE  R27 R27 K103 ; R27 := R27["memberIndex"]
600 [-]: LOADK     R28 K104     ; R28 := "_x"
601 [-]: CALL      R25 4 0      ; R25,... := R25(R26,R27,R28)
602 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
603 [-]: GETGLOBAL R25 K101     ; R25 := 0xF595ADDE
604 [-]: GETGLOBAL R26 K2       ; R26 := mMovie
605 [-]: SELF      R26 R26 K102 ; R27 := R26; R26 := R26["0x294C4B0B"]
606 [-]: GETUPVAL  R28 U40      ; R28 := U40
607 [-]: GETTABLE  R28 R28 R23  ; R28 := R28[R23]
608 [-]: GETTABLE  R28 R28 K81  ; R28 := R28["Node"]
609 [-]: GETTABLE  R28 R28 K103 ; R28 := R28["memberIndex"]
610 [-]: LOADK     R29 K105     ; R29 := "_y"
611 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
612 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
613 [-]: GETUPVAL  R26 U14      ; R26 := U14
614 [-]: GETTABLE  R26 R26 K106 ; R26 := R26["0x4F6BF2C8"]
615 [-]: GETGLOBAL R27 K2       ; R27 := mMovie
616 [-]: NEWTABLE  R28 0 2      ; R28 := {}
617 [-]: SETTABLE  R28 K52 R24  ; R28["x"] := R24
618 [-]: SETTABLE  R28 K59 R25  ; R28["y"] := R25
619 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
620 [-]: GETTABLE  R27 R26 K52  ; R27 := R26["x"]
621 [-]: LT        0 K22 R27    ; if 0 >= R27 then PC := 652
622 [-]: JMP       652          ; PC := 652
623 [-]: GETTABLE  R27 R26 K59  ; R27 := R26["y"]
624 [-]: LT        0 K22 R27    ; if 0 >= R27 then PC := 652
625 [-]: JMP       652          ; PC := 652
626 [-]: GETTABLE  R27 R26 K52  ; R27 := R26["x"]
627 [-]: LT        0 R27 K6     ; if R27 >= 1 then PC := 652
628 [-]: JMP       652          ; PC := 652
629 [-]: GETTABLE  R27 R26 K59  ; R27 := R26["y"]
630 [-]: LT        0 R27 K6     ; if R27 >= 1 then PC := 652
631 [-]: JMP       652          ; PC := 652
632 [-]: GETUPVAL  R27 U0       ; R27 := U0
633 [-]: SELF      R27 R27 K107 ; R28 := R27; R27 := R27["0x61494587"]
634 [-]: DIV       R29 R24 R17  ; R29 := R24 / R17
635 [-]: MUL       R29 R29 K6   ; R29 := R29 * 1
636 [-]: CLOSURE   R30 1        ; R30 := closure(Function #124.2)
637 [-]: GETUPVAL  R0 U40       ; R0 := U40
638 [-]: MOVE      R0 R23       ; R0 := R23
639 [-]: GETUPVAL  R0 U39       ; R0 := U39
640 [-]: GETUPVAL  R0 U14       ; R0 := U14
641 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
642 [-]: TEST      R19 1        ; if R19 then PC := 652
643 [-]: JMP       652          ; PC := 652
644 [-]: MOVE      R19 R1       ; R19 := R1
645 [-]: GETUPVAL  R27 U0       ; R27 := U0
646 [-]: SELF      R27 R27 K107 ; R28 := R27; R27 := R27["0x61494587"]
647 [-]: DIV       R29 R24 R17  ; R29 := R24 / R17
648 [-]: MUL       R29 R29 K6   ; R29 := R29 * 1
649 [-]: CLOSURE   R30 2        ; R30 := closure(Function #124.3)
650 [-]: GETUPVAL  R0 U14       ; R0 := U14
651 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
652 [-]: CLOSE     R23          ; SAVE R23,...
653 [-]: FORLOOP   R20 593      ; R20 += R22; if R20 <= R21 then begin PC := 593; R23 := R20 end
654 [-]: LOADK     R23 K6       ; R23 := 1
655 [-]: GETUPVAL  R24 U41      ; R24 := U41
656 [-]: LEN       R24 R24      ; R24 := # R24
657 [-]: LOADK     R25 K6       ; R25 := 1
658 [-]: FORPREP   R23 719      ; R23 -= R25; PC := 719
659 [-]: GETGLOBAL R27 K101     ; R27 := 0xF595ADDE
660 [-]: GETGLOBAL R28 K2       ; R28 := mMovie
661 [-]: SELF      R28 R28 K102 ; R29 := R28; R28 := R28["0x294C4B0B"]
662 [-]: GETUPVAL  R30 U41      ; R30 := U41
663 [-]: GETTABLE  R30 R30 R26  ; R30 := R30[R26]
664 [-]: GETTABLE  R30 R30 K81  ; R30 := R30["Node"]
665 [-]: GETTABLE  R30 R30 K103 ; R30 := R30["memberIndex"]
666 [-]: LOADK     R31 K104     ; R31 := "_x"
667 [-]: CALL      R28 4 0      ; R28,... := R28(R29,R30,R31)
668 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
669 [-]: GETGLOBAL R28 K101     ; R28 := 0xF595ADDE
670 [-]: GETGLOBAL R29 K2       ; R29 := mMovie
671 [-]: SELF      R29 R29 K102 ; R30 := R29; R29 := R29["0x294C4B0B"]
672 [-]: GETUPVAL  R31 U41      ; R31 := U41
673 [-]: GETTABLE  R31 R31 R26  ; R31 := R31[R26]
674 [-]: GETTABLE  R31 R31 K81  ; R31 := R31["Node"]
675 [-]: GETTABLE  R31 R31 K103 ; R31 := R31["memberIndex"]
676 [-]: LOADK     R32 K105     ; R32 := "_y"
677 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
678 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
679 [-]: GETUPVAL  R29 U14      ; R29 := U14
680 [-]: GETTABLE  R29 R29 K106 ; R29 := R29["0x4F6BF2C8"]
681 [-]: GETGLOBAL R30 K2       ; R30 := mMovie
682 [-]: NEWTABLE  R31 0 2      ; R31 := {}
683 [-]: SETTABLE  R31 K52 R27  ; R31["x"] := R27
684 [-]: SETTABLE  R31 K59 R28  ; R31["y"] := R28
685 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
686 [-]: GETTABLE  R30 R29 K52  ; R30 := R29["x"]
687 [-]: LT        0 K22 R30    ; if 0 >= R30 then PC := 718
688 [-]: JMP       718          ; PC := 718
689 [-]: GETTABLE  R30 R29 K59  ; R30 := R29["y"]
690 [-]: LT        0 K22 R30    ; if 0 >= R30 then PC := 718
691 [-]: JMP       718          ; PC := 718
692 [-]: GETTABLE  R30 R29 K52  ; R30 := R29["x"]
693 [-]: LT        0 R30 K6     ; if R30 >= 1 then PC := 718
694 [-]: JMP       718          ; PC := 718
695 [-]: GETTABLE  R30 R29 K59  ; R30 := R29["y"]
696 [-]: LT        0 R30 K6     ; if R30 >= 1 then PC := 718
697 [-]: JMP       718          ; PC := 718
698 [-]: GETUPVAL  R30 U0       ; R30 := U0
699 [-]: SELF      R30 R30 K107 ; R31 := R30; R30 := R30["0x61494587"]
700 [-]: DIV       R32 R27 R17  ; R32 := R27 / R17
701 [-]: MUL       R32 R32 K6   ; R32 := R32 * 1
702 [-]: CLOSURE   R33 3        ; R33 := closure(Function #124.4)
703 [-]: GETUPVAL  R0 U41       ; R0 := U41
704 [-]: MOVE      R0 R26       ; R0 := R26
705 [-]: GETUPVAL  R0 U39       ; R0 := U39
706 [-]: GETUPVAL  R0 U14       ; R0 := U14
707 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
708 [-]: TEST      R19 1        ; if R19 then PC := 718
709 [-]: JMP       718          ; PC := 718
710 [-]: MOVE      R19 R1       ; R19 := R1
711 [-]: GETUPVAL  R30 U0       ; R30 := U0
712 [-]: SELF      R30 R30 K107 ; R31 := R30; R30 := R30["0x61494587"]
713 [-]: DIV       R32 R27 R17  ; R32 := R27 / R17
714 [-]: MUL       R32 R32 K6   ; R32 := R32 * 1
715 [-]: CLOSURE   R33 4        ; R33 := closure(Function #124.5)
716 [-]: GETUPVAL  R0 U14       ; R0 := U14
717 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
718 [-]: CLOSE     R26          ; SAVE R26,...
719 [-]: FORLOOP   R23 659      ; R23 += R25; if R23 <= R24 then begin PC := 659; R26 := R23 end
720 [-]: GETUPVAL  R26 U11      ; R26 := U11
721 [-]: GETTABLE  R26 R26 K81  ; R26 := R26["Node"]
722 [-]: EQ        1 R26 K21    ; if R26 == nil then PC := 864
723 [-]: JMP       864          ; PC := 864
724 [-]: GETUPVAL  R26 U11      ; R26 := U11
725 [-]: GETTABLE  R26 R26 K108 ; R26 := R26["UpdateTimer"]
726 [-]: EQ        1 R26 K21    ; if R26 == nil then PC := 864
727 [-]: JMP       864          ; PC := 864
728 [-]: GETUPVAL  R26 U11      ; R26 := U11
729 [-]: GETTABLE  R26 R26 K109 ; R26 := R26["TimerPre"]
730 [-]: EQ        1 R26 K21    ; if R26 == nil then PC := 864
731 [-]: JMP       864          ; PC := 864
732 [-]: GETUPVAL  R26 U11      ; R26 := U11
733 [-]: GETTABLE  R26 R26 K110 ; R26 := R26["TimerPost"]
734 [-]: EQ        1 R26 K21    ; if R26 == nil then PC := 864
735 [-]: JMP       864          ; PC := 864
736 [-]: GETUPVAL  R26 U11      ; R26 := U11
737 [-]: GETTABLE  R26 R26 K111 ; R26 := R26["NodeTime"]
738 [-]: EQ        1 R26 K21    ; if R26 == nil then PC := 864
739 [-]: JMP       864          ; PC := 864
740 [-]: GETUPVAL  R26 U11      ; R26 := U11
741 [-]: GETUPVAL  R27 U11      ; R27 := U11
742 [-]: GETTABLE  R27 R27 K108 ; R27 := R27["UpdateTimer"]
743 [-]: ADD       R27 R27 R0   ; R27 := R27 + R0
744 [-]: SETTABLE  R26 K108 R27 ; R26["UpdateTimer"] := R27
745 [-]: GETUPVAL  R26 U11      ; R26 := U11
746 [-]: GETTABLE  R26 R26 K108 ; R26 := R26["UpdateTimer"]
747 [-]: LT        0 K6 R26     ; if 1 >= R26 then PC := 864
748 [-]: JMP       864          ; PC := 864
749 [-]: GETUPVAL  R26 U11      ; R26 := U11
750 [-]: GETUPVAL  R27 U11      ; R27 := U11
751 [-]: GETTABLE  R27 R27 K111 ; R27 := R27["NodeTime"]
752 [-]: GETUPVAL  R28 U11      ; R28 := U11
753 [-]: GETTABLE  R28 R28 K108 ; R28 := R28["UpdateTimer"]
754 [-]: SUB       R27 R27 R28  ; R27 := R27 - R28
755 [-]: SETTABLE  R26 K111 R27 ; R26["NodeTime"] := R27
756 [-]: GETUPVAL  R26 U45      ; R26 := U45
757 [-]: GETTABLE  R26 R26 K112 ; R26 := R26["0x555EFA5"]
758 [-]: GETUPVAL  R27 U46      ; R27 := U46
759 [-]: GETTABLE  R27 R27 K113 ; R27 := R27["mMission"]
760 [-]: GETTABLE  R27 R27 K114 ; R27 := R27["location"]
761 [-]: CALL      R26 2 2      ; R26 := R26(R27)
762 [-]: GETUPVAL  R27 U45      ; R27 := U45
763 [-]: GETTABLE  R27 R27 K115 ; R27 := R27["0x447FCC2F"]
764 [-]: MOVE      R28 R26      ; R28 := R26
765 [-]: GETUPVAL  R29 U46      ; R29 := U46
766 [-]: GETTABLE  R29 R29 K113 ; R29 := R29["mMission"]
767 [-]: GETTABLE  R29 R29 K114 ; R29 := R29["location"]
768 [-]: CALL      R27 3 4      ; R27,R28,R29 := R27(R28,R29)
769 [-]: GETUPVAL  R30 U11      ; R30 := U11
770 [-]: GETTABLE  R30 R30 K111 ; R30 := R30["NodeTime"]
771 [-]: LT        0 R30 K22    ; if R30 >= 0 then PC := 776
772 [-]: JMP       776          ; PC := 776
773 [-]: GETUPVAL  R30 U11      ; R30 := U11
774 [-]: SETTABLE  R30 K111 R29 ; R30["NodeTime"] := R29
775 [-]: JMP       778          ; PC := 778
776 [-]: GETUPVAL  R30 U11      ; R30 := U11
777 [-]: GETTABLE  R29 R30 K111 ; R29 := R30["NodeTime"]
778 [-]: GETUPVAL  R30 U11      ; R30 := U11
779 [-]: GETTABLE  R30 R30 K109 ; R30 := R30["TimerPre"]
780 [-]: GETUPVAL  R31 U46      ; R31 := U46
781 [-]: GETTABLE  R31 R31 K113 ; R31 := R31["mMission"]
782 [-]: GETTABLE  R31 R31 K114 ; R31 := R31["location"]
783 [-]: GETUPVAL  R32 U45      ; R32 := U45
784 [-]: GETTABLE  R32 R32 K116 ; R32 := R32["ORB_VALLIS_NODE_TAG"]
785 [-]: EQ        0 R31 R32    ; if R31 ~= R32 then PC := 820
786 [-]: JMP       820          ; PC := 820
787 [-]: MOVE      R31 R30      ; R31 := R30
788 [-]: LOADK     R32 K117     ; R32 := "<font color=\"#A9A9A9\">"
789 [-]: GETGLOBAL R33 K118     ; R33 := string
790 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["0x639C642A"]
791 [-]: GETGLOBAL R34 K2       ; R34 := mMovie
792 [-]: SELF      R34 R34 K120 ; R35 := R34; R34 := R34["0x5DB0BD4"]
793 [-]: LOADK     R36 K121     ; R36 := "/Lotus/Language/SolarisVenus/Temperature"
794 [-]: MOVE      R37 R1       ; R37 := R1
795 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
796 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
797 [-]: LOADK     R34 K122     ; R34 := "  </font><font color=\"#CACACA\"><b>"
798 [-]: GETGLOBAL R35 K2       ; R35 := mMovie
799 [-]: SELF      R35 R35 K120 ; R36 := R35; R35 := R35["0x5DB0BD4"]
800 [-]: LOADK     R37 K123     ; R37 := "/Lotus/Language/SystemMessages/TimeUntil"
801 [-]: MOVE      R38 R0       ; R38 := R0
802 [-]: NEWTABLE  R39 0 2      ; R39 := {}
803 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
804 [-]: SELF      R40 R40 K120 ; R41 := R40; R40 := R40["0x5DB0BD4"]
805 [-]: MOVE      R42 R28      ; R42 := R28
806 [-]: MOVE      R43 R0       ; R43 := R0
807 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
808 [-]: SETTABLE  R39 K124 R40 ; R39["LABEL"] := R40
809 [-]: GETUPVAL  R40 U45      ; R40 := U45
810 [-]: GETTABLE  R40 R40 K126 ; R40 := R40["0xC65D09DD"]
811 [-]: GETGLOBAL R41 K2       ; R41 := mMovie
812 [-]: MOVE      R42 R29      ; R42 := R29
813 [-]: LOADK     R43 K127     ; R43 := "CompactOne"
814 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
815 [-]: SETTABLE  R39 K125 R40 ; R39["TIME"] := R40
816 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
817 [-]: LOADK     R36 K128     ; R36 := "</b><br></font>"
818 [-]: CONCAT    R30 R31 R36  ; R30 := R31 .. R32 .. R33 .. R34 .. R35 .. R36
819 [-]: JMP       852          ; PC := 852
820 [-]: MOVE      R31 R30      ; R31 := R30
821 [-]: LOADK     R32 K117     ; R32 := "<font color=\"#A9A9A9\">"
822 [-]: GETGLOBAL R33 K118     ; R33 := string
823 [-]: GETTABLE  R33 R33 K119 ; R33 := R33["0x639C642A"]
824 [-]: GETGLOBAL R34 K2       ; R34 := mMovie
825 [-]: SELF      R34 R34 K120 ; R35 := R34; R34 := R34["0x5DB0BD4"]
826 [-]: LOADK     R36 K129     ; R36 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
827 [-]: MOVE      R37 R1       ; R37 := R1
828 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
829 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
830 [-]: LOADK     R34 K122     ; R34 := "  </font><font color=\"#CACACA\"><b>"
831 [-]: GETGLOBAL R35 K2       ; R35 := mMovie
832 [-]: SELF      R35 R35 K120 ; R36 := R35; R35 := R35["0x5DB0BD4"]
833 [-]: LOADK     R37 K123     ; R37 := "/Lotus/Language/SystemMessages/TimeUntil"
834 [-]: MOVE      R38 R0       ; R38 := R0
835 [-]: NEWTABLE  R39 0 2      ; R39 := {}
836 [-]: GETGLOBAL R40 K2       ; R40 := mMovie
837 [-]: SELF      R40 R40 K120 ; R41 := R40; R40 := R40["0x5DB0BD4"]
838 [-]: MOVE      R42 R28      ; R42 := R28
839 [-]: MOVE      R43 R0       ; R43 := R0
840 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
841 [-]: SETTABLE  R39 K124 R40 ; R39["LABEL"] := R40
842 [-]: GETUPVAL  R40 U45      ; R40 := U45
843 [-]: GETTABLE  R40 R40 K126 ; R40 := R40["0xC65D09DD"]
844 [-]: GETGLOBAL R41 K2       ; R41 := mMovie
845 [-]: MOVE      R42 R29      ; R42 := R29
846 [-]: LOADK     R43 K127     ; R43 := "CompactOne"
847 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
848 [-]: SETTABLE  R39 K125 R40 ; R39["TIME"] := R40
849 [-]: CALL      R35 5 2      ; R35 := R35(R36,R37,R38,R39)
850 [-]: LOADK     R36 K128     ; R36 := "</b><br></font>"
851 [-]: CONCAT    R30 R31 R36  ; R30 := R31 .. R32 .. R33 .. R34 .. R35 .. R36
852 [-]: MOVE      R31 R30      ; R31 := R30
853 [-]: GETUPVAL  R32 U11      ; R32 := U11
854 [-]: GETTABLE  R32 R32 K110 ; R32 := R32["TimerPost"]
855 [-]: CONCAT    R30 R31 R32  ; R30 := R31 .. R32
856 [-]: GETGLOBAL R31 K2       ; R31 := mMovie
857 [-]: SELF      R31 R31 K130 ; R32 := R31; R31 := R31["0x1C19D966"]
858 [-]: LOADK     R33 K131     ; R33 := "InfoTip.Label"
859 [-]: LOADK     R34 K132     ; R34 := "text"
860 [-]: MOVE      R35 R30      ; R35 := R30
861 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
862 [-]: GETUPVAL  R31 U11      ; R31 := U11
863 [-]: SETTABLE  R31 K108 K22 ; R31["UpdateTimer"] := 0
864 [-]: GETGLOBAL R31 K1       ; R31 := 0x400E7765
865 [-]: GETUPVAL  R32 U39      ; R32 := U39
866 [-]: GETTABLE  R32 R32 K133 ; R32 := R32["CountDownFx"]
867 [-]: CALL      R31 2 2      ; R31 := R31(R32)
868 [-]: TEST      R31 1        ; if R31 then PC := 882
869 [-]: JMP       882          ; PC := 882
870 [-]: GETGLOBAL R31 K1       ; R31 := 0x400E7765
871 [-]: GETUPVAL  R32 U39      ; R32 := U39
872 [-]: GETTABLE  R32 R32 K133 ; R32 := R32["CountDownFx"]
873 [-]: GETTABLE  R32 R32 K134 ; R32 := R32["mInstance"]
874 [-]: CALL      R31 2 2      ; R31 := R31(R32)
875 [-]: TEST      R31 1        ; if R31 then PC := 882
876 [-]: JMP       882          ; PC := 882
877 [-]: GETUPVAL  R31 U39      ; R31 := U39
878 [-]: GETTABLE  R31 R31 K133 ; R31 := R31["CountDownFx"]
879 [-]: SELF      R31 R31 K4   ; R32 := R31; R31 := R31["0x8C7099E9"]
880 [-]: MOVE      R33 R0       ; R33 := R0
881 [-]: CALL      R31 3 1      ; R31(R32,R33)
882 [-]: GETGLOBAL R31 K135     ; R31 := 0xECFDD17
883 [-]: GETUPVAL  R32 U39      ; R32 := U39
884 [-]: GETTABLE  R32 R32 K136 ; R32 := R32["PendingFx"]
885 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
886 [-]: JMP       899          ; PC := 899
887 [-]: GETGLOBAL R36 K1       ; R36 := 0x400E7765
888 [-]: GETTABLE  R37 R35 K134 ; R37 := R35["mInstance"]
889 [-]: CALL      R36 2 2      ; R36 := R36(R37)
890 [-]: TEST      R36 1        ; if R36 then PC := 896
891 [-]: JMP       896          ; PC := 896
892 [-]: SELF      R36 R35 K4   ; R37 := R35; R36 := R35["0x8C7099E9"]
893 [-]: MOVE      R38 R0       ; R38 := R0
894 [-]: CALL      R36 3 1      ; R36(R37,R38)
895 [-]: JMP       899          ; PC := 899
896 [-]: GETUPVAL  R36 U39      ; R36 := U39
897 [-]: GETTABLE  R36 R36 K136 ; R36 := R36["PendingFx"]
898 [-]: SETTABLE  R36 R34 K21  ; R36[R34] := nil
899 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 887; R33 := R34 end
900 [-]: JMP       887          ; PC := 887
901 [-]: GETGLOBAL R36 K135     ; R36 := 0xECFDD17
902 [-]: GETUPVAL  R37 U39      ; R37 := U39
903 [-]: GETTABLE  R37 R37 K137 ; R37 := R37["QuestFx"]
904 [-]: CALL      R36 2 4      ; R36,R37,R38 := R36(R37)
905 [-]: JMP       918          ; PC := 918
906 [-]: GETGLOBAL R41 K1       ; R41 := 0x400E7765
907 [-]: GETTABLE  R42 R40 K134 ; R42 := R40["mInstance"]
908 [-]: CALL      R41 2 2      ; R41 := R41(R42)
909 [-]: TEST      R41 1        ; if R41 then PC := 915
910 [-]: JMP       915          ; PC := 915
911 [-]: SELF      R41 R40 K4   ; R42 := R40; R41 := R40["0x8C7099E9"]
912 [-]: MOVE      R43 R0       ; R43 := R0
913 [-]: CALL      R41 3 1      ; R41(R42,R43)
914 [-]: JMP       918          ; PC := 918
915 [-]: GETUPVAL  R41 U39      ; R41 := U39
916 [-]: GETTABLE  R41 R41 K137 ; R41 := R41["QuestFx"]
917 [-]: SETTABLE  R41 R39 K21  ; R41[R39] := nil
918 [-]: TFORLOOP  R36 2        ; R39,R40 :=  R36(R37,R38); if R39 ~= nil then begin PC = 906; R38 := R39 end
919 [-]: JMP       906          ; PC := 906
920 [-]: GETUPVAL  R41 U47      ; R41 := U47
921 [-]: TEST      R41 0        ; if not R41 then PC := 927
922 [-]: JMP       927          ; PC := 927
923 [-]: MOVE      R41 R0       ; R41 := R0
924 [-]: MOVE      R41 R47      ; R41 := R47
925 [-]: GETUPVAL  R41 U48      ; R41 := U48
926 [-]: CALL      R41 1 1      ; R41()
927 [-]: GETGLOBAL R41 K19      ; R41 := _T
928 [-]: GETTABLE  R41 R41 K138 ; R41 := R41["UserInvitePending"]
929 [-]: EQ        0 R41 K21    ; if R41 ~= nil then PC := 932
930 [-]: JMP       932          ; PC := 932
931 [-]: MOVE      R41 R0       ; R41 := R0
932 [-]: MOVE      R41 R1       ; R41 := R1
933 [-]: GETUPVAL  R42 U49      ; R42 := U49
934 [-]: EQ        1 R42 R41    ; if R42 == R41 then PC := 939
935 [-]: JMP       939          ; PC := 939
936 [-]: MOVE      R41 R49      ; R41 := R49
937 [-]: GETUPVAL  R42 U50      ; R42 := U50
938 [-]: CALL      R42 1 1      ; R42()
939 [-]: RETURN    R0 1         ; return 


; Function #124.1:
;
; Name:            
; Defined at line: 5308
; #Upvalues:       7
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["radialSector"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mission"]
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["missionType"]
  9 [-]: GETGLOBAL R1 K4        ; R1 := Lotus_Game
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["MT_JUNCTION"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETUPVAL  R0 U2        ; R0 := U2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R0 3 1       ; R0(R1,R2)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R0 U3        ; R0 := U3
 20 [-]: CALL      R0 1 1       ; R0()
 21 [-]: GETUPVAL  R0 U4        ; R0 := U4
 22 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["0x25992394"]
 23 [-]: GETGLOBAL R1 K7        ; R1 := completeHoldSound
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: GETUPVAL  R0 U5        ; R0 := U5
 26 [-]: GETUPVAL  R1 U0        ; R1 := U0
 27 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 28 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 29 [-]: GETUPVAL  R0 U6        ; R0 := U6
 30 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0["0x61494587"]
 31 [-]: LOADK     R2 K9        ; R2 := 0.10000000149012
 32 [-]: CLOSURE   R3 0         ; R3 := closure(Function #124.1.1)
 33 [-]: GETUPVAL  R0 U0        ; R0 := U0
 34 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 35 [-]: RETURN    R0 1         ; return 


; Function #124.1.1:
;
; Name:            
; Defined at line: 5320
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["Node"] := nil
  3 [-]: RETURN    R0 1         ; return 


; Function #124.2:
;
; Name:            
; Defined at line: 5465
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["PendingFx"]
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 23 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 26 [-]: GETUPVAL  R1 U2        ; R1 := U2
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["PendingFx"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInstance"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 51
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["PendingFx"]
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xAC19E744"]
 39 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETUPVAL  R5 U1        ; R5 := U1
 42 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 45 [-]: GETGLOBAL R5 K8        ; R5 := nextNodeEffect
 46 [-]: LOADK     R6 K9        ; R6 := 0
 47 [-]: LOADK     R7 K9        ; R7 := 0
 48 [-]: GETGLOBAL R8 K10       ; R8 := gBackgroundRegion
 49 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 50 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 51 [-]: RETURN    R0 1         ; return 


; Function #124.3:
;
; Name:            
; Defined at line: 5477
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := nextNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #124.4:
;
; Name:            
; Defined at line: 5491
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
  9 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 11 [-]: JMP       51           ; PC := 51
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 15 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["Node"]
 16 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["clipName"]
 17 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 51
 18 [-]: JMP       51           ; PC := 51
 19 [-]: GETUPVAL  R0 U2        ; R0 := U2
 20 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 23 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 26 [-]: GETUPVAL  R1 U2        ; R1 := U2
 27 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["QuestFx"]
 28 [-]: GETUPVAL  R2 U1        ; R2 := U1
 29 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 30 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInstance"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 0         ; if not R0 then PC := 51
 33 [-]: JMP       51           ; PC := 51
 34 [-]: GETUPVAL  R0 U2        ; R0 := U2
 35 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["QuestFx"]
 36 [-]: GETUPVAL  R1 U1        ; R1 := U1
 37 [-]: GETUPVAL  R2 U3        ; R2 := U3
 38 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["0xAC19E744"]
 39 [-]: GETGLOBAL R3 K7        ; R3 := mMovie
 40 [-]: GETUPVAL  R4 U0        ; R4 := U0
 41 [-]: GETUPVAL  R5 U1        ; R5 := U1
 42 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 43 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Node"]
 44 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["clipName"]
 45 [-]: GETGLOBAL R5 K8        ; R5 := questNodeEffect
 46 [-]: LOADK     R6 K9        ; R6 := 0
 47 [-]: LOADK     R7 K9        ; R7 := 0
 48 [-]: GETGLOBAL R8 K10       ; R8 := gBackgroundRegion
 49 [-]: CALL      R2 7 2       ; R2 := R2(R3,R4,R5,R6,R7,R8)
 50 [-]: SETTABLE  R0 R1 R2     ; R0[R1] := R2
 51 [-]: RETURN    R0 1         ; return 


; Function #124.5:
;
; Name:            
; Defined at line: 5503
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["0x25992394"]
  3 [-]: GETGLOBAL R1 K1        ; R1 := questNodeEffectSound
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 5576
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Active"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 20
  4 [-]: JMP       20           ; PC := 20
  5 [-]: GETGLOBAL R0 K1        ; R0 := gMatchingService
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0xD5E03646"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x400E7765
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 1         ; if R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0["0xEB3F45BE"]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["gameModeId"]
 16 [-]: EQ        1 R1 K6      ; if R1 == 0 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: MOVE      R1 R0        ; R1 := R0
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: LOADK     R1 K7        ; R1 := 30
 21 [-]: GETGLOBAL R2 K1        ; R2 := gMatchingService
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2["0x35DDC67D"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: LE        0 R2 K9      ; if R2 > 1 then PC := 37
 25 [-]: JMP       37           ; PC := 37
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["0xEC3342D8"]
 28 [-]: CALL      R2 1 2       ; R2 := R2()
 29 [-]: TEST      R2 0         ; if not R2 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: GETGLOBAL R2 K1        ; R2 := gMatchingService
 32 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2["0x9BCA84D2"]
 33 [-]: MOVE      R4 R1        ; R4 := R1
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R2 R2        ; R2 := R2
 36 [-]: JMP       39           ; PC := 39
 37 [-]: MOVE      R2 R0        ; R2 := R0
 38 [-]: MOVE      R2 R1        ; R2 := R1
 39 [-]: RETURN    R2 2         ; return R2
 40 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 5591
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gGameRules
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x8709CE86"]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x625791A8"]
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: CALL      R1 1 2       ; R1 := R1()
 14 [-]: TEST      R1 0         ; if not R1 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 17 [-]: GETGLOBAL R2 K4        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["SquadOverlay"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K4        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["SquadOverlay"]
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1["0x458F27A9"]
 25 [-]: LOADK     R3 K7        ; R3 := "ForceExitMap"
 26 [-]: LOADK     R4 K8        ; R4 := ""
 27 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 28 [-]: GETGLOBAL R1 K4        ; R1 := _T
 29 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 30 [-]: LOADK     R2 K10       ; R2 := "Clan"
 31 [-]: CALL      R1 2 1       ; R1(R2)
 32 [-]: GETGLOBAL R1 K4        ; R1 := _T
 33 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 34 [-]: LOADK     R2 K11       ; R2 := "ClanSearch"
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: GETGLOBAL R1 K4        ; R1 := _T
 37 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["0x18468666"]
 38 [-]: LOADK     R2 K12       ; R2 := "InvasionSelection"
 39 [-]: CALL      R1 2 1       ; R1(R2)
 40 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
 41 [-]: GETGLOBAL R2 K4        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mTrigger"]
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 1         ; if R1 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R1 K4        ; R1 := _T
 47 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["mTrigger"]
 48 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1["0x8D5886B7"]
 49 [-]: LOADK     R3 K15       ; R3 := "Close"
 50 [-]: CALL      R1 3 1       ; R1(R2,R3)
 51 [-]: GETGLOBAL R1 K4        ; R1 := _T
 52 [-]: SETTABLE  R1 K16 K17   ; R1["DiegeticPosition"] := nil
 53 [-]: GETUPVAL  R1 U1        ; R1 := U1
 54 [-]: GETTABLE  R1 R1 K18    ; R1 := R1["0x25992394"]
 55 [-]: GETGLOBAL R2 K19       ; R2 := closeSound
 56 [-]: CALL      R1 2 1       ; R1(R2)
 57 [-]: GETGLOBAL R1 K20       ; R1 := gRegion
 58 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1["0x3E2F6BF"]
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: TEST      R2 1         ; if R2 then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: SELF      R2 R1 K22    ; R3 := R1; R2 := R1["0x28609C89"]
 66 [-]: GETGLOBAL R4 K23       ; R4 := 0xEC274B1A
 67 [-]: LOADK     R5 K24       ; R5 := "IDLE"
 68 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 69 [-]: CALL      R2 0 1       ; R2(R3,...)
 70 [-]: GETGLOBAL R2 K25       ; R2 := mMovie
 71 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2["0xA58BB96C"]
 72 [-]: CALL      R2 2 1       ; R2(R3)
 73 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 5622
; #Upvalues:       15
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 91
  2 [-]: JMP       91           ; PC := 91
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Open"]
  9 [-]: TEST      R2 1         ; if R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["DioOpen"]
 13 [-]: TEST      R2 0         ; if not R2 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETUPVAL  R2 U1        ; R2 := U1
 22 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Movie"]
 23 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 24 [-]: LOADK     R4 K5        ; R4 := "CancelPressed"
 25 [-]: LOADK     R5 K6        ; R5 := ""
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K7        ; R2 := Engine
 29 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["0x9490FE70"]
 30 [-]: CALL      R2 1 2       ; R2 := R2()
 31 [-]: TEST      R2 0         ; if not R2 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 34 [-]: GETUPVAL  R3 U2        ; R3 := U2
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 1         ; if R2 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: GETUPVAL  R2 U2        ; R2 := U2
 39 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 40 [-]: LOADK     R4 K9        ; R4 := "IsExpanded"
 41 [-]: LOADK     R5 K6        ; R5 := ""
 42 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 43 [-]: TEST      R2 0         ; if not R2 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETUPVAL  R2 U2        ; R2 := U2
 46 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 47 [-]: LOADK     R4 K10       ; R4 := "DroneInfoUnfocused"
 48 [-]: LOADK     R5 K6        ; R5 := ""
 49 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 52 [-]: GETGLOBAL R3 K11       ; R3 := _T
 53 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
 54 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 55 [-]: TEST      R2 1         ; if R2 then PC := 66
 56 [-]: JMP       66           ; PC := 66
 57 [-]: GETGLOBAL R2 K11       ; R2 := _T
 58 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SquadOverlay"]
 59 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 60 [-]: LOADK     R4 K13       ; R4 := "CancelMatchmakingDropdown"
 61 [-]: LOADK     R5 K6        ; R5 := ""
 62 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 63 [-]: TEST      R2 0         ; if not R2 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: RETURN    R0 1         ; return 
 66 [-]: GETUPVAL  R2 U3        ; R2 := U3
 67 [-]: GETUPVAL  R3 U4        ; R3 := U4
 68 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["READ_ONLY"]
 69 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: GETUPVAL  R2 U5        ; R2 := U5
 72 [-]: GETUPVAL  R3 U4        ; R3 := U4
 73 [-]: GETTABLE  R3 R3 K14    ; R3 := R3["READ_ONLY"]
 74 [-]: CALL      R2 2 1       ; R2(R3)
 75 [-]: RETURN    R0 1         ; return 
 76 [-]: GETUPVAL  R2 U6        ; R2 := U6
 77 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mTargetVal"]
 78 [-]: GETUPVAL  R3 U7        ; R3 := U7
 79 [-]: GETTABLE  R3 R3 K16    ; R3 := R3["STARTING_ZOOM"]
 80 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETGLOBAL R2 K17       ; R2 := mMovie
 83 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
 84 [-]: LOADK     R4 K18       ; R4 := "onKeyDown_MENU_RIGHT_CLICK"
 85 [-]: LOADK     R5 K6        ; R5 := ""
 86 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: EQ        0 R0 K19     ; if R0 ~= "0x0" then PC := 91
 89 [-]: JMP       91           ; PC := 91
 90 [-]: RETURN    R0 1         ; return 
 91 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
 92 [-]: GETUPVAL  R3 U1        ; R3 := U1
 93 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
 94 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 95 [-]: TEST      R2 1         ; if R2 then PC := 111
 96 [-]: JMP       111          ; PC := 111
 97 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
 98 [-]: GETUPVAL  R3 U1        ; R3 := U1
 99 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["Movie"]
100 [-]: LOADK     R4 K21       ; R4 := "_root"
101 [-]: GETGLOBAL R5 K22       ; R5 := UISys
102 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["FlashInstance_LINEAR"]
103 [-]: NEWTABLE  R6 1 0       ; R6 := {}
104 [-]: LOADK     R7 K24       ; R7 := "_alpha"
105 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
106 [-]: NEWTABLE  R7 1 0       ; R7 := {}
107 [-]: LOADK     R8 K25       ; R8 := 0
108 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
109 [-]: LOADK     R8 K26       ; R8 := 0.30000001192093
110 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
111 [-]: GETUPVAL  R2 U8        ; R2 := U8
112 [-]: GETTABLE  R2 R2 K27    ; R2 := R2["0x25992394"]
113 [-]: GETGLOBAL R3 K28       ; R3 := closeSound
114 [-]: CALL      R2 2 1       ; R2(R3)
115 [-]: GETUPVAL  R2 U9        ; R2 := U9
116 [-]: CALL      R2 1 2       ; R2 := R2()
117 [-]: TEST      R2 0         ; if not R2 then PC := 131
118 [-]: JMP       131          ; PC := 131
119 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
120 [-]: GETGLOBAL R3 K11       ; R3 := _T
121 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["SquadOverlay"]
122 [-]: CALL      R2 2 2       ; R2 := R2(R3)
123 [-]: TEST      R2 1         ; if R2 then PC := 131
124 [-]: JMP       131          ; PC := 131
125 [-]: GETGLOBAL R2 K11       ; R2 := _T
126 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SquadOverlay"]
127 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2["0x458F27A9"]
128 [-]: LOADK     R4 K29       ; R4 := "ForceExitMap"
129 [-]: LOADK     R5 K6        ; R5 := ""
130 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
131 [-]: GETGLOBAL R2 K11       ; R2 := _T
132 [-]: GETTABLE  R2 R2 K30    ; R2 := R2["0x45CBC39B"]
133 [-]: CALL      R2 1 1       ; R2()
134 [-]: MOVE      R2 R1        ; R2 := R1
135 [-]: MOVE      R2 R0        ; R2 := R0
136 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
137 [-]: GETUPVAL  R3 U10       ; R3 := U10
138 [-]: CALL      R2 2 2       ; R2 := R2(R3)
139 [-]: TEST      R2 1         ; if R2 then PC := 151
140 [-]: JMP       151          ; PC := 151
141 [-]: GETUPVAL  R2 U10       ; R2 := U10
142 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0xCE468565"]
143 [-]: LOADK     R4 K32       ; R4 := "x"
144 [-]: LOADK     R5 K33       ; R5 := 0.5
145 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
146 [-]: GETUPVAL  R2 U10       ; R2 := U10
147 [-]: SELF      R2 R2 K31    ; R3 := R2; R2 := R2["0xCE468565"]
148 [-]: LOADK     R4 K34       ; R4 := "y"
149 [-]: LOADK     R5 K33       ; R5 := 0.5
150 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
151 [-]: GETGLOBAL R2 K2        ; R2 := 0x400E7765
152 [-]: GETUPVAL  R3 U11       ; R3 := U11
153 [-]: CALL      R2 2 2       ; R2 := R2(R3)
154 [-]: TEST      R2 1         ; if R2 then PC := 182
155 [-]: JMP       182          ; PC := 182
156 [-]: GETUPVAL  R2 U12       ; R2 := U12
157 [-]: SETTABLE  R2 K35 K36   ; R2["Locked"] := "0x1"
158 [-]: GETUPVAL  R2 U12       ; R2 := U12
159 [-]: GETUPVAL  R3 U11       ; R3 := U11
160 [-]: SELF      R3 R3 K38    ; R4 := R3; R3 := R3["0x6DA72501"]
161 [-]: CALL      R3 2 2       ; R3 := R3(R4)
162 [-]: SETTABLE  R2 K37 R3    ; R2["Previous"] := R3
163 [-]: GETUPVAL  R2 U12       ; R2 := U12
164 [-]: GETUPVAL  R3 U13       ; R3 := U13
165 [-]: GETGLOBAL R4 K40       ; R4 := 0x221C9700
166 [-]: LOADK     R5 K25       ; R5 := 0
167 [-]: LOADK     R6 K25       ; R6 := 0
168 [-]: LOADK     R7 K41       ; R7 := 35
169 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
170 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
171 [-]: SETTABLE  R2 K39 R3    ; R2["Target"] := R3
172 [-]: GETUPVAL  R2 U12       ; R2 := U12
173 [-]: GETTABLE  R2 R2 K42    ; R2 := R2["Prop"]
174 [-]: SELF      R2 R2 K43    ; R3 := R2; R2 := R2["0x5A7A6B1"]
175 [-]: LOADK     R4 K25       ; R4 := 0
176 [-]: CALL      R2 3 1       ; R2(R3,R4)
177 [-]: GETUPVAL  R2 U12       ; R2 := U12
178 [-]: GETTABLE  R2 R2 K42    ; R2 := R2["Prop"]
179 [-]: SELF      R2 R2 K44    ; R3 := R2; R2 := R2["0xDB349344"]
180 [-]: LOADK     R4 K45       ; R4 := 1
181 [-]: CALL      R2 3 1       ; R2(R3,R4)
182 [-]: GETUPVAL  R2 U6        ; R2 := U6
183 [-]: SELF      R2 R2 K44    ; R3 := R2; R2 := R2["0xDB349344"]
184 [-]: LOADK     R4 K46       ; R4 := -100
185 [-]: CALL      R2 3 1       ; R2(R3,R4)
186 [-]: GETGLOBAL R2 K17       ; R2 := mMovie
187 [-]: SELF      R2 R2 K47    ; R3 := R2; R2 := R2["0xD692CA7B"]
188 [-]: MOVE      R4 R0        ; R4 := R0
189 [-]: CALL      R2 3 1       ; R2(R3,R4)
190 [-]: TEST      R1 0         ; if not R1 then PC := 198
191 [-]: JMP       198          ; PC := 198
192 [-]: GETGLOBAL R2 K48       ; R2 := gFlashMgr
193 [-]: SELF      R2 R2 K49    ; R3 := R2; R2 := R2["0xC4E70543"]
194 [-]: CALL      R2 2 1       ; R2(R3)
195 [-]: GETUPVAL  R2 U14       ; R2 := U14
196 [-]: CALL      R2 1 1       ; R2()
197 [-]: JMP       221          ; PC := 221
198 [-]: GETGLOBAL R2 K20       ; R2 := 0x52E17A90
199 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
200 [-]: LOADK     R4 K21       ; R4 := "_root"
201 [-]: GETGLOBAL R5 K22       ; R5 := UISys
202 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["FlashInstance_LINEAR"]
203 [-]: NEWTABLE  R6 1 0       ; R6 := {}
204 [-]: LOADK     R7 K24       ; R7 := "_alpha"
205 [-]: SETLIST   R6 1 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
206 [-]: NEWTABLE  R7 1 0       ; R7 := {}
207 [-]: LOADK     R8 K25       ; R8 := 0
208 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
209 [-]: LOADK     R8 K26       ; R8 := 0.30000001192093
210 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
211 [-]: GETUPVAL  R2 U8        ; R2 := U8
212 [-]: GETTABLE  R2 R2 K50    ; R2 := R2["0xDB33ECB2"]
213 [-]: GETGLOBAL R3 K17       ; R3 := mMovie
214 [-]: LOADK     R4 K45       ; R4 := 1
215 [-]: LOADK     R5 K26       ; R5 := 0.30000001192093
216 [-]: LOADK     R6 K25       ; R6 := 0
217 [-]: CLOSURE   R7 0         ; R7 := closure(Function #127.1)
218 [-]: GETUPVAL  R0 U14       ; R0 := U14
219 [-]: GETUPVAL  R0 U8        ; R0 := U8
220 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
221 [-]: RETURN    R0 1         ; return 


; Function #127.1:
;
; Name:            
; Defined at line: 5695
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := gFlashMgr
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0xC4E70543"]
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["0xDB33ECB2"]
  8 [-]: GETGLOBAL R1 K3        ; R1 := mMovie
  9 [-]: LOADK     R2 K4        ; R2 := 0
 10 [-]: LOADK     R3 K5        ; R3 := 0.20000000298023
 11 [-]: LOADK     R4 K4        ; R4 := 0
 12 [-]: GETUPVAL  R5 U0        ; R5 := U0
 13 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 14 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 5703
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R3 K1        ; R3 := _T
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["SCREEN_EXIT_REASON_FORCE_CLOSE"]
  6 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R3 K1        ; R3 := _T
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
 10 [-]: EQ        1 R0 R3      ; if R0 == R3 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: EQ        1 R1 K0      ; if R1 == "true" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 5707
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 5711
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 5714
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := 1
  2 [-]: LOADK     R3 K1        ; R3 := 100000
  3 [-]: LOADK     R4 K0        ; R4 := 1
  4 [-]: LEN       R5 R0        ; R5 := # R0
  5 [-]: LOADK     R6 K0        ; R6 := 1
  6 [-]: FORPREP   R4 15        ; R4 -= R6; PC := 15
  7 [-]: GETGLOBAL R8 K2        ; R8 := 0xB09F286F
  8 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
  9 [-]: MOVE      R10 R1       ; R10 := R1
 10 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 11 [-]: LT        0 R8 R3      ; if R8 >= R3 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: MOVE      R3 R8        ; R3 := R8
 14 [-]: MOVE      R2 R7        ; R2 := R7
 15 [-]: FORLOOP   R4 7         ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 5728
; #Upvalues:       9
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  5 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 13 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 14 [-]: LOADK     R3 K3        ; R3 := "Reticle"
 15 [-]: LOADK     R4 K4        ; R4 := "_x"
 16 [-]: GETUPVAL  R5 U2        ; R5 := U2
 17 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xB57E56DF"]
 18 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["x"]
 19 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 20 [-]: CALL      R1 0 1       ; R1(R2,...)
 21 [-]: GETGLOBAL R1 K1        ; R1 := mMovie
 22 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1["0x1C19D966"]
 23 [-]: LOADK     R3 K3        ; R3 := "Reticle"
 24 [-]: LOADK     R4 K7        ; R4 := "_y"
 25 [-]: GETUPVAL  R5 U2        ; R5 := U2
 26 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["0xB57E56DF"]
 27 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["y"]
 28 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 29 [-]: CALL      R1 0 1       ; R1(R2,...)
 30 [-]: GETUPVAL  R1 U3        ; R1 := U3
 31 [-]: EQ        1 R1 K9      ; if R1 == nil then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R1 U3        ; R1 := U3
 34 [-]: CALL      R1 1 1       ; R1()
 35 [-]: LOADNIL   R1 R1        ; R1 := nil
 36 [-]: MOVE      R1 R3        ; R1 := R3
 37 [-]: GETUPVAL  R1 U4        ; R1 := U4
 38 [-]: TEST      R1 1         ; if R1 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETUPVAL  R1 U5        ; R1 := U5
 41 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1["0xD963824A"]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETUPVAL  R1 U6        ; R1 := U6
 44 [-]: GETUPVAL  R2 U7        ; R2 := U7
 45 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["EDIT_REGIONS"]
 46 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 49 [-]: GETUPVAL  R2 U8        ; R2 := U8
 50 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mMovingRegion"]
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETUPVAL  R1 U8        ; R1 := U8
 55 [-]: SETTABLE  R1 K12 K9    ; R1["mMovingRegion"] := nil
 56 [-]: GETUPVAL  R1 U8        ; R1 := U8
 57 [-]: SETTABLE  R1 K13 K9    ; R1["mChildNodes"] := nil
 58 [-]: GETUPVAL  R1 U6        ; R1 := U6
 59 [-]: GETUPVAL  R2 U7        ; R2 := U7
 60 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["EDIT_NODES"]
 61 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 71
 62 [-]: JMP       71           ; PC := 71
 63 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 64 [-]: GETUPVAL  R2 U8        ; R2 := U8
 65 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mMovingNode"]
 66 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 67 [-]: TEST      R1 1         ; if R1 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: GETUPVAL  R1 U8        ; R1 := U8
 70 [-]: SETTABLE  R1 K15 K9    ; R1["mMovingNode"] := nil
 71 [-]: GETUPVAL  R1 U6        ; R1 := U6
 72 [-]: GETUPVAL  R2 U7        ; R2 := U7
 73 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["EDIT_NODE_DECOS"]
 74 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 77 [-]: GETUPVAL  R2 U8        ; R2 := U8
 78 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mMovingNode"]
 79 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 80 [-]: TEST      R1 1         ; if R1 then PC := 90
 81 [-]: JMP       90           ; PC := 90
 82 [-]: GETUPVAL  R1 U8        ; R1 := U8
 83 [-]: SETTABLE  R1 K15 K9    ; R1["mMovingNode"] := nil
 84 [-]: GETUPVAL  R1 U8        ; R1 := U8
 85 [-]: SETTABLE  R1 K17 K18   ; R1["mEditingOffset"] := "0x0"
 86 [-]: GETUPVAL  R1 U8        ; R1 := U8
 87 [-]: SETTABLE  R1 K19 K18   ; R1["mEditingRotation"] := "0x0"
 88 [-]: GETUPVAL  R1 U8        ; R1 := U8
 89 [-]: SETTABLE  R1 K20 K18   ; R1["mEditingScale"] := "0x0"
 90 [-]: GETUPVAL  R1 U6        ; R1 := U6
 91 [-]: GETUPVAL  R2 U7        ; R2 := U7
 92 [-]: GETTABLE  R2 R2 K21    ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
 93 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 101
 94 [-]: JMP       101          ; PC := 101
 95 [-]: GETUPVAL  R1 U8        ; R1 := U8
 96 [-]: GETTABLE  R1 R1 K22    ; R1 := R1["mControlPointHeld"]
 97 [-]: TEST      R1 0         ; if not R1 then PC := 101
 98 [-]: JMP       101          ; PC := 101
 99 [-]: GETUPVAL  R1 U8        ; R1 := U8
100 [-]: SETTABLE  R1 K22 K18   ; R1["mControlPointHeld"] := "0x0"
101 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 5767
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["x"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["y"]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["z"]
  4 [-]: RETURN    R2 4         ; return R2,R3,R4
  5 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 5789
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["position"]
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x221C9700
  3 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["x"]
  4 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["y"]
  5 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["z"]
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: LOADNIL   R3 R3        ; R3 := nil
  8 [-]: LOADK     R4 K5        ; R4 := 1
  9 [-]: GETUPVAL  R5 U0        ; R5 := U0
 10 [-]: LEN       R5 R5        ; R5 := # R5
 11 [-]: LOADK     R6 K5        ; R6 := 1
 12 [-]: FORPREP   R4 20        ; R4 -= R6; PC := 20
 13 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["radialSector"]
 14 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["region"]
 15 [-]: SUB       R9 R7 K5     ; R9 := R7 - 1
 16 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R3 R8 R7     ; R3 := R8[R7]
 20 [-]: FORLOOP   R4 13        ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
 21 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 22 [-]: GETUPVAL  R9 U1        ; R9 := U1
 23 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 24 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 25 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 26 [-]: UNM       R8 R8        ; R8 := - R8
 27 [-]: GETUPVAL  R9 U1        ; R9 := U1
 28 [-]: DIV       R8 R8 R9     ; R8 := R8 / R9
 29 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 30 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["zoomedFraming"]
 33 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["z"]
 34 [-]: ADD       R8 R8 K10    ; R8 := R8 + 0.64999997615814
 35 [-]: SETTABLE  R2 K4 R8     ; R2["z"] := R8
 36 [-]: JMP       38           ; PC := 38
 37 [-]: SETTABLE  R2 K4 K11    ; R2["z"] := 8
 38 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 39 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 40 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 41 [-]: SETTABLE  R2 K2 R8     ; R2["x"] := R8
 42 [-]: GETTABLE  R8 R2 K3     ; R8 := R2["y"]
 43 [-]: MUL       R8 R8 K12    ; R8 := R8 * 0.5
 44 [-]: ADD       R8 R8 K12    ; R8 := R8 + 0.5
 45 [-]: SETTABLE  R2 K3 R8     ; R2["y"] := R8
 46 [-]: GETTABLE  R8 R2 K2     ; R8 := R2["x"]
 47 [-]: GETTABLE  R9 R2 K3     ; R9 := R2["y"]
 48 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["z"]
 49 [-]: RETURN    R8 4         ; return R8,R9,R10
 50 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 5814
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: GETUPVAL  R1 U2        ; R1 := U2
  8 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: MOVE      R0 R2        ; R0 := R2
 13 [-]: JMP       14           ; PC := 14
 14 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 5826
; #Upvalues:       13
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: EQ        0 R3 R0      ; if R3 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R3 1 1       ; R3()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R3 U1        ; R3 := U1
 11 [-]: CALL      R3 1 1       ; R3()
 12 [-]: GETUPVAL  R3 U2        ; R3 := U2
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["zoomedFraming"]
 15 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 16 [-]: GETUPVAL  R6 U3        ; R6 := U3
 17 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 18 [-]: LOADK     R8 K2        ; R8 := "x"
 19 [-]: MOVE      R9 R3        ; R9 := R3
 20 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 21 [-]: GETUPVAL  R6 U3        ; R6 := U3
 22 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6["0xCE468565"]
 23 [-]: LOADK     R8 K3        ; R8 := "y"
 24 [-]: MOVE      R9 R4        ; R9 := R4
 25 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 26 [-]: GETGLOBAL R6 K4        ; R6 := 0x400E7765
 27 [-]: MOVE      R7 R2        ; R7 := R2
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: TEST      R6 0         ; if not R6 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETUPVAL  R6 U4        ; R6 := U4
 32 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6["0xDB349344"]
 33 [-]: MOVE      R8 R5        ; R8 := R5
 34 [-]: CALL      R6 3 1       ; R6(R7,R8)
 35 [-]: MOVE      R1 R5        ; R1 := R5
 36 [-]: GETUPVAL  R6 U7        ; R6 := U7
 37 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["0xF81722A2"]
 38 [-]: GETUPVAL  R7 U8        ; R7 := U8
 39 [-]: LOADK     R8 K7        ; R8 := 0.5
 40 [-]: LOADK     R9 K8        ; R9 := 2
 41 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 42 [-]: MOVE      R6 R6        ; R6 := R6
 43 [-]: GETUPVAL  R6 U7        ; R6 := U7
 44 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["0x25992394"]
 45 [-]: GETGLOBAL R7 K10       ; R7 := zoomInRegionSound
 46 [-]: CALL      R6 2 1       ; R6(R7)
 47 [-]: GETUPVAL  R6 U9        ; R6 := U9
 48 [-]: CALL      R6 1 1       ; R6()
 49 [-]: GETGLOBAL R6 K11       ; R6 := 0xCAA43ABB
 50 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["zoomedInEffects"]
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 53 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["instance"]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: TEST      R7 1         ; if R7 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R7 K4        ; R7 := 0x400E7765
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 1         ; if R7 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["instance"]
 63 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7["0xAB436EF2"]
 64 [-]: MOVE      R9 R6        ; R9 := R6
 65 [-]: GETGLOBAL R10 K15      ; R10 := EMPTY_SYMBOL
 66 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 67 [-]: GETUPVAL  R7 U10       ; R7 := U10
 68 [-]: GETTABLE  R7 R7 K16    ; R7 := R7[1]
 69 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 70 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 71 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["red"]
 72 [-]: CALL      R7 3 1       ; R7(R8,R9)
 73 [-]: GETUPVAL  R7 U10       ; R7 := U10
 74 [-]: GETTABLE  R7 R7 K8     ; R7 := R7[2]
 75 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 76 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 77 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["green"]
 78 [-]: CALL      R7 3 1       ; R7(R8,R9)
 79 [-]: GETUPVAL  R7 U10       ; R7 := U10
 80 [-]: GETTABLE  R7 R7 K20    ; R7 := R7[3]
 81 [-]: SELF      R7 R7 K5     ; R8 := R7; R7 := R7["0xDB349344"]
 82 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["color"]
 83 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["blue"]
 84 [-]: CALL      R7 3 1       ; R7(R8,R9)
 85 [-]: GETGLOBAL R7 K22       ; R7 := _T
 86 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 87 [-]: TEST      R7 0         ; if not R7 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R7 K22       ; R7 := _T
 90 [-]: GETTABLE  R7 R7 K23    ; R7 := R7["WareframeChallenge"]
 91 [-]: SETTABLE  R7 K24 R0    ; R7["selectedPlanet"] := R0
 92 [-]: GETGLOBAL R7 K22       ; R7 := _T
 93 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["NemesisRegionTransmissionPlayed"]
 94 [-]: TEST      R7 1         ; if R7 then PC := 155
 95 [-]: JMP       155          ; PC := 155
 96 [-]: GETGLOBAL R7 K26       ; R7 := gGameData
 97 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7["0x17358D95"]
 98 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 99 [-]: GETGLOBAL R8 K4        ; R8 := 0x400E7765
100 [-]: MOVE      R9 R7        ; R9 := R7
101 [-]: CALL      R8 2 2       ; R8 := R8(R9)
102 [-]: TEST      R8 1         ; if R8 then PC := 155
103 [-]: JMP       155          ; PC := 155
104 [-]: GETTABLE  R8 R7 K28    ; R8 := R7["mInfluenceNodes"]
105 [-]: LOADK     R9 K16       ; R9 := 1
106 [-]: LEN       R10 R8       ; R10 := # R8
107 [-]: LOADK     R11 K16      ; R11 := 1
108 [-]: FORPREP   R9 154       ; R9 -= R11; PC := 154
109 [-]: GETUPVAL  R13 U11      ; R13 := U11
110 [-]: SELF      R13 R13 K29  ; R14 := R13; R13 := R13["0xF64198FD"]
111 [-]: GETTABLE  R15 R8 R12   ; R15 := R8[R12]
112 [-]: GETTABLE  R15 R15 K30  ; R15 := R15["mNode"]
113 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
114 [-]: GETTABLE  R13 R13 K31  ; R13 := R13["name"]
115 [-]: GETTABLE  R14 R0 K31   ; R14 := R0["name"]
116 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 154
117 [-]: JMP       154          ; PC := 154
118 [-]: GETGLOBAL R13 K32      ; R13 := _G
119 [-]: GETGLOBAL R14 K32      ; R14 := _G
120 [-]: GETTABLE  R14 R14 K33  ; R14 := R14["NemesisTauntCooldowns"]
121 [-]: TEST      R14 1        ; if R14 then PC := 124
122 [-]: JMP       124          ; PC := 124
123 [-]: NEWTABLE  R14 0 0      ; R14 := {}
124 [-]: SETTABLE  R13 K33 R14  ; R13["NemesisTauntCooldowns"] := R14
125 [-]: GETGLOBAL R13 K32      ; R13 := _G
126 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
127 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["InfluenceRegion"]
128 [-]: TEST      R13 0        ; if not R13 then PC := 139
129 [-]: JMP       139          ; PC := 139
130 [-]: GETGLOBAL R13 K32      ; R13 := _G
131 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
132 [-]: GETTABLE  R13 R13 K34  ; R13 := R13["InfluenceRegion"]
133 [-]: ADD       R13 R13 K35  ; R13 := R13 + 1200
134 [-]: GETGLOBAL R14 K36      ; R14 := gGameRules
135 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0x7B107ACD"]
136 [-]: CALL      R14 2 2      ; R14 := R14(R15)
137 [-]: LT        0 R13 R14    ; if R13 >= R14 then PC := 151
138 [-]: JMP       151          ; PC := 151
139 [-]: GETUPVAL  R13 U12      ; R13 := U12
140 [-]: GETTABLE  R13 R13 K38  ; R13 := R13["0x85329A4B"]
141 [-]: GETGLOBAL R14 K39      ; R14 := 0xEC274B1A
142 [-]: LOADK     R15 K34      ; R15 := "InfluenceRegion"
143 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
144 [-]: CALL      R13 0 1      ; R13(R14,...)
145 [-]: GETGLOBAL R13 K32      ; R13 := _G
146 [-]: GETTABLE  R13 R13 K33  ; R13 := R13["NemesisTauntCooldowns"]
147 [-]: GETGLOBAL R14 K36      ; R14 := gGameRules
148 [-]: SELF      R14 R14 K37  ; R15 := R14; R14 := R14["0x7B107ACD"]
149 [-]: CALL      R14 2 2      ; R14 := R14(R15)
150 [-]: SETTABLE  R13 K34 R14  ; R13["InfluenceRegion"] := R14
151 [-]: GETGLOBAL R13 K22      ; R13 := _T
152 [-]: SETTABLE  R13 K25 K40  ; R13["NemesisRegionTransmissionPlayed"] := "0x1"
153 [-]: JMP       155          ; PC := 155
154 [-]: FORLOOP   R9 109       ; R9 += R11; if R9 <= R10 then begin PC := 109; R12 := R9 end
155 [-]: GETGLOBAL R13 K22      ; R13 := _T
156 [-]: SETTABLE  R13 K41 R0   ; R13["StarChartSelectedRegion"] := R0
157 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 5887
; #Upvalues:       12
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R2 R0      ; if R2 ~= R0 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: CALL      R2 1 1       ; R2()
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: MOVE      R0 R0        ; R0 := R0
 10 [-]: GETUPVAL  R2 U1        ; R2 := U1
 11 [-]: CALL      R2 1 1       ; R2()
 12 [-]: GETUPVAL  R2 U3        ; R2 := U3
 13 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["0xF81722A2"]
 14 [-]: GETUPVAL  R3 U4        ; R3 := U4
 15 [-]: LOADK     R4 K1        ; R4 := 0.5
 16 [-]: LOADK     R5 K2        ; R5 := 2
 17 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 18 [-]: MOVE      R2 R2        ; R2 := R2
 19 [-]: GETUPVAL  R2 U5        ; R2 := U5
 20 [-]: MOVE      R3 R0        ; R3 := R0
 21 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["zoomedFraming"]
 22 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 23 [-]: GETUPVAL  R5 U6        ; R5 := U6
 24 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mCurrentScroll"]
 25 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["x"]
 26 [-]: GETUPVAL  R6 U6        ; R6 := U6
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["mCurrentScroll"]
 28 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["y"]
 29 [-]: GETUPVAL  R7 U3        ; R7 := U3
 30 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["0x2D888705"]
 31 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 32 [-]: SETTABLE  R8 K8 R5     ; R8["X"] := R5
 33 [-]: SETTABLE  R8 K9 R6     ; R8["Y"] := R6
 34 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 35 [-]: SETTABLE  R9 K8 R2     ; R9["X"] := R2
 36 [-]: SETTABLE  R9 K9 R3     ; R9["Y"] := R3
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: LOADK     R8 K10       ; R8 := 0
 39 [-]: LOADK     R9 K10       ; R9 := 0
 40 [-]: GETUPVAL  R10 U7       ; R10 := U7
 41 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCurVal"]
 42 [-]: LT        0 K10 R7     ; if 0 >= R7 then PC := 51
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETGLOBAL R11 K12      ; R11 := math
 45 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["0x8B011038"]
 46 [-]: LOADK     R12 K14      ; R12 := 1.5
 47 [-]: MUL       R13 K15 R7   ; R13 := 4 * R7
 48 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 49 [-]: TEST      R11 1        ; if R11 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADK     R11 K10      ; R11 := 0
 52 [-]: LOADK     R12 K16      ; R12 := -2
 53 [-]: CLOSURE   R13 0        ; R13 := closure(Function #137.1)
 54 [-]: MOVE      R0 R10       ; R0 := R10
 55 [-]: MOVE      R0 R12       ; R0 := R12
 56 [-]: MOVE      R0 R4        ; R0 := R4
 57 [-]: GETUPVAL  R0 U7        ; R0 := U7
 58 [-]: MOVE      R0 R8        ; R0 := R8
 59 [-]: MOVE      R0 R5        ; R0 := R5
 60 [-]: MOVE      R0 R2        ; R0 := R2
 61 [-]: MOVE      R0 R9        ; R0 := R9
 62 [-]: MOVE      R0 R6        ; R0 := R6
 63 [-]: MOVE      R0 R3        ; R0 := R3
 64 [-]: GETUPVAL  R0 U6        ; R0 := U6
 65 [-]: GETUPVAL  R0 U8        ; R0 := U8
 66 [-]: GETUPVAL  R0 U9        ; R0 := U9
 67 [-]: MOVE      R14 R1       ; R14 := R1
 68 [-]: MOVE      R14 R10      ; R14 := R10
 69 [-]: GETGLOBAL R14 K17      ; R14 := 0x52E17A90
 70 [-]: GETGLOBAL R15 K18      ; R15 := mMovie
 71 [-]: LOADK     R16 K19      ; R16 := "_root"
 72 [-]: GETGLOBAL R17 K20      ; R17 := UISys
 73 [-]: GETTABLE  R17 R17 K21  ; R17 := R17["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R18 1 0      ; R18 := {}
 75 [-]: MOVE      R19 R13      ; R19 := R13
 76 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R19 1 0      ; R19 := {}
 78 [-]: LOADK     R20 K22      ; R20 := 1
 79 [-]: SETLIST   R19 1 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
 80 [-]: MOVE      R20 R11      ; R20 := R11
 81 [-]: LOADK     R21 K10      ; R21 := 0
 82 [-]: CLOSURE   R22 1        ; R22 := closure(Function #137.2)
 83 [-]: GETUPVAL  R0 U10       ; R0 := U10
 84 [-]: MOVE      R0 R1        ; R0 := R1
 85 [-]: CALL      R14 9 1      ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
 86 [-]: GETUPVAL  R14 U3       ; R14 := U3
 87 [-]: GETTABLE  R14 R14 K23  ; R14 := R14["0x25992394"]
 88 [-]: GETGLOBAL R15 K24      ; R15 := jumpToRegionSound
 89 [-]: CALL      R14 2 1      ; R14(R15)
 90 [-]: GETUPVAL  R14 U11      ; R14 := U11
 91 [-]: GETTABLE  R14 R14 K22  ; R14 := R14[1]
 92 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 93 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
 94 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["red"]
 95 [-]: CALL      R14 3 1      ; R14(R15,R16)
 96 [-]: GETUPVAL  R14 U11      ; R14 := U11
 97 [-]: GETTABLE  R14 R14 K2   ; R14 := R14[2]
 98 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
 99 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
100 [-]: GETTABLE  R16 R16 K28  ; R16 := R16["green"]
101 [-]: CALL      R14 3 1      ; R14(R15,R16)
102 [-]: GETUPVAL  R14 U11      ; R14 := U11
103 [-]: GETTABLE  R14 R14 K29  ; R14 := R14[3]
104 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14["0xDB349344"]
105 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["color"]
106 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["blue"]
107 [-]: CALL      R14 3 1      ; R14(R15,R16)
108 [-]: GETGLOBAL R14 K31      ; R14 := 0xCAA43ABB
109 [-]: GETTABLE  R15 R0 K32   ; R15 := R0["zoomedInEffects"]
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
112 [-]: GETTABLE  R16 R0 K34   ; R16 := R0["instance"]
113 [-]: CALL      R15 2 2      ; R15 := R15(R16)
114 [-]: TEST      R15 1        ; if R15 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: GETGLOBAL R15 K33      ; R15 := 0x400E7765
117 [-]: MOVE      R16 R14      ; R16 := R14
118 [-]: CALL      R15 2 2      ; R15 := R15(R16)
119 [-]: TEST      R15 1        ; if R15 then PC := 126
120 [-]: JMP       126          ; PC := 126
121 [-]: GETTABLE  R15 R0 K34   ; R15 := R0["instance"]
122 [-]: SELF      R15 R15 K35  ; R16 := R15; R15 := R15["0xAB436EF2"]
123 [-]: MOVE      R17 R14      ; R17 := R14
124 [-]: GETGLOBAL R18 K36      ; R18 := EMPTY_SYMBOL
125 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
126 [-]: RETURN    R0 1         ; return 


; Function #137.1:
;
; Name:            
; Defined at line: 5914
; #Upvalues:       13
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9E1B8940
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R2 0 0       ; R2,... := R2(R3,...)
  7 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x9E1B8940
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x9E1B8940
 10 [-]: GETGLOBAL R4 K1        ; R4 := math
 11 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["0xD6F2D811"]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: LOADK     R6 K3        ; R6 := 0.89999997615814
 14 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 15 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: LOADK     R3 K4        ; R3 := 0
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: LE        0 R4 K5      ; if R4 > 0.5 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: GETUPVAL  R7 U1        ; R7 := U1
 24 [-]: MOVE      R8 R4        ; R8 := R4
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: MOVE      R3 R5        ; R3 := R5
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 29 [-]: GETUPVAL  R6 U1        ; R6 := U1
 30 [-]: GETUPVAL  R7 U2        ; R7 := U2
 31 [-]: MOVE      R8 R4        ; R8 := R4
 32 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 33 [-]: MOVE      R3 R5        ; R3 := R5
 34 [-]: GETUPVAL  R5 U3        ; R5 := U3
 35 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 36 [-]: MOVE      R7 R3        ; R7 := R3
 37 [-]: CALL      R5 3 1       ; R5(R6,R7)
 38 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 39 [-]: GETUPVAL  R6 U5        ; R6 := U5
 40 [-]: GETUPVAL  R7 U6        ; R7 := U6
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: MOVE      R5 R4        ; R5 := R4
 44 [-]: GETGLOBAL R5 K6        ; R5 := 0x93034B55
 45 [-]: GETUPVAL  R6 U8        ; R6 := U8
 46 [-]: GETUPVAL  R7 U9        ; R7 := U9
 47 [-]: MOVE      R8 R1        ; R8 := R1
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R5 R7        ; R5 := R7
 50 [-]: GETUPVAL  R5 U10       ; R5 := U10
 51 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 52 [-]: LOADK     R7 K9        ; R7 := "x"
 53 [-]: GETUPVAL  R8 U4        ; R8 := U4
 54 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 55 [-]: GETUPVAL  R5 U10       ; R5 := U10
 56 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5["0xCE468565"]
 57 [-]: LOADK     R7 K10       ; R7 := "y"
 58 [-]: GETUPVAL  R8 U7        ; R8 := U7
 59 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 60 [-]: GETUPVAL  R5 U11       ; R5 := U11
 61 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 62 [-]: GETUPVAL  R7 U4        ; R7 := U4
 63 [-]: CALL      R5 3 1       ; R5(R6,R7)
 64 [-]: GETUPVAL  R5 U12       ; R5 := U12
 65 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5["0x5A7A6B1"]
 66 [-]: GETUPVAL  R7 U7        ; R7 := U7
 67 [-]: CALL      R5 3 1       ; R5(R6,R7)
 68 [-]: RETURN    R0 1         ; return 


; Function #137.2:
;
; Name:            
; Defined at line: 5937
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R0        ; R0 := R0
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 5955
; #Upvalues:       8
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  100

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x9FAED6BC
  2 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["name"]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["radialSector"]
  5 [-]: GETTABLE  R6 R6 K1     ; R6 := R6["name"]
  6 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["radialSector"]
  7 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["nodeType"]
  8 [-]: GETUPVAL  R8 U1        ; R8 := U1
  9 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["0x4A4041CA"]
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R2       ; R10 := R2
 12 [-]: GETUPVAL  R11 U2       ; R11 := U2
 13 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 14 [-]: MOVE      R8 R0        ; R8 := R0
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["mName"]
 17 [-]: GETGLOBAL R9 K6        ; R9 := _G
 18 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["CachedGoalInfo"]
 19 [-]: LOADK     R10 K8       ; R10 := ""
 20 [-]: GETGLOBAL R11 K9       ; R11 := string
 21 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["0x639C642A"]
 22 [-]: GETGLOBAL R12 K11      ; R12 := 0xE6DC43B0
 23 [-]: GETGLOBAL R13 K0       ; R13 := 0x9FAED6BC
 24 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["locTag"]
 25 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 26 [-]: MOVE      R14 R0       ; R14 := R0
 27 [-]: CALL      R12 3 0      ; R12,... := R12(R13,R14)
 28 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 29 [-]: GETGLOBAL R12 K13      ; R12 := _T
 30 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 31 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 32 [-]: TEST      R12 0        ; if not R12 then PC := 67
 33 [-]: JMP       67           ; PC := 67
 34 [-]: GETGLOBAL R12 K13      ; R12 := _T
 35 [-]: GETTABLE  R12 R12 K14  ; R12 := R12["CachedSyndicateMissions"]
 36 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 37 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 38 [-]: TEST      R12 0        ; if not R12 then PC := 67
 39 [-]: JMP       67           ; PC := 67
 40 [-]: GETGLOBAL R12 K13      ; R12 := _T
 41 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 42 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 43 [-]: TEST      R12 0        ; if not R12 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R12 K13      ; R12 := _T
 46 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["CachedAlerts"]
 47 [-]: GETTABLE  R12 R12 R5   ; R12 := R12[R5]
 48 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mVisible"]
 49 [-]: TEST      R12 1        ; if R12 then PC := 67
 50 [-]: JMP       67           ; PC := 67
 51 [-]: GETTABLE  R12 R9 R5    ; R12 := R9[R5]
 52 [-]: TEST      R12 1        ; if R12 then PC := 67
 53 [-]: JMP       67           ; PC := 67
 54 [-]: MOVE      R12 R11      ; R12 := R11
 55 [-]: LOADK     R13 K17      ; R13 := " - "
 56 [-]: GETGLOBAL R14 K9       ; R14 := string
 57 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["0x639C642A"]
 58 [-]: GETGLOBAL R15 K11      ; R15 := 0xE6DC43B0
 59 [-]: GETGLOBAL R16 K13      ; R16 := _T
 60 [-]: GETTABLE  R16 R16 K14  ; R16 := R16["CachedSyndicateMissions"]
 61 [-]: GETTABLE  R16 R16 R5   ; R16 := R16[R5]
 62 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["mSyndicateName"]
 63 [-]: MOVE      R17 R0       ; R17 := R0
 64 [-]: CALL      R15 3 0      ; R15,... := R15(R16,R17)
 65 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 66 [-]: CONCAT    R11 R12 R14  ; R11 := R12 .. R13 .. R14
 67 [-]: GETUPVAL  R12 U3       ; R12 := U3
 68 [-]: GETTABLE  R12 R12 K19  ; R12 := R12["0xF81722A2"]
 69 [-]: GETGLOBAL R13 K9       ; R13 := string
 70 [-]: GETTABLE  R13 R13 K20  ; R13 := R13["0xDE44F664"]
 71 [-]: MOVE      R14 R5       ; R14 := R5
 72 [-]: GETUPVAL  R15 U1       ; R15 := U1
 73 [-]: GETTABLE  R15 R15 K21  ; R15 := R15["KEY_TAG"]
 74 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 75 [-]: EQ        1 R13 K22    ; if R13 == nil then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: MOVE      R13 R0       ; R13 := R0
 78 [-]: MOVE      R13 R1       ; R13 := R1
 79 [-]: GETGLOBAL R14 K23      ; R14 := mMovie
 80 [-]: SELF      R14 R14 K24  ; R15 := R14; R14 := R14["0x5DB0BD4"]
 81 [-]: LOADK     R16 K25      ; R16 := "/Lotus/Language/Game/MissionName_Default"
 82 [-]: MOVE      R17 R0       ; R17 := R0
 83 [-]: NEWTABLE  R18 1 1      ; R18 := {}
 84 [-]: SETTABLE  R18 K26 R11  ; R18["MISSION_NAME"] := R11
 85 [-]: LOADNIL   R19 R19      ; R19 := nil
 86 [-]: SETLIST   R18 1 1      ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
 87 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
 88 [-]: MOVE      R15 R11      ; R15 := R11
 89 [-]: MOVE      R16 R0       ; R16 := R0
 90 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 91 [-]: GETGLOBAL R13 K27      ; R13 := Lotus_Game
 92 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["NT_HUB"]
 93 [-]: EQ        1 R7 R13     ; if R7 == R13 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: MOVE      R13 R0       ; R13 := R0
 96 [-]: MOVE      R13 R1       ; R13 := R1
 97 [-]: GETGLOBAL R14 K9       ; R14 := string
 98 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["0xDE44F664"]
 99 [-]: MOVE      R15 R5       ; R15 := R5
100 [-]: LOADK     R16 K29      ; R16 := "Dojo"
101 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
102 [-]: EQ        0 R14 K22    ; if R14 ~= nil then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: MOVE      R14 R0       ; R14 := R0
105 [-]: MOVE      R14 R1       ; R14 := R1
106 [-]: LOADNIL   R15 R15      ; R15 := nil
107 [-]: LOADK     R16 K30      ; R16 := 0
108 [-]: MOVE      R17 R0       ; R17 := R0
109 [-]: LOADK     R18 K8       ; R18 := ""
110 [-]: LOADK     R19 K30      ; R19 := 0
111 [-]: LOADK     R20 K31      ; R20 := 3
112 [-]: LOADNIL   R21 R21      ; R21 := nil
113 [-]: LOADK     R22 K8       ; R22 := ""
114 [-]: MOVE      R23 R0       ; R23 := R0
115 [-]: LOADK     R24 K8       ; R24 := ""
116 [-]: GETGLOBAL R25 K13      ; R25 := _T
117 [-]: GETTABLE  R25 R25 K32  ; R25 := R25["gActiveMatchMakingMode"]
118 [-]: GETGLOBAL R26 K13      ; R26 := _T
119 [-]: GETTABLE  R26 R26 K33  ; R26 := R26["MATCHMAKING_QUICKMATCH_GAMEMODE"]
120 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 145
121 [-]: JMP       145          ; PC := 145
122 [-]: GETUPVAL  R25 U1       ; R25 := U1
123 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["0x25E52949"]
124 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["radialSector"]
125 [-]: GETTABLE  R26 R26 K35  ; R26 := R26["region"]
126 [-]: ADD       R26 R26 K36  ; R26 := R26 + 1
127 [-]: CALL      R25 2 2      ; R25 := R25(R26)
128 [-]: TEST      R25 1        ; if R25 then PC := 145
129 [-]: JMP       145          ; PC := 145
130 [-]: GETUPVAL  R25 U1       ; R25 := U1
131 [-]: GETTABLE  R25 R25 K37  ; R25 := R25["0xE4E5932F"]
132 [-]: MOVE      R26 R5       ; R26 := R5
133 [-]: CALL      R25 2 2      ; R25 := R25(R26)
134 [-]: GETUPVAL  R26 U4       ; R26 := U4
135 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
136 [-]: TEST      R26 0        ; if not R26 then PC := 144
137 [-]: JMP       144          ; PC := 144
138 [-]: GETUPVAL  R26 U4       ; R26 := U4
139 [-]: GETTABLE  R26 R26 R25  ; R26 := R26[R25]
140 [-]: LT        0 K30 R26    ; if 0 >= R26 then PC := 144
141 [-]: JMP       144          ; PC := 144
142 [-]: GETUPVAL  R26 U4       ; R26 := U4
143 [-]: GETTABLE  R16 R26 R25  ; R16 := R26[R25]
144 [-]: MOVE      R17 R1       ; R17 := R1
145 [-]: LOADNIL   R26 R28      ; R26 := R27 := R28 := nil
146 [-]: LOADK     R29 K8       ; R29 := ""
147 [-]: CLOSURE   R30 0        ; R30 := closure(Function #138.1)
148 [-]: MOVE      R0 R29       ; R0 := R29
149 [-]: CLOSURE   R31 1        ; R31 := closure(Function #138.2)
150 [-]: MOVE      R0 R29       ; R0 := R29
151 [-]: LOADK     R29 K38      ; R29 := "<p>"
152 [-]: TEST      R13 1        ; if R13 then PC := 156
153 [-]: JMP       156          ; PC := 156
154 [-]: TEST      R14 0        ; if not R14 then PC := 158
155 [-]: JMP       158          ; PC := 158
156 [-]: MOVE      R17 R0       ; R17 := R0
157 [-]: JMP       743          ; PC := 743
158 [-]: GETUPVAL  R32 U0       ; R32 := U0
159 [-]: GETTABLE  R32 R32 K39  ; R32 := R32["mAlertInfo"]
160 [-]: EQ        1 R32 K22    ; if R32 == nil then PC := 230
161 [-]: JMP       230          ; PC := 230
162 [-]: LOADK     R32 K40      ; R32 := " ("
163 [-]: GETGLOBAL R33 K11      ; R33 := 0xE6DC43B0
164 [-]: LOADK     R34 K41      ; R34 := "/Lotus/Language/Menu/Notification_Alert"
165 [-]: MOVE      R35 R0       ; R35 := R0
166 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
167 [-]: LOADK     R34 K42      ; R34 := ")"
168 [-]: CONCAT    R10 R32 R34  ; R10 := R32 .. R33 .. R34
169 [-]: GETGLOBAL R32 K43      ; R32 := Engine
170 [-]: GETTABLE  R32 R32 K44  ; R32 := R32["0xD09D7910"]
171 [-]: GETGLOBAL R33 K13      ; R33 := _T
172 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
173 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
174 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
175 [-]: GETTABLE  R33 R33 K45  ; R33 := R33["mExpiry"]
176 [-]: CALL      R32 2 2      ; R32 := R32(R33)
177 [-]: GETUPVAL  R33 U1       ; R33 := U1
178 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["0x9E1A1D26"]
179 [-]: MOVE      R34 R32      ; R34 := R32
180 [-]: CALL      R33 2 2      ; R33 := R33(R34)
181 [-]: MOVE      R26 R33      ; R26 := R33
182 [-]: GETGLOBAL R33 K13      ; R33 := _T
183 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
184 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
185 [-]: TEST      R33 0        ; if not R33 then PC := 221
186 [-]: JMP       221          ; PC := 221
187 [-]: GETGLOBAL R33 K13      ; R33 := _T
188 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
189 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
190 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
191 [-]: GETTABLE  R33 R33 K47  ; R33 := R33["mTag"]
192 [-]: GETGLOBAL R34 K48      ; R34 := EMPTY_SYMBOL
193 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 221
194 [-]: JMP       221          ; PC := 221
195 [-]: GETGLOBAL R33 K13      ; R33 := _T
196 [-]: GETTABLE  R33 R33 K16  ; R33 := R33["CachedAlerts"]
197 [-]: GETTABLE  R33 R33 R5   ; R33 := R33[R5]
198 [-]: GETTABLE  R33 R33 K39  ; R33 := R33["mAlertInfo"]
199 [-]: GETTABLE  R33 R33 K49  ; R33 := R33["mMissionInfo"]
200 [-]: GETTABLE  R33 R33 K50  ; R33 := R33["descText"]
201 [-]: GETGLOBAL R34 K48      ; R34 := EMPTY_SYMBOL
202 [-]: EQ        1 R33 R34    ; if R33 == R34 then PC := 221
203 [-]: JMP       221          ; PC := 221
204 [-]: LOADK     R33 K40      ; R33 := " ("
205 [-]: GETGLOBAL R34 K9       ; R34 := string
206 [-]: GETTABLE  R34 R34 K10  ; R34 := R34["0x639C642A"]
207 [-]: GETGLOBAL R35 K11      ; R35 := 0xE6DC43B0
208 [-]: GETGLOBAL R36 K0       ; R36 := 0x9FAED6BC
209 [-]: GETGLOBAL R37 K13      ; R37 := _T
210 [-]: GETTABLE  R37 R37 K16  ; R37 := R37["CachedAlerts"]
211 [-]: GETTABLE  R37 R37 R5   ; R37 := R37[R5]
212 [-]: GETTABLE  R37 R37 K39  ; R37 := R37["mAlertInfo"]
213 [-]: GETTABLE  R37 R37 K49  ; R37 := R37["mMissionInfo"]
214 [-]: GETTABLE  R37 R37 K50  ; R37 := R37["descText"]
215 [-]: CALL      R36 2 2      ; R36 := R36(R37)
216 [-]: MOVE      R37 R0       ; R37 := R0
217 [-]: CALL      R35 3 0      ; R35,... := R35(R36,R37)
218 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
219 [-]: LOADK     R35 K42      ; R35 := ")"
220 [-]: CONCAT    R10 R33 R35  ; R10 := R33 .. R34 .. R35
221 [-]: GETUPVAL  R33 U1       ; R33 := U1
222 [-]: GETTABLE  R33 R33 K51  ; R33 := R33["0xF030C338"]
223 [-]: GETGLOBAL R34 K23      ; R34 := mMovie
224 [-]: GETUPVAL  R35 U0       ; R35 := U0
225 [-]: GETTABLE  R35 R35 K39  ; R35 := R35["mAlertInfo"]
226 [-]: GETTABLE  R35 R35 K52  ; R35 := R35["missionReward"]
227 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
228 [-]: MOVE      R27 R33      ; R27 := R33
229 [-]: JMP       743          ; PC := 743
230 [-]: GETUPVAL  R33 U0       ; R33 := U0
231 [-]: GETTABLE  R33 R33 K53  ; R33 := R33["mGoalInfo"]
232 [-]: TEST      R33 0        ; if not R33 then PC := 297
233 [-]: JMP       297          ; PC := 297
234 [-]: GETGLOBAL R33 K9       ; R33 := string
235 [-]: GETTABLE  R33 R33 K10  ; R33 := R33["0x639C642A"]
236 [-]: GETGLOBAL R34 K11      ; R34 := 0xE6DC43B0
237 [-]: GETUPVAL  R35 U0       ; R35 := U0
238 [-]: GETTABLE  R35 R35 K53  ; R35 := R35["mGoalInfo"]
239 [-]: GETTABLE  R35 R35 K54  ; R35 := R35["mDesc"]
240 [-]: MOVE      R36 R0       ; R36 := R0
241 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
242 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
243 [-]: MOVE      R12 R33      ; R12 := R33
244 [-]: GETGLOBAL R33 K9       ; R33 := string
245 [-]: GETTABLE  R33 R33 K10  ; R33 := R33["0x639C642A"]
246 [-]: GETGLOBAL R34 K23      ; R34 := mMovie
247 [-]: SELF      R34 R34 K24  ; R35 := R34; R34 := R34["0x5DB0BD4"]
248 [-]: LOADK     R36 K55      ; R36 := "/Lotus/Language/Game/MissionName_"
249 [-]: GETUPVAL  R37 U1       ; R37 := U1
250 [-]: GETTABLE  R37 R37 K56  ; R37 := R37["0x87B2D555"]
251 [-]: GETUPVAL  R38 U0       ; R38 := U0
252 [-]: GETTABLE  R38 R38 K57  ; R38 := R38["mMission"]
253 [-]: CALL      R37 2 2      ; R37 := R37(R38)
254 [-]: CONCAT    R36 R36 R37  ; R36 := R36 .. R37
255 [-]: MOVE      R37 R0       ; R37 := R0
256 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
257 [-]: CALL      R33 0 2      ; R33 := R33(R34,...)
258 [-]: MOVE      R8 R33       ; R8 := R33
259 [-]: GETUPVAL  R33 U0       ; R33 := U0
260 [-]: GETTABLE  R33 R33 K57  ; R33 := R33["mMission"]
261 [-]: GETTABLE  R33 R33 K58  ; R33 := R33["archwingRequired"]
262 [-]: TEST      R33 0        ; if not R33 then PC := 743
263 [-]: JMP       743          ; PC := 743
264 [-]: GETGLOBAL R33 K23      ; R33 := mMovie
265 [-]: SELF      R33 R33 K24  ; R34 := R33; R33 := R33["0x5DB0BD4"]
266 [-]: LOADK     R35 K59      ; R35 := "<ARCHWING>"
267 [-]: MOVE      R36 R1       ; R36 := R1
268 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
269 [-]: LOADK     R34 K60      ; R34 := " "
270 [-]: MOVE      R35 R8       ; R35 := R8
271 [-]: CONCAT    R8 R33 R35   ; R8 := R33 .. R34 .. R35
272 [-]: GETUPVAL  R33 U0       ; R33 := U0
273 [-]: GETTABLE  R33 R33 K57  ; R33 := R33["mMission"]
274 [-]: GETTABLE  R33 R33 K61  ; R33 := R33["isSharkwingMission"]
275 [-]: TEST      R33 0        ; if not R33 then PC := 287
276 [-]: JMP       287          ; PC := 287
277 [-]: MOVE      R33 R8       ; R33 := R8
278 [-]: LOADK     R34 K40      ; R34 := " ("
279 [-]: GETGLOBAL R35 K23      ; R35 := mMovie
280 [-]: SELF      R35 R35 K24  ; R36 := R35; R35 := R35["0x5DB0BD4"]
281 [-]: LOADK     R37 K62      ; R37 := "/Lotus/Language/Menu/Sharkwing"
282 [-]: MOVE      R38 R0       ; R38 := R0
283 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
284 [-]: LOADK     R36 K42      ; R36 := ")"
285 [-]: CONCAT    R8 R33 R36   ; R8 := R33 .. R34 .. R35 .. R36
286 [-]: JMP       743          ; PC := 743
287 [-]: MOVE      R33 R8       ; R33 := R8
288 [-]: LOADK     R34 K40      ; R34 := " ("
289 [-]: GETGLOBAL R35 K23      ; R35 := mMovie
290 [-]: SELF      R35 R35 K24  ; R36 := R35; R35 := R35["0x5DB0BD4"]
291 [-]: LOADK     R37 K63      ; R37 := "/Lotus/Language/Menu/Loadout_Archwing"
292 [-]: MOVE      R38 R0       ; R38 := R0
293 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
294 [-]: LOADK     R36 K42      ; R36 := ")"
295 [-]: CONCAT    R8 R33 R36   ; R8 := R33 .. R34 .. R35 .. R36
296 [-]: JMP       743          ; PC := 743
297 [-]: GETUPVAL  R33 U0       ; R33 := U0
298 [-]: GETTABLE  R33 R33 K64  ; R33 := R33["mGhostTowerMissionInfo"]
299 [-]: EQ        1 R33 K22    ; if R33 == nil then PC := 322
300 [-]: JMP       322          ; PC := 322
301 [-]: GETUPVAL  R33 U3       ; R33 := U3
302 [-]: GETTABLE  R33 R33 K19  ; R33 := R33["0xF81722A2"]
303 [-]: GETUPVAL  R34 U0       ; R34 := U0
304 [-]: GETTABLE  R34 R34 K64  ; R34 := R34["mGhostTowerMissionInfo"]
305 [-]: GETTABLE  R34 R34 K49  ; R34 := R34["mMissionInfo"]
306 [-]: GETTABLE  R34 R34 K65  ; R34 := R34["minEnemyLevel"]
307 [-]: LE        1 K66 R34    ; if 80 <= R34 then PC := 310
308 [-]: JMP       310          ; PC := 310
309 [-]: MOVE      R34 R0       ; R34 := R0
310 [-]: MOVE      R34 R1       ; R34 := R1
311 [-]: LOADK     R35 K67      ; R35 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
312 [-]: LOADK     R36 K68      ; R36 := "/Lotus/Language/Menu/GhostTowerMissionName"
313 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
314 [-]: LOADK     R34 K40      ; R34 := " ("
315 [-]: GETGLOBAL R35 K11      ; R35 := 0xE6DC43B0
316 [-]: MOVE      R36 R33      ; R36 := R33
317 [-]: MOVE      R37 R0       ; R37 := R0
318 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
319 [-]: LOADK     R36 K42      ; R36 := ")"
320 [-]: CONCAT    R10 R34 R36  ; R10 := R34 .. R35 .. R36
321 [-]: JMP       743          ; PC := 743
322 [-]: GETGLOBAL R34 K13      ; R34 := _T
323 [-]: GETTABLE  R34 R34 K69  ; R34 := R34["CachedSkullNodes"]
324 [-]: GETTABLE  R34 R34 R5   ; R34 := R34[R5]
325 [-]: EQ        1 R34 K22    ; if R34 == nil then PC := 364
326 [-]: JMP       364          ; PC := 364
327 [-]: TEST      R3 0         ; if not R3 then PC := 364
328 [-]: JMP       364          ; PC := 364
329 [-]: LOADK     R10 K40      ; R10 := " ("
330 [-]: LOADK     R34 K36      ; R34 := 1
331 [-]: GETGLOBAL R35 K13      ; R35 := _T
332 [-]: GETTABLE  R35 R35 K69  ; R35 := R35["CachedSkullNodes"]
333 [-]: GETTABLE  R35 R35 R5   ; R35 := R35[R5]
334 [-]: LEN       R35 R35      ; R35 := # R35
335 [-]: LOADK     R36 K36      ; R36 := 1
336 [-]: FORPREP   R34 359      ; R34 -= R36; PC := 359
337 [-]: EQ        1 R37 K36    ; if R37 == 1 then PC := 345
338 [-]: JMP       345          ; PC := 345
339 [-]: GETGLOBAL R38 K9       ; R38 := string
340 [-]: GETTABLE  R38 R38 K10  ; R38 := R38["0x639C642A"]
341 [-]: MOVE      R39 R10      ; R39 := R10
342 [-]: CALL      R38 2 2      ; R38 := R38(R39)
343 [-]: LOADK     R39 K70      ; R39 := ", "
344 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
345 [-]: MOVE      R38 R10      ; R38 := R10
346 [-]: GETGLOBAL R39 K9       ; R39 := string
347 [-]: GETTABLE  R39 R39 K10  ; R39 := R39["0x639C642A"]
348 [-]: GETGLOBAL R40 K23      ; R40 := mMovie
349 [-]: SELF      R40 R40 K24  ; R41 := R40; R40 := R40["0x5DB0BD4"]
350 [-]: GETGLOBAL R42 K13      ; R42 := _T
351 [-]: GETTABLE  R42 R42 K69  ; R42 := R42["CachedSkullNodes"]
352 [-]: GETTABLE  R42 R42 R5   ; R42 := R42[R5]
353 [-]: GETTABLE  R42 R42 R37  ; R42 := R42[R37]
354 [-]: GETTABLE  R42 R42 K71  ; R42 := R42[2]
355 [-]: MOVE      R43 R0       ; R43 := R0
356 [-]: CALL      R40 4 0      ; R40,... := R40(R41,R42,R43)
357 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
358 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
359 [-]: FORLOOP   R34 337      ; R34 += R36; if R34 <= R35 then begin PC := 337; R37 := R34 end
360 [-]: MOVE      R38 R10      ; R38 := R10
361 [-]: LOADK     R39 K42      ; R39 := ")"
362 [-]: CONCAT    R10 R38 R39  ; R10 := R38 .. R39
363 [-]: JMP       743          ; PC := 743
364 [-]: GETGLOBAL R38 K13      ; R38 := _T
365 [-]: GETTABLE  R38 R38 K72  ; R38 := R38["CachedSortieMissions"]
366 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
367 [-]: TEST      R38 0        ; if not R38 then PC := 399
368 [-]: JMP       399          ; PC := 399
369 [-]: GETGLOBAL R38 K13      ; R38 := _T
370 [-]: GETTABLE  R38 R38 K72  ; R38 := R38["CachedSortieMissions"]
371 [-]: GETTABLE  R38 R38 R5   ; R38 := R38[R5]
372 [-]: GETTABLE  R38 R38 K73  ; R38 := R38["mShowInStarChart"]
373 [-]: TEST      R38 0        ; if not R38 then PC := 399
374 [-]: JMP       399          ; PC := 399
375 [-]: LOADK     R38 K40      ; R38 := " ("
376 [-]: GETGLOBAL R39 K11      ; R39 := 0xE6DC43B0
377 [-]: LOADK     R40 K74      ; R40 := "/Lotus/Language/Menu/SortieMissionName"
378 [-]: LOADNIL   R41 R41      ; R41 := nil
379 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
380 [-]: LOADK     R40 K42      ; R40 := ")"
381 [-]: CONCAT    R10 R38 R40  ; R10 := R38 .. R39 .. R40
382 [-]: GETGLOBAL R38 K43      ; R38 := Engine
383 [-]: GETTABLE  R38 R38 K44  ; R38 := R38["0xD09D7910"]
384 [-]: GETGLOBAL R39 K13      ; R39 := _T
385 [-]: GETTABLE  R39 R39 K72  ; R39 := R39["CachedSortieMissions"]
386 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
387 [-]: GETTABLE  R39 R39 K45  ; R39 := R39["mExpiry"]
388 [-]: CALL      R38 2 2      ; R38 := R38(R39)
389 [-]: GETUPVAL  R39 U1       ; R39 := U1
390 [-]: GETTABLE  R39 R39 K75  ; R39 := R39["0xE233A311"]
391 [-]: MOVE      R40 R38      ; R40 := R38
392 [-]: CALL      R39 2 2      ; R39 := R39(R40)
393 [-]: MOVE      R26 R39      ; R26 := R39
394 [-]: GETGLOBAL R39 K13      ; R39 := _T
395 [-]: GETTABLE  R39 R39 K72  ; R39 := R39["CachedSortieMissions"]
396 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
397 [-]: GETTABLE  R28 R39 K76  ; R28 := R39["mModifierAuraDesc"]
398 [-]: JMP       743          ; PC := 743
399 [-]: GETGLOBAL R39 K13      ; R39 := _T
400 [-]: GETTABLE  R39 R39 K14  ; R39 := R39["CachedSyndicateMissions"]
401 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
402 [-]: TEST      R39 0        ; if not R39 then PC := 441
403 [-]: JMP       441          ; PC := 441
404 [-]: GETGLOBAL R39 K13      ; R39 := _T
405 [-]: GETTABLE  R39 R39 K14  ; R39 := R39["CachedSyndicateMissions"]
406 [-]: GETTABLE  R39 R39 R5   ; R39 := R39[R5]
407 [-]: GETTABLE  R39 R39 K15  ; R39 := R39["mVisible"]
408 [-]: TEST      R39 0        ; if not R39 then PC := 441
409 [-]: JMP       441          ; PC := 441
410 [-]: LOADK     R39 K40      ; R39 := " ("
411 [-]: GETGLOBAL R40 K11      ; R40 := 0xE6DC43B0
412 [-]: LOADK     R41 K77      ; R41 := "/Lotus/Language/Menu/SyndicateMissionName"
413 [-]: MOVE      R42 R0       ; R42 := R0
414 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
415 [-]: LOADK     R41 K42      ; R41 := ")"
416 [-]: CONCAT    R10 R39 R41  ; R10 := R39 .. R40 .. R41
417 [-]: GETGLOBAL R39 K43      ; R39 := Engine
418 [-]: GETTABLE  R39 R39 K44  ; R39 := R39["0xD09D7910"]
419 [-]: GETGLOBAL R40 K13      ; R40 := _T
420 [-]: GETTABLE  R40 R40 K14  ; R40 := R40["CachedSyndicateMissions"]
421 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
422 [-]: GETTABLE  R40 R40 K45  ; R40 := R40["mExpiry"]
423 [-]: CALL      R39 2 2      ; R39 := R39(R40)
424 [-]: GETUPVAL  R40 U1       ; R40 := U1
425 [-]: GETTABLE  R40 R40 K46  ; R40 := R40["0x9E1A1D26"]
426 [-]: MOVE      R41 R39      ; R41 := R39
427 [-]: CALL      R40 2 2      ; R40 := R40(R41)
428 [-]: MOVE      R26 R40      ; R26 := R40
429 [-]: GETGLOBAL R40 K23      ; R40 := mMovie
430 [-]: SELF      R40 R40 K24  ; R41 := R40; R40 := R40["0x5DB0BD4"]
431 [-]: LOADK     R42 K78      ; R42 := "/Lotus/Language/Menu/Syndicates_Reputation"
432 [-]: MOVE      R43 R1       ; R43 := R1
433 [-]: CALL      R40 4 2      ; R40 := R40(R41,R42,R43)
434 [-]: GETGLOBAL R41 K13      ; R41 := _T
435 [-]: GETTABLE  R41 R41 K14  ; R41 := R41["CachedSyndicateMissions"]
436 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
437 [-]: GETTABLE  R41 R41 K49  ; R41 := R41["mMissionInfo"]
438 [-]: GETTABLE  R41 R41 K79  ; R41 := R41["syndicateXP"]
439 [-]: CONCAT    R27 R40 R41  ; R27 := R40 .. R41
440 [-]: JMP       743          ; PC := 743
441 [-]: GETGLOBAL R40 K13      ; R40 := _T
442 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
443 [-]: TEST      R40 0        ; if not R40 then PC := 473
444 [-]: JMP       473          ; PC := 473
445 [-]: GETGLOBAL R40 K13      ; R40 := _T
446 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
447 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
448 [-]: TEST      R40 0        ; if not R40 then PC := 473
449 [-]: JMP       473          ; PC := 473
450 [-]: GETGLOBAL R40 K13      ; R40 := _T
451 [-]: GETTABLE  R40 R40 K80  ; R40 := R40["CachedActiveMissions"]
452 [-]: GETTABLE  R40 R40 R5   ; R40 := R40[R5]
453 [-]: GETTABLE  R40 R40 K15  ; R40 := R40["mVisible"]
454 [-]: TEST      R40 0        ; if not R40 then PC := 473
455 [-]: JMP       473          ; PC := 473
456 [-]: GETGLOBAL R40 K43      ; R40 := Engine
457 [-]: GETTABLE  R40 R40 K44  ; R40 := R40["0xD09D7910"]
458 [-]: GETGLOBAL R41 K13      ; R41 := _T
459 [-]: GETTABLE  R41 R41 K80  ; R41 := R41["CachedActiveMissions"]
460 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
461 [-]: GETTABLE  R41 R41 K45  ; R41 := R41["mExpiry"]
462 [-]: CALL      R40 2 2      ; R40 := R40(R41)
463 [-]: GETUPVAL  R41 U1       ; R41 := U1
464 [-]: GETTABLE  R41 R41 K75  ; R41 := R41["0xE233A311"]
465 [-]: MOVE      R42 R40      ; R42 := R40
466 [-]: CALL      R41 2 2      ; R41 := R41(R42)
467 [-]: MOVE      R26 R41      ; R26 := R41
468 [-]: GETGLOBAL R41 K13      ; R41 := _T
469 [-]: GETTABLE  R41 R41 K80  ; R41 := R41["CachedActiveMissions"]
470 [-]: GETTABLE  R41 R41 R5   ; R41 := R41[R5]
471 [-]: GETTABLE  R28 R41 K76  ; R28 := R41["mModifierAuraDesc"]
472 [-]: JMP       743          ; PC := 743
473 [-]: GETUPVAL  R41 U0       ; R41 := U0
474 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
475 [-]: EQ        1 R41 K22    ; if R41 == nil then PC := 743
476 [-]: JMP       743          ; PC := 743
477 [-]: GETUPVAL  R41 U0       ; R41 := U0
478 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
479 [-]: GETTABLE  R41 R41 K82  ; R41 := R41["mFaction"]
480 [-]: GETGLOBAL R42 K27      ; R42 := Lotus_Game
481 [-]: GETTABLE  R42 R42 K83  ; R42 := R42["FC_INFESTATION"]
482 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 485
483 [-]: JMP       485          ; PC := 485
484 [-]: MOVE      R23 R0       ; R23 := R0
485 [-]: MOVE      R23 R1       ; R23 := R1
486 [-]: GETUPVAL  R41 U0       ; R41 := U0
487 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
488 [-]: GETTABLE  R41 R41 K84  ; R41 := R41["mEventTag"]
489 [-]: GETGLOBAL R42 K48      ; R42 := EMPTY_SYMBOL
490 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 527
491 [-]: JMP       527          ; PC := 527
492 [-]: GETUPVAL  R41 U0       ; R41 := U0
493 [-]: GETTABLE  R41 R41 K81  ; R41 := R41["mInvasionInfo"]
494 [-]: GETTABLE  R41 R41 K85  ; R41 := R41["mCount"]
495 [-]: GETUPVAL  R42 U0       ; R42 := U0
496 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
497 [-]: GETTABLE  R42 R42 K86  ; R42 := R42["mGoal"]
498 [-]: DIV       R41 R41 R42  ; R41 := R41 / R42
499 [-]: MUL       R41 R41 K87  ; R41 := R41 * 50
500 [-]: ADD       R41 K87 R41  ; R41 := 50 + R41
501 [-]: TEST      R23 0        ; if not R23 then PC := 513
502 [-]: JMP       513          ; PC := 513
503 [-]: GETUPVAL  R42 U0       ; R42 := U0
504 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
505 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["mCount"]
506 [-]: GETUPVAL  R43 U0       ; R43 := U0
507 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
508 [-]: GETTABLE  R43 R43 K86  ; R43 := R43["mGoal"]
509 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
510 [-]: MUL       R42 R42 K88  ; R42 := R42 * 100
511 [-]: ADD       R41 K88 R42  ; R41 := 100 + R42
512 [-]: JMP       521          ; PC := 521
513 [-]: GETUPVAL  R42 U0       ; R42 := U0
514 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
515 [-]: GETTABLE  R42 R42 K89  ; R42 := R42["mAttackerMissionInfo"]
516 [-]: GETTABLE  R42 R42 K90  ; R42 := R42["faction"]
517 [-]: GETGLOBAL R43 K27      ; R43 := Lotus_Game
518 [-]: GETTABLE  R43 R43 K83  ; R43 := R43["FC_INFESTATION"]
519 [-]: EQ        0 R42 R43    ; if R42 ~= R43 then PC := 521
520 [-]: JMP       521          ; PC := 521
521 [-]: GETUPVAL  R42 U1       ; R42 := U1
522 [-]: GETTABLE  R42 R42 K91  ; R42 := R42["0x90BB414A"]
523 [-]: MOVE      R43 R41      ; R43 := R41
524 [-]: CALL      R42 2 2      ; R42 := R42(R43)
525 [-]: MOVE      R18 R42      ; R18 := R42
526 [-]: JMP       562          ; PC := 562
527 [-]: GETUPVAL  R42 U0       ; R42 := U0
528 [-]: GETTABLE  R42 R42 K81  ; R42 := R42["mInvasionInfo"]
529 [-]: GETTABLE  R42 R42 K85  ; R42 := R42["mCount"]
530 [-]: GETUPVAL  R43 U0       ; R43 := U0
531 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
532 [-]: GETTABLE  R43 R43 K86  ; R43 := R43["mGoal"]
533 [-]: DIV       R42 R42 R43  ; R42 := R42 / R43
534 [-]: MUL       R42 R42 K87  ; R42 := R42 * 50
535 [-]: ADD       R42 K87 R42  ; R42 := 50 + R42
536 [-]: GETUPVAL  R43 U0       ; R43 := U0
537 [-]: GETTABLE  R43 R43 K81  ; R43 := R43["mInvasionInfo"]
538 [-]: GETTABLE  R43 R43 K85  ; R43 := R43["mCount"]
539 [-]: GETUPVAL  R44 U0       ; R44 := U0
540 [-]: GETTABLE  R44 R44 K81  ; R44 := R44["mInvasionInfo"]
541 [-]: GETTABLE  R44 R44 K86  ; R44 := R44["mGoal"]
542 [-]: DIV       R43 R43 R44  ; R43 := R43 / R44
543 [-]: MUL       R43 R43 K87  ; R43 := R43 * 50
544 [-]: SUB       R43 K87 R43  ; R43 := 50 - R43
545 [-]: GETUPVAL  R44 U1       ; R44 := U1
546 [-]: GETTABLE  R44 R44 K91  ; R44 := R44["0x90BB414A"]
547 [-]: MOVE      R45 R42      ; R45 := R42
548 [-]: CALL      R44 2 2      ; R44 := R44(R45)
549 [-]: GETUPVAL  R45 U1       ; R45 := U1
550 [-]: GETTABLE  R45 R45 K91  ; R45 := R45["0x90BB414A"]
551 [-]: MOVE      R46 R43      ; R46 := R43
552 [-]: CALL      R45 2 2      ; R45 := R45(R46)
553 [-]: GETGLOBAL R46 K11      ; R46 := 0xE6DC43B0
554 [-]: LOADK     R47 K92      ; R47 := "/Lotus/Language/Menu/DilemmaActiveProgress"
555 [-]: NEWTABLE  R48 0 4      ; R48 := {}
556 [-]: SETTABLE  R48 K93 K94  ; R48["OPTION_ONE"] := "Nef Anyo"
557 [-]: SETTABLE  R48 K95 K96  ; R48["OPTION_TWO"] := "Alad V"
558 [-]: SETTABLE  R48 K97 R44  ; R48["VALUE_ONE"] := R44
559 [-]: SETTABLE  R48 K98 R45  ; R48["VALUE_TWO"] := R45
560 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
561 [-]: MOVE      R18 R46      ; R18 := R46
562 [-]: TEST      R23 0        ; if not R23 then PC := 574
563 [-]: JMP       574          ; PC := 574
564 [-]: GETGLOBAL R46 K11      ; R46 := 0xE6DC43B0
565 [-]: LOADK     R47 K99      ; R47 := "/Lotus/Language/Menu/MissionIntro_Invasion"
566 [-]: MOVE      R48 R0       ; R48 := R0
567 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
568 [-]: MOVE      R8 R46       ; R8 := R46
569 [-]: LOADK     R46 K40      ; R46 := " ("
570 [-]: GETUPVAL  R47 U0       ; R47 := U0
571 [-]: GETTABLE  R47 R47 K5   ; R47 := R47["mName"]
572 [-]: LOADK     R48 K42      ; R48 := ")"
573 [-]: CONCAT    R10 R46 R48  ; R10 := R46 .. R47 .. R48
574 [-]: GETGLOBAL R46 K100     ; R46 := 0x400E7765
575 [-]: GETGLOBAL R47 K101     ; R47 := gGameData
576 [-]: CALL      R46 2 2      ; R46 := R46(R47)
577 [-]: TEST      R46 1        ; if R46 then PC := 743
578 [-]: JMP       743          ; PC := 743
579 [-]: GETGLOBAL R46 K101     ; R46 := gGameData
580 [-]: SELF      R46 R46 K102 ; R47 := R46; R46 := R46["0x8EA5238E"]
581 [-]: CALL      R46 2 2      ; R46 := R46(R47)
582 [-]: LOADK     R47 K36      ; R47 := 1
583 [-]: LEN       R48 R46      ; R48 := # R46
584 [-]: LOADK     R49 K36      ; R49 := 1
585 [-]: FORPREP   R47 656      ; R47 -= R49; PC := 656
586 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
587 [-]: GETTABLE  R51 R51 K103 ; R51 := R51["mId"]
588 [-]: GETTABLE  R51 R51 K103 ; R51 := R51["mId"]
589 [-]: GETUPVAL  R52 U0       ; R52 := U0
590 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
591 [-]: GETTABLE  R52 R52 K103 ; R52 := R52["mId"]
592 [-]: GETTABLE  R52 R52 K103 ; R52 := R52["mId"]
593 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 656
594 [-]: JMP       656          ; PC := 656
595 [-]: GETTABLE  R51 R46 R50  ; R51 := R46[R50]
596 [-]: GETTABLE  R19 R51 K104 ; R19 := R51["mDelta"]
597 [-]: LT        0 K30 R19    ; if 0 >= R19 then PC := 624
598 [-]: JMP       624          ; PC := 624
599 [-]: GETUPVAL  R51 U0       ; R51 := U0
600 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["mInvasionInfo"]
601 [-]: GETTABLE  R21 R51 K82  ; R21 := R51["mFaction"]
602 [-]: GETUPVAL  R51 U3       ; R51 := U3
603 [-]: GETTABLE  R51 R51 K19  ; R51 := R51["0xF81722A2"]
604 [-]: GETUPVAL  R52 U0       ; R52 := U0
605 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
606 [-]: GETTABLE  R52 R52 K105 ; R52 := R52["mAttackerName"]
607 [-]: GETGLOBAL R53 K48      ; R53 := EMPTY_SYMBOL
608 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 611
609 [-]: JMP       611          ; PC := 611
610 [-]: MOVE      R52 R0       ; R52 := R0
611 [-]: MOVE      R52 R1       ; R52 := R1
612 [-]: GETUPVAL  R53 U1       ; R53 := U1
613 [-]: GETTABLE  R53 R53 K106 ; R53 := R53["FactionNames"]
614 [-]: ADD       R54 R21 K36  ; R54 := R21 + 1
615 [-]: GETTABLE  R53 R53 R54  ; R53 := R53[R54]
616 [-]: GETGLOBAL R54 K0       ; R54 := 0x9FAED6BC
617 [-]: GETUPVAL  R55 U0       ; R55 := U0
618 [-]: GETTABLE  R55 R55 K81  ; R55 := R55["mInvasionInfo"]
619 [-]: GETTABLE  R55 R55 K105 ; R55 := R55["mAttackerName"]
620 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
621 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
622 [-]: MOVE      R22 R51      ; R22 := R51
623 [-]: JMP       656          ; PC := 656
624 [-]: LT        0 R19 K30    ; if R19 >= 0 then PC := 656
625 [-]: JMP       656          ; PC := 656
626 [-]: GETGLOBAL R51 K107     ; R51 := math
627 [-]: GETTABLE  R51 R51 K108 ; R51 := R51["0xF93F7CC8"]
628 [-]: MOVE      R52 R19      ; R52 := R19
629 [-]: CALL      R51 2 2      ; R51 := R51(R52)
630 [-]: MOVE      R19 R51      ; R19 := R51
631 [-]: GETUPVAL  R51 U0       ; R51 := U0
632 [-]: GETTABLE  R51 R51 K81  ; R51 := R51["mInvasionInfo"]
633 [-]: GETTABLE  R51 R51 K89  ; R51 := R51["mAttackerMissionInfo"]
634 [-]: GETTABLE  R21 R51 K90  ; R21 := R51["faction"]
635 [-]: GETUPVAL  R51 U3       ; R51 := U3
636 [-]: GETTABLE  R51 R51 K19  ; R51 := R51["0xF81722A2"]
637 [-]: GETUPVAL  R52 U0       ; R52 := U0
638 [-]: GETTABLE  R52 R52 K81  ; R52 := R52["mInvasionInfo"]
639 [-]: GETTABLE  R52 R52 K109 ; R52 := R52["mDefenderName"]
640 [-]: GETGLOBAL R53 K48      ; R53 := EMPTY_SYMBOL
641 [-]: EQ        1 R52 R53    ; if R52 == R53 then PC := 644
642 [-]: JMP       644          ; PC := 644
643 [-]: MOVE      R52 R0       ; R52 := R0
644 [-]: MOVE      R52 R1       ; R52 := R1
645 [-]: GETUPVAL  R53 U1       ; R53 := U1
646 [-]: GETTABLE  R53 R53 K106 ; R53 := R53["FactionNames"]
647 [-]: ADD       R54 R21 K36  ; R54 := R21 + 1
648 [-]: GETTABLE  R53 R53 R54  ; R53 := R53[R54]
649 [-]: GETGLOBAL R54 K0       ; R54 := 0x9FAED6BC
650 [-]: GETUPVAL  R55 U0       ; R55 := U0
651 [-]: GETTABLE  R55 R55 K81  ; R55 := R55["mInvasionInfo"]
652 [-]: GETTABLE  R55 R55 K109 ; R55 := R55["mDefenderName"]
653 [-]: CALL      R54 2 0      ; R54,... := R54(R55)
654 [-]: CALL      R51 0 2      ; R51 := R51(R52,...)
655 [-]: MOVE      R22 R51      ; R22 := R51
656 [-]: FORLOOP   R47 586      ; R47 += R49; if R47 <= R48 then begin PC := 586; R50 := R47 end
657 [-]: GETUPVAL  R51 U1       ; R51 := U1
658 [-]: GETTABLE  R51 R51 K51  ; R51 := R51["0xF030C338"]
659 [-]: GETGLOBAL R52 K23      ; R52 := mMovie
660 [-]: GETUPVAL  R53 U0       ; R53 := U0
661 [-]: GETTABLE  R53 R53 K81  ; R53 := R53["mInvasionInfo"]
662 [-]: GETTABLE  R53 R53 K110 ; R53 := R53["mAttackerReward"]
663 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
664 [-]: GETUPVAL  R52 U1       ; R52 := U1
665 [-]: GETTABLE  R52 R52 K51  ; R52 := R52["0xF030C338"]
666 [-]: GETGLOBAL R53 K23      ; R53 := mMovie
667 [-]: GETUPVAL  R54 U0       ; R54 := U0
668 [-]: GETTABLE  R54 R54 K81  ; R54 := R54["mInvasionInfo"]
669 [-]: GETTABLE  R54 R54 K111 ; R54 := R54["mDefenderReward"]
670 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
671 [-]: GETUPVAL  R53 U3       ; R53 := U3
672 [-]: GETTABLE  R53 R53 K19  ; R53 := R53["0xF81722A2"]
673 [-]: MOVE      R54 R23      ; R54 := R23
674 [-]: MOVE      R55 R51      ; R55 := R51
675 [-]: LOADK     R56 K60      ; R56 := " "
676 [-]: GETGLOBAL R57 K23      ; R57 := mMovie
677 [-]: SELF      R57 R57 K24  ; R58 := R57; R57 := R57["0x5DB0BD4"]
678 [-]: LOADK     R59 K112     ; R59 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
679 [-]: MOVE      R60 R0       ; R60 := R0
680 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
681 [-]: LOADK     R58 K60      ; R58 := " "
682 [-]: MOVE      R59 R52      ; R59 := R52
683 [-]: CONCAT    R55 R55 R59  ; R55 := R55 .. R56 .. R57 .. R58 .. R59
684 [-]: MOVE      R56 R52      ; R56 := R52
685 [-]: CALL      R53 4 2      ; R53 := R53(R54,R55,R56)
686 [-]: MOVE      R24 R53      ; R24 := R53
687 [-]: LOADK     R53 K113     ; R53 := "\r\n"
688 [-]: MOVE      R54 R18      ; R54 := R18
689 [-]: LOADK     R55 K113     ; R55 := "\r\n"
690 [-]: MOVE      R56 R19      ; R56 := R19
691 [-]: LOADK     R57 K114     ; R57 := "/"
692 [-]: MOVE      R58 R20      ; R58 := R20
693 [-]: CONCAT    R15 R53 R58  ; R15 := R53 .. R54 .. R55 .. R56 .. R57 .. R58
694 [-]: TEST      R21 0        ; if not R21 then PC := 706
695 [-]: JMP       706          ; PC := 706
696 [-]: TEST      R23 1        ; if R23 then PC := 706
697 [-]: JMP       706          ; PC := 706
698 [-]: MOVE      R53 R15      ; R53 := R15
699 [-]: LOADK     R54 K60      ; R54 := " "
700 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
701 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
702 [-]: MOVE      R57 R22      ; R57 := R22
703 [-]: MOVE      R58 R0       ; R58 := R0
704 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
705 [-]: CONCAT    R15 R53 R55  ; R15 := R53 .. R54 .. R55
706 [-]: MOVE      R53 R15      ; R53 := R15
707 [-]: LOADK     R54 K113     ; R54 := "\r\n"
708 [-]: MOVE      R55 R24      ; R55 := R24
709 [-]: CONCAT    R15 R53 R55  ; R15 := R53 .. R54 .. R55
710 [-]: GETGLOBAL R53 K43      ; R53 := Engine
711 [-]: GETTABLE  R53 R53 K44  ; R53 := R53["0xD09D7910"]
712 [-]: GETUPVAL  R54 U0       ; R54 := U0
713 [-]: GETTABLE  R54 R54 K81  ; R54 := R54["mInvasionInfo"]
714 [-]: GETTABLE  R54 R54 K45  ; R54 := R54["mExpiry"]
715 [-]: CALL      R53 2 2      ; R53 := R53(R54)
716 [-]: LE        0 K115 R53   ; if -600 > R53 then PC := 743
717 [-]: JMP       743          ; PC := 743
718 [-]: LE        0 R53 K116   ; if R53 > 43200 then PC := 743
719 [-]: JMP       743          ; PC := 743
720 [-]: GETUPVAL  R54 U1       ; R54 := U1
721 [-]: GETTABLE  R54 R54 K117 ; R54 := R54["0xE5892312"]
722 [-]: MOVE      R55 R53      ; R55 := R53
723 [-]: CALL      R54 2 2      ; R54 := R54(R55)
724 [-]: LT        0 R53 K30    ; if R53 >= 0 then PC := 731
725 [-]: JMP       731          ; PC := 731
726 [-]: GETUPVAL  R55 U1       ; R55 := U1
727 [-]: GETTABLE  R55 R55 K117 ; R55 := R55["0xE5892312"]
728 [-]: LOADK     R56 K30      ; R56 := 0
729 [-]: CALL      R55 2 2      ; R55 := R55(R56)
730 [-]: MOVE      R54 R55      ; R54 := R55
731 [-]: MOVE      R55 R12      ; R55 := R12
732 [-]: LOADK     R56 K17      ; R56 := " - "
733 [-]: GETGLOBAL R57 K9       ; R57 := string
734 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["0x639C642A"]
735 [-]: GETGLOBAL R58 K11      ; R58 := 0xE6DC43B0
736 [-]: LOADK     R59 K118     ; R59 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
737 [-]: LOADNIL   R60 R60      ; R60 := nil
738 [-]: CALL      R58 3 0      ; R58,... := R58(R59,R60)
739 [-]: CALL      R57 0 2      ; R57 := R57(R58,...)
740 [-]: LOADK     R58 K60      ; R58 := " "
741 [-]: MOVE      R59 R54      ; R59 := R54
742 [-]: CONCAT    R12 R55 R59  ; R12 := R55 .. R56 .. R57 .. R58 .. R59
743 [-]: GETGLOBAL R55 K27      ; R55 := Lotus_Game
744 [-]: GETTABLE  R55 R55 K28  ; R55 := R55["NT_HUB"]
745 [-]: EQ        1 R7 R55     ; if R7 == R55 then PC := 753
746 [-]: JMP       753          ; PC := 753
747 [-]: MOVE      R55 R30      ; R55 := R30
748 [-]: LOADK     R56 K119     ; R56 := "/Lotus/Language/Menu/Lobby_Mission"
749 [-]: MOVE      R57 R8       ; R57 := R8
750 [-]: MOVE      R58 R10      ; R58 := R10
751 [-]: CONCAT    R57 R57 R58  ; R57 := R57 .. R58
752 [-]: CALL      R55 3 1      ; R55(R56,R57)
753 [-]: GETUPVAL  R55 U0       ; R55 := U0
754 [-]: GETTABLE  R55 R55 K57  ; R55 := R55["mMission"]
755 [-]: GETTABLE  R55 R55 K120 ; R55 := R55["goalTag"]
756 [-]: SELF      R55 R55 K121 ; R56 := R55; R55 := R55["0x5EC7A3D2"]
757 [-]: CALL      R55 2 2      ; R55 := R55(R56)
758 [-]: EQ        0 R55 K122   ; if R55 ~= "NoMods" then PC := 773
759 [-]: JMP       773          ; PC := 773
760 [-]: GETGLOBAL R55 K23      ; R55 := mMovie
761 [-]: SELF      R55 R55 K24  ; R56 := R55; R55 := R55["0x5DB0BD4"]
762 [-]: LOADK     R57 K123     ; R57 := "/Lotus/Language/Sorties/SOModifierNoMods"
763 [-]: MOVE      R58 R0       ; R58 := R0
764 [-]: CALL      R55 4 2      ; R55 := R55(R56,R57,R58)
765 [-]: GETGLOBAL R56 K23      ; R56 := mMovie
766 [-]: SELF      R56 R56 K24  ; R57 := R56; R56 := R56["0x5DB0BD4"]
767 [-]: LOADK     R58 K124     ; R58 := "/Lotus/Language/Sorties/SOModifierCaption"
768 [-]: MOVE      R59 R0       ; R59 := R0
769 [-]: NEWTABLE  R60 0 1      ; R60 := {}
770 [-]: SETTABLE  R60 K125 R55 ; R60["MODIFIER_DESC"] := R55
771 [-]: CALL      R56 5 2      ; R56 := R56(R57,R58,R59,R60)
772 [-]: MOVE      R28 R56      ; R28 := R56
773 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 850
774 [-]: JMP       850          ; PC := 850
775 [-]: TEST      R23 1        ; if R23 then PC := 850
776 [-]: JMP       850          ; PC := 850
777 [-]: GETGLOBAL R56 K11      ; R56 := 0xE6DC43B0
778 [-]: GETGLOBAL R57 K0       ; R57 := 0x9FAED6BC
779 [-]: GETUPVAL  R58 U1       ; R58 := U1
780 [-]: GETTABLE  R58 R58 K106 ; R58 := R58["FactionNames"]
781 [-]: GETUPVAL  R59 U0       ; R59 := U0
782 [-]: GETTABLE  R59 R59 K81  ; R59 := R59["mInvasionInfo"]
783 [-]: GETTABLE  R59 R59 K82  ; R59 := R59["mFaction"]
784 [-]: ADD       R59 R59 K36  ; R59 := R59 + 1
785 [-]: GETTABLE  R58 R58 R59  ; R58 := R58[R59]
786 [-]: CALL      R57 2 2      ; R57 := R57(R58)
787 [-]: MOVE      R58 R0       ; R58 := R0
788 [-]: CALL      R56 3 2      ; R56 := R56(R57,R58)
789 [-]: LOADK     R57 K40      ; R57 := " ("
790 [-]: GETGLOBAL R58 K9       ; R58 := string
791 [-]: GETTABLE  R58 R58 K10  ; R58 := R58["0x639C642A"]
792 [-]: GETGLOBAL R59 K23      ; R59 := mMovie
793 [-]: SELF      R59 R59 K24  ; R60 := R59; R59 := R59["0x5DB0BD4"]
794 [-]: LOADK     R61 K55      ; R61 := "/Lotus/Language/Game/MissionName_"
795 [-]: GETUPVAL  R62 U1       ; R62 := U1
796 [-]: GETTABLE  R62 R62 K56  ; R62 := R62["0x87B2D555"]
797 [-]: GETUPVAL  R63 U0       ; R63 := U0
798 [-]: GETTABLE  R63 R63 K81  ; R63 := R63["mInvasionInfo"]
799 [-]: GETTABLE  R63 R63 K89  ; R63 := R63["mAttackerMissionInfo"]
800 [-]: CALL      R62 2 2      ; R62 := R62(R63)
801 [-]: CONCAT    R61 R61 R62  ; R61 := R61 .. R62
802 [-]: MOVE      R62 R0       ; R62 := R0
803 [-]: CALL      R59 4 0      ; R59,... := R59(R60,R61,R62)
804 [-]: CALL      R58 0 2      ; R58 := R58(R59,...)
805 [-]: LOADK     R59 K42      ; R59 := ")"
806 [-]: CONCAT    R56 R56 R59  ; R56 := R56 .. R57 .. R58 .. R59
807 [-]: GETGLOBAL R57 K11      ; R57 := 0xE6DC43B0
808 [-]: GETGLOBAL R58 K0       ; R58 := 0x9FAED6BC
809 [-]: GETUPVAL  R59 U1       ; R59 := U1
810 [-]: GETTABLE  R59 R59 K106 ; R59 := R59["FactionNames"]
811 [-]: GETUPVAL  R60 U0       ; R60 := U0
812 [-]: GETTABLE  R60 R60 K81  ; R60 := R60["mInvasionInfo"]
813 [-]: GETTABLE  R60 R60 K89  ; R60 := R60["mAttackerMissionInfo"]
814 [-]: GETTABLE  R60 R60 K90  ; R60 := R60["faction"]
815 [-]: ADD       R60 R60 K36  ; R60 := R60 + 1
816 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
817 [-]: CALL      R58 2 2      ; R58 := R58(R59)
818 [-]: MOVE      R59 R0       ; R59 := R0
819 [-]: CALL      R57 3 2      ; R57 := R57(R58,R59)
820 [-]: LOADK     R58 K40      ; R58 := " ("
821 [-]: GETGLOBAL R59 K9       ; R59 := string
822 [-]: GETTABLE  R59 R59 K10  ; R59 := R59["0x639C642A"]
823 [-]: GETGLOBAL R60 K23      ; R60 := mMovie
824 [-]: SELF      R60 R60 K24  ; R61 := R60; R60 := R60["0x5DB0BD4"]
825 [-]: LOADK     R62 K55      ; R62 := "/Lotus/Language/Game/MissionName_"
826 [-]: GETUPVAL  R63 U1       ; R63 := U1
827 [-]: GETTABLE  R63 R63 K56  ; R63 := R63["0x87B2D555"]
828 [-]: GETUPVAL  R64 U0       ; R64 := U0
829 [-]: GETTABLE  R64 R64 K81  ; R64 := R64["mInvasionInfo"]
830 [-]: GETTABLE  R64 R64 K126 ; R64 := R64["mDefenderMissionInfo"]
831 [-]: CALL      R63 2 2      ; R63 := R63(R64)
832 [-]: CONCAT    R62 R62 R63  ; R62 := R62 .. R63
833 [-]: MOVE      R63 R0       ; R63 := R0
834 [-]: CALL      R60 4 0      ; R60,... := R60(R61,R62,R63)
835 [-]: CALL      R59 0 2      ; R59 := R59(R60,...)
836 [-]: LOADK     R60 K42      ; R60 := ")"
837 [-]: CONCAT    R57 R57 R60  ; R57 := R57 .. R58 .. R59 .. R60
838 [-]: MOVE      R58 R30      ; R58 := R30
839 [-]: LOADNIL   R59 R59      ; R59 := nil
840 [-]: MOVE      R60 R56      ; R60 := R56
841 [-]: LOADK     R61 K60      ; R61 := " "
842 [-]: GETGLOBAL R62 K11      ; R62 := 0xE6DC43B0
843 [-]: LOADK     R63 K112     ; R63 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
844 [-]: LOADNIL   R64 R64      ; R64 := nil
845 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
846 [-]: LOADK     R63 K113     ; R63 := "\r\n"
847 [-]: MOVE      R64 R57      ; R64 := R57
848 [-]: CONCAT    R60 R60 R64  ; R60 := R60 .. R61 .. R62 .. R63 .. R64
849 [-]: CALL      R58 3 1      ; R58(R59,R60)
850 [-]: GETUPVAL  R58 U0       ; R58 := U0
851 [-]: GETTABLE  R58 R58 K57  ; R58 := R58["mMission"]
852 [-]: GETTABLE  R58 R58 K127 ; R58 := R58["missionType"]
853 [-]: GETGLOBAL R59 K27      ; R59 := Lotus_Game
854 [-]: GETTABLE  R59 R59 K128 ; R59 := R59["MT_LANDSCAPE"]
855 [-]: EQ        1 R58 R59    ; if R58 == R59 then PC := 865
856 [-]: JMP       865          ; PC := 865
857 [-]: GETGLOBAL R58 K27      ; R58 := Lotus_Game
858 [-]: GETTABLE  R58 R58 K28  ; R58 := R58["NT_HUB"]
859 [-]: EQ        0 R7 R58     ; if R7 ~= R58 then PC := 937
860 [-]: JMP       937          ; PC := 937
861 [-]: GETUPVAL  R58 U1       ; R58 := U1
862 [-]: GETTABLE  R58 R58 K129 ; R58 := R58["CETUS_NODE_TAG"]
863 [-]: EQ        0 R6 R58     ; if R6 ~= R58 then PC := 937
864 [-]: JMP       937          ; PC := 937
865 [-]: GETUPVAL  R58 U5       ; R58 := U5
866 [-]: SETTABLE  R58 K130 K30 ; R58["UpdateTimer"] := 0
867 [-]: GETUPVAL  R58 U5       ; R58 := U5
868 [-]: SETTABLE  R58 K131 R29 ; R58["TimerPre"] := R29
869 [-]: GETUPVAL  R58 U1       ; R58 := U1
870 [-]: GETTABLE  R58 R58 K132 ; R58 := R58["0x555EFA5"]
871 [-]: GETUPVAL  R59 U0       ; R59 := U0
872 [-]: GETTABLE  R59 R59 K57  ; R59 := R59["mMission"]
873 [-]: GETTABLE  R59 R59 K133 ; R59 := R59["location"]
874 [-]: CALL      R58 2 2      ; R58 := R58(R59)
875 [-]: GETUPVAL  R59 U1       ; R59 := U1
876 [-]: GETTABLE  R59 R59 K134 ; R59 := R59["0x447FCC2F"]
877 [-]: MOVE      R60 R58      ; R60 := R58
878 [-]: GETUPVAL  R61 U0       ; R61 := U0
879 [-]: GETTABLE  R61 R61 K57  ; R61 := R61["mMission"]
880 [-]: GETTABLE  R61 R61 K133 ; R61 := R61["location"]
881 [-]: CALL      R59 3 4      ; R59,R60,R61 := R59(R60,R61)
882 [-]: GETUPVAL  R62 U5       ; R62 := U5
883 [-]: SETTABLE  R62 K135 R61 ; R62["NodeTime"] := R61
884 [-]: GETUPVAL  R62 U0       ; R62 := U0
885 [-]: GETTABLE  R62 R62 K57  ; R62 := R62["mMission"]
886 [-]: GETTABLE  R62 R62 K133 ; R62 := R62["location"]
887 [-]: GETUPVAL  R63 U1       ; R63 := U1
888 [-]: GETTABLE  R63 R63 K136 ; R63 := R63["ORB_VALLIS_NODE_TAG"]
889 [-]: EQ        0 R62 R63    ; if R62 ~= R63 then PC := 914
890 [-]: JMP       914          ; PC := 914
891 [-]: MOVE      R62 R30      ; R62 := R30
892 [-]: LOADK     R63 K137     ; R63 := "/Lotus/Language/SolarisVenus/Temperature"
893 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
894 [-]: SELF      R64 R64 K24  ; R65 := R64; R64 := R64["0x5DB0BD4"]
895 [-]: LOADK     R66 K138     ; R66 := "/Lotus/Language/SystemMessages/TimeUntil"
896 [-]: MOVE      R67 R0       ; R67 := R0
897 [-]: NEWTABLE  R68 0 2      ; R68 := {}
898 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
899 [-]: SELF      R69 R69 K24  ; R70 := R69; R69 := R69["0x5DB0BD4"]
900 [-]: MOVE      R71 R60      ; R71 := R60
901 [-]: MOVE      R72 R0       ; R72 := R0
902 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
903 [-]: SETTABLE  R68 K139 R69 ; R68["LABEL"] := R69
904 [-]: GETUPVAL  R69 U1       ; R69 := U1
905 [-]: GETTABLE  R69 R69 K141 ; R69 := R69["0xC65D09DD"]
906 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
907 [-]: MOVE      R71 R61      ; R71 := R61
908 [-]: LOADK     R72 K142     ; R72 := "CompactOne"
909 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
910 [-]: SETTABLE  R68 K140 R69 ; R68["TIME"] := R69
911 [-]: CALL      R64 5 0      ; R64,... := R64(R65,R66,R67,R68)
912 [-]: CALL      R62 0 1      ; R62(R63,...)
913 [-]: JMP       945          ; PC := 945
914 [-]: MOVE      R62 R30      ; R62 := R30
915 [-]: LOADK     R63 K143     ; R63 := "/Lotus/Language/Menu/Photobooth_TimeOfDay"
916 [-]: GETGLOBAL R64 K23      ; R64 := mMovie
917 [-]: SELF      R64 R64 K24  ; R65 := R64; R64 := R64["0x5DB0BD4"]
918 [-]: LOADK     R66 K138     ; R66 := "/Lotus/Language/SystemMessages/TimeUntil"
919 [-]: MOVE      R67 R0       ; R67 := R0
920 [-]: NEWTABLE  R68 0 2      ; R68 := {}
921 [-]: GETGLOBAL R69 K23      ; R69 := mMovie
922 [-]: SELF      R69 R69 K24  ; R70 := R69; R69 := R69["0x5DB0BD4"]
923 [-]: MOVE      R71 R60      ; R71 := R60
924 [-]: MOVE      R72 R0       ; R72 := R0
925 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
926 [-]: SETTABLE  R68 K139 R69 ; R68["LABEL"] := R69
927 [-]: GETUPVAL  R69 U1       ; R69 := U1
928 [-]: GETTABLE  R69 R69 K141 ; R69 := R69["0xC65D09DD"]
929 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
930 [-]: MOVE      R71 R61      ; R71 := R61
931 [-]: LOADK     R72 K142     ; R72 := "CompactOne"
932 [-]: CALL      R69 4 2      ; R69 := R69(R70,R71,R72)
933 [-]: SETTABLE  R68 K140 R69 ; R68["TIME"] := R69
934 [-]: CALL      R64 5 0      ; R64,... := R64(R65,R66,R67,R68)
935 [-]: CALL      R62 0 1      ; R62(R63,...)
936 [-]: JMP       945          ; PC := 945
937 [-]: GETUPVAL  R62 U5       ; R62 := U5
938 [-]: SETTABLE  R62 K130 K22 ; R62["UpdateTimer"] := nil
939 [-]: GETUPVAL  R62 U5       ; R62 := U5
940 [-]: SETTABLE  R62 K135 K22 ; R62["NodeTime"] := nil
941 [-]: GETUPVAL  R62 U5       ; R62 := U5
942 [-]: SETTABLE  R62 K131 K22 ; R62["TimerPre"] := nil
943 [-]: GETUPVAL  R62 U5       ; R62 := U5
944 [-]: SETTABLE  R62 K144 K22 ; R62["TimerPost"] := nil
945 [-]: GETGLOBAL R62 K9       ; R62 := string
946 [-]: GETTABLE  R62 R62 K145 ; R62 := R62["0xC6772A8A"]
947 [-]: MOVE      R63 R29      ; R63 := R29
948 [-]: CALL      R62 2 2      ; R62 := R62(R63)
949 [-]: GETUPVAL  R63 U1       ; R63 := U1
950 [-]: GETTABLE  R63 R63 K146 ; R63 := R63["OPTIONAL_GOAL_PREFIX"]
951 [-]: MOVE      R64 R5       ; R64 := R5
952 [-]: CONCAT    R63 R63 R64  ; R63 := R63 .. R64
953 [-]: GETTABLE  R64 R9 R63   ; R64 := R9[R63]
954 [-]: TEST      R64 0        ; if not R64 then PC := 964
955 [-]: JMP       964          ; PC := 964
956 [-]: MOVE      R64 R30      ; R64 := R30
957 [-]: LOADK     R65 K147     ; R65 := "/Lotus/Language/Menu/WorldStatePanel_Event"
958 [-]: GETGLOBAL R66 K11      ; R66 := 0xE6DC43B0
959 [-]: GETTABLE  R67 R9 R63   ; R67 := R9[R63]
960 [-]: GETTABLE  R67 R67 K54  ; R67 := R67["mDesc"]
961 [-]: LOADNIL   R68 R68      ; R68 := nil
962 [-]: CALL      R66 3 0      ; R66,... := R66(R67,R68)
963 [-]: CALL      R64 0 1      ; R64(R65,...)
964 [-]: GETUPVAL  R64 U0       ; R64 := U0
965 [-]: GETTABLE  R64 R64 K57  ; R64 := R64["mMission"]
966 [-]: GETTABLE  R64 R64 K127 ; R64 := R64["missionType"]
967 [-]: GETGLOBAL R65 K27      ; R65 := Lotus_Game
968 [-]: GETTABLE  R65 R65 K148 ; R65 := R65["MT_ASSASSINATION"]
969 [-]: EQ        0 R64 R65    ; if R64 ~= R65 then PC := 982
970 [-]: JMP       982          ; PC := 982
971 [-]: TEST      R14 1        ; if R14 then PC := 982
972 [-]: JMP       982          ; PC := 982
973 [-]: MOVE      R64 R30      ; R64 := R30
974 [-]: LOADK     R65 K149     ; R65 := "/Lotus/Language/Menu/MissionIntro_Target"
975 [-]: GETGLOBAL R66 K9       ; R66 := string
976 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
977 [-]: GETUPVAL  R67 U0       ; R67 := U0
978 [-]: GETTABLE  R67 R67 K54  ; R67 := R67["mDesc"]
979 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
980 [-]: CALL      R64 0 1      ; R64(R65,...)
981 [-]: JMP       1051         ; PC := 1051
982 [-]: GETTABLE  R64 R0 K150  ; R64 := R0["guildId"]
983 [-]: EQ        1 R64 K22    ; if R64 == nil then PC := 1008
984 [-]: JMP       1008         ; PC := 1008
985 [-]: GETTABLE  R64 R0 K151  ; R64 := R0["clanTier"]
986 [-]: EQ        1 R64 K22    ; if R64 == nil then PC := 1008
987 [-]: JMP       1008         ; PC := 1008
988 [-]: MOVE      R64 R30      ; R64 := R30
989 [-]: LOADK     R65 K152     ; R65 := "/Lotus/Language/Menu/Profile_Clan"
990 [-]: GETGLOBAL R66 K9       ; R66 := string
991 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
992 [-]: GETTABLE  R67 R0 K153  ; R67 := R0["locName"]
993 [-]: CALL      R66 2 0      ; R66,... := R66(R67)
994 [-]: CALL      R64 0 1      ; R64(R65,...)
995 [-]: MOVE      R64 R30      ; R64 := R30
996 [-]: LOADK     R65 K154     ; R65 := "/Lotus/Language/Dojo/ClanTier"
997 [-]: GETGLOBAL R66 K9       ; R66 := string
998 [-]: GETTABLE  R66 R66 K10  ; R66 := R66["0x639C642A"]
999 [-]: GETGLOBAL R67 K11      ; R67 := 0xE6DC43B0
1000 [-]: GETUPVAL  R68 U6       ; R68 := U6
1001 [-]: GETTABLE  R69 R0 K151  ; R69 := R0["clanTier"]
1002 [-]: GETTABLE  R68 R68 R69  ; R68 := R68[R69]
1003 [-]: LOADNIL   R69 R69      ; R69 := nil
1004 [-]: CALL      R67 3 0      ; R67,... := R67(R68,R69)
1005 [-]: CALL      R66 0 0      ; R66,... := R66(R67,...)
1006 [-]: CALL      R64 0 1      ; R64(R65,...)
1007 [-]: JMP       1051         ; PC := 1051
1008 [-]: GETGLOBAL R64 K27      ; R64 := Lotus_Game
1009 [-]: GETTABLE  R64 R64 K28  ; R64 := R64["NT_HUB"]
1010 [-]: EQ        0 R7 R64     ; if R7 ~= R64 then PC := 1029
1011 [-]: JMP       1029         ; PC := 1029
1012 [-]: LOADNIL   R64 R64      ; R64 := nil
1013 [-]: EQ        0 R5 K155    ; if R5 ~= "IronwakeHUB3" then PC := 1017
1014 [-]: JMP       1017         ; PC := 1017
1015 [-]: LOADK     R64 K156     ; R64 := "/Lotus/Language/Factions/SteelMeridianName"
1016 [-]: JMP       1018         ; PC := 1018
1017 [-]: LOADK     R64 K157     ; R64 := "/Lotus/Language/Menu/Codex_Tenno"
1018 [-]: MOVE      R65 R30      ; R65 := R30
1019 [-]: LOADK     R66 K158     ; R66 := "/Lotus/Language/Menu/MissionIntro_Faction"
1020 [-]: GETGLOBAL R67 K9       ; R67 := string
1021 [-]: GETTABLE  R67 R67 K10  ; R67 := R67["0x639C642A"]
1022 [-]: GETGLOBAL R68 K11      ; R68 := 0xE6DC43B0
1023 [-]: MOVE      R69 R64      ; R69 := R64
1024 [-]: LOADNIL   R70 R70      ; R70 := nil
1025 [-]: CALL      R68 3 0      ; R68,... := R68(R69,R70)
1026 [-]: CALL      R67 0 0      ; R67,... := R67(R68,...)
1027 [-]: CALL      R65 0 1      ; R65(R66,...)
1028 [-]: JMP       1051         ; PC := 1051
1029 [-]: GETGLOBAL R65 K9       ; R65 := string
1030 [-]: GETTABLE  R65 R65 K10  ; R65 := R65["0x639C642A"]
1031 [-]: GETUPVAL  R66 U0       ; R66 := U0
1032 [-]: GETTABLE  R66 R66 K54  ; R66 := R66["mDesc"]
1033 [-]: CALL      R65 2 2      ; R65 := R65(R66)
1034 [-]: TEST      R4 0         ; if not R4 then PC := 1047
1035 [-]: JMP       1047         ; PC := 1047
1036 [-]: MOVE      R66 R65      ; R66 := R65
1037 [-]: LOADK     R67 K40      ; R67 := " ("
1038 [-]: GETGLOBAL R68 K9       ; R68 := string
1039 [-]: GETTABLE  R68 R68 K10  ; R68 := R68["0x639C642A"]
1040 [-]: GETGLOBAL R69 K11      ; R69 := 0xE6DC43B0
1041 [-]: LOADK     R70 K159     ; R70 := "/Lotus/Language/Menu/OccupyingFaction"
1042 [-]: LOADNIL   R71 R71      ; R71 := nil
1043 [-]: CALL      R69 3 0      ; R69,... := R69(R70,R71)
1044 [-]: CALL      R68 0 2      ; R68 := R68(R69,...)
1045 [-]: LOADK     R69 K42      ; R69 := ")"
1046 [-]: CONCAT    R65 R66 R69  ; R65 := R66 .. R67 .. R68 .. R69
1047 [-]: MOVE      R66 R30      ; R66 := R30
1048 [-]: LOADK     R67 K158     ; R67 := "/Lotus/Language/Menu/MissionIntro_Faction"
1049 [-]: MOVE      R68 R65      ; R68 := R65
1050 [-]: CALL      R66 3 1      ; R66(R67,R68)
1051 [-]: TEST      R13 1        ; if R13 then PC := 1090
1052 [-]: JMP       1090         ; PC := 1090
1053 [-]: TEST      R14 1        ; if R14 then PC := 1090
1054 [-]: JMP       1090         ; PC := 1090
1055 [-]: GETUPVAL  R66 U3       ; R66 := U3
1056 [-]: GETTABLE  R66 R66 K19  ; R66 := R66["0xF81722A2"]
1057 [-]: EQ        1 R3 K160    ; if R3 == "0x1" then PC := 1060
1058 [-]: JMP       1060         ; PC := 1060
1059 [-]: MOVE      R67 R0       ; R67 := R0
1060 [-]: MOVE      R67 R1       ; R67 := R1
1061 [-]: LOADK     R68 K161     ; R68 := 10
1062 [-]: LOADK     R69 K30      ; R69 := 0
1063 [-]: CALL      R66 4 2      ; R66 := R66(R67,R68,R69)
1064 [-]: GETUPVAL  R67 U0       ; R67 := U0
1065 [-]: GETTABLE  R67 R67 K162 ; R67 := R67["mLevelMin"]
1066 [-]: ADD       R67 R67 R66  ; R67 := R67 + R66
1067 [-]: LOADK     R68 K163     ; R68 := "-"
1068 [-]: GETUPVAL  R69 U0       ; R69 := U0
1069 [-]: GETTABLE  R69 R69 K164 ; R69 := R69["mLevelMax"]
1070 [-]: ADD       R69 R69 R66  ; R69 := R69 + R66
1071 [-]: CONCAT    R67 R67 R69  ; R67 := R67 .. R68 .. R69
1072 [-]: GETUPVAL  R68 U0       ; R68 := U0
1073 [-]: GETTABLE  R68 R68 K165 ; R68 := R68["mConclaveMax"]
1074 [-]: LT        0 K30 R68    ; if 0 >= R68 then PC := 1086
1075 [-]: JMP       1086         ; PC := 1086
1076 [-]: MOVE      R68 R67      ; R68 := R67
1077 [-]: LOADK     R69 K166     ; R69 := "  "
1078 [-]: GETGLOBAL R70 K23      ; R70 := mMovie
1079 [-]: SELF      R70 R70 K24  ; R71 := R70; R70 := R70["0x5DB0BD4"]
1080 [-]: LOADK     R72 K167     ; R72 := "<CONCLAVE>"
1081 [-]: MOVE      R73 R1       ; R73 := R1
1082 [-]: CALL      R70 4 2      ; R70 := R70(R71,R72,R73)
1083 [-]: GETUPVAL  R71 U0       ; R71 := U0
1084 [-]: GETTABLE  R71 R71 K165 ; R71 := R71["mConclaveMax"]
1085 [-]: CONCAT    R67 R68 R71  ; R67 := R68 .. R69 .. R70 .. R71
1086 [-]: MOVE      R68 R30      ; R68 := R30
1087 [-]: LOADK     R69 K168     ; R69 := "/Lotus/Language/Menu/MissionBoard_Level"
1088 [-]: MOVE      R70 R67      ; R70 := R67
1089 [-]: CALL      R68 3 1      ; R68(R69,R70)
1090 [-]: TEST      R17 0        ; if not R17 then PC := 1098
1091 [-]: JMP       1098         ; PC := 1098
1092 [-]: MOVE      R68 R30      ; R68 := R30
1093 [-]: LOADK     R69 K169     ; R69 := "/Lotus/Language/Menu/MissionBoard_Squads"
1094 [-]: GETGLOBAL R70 K0       ; R70 := 0x9FAED6BC
1095 [-]: MOVE      R71 R16      ; R71 := R16
1096 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
1097 [-]: CALL      R68 0 1      ; R68(R69,...)
1098 [-]: GETGLOBAL R68 K100     ; R68 := 0x400E7765
1099 [-]: GETUPVAL  R69 U0       ; R69 := U0
1100 [-]: GETTABLE  R69 R69 K57  ; R69 := R69["mMission"]
1101 [-]: GETTABLE  R69 R69 K170 ; R69 := R69["exclusiveWeapon"]
1102 [-]: CALL      R68 2 2      ; R68 := R68(R69)
1103 [-]: TEST      R68 1        ; if R68 then PC := 1147
1104 [-]: JMP       1147         ; PC := 1147
1105 [-]: GETGLOBAL R68 K11      ; R68 := 0xE6DC43B0
1106 [-]: GETGLOBAL R69 K0       ; R69 := 0x9FAED6BC
1107 [-]: GETGLOBAL R70 K171     ; R70 := 0x7C282057
1108 [-]: GETUPVAL  R71 U0       ; R71 := U0
1109 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1110 [-]: GETTABLE  R71 R71 K170 ; R71 := R71["exclusiveWeapon"]
1111 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1112 [-]: SELF      R70 R70 K172 ; R71 := R70; R70 := R70["0x616C74B6"]
1113 [-]: CALL      R70 2 0      ; R70,... := R70(R71)
1114 [-]: CALL      R69 0 2      ; R69 := R69(R70,...)
1115 [-]: MOVE      R70 R0       ; R70 := R0
1116 [-]: CALL      R68 3 2      ; R68 := R68(R69,R70)
1117 [-]: GETGLOBAL R69 K11      ; R69 := 0xE6DC43B0
1118 [-]: LOADK     R70 K173     ; R70 := "/Lotus/Language/Menu/Lobby_RestrictionDesc"
1119 [-]: NEWTABLE  R71 0 1      ; R71 := {}
1120 [-]: SETTABLE  R71 K174 R68 ; R71["ITEM"] := R68
1121 [-]: CALL      R69 3 2      ; R69 := R69(R70,R71)
1122 [-]: GETUPVAL  R70 U0       ; R70 := U0
1123 [-]: GETTABLE  R70 R70 K53  ; R70 := R70["mGoalInfo"]
1124 [-]: TEST      R70 0        ; if not R70 then PC := 1142
1125 [-]: JMP       1142         ; PC := 1142
1126 [-]: GETUPVAL  R70 U0       ; R70 := U0
1127 [-]: GETTABLE  R70 R70 K53  ; R70 := R70["mGoalInfo"]
1128 [-]: GETTABLE  R70 R70 K47  ; R70 := R70["mTag"]
1129 [-]: GETUPVAL  R71 U7       ; R71 := U7
1130 [-]: GETTABLE  R71 R71 K175 ; R71 := R71["MACHETE_MAYHEM"]
1131 [-]: EQ        0 R70 R71    ; if R70 ~= R71 then PC := 1142
1132 [-]: JMP       1142         ; PC := 1142
1133 [-]: GETGLOBAL R70 K11      ; R70 := 0xE6DC43B0
1134 [-]: LOADK     R71 K176     ; R71 := "/Lotus/Language/Menu/EnergyRestrictionDesc"
1135 [-]: NEWTABLE  R72 0 1      ; R72 := {}
1136 [-]: SETTABLE  R72 K177 K178; R72["AMOUNT"] := 25
1137 [-]: CALL      R70 3 2      ; R70 := R70(R71,R72)
1138 [-]: MOVE      R71 R69      ; R71 := R69
1139 [-]: LOADK     R72 K70      ; R72 := ", "
1140 [-]: MOVE      R73 R70      ; R73 := R70
1141 [-]: CONCAT    R69 R71 R73  ; R69 := R71 .. R72 .. R73
1142 [-]: MOVE      R71 R30      ; R71 := R30
1143 [-]: LOADK     R72 K179     ; R72 := "/Lotus/Language/Menu/Lobby_Restriction"
1144 [-]: MOVE      R73 R69      ; R73 := R69
1145 [-]: CALL      R71 3 1      ; R71(R72,R73)
1146 [-]: JMP       1255         ; PC := 1255
1147 [-]: GETGLOBAL R71 K100     ; R71 := 0x400E7765
1148 [-]: GETUPVAL  R72 U0       ; R72 := U0
1149 [-]: GETTABLE  R72 R72 K57  ; R72 := R72["mMission"]
1150 [-]: GETTABLE  R72 R72 K180 ; R72 := R72["miscItemFee"]
1151 [-]: GETTABLE  R72 R72 K181 ; R72 := R72["mItemType"]
1152 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1153 [-]: TEST      R71 1        ; if R71 then PC := 1255
1154 [-]: JMP       1255         ; PC := 1255
1155 [-]: EQ        0 R15 K22    ; if R15 ~= nil then PC := 1255
1156 [-]: JMP       1255         ; PC := 1255
1157 [-]: GETUPVAL  R71 U0       ; R71 := U0
1158 [-]: GETTABLE  R71 R71 K57  ; R71 := R71["mMission"]
1159 [-]: GETTABLE  R71 R71 K180 ; R71 := R71["miscItemFee"]
1160 [-]: GETTABLE  R71 R71 K181 ; R71 := R71["mItemType"]
1161 [-]: GETGLOBAL R72 K0       ; R72 := 0x9FAED6BC
1162 [-]: GETUPVAL  R73 U0       ; R73 := U0
1163 [-]: GETTABLE  R73 R73 K57  ; R73 := R73["mMission"]
1164 [-]: GETTABLE  R73 R73 K180 ; R73 := R73["miscItemFee"]
1165 [-]: GETTABLE  R73 R73 K181 ; R73 := R73["mItemType"]
1166 [-]: SELF      R73 R73 K182 ; R74 := R73; R73 := R73["0x1B252E3C"]
1167 [-]: CALL      R73 2 0      ; R73,... := R73(R74)
1168 [-]: CALL      R72 0 2      ; R72 := R72(R73,...)
1169 [-]: GETGLOBAL R73 K13      ; R73 := _T
1170 [-]: GETTABLE  R73 R73 K183 ; R73 := R73["OwnedFeeItems"]
1171 [-]: TEST      R73 1        ; if R73 then PC := 1176
1172 [-]: JMP       1176         ; PC := 1176
1173 [-]: GETGLOBAL R73 K13      ; R73 := _T
1174 [-]: NEWTABLE  R74 0 0      ; R74 := {}
1175 [-]: SETTABLE  R73 K183 R74 ; R73["OwnedFeeItems"] := R74
1176 [-]: GETGLOBAL R73 K13      ; R73 := _T
1177 [-]: GETTABLE  R73 R73 K183 ; R73 := R73["OwnedFeeItems"]
1178 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1179 [-]: TEST      R73 1        ; if R73 then PC := 1232
1180 [-]: JMP       1232         ; PC := 1232
1181 [-]: GETGLOBAL R73 K13      ; R73 := _T
1182 [-]: GETTABLE  R73 R73 K183 ; R73 := R73["OwnedFeeItems"]
1183 [-]: NEWTABLE  R74 0 0      ; R74 := {}
1184 [-]: SETTABLE  R73 R72 R74  ; R73[R72] := R74
1185 [-]: GETGLOBAL R73 K13      ; R73 := _T
1186 [-]: GETTABLE  R73 R73 K183 ; R73 := R73["OwnedFeeItems"]
1187 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1188 [-]: SETTABLE  R73 K184 K30 ; R73["Count"] := 0
1189 [-]: GETGLOBAL R73 K13      ; R73 := _T
1190 [-]: GETTABLE  R73 R73 K183 ; R73 := R73["OwnedFeeItems"]
1191 [-]: GETTABLE  R73 R73 R72  ; R73 := R73[R72]
1192 [-]: GETGLOBAL R74 K11      ; R74 := 0xE6DC43B0
1193 [-]: GETGLOBAL R75 K0       ; R75 := 0x9FAED6BC
1194 [-]: GETGLOBAL R76 K171     ; R76 := 0x7C282057
1195 [-]: MOVE      R77 R71      ; R77 := R71
1196 [-]: CALL      R76 2 2      ; R76 := R76(R77)
1197 [-]: SELF      R76 R76 K172 ; R77 := R76; R76 := R76["0x616C74B6"]
1198 [-]: CALL      R76 2 0      ; R76,... := R76(R77)
1199 [-]: CALL      R75 0 2      ; R75 := R75(R76,...)
1200 [-]: MOVE      R76 R0       ; R76 := R0
1201 [-]: CALL      R74 3 2      ; R74 := R74(R75,R76)
1202 [-]: SETTABLE  R73 K185 R74 ; R73["LocText"] := R74
1203 [-]: GETGLOBAL R73 K186     ; R73 := gPlayerProfileMgr
1204 [-]: SELF      R73 R73 K187 ; R74 := R73; R73 := R73["0x21EF7B1A"]
1205 [-]: LOADK     R75 K30      ; R75 := 0
1206 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1207 [-]: SELF      R73 R73 K188 ; R74 := R73; R73 := R73["0x654F1092"]
1208 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1209 [-]: SELF      R73 R73 K189 ; R74 := R73; R73 := R73["0x6F2E05FD"]
1210 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1211 [-]: SELF      R73 R73 K190 ; R74 := R73; R73 := R73["0x3329FBFF"]
1212 [-]: CALL      R73 2 2      ; R73 := R73(R74)
1213 [-]: LOADK     R74 K36      ; R74 := 1
1214 [-]: LEN       R75 R73      ; R75 := # R73
1215 [-]: LOADK     R76 K36      ; R76 := 1
1216 [-]: FORPREP   R74 1231     ; R74 -= R76; PC := 1231
1217 [-]: GETTABLE  R78 R73 R77  ; R78 := R73[R77]
1218 [-]: GETTABLE  R78 R78 K181 ; R78 := R78["mItemType"]
1219 [-]: SELF      R78 R78 K191 ; R79 := R78; R78 := R78["0x8B598ED4"]
1220 [-]: MOVE      R80 R71      ; R80 := R71
1221 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
1222 [-]: TEST      R78 0        ; if not R78 then PC := 1231
1223 [-]: JMP       1231         ; PC := 1231
1224 [-]: GETGLOBAL R78 K13      ; R78 := _T
1225 [-]: GETTABLE  R78 R78 K183 ; R78 := R78["OwnedFeeItems"]
1226 [-]: GETTABLE  R78 R78 R72  ; R78 := R78[R72]
1227 [-]: GETTABLE  R79 R73 R77  ; R79 := R73[R77]
1228 [-]: GETTABLE  R79 R79 K192 ; R79 := R79["mItemCount"]
1229 [-]: SETTABLE  R78 K184 R79 ; R78["Count"] := R79
1230 [-]: JMP       1232         ; PC := 1232
1231 [-]: FORLOOP   R74 1217     ; R74 += R76; if R74 <= R75 then begin PC := 1217; R77 := R74 end
1232 [-]: GETGLOBAL R78 K11      ; R78 := 0xE6DC43B0
1233 [-]: LOADK     R79 K193     ; R79 := "/Lotus/Language/Menu/Lobby_CountedItemRestrictionDesc"
1234 [-]: NEWTABLE  R80 0 3      ; R80 := {}
1235 [-]: GETGLOBAL R81 K13      ; R81 := _T
1236 [-]: GETTABLE  R81 R81 K183 ; R81 := R81["OwnedFeeItems"]
1237 [-]: GETTABLE  R81 R81 R72  ; R81 := R81[R72]
1238 [-]: GETTABLE  R81 R81 K185 ; R81 := R81["LocText"]
1239 [-]: SETTABLE  R80 K174 R81 ; R80["ITEM"] := R81
1240 [-]: GETUPVAL  R81 U0       ; R81 := U0
1241 [-]: GETTABLE  R81 R81 K57  ; R81 := R81["mMission"]
1242 [-]: GETTABLE  R81 R81 K180 ; R81 := R81["miscItemFee"]
1243 [-]: GETTABLE  R81 R81 K192 ; R81 := R81["mItemCount"]
1244 [-]: SETTABLE  R80 K194 R81 ; R80["COUNT"] := R81
1245 [-]: GETGLOBAL R81 K13      ; R81 := _T
1246 [-]: GETTABLE  R81 R81 K183 ; R81 := R81["OwnedFeeItems"]
1247 [-]: GETTABLE  R81 R81 R72  ; R81 := R81[R72]
1248 [-]: GETTABLE  R81 R81 K184 ; R81 := R81["Count"]
1249 [-]: SETTABLE  R80 K195 R81 ; R80["OWNED"] := R81
1250 [-]: CALL      R78 3 2      ; R78 := R78(R79,R80)
1251 [-]: MOVE      R79 R30      ; R79 := R30
1252 [-]: LOADK     R80 K8       ; R80 := ""
1253 [-]: MOVE      R81 R78      ; R81 := R78
1254 [-]: CALL      R79 3 1      ; R79(R80,R81)
1255 [-]: GETTABLE  R79 R2 K127  ; R79 := R2["missionType"]
1256 [-]: GETGLOBAL R80 K27      ; R80 := Lotus_Game
1257 [-]: GETTABLE  R80 R80 K196 ; R80 := R80["MT_ARENA"]
1258 [-]: EQ        0 R79 R80    ; if R79 ~= R80 then PC := 1310
1259 [-]: JMP       1310         ; PC := 1310
1260 [-]: GETTABLE  R79 R2 K90   ; R79 := R2["faction"]
1261 [-]: GETGLOBAL R80 K27      ; R80 := Lotus_Game
1262 [-]: GETTABLE  R80 R80 K197 ; R80 := R80["FC_CORPUS"]
1263 [-]: EQ        0 R79 R80    ; if R79 ~= R80 then PC := 1310
1264 [-]: JMP       1310         ; PC := 1310
1265 [-]: SELF      R79 R2 K198  ; R80 := R2; R79 := R2["0x62A99A22"]
1266 [-]: CALL      R79 2 2      ; R79 := R79(R80)
1267 [-]: LEN       R80 R79      ; R80 := # R79
1268 [-]: LT        0 K30 R80    ; if 0 >= R80 then PC := 1310
1269 [-]: JMP       1310         ; PC := 1310
1270 [-]: GETUPVAL  R80 U3       ; R80 := U3
1271 [-]: GETTABLE  R80 R80 K199 ; R80 := R80["0x7E197415"]
1272 [-]: GETTABLE  R81 R79 K36  ; R81 := R79[1]
1273 [-]: GETTABLE  R81 R81 K200 ; R81 := R81["mCreditsFee"]
1274 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1275 [-]: LOADK     R81 K30      ; R81 := 0
1276 [-]: GETGLOBAL R82 K100     ; R82 := 0x400E7765
1277 [-]: GETGLOBAL R83 K101     ; R83 := gGameData
1278 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1279 [-]: TEST      R82 1        ; if R82 then PC := 1288
1280 [-]: JMP       1288         ; PC := 1288
1281 [-]: GETUPVAL  R82 U3       ; R82 := U3
1282 [-]: GETTABLE  R82 R82 K201 ; R82 := R82["0x1C719E76"]
1283 [-]: GETGLOBAL R83 K101     ; R83 := gGameData
1284 [-]: SELF      R83 R83 K202 ; R84 := R83; R83 := R83["0xCD5A25A6"]
1285 [-]: CALL      R83 2 0      ; R83,... := R83(R84)
1286 [-]: CALL      R82 0 2      ; R82 := R82(R83,...)
1287 [-]: MOVE      R81 R82      ; R81 := R82
1288 [-]: GETGLOBAL R82 K23      ; R82 := mMovie
1289 [-]: SELF      R82 R82 K24  ; R83 := R82; R82 := R82["0x5DB0BD4"]
1290 [-]: LOADK     R84 K203     ; R84 := "/Lotus/Language/Menu/CreditsFormatted"
1291 [-]: MOVE      R85 R1       ; R85 := R1
1292 [-]: NEWTABLE  R86 0 1      ; R86 := {}
1293 [-]: SETTABLE  R86 K204 R80 ; R86["CREDITS"] := R80
1294 [-]: CALL      R82 5 2      ; R82 := R82(R83,R84,R85,R86)
1295 [-]: MOVE      R83 R30      ; R83 := R30
1296 [-]: LOADK     R84 K205     ; R84 := "/Lotus/Language/Menu/Lobby_GreedCreditsRequirementDesc"
1297 [-]: MOVE      R85 R82      ; R85 := R82
1298 [-]: CALL      R83 3 1      ; R83(R84,R85)
1299 [-]: GETGLOBAL R83 K23      ; R83 := mMovie
1300 [-]: SELF      R83 R83 K24  ; R84 := R83; R83 := R83["0x5DB0BD4"]
1301 [-]: LOADK     R85 K206     ; R85 := "/Lotus/Language/Menu/CreditsFormattedOwned"
1302 [-]: MOVE      R86 R1       ; R86 := R1
1303 [-]: NEWTABLE  R87 0 1      ; R87 := {}
1304 [-]: SETTABLE  R87 K195 R81 ; R87["OWNED"] := R81
1305 [-]: CALL      R83 5 2      ; R83 := R83(R84,R85,R86,R87)
1306 [-]: MOVE      R84 R30      ; R84 := R30
1307 [-]: LOADK     R85 K207     ; R85 := "/Lotus/Language/Menu/Lobby_GreedCreditsOwnedRequirementDesc"
1308 [-]: MOVE      R86 R83      ; R86 := R83
1309 [-]: CALL      R84 3 1      ; R84(R85,R86)
1310 [-]: GETGLOBAL R84 K27      ; R84 := Lotus_Game
1311 [-]: GETTABLE  R84 R84 K208 ; R84 := R84["NT_CLAN"]
1312 [-]: EQ        0 R7 R84     ; if R7 ~= R84 then PC := 1338
1313 [-]: JMP       1338         ; PC := 1338
1314 [-]: SELF      R84 R2 K209  ; R85 := R2; R84 := R2["0xC2648A91"]
1315 [-]: CALL      R84 2 2      ; R84 := R84(R85)
1316 [-]: GETGLOBAL R85 K100     ; R85 := 0x400E7765
1317 [-]: MOVE      R86 R84      ; R86 := R84
1318 [-]: CALL      R85 2 2      ; R85 := R85(R86)
1319 [-]: TEST      R85 1        ; if R85 then PC := 1338
1320 [-]: JMP       1338         ; PC := 1338
1321 [-]: LOADK     R85 K8       ; R85 := ""
1322 [-]: LOADK     R86 K36      ; R86 := 1
1323 [-]: LEN       R87 R84      ; R87 := # R84
1324 [-]: LOADK     R88 K36      ; R88 := 1
1325 [-]: FORPREP   R86 1333     ; R86 -= R88; PC := 1333
1326 [-]: MOVE      R90 R85      ; R90 := R85
1327 [-]: GETTABLE  R91 R84 R89  ; R91 := R84[R89]
1328 [-]: SELF      R91 R91 K210 ; R92 := R91; R91 := R91["0x2683916D"]
1329 [-]: MOVE      R93 R1       ; R93 := R1
1330 [-]: CALL      R91 3 2      ; R91 := R91(R92,R93)
1331 [-]: LOADK     R92 K113     ; R92 := "\r\n"
1332 [-]: CONCAT    R85 R90 R92  ; R85 := R90 .. R91 .. R92
1333 [-]: FORLOOP   R86 1326     ; R86 += R88; if R86 <= R87 then begin PC := 1326; R89 := R86 end
1334 [-]: MOVE      R90 R30      ; R90 := R30
1335 [-]: LOADK     R91 K211     ; R91 := "/Lotus/Language/Menu/BonusBounty"
1336 [-]: MOVE      R92 R85      ; R92 := R85
1337 [-]: CALL      R90 3 1      ; R90(R91,R92)
1338 [-]: EQ        1 R15 K22    ; if R15 == nil then PC := 1368
1339 [-]: JMP       1368         ; PC := 1368
1340 [-]: MOVE      R90 R30      ; R90 := R30
1341 [-]: LOADK     R91 K212     ; R91 := "/Lotus/Language/Menu/MissionBoard_InvasionStatus"
1342 [-]: MOVE      R92 R18      ; R92 := R18
1343 [-]: CALL      R90 3 1      ; R90(R91,R92)
1344 [-]: MOVE      R90 R19      ; R90 := R19
1345 [-]: LOADK     R91 K114     ; R91 := "/"
1346 [-]: MOVE      R92 R20      ; R92 := R20
1347 [-]: CONCAT    R90 R90 R92  ; R90 := R90 .. R91 .. R92
1348 [-]: TEST      R21 0        ; if not R21 then PC := 1360
1349 [-]: JMP       1360         ; PC := 1360
1350 [-]: TEST      R23 1        ; if R23 then PC := 1360
1351 [-]: JMP       1360         ; PC := 1360
1352 [-]: MOVE      R91 R90      ; R91 := R90
1353 [-]: LOADK     R92 K60      ; R92 := " "
1354 [-]: GETGLOBAL R93 K23      ; R93 := mMovie
1355 [-]: SELF      R93 R93 K24  ; R94 := R93; R93 := R93["0x5DB0BD4"]
1356 [-]: MOVE      R95 R22      ; R95 := R22
1357 [-]: MOVE      R96 R0       ; R96 := R0
1358 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1359 [-]: CONCAT    R90 R91 R93  ; R90 := R91 .. R92 .. R93
1360 [-]: MOVE      R91 R30      ; R91 := R30
1361 [-]: LOADK     R92 K213     ; R92 := "/Lotus/Language/Menu/MissionBoard_InvasionCompletions"
1362 [-]: MOVE      R93 R90      ; R93 := R90
1363 [-]: CALL      R91 3 1      ; R91(R92,R93)
1364 [-]: MOVE      R91 R30      ; R91 := R30
1365 [-]: LOADK     R92 K214     ; R92 := "/Lotus/Language/Menu/MissionBoard_InvasionPayment"
1366 [-]: MOVE      R93 R24      ; R93 := R24
1367 [-]: CALL      R91 3 1      ; R91(R92,R93)
1368 [-]: EQ        1 R26 K22    ; if R26 == nil then PC := 1374
1369 [-]: JMP       1374         ; PC := 1374
1370 [-]: MOVE      R91 R30      ; R91 := R30
1371 [-]: LOADK     R92 K118     ; R92 := "/Lotus/Language/Menu/Notification_Expiry_Heading"
1372 [-]: MOVE      R93 R26      ; R93 := R26
1373 [-]: CALL      R91 3 1      ; R91(R92,R93)
1374 [-]: EQ        1 R27 K22    ; if R27 == nil then PC := 1380
1375 [-]: JMP       1380         ; PC := 1380
1376 [-]: MOVE      R91 R30      ; R91 := R30
1377 [-]: LOADK     R92 K215     ; R92 := "/Lotus/Language/Menu/AlertPopup_Rewards"
1378 [-]: MOVE      R93 R27      ; R93 := R27
1379 [-]: CALL      R91 3 1      ; R91(R92,R93)
1380 [-]: EQ        1 R28 K22    ; if R28 == nil then PC := 1389
1381 [-]: JMP       1389         ; PC := 1389
1382 [-]: MOVE      R91 R30      ; R91 := R30
1383 [-]: LOADNIL   R92 R92      ; R92 := nil
1384 [-]: GETGLOBAL R93 K9       ; R93 := string
1385 [-]: GETTABLE  R93 R93 K10  ; R93 := R93["0x639C642A"]
1386 [-]: MOVE      R94 R28      ; R94 := R28
1387 [-]: CALL      R93 2 0      ; R93,... := R93(R94)
1388 [-]: CALL      R91 0 1      ; R91(R92,...)
1389 [-]: GETGLOBAL R91 K100     ; R91 := 0x400E7765
1390 [-]: GETTABLE  R92 R2 K216  ; R92 := R2["questReq"]
1391 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1392 [-]: TEST      R91 1        ; if R91 then PC := 1421
1393 [-]: JMP       1421         ; PC := 1421
1394 [-]: GETUPVAL  R91 U1       ; R91 := U1
1395 [-]: GETTABLE  R91 R91 K217 ; R91 := R91["0x2AAC7A8C"]
1396 [-]: GETTABLE  R92 R2 K216  ; R92 := R2["questReq"]
1397 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1398 [-]: TEST      R91 1        ; if R91 then PC := 1421
1399 [-]: JMP       1421         ; PC := 1421
1400 [-]: GETGLOBAL R91 K171     ; R91 := 0x7C282057
1401 [-]: GETTABLE  R92 R2 K216  ; R92 := R2["questReq"]
1402 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1403 [-]: GETGLOBAL R92 K23      ; R92 := mMovie
1404 [-]: SELF      R92 R92 K24  ; R93 := R92; R92 := R92["0x5DB0BD4"]
1405 [-]: GETGLOBAL R94 K0       ; R94 := 0x9FAED6BC
1406 [-]: SELF      R95 R91 K172 ; R96 := R91; R95 := R91["0x616C74B6"]
1407 [-]: CALL      R95 2 0      ; R95,... := R95(R96)
1408 [-]: CALL      R94 0 2      ; R94 := R94(R95,...)
1409 [-]: MOVE      R95 R0       ; R95 := R0
1410 [-]: CALL      R92 4 2      ; R92 := R92(R93,R94,R95)
1411 [-]: MOVE      R93 R30      ; R93 := R30
1412 [-]: LOADK     R94 K218     ; R94 := "/Lotus/Language/Menu/MissionLocked"
1413 [-]: GETGLOBAL R95 K23      ; R95 := mMovie
1414 [-]: SELF      R95 R95 K24  ; R96 := R95; R95 := R95["0x5DB0BD4"]
1415 [-]: LOADK     R97 K219     ; R97 := "/Lotus/Language/Game/MissionNodeQuestRequired"
1416 [-]: MOVE      R98 R0       ; R98 := R0
1417 [-]: NEWTABLE  R99 0 1      ; R99 := {}
1418 [-]: SETTABLE  R99 K220 R92 ; R99["QUESTNAME"] := R92
1419 [-]: CALL      R95 5 0      ; R95,... := R95(R96,R97,R98,R99)
1420 [-]: CALL      R93 0 1      ; R93(R94,...)
1421 [-]: MOVE      R93 R30      ; R93 := R30
1422 [-]: LOADNIL   R94 R94      ; R94 := nil
1423 [-]: LOADK     R95 K60      ; R95 := " "
1424 [-]: CALL      R93 3 1      ; R93(R94,R95)
1425 [-]: MOVE      R93 R30      ; R93 := R30
1426 [-]: LOADNIL   R94 R94      ; R94 := nil
1427 [-]: LOADK     R95 K60      ; R95 := " "
1428 [-]: CALL      R93 3 1      ; R93(R94,R95)
1429 [-]: MOVE      R93 R29      ; R93 := R29
1430 [-]: LOADK     R94 K221     ; R94 := "</p>"
1431 [-]: CONCAT    R29 R93 R94  ; R29 := R93 .. R94
1432 [-]: GETUPVAL  R93 U5       ; R93 := U5
1433 [-]: GETTABLE  R93 R93 K130 ; R93 := R93["UpdateTimer"]
1434 [-]: EQ        1 R93 K22    ; if R93 == nil then PC := 1443
1435 [-]: JMP       1443         ; PC := 1443
1436 [-]: GETUPVAL  R93 U5       ; R93 := U5
1437 [-]: GETGLOBAL R94 K9       ; R94 := string
1438 [-]: GETTABLE  R94 R94 K222 ; R94 := R94["0x7B782033"]
1439 [-]: MOVE      R95 R29      ; R95 := R29
1440 [-]: ADD       R96 R62 K36  ; R96 := R62 + 1
1441 [-]: CALL      R94 3 2      ; R94 := R94(R95,R96)
1442 [-]: SETTABLE  R93 K144 R94 ; R93["TimerPost"] := R94
1443 [-]: RETURN    R29 2        ; return R29
1444 [-]: RETURN    R0 1         ; return 


; Function #138.1:
;
; Name:            
; Defined at line: 6000
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K1        ; R3 := "<font color=\"#A9A9A9\">"
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x639C642A"]
  7 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
  8 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 13 [-]: LOADK     R5 K6        ; R5 := "  </font>"
 14 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K2        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC6772A8A"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := "<font color=\"#CACACA\"><b>"
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: LOADK     R5 K10       ; R5 := "</b><br></font>"
 28 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #138.2:
;
; Name:            
; Defined at line: 6010
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 16
  2 [-]: JMP       16           ; PC := 16
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: LOADK     R3 K1        ; R3 := "<font color=\"#A9A9A9\">"
  5 [-]: GETGLOBAL R4 K2        ; R4 := string
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["0x639C642A"]
  7 [-]: GETGLOBAL R5 K4        ; R5 := mMovie
  8 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5["0x5DB0BD4"]
  9 [-]: MOVE      R7 R0        ; R7 := R0
 10 [-]: MOVE      R8 R1        ; R8 := R1
 11 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 12 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 13 [-]: LOADK     R5 K6        ; R5 := "  </font>"
 14 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 17 [-]: JMP       30           ; PC := 30
 18 [-]: GETGLOBAL R2 K2        ; R2 := string
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["0xC6772A8A"]
 20 [-]: MOVE      R3 R1        ; R3 := R1
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LT        0 K8 R2      ; if 0 >= R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: LOADK     R3 K9        ; R3 := "<font color=\"#CACACA\"><b>"
 26 [-]: MOVE      R4 R1        ; R4 := R1
 27 [-]: LOADK     R5 K10       ; R5 := "</b> </font>"
 28 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 29 [-]: MOVE      R2 R0        ; R2 := R0
 30 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 6327
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x93B1256B
  2 [-]: LOADK     R3 K1        ; R3 := "OnEmblemReady("
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x9FAED6BC
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", "
  7 [-]: MOVE      R6 R1        ; R6 := R1
  8 [-]: LOADK     R7 K4        ; R7 := ")"
  9 [-]: CONCAT    R3 R3 R7     ; R3 := R3 .. R4 .. R5 .. R6 .. R7
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 36
 12 [-]: JMP       36           ; PC := 36
 13 [-]: GETGLOBAL R2 K5        ; R2 := 0x7C282057
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2["0x85A7A017"]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 36
 19 [-]: JMP       36           ; PC := 36
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 22 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: SETTABLE  R3 K8 R2     ; R3["clanIcon"] := R2
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: SETTABLE  R4 R1 K7     ; R4[R1] := nil
 27 [-]: GETUPVAL  R4 U1        ; R4 := U1
 28 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["Node"]
 29 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K10       ; R4 := mMovie
 32 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4["0x26581636"]
 33 [-]: LOADK     R6 K12       ; R6 := "InfoTip.EnemyIcon"
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 6345
; #Upvalues:       23
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2["0x6B7B470B"]
  9 [-]: LOADK     R4 K3        ; R4 := "_root"
 10 [-]: LOADK     R5 K4        ; R5 := "_xmouse"
 11 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 12 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
 14 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 15 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3["0x6B7B470B"]
 16 [-]: LOADK     R5 K3        ; R5 := "_root"
 17 [-]: LOADK     R6 K5        ; R6 := "_ymouse"
 18 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: LE        0 R1 K6      ; if R1 > -1000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: LE        0 R2 K6      ; if R2 > -1000 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R3 U2        ; R3 := U2
 26 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 27 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 81
 28 [-]: JMP       81           ; PC := 81
 29 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 30 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3["0x880196A7"]
 31 [-]: GETUPVAL  R5 U2        ; R5 := U2
 32 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 33 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["clipName"]
 34 [-]: LOADK     R6 K7        ; R6 := "Node"
 35 [-]: LOADK     R7 K11       ; R7 := "_color"
 36 [-]: GETGLOBAL R8 K12       ; R8 := _G
 37 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["UIColor_White"]
 38 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 39 [-]: GETGLOBAL R3 K1        ; R3 := mMovie
 40 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3["0x445651FB"]
 41 [-]: GETUPVAL  R5 U2        ; R5 := U2
 42 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["Node"]
 43 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["labelIndex"]
 44 [-]: LOADK     R6 K16       ; R6 := "_alpha"
 45 [-]: GETUPVAL  R7 U3        ; R7 := U3
 46 [-]: GETUPVAL  R8 U2        ; R8 := U2
 47 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["Node"]
 48 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U2        ; R3 := U2
 51 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 52 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["guildId"]
 53 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETUPVAL  R3 U2        ; R3 := U2
 56 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["Node"]
 57 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["clanTier"]
 58 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: MOVE      R3 R0        ; R3 := R0
 61 [-]: MOVE      R3 R1        ; R3 := R1
 62 [-]: TEST      R3 0         ; if not R3 then PC := 81
 63 [-]: JMP       81           ; PC := 81
 64 [-]: GETGLOBAL R4 K19       ; R4 := 0x52E17A90
 65 [-]: GETGLOBAL R5 K1        ; R5 := mMovie
 66 [-]: GETUPVAL  R6 U2        ; R6 := U2
 67 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
 68 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["clipName"]
 69 [-]: LOADK     R7 K20       ; R7 := ".Node.Container.Node"
 70 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 71 [-]: GETGLOBAL R7 K21       ; R7 := UISys
 72 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["FlashInstance_LINEAR"]
 73 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 74 [-]: LOADK     R9 K16       ; R9 := "_alpha"
 75 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 76 [-]: NEWTABLE  R9 1 0       ; R9 := {}
 77 [-]: LOADK     R10 K23      ; R10 := 0
 78 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
 79 [-]: LOADK     R10 K24      ; R10 := 0.25
 80 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 81 [-]: GETUPVAL  R4 U4        ; R4 := U4
 82 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 83 [-]: MOVE      R5 R0        ; R5 := R0
 84 [-]: GETUPVAL  R6 U5        ; R6 := U5
 85 [-]: EQ        0 R4 R6      ; if R4 ~= R6 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: MOVE      R5 R1        ; R5 := R1
 88 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
 89 [-]: MOVE      R7 R4        ; R7 := R4
 90 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 91 [-]: TEST      R6 1         ; if R6 then PC := 877
 92 [-]: JMP       877          ; PC := 877
 93 [-]: GETTABLE  R6 R4 K26    ; R6 := R4["forceHover"]
 94 [-]: TEST      R6 1         ; if R6 then PC := 114
 95 [-]: JMP       114          ; PC := 114
 96 [-]: GETTABLE  R6 R4 K27    ; R6 := R4["locked"]
 97 [-]: TEST      R6 0         ; if not R6 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETUPVAL  R6 U6        ; R6 := U6
100 [-]: GETUPVAL  R7 U7        ; R7 := U7
101 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["EDIT_NODES"]
102 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETUPVAL  R6 U6        ; R6 := U6
105 [-]: GETUPVAL  R7 U7        ; R7 := U7
106 [-]: GETTABLE  R7 R7 K29    ; R7 := R7["EDIT_EDGES"]
107 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: GETUPVAL  R6 U6        ; R6 := U6
110 [-]: GETUPVAL  R7 U7        ; R7 := U7
111 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["EDIT_NODE_DECOS"]
112 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 877
113 [-]: JMP       877          ; PC := 877
114 [-]: GETTABLE  R6 R4 K31    ; R6 := R4["locationEnabled"]
115 [-]: TEST      R6 0         ; if not R6 then PC := 877
116 [-]: JMP       877          ; PC := 877
117 [-]: GETUPVAL  R6 U2        ; R6 := U2
118 [-]: SETTABLE  R6 K7 R4     ; R6["Node"] := R4
119 [-]: GETGLOBAL R6 K25       ; R6 := 0x400E7765
120 [-]: GETUPVAL  R7 U2        ; R7 := U2
121 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
122 [-]: CALL      R6 2 2       ; R6 := R6(R7)
123 [-]: TEST      R6 0         ; if not R6 then PC := 126
124 [-]: JMP       126          ; PC := 126
125 [-]: RETURN    R0 1         ; return 
126 [-]: GETUPVAL  R6 U2        ; R6 := U2
127 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Node"]
128 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
129 [-]: GETTABLE  R6 R6 K33    ; R6 := R6["mission"]
130 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["missionType"]
131 [-]: GETGLOBAL R7 K35       ; R7 := Lotus_Game
132 [-]: GETTABLE  R7 R7 K36    ; R7 := R7["MT_ASSASSINATION"]
133 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 139
134 [-]: JMP       139          ; PC := 139
135 [-]: GETUPVAL  R6 U8        ; R6 := U8
136 [-]: GETUPVAL  R7 U2        ; R7 := U2
137 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["Node"]
138 [-]: CALL      R6 2 1       ; R6(R7)
139 [-]: TEST      R5 1         ; if R5 then PC := 146
140 [-]: JMP       146          ; PC := 146
141 [-]: GETUPVAL  R6 U9        ; R6 := U9
142 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["0x25992394"]
143 [-]: GETGLOBAL R7 K12       ; R7 := _G
144 [-]: GETTABLE  R7 R7 K38    ; R7 := R7["UISound_Focus"]
145 [-]: CALL      R6 2 1       ; R6(R7)
146 [-]: GETTABLE  R6 R4 K17    ; R6 := R4["guildId"]
147 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 152
148 [-]: JMP       152          ; PC := 152
149 [-]: GETTABLE  R6 R4 K18    ; R6 := R4["clanTier"]
150 [-]: EQ        0 R6 K8      ; if R6 ~= nil then PC := 153
151 [-]: JMP       153          ; PC := 153
152 [-]: MOVE      R6 R0        ; R6 := R0
153 [-]: MOVE      R6 R1        ; R6 := R1
154 [-]: TEST      R6 0         ; if not R6 then PC := 172
155 [-]: JMP       172          ; PC := 172
156 [-]: GETGLOBAL R7 K19       ; R7 := 0x52E17A90
157 [-]: GETGLOBAL R8 K1        ; R8 := mMovie
158 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
159 [-]: LOADK     R10 K20      ; R10 := ".Node.Container.Node"
160 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
161 [-]: GETGLOBAL R10 K21      ; R10 := UISys
162 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["FlashInstance_LINEAR"]
163 [-]: NEWTABLE  R11 1 0      ; R11 := {}
164 [-]: LOADK     R12 K16      ; R12 := "_alpha"
165 [-]: SETLIST   R11 1 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
166 [-]: NEWTABLE  R12 1 0      ; R12 := {}
167 [-]: LOADK     R13 K39      ; R13 := 35
168 [-]: SETLIST   R12 1 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
169 [-]: LOADK     R13 K24      ; R13 := 0.25
170 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
171 [-]: JMP       179          ; PC := 179
172 [-]: GETGLOBAL R7 K1        ; R7 := mMovie
173 [-]: SELF      R7 R7 K40    ; R8 := R7; R7 := R7["0x1C19D966"]
174 [-]: GETTABLE  R9 R4 K10    ; R9 := R4["clipName"]
175 [-]: LOADK     R10 K11      ; R10 := "_color"
176 [-]: GETGLOBAL R11 K12      ; R11 := _G
177 [-]: GETTABLE  R11 R11 K41  ; R11 := R11["UIColor_Yellow"]
178 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
179 [-]: GETTABLE  R7 R4 K42    ; R7 := R4["isJunction"]
180 [-]: TEST      R7 0         ; if not R7 then PC := 189
181 [-]: JMP       189          ; PC := 189
182 [-]: GETGLOBAL R7 K43       ; R7 := _T
183 [-]: SETTABLE  R7 K44 K8    ; R7["JunctionTasksRelayReconstruction"] := nil
184 [-]: GETUPVAL  R7 U10       ; R7 := U10
185 [-]: MOVE      R8 R4        ; R8 := R4
186 [-]: MOVE      R9 R5        ; R9 := R5
187 [-]: CALL      R7 3 1       ; R7(R8,R9)
188 [-]: JMP       877          ; PC := 877
189 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
190 [-]: TEST      R7 0         ; if not R7 then PC := 220
191 [-]: JMP       220          ; PC := 220
192 [-]: GETTABLE  R7 R4 K45    ; R7 := R4["reconstructionProgress"]
193 [-]: EQ        0 R7 K23     ; if R7 ~= 0 then PC := 220
194 [-]: JMP       220          ; PC := 220
195 [-]: GETTABLE  R7 R4 K46    ; R7 := R4["name"]
196 [-]: SELF      R7 R7 K47    ; R8 := R7; R7 := R7["0x5EC7A3D2"]
197 [-]: CALL      R7 2 2       ; R7 := R7(R8)
198 [-]: GETGLOBAL R8 K48       ; R8 := string
199 [-]: GETTABLE  R8 R8 K49    ; R8 := R8["0x7B782033"]
200 [-]: MOVE      R9 R7        ; R9 := R7
201 [-]: LOADK     R10 K50      ; R10 := 1
202 [-]: GETGLOBAL R11 K48      ; R11 := string
203 [-]: GETTABLE  R11 R11 K51  ; R11 := R11["0xDE44F664"]
204 [-]: MOVE      R12 R7       ; R12 := R7
205 [-]: LOADK     R13 K52      ; R13 := "Rebuild"
206 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
207 [-]: SUB       R11 R11 K50  ; R11 := R11 - 1
208 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
209 [-]: MOVE      R7 R8        ; R7 := R8
210 [-]: GETGLOBAL R8 K43       ; R8 := _T
211 [-]: GETUPVAL  R9 U11       ; R9 := U11
212 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
213 [-]: GETTABLE  R9 R9 K53    ; R9 := R9["info"]
214 [-]: SETTABLE  R8 K44 R9    ; R8["JunctionTasksRelayReconstruction"] := R9
215 [-]: GETUPVAL  R8 U10       ; R8 := U10
216 [-]: MOVE      R9 R4        ; R9 := R4
217 [-]: MOVE      R10 R5       ; R10 := R5
218 [-]: CALL      R8 3 1       ; R8(R9,R10)
219 [-]: JMP       877          ; PC := 877
220 [-]: GETUPVAL  R8 U6        ; R8 := U6
221 [-]: GETUPVAL  R9 U7        ; R9 := U7
222 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["EDIT_NODE_DECOS"]
223 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 877
224 [-]: JMP       877          ; PC := 877
225 [-]: GETUPVAL  R8 U12       ; R8 := U12
226 [-]: TEST      R8 0         ; if not R8 then PC := 877
227 [-]: JMP       877          ; PC := 877
228 [-]: GETTABLE  R8 R4 K26    ; R8 := R4["forceHover"]
229 [-]: TEST      R8 1         ; if R8 then PC := 234
230 [-]: JMP       234          ; PC := 234
231 [-]: GETTABLE  R8 R4 K27    ; R8 := R4["locked"]
232 [-]: TEST      R8 1         ; if R8 then PC := 877
233 [-]: JMP       877          ; PC := 877
234 [-]: GETTABLE  R8 R4 K54    ; R8 := R4["isShortcut"]
235 [-]: TEST      R8 1         ; if R8 then PC := 877
236 [-]: JMP       877          ; PC := 877
237 [-]: GETUPVAL  R8 U13       ; R8 := U13
238 [-]: SELF      R8 R8 K55    ; R9 := R8; R8 := R8["0xDF213CE1"]
239 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
240 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
241 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
242 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mission"]
243 [-]: GETTABLE  R8 R8 K56    ; R8 := R8["faction"]
244 [-]: GETGLOBAL R9 K57       ; R9 := 0x9FAED6BC
245 [-]: GETTABLE  R10 R4 K32   ; R10 := R4["radialSector"]
246 [-]: GETTABLE  R10 R10 K46  ; R10 := R10["name"]
247 [-]: CALL      R9 2 2       ; R9 := R9(R10)
248 [-]: LOADNIL   R10 R10      ; R10 := nil
249 [-]: GETTABLE  R11 R4 K58   ; R11 := R4["displayMissionOverride"]
250 [-]: EQ        1 R11 K8     ; if R11 == nil then PC := 254
251 [-]: JMP       254          ; PC := 254
252 [-]: GETTABLE  R10 R4 K58   ; R10 := R4["displayMissionOverride"]
253 [-]: JMP       272          ; PC := 272
254 [-]: GETGLOBAL R11 K25      ; R11 := 0x400E7765
255 [-]: GETTABLE  R12 R4 K32   ; R12 := R4["radialSector"]
256 [-]: GETTABLE  R12 R12 K33  ; R12 := R12["mission"]
257 [-]: GETTABLE  R12 R12 K59  ; R12 := R12["levelKeyName"]
258 [-]: CALL      R11 2 2      ; R11 := R11(R12)
259 [-]: TEST      R11 1        ; if R11 then PC := 264
260 [-]: JMP       264          ; PC := 264
261 [-]: GETTABLE  R11 R4 K32   ; R11 := R4["radialSector"]
262 [-]: GETTABLE  R10 R11 K33  ; R10 := R11["mission"]
263 [-]: JMP       272          ; PC := 272
264 [-]: GETUPVAL  R11 U14      ; R11 := U14
265 [-]: GETTABLE  R11 R11 K60  ; R11 := R11["0xBB3AACF2"]
266 [-]: CALL      R11 1 2      ; R11 := R11()
267 [-]: SELF      R11 R11 K61  ; R12 := R11; R11 := R11["0x4B93F65B"]
268 [-]: GETTABLE  R13 R4 K32   ; R13 := R4["radialSector"]
269 [-]: GETTABLE  R13 R13 K46  ; R13 := R13["name"]
270 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
271 [-]: MOVE      R10 R11      ; R10 := R11
272 [-]: MOVE      R11 R0       ; R11 := R0
273 [-]: GETGLOBAL R12 K43      ; R12 := _T
274 [-]: GETTABLE  R12 R12 K62  ; R12 := R12["CachedInvasionInfo"]
275 [-]: GETTABLE  R12 R12 R9   ; R12 := R12[R9]
276 [-]: EQ        0 R12 K8     ; if R12 ~= nil then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: MOVE      R12 R0       ; R12 := R0
279 [-]: MOVE      R12 R1       ; R12 := R1
280 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
281 [-]: GETTABLE  R14 R4 K58   ; R14 := R4["displayMissionOverride"]
282 [-]: CALL      R13 2 2      ; R13 := R13(R14)
283 [-]: TEST      R13 0        ; if not R13 then PC := 294
284 [-]: JMP       294          ; PC := 294
285 [-]: GETTABLE  R13 R10 K56  ; R13 := R10["faction"]
286 [-]: EQ        1 R8 R13     ; if R8 == R13 then PC := 292
287 [-]: JMP       292          ; PC := 292
288 [-]: GETGLOBAL R13 K25      ; R13 := 0x400E7765
289 [-]: GETTABLE  R14 R10 K59  ; R14 := R10["levelKeyName"]
290 [-]: CALL      R13 2 2      ; R13 := R13(R14)
291 [-]: JMP       294          ; PC := 294
292 [-]: MOVE      R13 R0       ; R13 := R0
293 [-]: MOVE      R13 R1       ; R13 := R1
294 [-]: GETGLOBAL R14 K43      ; R14 := _T
295 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
296 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
297 [-]: EQ        1 R14 K8     ; if R14 == nil then PC := 320
298 [-]: JMP       320          ; PC := 320
299 [-]: GETGLOBAL R14 K43      ; R14 := _T
300 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
301 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
302 [-]: GETTABLE  R14 R14 K64  ; R14 := R14["mUnlocked"]
303 [-]: TEST      R14 0        ; if not R14 then PC := 322
304 [-]: JMP       322          ; PC := 322
305 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
306 [-]: GETGLOBAL R15 K12      ; R15 := _G
307 [-]: GETTABLE  R15 R15 K66  ; R15 := R15["UITextures_GhostTower"]
308 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 315
309 [-]: JMP       315          ; PC := 315
310 [-]: GETTABLE  R14 R4 K65   ; R14 := R4["icon"]
311 [-]: GETGLOBAL R15 K12      ; R15 := _G
312 [-]: GETTABLE  R15 R15 K67  ; R15 := R15["UITextures_GhostTowerVariant"]
313 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 320
314 [-]: JMP       320          ; PC := 320
315 [-]: GETGLOBAL R14 K43      ; R14 := _T
316 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["CachedGhostTowerMissions"]
317 [-]: GETTABLE  R14 R14 R9   ; R14 := R14[R9]
318 [-]: GETTABLE  R14 R14 K68  ; R14 := R14["mShowInStarChart"]
319 [-]: JMP       322          ; PC := 322
320 [-]: MOVE      R14 R0       ; R14 := R0
321 [-]: MOVE      R14 R1       ; R14 := R1
322 [-]: TEST      R14 1        ; if R14 then PC := 351
323 [-]: JMP       351          ; PC := 351
324 [-]: GETGLOBAL R15 K43      ; R15 := _T
325 [-]: GETTABLE  R15 R15 K69  ; R15 := R15["CachedSkullNodes"]
326 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
327 [-]: TEST      R15 1        ; if R15 then PC := 342
328 [-]: JMP       342          ; PC := 342
329 [-]: GETGLOBAL R15 K43      ; R15 := _T
330 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
331 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
332 [-]: TEST      R15 0        ; if not R15 then PC := 353
333 [-]: JMP       353          ; PC := 353
334 [-]: GETGLOBAL R15 K43      ; R15 := _T
335 [-]: GETTABLE  R15 R15 K70  ; R15 := R15["CachedAlerts"]
336 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
337 [-]: GETTABLE  R15 R15 K71  ; R15 := R15["mAlertInfo"]
338 [-]: GETTABLE  R15 R15 K72  ; R15 := R15["mMissionInfo"]
339 [-]: GETTABLE  R15 R15 K73  ; R15 := R15["nightmare"]
340 [-]: TEST      R15 0        ; if not R15 then PC := 353
341 [-]: JMP       353          ; PC := 353
342 [-]: GETUPVAL  R15 U15      ; R15 := U15
343 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
344 [-]: TEST      R15 0        ; if not R15 then PC := 352
345 [-]: JMP       352          ; PC := 352
346 [-]: GETUPVAL  R15 U15      ; R15 := U15
347 [-]: GETTABLE  R15 R15 R9   ; R15 := R15[R9]
348 [-]: GETTABLE  R15 R15 K74  ; R15 := R15["IsQuest"]
349 [-]: MOVE      R15 R15      ; R15 := R15
350 [-]: JMP       353          ; PC := 353
351 [-]: MOVE      R15 R0       ; R15 := R0
352 [-]: MOVE      R15 R1       ; R15 := R1
353 [-]: GETGLOBAL R16 K43      ; R16 := _T
354 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
355 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
356 [-]: EQ        1 R16 K8     ; if R16 == nil then PC := 369
357 [-]: JMP       369          ; PC := 369
358 [-]: GETGLOBAL R16 K43      ; R16 := _T
359 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
360 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
361 [-]: GETTABLE  R16 R16 K64  ; R16 := R16["mUnlocked"]
362 [-]: TEST      R16 0        ; if not R16 then PC := 371
363 [-]: JMP       371          ; PC := 371
364 [-]: GETGLOBAL R16 K43      ; R16 := _T
365 [-]: GETTABLE  R16 R16 K75  ; R16 := R16["CachedEliteAlertMissions"]
366 [-]: GETTABLE  R16 R16 R9   ; R16 := R16[R9]
367 [-]: GETTABLE  R16 R16 K68  ; R16 := R16["mShowInStarChart"]
368 [-]: JMP       371          ; PC := 371
369 [-]: MOVE      R16 R0       ; R16 := R0
370 [-]: MOVE      R16 R1       ; R16 := R1
371 [-]: GETGLOBAL R17 K43      ; R17 := _T
372 [-]: GETTABLE  R17 R17 K76  ; R17 := R17["CachedNemesisMissions"]
373 [-]: GETTABLE  R17 R17 R9   ; R17 := R17[R9]
374 [-]: EQ        0 R17 K8     ; if R17 ~= nil then PC := 377
375 [-]: JMP       377          ; PC := 377
376 [-]: MOVE      R17 R0       ; R17 := R0
377 [-]: MOVE      R17 R1       ; R17 := R1
378 [-]: GETGLOBAL R18 K12      ; R18 := _G
379 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["CachedGoalInfo"]
380 [-]: TEST      R18 0        ; if not R18 then PC := 420
381 [-]: JMP       420          ; PC := 420
382 [-]: GETGLOBAL R18 K12      ; R18 := _G
383 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["CachedGoalInfo"]
384 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
385 [-]: TEST      R18 0        ; if not R18 then PC := 420
386 [-]: JMP       420          ; PC := 420
387 [-]: GETGLOBAL R18 K12      ; R18 := _G
388 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["CachedGoalInfo"]
389 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
390 [-]: GETTABLE  R18 R18 K78  ; R18 := R18["mRelayReconstruction"]
391 [-]: TEST      R18 0        ; if not R18 then PC := 396
392 [-]: JMP       396          ; PC := 396
393 [-]: GETTABLE  R18 R4 K45   ; R18 := R4["reconstructionProgress"]
394 [-]: EQ        0 R18 K50    ; if R18 ~= 1 then PC := 420
395 [-]: JMP       420          ; PC := 420
396 [-]: GETGLOBAL R18 K12      ; R18 := _G
397 [-]: GETTABLE  R18 R18 K77  ; R18 := R18["CachedGoalInfo"]
398 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
399 [-]: GETTABLE  R10 R18 K72  ; R10 := R18["mMissionInfo"]
400 [-]: GETGLOBAL R18 K43      ; R18 := _T
401 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
402 [-]: TEST      R18 0        ; if not R18 then PC := 415
403 [-]: JMP       415          ; PC := 415
404 [-]: GETGLOBAL R18 K43      ; R18 := _T
405 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
406 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
407 [-]: TEST      R18 0        ; if not R18 then PC := 415
408 [-]: JMP       415          ; PC := 415
409 [-]: GETGLOBAL R18 K43      ; R18 := _T
410 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
411 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
412 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0xF1A9732E"]
413 [-]: CALL      R18 2 2      ; R18 := R18(R19)
414 [-]: SETTABLE  R10 K65 R18  ; R10["icon"] := R18
415 [-]: GETGLOBAL R18 K25      ; R18 := 0x400E7765
416 [-]: GETTABLE  R19 R10 K65  ; R19 := R10["icon"]
417 [-]: CALL      R18 2 2      ; R18 := R18(R19)
418 [-]: MOVE      R11 R18      ; R11 := R18
419 [-]: JMP       451          ; PC := 451
420 [-]: GETGLOBAL R18 K43      ; R18 := _T
421 [-]: GETTABLE  R18 R18 K81  ; R18 := R18["LockedGoalMissionInfo"]
422 [-]: TEST      R18 0        ; if not R18 then PC := 451
423 [-]: JMP       451          ; PC := 451
424 [-]: GETGLOBAL R18 K43      ; R18 := _T
425 [-]: GETTABLE  R18 R18 K81  ; R18 := R18["LockedGoalMissionInfo"]
426 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
427 [-]: TEST      R18 0        ; if not R18 then PC := 451
428 [-]: JMP       451          ; PC := 451
429 [-]: GETGLOBAL R18 K43      ; R18 := _T
430 [-]: GETTABLE  R18 R18 K81  ; R18 := R18["LockedGoalMissionInfo"]
431 [-]: GETTABLE  R10 R18 R9   ; R10 := R18[R9]
432 [-]: GETGLOBAL R18 K43      ; R18 := _T
433 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
434 [-]: TEST      R18 0        ; if not R18 then PC := 447
435 [-]: JMP       447          ; PC := 447
436 [-]: GETGLOBAL R18 K43      ; R18 := _T
437 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
438 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
439 [-]: TEST      R18 0        ; if not R18 then PC := 447
440 [-]: JMP       447          ; PC := 447
441 [-]: GETGLOBAL R18 K43      ; R18 := _T
442 [-]: GETTABLE  R18 R18 K79  ; R18 := R18["CachedGoalKeys"]
443 [-]: GETTABLE  R18 R18 R9   ; R18 := R18[R9]
444 [-]: SELF      R18 R18 K80  ; R19 := R18; R18 := R18["0xF1A9732E"]
445 [-]: CALL      R18 2 2      ; R18 := R18(R19)
446 [-]: SETTABLE  R10 K65 R18  ; R10["icon"] := R18
447 [-]: GETGLOBAL R18 K25      ; R18 := 0x400E7765
448 [-]: GETTABLE  R19 R10 K65  ; R19 := R10["icon"]
449 [-]: CALL      R18 2 2      ; R18 := R18(R19)
450 [-]: MOVE      R11 R18      ; R11 := R18
451 [-]: GETTABLE  R18 R4 K82   ; R18 := R4["locName"]
452 [-]: TEST      R15 0        ; if not R15 then PC := 462
453 [-]: JMP       462          ; PC := 462
454 [-]: GETGLOBAL R19 K83      ; R19 := 0xE6DC43B0
455 [-]: LOADK     R20 K84      ; R20 := "/Lotus/Language/Menu/NightmareModeName"
456 [-]: LOADNIL   R21 R21      ; R21 := nil
457 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
458 [-]: LOADK     R20 K85      ; R20 := ": "
459 [-]: MOVE      R21 R18      ; R21 := R18
460 [-]: CONCAT    R18 R19 R21  ; R18 := R19 .. R20 .. R21
461 [-]: JMP       472          ; PC := 472
462 [-]: TEST      R6 0         ; if not R6 then PC := 472
463 [-]: JMP       472          ; PC := 472
464 [-]: GETGLOBAL R19 K48      ; R19 := string
465 [-]: GETTABLE  R19 R19 K86  ; R19 := R19["0x639C642A"]
466 [-]: GETGLOBAL R20 K83      ; R20 := 0xE6DC43B0
467 [-]: LOADK     R21 K87      ; R21 := "/Lotus/Language/Dojo/FeaturedDojo"
468 [-]: LOADNIL   R22 R22      ; R22 := nil
469 [-]: CALL      R20 3 0      ; R20,... := R20(R21,R22)
470 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
471 [-]: MOVE      R18 R19      ; R18 := R19
472 [-]: GETUPVAL  R19 U16      ; R19 := U16
473 [-]: MOVE      R20 R4       ; R20 := R4
474 [-]: LOADNIL   R21 R21      ; R21 := nil
475 [-]: MOVE      R22 R10      ; R22 := R10
476 [-]: MOVE      R23 R15      ; R23 := R15
477 [-]: MOVE      R24 R13      ; R24 := R13
478 [-]: CALL      R19 6 2      ; R19 := R19(R20,R21,R22,R23,R24)
479 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
480 [-]: SELF      R20 R20 K40  ; R21 := R20; R20 := R20["0x1C19D966"]
481 [-]: LOADK     R22 K88      ; R22 := "InfoTip.NodeName"
482 [-]: LOADK     R23 K89      ; R23 := "verticalAlignment"
483 [-]: LOADK     R24 K90      ; R24 := "bottom"
484 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
485 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
486 [-]: SELF      R20 R20 K40  ; R21 := R20; R20 := R20["0x1C19D966"]
487 [-]: LOADK     R22 K88      ; R22 := "InfoTip.NodeName"
488 [-]: LOADK     R23 K91      ; R23 := "text"
489 [-]: MOVE      R24 R18      ; R24 := R18
490 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
491 [-]: GETGLOBAL R20 K1       ; R20 := mMovie
492 [-]: SELF      R20 R20 K40  ; R21 := R20; R20 := R20["0x1C19D966"]
493 [-]: LOADK     R22 K92      ; R22 := "InfoTip.Label"
494 [-]: LOADK     R23 K91      ; R23 := "text"
495 [-]: MOVE      R24 R19      ; R24 := R19
496 [-]: CALL      R20 5 1      ; R20(R21,R22,R23,R24)
497 [-]: GETUPVAL  R20 U17      ; R20 := U17
498 [-]: GETGLOBAL R21 K0       ; R21 := 0xF595ADDE
499 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
500 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x6B7B470B"]
501 [-]: LOADK     R24 K94      ; R24 := "InfoTip.Bg"
502 [-]: LOADK     R25 K95      ; R25 := "_width"
503 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
504 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
505 [-]: SETTABLE  R20 K93 R21  ; R20["BgWidth"] := R21
506 [-]: GETUPVAL  R20 U17      ; R20 := U17
507 [-]: GETGLOBAL R21 K0       ; R21 := 0xF595ADDE
508 [-]: GETGLOBAL R22 K1       ; R22 := mMovie
509 [-]: SELF      R22 R22 K2   ; R23 := R22; R22 := R22["0x6B7B470B"]
510 [-]: LOADK     R24 K92      ; R24 := "InfoTip.Label"
511 [-]: LOADK     R25 K97      ; R25 := "textHeight"
512 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
513 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
514 [-]: SUB       R21 R21 K98  ; R21 := R21 - 10
515 [-]: SETTABLE  R20 K96 R21  ; R20["BgHeight"] := R21
516 [-]: GETGLOBAL R20 K19      ; R20 := 0x52E17A90
517 [-]: GETGLOBAL R21 K1       ; R21 := mMovie
518 [-]: LOADK     R22 K99      ; R22 := "InfoTip"
519 [-]: GETGLOBAL R23 K21      ; R23 := UISys
520 [-]: GETTABLE  R23 R23 K22  ; R23 := R23["FlashInstance_LINEAR"]
521 [-]: NEWTABLE  R24 1 0      ; R24 := {}
522 [-]: LOADK     R25 K16      ; R25 := "_alpha"
523 [-]: SETLIST   R24 1 1      ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 1
524 [-]: NEWTABLE  R25 1 0      ; R25 := {}
525 [-]: LOADK     R26 K100     ; R26 := 100
526 [-]: SETLIST   R25 1 1      ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 1
527 [-]: LOADK     R26 K101     ; R26 := 0.20000000298023
528 [-]: CALL      R20 7 1      ; R20(R21,R22,R23,R24,R25,R26)
529 [-]: GETGLOBAL R20 K102     ; R20 := math
530 [-]: GETTABLE  R20 R20 K103 ; R20 := R20["0x1DD19CC9"]
531 [-]: MUL       R21 R0 K104  ; R21 := R0 * 67443
532 [-]: CALL      R20 2 1      ; R20(R21)
533 [-]: LOADNIL   R20 R20      ; R20 := nil
534 [-]: TEST      R16 0        ; if not R16 then PC := 539
535 [-]: JMP       539          ; PC := 539
536 [-]: GETGLOBAL R21 K12      ; R21 := _G
537 [-]: GETTABLE  R20 R21 K105 ; R20 := R21["UITexture_EliteAlert"]
538 [-]: JMP       655          ; PC := 655
539 [-]: TEST      R15 0        ; if not R15 then PC := 544
540 [-]: JMP       544          ; PC := 544
541 [-]: GETGLOBAL R21 K12      ; R21 := _G
542 [-]: GETTABLE  R20 R21 K106 ; R20 := R21["UITexture_SkullLarge"]
543 [-]: JMP       655          ; PC := 655
544 [-]: TEST      R14 0        ; if not R14 then PC := 548
545 [-]: JMP       548          ; PC := 548
546 [-]: GETTABLE  R20 R4 K65   ; R20 := R4["icon"]
547 [-]: JMP       655          ; PC := 655
548 [-]: TEST      R6 0         ; if not R6 then PC := 580
549 [-]: JMP       580          ; PC := 580
550 [-]: GETTABLE  R21 R4 K107  ; R21 := R4["clanIcon"]
551 [-]: EQ        1 R21 K8     ; if R21 == nil then PC := 555
552 [-]: JMP       555          ; PC := 555
553 [-]: GETTABLE  R20 R4 K107  ; R20 := R4["clanIcon"]
554 [-]: JMP       655          ; PC := 655
555 [-]: GETGLOBAL R21 K12      ; R21 := _G
556 [-]: GETTABLE  R20 R21 K108 ; R20 := R21["UITexture_DefaultClan"]
557 [-]: GETUPVAL  R21 U9       ; R21 := U9
558 [-]: GETTABLE  R21 R21 K109 ; R21 := R21["0x36BA5F48"]
559 [-]: CALL      R21 1 2      ; R21 := R21()
560 [-]: TEST      R21 1        ; if R21 then PC := 655
561 [-]: JMP       655          ; PC := 655
562 [-]: GETUPVAL  R21 U14      ; R21 := U14
563 [-]: GETTABLE  R21 R21 K110 ; R21 := R21["0x71ACF9C"]
564 [-]: GETTABLE  R22 R4 K17   ; R22 := R4["guildId"]
565 [-]: CALL      R21 2 2      ; R21 := R21(R22)
566 [-]: EQ        1 R21 K8     ; if R21 == nil then PC := 655
567 [-]: JMP       655          ; PC := 655
568 [-]: GETUPVAL  R22 U18      ; R22 := U18
569 [-]: GETTABLE  R22 R22 R21  ; R22 := R22[R21]
570 [-]: EQ        0 R22 K8     ; if R22 ~= nil then PC := 655
571 [-]: JMP       655          ; PC := 655
572 [-]: GETUPVAL  R22 U18      ; R22 := U18
573 [-]: SETTABLE  R22 R21 R4   ; R22[R21] := R4
574 [-]: GETGLOBAL R22 K111     ; R22 := gGameRules
575 [-]: SELF      R22 R22 K112 ; R23 := R22; R22 := R22["0x4A57F63D"]
576 [-]: MOVE      R24 R21      ; R24 := R21
577 [-]: LOADK     R25 K113     ; R25 := "OnEmblemReady"
578 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
579 [-]: JMP       655          ; PC := 655
580 [-]: GETGLOBAL R22 K25      ; R22 := 0x400E7765
581 [-]: MOVE      R23 R10      ; R23 := R10
582 [-]: CALL      R22 2 2      ; R22 := R22(R23)
583 [-]: TEST      R22 1        ; if R22 then PC := 655
584 [-]: JMP       655          ; PC := 655
585 [-]: LOADNIL   R22 R22      ; R22 := nil
586 [-]: TEST      R12 0        ; if not R12 then PC := 596
587 [-]: JMP       596          ; PC := 596
588 [-]: GETGLOBAL R23 K43      ; R23 := _T
589 [-]: GETTABLE  R23 R23 K62  ; R23 := R23["CachedInvasionInfo"]
590 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
591 [-]: GETTABLE  R23 R23 K114 ; R23 := R23["mAttackerMissionInfo"]
592 [-]: SELF      R23 R23 K115 ; R24 := R23; R23 := R23["0x70C51B59"]
593 [-]: CALL      R23 2 2      ; R23 := R23(R24)
594 [-]: MOVE      R22 R23      ; R22 := R23
595 [-]: JMP       633          ; PC := 633
596 [-]: GETGLOBAL R23 K25      ; R23 := 0x400E7765
597 [-]: GETTABLE  R24 R10 K116 ; R24 := R10["vipAgent"]
598 [-]: CALL      R23 2 2      ; R23 := R23(R24)
599 [-]: TEST      R23 1        ; if R23 then PC := 630
600 [-]: JMP       630          ; PC := 630
601 [-]: GETGLOBAL R23 K117     ; R23 := 0x63B09107
602 [-]: GETUPVAL  R24 U19      ; R24 := U19
603 [-]: CALL      R23 2 4      ; R23,R24,R25 := R23(R24)
604 [-]: JMP       616          ; PC := 616
605 [-]: GETTABLE  R28 R27 K118 ; R28 := R27["StarChartAgent"]
606 [-]: GETTABLE  R29 R10 K116 ; R29 := R10["vipAgent"]
607 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 616
608 [-]: JMP       616          ; PC := 616
609 [-]: GETGLOBAL R28 K25      ; R28 := 0x400E7765
610 [-]: GETTABLE  R29 R27 K119 ; R29 := R27["StarChartImage"]
611 [-]: CALL      R28 2 2      ; R28 := R28(R29)
612 [-]: TEST      R28 1        ; if R28 then PC := 618
613 [-]: JMP       618          ; PC := 618
614 [-]: GETTABLE  R20 R27 K119 ; R20 := R27["StarChartImage"]
615 [-]: JMP       618          ; PC := 618
616 [-]: TFORLOOP  R23 2        ; R26,R27 :=  R23(R24,R25); if R26 ~= nil then begin PC = 605; R25 := R26 end
617 [-]: JMP       605          ; PC := 605
618 [-]: GETGLOBAL R28 K25      ; R28 := 0x400E7765
619 [-]: MOVE      R29 R20      ; R29 := R20
620 [-]: CALL      R28 2 2      ; R28 := R28(R29)
621 [-]: TEST      R28 0        ; if not R28 then PC := 633
622 [-]: JMP       633          ; PC := 633
623 [-]: NEWTABLE  R28 1 0      ; R28 := {}
624 [-]: NEWTABLE  R29 0 1      ; R29 := {}
625 [-]: GETTABLE  R30 R10 K116 ; R30 := R10["vipAgent"]
626 [-]: SETTABLE  R29 K120 R30 ; R29["agent"] := R30
627 [-]: SETLIST   R28 1 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
628 [-]: MOVE      R22 R28      ; R22 := R28
629 [-]: JMP       633          ; PC := 633
630 [-]: SELF      R28 R10 K115 ; R29 := R10; R28 := R10["0x70C51B59"]
631 [-]: CALL      R28 2 2      ; R28 := R28(R29)
632 [-]: MOVE      R22 R28      ; R22 := R28
633 [-]: LEN       R28 R22      ; R28 := # R22
634 [-]: LT        0 K23 R28    ; if 0 >= R28 then PC := 655
635 [-]: JMP       655          ; PC := 655
636 [-]: GETGLOBAL R28 K102     ; R28 := math
637 [-]: GETTABLE  R28 R28 K121 ; R28 := R28["0xBCF846DF"]
638 [-]: GETGLOBAL R29 K102     ; R29 := math
639 [-]: GETTABLE  R29 R29 K122 ; R29 := R29["0x865961F7"]
640 [-]: LOADK     R30 K50      ; R30 := 1
641 [-]: LEN       R31 R22      ; R31 := # R22
642 [-]: CALL      R29 3 0      ; R29,... := R29(R30,R31)
643 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
644 [-]: GETUPVAL  R29 U20      ; R29 := U20
645 [-]: SELF      R29 R29 K123 ; R30 := R29; R29 := R29["0xF37AEF8E"]
646 [-]: GETTABLE  R31 R22 R28  ; R31 := R22[R28]
647 [-]: GETTABLE  R31 R31 K120 ; R31 := R31["agent"]
648 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
649 [-]: GETGLOBAL R30 K25      ; R30 := 0x400E7765
650 [-]: GETTABLE  R31 R29 K65  ; R31 := R29["icon"]
651 [-]: CALL      R30 2 2      ; R30 := R30(R31)
652 [-]: TEST      R30 1        ; if R30 then PC := 655
653 [-]: JMP       655          ; PC := 655
654 [-]: GETTABLE  R20 R29 K65  ; R20 := R29["icon"]
655 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
656 [-]: SELF      R30 R30 K124 ; R31 := R30; R30 := R30["0x26581636"]
657 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
658 [-]: MOVE      R33 R20      ; R33 := R20
659 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
660 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
661 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
662 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
663 [-]: LOADK     R33 K126     ; R33 := "_visible"
664 [-]: GETGLOBAL R34 K25      ; R34 := 0x400E7765
665 [-]: MOVE      R35 R20      ; R35 := R20
666 [-]: CALL      R34 2 2      ; R34 := R34(R35)
667 [-]: TEST      R34 1        ; if R34 then PC := 675
668 [-]: JMP       675          ; PC := 675
669 [-]: GETUPVAL  R34 U21      ; R34 := U21
670 [-]: GETTABLE  R34 R34 K127 ; R34 := R34["Playing"]
671 [-]: TEST      R34 1        ; if R34 then PC := 675
672 [-]: JMP       675          ; PC := 675
673 [-]: MOVE      R34 R11      ; R34 := R11
674 [-]: JMP       677          ; PC := 677
675 [-]: MOVE      R34 R0       ; R34 := R0
676 [-]: MOVE      R34 R1       ; R34 := R1
677 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
678 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
679 [-]: SELF      R30 R30 K128 ; R31 := R30; R30 := R30["0x7E1F26D7"]
680 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
681 [-]: GETGLOBAL R33 K129     ; R33 := fgEnemyMaterial
682 [-]: CALL      R30 4 1      ; R30(R31,R32,R33)
683 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
684 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
685 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
686 [-]: LOADK     R33 K130     ; R33 := "_xscale"
687 [-]: LOADK     R34 K131     ; R34 := 155
688 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
689 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
690 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
691 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
692 [-]: LOADK     R33 K132     ; R33 := "_yscale"
693 [-]: LOADK     R34 K131     ; R34 := 155
694 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
695 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
696 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
697 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
698 [-]: LOADK     R33 K133     ; R33 := "_y"
699 [-]: LOADK     R34 K134     ; R34 := 95
700 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
701 [-]: GETGLOBAL R30 K1       ; R30 := mMovie
702 [-]: SELF      R30 R30 K40  ; R31 := R30; R30 := R30["0x1C19D966"]
703 [-]: LOADK     R32 K125     ; R32 := "InfoTip.EnemyIcon"
704 [-]: LOADK     R33 K135     ; R33 := "_x"
705 [-]: LOADK     R34 K136     ; R34 := 64
706 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
707 [-]: GETGLOBAL R30 K137     ; R30 := locationTextures
708 [-]: GETGLOBAL R31 K102     ; R31 := math
709 [-]: GETTABLE  R31 R31 K121 ; R31 := R31["0xBCF846DF"]
710 [-]: GETGLOBAL R32 K102     ; R32 := math
711 [-]: GETTABLE  R32 R32 K122 ; R32 := R32["0x865961F7"]
712 [-]: LOADK     R33 K50      ; R33 := 1
713 [-]: GETGLOBAL R34 K137     ; R34 := locationTextures
714 [-]: LEN       R34 R34      ; R34 := # R34
715 [-]: CALL      R32 3 0      ; R32,... := R32(R33,R34)
716 [-]: CALL      R31 0 2      ; R31 := R31(R32,...)
717 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
718 [-]: GETUPVAL  R31 U17      ; R31 := U17
719 [-]: GETTABLE  R31 R31 K138 ; R31 := R31["InitLocationPicHeight"]
720 [-]: GETUPVAL  R32 U17      ; R32 := U17
721 [-]: GETTABLE  R32 R32 K139 ; R32 := R32["InitLocationPicYPos"]
722 [-]: TEST      R11 0        ; if not R11 then PC := 754
723 [-]: JMP       754          ; PC := 754
724 [-]: GETTABLE  R30 R10 K65  ; R30 := R10["icon"]
725 [-]: GETGLOBAL R33 K140     ; R33 := 0x7C282057
726 [-]: MOVE      R34 R30      ; R34 := R30
727 [-]: CALL      R33 2 2      ; R33 := R33(R34)
728 [-]: SELF      R34 R33 K141 ; R35 := R33; R34 := R33["0x11FF52EA"]
729 [-]: CALL      R34 2 2      ; R34 := R34(R35)
730 [-]: GETTABLE  R35 R34 K142 ; R35 := R34["x"]
731 [-]: LT        0 K23 R35    ; if 0 >= R35 then PC := 797
732 [-]: JMP       797          ; PC := 797
733 [-]: GETTABLE  R35 R34 K143 ; R35 := R34["y"]
734 [-]: GETTABLE  R36 R34 K142 ; R36 := R34["x"]
735 [-]: DIV       R35 R35 R36  ; R35 := R35 / R36
736 [-]: GETGLOBAL R36 K0       ; R36 := 0xF595ADDE
737 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
738 [-]: SELF      R37 R37 K2   ; R38 := R37; R37 := R37["0x6B7B470B"]
739 [-]: LOADK     R39 K144     ; R39 := "InfoTip.LocationPic"
740 [-]: LOADK     R40 K95      ; R40 := "_width"
741 [-]: CALL      R37 4 0      ; R37,... := R37(R38,R39,R40)
742 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
743 [-]: MUL       R31 R36 R35  ; R31 := R36 * R35
744 [-]: GETUPVAL  R36 U17      ; R36 := U17
745 [-]: GETTABLE  R36 R36 K138 ; R36 := R36["InitLocationPicHeight"]
746 [-]: LT        0 R36 R31    ; if R36 >= R31 then PC := 797
747 [-]: JMP       797          ; PC := 797
748 [-]: GETUPVAL  R36 U17      ; R36 := U17
749 [-]: GETTABLE  R36 R36 K138 ; R36 := R36["InitLocationPicHeight"]
750 [-]: SUB       R36 R31 R36  ; R36 := R31 - R36
751 [-]: DIV       R36 R36 K145 ; R36 := R36 / 2
752 [-]: ADD       R32 R32 R36  ; R32 := R32 + R36
753 [-]: JMP       797          ; PC := 797
754 [-]: GETGLOBAL R36 K48      ; R36 := string
755 [-]: GETTABLE  R36 R36 K51  ; R36 := R36["0xDE44F664"]
756 [-]: MOVE      R37 R9       ; R37 := R9
757 [-]: LOADK     R38 K146     ; R38 := "Dojo"
758 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
759 [-]: TEST      R36 0        ; if not R36 then PC := 772
760 [-]: JMP       772          ; PC := 772
761 [-]: GETGLOBAL R36 K147     ; R36 := locationIconMap
762 [-]: SELF      R36 R36 K148 ; R37 := R36; R36 := R36["0x7FFA0478"]
763 [-]: LOADK     R38 K149     ; R38 := "dojo"
764 [-]: GETGLOBAL R39 K102     ; R39 := math
765 [-]: GETTABLE  R39 R39 K122 ; R39 := R39["0x865961F7"]
766 [-]: LOADK     R40 K23      ; R40 := 0
767 [-]: LOADK     R41 K100     ; R41 := 100
768 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
769 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
770 [-]: MOVE      R30 R36      ; R30 := R36
771 [-]: JMP       797          ; PC := 797
772 [-]: GETGLOBAL R36 K25      ; R36 := 0x400E7765
773 [-]: GETTABLE  R37 R10 K150 ; R37 := R10["levelOverride"]
774 [-]: CALL      R36 2 2      ; R36 := R36(R37)
775 [-]: TEST      R36 1        ; if R36 then PC := 797
776 [-]: JMP       797          ; PC := 797
777 [-]: GETGLOBAL R36 K25      ; R36 := 0x400E7765
778 [-]: GETGLOBAL R37 K147     ; R37 := locationIconMap
779 [-]: CALL      R36 2 2      ; R36 := R36(R37)
780 [-]: TEST      R36 1        ; if R36 then PC := 797
781 [-]: JMP       797          ; PC := 797
782 [-]: GETGLOBAL R36 K147     ; R36 := locationIconMap
783 [-]: SELF      R36 R36 K148 ; R37 := R36; R36 := R36["0x7FFA0478"]
784 [-]: GETGLOBAL R38 K48      ; R38 := string
785 [-]: GETTABLE  R38 R38 K151 ; R38 := R38["0xBDD0D625"]
786 [-]: GETTABLE  R39 R10 K150 ; R39 := R10["levelOverride"]
787 [-]: SELF      R39 R39 K152 ; R40 := R39; R39 := R39["0x1B252E3C"]
788 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
789 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
790 [-]: GETGLOBAL R39 K102     ; R39 := math
791 [-]: GETTABLE  R39 R39 K122 ; R39 := R39["0x865961F7"]
792 [-]: LOADK     R40 K23      ; R40 := 0
793 [-]: LOADK     R41 K100     ; R41 := 100
794 [-]: CALL      R39 3 0      ; R39,... := R39(R40,R41)
795 [-]: CALL      R36 0 2      ; R36 := R36(R37,...)
796 [-]: MOVE      R30 R36      ; R30 := R36
797 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
798 [-]: SELF      R36 R36 K40  ; R37 := R36; R36 := R36["0x1C19D966"]
799 [-]: LOADK     R38 K144     ; R38 := "InfoTip.LocationPic"
800 [-]: LOADK     R39 K153     ; R39 := "_height"
801 [-]: MOVE      R40 R31      ; R40 := R31
802 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
803 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
804 [-]: SELF      R36 R36 K40  ; R37 := R36; R36 := R36["0x1C19D966"]
805 [-]: LOADK     R38 K144     ; R38 := "InfoTip.LocationPic"
806 [-]: LOADK     R39 K133     ; R39 := "_y"
807 [-]: MOVE      R40 R32      ; R40 := R32
808 [-]: CALL      R36 5 1      ; R36(R37,R38,R39,R40)
809 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
810 [-]: SELF      R36 R36 K124 ; R37 := R36; R36 := R36["0x26581636"]
811 [-]: LOADK     R38 K144     ; R38 := "InfoTip.LocationPic"
812 [-]: MOVE      R39 R30      ; R39 := R30
813 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
814 [-]: GETGLOBAL R36 K1       ; R36 := mMovie
815 [-]: SELF      R36 R36 K128 ; R37 := R36; R36 := R36["0x7E1F26D7"]
816 [-]: LOADK     R38 K144     ; R38 := "InfoTip.LocationPic"
817 [-]: GETGLOBAL R39 K154     ; R39 := locationPicMaterial
818 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
819 [-]: LOADK     R36 K155     ; R36 := 16777215
820 [-]: TEST      R15 0        ; if not R15 then PC := 824
821 [-]: JMP       824          ; PC := 824
822 [-]: LOADK     R36 K156     ; R36 := 13382451
823 [-]: JMP       827          ; PC := 827
824 [-]: TEST      R17 0        ; if not R17 then PC := 827
825 [-]: JMP       827          ; PC := 827
826 [-]: LOADK     R36 K157     ; R36 := 16746632
827 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
828 [-]: SELF      R37 R37 K9   ; R38 := R37; R37 := R37["0x880196A7"]
829 [-]: LOADK     R39 K99      ; R39 := "InfoTip"
830 [-]: LOADK     R40 K158     ; R40 := "NemesisOverlay"
831 [-]: LOADK     R41 K126     ; R41 := "_visible"
832 [-]: MOVE      R42 R17      ; R42 := R17
833 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
834 [-]: GETGLOBAL R37 K1       ; R37 := mMovie
835 [-]: SELF      R37 R37 K9   ; R38 := R37; R37 := R37["0x880196A7"]
836 [-]: LOADK     R39 K99      ; R39 := "InfoTip"
837 [-]: LOADK     R40 K159     ; R40 := "LocationPic"
838 [-]: LOADK     R41 K11      ; R41 := "_color"
839 [-]: MOVE      R42 R36      ; R42 := R36
840 [-]: CALL      R37 6 1      ; R37(R38,R39,R40,R41,R42)
841 [-]: GETGLOBAL R37 K160     ; R37 := 0x8C64AFA9
842 [-]: GETGLOBAL R38 K1       ; R38 := mMovie
843 [-]: GETTABLE  R39 R4 K10   ; R39 := R4["clipName"]
844 [-]: LOADK     R40 K161     ; R40 := ".swapDepths"
845 [-]: CONCAT    R39 R39 R40  ; R39 := R39 .. R40
846 [-]: LOADK     R40 K162     ; R40 := 501
847 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
848 [-]: GETTABLE  R37 R4 K163  ; R37 := R4["deco"]
849 [-]: EQ        1 R37 K8     ; if R37 == nil then PC := 877
850 [-]: JMP       877          ; PC := 877
851 [-]: GETGLOBAL R37 K25      ; R37 := 0x400E7765
852 [-]: GETTABLE  R38 R4 K163  ; R38 := R4["deco"]
853 [-]: GETTABLE  R38 R38 K164 ; R38 := R38["mInstance"]
854 [-]: CALL      R37 2 2      ; R37 := R37(R38)
855 [-]: TEST      R37 1        ; if R37 then PC := 877
856 [-]: JMP       877          ; PC := 877
857 [-]: GETGLOBAL R37 K19      ; R37 := 0x52E17A90
858 [-]: GETGLOBAL R38 K1       ; R38 := mMovie
859 [-]: GETTABLE  R39 R4 K10   ; R39 := R4["clipName"]
860 [-]: GETGLOBAL R40 K21      ; R40 := UISys
861 [-]: GETTABLE  R40 R40 K165 ; R40 := R40["FlashInstance_EASE_OUT"]
862 [-]: NEWTABLE  R41 1 0      ; R41 := {}
863 [-]: CLOSURE   R42 0        ; R42 := closure(Function #140.1)
864 [-]: MOVE      R0 R4        ; R0 := R4
865 [-]: GETUPVAL  R0 U22       ; R0 := U22
866 [-]: SETLIST   R41 1 1      ; R41[(1-1)*FPF+i] := R(41+i), 1 <= i <= 1
867 [-]: NEWTABLE  R42 1 0      ; R42 := {}
868 [-]: LOADK     R43 K50      ; R43 := 1
869 [-]: SETLIST   R42 1 1      ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 1
870 [-]: GETUPVAL  R43 U9       ; R43 := U9
871 [-]: GETTABLE  R43 R43 K166 ; R43 := R43["0xF81722A2"]
872 [-]: MOVE      R44 R5       ; R44 := R5
873 [-]: LOADK     R45 K167     ; R45 := 0.0010000000474975
874 [-]: LOADK     R46 K101     ; R46 := 0.20000000298023
875 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
876 [-]: CALL      R37 0 1      ; R37(R38,...)
877 [-]: RETURN    R0 1         ; return 


; Function #140.1:
;
; Name:            
; Defined at line: 6551
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: ADD       R4 K7 R4     ; R4 := 1 + R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 6562
; #Upvalues:       9
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        1 R1 R2      ; if R1 <= R2 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  6 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: SETTABLE  R2 K2 K3     ; R2["Node"] := nil
 18 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETUPVAL  R2 U4        ; R2 := U4
 21 [-]: GETTABLE  R2 R2 R0     ; R2 := R2[R0]
 22 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: GETUPVAL  R2 U4        ; R2 := U4
 25 [-]: GETTABLE  R1 R2 R0     ; R1 := R2[R0]
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 27 [-]: GETUPVAL  R3 U5        ; R3 := U5
 28 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Projector"]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETGLOBAL R2 K5        ; R2 := gBackgroundRegion
 33 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2["0x9B0A3887"]
 34 [-]: GETUPVAL  R4 U5        ; R4 := U5
 35 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["Projector"]
 36 [-]: CALL      R2 3 1       ; R2(R3,R4)
 37 [-]: GETGLOBAL R2 K0        ; R2 := 0x400E7765
 38 [-]: MOVE      R3 R1        ; R3 := R1
 39 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 40 [-]: TEST      R2 1         ; if R2 then PC := 131
 41 [-]: JMP       131          ; PC := 131
 42 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 43 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2["0x1C19D966"]
 44 [-]: GETTABLE  R4 R1 K8     ; R4 := R1["clipName"]
 45 [-]: LOADK     R5 K9        ; R5 := "_color"
 46 [-]: GETGLOBAL R6 K10       ; R6 := _G
 47 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["UIColor_White"]
 48 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 49 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
 50 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2["0x445651FB"]
 51 [-]: GETTABLE  R4 R1 K13    ; R4 := R1["labelIndex"]
 52 [-]: LOADK     R5 K14       ; R5 := "_alpha"
 53 [-]: GETUPVAL  R6 U6        ; R6 := U6
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 56 [-]: CALL      R2 0 1       ; R2(R3,...)
 57 [-]: GETTABLE  R2 R1 K15    ; R2 := R1["guildId"]
 58 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETTABLE  R2 R1 K16    ; R2 := R1["clanTier"]
 61 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: MOVE      R2 R0        ; R2 := R0
 64 [-]: MOVE      R2 R1        ; R2 := R1
 65 [-]: TEST      R2 0         ; if not R2 then PC := 82
 66 [-]: JMP       82           ; PC := 82
 67 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 68 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 69 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
 70 [-]: LOADK     R6 K18       ; R6 := ".Node.Container.Node"
 71 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 72 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 73 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 74 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 75 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 76 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 77 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 78 [-]: LOADK     R9 K21       ; R9 := 0
 79 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 80 [-]: LOADK     R9 K22       ; R9 := 0.25
 81 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 82 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
 83 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
 84 [-]: LOADK     R5 K23       ; R5 := "InfoTip"
 85 [-]: GETGLOBAL R6 K19       ; R6 := UISys
 86 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["FlashInstance_LINEAR"]
 87 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 88 [-]: LOADK     R8 K14       ; R8 := "_alpha"
 89 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 90 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 91 [-]: LOADK     R9 K21       ; R9 := 0
 92 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 93 [-]: LOADK     R9 K24       ; R9 := 0.050000000745058
 94 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 95 [-]: GETTABLE  R3 R1 K25    ; R3 := R1["deco"]
 96 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 119
 97 [-]: JMP       119          ; PC := 119
 98 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
 99 [-]: GETTABLE  R4 R1 K25    ; R4 := R1["deco"]
100 [-]: GETTABLE  R4 R4 K26    ; R4 := R4["mInstance"]
101 [-]: CALL      R3 2 2       ; R3 := R3(R4)
102 [-]: TEST      R3 1         ; if R3 then PC := 119
103 [-]: JMP       119          ; PC := 119
104 [-]: GETGLOBAL R3 K17       ; R3 := 0x52E17A90
105 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
106 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["clipName"]
107 [-]: GETGLOBAL R6 K19       ; R6 := UISys
108 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["FlashInstance_EASE_OUT"]
109 [-]: NEWTABLE  R7 1 0       ; R7 := {}
110 [-]: CLOSURE   R8 0         ; R8 := closure(Function #141.1)
111 [-]: MOVE      R0 R1        ; R0 := R1
112 [-]: GETUPVAL  R0 U7        ; R0 := U7
113 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
114 [-]: NEWTABLE  R8 1 0       ; R8 := {}
115 [-]: LOADK     R9 K28       ; R9 := 1
116 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
117 [-]: LOADK     R9 K29       ; R9 := 0.20000000298023
118 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
119 [-]: GETGLOBAL R3 K0        ; R3 := 0x400E7765
120 [-]: GETUPVAL  R4 U8        ; R4 := U8
121 [-]: CALL      R3 2 2       ; R3 := R3(R4)
122 [-]: TEST      R3 1         ; if R3 then PC := 131
123 [-]: JMP       131          ; PC := 131
124 [-]: GETGLOBAL R3 K30       ; R3 := _T
125 [-]: SETTABLE  R3 K31 K3    ; R3["JunctionTasksUIRadialSector"] := nil
126 [-]: GETUPVAL  R3 U8        ; R3 := U8
127 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0xA58BB96C"]
128 [-]: CALL      R3 2 1       ; R3(R4)
129 [-]: LOADNIL   R3 R3        ; R3 := nil
130 [-]: MOVE      R3 R8        ; R3 := R8
131 [-]: RETURN    R0 1         ; return 


; Function #141.1:
;
; Name:            
; Defined at line: 6592
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
  3 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x400E7765
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["deco"]
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mInstance"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETUPVAL  R1 U0        ; R1 := U0
 13 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["deco"]
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mInstance"]
 15 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x6A7E5F92"]
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["deco"]
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScale"]
 19 [-]: MUL       R4 R0 K6     ; R4 := R0 * 0.5
 20 [-]: SUB       R4 K7 R4     ; R4 := 1.5 - R4
 21 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 22 [-]: GETUPVAL  R4 U1        ; R4 := U1
 23 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["DECO_SCALE_MULTIPLIER"]
 24 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 25 [-]: MOVE      R4 R1        ; R4 := R1
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 6607
; #Upvalues:       27
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xF595ADDE
 10 [-]: GETGLOBAL R1 K2        ; R1 := mMovie
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1["0x6B7B470B"]
 12 [-]: LOADK     R3 K4        ; R3 := "_root"
 13 [-]: LOADK     R4 K5        ; R4 := "_xmouse"
 14 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 15 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 16 [-]: GETGLOBAL R1 K1        ; R1 := 0xF595ADDE
 17 [-]: GETGLOBAL R2 K2        ; R2 := mMovie
 18 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2["0x6B7B470B"]
 19 [-]: LOADK     R4 K4        ; R4 := "_root"
 20 [-]: LOADK     R5 K6        ; R5 := "_ymouse"
 21 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 22 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 23 [-]: LE        0 R0 K7      ; if R0 > -1000 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: LE        0 R1 K7      ; if R1 > -1000 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["MouseInWorldStateWindow"]
 30 [-]: TEST      R2 1         ; if R2 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R2 K8        ; R2 := _T
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["MouseInChatArea"]
 34 [-]: TEST      R2 0         ; if not R2 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R2 K8        ; R2 := _T
 38 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 39 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 50
 40 [-]: JMP       50           ; PC := 50
 41 [-]: GETGLOBAL R2 K8        ; R2 := _T
 42 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["AcceptInvitePanel"]
 43 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x458F27A9"]
 44 [-]: LOADK     R4 K14       ; R4 := "HasFocus"
 45 [-]: LOADK     R5 K15       ; R5 := ""
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETGLOBAL R2 K8        ; R2 := _T
 51 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["TopMenuOpen"]
 52 [-]: TEST      R2 0         ; if not R2 then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETGLOBAL R2 K17       ; R2 := gGameConfig
 56 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2["0x89E53943"]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 0         ; if not R2 then PC := 69
 59 [-]: JMP       69           ; PC := 69
 60 [-]: GETUPVAL  R2 U2        ; R2 := U2
 61 [-]: GETTABLE  R2 R2 K19    ; R2 := R2["0xB11F032"]
 62 [-]: GETGLOBAL R3 K2        ; R3 := mMovie
 63 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3["0x5DB0BD4"]
 64 [-]: LOADK     R5 K21       ; R5 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
 65 [-]: MOVE      R6 R0        ; R6 := R0
 66 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 67 [-]: CALL      R2 0 1       ; R2(R3,...)
 68 [-]: RETURN    R0 1         ; return 
 69 [-]: GETGLOBAL R2 K22       ; R2 := Engine
 70 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["0x9490FE70"]
 71 [-]: CALL      R2 1 2       ; R2 := R2()
 72 [-]: TEST      R2 0         ; if not R2 then PC := 89
 73 [-]: JMP       89           ; PC := 89
 74 [-]: GETGLOBAL R2 K24       ; R2 := 0x400E7765
 75 [-]: GETGLOBAL R3 K8        ; R3 := _T
 76 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["SquadOverlay"]
 77 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 78 [-]: TEST      R2 1         ; if R2 then PC := 89
 79 [-]: JMP       89           ; PC := 89
 80 [-]: GETGLOBAL R2 K8        ; R2 := _T
 81 [-]: GETTABLE  R2 R2 K25    ; R2 := R2["SquadOverlay"]
 82 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2["0x458F27A9"]
 83 [-]: LOADK     R4 K26       ; R4 := "MatchmakingFocused"
 84 [-]: LOADK     R5 K15       ; R5 := ""
 85 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 86 [-]: TEST      R2 0         ; if not R2 then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: RETURN    R0 1         ; return 
 89 [-]: GETUPVAL  R2 U3        ; R2 := U3
 90 [-]: GETUPVAL  R3 U4        ; R3 := U4
 91 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["EDIT_REGIONS"]
 92 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 163
 93 [-]: JMP       163          ; PC := 163
 94 [-]: GETGLOBAL R2 K24       ; R2 := 0x400E7765
 95 [-]: GETUPVAL  R3 U5        ; R3 := U5
 96 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["Region"]
 97 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 98 [-]: TEST      R2 1         ; if R2 then PC := 163
 99 [-]: JMP       163          ; PC := 163
100 [-]: GETUPVAL  R2 U6        ; R2 := U6
101 [-]: GETUPVAL  R3 U5        ; R3 := U5
102 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["Region"]
103 [-]: SETTABLE  R2 K29 R3    ; R2["mMovingRegion"] := R3
104 [-]: GETUPVAL  R2 U6        ; R2 := U6
105 [-]: GETUPVAL  R3 U5        ; R3 := U5
106 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["Region"]
107 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["instance"]
108 [-]: SELF      R3 R3 K32    ; R4 := R3; R3 := R3["0x6DA72501"]
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: SETTABLE  R2 K30 R3    ; R2["mInitialPosition"] := R3
111 [-]: GETUPVAL  R2 U6        ; R2 := U6
112 [-]: GETUPVAL  R3 U7        ; R3 := U7
113 [-]: CALL      R3 1 2       ; R3 := R3()
114 [-]: SETTABLE  R2 K33 R3    ; R2["mInitialWorldCursor"] := R3
115 [-]: LOADNIL   R2 R2        ; R2 := nil
116 [-]: GETGLOBAL R3 K34       ; R3 := 0x63B09107
117 [-]: GETUPVAL  R4 U8        ; R4 := U8
118 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
119 [-]: JMP       126          ; PC := 126
120 [-]: GETUPVAL  R8 U5        ; R8 := U5
121 [-]: GETTABLE  R8 R8 K28    ; R8 := R8["Region"]
122 [-]: EQ        0 R8 R7      ; if R8 ~= R7 then PC := 126
123 [-]: JMP       126          ; PC := 126
124 [-]: SUB       R2 R6 K35    ; R2 := R6 - 1
125 [-]: JMP       128          ; PC := 128
126 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 120; R5 := R6 end
127 [-]: JMP       120          ; PC := 120
128 [-]: GETGLOBAL R8 K24       ; R8 := 0x400E7765
129 [-]: MOVE      R9 R2        ; R9 := R2
130 [-]: CALL      R8 2 2       ; R8 := R8(R9)
131 [-]: TEST      R8 1         ; if R8 then PC := 585
132 [-]: JMP       585          ; PC := 585
133 [-]: GETUPVAL  R8 U6        ; R8 := U6
134 [-]: NEWTABLE  R9 0 0       ; R9 := {}
135 [-]: SETTABLE  R8 K36 R9    ; R8["mChildNodes"] := R9
136 [-]: GETGLOBAL R8 K34       ; R8 := 0x63B09107
137 [-]: GETUPVAL  R9 U9        ; R9 := U9
138 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
139 [-]: JMP       160          ; PC := 160
140 [-]: GETTABLE  R13 R12 K37  ; R13 := R12["radialSector"]
141 [-]: GETTABLE  R13 R13 K38  ; R13 := R13["region"]
142 [-]: EQ        0 R13 R2     ; if R13 ~= R2 then PC := 160
143 [-]: JMP       160          ; PC := 160
144 [-]: GETGLOBAL R13 K39      ; R13 := table
145 [-]: GETTABLE  R13 R13 K40  ; R13 := R13["0xE6450C9D"]
146 [-]: GETUPVAL  R14 U6       ; R14 := U6
147 [-]: GETTABLE  R14 R14 K36  ; R14 := R14["mChildNodes"]
148 [-]: NEWTABLE  R15 0 2      ; R15 := {}
149 [-]: SETTABLE  R15 K41 R11  ; R15["NodeIndex"] := R11
150 [-]: GETGLOBAL R16 K43      ; R16 := 0x221C9700
151 [-]: GETTABLE  R17 R12 K44  ; R17 := R12["position"]
152 [-]: GETTABLE  R17 R17 K45  ; R17 := R17["x"]
153 [-]: GETTABLE  R18 R12 K44  ; R18 := R12["position"]
154 [-]: GETTABLE  R18 R18 K46  ; R18 := R18["y"]
155 [-]: GETTABLE  R19 R12 K44  ; R19 := R12["position"]
156 [-]: GETTABLE  R19 R19 K47  ; R19 := R19["z"]
157 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
158 [-]: SETTABLE  R15 K42 R16  ; R15["InitialPosition"] := R16
159 [-]: CALL      R13 3 1      ; R13(R14,R15)
160 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 140; R10 := R11 end
161 [-]: JMP       140          ; PC := 140
162 [-]: JMP       585          ; PC := 585
163 [-]: GETUPVAL  R13 U3       ; R13 := U3
164 [-]: GETUPVAL  R14 U4       ; R14 := U4
165 [-]: GETTABLE  R14 R14 K48  ; R14 := R14["EDIT_NODES"]
166 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 203
167 [-]: JMP       203          ; PC := 203
168 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
169 [-]: GETUPVAL  R14 U5       ; R14 := U5
170 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
171 [-]: CALL      R13 2 2      ; R13 := R13(R14)
172 [-]: TEST      R13 1        ; if R13 then PC := 203
173 [-]: JMP       203          ; PC := 203
174 [-]: GETUPVAL  R13 U6       ; R13 := U6
175 [-]: GETUPVAL  R14 U5       ; R14 := U5
176 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
177 [-]: SETTABLE  R13 K50 R14  ; R13["mMovingNode"] := R14
178 [-]: GETUPVAL  R13 U6       ; R13 := U6
179 [-]: GETGLOBAL R14 K43      ; R14 := 0x221C9700
180 [-]: GETUPVAL  R15 U5       ; R15 := U5
181 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["Node"]
182 [-]: GETTABLE  R15 R15 K44  ; R15 := R15["position"]
183 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["x"]
184 [-]: GETUPVAL  R16 U5       ; R16 := U5
185 [-]: GETTABLE  R16 R16 K49  ; R16 := R16["Node"]
186 [-]: GETTABLE  R16 R16 K44  ; R16 := R16["position"]
187 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["y"]
188 [-]: GETUPVAL  R17 U5       ; R17 := U5
189 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["Node"]
190 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["position"]
191 [-]: GETTABLE  R17 R17 K47  ; R17 := R17["z"]
192 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
193 [-]: SETTABLE  R13 K30 R14  ; R13["mInitialPosition"] := R14
194 [-]: GETUPVAL  R13 U6       ; R13 := U6
195 [-]: GETUPVAL  R14 U7       ; R14 := U7
196 [-]: CALL      R14 1 2      ; R14 := R14()
197 [-]: SETTABLE  R13 K33 R14  ; R13["mInitialWorldCursor"] := R14
198 [-]: GETUPVAL  R13 U6       ; R13 := U6
199 [-]: GETUPVAL  R14 U10      ; R14 := U10
200 [-]: CALL      R14 1 2      ; R14 := R14()
201 [-]: SETTABLE  R13 K51 R14  ; R13["mInitialMousePosition"] := R14
202 [-]: JMP       585          ; PC := 585
203 [-]: GETUPVAL  R13 U3       ; R13 := U3
204 [-]: GETUPVAL  R14 U4       ; R14 := U4
205 [-]: GETTABLE  R14 R14 K52  ; R14 := R14["EDIT_EDGES"]
206 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 282
207 [-]: JMP       282          ; PC := 282
208 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
209 [-]: GETUPVAL  R14 U5       ; R14 := U5
210 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
211 [-]: CALL      R13 2 2      ; R13 := R13(R14)
212 [-]: TEST      R13 0        ; if not R13 then PC := 219
213 [-]: JMP       219          ; PC := 219
214 [-]: GETUPVAL  R13 U6       ; R13 := U6
215 [-]: SETTABLE  R13 K53 K12  ; R13["mEdgeNode1"] := nil
216 [-]: GETUPVAL  R13 U6       ; R13 := U6
217 [-]: SETTABLE  R13 K54 K12  ; R13["mEdgeNode2"] := nil
218 [-]: JMP       274          ; PC := 274
219 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
220 [-]: GETUPVAL  R14 U6       ; R14 := U6
221 [-]: GETTABLE  R14 R14 K53  ; R14 := R14["mEdgeNode1"]
222 [-]: CALL      R13 2 2      ; R13 := R13(R14)
223 [-]: TEST      R13 1        ; if R13 then PC := 233
224 [-]: JMP       233          ; PC := 233
225 [-]: GETUPVAL  R13 U11      ; R13 := U11
226 [-]: GETTABLE  R13 R13 K55  ; R13 := R13["mControlDown"]
227 [-]: TEST      R13 1        ; if R13 then PC := 238
228 [-]: JMP       238          ; PC := 238
229 [-]: GETUPVAL  R13 U11      ; R13 := U11
230 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["mShiftDown"]
231 [-]: TEST      R13 1        ; if R13 then PC := 238
232 [-]: JMP       238          ; PC := 238
233 [-]: GETUPVAL  R13 U6       ; R13 := U6
234 [-]: GETUPVAL  R14 U5       ; R14 := U5
235 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
236 [-]: SETTABLE  R13 K53 R14  ; R13["mEdgeNode1"] := R14
237 [-]: JMP       250          ; PC := 250
238 [-]: GETUPVAL  R13 U5       ; R13 := U5
239 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["Node"]
240 [-]: GETTABLE  R13 R13 K57  ; R13 := R13["name"]
241 [-]: GETUPVAL  R14 U6       ; R14 := U6
242 [-]: GETTABLE  R14 R14 K53  ; R14 := R14["mEdgeNode1"]
243 [-]: GETTABLE  R14 R14 K57  ; R14 := R14["name"]
244 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 250
245 [-]: JMP       250          ; PC := 250
246 [-]: GETUPVAL  R13 U6       ; R13 := U6
247 [-]: GETUPVAL  R14 U5       ; R14 := U5
248 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
249 [-]: SETTABLE  R13 K54 R14  ; R13["mEdgeNode2"] := R14
250 [-]: GETUPVAL  R13 U6       ; R13 := U6
251 [-]: GETGLOBAL R14 K43      ; R14 := 0x221C9700
252 [-]: GETUPVAL  R15 U5       ; R15 := U5
253 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["Node"]
254 [-]: GETTABLE  R15 R15 K44  ; R15 := R15["position"]
255 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["x"]
256 [-]: GETUPVAL  R16 U5       ; R16 := U5
257 [-]: GETTABLE  R16 R16 K49  ; R16 := R16["Node"]
258 [-]: GETTABLE  R16 R16 K44  ; R16 := R16["position"]
259 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["y"]
260 [-]: GETUPVAL  R17 U5       ; R17 := U5
261 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["Node"]
262 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["position"]
263 [-]: GETTABLE  R17 R17 K47  ; R17 := R17["z"]
264 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
265 [-]: SETTABLE  R13 K30 R14  ; R13["mInitialPosition"] := R14
266 [-]: GETUPVAL  R13 U6       ; R13 := U6
267 [-]: GETUPVAL  R14 U7       ; R14 := U7
268 [-]: CALL      R14 1 2      ; R14 := R14()
269 [-]: SETTABLE  R13 K33 R14  ; R13["mInitialWorldCursor"] := R14
270 [-]: GETUPVAL  R13 U6       ; R13 := U6
271 [-]: GETUPVAL  R14 U10      ; R14 := U10
272 [-]: CALL      R14 1 2      ; R14 := R14()
273 [-]: SETTABLE  R13 K51 R14  ; R13["mInitialMousePosition"] := R14
274 [-]: GETGLOBAL R13 K2       ; R13 := mMovie
275 [-]: SELF      R13 R13 K58  ; R14 := R13; R13 := R13["0x1C19D966"]
276 [-]: LOADK     R15 K59      ; R15 := "ScreenModeLabel"
277 [-]: LOADK     R16 K60      ; R16 := "text"
278 [-]: GETUPVAL  R17 U12      ; R17 := U12
279 [-]: CALL      R17 1 0      ; R17,... := R17()
280 [-]: CALL      R13 0 1      ; R13(R14,...)
281 [-]: JMP       585          ; PC := 585
282 [-]: GETUPVAL  R13 U3       ; R13 := U3
283 [-]: GETUPVAL  R14 U4       ; R14 := U4
284 [-]: GETTABLE  R14 R14 K61  ; R14 := R14["EDIT_NODE_DECOS"]
285 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 394
286 [-]: JMP       394          ; PC := 394
287 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
288 [-]: GETUPVAL  R14 U5       ; R14 := U5
289 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
290 [-]: CALL      R13 2 2      ; R13 := R13(R14)
291 [-]: TEST      R13 1        ; if R13 then PC := 394
292 [-]: JMP       394          ; PC := 394
293 [-]: GETUPVAL  R13 U5       ; R13 := U5
294 [-]: GETTABLE  R13 R13 K49  ; R13 := R13["Node"]
295 [-]: GETTABLE  R13 R13 K62  ; R13 := R13["deco"]
296 [-]: EQ        1 R13 K12    ; if R13 == nil then PC := 306
297 [-]: JMP       306          ; PC := 306
298 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
299 [-]: GETUPVAL  R14 U5       ; R14 := U5
300 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
301 [-]: GETTABLE  R14 R14 K62  ; R14 := R14["deco"]
302 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["mInstance"]
303 [-]: CALL      R13 2 2      ; R13 := R13(R14)
304 [-]: TEST      R13 0        ; if not R13 then PC := 307
305 [-]: JMP       307          ; PC := 307
306 [-]: RETURN    R0 1         ; return 
307 [-]: GETUPVAL  R13 U6       ; R13 := U6
308 [-]: GETUPVAL  R14 U5       ; R14 := U5
309 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
310 [-]: SETTABLE  R13 K50 R14  ; R13["mMovingNode"] := R14
311 [-]: GETUPVAL  R13 U6       ; R13 := U6
312 [-]: SETTABLE  R13 K64 K65  ; R13["mEditingOffset"] := "0x0"
313 [-]: GETUPVAL  R13 U6       ; R13 := U6
314 [-]: SETTABLE  R13 K66 K65  ; R13["mEditingRotation"] := "0x0"
315 [-]: GETUPVAL  R13 U6       ; R13 := U6
316 [-]: SETTABLE  R13 K67 K65  ; R13["mEditingScale"] := "0x0"
317 [-]: GETUPVAL  R13 U11      ; R13 := U11
318 [-]: GETTABLE  R13 R13 K68  ; R13 := R13["mAltDown"]
319 [-]: TEST      R13 0        ; if not R13 then PC := 334
320 [-]: JMP       334          ; PC := 334
321 [-]: GETUPVAL  R13 U6       ; R13 := U6
322 [-]: GETUPVAL  R14 U5       ; R14 := U5
323 [-]: GETTABLE  R14 R14 K49  ; R14 := R14["Node"]
324 [-]: GETTABLE  R14 R14 K62  ; R14 := R14["deco"]
325 [-]: GETTABLE  R14 R14 K70  ; R14 := R14["mScale"]
326 [-]: SETTABLE  R13 K69 R14  ; R13["mInitialScale"] := R14
327 [-]: GETUPVAL  R13 U6       ; R13 := U6
328 [-]: GETUPVAL  R14 U10      ; R14 := U10
329 [-]: CALL      R14 1 2      ; R14 := R14()
330 [-]: SETTABLE  R13 K51 R14  ; R13["mInitialMousePosition"] := R14
331 [-]: GETUPVAL  R13 U6       ; R13 := U6
332 [-]: SETTABLE  R13 K67 K71  ; R13["mEditingScale"] := "0x1"
333 [-]: JMP       389          ; PC := 389
334 [-]: GETUPVAL  R13 U11      ; R13 := U11
335 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["mShiftDown"]
336 [-]: TEST      R13 1        ; if R13 then PC := 342
337 [-]: JMP       342          ; PC := 342
338 [-]: GETUPVAL  R13 U11      ; R13 := U11
339 [-]: GETTABLE  R13 R13 K55  ; R13 := R13["mControlDown"]
340 [-]: TEST      R13 0        ; if not R13 then PC := 368
341 [-]: JMP       368          ; PC := 368
342 [-]: GETUPVAL  R13 U6       ; R13 := U6
343 [-]: GETGLOBAL R14 K73      ; R14 := 0x1E4F6281
344 [-]: GETUPVAL  R15 U5       ; R15 := U5
345 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["Node"]
346 [-]: GETTABLE  R15 R15 K62  ; R15 := R15["deco"]
347 [-]: GETTABLE  R15 R15 K74  ; R15 := R15["mRotation"]
348 [-]: GETTABLE  R15 R15 K75  ; R15 := R15["heading"]
349 [-]: GETUPVAL  R16 U5       ; R16 := U5
350 [-]: GETTABLE  R16 R16 K49  ; R16 := R16["Node"]
351 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["deco"]
352 [-]: GETTABLE  R16 R16 K74  ; R16 := R16["mRotation"]
353 [-]: GETTABLE  R16 R16 K76  ; R16 := R16["pitch"]
354 [-]: GETUPVAL  R17 U5       ; R17 := U5
355 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["Node"]
356 [-]: GETTABLE  R17 R17 K62  ; R17 := R17["deco"]
357 [-]: GETTABLE  R17 R17 K74  ; R17 := R17["mRotation"]
358 [-]: GETTABLE  R17 R17 K77  ; R17 := R17["bank"]
359 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
360 [-]: SETTABLE  R13 K72 R14  ; R13["mInitialRotation"] := R14
361 [-]: GETUPVAL  R13 U6       ; R13 := U6
362 [-]: GETUPVAL  R14 U10      ; R14 := U10
363 [-]: CALL      R14 1 2      ; R14 := R14()
364 [-]: SETTABLE  R13 K51 R14  ; R13["mInitialMousePosition"] := R14
365 [-]: GETUPVAL  R13 U6       ; R13 := U6
366 [-]: SETTABLE  R13 K66 K71  ; R13["mEditingRotation"] := "0x1"
367 [-]: JMP       389          ; PC := 389
368 [-]: GETUPVAL  R13 U6       ; R13 := U6
369 [-]: GETGLOBAL R14 K43      ; R14 := 0x221C9700
370 [-]: GETUPVAL  R15 U5       ; R15 := U5
371 [-]: GETTABLE  R15 R15 K49  ; R15 := R15["Node"]
372 [-]: GETTABLE  R15 R15 K62  ; R15 := R15["deco"]
373 [-]: GETTABLE  R15 R15 K78  ; R15 := R15["mOffset"]
374 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["x"]
375 [-]: GETUPVAL  R16 U5       ; R16 := U5
376 [-]: GETTABLE  R16 R16 K49  ; R16 := R16["Node"]
377 [-]: GETTABLE  R16 R16 K62  ; R16 := R16["deco"]
378 [-]: GETTABLE  R16 R16 K78  ; R16 := R16["mOffset"]
379 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["y"]
380 [-]: GETUPVAL  R17 U5       ; R17 := U5
381 [-]: GETTABLE  R17 R17 K49  ; R17 := R17["Node"]
382 [-]: GETTABLE  R17 R17 K62  ; R17 := R17["deco"]
383 [-]: GETTABLE  R17 R17 K78  ; R17 := R17["mOffset"]
384 [-]: GETTABLE  R17 R17 K47  ; R17 := R17["z"]
385 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
386 [-]: SETTABLE  R13 K30 R14  ; R13["mInitialPosition"] := R14
387 [-]: GETUPVAL  R13 U6       ; R13 := U6
388 [-]: SETTABLE  R13 K64 K71  ; R13["mEditingOffset"] := "0x1"
389 [-]: GETUPVAL  R13 U6       ; R13 := U6
390 [-]: GETUPVAL  R14 U7       ; R14 := U7
391 [-]: CALL      R14 1 2      ; R14 := R14()
392 [-]: SETTABLE  R13 K33 R14  ; R13["mInitialWorldCursor"] := R14
393 [-]: JMP       585          ; PC := 585
394 [-]: GETUPVAL  R13 U3       ; R13 := U3
395 [-]: GETUPVAL  R14 U4       ; R14 := U4
396 [-]: GETTABLE  R14 R14 K79  ; R14 := R14["EDIT_REGION_FRAMING"]
397 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 403
398 [-]: JMP       403          ; PC := 403
399 [-]: GETUPVAL  R13 U13      ; R13 := U13
400 [-]: SELF      R13 R13 K80  ; R14 := R13; R13 := R13["0x3AEEE6C2"]
401 [-]: CALL      R13 2 1      ; R13(R14)
402 [-]: JMP       585          ; PC := 585
403 [-]: GETUPVAL  R13 U3       ; R13 := U3
404 [-]: GETUPVAL  R14 U4       ; R14 := U4
405 [-]: GETTABLE  R14 R14 K81  ; R14 := R14["EDIT_SHORTCUT_CONTROL_POINTS"]
406 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 437
407 [-]: JMP       437          ; PC := 437
408 [-]: GETGLOBAL R13 K24      ; R13 := 0x400E7765
409 [-]: GETUPVAL  R14 U6       ; R14 := U6
410 [-]: GETTABLE  R14 R14 K82  ; R14 := R14["mMovingControlPoint"]
411 [-]: CALL      R13 2 2      ; R13 := R13(R14)
412 [-]: TEST      R13 1        ; if R13 then PC := 437
413 [-]: JMP       437          ; PC := 437
414 [-]: GETUPVAL  R13 U6       ; R13 := U6
415 [-]: SETTABLE  R13 K83 K71  ; R13["mControlPointHeld"] := "0x1"
416 [-]: GETUPVAL  R13 U6       ; R13 := U6
417 [-]: GETUPVAL  R14 U7       ; R14 := U7
418 [-]: CALL      R14 1 2      ; R14 := R14()
419 [-]: SETTABLE  R13 K33 R14  ; R13["mInitialWorldCursor"] := R14
420 [-]: GETUPVAL  R13 U6       ; R13 := U6
421 [-]: GETGLOBAL R14 K43      ; R14 := 0x221C9700
422 [-]: GETUPVAL  R15 U6       ; R15 := U6
423 [-]: GETTABLE  R15 R15 K82  ; R15 := R15["mMovingControlPoint"]
424 [-]: GETTABLE  R15 R15 K44  ; R15 := R15["position"]
425 [-]: GETTABLE  R15 R15 K45  ; R15 := R15["x"]
426 [-]: GETUPVAL  R16 U6       ; R16 := U6
427 [-]: GETTABLE  R16 R16 K82  ; R16 := R16["mMovingControlPoint"]
428 [-]: GETTABLE  R16 R16 K44  ; R16 := R16["position"]
429 [-]: GETTABLE  R16 R16 K46  ; R16 := R16["y"]
430 [-]: GETUPVAL  R17 U6       ; R17 := U6
431 [-]: GETTABLE  R17 R17 K82  ; R17 := R17["mMovingControlPoint"]
432 [-]: GETTABLE  R17 R17 K44  ; R17 := R17["position"]
433 [-]: GETTABLE  R17 R17 K47  ; R17 := R17["z"]
434 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
435 [-]: SETTABLE  R13 K30 R14  ; R13["mInitialPosition"] := R14
436 [-]: JMP       585          ; PC := 585
437 [-]: GETUPVAL  R13 U14      ; R13 := U14
438 [-]: TEST      R13 0        ; if not R13 then PC := 549
439 [-]: JMP       549          ; PC := 549
440 [-]: GETUPVAL  R13 U15      ; R13 := U15
441 [-]: GETUPVAL  R14 U14      ; R14 := U14
442 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
443 [-]: TEST      R13 0        ; if not R13 then PC := 585
444 [-]: JMP       585          ; PC := 585
445 [-]: GETUPVAL  R13 U11      ; R13 := U11
446 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["mShiftDown"]
447 [-]: TEST      R13 0        ; if not R13 then PC := 516
448 [-]: JMP       516          ; PC := 516
449 [-]: GETUPVAL  R13 U15      ; R13 := U15
450 [-]: GETUPVAL  R14 U16      ; R14 := U16
451 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
452 [-]: TEST      R13 0        ; if not R13 then PC := 585
453 [-]: JMP       585          ; PC := 585
454 [-]: GETUPVAL  R13 U7       ; R13 := U7
455 [-]: CALL      R13 1 2      ; R13 := R13()
456 [-]: GETUPVAL  R14 U15      ; R14 := U15
457 [-]: GETUPVAL  R15 U14      ; R15 := U14
458 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
459 [-]: SELF      R14 R14 K84  ; R15 := R14; R14 := R14["0x27D983EC"]
460 [-]: MOVE      R16 R13      ; R16 := R13
461 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
462 [-]: GETUPVAL  R15 U15      ; R15 := U15
463 [-]: GETUPVAL  R16 U14      ; R16 := U14
464 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
465 [-]: SELF      R15 R15 K85  ; R16 := R15; R15 := R15["0x178C31B9"]
466 [-]: CALL      R15 2 2      ; R15 := R15(R16)
467 [-]: GETUPVAL  R16 U17      ; R16 := U17
468 [-]: MOVE      R17 R15      ; R17 := R15
469 [-]: MOVE      R18 R14      ; R18 := R14
470 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
471 [-]: GETUPVAL  R17 U18      ; R17 := U18
472 [-]: EQ        0 R17 K12    ; if R17 ~= nil then PC := 476
473 [-]: JMP       476          ; PC := 476
474 [-]: MOVE      R16 R18      ; R16 := R18
475 [-]: JMP       585          ; PC := 585
476 [-]: GETUPVAL  R17 U18      ; R17 := U18
477 [-]: MOVE      R18 R16      ; R18 := R16
478 [-]: GETUPVAL  R19 U15      ; R19 := U15
479 [-]: GETUPVAL  R20 U16      ; R20 := U16
480 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
481 [-]: SELF      R19 R19 K85  ; R20 := R19; R19 := R19["0x178C31B9"]
482 [-]: CALL      R19 2 2      ; R19 := R19(R20)
483 [-]: LOADK     R20 K35      ; R20 := 1
484 [-]: LEN       R21 R19      ; R21 := # R19
485 [-]: LOADK     R22 K35      ; R22 := 1
486 [-]: FORPREP   R20 501      ; R20 -= R22; PC := 501
487 [-]: GETUPVAL  R24 U15      ; R24 := U15
488 [-]: GETUPVAL  R25 U16      ; R25 := U16
489 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
490 [-]: SELF      R24 R24 K86  ; R25 := R24; R24 := R24["0x96C67B0"]
491 [-]: GETTABLE  R26 R19 R23  ; R26 := R19[R23]
492 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
493 [-]: SETTABLE  R19 R23 R24  ; R19[R23] := R24
494 [-]: GETUPVAL  R24 U15      ; R24 := U15
495 [-]: GETUPVAL  R25 U14      ; R25 := U14
496 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
497 [-]: SELF      R24 R24 K84  ; R25 := R24; R24 := R24["0x27D983EC"]
498 [-]: GETTABLE  R26 R19 R23  ; R26 := R19[R23]
499 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
500 [-]: SETTABLE  R19 R23 R24  ; R19[R23] := R24
501 [-]: FORLOOP   R20 487      ; R20 += R22; if R20 <= R21 then begin PC := 487; R23 := R20 end
502 [-]: GETUPVAL  R24 U15      ; R24 := U15
503 [-]: GETUPVAL  R25 U14      ; R25 := U14
504 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
505 [-]: SELF      R24 R24 K87  ; R25 := R24; R24 := R24["0x75123FC4"]
506 [-]: MOVE      R26 R17      ; R26 := R17
507 [-]: MOVE      R27 R18      ; R27 := R18
508 [-]: MOVE      R28 R19      ; R28 := R19
509 [-]: CALL      R24 5 1      ; R24(R25,R26,R27,R28)
510 [-]: GETUPVAL  R24 U15      ; R24 := U15
511 [-]: GETUPVAL  R25 U14      ; R25 := U14
512 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
513 [-]: SELF      R24 R24 K88  ; R25 := R24; R24 := R24["0x1E436B2A"]
514 [-]: CALL      R24 2 1      ; R24(R25)
515 [-]: JMP       585          ; PC := 585
516 [-]: GETUPVAL  R24 U11      ; R24 := U11
517 [-]: GETTABLE  R24 R24 K68  ; R24 := R24["mAltDown"]
518 [-]: TEST      R24 0        ; if not R24 then PC := 532
519 [-]: JMP       532          ; PC := 532
520 [-]: GETUPVAL  R24 U15      ; R24 := U15
521 [-]: GETUPVAL  R25 U14      ; R25 := U14
522 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
523 [-]: SELF      R24 R24 K89  ; R25 := R24; R24 := R24["0x5BD03F6B"]
524 [-]: NEWTABLE  R26 0 0      ; R26 := {}
525 [-]: CALL      R24 3 1      ; R24(R25,R26)
526 [-]: GETUPVAL  R24 U15      ; R24 := U15
527 [-]: GETUPVAL  R25 U14      ; R25 := U14
528 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
529 [-]: SELF      R24 R24 K88  ; R25 := R24; R24 := R24["0x1E436B2A"]
530 [-]: CALL      R24 2 1      ; R24(R25)
531 [-]: JMP       585          ; PC := 585
532 [-]: GETUPVAL  R24 U11      ; R24 := U11
533 [-]: GETTABLE  R24 R24 K55  ; R24 := R24["mControlDown"]
534 [-]: TEST      R24 1        ; if R24 then PC := 585
535 [-]: JMP       585          ; PC := 585
536 [-]: GETUPVAL  R24 U15      ; R24 := U15
537 [-]: GETUPVAL  R25 U14      ; R25 := U14
538 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
539 [-]: SELF      R24 R24 K90  ; R25 := R24; R24 := R24["0xD856231D"]
540 [-]: GETUPVAL  R26 U7       ; R26 := U7
541 [-]: CALL      R26 1 0      ; R26,... := R26()
542 [-]: CALL      R24 0 1      ; R24(R25,...)
543 [-]: GETUPVAL  R24 U15      ; R24 := U15
544 [-]: GETUPVAL  R25 U14      ; R25 := U14
545 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
546 [-]: SELF      R24 R24 K88  ; R25 := R24; R24 := R24["0x1E436B2A"]
547 [-]: CALL      R24 2 1      ; R24(R25)
548 [-]: JMP       585          ; PC := 585
549 [-]: GETUPVAL  R24 U5       ; R24 := U5
550 [-]: GETTABLE  R24 R24 K49  ; R24 := R24["Node"]
551 [-]: TEST      R24 0        ; if not R24 then PC := 564
552 [-]: JMP       564          ; PC := 564
553 [-]: CLOSURE   R24 0        ; R24 := closure(Function #142.1)
554 [-]: GETUPVAL  R0 U5        ; R0 := U5
555 [-]: GETUPVAL  R0 U20       ; R0 := U20
556 [-]: GETUPVAL  R0 U21       ; R0 := U21
557 [-]: GETUPVAL  R0 U8        ; R0 := U8
558 [-]: GETUPVAL  R0 U22       ; R0 := U22
559 [-]: GETUPVAL  R0 U2        ; R0 := U2
560 [-]: GETUPVAL  R0 U23       ; R0 := U23
561 [-]: GETUPVAL  R0 U24       ; R0 := U24
562 [-]: MOVE      R24 R19      ; R24 := R19
563 [-]: JMP       585          ; PC := 585
564 [-]: GETUPVAL  R24 U5       ; R24 := U5
565 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["Region"]
566 [-]: TEST      R24 0        ; if not R24 then PC := 573
567 [-]: JMP       573          ; PC := 573
568 [-]: GETUPVAL  R24 U25      ; R24 := U25
569 [-]: GETUPVAL  R25 U5       ; R25 := U5
570 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["Region"]
571 [-]: CALL      R24 2 1      ; R24(R25)
572 [-]: JMP       585          ; PC := 585
573 [-]: GETUPVAL  R24 U26      ; R24 := U26
574 [-]: GETTABLE  R24 R24 K91  ; R24 := R24["IsVisible"]
575 [-]: TEST      R24 1        ; if R24 then PC := 585
576 [-]: JMP       585          ; PC := 585
577 [-]: GETGLOBAL R24 K22      ; R24 := Engine
578 [-]: GETTABLE  R24 R24 K92  ; R24 := R24["0x918EF8CE"]
579 [-]: CALL      R24 1 2      ; R24 := R24()
580 [-]: TEST      R24 1        ; if R24 then PC := 585
581 [-]: JMP       585          ; PC := 585
582 [-]: GETUPVAL  R24 U13      ; R24 := U13
583 [-]: SELF      R24 R24 K80  ; R25 := R24; R24 := R24["0x3AEEE6C2"]
584 [-]: CALL      R24 2 1      ; R24(R25)
585 [-]: MOVE      R24 R0       ; R24 := R0
586 [-]: RETURN    R24 2        ; return R24
587 [-]: RETURN    R0 1         ; return 


; Function #142.1:
;
; Name:            
; Defined at line: 6750
; #Upvalues:       8
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 62
  4 [-]: JMP       62           ; PC := 62
  5 [-]: GETUPVAL  R0 U0        ; R0 := U0
  6 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["isShortcut"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 36
  9 [-]: JMP       36           ; PC := 36
 10 [-]: GETUPVAL  R0 U0        ; R0 := U0
 11 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 13 [-]: TEST      R0 1         ; if R0 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: GETGLOBAL R0 K4        ; R0 := 0x400E7765
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["radialSector"]
 19 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mission"]
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["levelOverride"]
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETUPVAL  R0 U1        ; R0 := U1
 25 [-]: TEST      R0 0         ; if not R0 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETUPVAL  R1 U3        ; R1 := U3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Node"]
 31 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["targetRegion"]
 32 [-]: ADD       R2 R2 K9     ; R2 := R2 + 1
 33 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 34 [-]: CALL      R0 2 1       ; R0(R1)
 35 [-]: JMP       62           ; PC := 62
 36 [-]: GETUPVAL  R0 U0        ; R0 := U0
 37 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["Node"]
 38 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["locked"]
 39 [-]: TEST      R0 1         ; if R0 then PC := 62
 40 [-]: JMP       62           ; PC := 62
 41 [-]: GETUPVAL  R0 U5        ; R0 := U5
 42 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 43 [-]: GETGLOBAL R1 K11       ; R1 := clickAndHoldSound
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: MOVE      R0 R4        ; R0 := R4
 46 [-]: GETUPVAL  R0 U6        ; R0 := U6
 47 [-]: CALL      R0 1 1       ; R0()
 48 [-]: GETUPVAL  R0 U5        ; R0 := U5
 49 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 50 [-]: GETGLOBAL R1 K12       ; R1 := _G
 51 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["UISound_Select"]
 52 [-]: CALL      R0 2 1       ; R0(R1)
 53 [-]: GETUPVAL  R0 U5        ; R0 := U5
 54 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["0x25992394"]
 55 [-]: GETGLOBAL R1 K12       ; R1 := _G
 56 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["UISound_ButtonSelect"]
 57 [-]: CALL      R0 2 1       ; R0(R1)
 58 [-]: GETUPVAL  R0 U7        ; R0 := U7
 59 [-]: GETUPVAL  R1 U0        ; R1 := U0
 60 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["Node"]
 61 [-]: SETTABLE  R0 K0 R1     ; R0["Node"] := R1
 62 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 6775
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["sorty"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["sorty"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: TEST      R2 1         ; if R2 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["sorty"]
 10 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["sorty"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["x"]
 14 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["x"]
 15 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 6785
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["sortx"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["sortx"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: MOVE      R2 R1        ; R2 := R1
  7 [-]: TEST      R2 1         ; if R2 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["sortx"]
 10 [-]: GETTABLE  R4 R1 K0     ; R4 := R1["sortx"]
 11 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["y"]
 14 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["y"]
 15 [-]: LT        1 R3 R4      ; if R3 < R4 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: MOVE      R2 R1        ; R2 := R1
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 6795
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U2        ; R0 := U2
  9 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0["0xD963824A"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 6805
; #Upvalues:       15
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 1         ; if R0 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["DioOpen"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R0 K1        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["MouseInWorldStateWindow"]
 11 [-]: TEST      R0 1         ; if R0 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["MouseInChatArea"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R0 U2        ; R0 := U2
 19 [-]: TEST      R0 0         ; if not R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U3        ; R0 := U3
 22 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0["0x3AEEE6C2"]
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: JMP       113          ; PC := 113
 25 [-]: GETUPVAL  R0 U4        ; R0 := U4
 26 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mTargetVal"]
 27 [-]: GETUPVAL  R1 U5        ; R1 := U5
 28 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["STARTING_ZOOM"]
 29 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 113
 30 [-]: JMP       113          ; PC := 113
 31 [-]: GETUPVAL  R0 U3        ; R0 := U3
 32 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 33 [-]: LOADK     R2 K8        ; R2 := "x"
 34 [-]: LOADK     R3 K9        ; R3 := 0.5
 35 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 36 [-]: GETUPVAL  R0 U3        ; R0 := U3
 37 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0["0xCE468565"]
 38 [-]: LOADK     R2 K10       ; R2 := "y"
 39 [-]: LOADK     R3 K9        ; R3 := 0.5
 40 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 41 [-]: GETUPVAL  R0 U4        ; R0 := U4
 42 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0["0xDB349344"]
 43 [-]: GETUPVAL  R2 U5        ; R2 := U5
 44 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["STARTING_ZOOM"]
 45 [-]: CALL      R0 3 1       ; R0(R1,R2)
 46 [-]: GETUPVAL  R0 U7        ; R0 := U7
 47 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["0xF81722A2"]
 48 [-]: GETUPVAL  R1 U8        ; R1 := U8
 49 [-]: LOADK     R2 K13       ; R2 := 1
 50 [-]: LOADK     R3 K14       ; R3 := 2
 51 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 52 [-]: MOVE      R0 R6        ; R0 := R6
 53 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 54 [-]: GETUPVAL  R1 U9        ; R1 := U9
 55 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 56 [-]: TEST      R0 1         ; if R0 then PC := 83
 57 [-]: JMP       83           ; PC := 83
 58 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 59 [-]: GETUPVAL  R1 U9        ; R1 := U9
 60 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["instance"]
 61 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 62 [-]: TEST      R0 1         ; if R0 then PC := 83
 63 [-]: JMP       83           ; PC := 83
 64 [-]: GETGLOBAL R0 K15       ; R0 := 0x400E7765
 65 [-]: GETUPVAL  R1 U9        ; R1 := U9
 66 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["zoomedInEffects"]
 67 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 68 [-]: TEST      R0 1         ; if R0 then PC := 83
 69 [-]: JMP       83           ; PC := 83
 70 [-]: GETUPVAL  R0 U9        ; R0 := U9
 71 [-]: GETTABLE  R0 R0 K16    ; R0 := R0["instance"]
 72 [-]: SELF      R0 R0 K18    ; R1 := R0; R0 := R0["0x9F1DC568"]
 73 [-]: GETUPVAL  R2 U9        ; R2 := U9
 74 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["zoomedInEffects"]
 75 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 76 [-]: GETGLOBAL R1 K15       ; R1 := 0x400E7765
 77 [-]: MOVE      R2 R0        ; R2 := R0
 78 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 79 [-]: TEST      R1 1         ; if R1 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: SELF      R1 R0 K19    ; R2 := R0; R1 := R0["0xD4C2743F"]
 82 [-]: CALL      R1 2 1       ; R1(R2)
 83 [-]: LOADNIL   R1 R1        ; R1 := nil
 84 [-]: MOVE      R1 R9        ; R1 := R9
 85 [-]: LOADNIL   R1 R1        ; R1 := nil
 86 [-]: MOVE      R1 R10       ; R1 := R10
 87 [-]: GETUPVAL  R1 U11       ; R1 := U11
 88 [-]: CALL      R1 1 1       ; R1()
 89 [-]: GETUPVAL  R1 U7        ; R1 := U7
 90 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["0x25992394"]
 91 [-]: GETGLOBAL R2 K21       ; R2 := zoomOutSound
 92 [-]: CALL      R1 2 1       ; R1(R2)
 93 [-]: GETUPVAL  R1 U12       ; R1 := U12
 94 [-]: GETTABLE  R1 R1 K13    ; R1 := R1[1]
 95 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
 96 [-]: GETUPVAL  R3 U13       ; R3 := U13
 97 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["red"]
 98 [-]: CALL      R1 3 1       ; R1(R2,R3)
 99 [-]: GETUPVAL  R1 U12       ; R1 := U12
100 [-]: GETTABLE  R1 R1 K14    ; R1 := R1[2]
101 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
102 [-]: GETUPVAL  R3 U13       ; R3 := U13
103 [-]: GETTABLE  R3 R3 K23    ; R3 := R3["green"]
104 [-]: CALL      R1 3 1       ; R1(R2,R3)
105 [-]: GETUPVAL  R1 U12       ; R1 := U12
106 [-]: GETTABLE  R1 R1 K24    ; R1 := R1[3]
107 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1["0xDB349344"]
108 [-]: GETUPVAL  R3 U13       ; R3 := U13
109 [-]: GETTABLE  R3 R3 K25    ; R3 := R3["blue"]
110 [-]: CALL      R1 3 1       ; R1(R2,R3)
111 [-]: GETUPVAL  R1 U14       ; R1 := U14
112 [-]: CALL      R1 1 1       ; R1()
113 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 6843
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 6847
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mMovie
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0["0x458F27A9"]
  3 [-]: LOADK     R2 K2        ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 6851
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: TEST      R2 1         ; if R2 then PC := 127
  3 [-]: JMP       127          ; PC := 127
  4 [-]: GETGLOBAL R2 K0        ; R2 := _T
  5 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["MouseInWorldStateWindow"]
  6 [-]: TEST      R2 1         ; if R2 then PC := 127
  7 [-]: JMP       127          ; PC := 127
  8 [-]: GETGLOBAL R2 K0        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["MouseInChatArea"]
 10 [-]: TEST      R2 1         ; if R2 then PC := 127
 11 [-]: JMP       127          ; PC := 127
 12 [-]: GETGLOBAL R2 K0        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["JunctionTasksUIRadialSector"]
 14 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 127
 15 [-]: JMP       127          ; PC := 127
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["MIN_ZOOM"]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["MAX_ZOOM"]
 20 [-]: GETUPVAL  R4 U1        ; R4 := U1
 21 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["MAX_ZOOM"]
 22 [-]: GETUPVAL  R5 U2        ; R5 := U2
 23 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTargetVal"]
 24 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 25 [-]: DIV       R4 R4 K8     ; R4 := R4 / 2
 26 [-]: GETGLOBAL R5 K9        ; R5 := Engine
 27 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["0x9490FE70"]
 28 [-]: CALL      R5 1 2       ; R5 := R5()
 29 [-]: TEST      R5 0         ; if not R5 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: DIV       R4 R4 K11    ; R4 := R4 / 10
 32 [-]: LT        0 R4 K12     ; if R4 >= 0.050000000745058 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 35 [-]: GETUPVAL  R5 U3        ; R5 := U3
 36 [-]: GETUPVAL  R6 U4        ; R6 := U4
 37 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["EDIT_REGION_FRAMING"]
 38 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R4 K12       ; R4 := 0.050000000745058
 41 [-]: LOADK     R2 K14       ; R2 := -999
 42 [-]: LOADK     R3 K15       ; R3 := 999
 43 [-]: GETGLOBAL R5 K16       ; R5 := 0xF595ADDE
 44 [-]: MOVE      R6 R1        ; R6 := R1
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: LT        0 R5 K17     ; if R5 >= 0 then PC := 98
 47 [-]: JMP       98           ; PC := 98
 48 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 49 [-]: GETUPVAL  R6 U5        ; R6 := U5
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 87
 52 [-]: JMP       87           ; PC := 87
 53 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
 54 [-]: GETUPVAL  R6 U5        ; R6 := U5
 55 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: TEST      R5 1         ; if R5 then PC := 87
 58 [-]: JMP       87           ; PC := 87
 59 [-]: GETUPVAL  R5 U5        ; R5 := U5
 60 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["Region"]
 61 [-]: GETUPVAL  R6 U6        ; R6 := U6
 62 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 87
 63 [-]: JMP       87           ; PC := 87
 64 [-]: GETUPVAL  R5 U7        ; R5 := U7
 65 [-]: GETUPVAL  R6 U8        ; R6 := U8
 66 [-]: GETTABLE  R6 R6 K20    ; R6 := R6["0xB57E56DF"]
 67 [-]: GETGLOBAL R7 K21       ; R7 := mMovie
 68 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7["0xF595D5E1"]
 69 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 70 [-]: DIV       R7 R7 K8     ; R7 := R7 / 2
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: GETUPVAL  R7 U8        ; R7 := U8
 73 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["0xB57E56DF"]
 74 [-]: GETGLOBAL R8 K21       ; R8 := mMovie
 75 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8["0xEE069D65"]
 76 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 77 [-]: DIV       R8 R8 K8     ; R8 := R8 / 2
 78 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 79 [-]: CALL      R5 0 1       ; R5(R6,...)
 80 [-]: GETUPVAL  R5 U9        ; R5 := U9
 81 [-]: GETUPVAL  R6 U5        ; R6 := U5
 82 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["Region"]
 83 [-]: LOADNIL   R7 R7        ; R7 := nil
 84 [-]: MOVE      R8 R1        ; R8 := R1
 85 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 86 [-]: RETURN    R0 1         ; return 
 87 [-]: GETUPVAL  R5 U2        ; R5 := U2
 88 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0xDB349344"]
 89 [-]: GETGLOBAL R7 K25       ; R7 := 0x6374FD98
 90 [-]: GETUPVAL  R8 U2        ; R8 := U2
 91 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mTargetVal"]
 92 [-]: ADD       R8 R8 R4     ; R8 := R8 + R4
 93 [-]: MOVE      R9 R2        ; R9 := R2
 94 [-]: MOVE      R10 R3       ; R10 := R3
 95 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 96 [-]: CALL      R5 0 1       ; R5(R6,...)
 97 [-]: JMP       127          ; PC := 127
 98 [-]: GETGLOBAL R5 K16       ; R5 := 0xF595ADDE
 99 [-]: MOVE      R6 R1        ; R6 := R1
100 [-]: CALL      R5 2 2       ; R5 := R5(R6)
101 [-]: LT        0 K17 R5     ; if 0 >= R5 then PC := 127
102 [-]: JMP       127          ; PC := 127
103 [-]: GETUPVAL  R5 U2        ; R5 := U2
104 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0xDB349344"]
105 [-]: GETGLOBAL R7 K25       ; R7 := 0x6374FD98
106 [-]: GETUPVAL  R8 U2        ; R8 := U2
107 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mTargetVal"]
108 [-]: SUB       R8 R8 R4     ; R8 := R8 - R4
109 [-]: MOVE      R9 R2        ; R9 := R2
110 [-]: MOVE      R10 R3       ; R10 := R3
111 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
112 [-]: CALL      R5 0 1       ; R5(R6,...)
113 [-]: GETGLOBAL R5 K18       ; R5 := 0x400E7765
114 [-]: GETUPVAL  R6 U6        ; R6 := U6
115 [-]: CALL      R5 2 2       ; R5 := R5(R6)
116 [-]: TEST      R5 1         ; if R5 then PC := 127
117 [-]: JMP       127          ; PC := 127
118 [-]: GETUPVAL  R5 U2        ; R5 := U2
119 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTargetVal"]
120 [-]: GETUPVAL  R6 U1        ; R6 := U1
121 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["ZOOM_OUT_THRESHOLD"]
122 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 127
123 [-]: JMP       127          ; PC := 127
124 [-]: GETUPVAL  R5 U10       ; R5 := U10
125 [-]: MOVE      R6 R0        ; R6 := R0
126 [-]: CALL      R5 2 1       ; R5(R6)
127 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 6883
; #Upvalues:       19
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: TEST      R3 0         ; if not R3 then PC := 373
  3 [-]: JMP       373          ; PC := 373
  4 [-]: GETGLOBAL R3 K0        ; R3 := gFlashMgr
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3["0x616DD092"]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["0xBCEEAD81"]
  8 [-]: CALL      R5 1 0       ; R5,... := R5()
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3["0x1AA40FBC"]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: EQ        0 R4 K5      ; if R4 ~= "MessageBox" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: EQ        0 R1 K6      ; if R1 ~= "EN_LSHIFT" then PC := 37
 21 [-]: JMP       37           ; PC := 37
 22 [-]: GETUPVAL  R4 U2        ; R4 := U2
 23 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: SETTABLE  R4 K7 R5     ; R4["mShiftDown"] := R5
 28 [-]: GETUPVAL  R4 U3        ; R4 := U3
 29 [-]: GETUPVAL  R5 U4        ; R5 := U4
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 31 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETUPVAL  R4 U5        ; R4 := U5
 34 [-]: CALL      R4 1 1       ; R4()
 35 [-]: GETUPVAL  R4 U6        ; R4 := U6
 36 [-]: CALL      R4 1 1       ; R4()
 37 [-]: EQ        0 R1 K10     ; if R1 ~= "EN_LCONTROL" then PC := 54
 38 [-]: JMP       54           ; PC := 54
 39 [-]: GETUPVAL  R4 U2        ; R4 := U2
 40 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: MOVE      R5 R1        ; R5 := R1
 44 [-]: SETTABLE  R4 K11 R5    ; R4["mControlDown"] := R5
 45 [-]: GETUPVAL  R4 U3        ; R4 := U3
 46 [-]: GETUPVAL  R5 U4        ; R5 := U4
 47 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 48 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: GETUPVAL  R4 U5        ; R4 := U5
 51 [-]: CALL      R4 1 1       ; R4()
 52 [-]: GETUPVAL  R4 U6        ; R4 := U6
 53 [-]: CALL      R4 1 1       ; R4()
 54 [-]: EQ        0 R1 K12     ; if R1 ~= "EN_LALT" then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: EQ        1 R2 K8      ; if R2 == "1" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R5 R0        ; R5 := R0
 60 [-]: MOVE      R5 R1        ; R5 := R1
 61 [-]: SETTABLE  R4 K13 R5    ; R4["mAltDown"] := R5
 62 [-]: GETUPVAL  R4 U3        ; R4 := U3
 63 [-]: GETUPVAL  R5 U4        ; R5 := U4
 64 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["EDIT_NODE_DECOS"]
 65 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: GETUPVAL  R4 U5        ; R4 := U5
 68 [-]: CALL      R4 1 1       ; R4()
 69 [-]: GETUPVAL  R4 U6        ; R4 := U6
 70 [-]: CALL      R4 1 1       ; R4()
 71 [-]: EQ        0 R1 K14     ; if R1 ~= "EN_E" then PC := 88
 72 [-]: JMP       88           ; PC := 88
 73 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 88
 74 [-]: JMP       88           ; PC := 88
 75 [-]: GETUPVAL  R4 U7        ; R4 := U7
 76 [-]: GETUPVAL  R5 U1        ; R5 := U1
 77 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["0x7C43280B"]
 78 [-]: GETUPVAL  R6 U3        ; R6 := U3
 79 [-]: GETUPVAL  R7 U1        ; R7 := U1
 80 [-]: GETTABLE  R7 R7 K16    ; R7 := R7["INCREMENT"]
 81 [-]: LOADK     R8 K17       ; R8 := 1
 82 [-]: GETUPVAL  R9 U4        ; R9 := U4
 83 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["MAX_VALUE"]
 84 [-]: SUB       R9 R9 K17    ; R9 := R9 - 1
 85 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 86 [-]: CALL      R4 0 1       ; R4(R5,...)
 87 [-]: JMP       103          ; PC := 103
 88 [-]: EQ        0 R1 K19     ; if R1 ~= "EN_S" then PC := 103
 89 [-]: JMP       103          ; PC := 103
 90 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 103
 91 [-]: JMP       103          ; PC := 103
 92 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
 93 [-]: GETUPVAL  R5 U8        ; R5 := U8
 94 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 95 [-]: TEST      R4 1         ; if R4 then PC := 103
 96 [-]: JMP       103          ; PC := 103
 97 [-]: GETUPVAL  R4 U8        ; R4 := U8
 98 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4["0xEF081AD8"]
 99 [-]: CALL      R4 2 1       ; R4(R5)
100 [-]: GETGLOBAL R4 K21       ; R4 := 0xE40A882D
101 [-]: LOADK     R5 K22       ; R5 := "SolarMap Serialized"
102 [-]: CALL      R4 2 1       ; R4(R5)
103 [-]: EQ        0 R1 K23     ; if R1 ~= "EN_A" then PC := 171
104 [-]: JMP       171          ; PC := 171
105 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 171
106 [-]: JMP       171          ; PC := 171
107 [-]: GETUPVAL  R4 U3        ; R4 := U3
108 [-]: GETUPVAL  R5 U4        ; R5 := U4
109 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
110 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 171
111 [-]: JMP       171          ; PC := 171
112 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
113 [-]: GETUPVAL  R5 U9        ; R5 := U9
114 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
115 [-]: CALL      R4 2 2       ; R4 := R4(R5)
116 [-]: TEST      R4 1         ; if R4 then PC := 286
117 [-]: JMP       286          ; PC := 286
118 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
119 [-]: GETUPVAL  R5 U9        ; R5 := U9
120 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
121 [-]: CALL      R4 2 2       ; R4 := R4(R5)
122 [-]: TEST      R4 1         ; if R4 then PC := 286
123 [-]: JMP       286          ; PC := 286
124 [-]: GETUPVAL  R4 U10       ; R4 := U10
125 [-]: GETUPVAL  R5 U10       ; R5 := U10
126 [-]: LEN       R5 R5        ; R5 := # R5
127 [-]: NEWTABLE  R6 0 3       ; R6 := {}
128 [-]: GETUPVAL  R7 U9        ; R7 := U9
129 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
130 [-]: SETTABLE  R6 K27 R7    ; R6["NodeA"] := R7
131 [-]: GETUPVAL  R7 U9        ; R7 := U9
132 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
133 [-]: SETTABLE  R6 K28 R7    ; R6["NodeB"] := R7
134 [-]: GETUPVAL  R7 U9        ; R7 := U9
135 [-]: GETTABLE  R7 R7 K25    ; R7 := R7["mEdgeNode1"]
136 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
137 [-]: TEST      R7 0         ; if not R7 then PC := 142
138 [-]: JMP       142          ; PC := 142
139 [-]: GETUPVAL  R7 U9        ; R7 := U9
140 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
141 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["isShortcut"]
142 [-]: SETTABLE  R6 K29 R7    ; R6["IsShortcut"] := R7
143 [-]: SETTABLE  R4 R5 R6     ; R4[R5] := R6
144 [-]: GETUPVAL  R4 U8        ; R4 := U8
145 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0x2337A98F"]
146 [-]: GETUPVAL  R6 U9        ; R6 := U9
147 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mEdgeNode1"]
148 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["radialSector"]
149 [-]: GETUPVAL  R7 U9        ; R7 := U9
150 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["mEdgeNode2"]
151 [-]: GETTABLE  R7 R7 K32    ; R7 := R7["radialSector"]
152 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
153 [-]: GETUPVAL  R4 U8        ; R4 := U8
154 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x113DAAED"]
155 [-]: CALL      R4 2 2       ; R4 := R4(R5)
156 [-]: MOVE      R4 R11       ; R4 := R11
157 [-]: GETUPVAL  R4 U9        ; R4 := U9
158 [-]: SETTABLE  R4 K25 K34   ; R4["mEdgeNode1"] := nil
159 [-]: GETUPVAL  R4 U9        ; R4 := U9
160 [-]: SETTABLE  R4 K26 K34   ; R4["mEdgeNode2"] := nil
161 [-]: GETGLOBAL R4 K35       ; R4 := mMovie
162 [-]: SELF      R4 R4 K36    ; R5 := R4; R4 := R4["0x1C19D966"]
163 [-]: LOADK     R6 K37       ; R6 := "ScreenModeLabel"
164 [-]: LOADK     R7 K38       ; R7 := "text"
165 [-]: GETUPVAL  R8 U12       ; R8 := U12
166 [-]: CALL      R8 1 0       ; R8,... := R8()
167 [-]: CALL      R4 0 1       ; R4(R5,...)
168 [-]: GETUPVAL  R4 U13       ; R4 := U13
169 [-]: CALL      R4 1 1       ; R4()
170 [-]: JMP       286          ; PC := 286
171 [-]: EQ        0 R1 K39     ; if R1 ~= "EN_D" then PC := 269
172 [-]: JMP       269          ; PC := 269
173 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 269
174 [-]: JMP       269          ; PC := 269
175 [-]: GETUPVAL  R4 U3        ; R4 := U3
176 [-]: GETUPVAL  R5 U4        ; R5 := U4
177 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["EDIT_EDGES"]
178 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 269
179 [-]: JMP       269          ; PC := 269
180 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
181 [-]: GETUPVAL  R5 U9        ; R5 := U9
182 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mEdgeNode1"]
183 [-]: CALL      R4 2 2       ; R4 := R4(R5)
184 [-]: TEST      R4 1         ; if R4 then PC := 286
185 [-]: JMP       286          ; PC := 286
186 [-]: GETGLOBAL R4 K3        ; R4 := 0x400E7765
187 [-]: GETUPVAL  R5 U9        ; R5 := U9
188 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["mEdgeNode2"]
189 [-]: CALL      R4 2 2       ; R4 := R4(R5)
190 [-]: TEST      R4 1         ; if R4 then PC := 286
191 [-]: JMP       286          ; PC := 286
192 [-]: LOADK     R4 K17       ; R4 := 1
193 [-]: GETUPVAL  R5 U10       ; R5 := U10
194 [-]: LEN       R5 R5        ; R5 := # R5
195 [-]: LOADK     R6 K17       ; R6 := 1
196 [-]: FORPREP   R4 241       ; R4 -= R6; PC := 241
197 [-]: GETUPVAL  R8 U10       ; R8 := U10
198 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
199 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
200 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
201 [-]: GETUPVAL  R10 U9       ; R10 := U9
202 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
203 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
204 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
205 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 215
206 [-]: JMP       215          ; PC := 215
207 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
208 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
209 [-]: GETUPVAL  R10 U9       ; R10 := U9
210 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
211 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
212 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
213 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 231
214 [-]: JMP       231          ; PC := 231
215 [-]: GETTABLE  R9 R8 K28    ; R9 := R8["NodeB"]
216 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
217 [-]: GETUPVAL  R10 U9       ; R10 := U9
218 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
219 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
220 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
221 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
222 [-]: JMP       241          ; PC := 241
223 [-]: GETTABLE  R9 R8 K27    ; R9 := R8["NodeA"]
224 [-]: GETTABLE  R9 R9 K40    ; R9 := R9["name"]
225 [-]: GETUPVAL  R10 U9       ; R10 := U9
226 [-]: GETTABLE  R10 R10 K26  ; R10 := R10["mEdgeNode2"]
227 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["radialSector"]
228 [-]: GETTABLE  R10 R10 K40  ; R10 := R10["name"]
229 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 241
230 [-]: JMP       241          ; PC := 241
231 [-]: GETGLOBAL R9 K41       ; R9 := gBackgroundRegion
232 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9["0x9B0A3887"]
233 [-]: GETTABLE  R11 R8 K43   ; R11 := R8["Instance"]
234 [-]: CALL      R9 3 1       ; R9(R10,R11)
235 [-]: GETGLOBAL R9 K44       ; R9 := table
236 [-]: GETTABLE  R9 R9 K45    ; R9 := R9["0xCDB1FD5E"]
237 [-]: GETUPVAL  R10 U10      ; R10 := U10
238 [-]: MOVE      R11 R7       ; R11 := R7
239 [-]: CALL      R9 3 1       ; R9(R10,R11)
240 [-]: JMP       242          ; PC := 242
241 [-]: FORLOOP   R4 197       ; R4 += R6; if R4 <= R5 then begin PC := 197; R7 := R4 end
242 [-]: GETUPVAL  R9 U8        ; R9 := U8
243 [-]: SELF      R9 R9 K46    ; R10 := R9; R9 := R9["0x1EE7613D"]
244 [-]: GETUPVAL  R11 U9       ; R11 := U9
245 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["mEdgeNode1"]
246 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["radialSector"]
247 [-]: GETUPVAL  R12 U9       ; R12 := U9
248 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["mEdgeNode2"]
249 [-]: GETTABLE  R12 R12 K32  ; R12 := R12["radialSector"]
250 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
251 [-]: GETUPVAL  R9 U8        ; R9 := U8
252 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9["0x113DAAED"]
253 [-]: CALL      R9 2 2       ; R9 := R9(R10)
254 [-]: MOVE      R9 R11       ; R9 := R11
255 [-]: GETUPVAL  R9 U9        ; R9 := U9
256 [-]: SETTABLE  R9 K25 K34   ; R9["mEdgeNode1"] := nil
257 [-]: GETUPVAL  R9 U9        ; R9 := U9
258 [-]: SETTABLE  R9 K26 K34   ; R9["mEdgeNode2"] := nil
259 [-]: GETGLOBAL R9 K35       ; R9 := mMovie
260 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
261 [-]: LOADK     R11 K37      ; R11 := "ScreenModeLabel"
262 [-]: LOADK     R12 K38      ; R12 := "text"
263 [-]: GETUPVAL  R13 U12      ; R13 := U12
264 [-]: CALL      R13 1 0      ; R13,... := R13()
265 [-]: CALL      R9 0 1       ; R9(R10,...)
266 [-]: GETUPVAL  R9 U13       ; R9 := U13
267 [-]: CALL      R9 1 1       ; R9()
268 [-]: JMP       286          ; PC := 286
269 [-]: EQ        0 R1 K47     ; if R1 ~= "EN_C" then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 286
272 [-]: JMP       286          ; PC := 286
273 [-]: GETUPVAL  R9 U3        ; R9 := U3
274 [-]: GETUPVAL  R10 U4       ; R10 := U4
275 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["EDIT_EDGES"]
276 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 286
277 [-]: JMP       286          ; PC := 286
278 [-]: GETGLOBAL R9 K3        ; R9 := 0x400E7765
279 [-]: GETUPVAL  R10 U9       ; R10 := U9
280 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mEdgeNode1"]
281 [-]: CALL      R9 2 2       ; R9 := R9(R10)
282 [-]: TEST      R9 1         ; if R9 then PC := 286
283 [-]: JMP       286          ; PC := 286
284 [-]: GETUPVAL  R9 U13       ; R9 := U13
285 [-]: CALL      R9 1 1       ; R9()
286 [-]: EQ        0 R1 K48     ; if R1 ~= "EN_R" then PC := 315
287 [-]: JMP       315          ; PC := 315
288 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 315
289 [-]: JMP       315          ; PC := 315
290 [-]: GETUPVAL  R9 U3        ; R9 := U3
291 [-]: GETUPVAL  R10 U4       ; R10 := U4
292 [-]: GETTABLE  R10 R10 K49  ; R10 := R10["EDIT_REGION_FRAMING"]
293 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 315
294 [-]: JMP       315          ; PC := 315
295 [-]: GETUPVAL  R9 U9        ; R9 := U9
296 [-]: GETUPVAL  R10 U1       ; R10 := U1
297 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["0x7C43280B"]
298 [-]: GETUPVAL  R11 U9       ; R11 := U9
299 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
300 [-]: GETUPVAL  R12 U1       ; R12 := U1
301 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["INCREMENT"]
302 [-]: LOADK     R13 K17      ; R13 := 1
303 [-]: GETUPVAL  R14 U14      ; R14 := U14
304 [-]: LEN       R14 R14      ; R14 := # R14
305 [-]: CALL      R10 5 2      ; R10 := R10(R11,R12,R13,R14)
306 [-]: SETTABLE  R9 K50 R10   ; R9["mFramingRegion"] := R10
307 [-]: GETUPVAL  R9 U15       ; R9 := U15
308 [-]: GETUPVAL  R10 U14      ; R10 := U14
309 [-]: GETUPVAL  R11 U9       ; R11 := U9
310 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["mFramingRegion"]
311 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
312 [-]: CALL      R9 2 1       ; R9(R10)
313 [-]: GETUPVAL  R9 U16       ; R9 := U16
314 [-]: CALL      R9 1 1       ; R9()
315 [-]: EQ        0 R1 K51     ; if R1 ~= "EN_L" then PC := 329
316 [-]: JMP       329          ; PC := 329
317 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 329
318 [-]: JMP       329          ; PC := 329
319 [-]: GETUPVAL  R9 U17       ; R9 := U17
320 [-]: MOVE      R9 R9        ; R9 := R9
321 [-]: MOVE      R9 R17       ; R9 := R17
322 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
323 [-]: LOADK     R10 K52      ; R10 := "Visible Tags:"
324 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
325 [-]: GETUPVAL  R12 U17      ; R12 := U17
326 [-]: CALL      R11 2 2      ; R11 := R11(R12)
327 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
328 [-]: CALL      R9 2 1       ; R9(R10)
329 [-]: EQ        0 R1 K54     ; if R1 ~= "EN_U" then PC := 373
330 [-]: JMP       373          ; PC := 373
331 [-]: EQ        0 R2 K8      ; if R2 ~= "1" then PC := 373
332 [-]: JMP       373          ; PC := 373
333 [-]: GETGLOBAL R9 K55       ; R9 := _T
334 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
335 [-]: EQ        0 R9 K34     ; if R9 ~= nil then PC := 339
336 [-]: JMP       339          ; PC := 339
337 [-]: GETGLOBAL R9 K55       ; R9 := _T
338 [-]: SETTABLE  R9 K56 K57   ; R9["MAP_HideExtraUI"] := "0x0"
339 [-]: GETGLOBAL R9 K55       ; R9 := _T
340 [-]: GETGLOBAL R10 K55      ; R10 := _T
341 [-]: GETTABLE  R10 R10 K56  ; R10 := R10["MAP_HideExtraUI"]
342 [-]: MOVE      R10 R10      ; R10 := R10
343 [-]: SETTABLE  R9 K56 R10   ; R9["MAP_HideExtraUI"] := R10
344 [-]: GETGLOBAL R9 K21       ; R9 := 0xE40A882D
345 [-]: LOADK     R10 K58      ; R10 := "Visible Extra UI:"
346 [-]: GETGLOBAL R11 K53      ; R11 := 0x9FAED6BC
347 [-]: GETGLOBAL R12 K55      ; R12 := _T
348 [-]: GETTABLE  R12 R12 K56  ; R12 := R12["MAP_HideExtraUI"]
349 [-]: CALL      R11 2 2      ; R11 := R11(R12)
350 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
351 [-]: CALL      R9 2 1       ; R9(R10)
352 [-]: GETGLOBAL R9 K55       ; R9 := _T
353 [-]: GETTABLE  R9 R9 K56    ; R9 := R9["MAP_HideExtraUI"]
354 [-]: TEST      R9 0         ; if not R9 then PC := 360
355 [-]: JMP       360          ; PC := 360
356 [-]: GETGLOBAL R9 K55       ; R9 := _T
357 [-]: GETTABLE  R9 R9 K59    ; R9 := R9["0x45CBC39B"]
358 [-]: CALL      R9 1 1       ; R9()
359 [-]: JMP       364          ; PC := 364
360 [-]: GETGLOBAL R9 K55       ; R9 := _T
361 [-]: GETTABLE  R9 R9 K60    ; R9 := R9["0x8ED0D55D"]
362 [-]: MOVE      R10 R1       ; R10 := R1
363 [-]: CALL      R9 2 1       ; R9(R10)
364 [-]: GETUPVAL  R9 U18       ; R9 := U18
365 [-]: GETTABLE  R9 R9 K61    ; R9 := R9["Movie"]
366 [-]: SELF      R9 R9 K36    ; R10 := R9; R9 := R9["0x1C19D966"]
367 [-]: LOADK     R11 K62      ; R11 := "_root"
368 [-]: LOADK     R12 K63      ; R12 := "_visible"
369 [-]: GETGLOBAL R13 K55      ; R13 := _T
370 [-]: GETTABLE  R13 R13 K56  ; R13 := R13["MAP_HideExtraUI"]
371 [-]: MOVE      R13 R13      ; R13 := R13
372 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
373 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 6989
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 6993
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xF595ADDE
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  5 [-]: CALL      R1 0 1       ; R1(R2,...)
  6 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 6997
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: LE        0 R1 R2      ; if R1 > R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xF595ADDE
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: MOVE      R0 R1        ; R0 := R1
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x400E7765
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 17
 16 [-]: JMP       17           ; PC := 17
 17 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 7008
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := mMovie
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1["0x1C19D966"]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: LOADK     R4 K3        ; R4 := "noMenuSelection"
  5 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: EQ        1 R0 K4      ; if R0 == "true" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: SETTABLE  R1 K5 R2     ; R1["Open"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 7013
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        1 R0 K1      ; if R0 == "true" then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: SETTABLE  R1 K0 R2     ; R1["DioOpen"] := R2
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 7019
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 1       ; R4()
  3 [-]: GETUPVAL  R4 U1        ; R4 := U1
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R4 2 1       ; R4(R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 7025
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 7029
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETGLOBAL R1 K1        ; R1 := gRegion
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x3E2F6BF"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x28609C89"]
 15 [-]: GETGLOBAL R3 K4        ; R3 := 0xEC274B1A
 16 [-]: LOADK     R4 K5        ; R4 := "InstantKneel"
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 7038
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 R0     ; R1["mTrigger"] := R0
  3 [-]: MOVE      R1 R1        ; R1 := R1
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 7043
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 7047
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xECFDD17
  6 [-]: GETUPVAL  R1 U2        ; R1 := U2
  7 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  8 [-]: JMP       63           ; PC := 63
  9 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["isShortcut"]
 10 [-]: TEST      R5 1         ; if R5 then PC := 63
 11 [-]: JMP       63           ; PC := 63
 12 [-]: GETTABLE  R5 R4 K2     ; R5 := R4["isJunction"]
 13 [-]: TEST      R5 1         ; if R5 then PC := 63
 14 [-]: JMP       63           ; PC := 63
 15 [-]: GETTABLE  R5 R4 K3     ; R5 := R4["special"]
 16 [-]: TEST      R5 1         ; if R5 then PC := 58
 17 [-]: JMP       58           ; PC := 58
 18 [-]: GETGLOBAL R5 K4        ; R5 := _T
 19 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["CachedSortieMissions"]
 20 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 21 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 22 [-]: JMP       58           ; PC := 58
 23 [-]: GETGLOBAL R5 K4        ; R5 := _T
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["CachedActiveMissions"]
 25 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 26 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 27 [-]: JMP       58           ; PC := 58
 28 [-]: GETGLOBAL R5 K4        ; R5 := _T
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["CachedAlerts"]
 30 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 31 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 32 [-]: JMP       58           ; PC := 58
 33 [-]: GETGLOBAL R5 K4        ; R5 := _T
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["CachedInvasionInfo"]
 35 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 36 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 37 [-]: JMP       58           ; PC := 58
 38 [-]: GETGLOBAL R5 K10       ; R5 := _G
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CachedGoalInfo"]
 40 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 41 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETGLOBAL R5 K10       ; R5 := _G
 44 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["MergedGoalNodes"]
 45 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 46 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R5 K4        ; R5 := _T
 49 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["CachedSyndicateMissions"]
 50 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 51 [-]: EQ        0 R5 K6      ; if R5 ~= nil then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R5 K4        ; R5 := _T
 54 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["CachedSkullNodes"]
 55 [-]: GETTABLE  R5 R5 R3     ; R5 := R5[R3]
 56 [-]: EQ        1 R5 K6      ; if R5 == nil then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETUPVAL  R5 U3        ; R5 := U3
 59 [-]: MOVE      R6 R4        ; R6 := R4
 60 [-]: CALL      R5 2 1       ; R5(R6)
 61 [-]: GETGLOBAL R5 K15       ; R5 := 0x1BF588C6
 62 [-]: CALL      R5 1 1       ; R5()
 63 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
 64 [-]: JMP       9            ; PC := 9
 65 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 7071
; #Upvalues:       8
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
  2 [-]: GETGLOBAL R2 K1        ; R2 := mMovie
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["Node"]
  9 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 105
 10 [-]: JMP       105          ; PC := 105
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["TransitioningOut"]
 13 [-]: TEST      R1 1         ; if R1 then PC := 105
 14 [-]: JMP       105          ; PC := 105
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["Timer"]
 17 [-]: EQ        1 R1 K6      ; if R1 == -1 then PC := 105
 18 [-]: JMP       105          ; PC := 105
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: SETTABLE  R1 K4 K7     ; R1["TransitioningOut"] := "0x1"
 21 [-]: MOVE      R1 R1        ; R1 := R1
 22 [-]: MOVE      R1 R1        ; R1 := R1
 23 [-]: GETUPVAL  R1 U2        ; R1 := U2
 24 [-]: GETUPVAL  R2 U0        ; R2 := U0
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["Node"]
 26 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
 27 [-]: GETUPVAL  R4 U0        ; R4 := U0
 28 [-]: GETUPVAL  R5 U3        ; R5 := U3
 29 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 30 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["x"]
 31 [-]: SETTABLE  R4 K8 R5     ; R4["InitialX"] := R5
 32 [-]: GETUPVAL  R4 U0        ; R4 := U0
 33 [-]: GETUPVAL  R5 U3        ; R5 := U3
 34 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["mCurrentScroll"]
 35 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["y"]
 36 [-]: SETTABLE  R4 K11 R5    ; R4["InitialY"] := R5
 37 [-]: GETUPVAL  R4 U0        ; R4 := U0
 38 [-]: GETUPVAL  R5 U4        ; R5 := U4
 39 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mCurVal"]
 40 [-]: SETTABLE  R4 K13 R5    ; R4["InitialZoom"] := R5
 41 [-]: GETUPVAL  R4 U0        ; R4 := U0
 42 [-]: SETTABLE  R4 K15 R1    ; R4["TargetX"] := R1
 43 [-]: GETUPVAL  R4 U0        ; R4 := U0
 44 [-]: SETTABLE  R4 K16 R2    ; R4["TargetY"] := R2
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: SETTABLE  R4 K17 R3    ; R4["TargetZoom"] := R3
 47 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 48 [-]: GETUPVAL  R5 U5        ; R5 := U5
 49 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 50 [-]: TEST      R4 1         ; if R4 then PC := 62
 51 [-]: JMP       62           ; PC := 62
 52 [-]: GETUPVAL  R4 U0        ; R4 := U0
 53 [-]: GETUPVAL  R5 U5        ; R5 := U5
 54 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5["0xF8AE9518"]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: SETTABLE  R4 K18 R5    ; R4["InitialFOV"] := R5
 57 [-]: GETUPVAL  R4 U0        ; R4 := U0
 58 [-]: GETUPVAL  R5 U0        ; R5 := U0
 59 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["InitialFOV"]
 60 [-]: DIV       R5 R5 K21    ; R5 := R5 / 4
 61 [-]: SETTABLE  R4 K20 R5    ; R4["TargetFOV"] := R5
 62 [-]: GETUPVAL  R4 U6        ; R4 := U6
 63 [-]: SETTABLE  R4 K22 K7    ; R4["Locked"] := "0x1"
 64 [-]: GETGLOBAL R4 K0        ; R4 := 0x400E7765
 65 [-]: GETUPVAL  R5 U7        ; R5 := U7
 66 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 67 [-]: TEST      R4 1         ; if R4 then PC := 75
 68 [-]: JMP       75           ; PC := 75
 69 [-]: GETUPVAL  R4 U6        ; R4 := U6
 70 [-]: GETUPVAL  R5 U7        ; R5 := U7
 71 [-]: SELF      R5 R5 K24    ; R6 := R5; R5 := R5["0x6DA72501"]
 72 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 73 [-]: SETTABLE  R4 K23 R5    ; R4["Previous"] := R5
 74 [-]: JMP       79           ; PC := 79
 75 [-]: GETUPVAL  R4 U6        ; R4 := U6
 76 [-]: GETGLOBAL R5 K25       ; R5 := 0x221C9700
 77 [-]: CALL      R5 1 2       ; R5 := R5()
 78 [-]: SETTABLE  R4 K23 R5    ; R4["Previous"] := R5
 79 [-]: GETUPVAL  R4 U6        ; R4 := U6
 80 [-]: GETUPVAL  R5 U6        ; R5 := U6
 81 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Previous"]
 82 [-]: GETGLOBAL R6 K25       ; R6 := 0x221C9700
 83 [-]: LOADK     R7 K27       ; R7 := 0
 84 [-]: LOADK     R8 K27       ; R8 := 0
 85 [-]: GETUPVAL  R9 U0        ; R9 := U0
 86 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
 87 [-]: GETUPVAL  R10 U0       ; R10 := U0
 88 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["InitialZoom"]
 89 [-]: SUB       R9 R9 R10    ; R9 := R9 - R10
 90 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 91 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 92 [-]: SETTABLE  R4 K26 R5    ; R4["Target"] := R5
 93 [-]: GETUPVAL  R4 U6        ; R4 := U6
 94 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["Prop"]
 95 [-]: SELF      R4 R4 K29    ; R5 := R4; R4 := R4["0x5A7A6B1"]
 96 [-]: LOADK     R6 K30       ; R6 := 1
 97 [-]: CALL      R4 3 1       ; R4(R5,R6)
 98 [-]: GETUPVAL  R4 U6        ; R4 := U6
 99 [-]: GETTABLE  R4 R4 K28    ; R4 := R4["Prop"]
100 [-]: SELF      R4 R4 K31    ; R5 := R4; R4 := R4["0xDB349344"]
101 [-]: LOADK     R6 K30       ; R6 := 1
102 [-]: CALL      R4 3 1       ; R4(R5,R6)
103 [-]: GETUPVAL  R4 U6        ; R4 := U6
104 [-]: SETTABLE  R4 K32 K6    ; R4["Region"] := -1
105 [-]: GETGLOBAL R4 K1        ; R4 := mMovie
106 [-]: SELF      R4 R4 K33    ; R5 := R4; R4 := R4["0x1C19D966"]
107 [-]: LOADK     R6 K34       ; R6 := "_root"
108 [-]: LOADK     R7 K35       ; R7 := "_alpha"
109 [-]: MUL       R8 R0 K36    ; R8 := R0 * 100
110 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
111 [-]: SUB       R4 K30 R0    ; R4 := 1 - R0
112 [-]: GETUPVAL  R5 U0        ; R5 := U0
113 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["InitialZoom"]
114 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 120
115 [-]: JMP       120          ; PC := 120
116 [-]: GETUPVAL  R5 U0        ; R5 := U0
117 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["TargetZoom"]
118 [-]: EQ        0 R5 K3      ; if R5 ~= nil then PC := 128
119 [-]: JMP       128          ; PC := 128
120 [-]: GETUPVAL  R5 U0        ; R5 := U0
121 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["InitialFOV"]
122 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 176
123 [-]: JMP       176          ; PC := 176
124 [-]: GETUPVAL  R5 U0        ; R5 := U0
125 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["TargetFOV"]
126 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 176
127 [-]: JMP       176          ; PC := 176
128 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
129 [-]: GETUPVAL  R6 U5        ; R6 := U5
130 [-]: CALL      R5 2 2       ; R5 := R5(R6)
131 [-]: TEST      R5 1         ; if R5 then PC := 144
132 [-]: JMP       144          ; PC := 144
133 [-]: GETUPVAL  R5 U5        ; R5 := U5
134 [-]: SELF      R5 R5 K37    ; R6 := R5; R5 := R5["0x95E6F2AA"]
135 [-]: GETGLOBAL R7 K38       ; R7 := 0x93034B55
136 [-]: GETUPVAL  R8 U0        ; R8 := U0
137 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["InitialFOV"]
138 [-]: GETUPVAL  R9 U0        ; R9 := U0
139 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["TargetFOV"]
140 [-]: MOVE      R10 R4       ; R10 := R4
141 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
142 [-]: CALL      R5 0 1       ; R5(R6,...)
143 [-]: JMP       154          ; PC := 154
144 [-]: GETUPVAL  R5 U4        ; R5 := U4
145 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5["0x5A7A6B1"]
146 [-]: GETGLOBAL R7 K38       ; R7 := 0x93034B55
147 [-]: GETUPVAL  R8 U0        ; R8 := U0
148 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["InitialZoom"]
149 [-]: GETUPVAL  R9 U0        ; R9 := U0
150 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["TargetZoom"]
151 [-]: MOVE      R10 R4       ; R10 := R4
152 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
153 [-]: CALL      R5 0 1       ; R5(R6,...)
154 [-]: GETUPVAL  R5 U3        ; R5 := U3
155 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5["0xCE468565"]
156 [-]: LOADK     R7 K10       ; R7 := "x"
157 [-]: GETGLOBAL R8 K38       ; R8 := 0x93034B55
158 [-]: GETUPVAL  R9 U0        ; R9 := U0
159 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["InitialX"]
160 [-]: GETUPVAL  R10 U0       ; R10 := U0
161 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["TargetX"]
162 [-]: MOVE      R11 R4       ; R11 := R4
163 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
164 [-]: CALL      R5 0 1       ; R5(R6,...)
165 [-]: GETUPVAL  R5 U3        ; R5 := U3
166 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5["0xCE468565"]
167 [-]: LOADK     R7 K12       ; R7 := "y"
168 [-]: GETGLOBAL R8 K38       ; R8 := 0x93034B55
169 [-]: GETUPVAL  R9 U0        ; R9 := U0
170 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["InitialY"]
171 [-]: GETUPVAL  R10 U0       ; R10 := U0
172 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["TargetY"]
173 [-]: MOVE      R11 R4       ; R11 := R4
174 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
175 [-]: CALL      R5 0 1       ; R5(R6,...)
176 [-]: GETGLOBAL R5 K0        ; R5 := 0x400E7765
177 [-]: GETUPVAL  R6 U7        ; R6 := U7
178 [-]: CALL      R5 2 2       ; R5 := R5(R6)
179 [-]: TEST      R5 1         ; if R5 then PC := 199
180 [-]: JMP       199          ; PC := 199
181 [-]: GETUPVAL  R5 U6        ; R5 := U6
182 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["Previous"]
183 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 199
184 [-]: JMP       199          ; PC := 199
185 [-]: GETUPVAL  R5 U6        ; R5 := U6
186 [-]: GETTABLE  R5 R5 K26    ; R5 := R5["Target"]
187 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 199
188 [-]: JMP       199          ; PC := 199
189 [-]: GETUPVAL  R5 U7        ; R5 := U7
190 [-]: SELF      R5 R5 K40    ; R6 := R5; R5 := R5["0xEC183DDC"]
191 [-]: GETGLOBAL R7 K41       ; R7 := 0xE0C881B4
192 [-]: GETUPVAL  R8 U6        ; R8 := U6
193 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["Previous"]
194 [-]: GETUPVAL  R9 U6        ; R9 := U6
195 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["Target"]
196 [-]: MOVE      R10 R4       ; R10 := R4
197 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
198 [-]: CALL      R5 0 1       ; R5(R6,...)
199 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 7125
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := Engine
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["0x9490FE70"]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 1       ; R0()
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 7132
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: MOVE      R0 R0        ; R0 := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 7136
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x400E7765
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 49
  5 [-]: JMP       49           ; PC := 49
  6 [-]: GETGLOBAL R0 K1        ; R0 := gRegion
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0["0x372CB914"]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R1 K0        ; R1 := 0x400E7765
 15 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0["0x80B14403"]
 16 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 17 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0["0x80B14403"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1["0x8B598ED4"]
 24 [-]: GETGLOBAL R3 K5        ; R3 := 0x2C00D429
 25 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 28 [-]: TEST      R1 1         ; if R1 then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETUPVAL  R1 U0        ; R1 := U0
 31 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1["0xB7C97379"]
 32 [-]: GETGLOBAL R3 K8        ; R3 := 0xEC274B1A
 33 [-]: LOADK     R4 K9        ; R4 := "Player"
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0["0x80B14403"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: MOVE      R5 R1        ; R5 := R1
 38 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 39 [-]: GETUPVAL  R1 U1        ; R1 := U1
 40 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 41 [-]: GETGLOBAL R2 K11       ; R2 := _G
 42 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["UISound_ButtonSelect"]
 43 [-]: CALL      R1 2 1       ; R1(R2)
 44 [-]: GETUPVAL  R1 U1        ; R1 := U1
 45 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["0x25992394"]
 46 [-]: GETGLOBAL R2 K11       ; R2 := _G
 47 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["UISound_DialogOpen"]
 48 [-]: CALL      R1 2 1       ; R1(R2)
 49 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 7151
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 7156
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: MOVE      R0 R1        ; R0 := R1
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


