1	C:\wlua_dump\path\Lotus\ScriptsEnterTheRift.lua
Pos   Hex Data           Description or Code
------------------------------------------------------------------------
0000                     ** source chunk: C:\wlua_dump\path\Lotus\ScriptsEnterTheRift.lua
                         ** global header start **
0000  7F                 header signature: ""
0001  00                 version (major:minor hex digits)
0002  00                 format (0=official)
0003  00                 endianness (1=little endian)
0004  00                 size of int (bytes)
0005  00                 size of size_t (bytes)
0006  02                 size of Instruction (bytes)
0007  03                 size of number (bytes)
0008  0F                 integral (1=integral)
415
                         * number type: single
                         * x86 standard (32-bit, little endian, doubles)
                         ** global header end **
Lotus.Scripts.Libs.AbilitiesLib
Lotus.Powersuits.PowersuitAbilities.PVPLib
AvatarInTheRift
InRiftPassive
gRegion
enterRiftLocalSound
enterRiftSound
inRiftSequencer
EMPTY_SYMBOL
ZERO_VECTOR
ZERO_ROTATION
InRiftPassive
friendlyRiftFx
enemyRiftFx
Game
AVATAR_POWER_RATE
SET
AVATAR_SHIELD_MAX
exitRiftEffect
exitRiftLocalSound
exitRiftSound
_T
riftChangedCallbacks
args
_T
inRift
gRegion
riftEnergyGainPerSecond
postProcess
fade
cameraColorCorrection
avatarLocalRiftFx
EMPTY_SYMBOL
ZERO_VECTOR
ZERO_ROTATION
inRiftLocalSequencer
inRiftSequencer
                         
0001                     ** function [0] definition (level 1)
                         ** start of function **
0001  00                 string size (0)
                         source name: (none)
0002  00                 line defined (0)
0003  00                 last line defined (0)
0004  00                 nups (0)
0005  00                 numparams (0)
0006  02                 is_vararg (2)
0007  03                 maxstacksize (3)
                         * code:
0008  0F                 sizecode (15)
0009  1D000000           [01] getglobal  0   0        ; 849075268
000D  59400000           [02] loadk      1   1        ; "Lotus.Scripts.Libs.AbilitiesLib"
0011  22800001           [03] call       0   2   2  
0015  5D000000           [04] getglobal  1   0        ; 849075268
0019  99800000           [05] loadk      2   2        ; "Lotus.Powersuits.PowersuitAbilities.PVPLib"
001D  62800001           [06] call       1   2   2  
0021  A5000000           [07] closure    2   0      
0025  12008000           [08] move       0   1      
0029  A0C00000           [09] setglobal  2   3        ; AvatarInTheRift
002D  A0000100           [10] setglobal  2   4        ; 2086196221
0031  A5400000           [11] closure    2   1      
0035  12000000           [12] move       0   0      
0039  A0400100           [13] setglobal  2   5        ; InRiftPassive
003D  A0800100           [14] setglobal  2   6        ; 382162643
0041  1E008000           [15] return     0   1      
                         * constants:
0045  07                 sizek (7)
0046  01                 const type 3
0047  44DC9B32           const [0]: (849075268)
004B  04                 const type 4
004C  20                 string size (32)
004D  4C6F7475732E5363+  "Lotus.Sc"
0055  72697074732E4C69+  "ripts.Li"
005D  62732E4162696C69+  "bs.Abili"
0065  746965734C696200   "tiesLib\0"
                         const [1]: "Lotus.Scripts.Libs.AbilitiesLib"
006D  04                 const type 4
006E  2B                 string size (43)
006F  4C6F7475732E506F+  "Lotus.Po"
0077  7765727375697473+  "wersuits"
007F  2E506F7765727375+  ".Powersu"
0087  69744162696C6974+  "itAbilit"
008F  6965732E5056504C+  "ies.PVPL"
0097  696200             "ib\0"
                         const [2]: "Lotus.Powersuits.PowersuitAbilities.PVPLib"
009A  04                 const type 4
009B  10                 string size (16)
009C  417661746172496E+  "AvatarIn"
00A4  5468655269667400   "TheRift\0"
                         const [3]: "AvatarInTheRift"
00AC  01                 const type 3
00AD  FDD3587C           const [4]: (2086196221)
00B1  04                 const type 4
00B2  0E                 string size (14)
00B3  496E526966745061+  "InRiftPa"
00BB  737369766500       "ssive\0"
                         const [5]: "InRiftPassive"
00C1  01                 const type 3
00C2  D356C716           const [6]: (382162643)
                         * functions:
00C6  02                 sizep (2)
                         
00C7                     ** function [0] definition (level 2)
                         ** start of function **
00C7  00                 string size (0)
                         source name: (none)
00C8  14                 line defined (20)
00C9  5C                 last line defined (92)
00CA  01                 nups (1)
00CB  02                 numparams (2)
00CC  00                 is_vararg (0)
00CD  12                 maxstacksize (18)
                         * code:
00CF  01                 sizecode (222)
00D0  9D000000           [001] getglobal  2   0        ; 1074689893
00D4  D2000000           [002] move       3   0      
00D8  A2800001           [003] call       2   2   2  
00DC  98000000           [004] test       2       0    ; to [6] if true
00E0  1A000080           [005] jmp        1            ; to [7]
00E4  1E008000           [006] return     0   1      
00E8  A4404000           [007] self       2   0   257  ; -1764426596
00EC  A2800001           [008] call       2   2   2  
00F0  DD800000           [009] getglobal  3   2        ; gRegion
00F4  E4C0C001           [010] self       3   3   259  ; 65205951
00F8  E2800001           [011] call       3   2   2  
00FC  24014100           [012] self       4   0   260  ; -717859730
0100  22810001           [013] call       4   2   2  
0104  64414100           [014] self       5   0   261  ; -784553045
0108  D2018001           [015] move       7   3      
010C  62818001           [016] call       5   3   2  
0110  58000000           [017] test       1       0    ; to [19] if true
0114  1AC01580           [018] jmp        88           ; to [107]
0118  18010000           [019] test       4       0    ; to [21] if true
011C  1A800180           [020] jmp        7            ; to [28]
0120  A4814100           [021] self       6   0   262  ; 630793108
0124  1DC20100           [022] getglobal  8   7        ; enterRiftLocalSound
0128  57020000           [023] loadbool   9   0   0    ; false
012C  99020200           [024] loadk      10  8        ; 0
0130  D7020000           [025] loadbool   11  0   0    ; false
0134  A2410003           [026] call       6   6   1  
0138  1A000380           [027] jmp        13           ; to [41]
013C  A4814100           [028] self       6   0   262  ; 630793108
0140  1D420200           [029] getglobal  8   9        ; enterRiftSound
0144  57020000           [030] loadbool   9   0   0    ; false
0148  99020200           [031] loadk      10  8        ; 0
014C  D7020000           [032] loadbool   11  0   0    ; false
0150  A2410003           [033] call       6   6   1  
0154  A4814200           [034] self       6   0   266  ; -1421644046
0158  1DC20200           [035] getglobal  8   11       ; inRiftSequencer
015C  5D020300           [036] getglobal  9   12       ; EMPTY_SYMBOL
0160  9D420300           [037] getglobal  10  13       ; ZERO_VECTOR
0164  DD820300           [038] getglobal  11  14       ; ZERO_ROTATION
0168  12030000           [039] move       12  0      
016C  A2418003           [040] call       6   7   1  
0170  9D010000           [041] getglobal  6   0        ; 1074689893
0174  D2010001           [042] move       7   2      
0178  A2810001           [043] call       6   2   2  
017C  98410000           [044] test       6       1    ; to [46] if false
0180  1A000380           [045] jmp        13           ; to [59]
0184  9D810000           [046] getglobal  6   2        ; gRegion
0188  A4C14303           [047] self       6   6   271  ; -1520831144
018C  A2810001           [048] call       6   2   2  
0190  98410000           [049] test       6       1    ; to [51] if false
0194  1A400080           [050] jmp        2            ; to [53]
0198  18010000           [051] test       4       0    ; to [53] if true
019C  1A400180           [052] jmp        6            ; to [59]
01A0  A4014400           [053] self       6   0   272  ; -1302048094
01A4  1D420400           [054] getglobal  8   17       ; -332969190
01A8  59820400           [055] loadk      9   18       ; "InRiftPassive"
01AC  22820001           [056] call       8   2   2  
01B0  57020000           [057] loadbool   9   0   0    ; false
01B4  A2410002           [058] call       6   4   1  
01B8  58010000           [059] test       5       0    ; to [61] if true
01BC  1AC00180           [060] jmp        8            ; to [69]
01C0  A4814200           [061] self       6   0   266  ; -1421644046
01C4  1DC20400           [062] getglobal  8   19       ; friendlyRiftFx
01C8  5D020300           [063] getglobal  9   12       ; EMPTY_SYMBOL
01CC  9D420300           [064] getglobal  10  13       ; ZERO_VECTOR
01D0  DD820300           [065] getglobal  11  14       ; ZERO_ROTATION
01D4  12030000           [066] move       12  0      
01D8  A2418003           [067] call       6   7   1  
01DC  1AC00080           [068] jmp        4            ; to [73]
01E0  A4814200           [069] self       6   0   266  ; -1421644046
01E4  1D020500           [070] getglobal  8   20       ; enemyRiftFx
01E8  5D020300           [071] getglobal  9   12       ; EMPTY_SYMBOL
01EC  A2410002           [072] call       6   4   1  
01F0  9D810000           [073] getglobal  6   2        ; gRegion
01F4  A4C14303           [074] self       6   6   271  ; -1520831144
01F8  A2810001           [075] call       6   2   2  
01FC  98010000           [076] test       6       0    ; to [78] if true
0200  1A801E80           [077] jmp        123          ; to [201]
0204  93010000           [078] getupval   6   0      
0208  8E414503           [079] gettable   6   6   277  ; 590154099
020C  A2818000           [080] call       6   1   2  
0210  98010000           [081] test       6       0    ; to [83] if true
0214  1A401D80           [082] jmp        118          ; to [201]
0218  A4814500           [083] self       6   0   278  ; -1917464545
021C  A2810001           [084] call       6   2   2  
0220  A4C14503           [085] self       6   6   279  ; 991629753
0224  1D020600           [086] getglobal  8   24       ; Game
0228  0E424604           [087] gettable   8   8   281  ; "AVATAR_POWER_RATE"
022C  5D020600           [088] getglobal  9   24       ; Game
0230  4E82C604           [089] gettable   9   9   282  ; "SET"
0234  99020200           [090] loadk      10  8        ; 0
0238  A2418002           [091] call       6   5   1  
023C  A4814500           [092] self       6   0   278  ; -1917464545
0240  A2810001           [093] call       6   2   2  
0244  A4C14503           [094] self       6   6   279  ; 991629753
0248  1D020600           [095] getglobal  8   24       ; Game
024C  0EC24604           [096] gettable   8   8   283  ; "AVATAR_SHIELD_MAX"
0250  5D020600           [097] getglobal  9   24       ; Game
0254  4E82C604           [098] gettable   9   9   282  ; "SET"
0258  99020200           [099] loadk      10  8        ; 0
025C  A2418002           [100] call       6   5   1  
0260  A4014700           [101] self       6   0   284  ; -1544157541
0264  A2810001           [102] call       6   2   2  
0268  A4414703           [103] self       6   6   285  ; -1992773175
026C  19020200           [104] loadk      8   8        ; 0
0270  A2418001           [105] call       6   3   1  
0274  1A401780           [106] jmp        94           ; to [201]
0278  18010000           [107] test       4       0    ; to [109] if true
027C  1A800380           [108] jmp        15           ; to [124]
0280  9D810000           [109] getglobal  6   2        ; gRegion
0284  A4814703           [110] self       6   6   286  ; -1110225722
0288  1DC20700           [111] getglobal  8   31       ; exitRiftEffect
028C  64024800           [112] self       9   0   288  ; -427739093
0290  62820001           [113] call       9   2   2  
0294  9D820300           [114] getglobal  10  14       ; ZERO_ROTATION
0298  D2020000           [115] move       11  0      
029C  A2410003           [116] call       6   6   1  
02A0  A4814100           [117] self       6   0   262  ; 630793108
02A4  1D420800           [118] getglobal  8   33       ; exitRiftLocalSound
02A8  57020000           [119] loadbool   9   0   0    ; false
02AC  99020200           [120] loadk      10  8        ; 0
02B0  D7020000           [121] loadbool   11  0   0    ; false
02B4  A2410003           [122] call       6   6   1  
02B8  1AC00380           [123] jmp        16           ; to [140]
02BC  A4814100           [124] self       6   0   262  ; 630793108
02C0  1D820800           [125] getglobal  8   34       ; exitRiftSound
02C4  57020000           [126] loadbool   9   0   0    ; false
02C8  99020200           [127] loadk      10  8        ; 0
02CC  D7020000           [128] loadbool   11  0   0    ; false
02D0  A2410003           [129] call       6   6   1  
02D4  A4C14800           [130] self       6   0   291  ; -1625438872
02D8  1DC20200           [131] getglobal  8   11       ; inRiftSequencer
02DC  A2818001           [132] call       6   3   2  
02E0  DD010000           [133] getglobal  7   0        ; 1074689893
02E4  12020003           [134] move       8   6      
02E8  E2810001           [135] call       7   2   2  
02EC  D8410000           [136] test       7       1    ; to [138] if false
02F0  1A400080           [137] jmp        2            ; to [140]
02F4  E4014903           [138] self       7   6   292  ; -725453761
02F8  E2410001           [139] call       7   2   1  
02FC  C6018003           [140] loadnil    7   7      
0300  58010000           [141] test       5       0    ; to [143] if true
0304  1A000180           [142] jmp        5            ; to [148]
0308  24C24800           [143] self       8   0   291  ; -1625438872
030C  9DC20400           [144] getglobal  10  19       ; friendlyRiftFx
0310  22828001           [145] call       8   3   2  
0314  D2010004           [146] move       7   8      
0318  1AC00080           [147] jmp        4            ; to [152]
031C  24C24800           [148] self       8   0   291  ; -1625438872
0320  9D020500           [149] getglobal  10  20       ; enemyRiftFx
0324  22828001           [150] call       8   3   2  
0328  D2010004           [151] move       7   8      
032C  1D020000           [152] getglobal  8   0        ; 1074689893
0330  52028003           [153] move       9   7      
0334  22820001           [154] call       8   2   2  
0338  18420000           [155] test       8       1    ; to [157] if false
033C  1A400080           [156] jmp        2            ; to [159]
0340  2402C903           [157] self       8   7   292  ; -725453761
0344  22420001           [158] call       8   2   1  
0348  1D820000           [159] getglobal  8   2        ; gRegion
034C  24C24304           [160] self       8   8   271  ; -1520831144
0350  22820001           [161] call       8   2   2  
0354  18020000           [162] test       8       0    ; to [164] if true
0358  1A000980           [163] jmp        37           ; to [201]
035C  13020000           [164] getupval   8   0      
0360  0E424504           [165] gettable   8   8   277  ; 590154099
0364  22828000           [166] call       8   1   2  
0368  18020000           [167] test       8       0    ; to [169] if true
036C  1AC00780           [168] jmp        32           ; to [201]
0370  24824500           [169] self       8   0   278  ; -1917464545
0374  22820001           [170] call       8   2   2  
0378  24424904           [171] self       8   8   293  ; -233482841
037C  9D020600           [172] getglobal  10  24       ; Game
0380  8E424605           [173] gettable   10  10  281  ; "AVATAR_POWER_RATE"
0384  DD020600           [174] getglobal  11  24       ; Game
0388  CE82C605           [175] gettable   11  11  282  ; "SET"
038C  19030200           [176] loadk      12  8        ; 0
0390  22428002           [177] call       8   5   1  
0394  24824500           [178] self       8   0   278  ; -1917464545
0398  22820001           [179] call       8   2   2  
039C  24424904           [180] self       8   8   293  ; -233482841
03A0  9D020600           [181] getglobal  10  24       ; Game
03A4  8EC24605           [182] gettable   10  10  283  ; "AVATAR_SHIELD_MAX"
03A8  DD020600           [183] getglobal  11  24       ; Game
03AC  CE82C605           [184] gettable   11  11  282  ; "SET"
03B0  19030200           [185] loadk      12  8        ; 0
03B4  22428002           [186] call       8   5   1  
03B8  24024700           [187] self       8   0   284  ; -1544157541
03BC  22820001           [188] call       8   2   2  
03C0  24424704           [189] self       8   8   285  ; -1992773175
03C4  99820900           [190] loadk      10  38       ; 0
03C8  22428001           [191] call       8   3   1  
03CC  24024700           [192] self       8   0   284  ; -1544157541
03D0  22820001           [193] call       8   2   2  
03D4  24C24904           [194] self       8   8   295  ; -1488488483
03D8  22420001           [195] call       8   2   1  
03DC  24024700           [196] self       8   0   284  ; -1544157541
03E0  22820001           [197] call       8   2   2  
03E4  24424704           [198] self       8   8   285  ; -1992773175
03E8  99020200           [199] loadk      10  8        ; 0
03EC  22428001           [200] call       8   3   1  
03F0  1D020000           [201] getglobal  8   0        ; 1074689893
03F4  5D020A00           [202] getglobal  9   40       ; _T
03F8  4E42CA04           [203] gettable   9   9   297  ; "riftChangedCallbacks"
03FC  22820001           [204] call       8   2   2  
0400  18420000           [205] test       8       1    ; to [207] if false
0404  1A800380           [206] jmp        15           ; to [222]
0408  24824A00           [207] self       8   0   298  ; -605089866
040C  22820001           [208] call       8   2   2  
0410  5DC20A00           [209] getglobal  9   43       ; 248503575
0414  9D020A00           [210] getglobal  10  40       ; _T
0418  8E424A05           [211] gettable   10  10  297  ; "riftChangedCallbacks"
041C  8E020205           [212] gettable   10  10  8  
0420  62020101           [213] call       9   2   4  
0424  1A000180           [214] jmp        5            ; to [220]
0428  8E03CB06           [215] gettable   14  13  300  ; 2105741599
042C  D2030000           [216] move       15  0      
0430  12048000           [217] move       16  1      
0434  4E44CB06           [218] gettable   17  13  301  ; "args"
0438  A2430002           [219] call       14  4   1  
043C  56820000           [220] tforloop   9       2    ; to [222] if exit
0440  1A00FE7F           [221] jmp        -7           ; to [215]
0444  1E008000           [222] return     0   1      
                         * constants:
0448  2E                 sizek (46)
0449  01                 const type 3
044A  65770E40           const [0]: (1074689893)
044E  01                 const type 3
044F  9CFCD496           const [1]: (-1764426596)
0453  04                 const type 4
0454  08                 string size (8)
0455  67526567696F6E00   "gRegion\0"
                         const [2]: "gRegion"
045D  01                 const type 3
045E  BFF6E203           const [3]: (65205951)
0462  01                 const type 3
0463  6E5436D5           const [4]: (-717859730)
0467  01                 const type 3
0468  ABAB3CD1           const [5]: (-784553045)
046C  01                 const type 3
046D  94239925           const [6]: (630793108)
0471  04                 const type 4
0472  14                 string size (20)
0473  656E746572526966+  "enterRif"
047B  744C6F63616C536F+  "tLocalSo"
0483  756E6400           "und\0"
                         const [7]: "enterRiftLocalSound"
0487  03                 const type 3
0488  00000000           const [8]: (0)
048C  04                 const type 4
048D  0F                 string size (15)
048E  656E746572526966+  "enterRif"
0496  74536F756E6400     "tSound\0"
                         const [9]: "enterRiftSound"
049D  01                 const type 3
049E  F26E43AB           const [10]: (-1421644046)
04A2  04                 const type 4
04A3  10                 string size (16)
04A4  696E526966745365+  "inRiftSe"
04AC  7175656E63657200   "quencer\0"
                         const [11]: "inRiftSequencer"
04B4  04                 const type 4
04B5  0D                 string size (13)
04B6  454D5054595F5359+  "EMPTY_SY"
04BE  4D424F4C00         "MBOL\0"
                         const [12]: "EMPTY_SYMBOL"
04C3  04                 const type 4
04C4  0C                 string size (12)
04C5  5A45524F5F564543+  "ZERO_VEC"
04CD  544F5200           "TOR\0"
                         const [13]: "ZERO_VECTOR"
04D1  04                 const type 4
04D2  0E                 string size (14)
04D3  5A45524F5F524F54+  "ZERO_ROT"
04DB  4154494F4E00       "ATION\0"
                         const [14]: "ZERO_ROTATION"
04E1  01                 const type 3
04E2  58F559A5           const [15]: (-1520831144)
04E6  01                 const type 3
04E7  A25264B2           const [16]: (-1302048094)
04EB  01                 const type 3
04EC  1A4B27EC           const [17]: (-332969190)
04F0  04                 const type 4
04F1  0E                 string size (14)
04F2  496E526966745061+  "InRiftPa"
04FA  737369766500       "ssive\0"
                         const [18]: "InRiftPassive"
0500  04                 const type 4
0501  0F                 string size (15)
0502  667269656E646C79+  "friendly"
050A  52696674467800     "RiftFx\0"
                         const [19]: "friendlyRiftFx"
0511  04                 const type 4
0512  0C                 string size (12)
0513  656E656D79526966+  "enemyRif"
051B  74467800           "tFx\0"
                         const [20]: "enemyRiftFx"
051F  01                 const type 3
0520  73092D23           const [21]: (590154099)
0524  01                 const type 3
0525  1FD0B58D           const [22]: (-1917464545)
0529  01                 const type 3
052A  B9111B3B           const [23]: (991629753)
052E  04                 const type 4
052F  05                 string size (5)
0530  47616D6500         "Game\0"
                         const [24]: "Game"
0535  04                 const type 4
0536  12                 string size (18)
0537  4156415441525F50+  "AVATAR_P"
053F  4F5745525F524154+  "OWER_RAT"
0547  4500               "E\0"
                         const [25]: "AVATAR_POWER_RATE"
0549  04                 const type 4
054A  04                 string size (4)
054B  53455400           "SET\0"
                         const [26]: "SET"
054F  04                 const type 4
0550  12                 string size (18)
0551  4156415441525F53+  "AVATAR_S"
0559  4849454C445F4D41+  "HIELD_MA"
0561  5800               "X\0"
                         const [27]: "AVATAR_SHIELD_MAX"
0563  01                 const type 3
0564  9B06F6A3           const [28]: (-1544157541)
0568  01                 const type 3
0569  C9B13889           const [29]: (-1992773175)
056D  01                 const type 3
056E  C64CD3BD           const [30]: (-1110225722)
0572  04                 const type 4
0573  0F                 string size (15)
0574  6578697452696674+  "exitRift"
057C  45666665637400     "Effect\0"
                         const [31]: "exitRiftEffect"
0583  01                 const type 3
0584  2B3881E6           const [32]: (-427739093)
0588  04                 const type 4
0589  13                 string size (19)
058A  6578697452696674+  "exitRift"
0592  4C6F63616C536F75+  "LocalSou"
059A  6E6400             "nd\0"
                         const [33]: "exitRiftLocalSound"
059D  04                 const type 4
059E  0E                 string size (14)
059F  6578697452696674+  "exitRift"
05A7  536F756E6400       "Sound\0"
                         const [34]: "exitRiftSound"
05AD  01                 const type 3
05AE  68C51D9F           const [35]: (-1625438872)
05B2  01                 const type 3
05B3  3F74C2D4           const [36]: (-725453761)
05B7  01                 const type 3
05B8  A75515F2           const [37]: (-233482841)
05BC  03                 const type 3
05BD  0000803F           const [38]: (0)
05C1  01                 const type 3
05C2  DD7747A7           const [39]: (-1488488483)
05C6  04                 const type 4
05C7  03                 string size (3)
05C8  5F5400             "_T\0"
                         const [40]: "_T"
05CB  04                 const type 4
05CC  15                 string size (21)
05CD  726966744368616E+  "riftChan"
05D5  67656443616C6C62+  "gedCallb"
05DD  61636B7300         "acks\0"
                         const [41]: "riftChangedCallbacks"
05E2  01                 const type 3
05E3  B60FEFDB           const [42]: (-605089866)
05E7  01                 const type 3
05E8  17DDCF0E           const [43]: (248503575)
05EC  01                 const type 3
05ED  1F11837D           const [44]: (2105741599)
05F1  04                 const type 4
05F2  05                 string size (5)
05F3  6172677300         "args\0"
                         const [45]: "args"
                         * functions:
05F8  00                 sizep (0)
                         * lines:
05FA  01                 sizelineinfo (222)
                         [pc] (line)
05FB  15                 [001] (21)
05FC  00                 [002] (21)
05FD  00                 [003] (21)
05FE  00                 [004] (21)
05FF  15                 [005] (21)
0600  00                 [006] (22)
0601  00                 [007] (26)
0602  00                 [008] (26)
0603  15                 [009] (27)
0604  00                 [010] (27)
0605  00                 [011] (27)
0606  00                 [012] (29)
0607  15                 [013] (29)
0608  00                 [014] (30)
0609  00                 [015] (30)
060A  00                 [016] (30)
060B  15                 [017] (32)
060C  00                 [018] (32)
060D  00                 [019] (33)
060E  00                 [020] (33)
060F  16                 [021] (34)
0610  00                 [022] (34)
0611  00                 [023] (34)
0612  00                 [024] (34)
0613  1A                 [025] (34)
0614  00                 [026] (34)
0615  00                 [027] (34)
0616  00                 [028] (36)
0617  1A                 [029] (36)
0618  00                 [030] (36)
0619  00                 [031] (36)
061A  00                 [032] (36)
061B  1B                 [033] (36)
061C  00                 [034] (37)
061D  00                 [035] (37)
061E  00                 [036] (37)
061F  1B                 [037] (37)
0620  00                 [038] (37)
0621  00                 [039] (37)
0622  00                 [040] (37)
0623  1B                 [041] (40)
0624  00                 [042] (40)
0625  00                 [043] (40)
0626  00                 [044] (40)
0627  1D                 [045] (40)
0628  00                 [046] (40)
0629  00                 [047] (40)
062A  00                 [048] (40)
062B  1D                 [049] (40)
062C  00                 [050] (40)
062D  00                 [051] (40)
062E  00                 [052] (40)
062F  1E                 [053] (41)
0630  00                 [054] (41)
0631  00                 [055] (41)
0632  00                 [056] (41)
0633  1E                 [057] (41)
0634  00                 [058] (41)
0635  00                 [059] (44)
0636  00                 [060] (44)
0637  1E                 [061] (45)
0638  00                 [062] (45)
0639  00                 [063] (45)
063A  00                 [064] (45)
063B  20                 [065] (45)
063C  00                 [066] (45)
063D  00                 [067] (45)
063E  00                 [068] (45)
063F  20                 [069] (47)
0640  00                 [070] (47)
0641  00                 [071] (47)
0642  00                 [072] (47)
0643  21                 [073] (50)
0644  00                 [074] (50)
0645  00                 [075] (50)
0646  00                 [076] (50)
0647  21                 [077] (50)
0648  00                 [078] (50)
0649  00                 [079] (50)
064A  00                 [080] (50)
064B  22                 [081] (50)
064C  00                 [082] (50)
064D  00                 [083] (51)
064E  00                 [084] (51)
064F  22                 [085] (51)
0650  00                 [086] (51)
0651  00                 [087] (51)
0652  00                 [088] (51)
0653  22                 [089] (51)
0654  00                 [090] (51)
0655  00                 [091] (51)
0656  00                 [092] (52)
0657  22                 [093] (52)
0658  00                 [094] (52)
0659  00                 [095] (52)
065A  00                 [096] (52)
065B  22                 [097] (52)
065C  00                 [098] (52)
065D  00                 [099] (52)
065E  00                 [100] (52)
065F  22                 [101] (53)
0660  00                 [102] (53)
0661  00                 [103] (53)
0662  00                 [104] (53)
0663  22                 [105] (53)
0664  00                 [106] (54)
0665  00                 [107] (56)
0666  00                 [108] (56)
0667  24                 [109] (57)
0668  00                 [110] (57)
0669  00                 [111] (57)
066A  00                 [112] (57)
066B  24                 [113] (57)
066C  00                 [114] (57)
066D  00                 [115] (57)
066E  00                 [116] (57)
066F  24                 [117] (58)
0670  00                 [118] (58)
0671  00                 [119] (58)
0672  00                 [120] (58)
0673  24                 [121] (58)
0674  00                 [122] (58)
0675  00                 [123] (58)
0676  00                 [124] (60)
0677  24                 [125] (60)
0678  00                 [126] (60)
0679  00                 [127] (60)
067A  00                 [128] (60)
067B  24                 [129] (60)
067C  00                 [130] (61)
067D  00                 [131] (61)
067E  00                 [132] (61)
067F  25                 [133] (62)
0680  00                 [134] (62)
0681  00                 [135] (62)
0682  00                 [136] (62)
0683  25                 [137] (62)
0684  00                 [138] (63)
0685  00                 [139] (63)
0686  00                 [140] (67)
0687  25                 [141] (68)
0688  00                 [142] (68)
0689  00                 [143] (69)
068A  00                 [144] (69)
068B  25                 [145] (69)
068C  00                 [146] (69)
068D  00                 [147] (69)
068E  00                 [148] (71)
068F  25                 [149] (71)
0690  00                 [150] (71)
0691  00                 [151] (71)
0692  00                 [152] (73)
0693  25                 [153] (73)
0694  00                 [154] (73)
0695  00                 [155] (73)
0696  00                 [156] (73)
0697  25                 [157] (74)
0698  00                 [158] (74)
0699  00                 [159] (77)
069A  00                 [160] (77)
069B  28                 [161] (77)
069C  00                 [162] (77)
069D  00                 [163] (77)
069E  00                 [164] (77)
069F  28                 [165] (77)
06A0  00                 [166] (77)
06A1  00                 [167] (77)
06A2  00                 [168] (77)
06A3  28                 [169] (78)
06A4  00                 [170] (78)
06A5  00                 [171] (78)
06A6  00                 [172] (78)
06A7  28                 [173] (78)
06A8  00                 [174] (78)
06A9  00                 [175] (78)
06AA  00                 [176] (78)
06AB  28                 [177] (78)
06AC  00                 [178] (79)
06AD  00                 [179] (79)
06AE  00                 [180] (79)
06AF  28                 [181] (79)
06B0  00                 [182] (79)
06B1  00                 [183] (79)
06B2  00                 [184] (79)
06B3  28                 [185] (79)
06B4  00                 [186] (79)
06B5  00                 [187] (80)
06B6  00                 [188] (80)
06B7  28                 [189] (80)
06B8  00                 [190] (80)
06B9  00                 [191] (80)
06BA  00                 [192] (81)
06BB  28                 [193] (81)
06BC  00                 [194] (81)
06BD  00                 [195] (81)
06BE  00                 [196] (82)
06BF  28                 [197] (82)
06C0  00                 [198] (82)
06C1  00                 [199] (82)
06C2  00                 [200] (82)
06C3  28                 [201] (86)
06C4  00                 [202] (86)
06C5  00                 [203] (86)
06C6  00                 [204] (86)
06C7  28                 [205] (86)
06C8  00                 [206] (86)
06C9  00                 [207] (87)
06CA  00                 [208] (87)
06CB  29                 [209] (88)
06CC  00                 [210] (88)
06CD  00                 [211] (88)
06CE  00                 [212] (88)
06CF  29                 [213] (88)
06D0  00                 [214] (88)
06D1  00                 [215] (89)
06D2  00                 [216] (89)
06D3  29                 [217] (89)
06D4  00                 [218] (89)
06D5  00                 [219] (89)
06D6  00                 [220] (88)
06D7  29                 [221] (89)
06D8  00                 [222] (92)
                         * locals:
0973  00                 sizelocvars (0)
                         * upvalues:
0974  00                 sizeupvalues (0)
                         ** end of function **

                         
0975                     ** function [1] definition (level 2)
                         ** start of function **
0975  00                 string size (0)
                         source name: (none)
0976  5E                 line defined (94)
0977  C4                 last line defined (196)
0978  01                 nups (1)
0979  01                 numparams (1)
097A  01                 is_vararg (0)
097B  00                 maxstacksize (17)
                         * code:
097E  01                 sizecode (236)
097F  5D000000           [001] getglobal  1   0        ; 1074689893
0983  9D400000           [002] getglobal  2   1        ; _T
0987  8E804001           [003] gettable   2   2   258  ; "inRift"
098B  62800001           [004] call       1   2   2  
098F  58000000           [005] test       1       0    ; to [7] if true
0993  1A800080           [006] jmp        3            ; to [10]
0997  5D400000           [007] getglobal  1   1        ; _T
099B  8B000000           [008] newtable   2   0   0    ; array=0, hash=0
099F  4C800081           [009] settable   1   258 2    ; "inRift"
09A3  64C04000           [010] self       1   0   259  ; -605089866
09A7  62800001           [011] call       1   2   2  
09AB  9D400000           [012] getglobal  2   1        ; _T
09AF  8E804001           [013] gettable   2   2   258  ; "inRift"
09B3  8E400001           [014] gettable   2   2   1  
fail op	35
09B7  23004101           [015] close      0  
09BB  1A000080           [016] jmp        1            ; to [18]
09BF  1E008000           [017] return     0   1      
09C3  9D400000           [018] getglobal  2   1        ; _T
09C7  8E804001           [019] gettable   2   2   258  ; "inRift"
09CB  8C00C100           [020] settable   2   1   260  ; 1
09CF  99400100           [021] loadk      2   5        ; 0
09D3  D7000000           [022] loadbool   3   0   0    ; false
09D7  1D010000           [023] getglobal  4   0        ; 1074689893
09DB  52010000           [024] move       5   0      
09DF  22810001           [025] call       4   2   2  
09E3  18410000           [026] test       4       1    ; to [28] if false
09E7  1A802680           [027] jmp        155          ; to [183]
09EB  24814100           [028] self       4   0   262  ; 1511086594
09EF  22810001           [029] call       4   2   2  
09F3  18410000           [030] test       4       1    ; to [32] if false
09F7  1A802580           [031] jmp        151          ; to [183]
09FB  24C14100           [032] self       4   0   263  ; 757002394
09FF  22810001           [033] call       4   2   2  
0A03  18010000           [034] test       4       0    ; to [36] if true
0A07  1A802480           [035] jmp        147          ; to [183]
0A0B  1D010200           [036] getglobal  4   8        ; gRegion
0A0F  24414202           [037] self       4   4   265  ; -1520831144
0A13  22810001           [038] call       4   2   2  
0A17  18010000           [039] test       4       0    ; to [41] if true
0A1B  1AC00A80           [040] jmp        44           ; to [85]
0A1F  13010000           [041] getupval   4   0      
0A23  0E814202           [042] gettable   4   4   266  ; 1092291362
0A27  52010000           [043] move       5   0      
0A2B  22810001           [044] call       4   2   2  
0A2F  18410000           [045] test       4       1    ; to [47] if false
0A33  1AC00480           [046] jmp        20           ; to [67]
0A37  1DC10200           [047] getglobal  4   11       ; riftEnergyGainPerSecond
0A3B  5D010300           [048] getglobal  5   12       ; 1289681407
0A3F  62818000           [049] call       5   1   2  
0A43  04410102           [050] mul        4   4   5  
0A47  83000101           [051] add        2   2   4  
fail op	21
0A4B  15808086           [052] concat     0   269 2  
0A4F  1A000380           [053] jmp        13           ; to [67]
0A53  24814300           [054] self       4   0   270  ; -1917464545
0A57  22810001           [055] call       4   2   2  
0A5B  24C14302           [056] self       4   4   271  ; 1769516121
0A5F  22810001           [057] call       4   2   2  
0A63  5D010000           [058] getglobal  5   0        ; 1074689893
0A67  92010002           [059] move       6   4      
0A6B  62810001           [060] call       5   2   2  
0A6F  58410000           [061] test       5       1    ; to [63] if false
0A73  1A800080           [062] jmp        3            ; to [66]
0A77  64014402           [063] self       5   4   272  ; -338878752
0A7B  D2010001           [064] move       7   2      
0A7F  62418001           [065] call       5   3   1  
0A83  99400100           [066] loadk      2   5        ; 0
0A87  64814300           [067] self       5   0   270  ; -1917464545
0A8B  62810001           [068] call       5   2   2  
0A8F  6441C402           [069] self       5   5   273  ; 393468732
0A93  62810001           [070] call       5   2   2  
fail op	21
0A97  15408182           [071] concat     0   261 5  
0A9B  1AC00280           [072] jmp        12           ; to [85]
0A9F  64814300           [073] self       5   0   270  ; -1917464545
0AA3  62810001           [074] call       5   2   2  
0AA7  6481C402           [075] self       5   5   274  ; -657641636
0AAB  62810001           [076] call       5   2   2  
0AAF  64C1C402           [077] self       5   5   275  ; -1196902525
0AB3  62810001           [078] call       5   2   2  
0AB7  58410000           [079] test       5       1    ; to [81] if false
0ABB  1AC00080           [080] jmp        4            ; to [85]
0ABF  64814300           [081] self       5   0   270  ; -1917464545
0AC3  62810001           [082] call       5   2   2  
0AC7  6401C502           [083] self       5   5   276  ; 195274577
0ACB  62410001           [084] call       5   2   1  
0ACF  64414500           [085] self       5   0   277  ; -1201586349
0AD3  62810001           [086] call       5   2   2  
fail op	35
0AD7  63C08002           [087] close      1  
0ADB  1A401680           [088] jmp        90           ; to [179]
fail op	9
0ADF  C9008001           [089] settable   3   3   0  
0AE3  64814500           [090] self       5   0   278  ; 1525877273
0AE7  62810001           [091] call       5   2   2  
0AEB  9D010200           [092] getglobal  6   8        ; gRegion
0AEF  A4C14503           [093] self       6   6   279  ; -1456226250
0AF3  A2810001           [094] call       6   2   2  
0AF7  8E014603           [095] gettable   6   6   280  ; "postProcess"
0AFB  D8000000           [096] test       3       0    ; to [98] if true
0AFF  1A800A80           [097] jmp        43           ; to [141]
0B03  8C81C68C           [098] settable   6   281 282  ; "fade" -113
0B07  DD010000           [099] getglobal  7   0        ; 1074689893
0B0B  12028002           [100] move       8   5      
0B0F  E2810001           [101] call       7   2   2  
0B13  D8410000           [102] test       7       1    ; to [104] if false
0B17  1AC00280           [103] jmp        12           ; to [116]
0B1B  E4C1C602           [104] self       7   5   283  ; 167589562
0B1F  59020700           [105] loadk      9   28       ; 51
0B23  99420700           [106] loadk      10  29       ; 102
0B27  D9420700           [107] loadk      11  29       ; 102
0B2B  19830700           [108] loadk      12  30       ; 0
0B2F  E2410003           [109] call       7   6   1  
0B33  E4C1C702           [110] self       7   5   287  ; -847416010
0B37  5D020800           [111] getglobal  9   32       ; cameraColorCorrection
0B3B  99420300           [112] loadk      10  13       ; 0
0B3F  D9420800           [113] loadk      11  33       ; 0
0B43  19430300           [114] loadk      12  13       ; 0
0B47  E2410003           [115] call       7   6   1  
0B4B  E4814800           [116] self       7   0   290  ; -1421644046
0B4F  5DC20800           [117] getglobal  9   35       ; avatarLocalRiftFx
0B53  9D020900           [118] getglobal  10  36       ; EMPTY_SYMBOL
0B57  DD420900           [119] getglobal  11  37       ; ZERO_VECTOR
0B5B  1D830900           [120] getglobal  12  38       ; ZERO_ROTATION
0B5F  52030000           [121] move       13  0      
0B63  E2418003           [122] call       7   7   1  
0B67  E4814800           [123] self       7   0   290  ; -1421644046
0B6B  5DC20900           [124] getglobal  9   39       ; inRiftLocalSequencer
0B6F  9D020900           [125] getglobal  10  36       ; EMPTY_SYMBOL
0B73  DD420900           [126] getglobal  11  37       ; ZERO_VECTOR
0B77  1D830900           [127] getglobal  12  38       ; ZERO_ROTATION
0B7B  52030000           [128] move       13  0      
0B7F  E2418003           [129] call       7   7   1  
0B83  E4014A00           [130] self       7   0   296  ; -1625438872
0B87  5D420A00           [131] getglobal  9   41       ; inRiftSequencer
0B8B  E2818001           [132] call       7   3   2  
0B8F  1D020000           [133] getglobal  8   0        ; 1074689893
0B93  52028003           [134] move       9   7      
0B97  22820001           [135] call       8   2   2  
0B9B  18420000           [136] test       8       1    ; to [138] if false
0B9F  1A000A80           [137] jmp        41           ; to [179]
0BA3  2482CA03           [138] self       8   7   298  ; -725453761
0BA7  22420001           [139] call       8   2   1  
0BAB  1A400980           [140] jmp        38           ; to [179]
0BAF  8C41C18C           [141] settable   6   281 261  ; "fade" 0
0BB3  1D020000           [142] getglobal  8   0        ; 1074689893
0BB7  52028002           [143] move       9   5      
0BBB  22820001           [144] call       8   2   2  
0BBF  18420000           [145] test       8       1    ; to [147] if false
0BC3  1A000180           [146] jmp        5            ; to [152]
0BC7  24C2CA02           [147] self       8   5   299  ; 1612278193
0BCB  9D020800           [148] getglobal  10  32       ; cameraColorCorrection
0BCF  22428001           [149] call       8   3   1  
0BD3  2402CB02           [150] self       8   5   300  ; 1051525123
0BD7  22420001           [151] call       8   2   1  
0BDB  24024A00           [152] self       8   0   296  ; -1625438872
0BDF  9DC20800           [153] getglobal  10  35       ; avatarLocalRiftFx
0BE3  22828001           [154] call       8   3   2  
0BE7  5D020000           [155] getglobal  9   0        ; 1074689893
0BEB  92020004           [156] move       10  8      
0BEF  62820001           [157] call       9   2   2  
0BF3  58420000           [158] test       9       1    ; to [160] if false
0BF7  1A400080           [159] jmp        2            ; to [162]
0BFB  64824A04           [160] self       9   8   298  ; -725453761
0BFF  62420001           [161] call       9   2   1  
0C03  64824800           [162] self       9   0   290  ; -1421644046
0C07  DD420A00           [163] getglobal  11  41       ; inRiftSequencer
0C0B  1D030900           [164] getglobal  12  36       ; EMPTY_SYMBOL
0C0F  5D430900           [165] getglobal  13  37       ; ZERO_VECTOR
0C13  9D830900           [166] getglobal  14  38       ; ZERO_ROTATION
0C17  D2030000           [167] move       15  0      
0C1B  62428003           [168] call       9   7   1  
0C1F  64024A00           [169] self       9   0   296  ; -1625438872
0C23  DDC20900           [170] getglobal  11  39       ; inRiftLocalSequencer
0C27  62828001           [171] call       9   3   2  
0C2B  9D020000           [172] getglobal  10  0        ; 1074689893
0C2F  D2028004           [173] move       11  9      
0C33  A2820001           [174] call       10  2   2  
0C37  98420000           [175] test       10      1    ; to [177] if false
0C3B  1A400080           [176] jmp        2            ; to [179]
0C3F  A482CA04           [177] self       10  9   298  ; -725453761
0C43  A2420001           [178] call       10  2   1  
0C47  9D420B00           [179] getglobal  10  45       ; 538022378
0C4B  D9420100           [180] loadk      11  5        ; 0
0C4F  A2420001           [181] call       10  2   1  
0C53  1AC0D77F           [182] jmp        -160         ; to [23]
0C57  D8000000           [183] test       3       0    ; to [185] if true
0C5B  1A400980           [184] jmp        38           ; to [223]
0C5F  A4024A00           [185] self       10  0   296  ; -1625438872
0C63  1DC30800           [186] getglobal  12  35       ; avatarLocalRiftFx
0C67  A2828001           [187] call       10  3   2  
0C6B  DD020000           [188] getglobal  11  0        ; 1074689893
0C6F  12030005           [189] move       12  10     
0C73  E2820001           [190] call       11  2   2  
0C77  D8420000           [191] test       11      1    ; to [193] if false
0C7B  1A400080           [192] jmp        2            ; to [195]
0C7F  E4824A05           [193] self       11  10  298  ; -725453761
0C83  E2420001           [194] call       11  2   1  
0C87  E4824500           [195] self       11  0   278  ; 1525877273
0C8B  E2820001           [196] call       11  2   2  
0C8F  1D030200           [197] getglobal  12  8        ; gRegion
0C93  24C34506           [198] self       12  12  279  ; -1456226250
0C97  22830001           [199] call       12  2   2  
0C9B  0E034606           [200] gettable   12  12  280  ; "postProcess"
0C9F  0C43C18C           [201] settable   12  281 261  ; "fade" 0
0CA3  5D030000           [202] getglobal  13  0        ; 1074689893
0CA7  92038005           [203] move       14  11     
0CAB  62830001           [204] call       13  2   2  
0CAF  58430000           [205] test       13      1    ; to [207] if false
0CB3  1A000180           [206] jmp        5            ; to [212]
0CB7  64C3CA05           [207] self       13  11  299  ; 1612278193
0CBB  DD030800           [208] getglobal  15  32       ; cameraColorCorrection
0CBF  62438001           [209] call       13  3   1  
0CC3  6403CB05           [210] self       13  11  300  ; 1051525123
0CC7  62430001           [211] call       13  2   1  
0CCB  64034A00           [212] self       13  0   296  ; -1625438872
0CCF  DDC30900           [213] getglobal  15  39       ; inRiftLocalSequencer
0CD3  62838001           [214] call       13  3   2  
0CD7  9D030000           [215] getglobal  14  0        ; 1074689893
0CDB  D2038006           [216] move       15  13     
0CDF  A2830001           [217] call       14  2   2  
0CE3  98430000           [218] test       14      1    ; to [220] if false
0CE7  1A000380           [219] jmp        13           ; to [233]
0CEB  A483CA06           [220] self       14  13  298  ; -725453761
0CEF  A2430001           [221] call       14  2   1  
0CF3  1A400280           [222] jmp        10           ; to [233]
0CF7  A4034A00           [223] self       14  0   296  ; -1625438872
0CFB  1D440A00           [224] getglobal  16  41       ; inRiftSequencer
0CFF  A2838001           [225] call       14  3   2  
0D03  DD030000           [226] getglobal  15  0        ; 1074689893
0D07  12040007           [227] move       16  14     
0D0B  E2830001           [228] call       15  2   2  
0D0F  D8430000           [229] test       15      1    ; to [231] if false
0D13  1A400080           [230] jmp        2            ; to [233]
0D17  E4834A07           [231] self       15  14  298  ; -725453761
0D1B  E2430001           [232] call       15  2   1  
0D1F  DD430000           [233] getglobal  15  1        ; _T
0D23  CE83C007           [234] gettable   15  15  258  ; "inRift"
0D27  CC83CB00           [235] settable   15  1   302  ; nil
0D2B  1E008000           [236] return     0   1      
                         * constants:
0D2F  2F                 sizek (47)
0D30  01                 const type 3
0D31  65770E40           const [0]: (1074689893)
0D35  04                 const type 4
0D36  03                 string size (3)
0D37  5F5400             "_T\0"
                         const [1]: "_T"
0D3A  04                 const type 4
0D3B  07                 string size (7)
0D3C  696E5269667400     "inRift\0"
                         const [2]: "inRift"
0D43  01                 const type 3
0D44  B60FEFDB           const [3]: (-605089866)
0D48  01                 const type 3
0D49  01000000           const [4]: (1)
0D4D  03                 const type 3
0D4E  00000000           const [5]: (0)
0D52  01                 const type 3
0D53  025A115A           const [6]: (1511086594)
0D57  01                 const type 3
0D58  9AF01E2D           const [7]: (757002394)
0D5C  04                 const type 4
0D5D  08                 string size (8)
0D5E  67526567696F6E00   "gRegion\0"
                         const [8]: "gRegion"
0D66  01                 const type 3
0D67  58F559A5           const [9]: (-1520831144)
0D6B  01                 const type 3
0D6C  220B1B41           const [10]: (1092291362)
0D70  04                 const type 4
0D71  18                 string size (24)
0D72  72696674456E6572+  "riftEner"
0D7A  67794761696E5065+  "gyGainPe"
0D82  725365636F6E6400   "rSecond\0"
                         const [11]: "riftEnergyGainPerSecond"
0D8A  01                 const type 3
0D8B  FFF9DE4C           const [12]: (1289681407)
0D8F  03                 const type 3
0D90  0000803F           const [13]: (0)
0D94  01                 const type 3
0D95  1FD0B58D           const [14]: (-1917464545)
0D99  01                 const type 3
0D9A  59AC7869           const [15]: (1769516121)
0D9E  01                 const type 3
0D9F  E01ECDEB           const [16]: (-338878752)
0DA3  01                 const type 3
0DA4  3CDB7317           const [17]: (393468732)
0DA8  01                 const type 3
0DA9  5C2FCDD8           const [18]: (-657641636)
0DAD  01                 const type 3
0DAE  83B7A8B8           const [19]: (-1196902525)
0DB2  01                 const type 3
0DB3  51A7A30B           const [20]: (195274577)
0DB7  01                 const type 3
0DB8  533F61B8           const [21]: (-1201586349)
0DBC  01                 const type 3
0DBD  190AF35A           const [22]: (1525877273)
0DC1  01                 const type 3
0DC2  36C033A9           const [23]: (-1456226250)
0DC6  04                 const type 4
0DC7  0C                 string size (12)
0DC8  706F737450726F63+  "postProc"
0DD0  65737300           "ess\0"
                         const [24]: "postProcess"
0DD4  04                 const type 4
0DD5  05                 string size (5)
0DD6  6661646500         "fade\0"
                         const [25]: "fade"
0DDB  03                 const type 3
0DDC  8FC2F5BD           const [26]: (-113)
0DE0  01                 const type 3
0DE1  BA36FD09           const [27]: (167589562)
0DE5  03                 const type 3
0DE6  3333333F           const [28]: (51)
0DEA  03                 const type 3
0DEB  6666863F           const [29]: (102)
0DEF  03                 const type 3
0DF0  00004040           const [30]: (0)
0DF4  01                 const type 3
0DF5  36757DCD           const [31]: (-847416010)
0DF9  04                 const type 4
0DFA  16                 string size (22)
0DFB  63616D657261436F+  "cameraCo"
0E03  6C6F72436F727265+  "lorCorre"
0E0B  6374696F6E00       "ction\0"
                         const [32]: "cameraColorCorrection"
0E11  03                 const type 3
0E12  000080BF           const [33]: (0)
0E16  01                 const type 3
0E17  F26E43AB           const [34]: (-1421644046)
0E1B  04                 const type 4
0E1C  12                 string size (18)
0E1D  6176617461724C6F+  "avatarLo"
0E25  63616C5269667446+  "calRiftF"
0E2D  7800               "x\0"
                         const [35]: "avatarLocalRiftFx"
0E2F  04                 const type 4
0E30  0D                 string size (13)
0E31  454D5054595F5359+  "EMPTY_SY"
0E39  4D424F4C00         "MBOL\0"
                         const [36]: "EMPTY_SYMBOL"
0E3E  04                 const type 4
0E3F  0C                 string size (12)
0E40  5A45524F5F564543+  "ZERO_VEC"
0E48  544F5200           "TOR\0"
                         const [37]: "ZERO_VECTOR"
0E4C  04                 const type 4
0E4D  0E                 string size (14)
0E4E  5A45524F5F524F54+  "ZERO_ROT"
0E56  4154494F4E00       "ATION\0"
                         const [38]: "ZERO_ROTATION"
0E5C  04                 const type 4
0E5D  15                 string size (21)
0E5E  696E526966744C6F+  "inRiftLo"
0E66  63616C5365717565+  "calSeque"
0E6E  6E63657200         "ncer\0"
                         const [39]: "inRiftLocalSequencer"
0E73  01                 const type 3
0E74  68C51D9F           const [40]: (-1625438872)
0E78  04                 const type 4
0E79  10                 string size (16)
0E7A  696E526966745365+  "inRiftSe"
0E82  7175656E63657200   "quencer\0"
                         const [41]: "inRiftSequencer"
0E8A  01                 const type 3
0E8B  3F74C2D4           const [42]: (-725453761)
0E8F  01                 const type 3
0E90  B1691960           const [43]: (1612278193)
0E94  01                 const type 3
0E95  0300AD3E           const [44]: (1051525123)
0E99  01                 const type 3
0E9A  EA911120           const [45]: (538022378)
0E9E  00                 const type 0
                         const [46]: nil
                         * functions:
0E9F  00                 sizep (0)
                         * lines:
0EA1  01                 sizelineinfo (236)
                         [pc] (line)
0EA2  5F                 [001] (95)
0EA3  00                 [002] (95)
0EA4  00                 [003] (95)
0EA5  00                 [004] (95)
0EA6  5F                 [005] (95)
0EA7  00                 [006] (95)
0EA8  00                 [007] (96)
0EA9  00                 [008] (96)
0EAA  5F                 [009] (96)
0EAB  00                 [010] (99)
0EAC  00                 [011] (99)
0EAD  00                 [012] (100)
0EAE  5F                 [013] (100)
0EAF  00                 [014] (100)
0EB0  00                 [015] (100)
0EB1  00                 [016] (100)
0EB2  5F                 [017] (101)
0EB3  00                 [018] (104)
0EB4  00                 [019] (104)
0EB5  00                 [020] (104)
0EB6  5F                 [021] (106)
0EB7  00                 [022] (107)
0EB8  00                 [023] (108)
0EB9  00                 [024] (108)
0EBA  60                 [025] (108)
0EBB  00                 [026] (108)
0EBC  00                 [027] (108)
0EBD  00                 [028] (108)
0EBE  60                 [029] (108)
0EBF  00                 [030] (108)
0EC0  00                 [031] (108)
0EC1  00                 [032] (108)
0EC2  60                 [033] (108)
0EC3  00                 [034] (108)
0EC4  00                 [035] (108)
0EC5  00                 [036] (109)
0EC6  63                 [037] (109)
0EC7  00                 [038] (109)
0EC8  00                 [039] (109)
0EC9  00                 [040] (109)
0ECA  63                 [041] (110)
0ECB  00                 [042] (110)
0ECC  00                 [043] (110)
0ECD  00                 [044] (110)
0ECE  64                 [045] (110)
0ECF  00                 [046] (110)
0ED0  00                 [047] (111)
0ED1  00                 [048] (111)
0ED2  64                 [049] (111)
0ED3  00                 [050] (111)
0ED4  00                 [051] (111)
0ED5  00                 [052] (113)
0ED6  64                 [053] (113)
0ED7  00                 [054] (114)
0ED8  00                 [055] (114)
0ED9  00                 [056] (114)
0EDA  64                 [057] (114)
0EDB  00                 [058] (115)
0EDC  00                 [059] (115)
0EDD  00                 [060] (115)
0EDE  64                 [061] (115)
0EDF  00                 [062] (115)
0EE0  00                 [063] (116)
0EE1  00                 [064] (116)
0EE2  65                 [065] (116)
0EE3  00                 [066] (118)
0EE4  00                 [067] (122)
0EE5  00                 [068] (122)
0EE6  68                 [069] (122)
0EE7  00                 [070] (122)
0EE8  00                 [071] (122)
0EE9  00                 [072] (122)
0EEA  68                 [073] (122)
0EEB  00                 [074] (122)
0EEC  00                 [075] (122)
0EED  00                 [076] (122)
0EEE  68                 [077] (122)
0EEF  00                 [078] (122)
0EF0  00                 [079] (122)
0EF1  00                 [080] (122)
0EF2  6A                 [081] (123)
0EF3  00                 [082] (123)
0EF4  00                 [083] (123)
0EF5  00                 [084] (123)
0EF6  6B                 [085] (127)
0EF7  00                 [086] (127)
0EF8  00                 [087] (127)
0EF9  00                 [088] (127)
0EFA  6C                 [089] (-128)
0EFB  00                 [090] (-126)
0EFC  00                 [091] (-126)
0EFD  00                 [092] (-125)
0EFE  6C                 [093] (-125)
0EFF  00                 [094] (-125)
0F00  00                 [095] (-125)
0F01  00                 [096] (-123)
0F02  6C                 [097] (-123)
0F03  00                 [098] (-122)
0F04  00                 [099] (-121)
0F05  00                 [100] (-121)
0F06  6C                 [101] (-121)
0F07  00                 [102] (-121)
0F08  00                 [103] (-121)
0F09  00                 [104] (-120)
0F0A  6C                 [105] (-120)
0F0B  00                 [106] (-120)
0F0C  00                 [107] (-120)
0F0D  00                 [108] (-120)
0F0E  6C                 [109] (-120)
0F0F  00                 [110] (-119)
0F10  00                 [111] (-119)
0F11  00                 [112] (-119)
0F12  6C                 [113] (-119)
0F13  00                 [114] (-119)
0F14  00                 [115] (-119)
0F15  00                 [116] (-116)
0F16  6C                 [117] (-116)
0F17  00                 [118] (-116)
0F18  00                 [119] (-116)
0F19  00                 [120] (-116)
0F1A  6C                 [121] (-116)
0F1B  00                 [122] (-116)
0F1C  00                 [123] (-114)
0F1D  00                 [124] (-114)
0F1E  6C                 [125] (-114)
0F1F  00                 [126] (-114)
0F20  00                 [127] (-114)
0F21  00                 [128] (-114)
0F22  6C                 [129] (-114)
0F23  00                 [130] (-113)
0F24  00                 [131] (-113)
0F25  00                 [132] (-113)
0F26  6C                 [133] (-112)
0F27  00                 [134] (-112)
0F28  00                 [135] (-112)
0F29  00                 [136] (-112)
0F2A  6C                 [137] (-112)
0F2B  00                 [138] (-111)
0F2C  00                 [139] (-111)
0F2D  00                 [140] (-110)
0F2E  6D                 [141] (-108)
0F2F  00                 [142] (-107)
0F30  00                 [143] (-107)
0F31  00                 [144] (-107)
0F32  6D                 [145] (-107)
0F33  00                 [146] (-107)
0F34  00                 [147] (-106)
0F35  00                 [148] (-106)
0F36  6D                 [149] (-106)
0F37  00                 [150] (-105)
0F38  00                 [151] (-105)
0F39  00                 [152] (-102)
0F3A  6D                 [153] (-102)
0F3B  00                 [154] (-102)
0F3C  00                 [155] (-101)
0F3D  00                 [156] (-101)
0F3E  6D                 [157] (-101)
0F3F  00                 [158] (-101)
0F40  00                 [159] (-101)
0F41  00                 [160] (-100)
0F42  6E                 [161] (-100)
0F43  00                 [162] (-97)
0F44  00                 [163] (-97)
0F45  00                 [164] (-97)
0F46  6E                 [165] (-97)
0F47  00                 [166] (-97)
0F48  00                 [167] (-97)
0F49  00                 [168] (-97)
0F4A  6E                 [169] (-96)
0F4B  00                 [170] (-96)
0F4C  00                 [171] (-96)
0F4D  00                 [172] (-95)
0F4E  6E                 [173] (-95)
0F4F  00                 [174] (-95)
0F50  00                 [175] (-95)
0F51  00                 [176] (-95)
0F52  6E                 [177] (-94)
0F53  00                 [178] (-94)
0F54  00                 [179] (-89)
0F55  00                 [180] (-89)
0F56  6E                 [181] (-89)
0F57  00                 [182] (-89)
0F58  00                 [183] (-86)
0F59  00                 [184] (-86)
0F5A  6F                 [185] (-85)
0F5B  00                 [186] (-85)
0F5C  00                 [187] (-85)
0F5D  00                 [188] (-84)
0F5E  6F                 [189] (-84)
0F5F  00                 [190] (-84)
0F60  00                 [191] (-84)
0F61  00                 [192] (-84)
0F62  6F                 [193] (-83)
0F63  00                 [194] (-83)
0F64  00                 [195] (-80)
0F65  00                 [196] (-80)
0F66  6F                 [197] (-79)
0F67  00                 [198] (-79)
0F68  00                 [199] (-79)
0F69  00                 [200] (-79)
0F6A  6F                 [201] (-78)
0F6B  00                 [202] (-77)
0F6C  00                 [203] (-77)
0F6D  00                 [204] (-77)
0F6E  71                 [205] (-77)
0F6F  00                 [206] (-77)
0F70  00                 [207] (-76)
0F71  00                 [208] (-76)
0F72  71                 [209] (-76)
0F73  00                 [210] (-75)
0F74  00                 [211] (-75)
0F75  00                 [212] (-72)
0F76  72                 [213] (-72)
0F77  00                 [214] (-72)
0F78  00                 [215] (-71)
0F79  00                 [216] (-71)
0F7A  72                 [217] (-71)
0F7B  00                 [218] (-71)
0F7C  00                 [219] (-71)
0F7D  00                 [220] (-70)
0F7E  72                 [221] (-70)
0F7F  00                 [222] (-69)
0F80  00                 [223] (-67)
0F81  00                 [224] (-67)
0F82  72                 [225] (-67)
0F83  00                 [226] (-66)
0F84  00                 [227] (-66)
0F85  00                 [228] (-66)
0F86  73                 [229] (-66)
0F87  00                 [230] (-66)
0F88  00                 [231] (-65)
0F89  00                 [232] (-65)
0F8A  73                 [233] (-61)
0F8B  00                 [234] (-61)
0F8C  00                 [235] (-61)
0F8D  00                 [236] (-60)
                         * locals:
1252  00                 sizelocvars (0)
                         * upvalues:
1253  00                 sizeupvalues (0)
                         ** end of function **

                         * lines:
1254  0F                 sizelineinfo (15)
                         [pc] (line)
1255  10                 [01] (16)
1256  00                 [02] (16)
1257  00                 [03] (16)
1258  00                 [04] (17)
1259  10                 [05] (17)
125A  00                 [06] (17)
125B  00                 [07] (92)
125C  00                 [08] (92)
125D  10                 [09] (92)
125E  00                 [10] (20)
125F  00                 [11] (-60)
1260  00                 [12] (-60)
1261  11                 [13] (-60)
1262  00                 [14] (94)
1263  00                 [15] (-60)
                         * locals:
1291  00                 sizelocvars (0)
                         * upvalues:
1292  00                 sizeupvalues (0)
                         ** end of function **

1293                     ** end of chunk **
